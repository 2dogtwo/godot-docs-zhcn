# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-21 13:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:4
msgid "Exporting for the Web"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:6
msgid "HTML5 export allows publishing games made in Godot Engine to the browser. This requires support for `WebAssembly <https://webassembly.org/>`__ and `WebGL <https://www.khronos.org/webgl/>`__ in the user's browser."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:11
msgid "Use the browser-integrated developer console, usually opened with :kbd:`F12`, to view **debug information** like JavaScript, engine, and WebGL errors."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:15
msgid "Many browsers, Chromium-based browsers specifically, will not load exported projects when **opened locally** per ``file://`` protocol. To get around this, use a local server."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:19
msgid "Python offers an easy method to start a local server. Use ``python -m SimpleHTTPServer`` with Python 2 or ``python -m http.server`` with Python 3 to serve the current working directory at ``http://localhost:8000``."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:25
msgid "WebGL 2"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:27
msgid "Until the *OpenGL ES 3* renderer is removed from Godot in favor of *Vulkan*, HTML5 export uses *WebGL 2* when the *GLES3* option selected."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:30
msgid "Usage of WebGL 2 is not recommended due to its expected removal from Godot without replacement."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:33
msgid "WebGL 2 is not supported in all browsers. **Firefox** and **Chromium** (Chrome, Opera) are the most popular supported browsers, **Safari** and **Edge** do not work. On **iOS**, all browsers are based on WebKit (i.e. Safari), so they will also not work."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:38
msgid "Godot's WebGL 2 renderer has issues with 3D and is no longer maintained."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:41
msgid "Limitations"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:43
msgid "For security and privacy reasons, many features that work effortlessly on native platforms are more complicated on the web platform. Following is a list of limitations you should be aware of when porting a Godot game to the web."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:48
msgid "Using cookies for data persistence"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:50
msgid "Users must **allow cookies** (specifically IndexedDB) if persistence of the ``user://`` file system is desired. When playing a game presented in an ``iframe``, **third-party** cookies must also be enabled. Incognito/private browsing mode also prevents persistence."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:55
msgid "The method ``OS.is_userfs_persistent()`` can be used to check if the ``user://`` file system is persistent, but can give false positives in some cases."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:60
msgid "Full screen and mouse capture"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:62
msgid "Browsers do not allow arbitrarily **entering full screen**. The same goes for **capturing the cursor**. Instead, these actions have to occur as a response to a JavaScript input event. In Godot, this means entering full screen from within a pressed input event callback such as ``_input`` or ``_unhandled_input``. Querying the :ref:`class_Input` singleton is not sufficient, the relevant input event must currently be active."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:69
msgid "For the same reason, the full screen project setting doesn't work unless the engine is started from within a valid input event handler. This requires :ref:`customization of the HTML page <doc_customizing_html5_shell>`."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:74
msgid "Audio autoplay"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:76
msgid "Chrome restricts how websites may play audio. It may be necessary for the player to click or tap or press a key to enable audio."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:79
msgid "Google offers additional information about their `Web Audio autoplay policies <https://sites.google.com/a/chromium.org/dev/audio-video/autoplay>`__."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:83
msgid ":ref:`class_HTTPClient` and :ref:`class_HTTPRequest`"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:85
msgid "The HTTP classes have several restrictions on the HTML5 platform:"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:87
msgid "Accessing or changing the ``StreamPeer`` is not possible"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:88
msgid "Threaded/Blocking mode is not available"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:89
msgid "Cannot progress more than once per frame, so polling in a loop will freeze"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:90
msgid "No chunked responses"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:91
msgid "Host verification cannot be disabled"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:92
msgid "Subject to `same-origin policy <https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy>`__"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:95
msgid "Exported ``.html`` file must not be reused"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:97
msgid "On export, several text placeholders are replaced in the **generated HTML file** specifically for the given export options. It must not be reused in further exports."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:102
msgid "Boot splash is not displayed"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:104
msgid "The default HTML page does not display the boot splash while loading. However, the image is exported as a PNG file, so :ref:`custom HTML pages <doc_customizing_html5_shell>` can display it."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:109
msgid "Unimplemented functionality"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:111
msgid "The following functionality is currently unavailable on the HTML5 platform:"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:113
msgid "Threads"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:114
msgid "GDNative"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:115
msgid "C#"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:116
msgid "Clipboard synchronisation between engine and operating system"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:117
msgid "Networking other than :ref:`class_HTTPClient` and :ref:`class_WebSocketClient`"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:119
msgid "Check the `list of open HTML5 issues on Github <https://github.com/godotengine/godot/issues?q=is:open+is:issue+label:platform:html5>`__ to see if the functionality you're interested in has an issue yet. If not, open one to communicate your interest."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:125
msgid "Serving the files"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:127
msgid "Exporting for the web generates several files to be served from a web server, including a default HTML page for presentation. A custom HTML file can be used, see :ref:`doc_customizing_html5_shell`."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:131
msgid "The generated ``.html`` file can be used as ``DirectoryIndex`` in Apache servers and can be renamed to e.g. ``index.html`` at any time, its name is never depended on by default."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:135
msgid "The HTML page draws the game at maximum size within the browser window. This way it can be inserted into an ``<iframe>`` with the game's size, as is common on most web game hosting sites."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:139
msgid "The other exported files are served as they are, next to the ``.html`` file, names unchanged. The ``.wasm`` file is a binary WebAssembly module implementing the engine. The ``.pck`` file is the Godot main pack containing your game. The ``.js`` file contains start-up code and is used by the ``.html`` file to access the engine. The ``.png`` file contains the boot splash image. It is not used in the default HTML page, but is included for :ref:`custom HTML pages <doc_customizing_html5_shell>`."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:147
msgid "The ``.pck`` file is binary, usually delivered with the MIME-type :mimetype:`application/octet-stream`. The ``.wasm`` file is delivered as :mimetype:`application/wasm`."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:151
msgid "Delivering the WebAssembly module (``.wasm``) with a MIME-type other than :mimetype:`application/wasm` can prevent some start-up optimizations."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:155
msgid "Delivering the files with server-side compression is recommended especially for the ``.pck`` and ``.wasm`` files, which are usually large in size. The WebAssembly module compresses particularly well, down to around a quarter of its original size with gzip compression."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:161
msgid "Export options"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:163
msgid "If a runnable web export template is available, a button appears between the *Stop scene* and *Play edited Scene* buttons in the editor to quickly open the game in the default browser for testing."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:167
msgid "If a path to a **Custom HTML shell** file is given, it will be used instead of the default HTML page. See :ref:`doc_customizing_html5_shell`."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:170
msgid "**Head Include** is appended into the ``<head>`` element of the generated HTML page. This allows to, for example, load webfonts and third-party JavaScript APIs, include CSS, or run JavaScript code."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:177
msgid "Calling JavaScript from script"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:179
msgid "In web builds, the ``JavaScript`` singleton is implemented. It offers a single method called ``eval`` that works similarly to the JavaScript function of the same name. It takes a string as an argument and executes it as JavaScript code. This allows interacting with the browser in ways not possible with script languages integrated into Godot."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:190
msgid "The value of the last JavaScript statement is converted to a GDScript value and returned by ``eval()`` under certain circumstances:"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:193
msgid "JavaScript ``number`` is returned as GDScript :ref:`class_float`"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:194
msgid "JavaScript ``boolean`` is returned as GDScript :ref:`class_bool`"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:195
msgid "JavaScript ``string`` is returned as GDScript :ref:`class_String`"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:196
msgid "JavaScript ``ArrayBuffer``, ``TypedArray`` and ``DataView`` are returned as GDScript :ref:`class_PoolByteArray`"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:205
msgid "Any other JavaScript value is returned as ``null``."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:207
msgid "HTML5 export templates may be built without support for the singleton. With such templates, and on platforms other than HTML5, calling ``JavaScript.eval`` will also return ``null``.  The availability of the singleton can be checked with the ``JavaScript`` :ref:`feature tag <doc_feature_tags>`::"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:220
msgid "GDScript's multi-line strings, surrounded by 3 quotes ``\"\"\"`` as in ``my_func3()`` above, are useful to keep JavaScript code readable."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_web.rst:223
msgid "The ``eval`` method also accepts a second, optional Boolean argument, which specifies whether to execute the code in the global execution context, defaulting to ``false`` to prevent polluting the global namespace::"
msgstr ""

