# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-20 12:09+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:4
msgid "Singletons (AutoLoad)"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:7
msgid "Introduction"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:9
msgid "Godot's scene system, while powerful and flexible, has a drawback: there is no method for storing information (e.g. a player's score or inventory) that is needed by more than one scene."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:13
msgid "It's possible to address this with some workarounds, but they come with their own limitations:"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:16
msgid "You can use a \"master\" scene that loads and unloads other scenes as its children. However, this means you can no longer run those scenes individually and expect them to work correctly."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:19
msgid "Information can be stored to disk in ``user://`` and then loaded by scenes that require it, but frequently saving and loading data is cumbersome and may be slow."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:23
msgid "The `Singleton Pattern <https://en.wikipedia.org/wiki/Singleton_pattern>`_ is a useful tool for solving the common use case where you need to store persistent information between scenes. In our case it is possible re-use the same scene or class for multiple singletons, so long as they have different names."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:29
msgid "Using this concept, you can create objects that:"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:31
msgid "Are always loaded, no matter which scene is currently running"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:32
msgid "Can store global variables, such as player information"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:33
msgid "Can handle switching scenes and between-scene transitions"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:34
msgid "Act like a singleton, since GDScript does not support global variables by design"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:36
msgid "Autoloading nodes and scripts caters to this need."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:39
msgid "AutoLoad"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:41
msgid "You can use AutoLoad to load a scene or a script that inherits from :ref:`Node <class_Node>`. Note: when autoloading a script, a Node will be created and the script will be attached to it. This node will be added to the root viewport before any other scenes are loaded."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:48
msgid "To autoload a scene or script, select ``Project -> Project Settings`` from the menu and switch to the \"AutoLoad\" tab."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:53
msgid "Here you can add any number of scenes or scripts. Each entry in the list requires a name, which assigned as the node's ``name`` property. The order of the entries as they added to the global scene tree can be manipulated using the up/down arrow keys."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:60
msgid "This means that any node can access a singleton named \"PlayerVariables\" with:"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:73
msgid "If the \"Enable\" column is checked (default true) then the singleton can simply be accessed directly:"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:86
msgid "Note that autoload objects (scripts and/or scenes) are accessed just like any other node in the scene tree. In fact, if you look at the running scene tree, you'll see the autoloaded nodes appear:"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:93
msgid "Custom scene switcher"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:95
msgid "This tutorial will demonstrate building a scene switcher using autoload. For basic scene switching, you can use the :ref:`SceneTree.change_scene() <class_SceneTree_change_scene>` method (see :ref:`doc_scene_tree` for details). However, if you need more complex behavior when changing scenes, this method provides more functionality."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:101
msgid "To begin, download the template from here: :download:`autoload.zip <files/autoload.zip>` and open it in Godot."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:104
msgid "The project contains two scenes: ``Scene1.tscn`` and ``Scene2.tscn``. Each scene contains a label displaying the scene name and a button with its ``pressed()`` signal connected. When you run the project, it starts in ``Scene1.tscn``. However, pressing the button does nothing."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:110
msgid "Global.gd"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:112
msgid "Switch to the \"Script\" tab and create a new script called Global.gd. Make sure it inherits from ``Node``:"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:117
msgid "The next step is to add this script to the autoLoad list. Open ``Project > Project Settings`` from the menu, switch to the \"AutoLoad\" tab and select the script by clicking the ``..`` button or typing its path: ``res://Global.gd``. Press \"Add\" to add it to the autoload list:"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:124
msgid "Now whenever we run any scene in the project, this script will always be loaded."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:126
msgid "Returning to the script, it needs to fetch the current scene in the `_ready()` function. Both the current scene (the one with the button) and ``global.gd`` are children of root, but autoloaded nodes are always first. This means that the last child of root is always the loaded scene."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:158
msgid "Now we need a function for changing the scene. This function needs to free the current scene and replace it with the requested one."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:227
msgid "As mentioned in the comments above, we need to avoid the situation of deleting the current scene while it is still being used (i.e. its code is still running), so using :ref:`Object.call_deferred() <class_Object_call_deferred>` is required at this point. The result is that the second function will run at a later time when any code from the current scene has completed."
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:233
msgid "Finally, we need to fill the empty callback functions in the two scenes:"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:253
msgid "and"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:273
msgid "Run the project and test that you can switch between scenes by pressing the button!"
msgstr ""

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:276
msgid "Note: When scenes are small, the transition is instantaneous. However, if your scenes are more complex, they may take a noticeable amount of time to appear. To learn how to handle this, see the next tutorial: :ref:`doc_background_loading`"
msgstr ""

