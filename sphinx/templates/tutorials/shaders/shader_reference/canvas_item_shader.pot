# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-21 12:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:4
msgid "CanvasItem shaders"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:6
msgid "CanvasItem shaders are used to draw all 2D elements in Godot. These include all nodes that inherit from CanvasItems, and all GUI elements."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:9
msgid "CanvasItem shaders contain less built-in variables and functionality than Spatial shaders, but they maintain the same basic structure with vertex, fragment, and light processor functions."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:14
msgid "Render modes"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:17
msgid "Render mode"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:17
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:52
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:99
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:156
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:227
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:284
msgid "Description"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:19
msgid "**blend_mix**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:19
msgid "Mix blend mode (alpha is transparency), default."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:21
msgid "**blend_add**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:21
msgid "Additive blend mode."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:23
msgid "**blend_sub**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:23
msgid "Subtractive blend mode."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:25
msgid "**blend_mul**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:25
msgid "Multiplicative blend mode."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:27
msgid "**blend_premul_alpha**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:27
msgid "Pre-multiplied alpha blend mode."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:29
msgid "**blend_disabled**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:29
msgid "Disable blending, values (including alpha) are written as-is."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:31
msgid "**unshaded**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:31
msgid "Result is just albedo. No lighting/shading happens in material."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:33
msgid "**light_only**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:33
msgid "Only draw on light pass."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:35
msgid "**skip_vertex_transform**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:35
msgid "VERTEX/NORMAL/etc need to be transformed manually in vertex function."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:39
msgid "Built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:41
msgid "Values marked as \"in\" are read-only. Values marked as \"out\" are for optional writing and will not necessarily contain sensible values. Values marked as \"inout\" provide a sensible default value, and can optionally be written to. Samplers are not subjects of writing and they are not marked."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:47
msgid "Global built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:49
msgid "Global built-ins are available everywhere, including custom functions."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:52
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:99
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:156
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:227
msgid "Built-in"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:54
msgid "in float **TIME**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:54
msgid "Global time since the engine has started, in seconds (always positive). It's subject to the rollover setting (which is 3,600 seconds by default). It's not affected by :ref:`time_scale<class_Engine_property_time_scale>` or pausing, but you can define a global shader uniform to add a \"scaled\" ``TIME`` variable if desired."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:60
msgid "in float **PI**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:60
msgid "A ``PI`` constant (``3.141592``). A ration of circle's circumference to its diameter and amount of radians in half turn."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:63
msgid "in float **TAU**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:63
msgid "A ``TAU`` constant (``6.283185``). An equivalent of ``PI * 2`` and amount of radians in full turn."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:66
msgid "in float **E**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:66
msgid "A ``E`` constant (``2.718281``). Euler's number and a base of the natural logarithm."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:71
msgid "Vertex built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:73
msgid "Vertex data (``VERTEX``) is presented in local space (pixel coordinates, relative to the Node2D's origin). If not written to, these values will not be modified and be passed through as they came."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:76
msgid "The user can disable the built-in model to world transform (world to screen and projection will still happen later) and do it manually with the following code:"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:89
msgid "Other built-ins, such as UV and COLOR, are also passed through to the fragment function if not modified."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:91
msgid "For instancing, the INSTANCE_CUSTOM variable contains the instance custom data. When using particles, this information is usually:"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:94
msgid "**x**: Rotation angle in radians."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:95
msgid "**y**: Phase during lifetime (0 to 1)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:96
msgid "**z**: Animation frame."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:101
msgid "in mat4 **MODEL_MATRIX**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:101
msgid "Local space to world space transform. World space is the coordinates you normally use in the editor."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:104
msgid "in mat4 **CANVAS_MATRIX**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:104
msgid "World space to canvas space transform. In canvas space the origin is the upper-left corner of the screen and coordinates ranging from (0, 0) to viewport size."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:109
msgid "in mat4 **SCREEN_MATRIX**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:109
msgid "Canvas space to clip space. In clip space coordinates ranging from (-1, -1) to (1, 1)."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:112
msgid "in int  **INSTANCE_ID**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:112
msgid "Instance ID for instancing."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:114
msgid "in vec4 **INSTANCE_CUSTOM**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:114
msgid "Instance custom data."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:116
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:172
msgid "in bool **AT_LIGHT_PASS**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:116
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:172
msgid "Always ``false``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:118
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:168
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:242
msgid "in vec2 **TEXTURE_PIXEL_SIZE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:118
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:168
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:242
msgid "Normalized pixel size of default 2D texture. For a Sprite2D with a texture of size 64x32px, **TEXTURE_PIXEL_SIZE** = :code:`vec2(1/64, 1/32)`"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:122
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:194
msgid "inout vec2 **VERTEX**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:122
msgid "Vertex, in local space."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:124
msgid "in int **VERTEX_ID**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:124
msgid "The index of the current vertex in the vertex buffer."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:127
msgid "inout vec2 **UV**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:127
msgid "Normalized texture coordinates. Range from 0 to 1."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:129
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:201
msgid "inout vec4 **COLOR**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:129
msgid "Color from vertex primitive."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:131
msgid "inout float **POINT_SIZE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:131
msgid "Point size for point drawing."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:135
msgid "Fragment built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:137
msgid "Certain Nodes (for example, :ref:`Sprite2Ds <class_Sprite2D>`) display a texture by default. However, when a custom fragment function is attached to these nodes, the texture lookup needs to be done manually. Godot does not provide the texture color in the ``COLOR`` built-in variable; to read the texture color for such nodes, use:"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:146
msgid "This differs from the behavior of the built-in normal map. If a normal map is attached, Godot uses it by default and assigns its value to the built-in ``NORMAL`` variable. If you are using a normal map meant for use in 3D, it will appear inverted. In order to use it in your shader, you must assign it to the ``NORMALMAP`` property. Godot will handle converting it for use in 2D and overwriting ``NORMAL``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:158
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:229
msgid "in vec4 **FRAGCOORD**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:158
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:229
msgid "Coordinate of pixel center. In screen space. ``xy`` specifies position in window, ``z`` specifies fragment depth if ``DEPTH`` is not used. Origin is lower-left."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:162
msgid "in vec2 **SCREEN_PIXEL_SIZE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:162
msgid "Size of individual pixels. Equal to inverse of resolution."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:164
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:248
msgid "in vec2 **POINT_COORD**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:164
msgid "Coordinate for drawing points."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:166
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:240
msgid "sampler2D **TEXTURE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:166
msgid "Default 2D texture."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:174
msgid "sampler2D **SPECULAR_SHININESS_TEXTURE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:174
msgid "Specular shininess texture of this object."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:176
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:266
msgid "in vec4 **SPECULAR_SHININESS**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:176
msgid "Specular shininess color, as sampled from the texture."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:178
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:238
msgid "in vec2 **UV**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:178
msgid "UV from vertex function."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:180
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:246
msgid "in vec2 **SCREEN_UV**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:180
#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:246
msgid "Screen UV coordinate for current pixel."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:182
msgid "sampler2D **SCREEN_TEXTURE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:182
msgid "Removed in Godot 4. Use a ``sampler2D`` with ``hint_screen_texture`` instead."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:185
msgid "inout vec3 **NORMAL**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:185
msgid "Normal read from **NORMAL_TEXTURE**. Writable."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:187
msgid "sampler2D **NORMAL_TEXTURE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:187
msgid "Default 2D normal texture."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:189
msgid "out vec3 **NORMAL_MAP**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:189
msgid "Configures normal maps meant for 3D for use in 2D. If used, overrides **NORMAL**."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:192
msgid "out float **NORMAL_MAP_DEPTH**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:192
msgid "Normalmap depth for scaling."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:194
msgid "Pixel position in screen space."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:196
msgid "inout vec2 **SHADOW_VERTEX**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:196
msgid "Same as ``VERTEX`` but can be written to alter shadows."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:198
msgid "inout vec3 **LIGHT_VERTEX**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:198
msgid "Same as ``VERTEX`` but can be written to alter lighting. Z component represents height."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:201
msgid "Color from vertex function and output fragment color. If unused, will be set to **TEXTURE** color."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:206
msgid "Light built-ins"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:208
msgid "Light processor functions work differently in Godot 4.x than they did in Godot 3.x. In Godot 4.x all lighting is done during the regular draw pass. In other words, Godot no longer draws the object again for each light."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:212
msgid "Use render_mode ``unshaded`` if you do not want the light processor function to run. Use render_mode ``light_only`` if you only want to see the impact of lighting on an object; this can be useful when you only want the object visible where it is covered by light."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:217
msgid "Below is an example of a light shader that takes a CanvasItem's normal map into account:"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:233
msgid "in vec3 **NORMAL**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:233
msgid "Input Normal."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:235
msgid "in vec4 **COLOR**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:235
msgid "Input Color. This is the output of the fragment function with final modulation applied."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:238
msgid "UV from vertex function, equivalent to the UV in the fragment function."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:240
msgid "Current texture in use for CanvasItem."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:248
msgid "UV for Point Sprite."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:250
msgid "in vec4 **LIGHT_COLOR**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:250
msgid "Color of Light."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:252
msgid "in float **LIGHT_ENERGY**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:252
msgid "Energy multiplier of Light."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:254
msgid "in vec3 **LIGHT_POSITION**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:254
msgid "Position of Light in screen space. If using a ``DirectionalLight2D`` this is always ``vec3(0,0,0)``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:257
msgid "in vec3 **LIGHT_DIRECTION**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:257
msgid "Direction of Light in screen space."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:259
msgid "in bool **LIGHT_IS_DIRECTIONAL**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:259
msgid "``true`` if this pass is a ``DirectionalLight2D``."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:261
msgid "in vec3 **LIGHT_VERTEX**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:261
msgid "Pixel position, in screen space as modified in the fragment function."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:263
msgid "inout vec4 **LIGHT**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:263
msgid "Value from the Light texture and output color. Can be modified. If not used, the light function is ignored."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:266
msgid "Specular shininess, as set in the object's texture."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:268
msgid "out vec4 **SHADOW_MODULATE**"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:268
msgid "Multiply shadows cast at this point by this color."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:272
msgid "SDF functions"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:274
msgid "There are a few additional functions implemented to sample an automatically generated Signed Distance Field texture. These functions available for Fragment and Light functions of CanvasItem shaders."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:278
msgid "The signed distance field is generated from :ref:`class_LightOccluder2D` nodes present in the scene with the **SDF Collision** property enabled (which is the default). See the :ref:`2D lights and shadows <doc_2d_lights_and_shadows_setting_up_shadows>` documentation for more information."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:284
msgid "Function"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:286
msgid "float **texture_sdf** (vec2 sdf_pos)"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:286
msgid "Performs an SDF texture lookup."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:288
msgid "vec2 **texture_sdf_normal** (vec2 sdf_pos)"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:288
msgid "Performs an SDF normal texture lookup."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:290
msgid "vec2 **sdf_to_screen_uv** (vec2 sdf_pos)"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:290
msgid "Converts a SDF to screen UV."
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:292
msgid "vec2 **screen_uv_to_sdf** (vec2 uv)"
msgstr ""

#: ../../docs/tutorials/shaders/shader_reference/canvas_item_shader.rst:292
msgid "Converts screen UV to a SDF."
msgstr ""

#: ../../docs/<rst_epilog>:0
msgid "Translation status"
msgstr ""
