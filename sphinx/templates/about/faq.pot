# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-04-19 09:05+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/about/faq.rst:4
msgid "Frequently asked questions"
msgstr ""

#: ../../docs/about/faq.rst:7
msgid "What can I do with Godot? How much does it cost? What are the license terms?"
msgstr ""

#: ../../docs/about/faq.rst:9
msgid "Godot is Free/Libre Open Source Software available under the `OSI-approved <https://opensource.org/licenses/MIT>`_ MIT license."
msgstr ""

#: ../../docs/about/faq.rst:11
msgid "This means it is free as in \"free speech\" as well as in \"free beer\"."
msgstr ""

#: ../../docs/about/faq.rst:13
msgid "In short:"
msgstr ""

#: ../../docs/about/faq.rst:15
msgid "There are no usage restrictions on Godot"
msgstr ""

#: ../../docs/about/faq.rst:16
msgid "This means you can use it for any game or application, commercially or non-commercially, in any industry"
msgstr ""

#: ../../docs/about/faq.rst:17
msgid "You can modify, (re)distribute and remix Godot to your heart's content"
msgstr ""

#: ../../docs/about/faq.rst:19
msgid "For more, see `here <https://tldrlegal.com/license/mit-license>`_ or ask your lawyer of choice."
msgstr ""

#: ../../docs/about/faq.rst:21
msgid "All the contents of the documentation are under the permissive Creative Commons Attribution 3.0 (`CC-BY 3.0 <https://creativecommons.org/licenses/by/3.0/>`_) license, with attribution to \"Juan Linietsky, Ariel Manzur and the Godot Engine community\"."
msgstr ""

#: ../../docs/about/faq.rst:25
msgid "Logos and icons are generally under the same Creative Commons license. Note that some third-party libraries included with Godot's source code may have different licenses."
msgstr ""

#: ../../docs/about/faq.rst:28
msgid "For full details, look at the `COPYRIGHT.txt <https://github.com/godotengine/godot/blob/master/COPYRIGHT.txt>`_ as well as the `LICENSE.txt <https://github.com/godotengine/godot/blob/master/LICENSE.txt>`_ and `LOGO_LICENSE.txt <https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_ files in the Godot repository."
msgstr ""

#: ../../docs/about/faq.rst:31
msgid "Also see `the license page on the Godot website <https://godotengine.org/license>`_."
msgstr ""

#: ../../docs/about/faq.rst:34
msgid "Which platforms are supported by Godot?"
msgstr ""

#: ../../docs/about/faq.rst:36
msgid "**For the editor:**"
msgstr ""

#: ../../docs/about/faq.rst:38
msgid "Windows"
msgstr ""

#: ../../docs/about/faq.rst:39
#: ../../docs/about/faq.rst:45
msgid "Mac OS X"
msgstr ""

#: ../../docs/about/faq.rst:40
#: ../../docs/about/faq.rst:46
msgid "X11 (Linux, \\*BSD)"
msgstr ""

#: ../../docs/about/faq.rst:42
msgid "**For exporting your games:**"
msgstr ""

#: ../../docs/about/faq.rst:44
msgid "Windows (and UWP)"
msgstr ""

#: ../../docs/about/faq.rst:47
msgid "Android"
msgstr ""

#: ../../docs/about/faq.rst:48
msgid "iOS"
msgstr ""

#: ../../docs/about/faq.rst:49
msgid "Web"
msgstr ""

#: ../../docs/about/faq.rst:51
msgid "Both 32 and 64 bit binaries are supported where it makes sense, with 64 being the default."
msgstr ""

#: ../../docs/about/faq.rst:53
msgid "Some users also report building and using Godot successfully on ARM-based system with Linux, like the Raspberry Pi. There is also some unofficial thirdparty work being done on building for some consoles. None of this is included in the default build scripts or export templates, however."
msgstr ""

#: ../../docs/about/faq.rst:57
msgid "For more on this, see the sections on :ref:`exporting <toc-learn-workflow-export>` and :ref:`compiling Godot yourself <toc-devel-compiling>`."
msgstr ""

#: ../../docs/about/faq.rst:60
msgid "Which languages are supported in Godot?"
msgstr ""

#: ../../docs/about/faq.rst:62
msgid "The officially supported languages for Godot are GDScript, Visual Scripting, C# and C++. See the subcategories for each language in the :ref:`scripting <toc-learn-scripting>` section."
msgstr ""

#: ../../docs/about/faq.rst:65
msgid "Note that C# and Visual Scripting support is comparatively young and GDScript still has some advantages as outlined below."
msgstr ""

#: ../../docs/about/faq.rst:68
msgid "Support for new languages can be added by third parties using the GDNative / NativeScript / PluginScript facilities. (See question about plugins below.)"
msgstr ""

#: ../../docs/about/faq.rst:71
msgid "Work is currently underway, for example, on unofficial bindings for Godot to `Python <https://github.com/touilleMan/godot-python>`_ and `Nim <https://github.com/pragmagic/godot-nim>`_."
msgstr ""

#: ../../docs/about/faq.rst:75
msgid "GDScript? Why use a custom scripting language instead of my language of choice?"
msgstr ""

#: ../../docs/about/faq.rst:77
msgid "The short answer is that we think the additional complexity both on your side (when first learning Godot and GDScript) as well as our side (maintenance) is worth the more integrated and seamless experience over attracting additional users with more familiar programming languages that result in a worse experience. We understand if you would rather use another language in Godot (see list of supported options above), but we strongly encourage you to try it and see the benefits for yourself."
msgstr ""

#: ../../docs/about/faq.rst:85
msgid "GDScript is designed to integrate from the ground to the way Godot works, more than any other language, and is very simple and easy to learn. Takes at most a day or two to get comfortable and it's very easy to see the benefits once you do. Please do the effort to learn GDScript, you will not regret it."
msgstr ""

#: ../../docs/about/faq.rst:91
msgid "Godot C++ API is also efficient and easy to use (the entire Godot editor is made with this API), and an excellent tool to optimize parts of a project, but trying to use it instead of GDScript for an entire game is, in most cases, a waste of time."
msgstr ""

#: ../../docs/about/faq.rst:96
msgid "Yes, for more than a decade we tried in the past integrating several VMs (and even shipped games using them), such as Python, Squirrel and Lua (in fact we authored tolua++ in the past, one of the most popular C++ binders). None of them worked as well as GDScript does now."
msgstr ""

#: ../../docs/about/faq.rst:101
msgid "More information about getting comfortable with GDScript or dynamically typed languages can be found in the :ref:`doc_gdscript_more_efficiently` tutorial."
msgstr ""

#: ../../docs/about/faq.rst:105
msgid "For the more technically versed, proceed to the next item."
msgstr ""

#: ../../docs/about/faq.rst:108
msgid "I don't believe you. What are the technical reasons for the item above?"
msgstr ""

#: ../../docs/about/faq.rst:110
msgid "The main reasons are:"
msgstr ""

#: ../../docs/about/faq.rst:112
msgid "No good thread support in most script VMs, and Godot uses threads (Lua, Python, Squirrel, JS, AS, etc.)."
msgstr ""

#: ../../docs/about/faq.rst:114
msgid "No good class extending support in most script VMs, and adapting to the way Godot works is highly inefficient (Lua, Python, JS)."
msgstr ""

#: ../../docs/about/faq.rst:116
msgid "Horrible interface for binding to C++, results in large amount of code, bugs, bottlenecks and general inefficiency (Lua, Python, Squirrel, JS, etc.)"
msgstr ""

#: ../../docs/about/faq.rst:119
msgid "No native vector types (vector3, matrix4, etc.), resulting in highly reduced performance when using custom types (Lua, Python, Squirrel, JS, AS, etc.)."
msgstr ""

#: ../../docs/about/faq.rst:122
msgid "Garbage collector results in stalls or unnecessarily large memory usage (Lua, Python, JS, AS, etc.)."
msgstr ""

#: ../../docs/about/faq.rst:124
msgid "Difficulty to integrate with the code editor for providing code completion, live editing, etc. (all of them). This is very well supported by GDScript."
msgstr ""

#: ../../docs/about/faq.rst:128
msgid "GDScript was designed to solve the issues above, and performs very well in all the above scenarios. Please learn GDScript and enjoy a very smooth integration of scripting with the game engine (yes, it's a rare but very enjoyable situation when things just work). It's worth it, give it a try!"
msgstr ""

#: ../../docs/about/faq.rst:135
msgid "I want to extend Godot. What are my options for creating plugins?"
msgstr ""

#: ../../docs/about/faq.rst:137
msgid "For creating Godot Editor plugins look at :ref:`EditorPlugins <doc_making_plugins>` and tool scripts."
msgstr ""

#: ../../docs/about/faq.rst:139
msgid "Additional languages could be added via PluginScript or the more low-level NativeScript."
msgstr ""

#: ../../docs/about/faq.rst:141
msgid "If you want to add a certain native library, your best bet is GDNative and custom C++ modules."
msgstr ""

#: ../../docs/about/faq.rst:143
msgid "Also see the official blog posts on these topics:"
msgstr ""

#: ../../docs/about/faq.rst:145
msgid "`A look at the GDNative architecture <https://godotengine.org/article/look-gdnative-architecture>`_"
msgstr ""

#: ../../docs/about/faq.rst:146
msgid "`GDNative is here! <https://godotengine.org/article/dlscript-here>`_"
msgstr ""

#: ../../docs/about/faq.rst:148
msgid "You can also take a look at the GDScript implementation, the Godot modules as well as the `unofficial Python support <https://github.com/touilleMan/godot-python>`_ for Godot."
msgstr ""

#: ../../docs/about/faq.rst:152
msgid "Why is FBX not supported for import?"
msgstr ""

#: ../../docs/about/faq.rst:154
msgid "FBX SDK has a very `restrictive license <http://www.blender.org/bf/Autodesk_FBX_License.rtf>`_, that is incompatible with the `open license <http://opensource.org/licenses/MIT>`_ provided by Godot."
msgstr ""

#: ../../docs/about/faq.rst:158
msgid "That said, Godot's Collada support is really good, please use the `OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/OpenCOLLADA-Tools>`_ exporter for maximum compatibility if you are using Maya or 3DS Max. If you are using Blender, take a look at our own `Better Collada Exporter <https://godotengine.org/download>`_."
msgstr ""

#: ../../docs/about/faq.rst:164
msgid "Also, glTF support was added in Godot 3.0."
msgstr ""

#: ../../docs/about/faq.rst:166
msgid "FBX support could still be provided by third parties as a plugin. (See Plugins question above.)"
msgstr ""

#: ../../docs/about/faq.rst:169
msgid "Will [Insert closed SDK such as PhysX, GameWorks, etc.] be supported in Godot?"
msgstr ""

#: ../../docs/about/faq.rst:171
msgid "No, the aim of Godot is to create a complete open source engine licensed under MIT, so you have complete control over every single piece of it. Open versions of functionality or features from such SDKs may be eventually added though."
msgstr ""

#: ../../docs/about/faq.rst:176
msgid "That said, because it is open source, and modular, nothing prevents you or anyone else interested into adding those libraries as a module and ship your game using them, as either open or closed source. Everything is allowed."
msgstr ""

#: ../../docs/about/faq.rst:181
msgid "To see how support for your SDK of choice could still be provided, look at the Plugins question above."
msgstr ""

#: ../../docs/about/faq.rst:184
msgid "How should assets be created to handle multiple resolutions and aspect ratios?"
msgstr ""

#: ../../docs/about/faq.rst:186
msgid "This question pops up often and it's probably thanks to the misunderstanding created by Apple when they originally doubled the resolution of their devices. It made people think that having the same assets in different resolutions was a good idea, so many continued towards that path. That originally worked to a point and only for Apple devices, but then several Android and Apple devices with different resolutions and aspect ratios were created, with a very wide range of sizes and DPIs."
msgstr ""

#: ../../docs/about/faq.rst:195
msgid "The most common and proper way to achieve this is to, instead, use a single base resolution for the game and only handle different screen aspects. This is mostly needed for 2D, as in 3D it's just a matter of Camera XFov or YFov."
msgstr ""

#: ../../docs/about/faq.rst:200
msgid "Choose a single base resolution for your game. Even if there are devices that go up to 2K and devices that go down to 400p, regular hardware scaling in your device will take care of this at little or no performance cost. Most common choices are either near 1080p (1920x1080) or 720p (1280x720). Keep in mind the higher the resolution, the larger your assets, the more memory they will take and the longer the time it will take for loading."
msgstr ""

#: ../../docs/about/faq.rst:208
msgid "Use the stretch options in Godot, 2D stretching with keeping aspect works best. Check the :ref:`doc_multiple_resolutions` tutorial on how to achieve this."
msgstr ""

#: ../../docs/about/faq.rst:212
msgid "Determine a minimum resolution and then decide if you want your game to stretch vertically or horizontally for different aspect ratios, or whether there is a minimum one and you want black bars to appear instead. This is also explained in the previous step."
msgstr ""

#: ../../docs/about/faq.rst:217
msgid "For user interfaces, use the :ref:`anchoring <doc_size_and_anchors>` to determine where controls should stay and move. If UIs are more complex, consider learning about Containers."
msgstr ""

#: ../../docs/about/faq.rst:221
msgid "And that's it! Your game should work in multiple resolutions."
msgstr ""

#: ../../docs/about/faq.rst:223
msgid "If there really is a desire to make your game also work on ancient devices with tiny screens (less than 300 pixels in width), you can use the export option to shrink images, and set that build to be used for certain screen sizes in the App Store or Google Play."
msgstr ""

#: ../../docs/about/faq.rst:229
msgid "I have a great idea that will make Godot better. What do you think?"
msgstr ""

#: ../../docs/about/faq.rst:231
msgid "Your idea will most certainly be ignored. Examples of stuff that is ignored by the developers:"
msgstr ""

#: ../../docs/about/faq.rst:234
msgid "Let's do this because it will make Godot better"
msgstr ""

#: ../../docs/about/faq.rst:235
msgid "Let's do this in Godot because another game engine does it"
msgstr ""

#: ../../docs/about/faq.rst:236
msgid "Let's remove this because I think it's not needed"
msgstr ""

#: ../../docs/about/faq.rst:237
msgid "Let's remove clutter and bloat and make Godot look nicer"
msgstr ""

#: ../../docs/about/faq.rst:238
msgid "Let's add an alternative workflow for people who prefer it"
msgstr ""

#: ../../docs/about/faq.rst:240
msgid "Godot developers are always willing to talk to you and listen to your feedback very openly, to an extent rarely seen in open source projects, but they will care mostly about real issues you have while using Godot, not ideas solely based on personal belief. Developers are interested in (for example):"
msgstr ""

#: ../../docs/about/faq.rst:246
msgid "Your experience using the software and the problems you have (we care about this much more than ideas on how to improve it)."
msgstr ""

#: ../../docs/about/faq.rst:248
msgid "The features you would like to see implemented because you need them for your project."
msgstr ""

#: ../../docs/about/faq.rst:250
msgid "The concepts that were difficult to understand in order to learn the software."
msgstr ""

#: ../../docs/about/faq.rst:252
msgid "The parts of your workflow you would like to see optimized."
msgstr ""

#: ../../docs/about/faq.rst:253
msgid "Parts where you missed clear tutorials or where the documentation wasn't up to par."
msgstr ""

#: ../../docs/about/faq.rst:255
msgid "Once one of the above points is stated, we can work together on a solution and this is where your ideas and suggestions are most valuable and welcome, they need to be in context of a real issue."
msgstr ""

#: ../../docs/about/faq.rst:259
msgid "As such, please don't feel that your ideas for Godot are unwelcome. Instead, try to reformulate them as a problem first, so developers and the community have a base ground to discuss first."
msgstr ""

#: ../../docs/about/faq.rst:263
msgid "Examples of how NOT to state problems generally and vaguely are:"
msgstr ""

#: ../../docs/about/faq.rst:265
msgid "Certain feature is ugly"
msgstr ""

#: ../../docs/about/faq.rst:266
msgid "Certain workflow is slow"
msgstr ""

#: ../../docs/about/faq.rst:267
msgid "Certain feature needs optimization"
msgstr ""

#: ../../docs/about/faq.rst:268
msgid "Certain aspect of the UI looks cluttered"
msgstr ""

#: ../../docs/about/faq.rst:270
msgid "Associating something with an adjective will not get you much attention and developers will most likely not understand you. Instead, try to reformulate your problem as a story such as:"
msgstr ""

#: ../../docs/about/faq.rst:274
msgid "I try to move objects around but always end up picking the wrong one"
msgstr ""

#: ../../docs/about/faq.rst:275
msgid "I tried to make a game like Battlefield but I'm not managing to understand how to get lighting to look the same."
msgstr ""

#: ../../docs/about/faq.rst:277
msgid "I always forget which script I was editing, and it takes me too many steps to go back to it."
msgstr ""

#: ../../docs/about/faq.rst:280
msgid "This will allow you to convey what you are thinking much better and set a common ground for discussion. Please try your best to state your problems as stories to the developers and the community, before discussing any idea. Be specific and concrete."
msgstr ""

#: ../../docs/about/faq.rst:285
msgid "Bonus points for bringing screenshots, concrete numbers, test cases or example projects (if applicable)."
msgstr ""

#: ../../docs/about/faq.rst:288
msgid "How can I support Godot development or contribute?"
msgstr ""

#: ../../docs/about/faq.rst:290
msgid "See :ref:`doc_ways_to_contribute`."
msgstr ""

#: ../../docs/about/faq.rst:293
msgid "Who is working on Godot? How can I contact you?"
msgstr ""

#: ../../docs/about/faq.rst:295
msgid "See the corresponding page on the `Godot website <https://godotengine.org/contact>`_."
msgstr ""

