# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-06 14:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/community/contributing/code_style_guidelines.rst:4
msgid "Code style guidelines"
msgstr "Lignes directrices pour le style du code"

#: ../../docs/community/contributing/code_style_guidelines.rst:8
msgid ""
"When contributing to Godot's source code, you will be expected to follow the "
"style guidelines outlined below. Some of them are checked via the Continuous "
"Integration process and reviewers will ask you to fix potential issues, so "
"best setup your system as outlined below to ensure all your commits follow "
"the guidelines."
msgstr ""
"Lorsque vous contribuez au code source de Godot, vous devez suivre les "
"directives de style décrites ci-dessous. Certaines d'entre elles sont "
"vérifiées par le biais du processus d'intégration continue et les "
"examinateurs vous demanderont de résoudre les problèmes potentiels. Il est "
"donc préférable de configurer votre système comme indiqué ci-dessous pour "
"vous assurer que tous vos commits respectent les directives."

#: ../../docs/community/contributing/code_style_guidelines.rst:15
msgid "C++ and Objective-C"
msgstr "C++ et Objective-C"

#: ../../docs/community/contributing/code_style_guidelines.rst:17
msgid ""
"There are no written guidelines, but the code style agreed upon by the "
"developers is enforced via the `clang-format <http://clang.llvm.org/docs/"
"ClangFormat.html>`__ code beautifier, which takes care for you of all our "
"conventions. To name a few:"
msgstr ""
"Il n'y a pas de directives écrites, mais le style de code convenu par les "
"développeurs est appliqué via le metteur en forme de code `clang-format "
"<http://clang.llvm.org/docs/ClangFormat.html>`__, qui s'occupe pour vous de "
"toutes nos conventions. Pour n'en citer que quelques-unes :"

#: ../../docs/community/contributing/code_style_guidelines.rst:22
msgid ""
"Indentation and alignment are both tab based (respectively one and two tabs)"
msgstr ""
"L'indentation et l'alignement sont tous les deux basés sur des tabulations "
"(respectivement une et deux tabulations)"

#: ../../docs/community/contributing/code_style_guidelines.rst:23
msgid "One space around math and assignments operators as well as after commas"
msgstr ""
"Un espace autour des opérateurs mathématiques et d'affectation, ainsi "
"qu'après les virgules"

#: ../../docs/community/contributing/code_style_guidelines.rst:24
msgid ""
"Pointer and reference operators are affixed to the variable identifier, not "
"to the type name"
msgstr ""
"Les opérateurs de pointeurs et de références sont attachés à l'identifiant "
"de la variable, pas au nom du type"

#: ../../docs/community/contributing/code_style_guidelines.rst:26
msgid "See further down regarding header includes"
msgstr "Voir plus loin concernant les inclusions en en-tête"

#: ../../docs/community/contributing/code_style_guidelines.rst:28
msgid ""
"The rules used by clang-format are outlined in the `.clang-format <https://"
"github.com/godotengine/godot/blob/master/.clang-format>`__ file of the Godot "
"repository."
msgstr ""
"Les règles utilisées par clang-format sont décrites dans le fichier `.clang-"
"format <https://github.com/godotengine/godot/blob/master/.clang-format>`__ "
"du dépôt de Godot."

#: ../../docs/community/contributing/code_style_guidelines.rst:32
msgid ""
"As long as you ensure that your style matches the surrounding code and that "
"you not introducing trailing whitespace or space-based indentation, you "
"should be fine. If you plan to contribute regularly however, we strongly "
"advise that you setup clang-format locally to check and automatically fix "
"all your commits."
msgstr ""
"Tant que vous veillez à ce que votre style corresponde au code environnant "
"et que vous n'introduisez pas d'espaces de fin de ligne ou d'indentation "
"basée sur des espaces, tout devrait bien se passer. Toutefois, si vous avez "
"l'intention de participer régulièrement, nous vous conseillons vivement de "
"configurer clang-format localement pour vérifier et corriger automatiquement "
"tous vos commits."

#: ../../docs/community/contributing/code_style_guidelines.rst:37
msgid ""
"Godot's code style should *not* be applied to third-party code, i.e. that is "
"included in Godot's source tree but was not written specifically for our "
"project. Such code usually come from different upstream projects with their "
"own style guides (or lack thereof), and don't want to introduce differences "
"that would make syncing with upstream repositories harder."
msgstr ""
"Le style de code de Godot ne doit *pas* être appliqué à du code tiers, c'est-"
"à-dire qui est inclus dans l'arbre des sources de Godot mais qui n'a pas été "
"écrit spécifiquement pour notre projet. Un tel code provient généralement de "
"différents projets en amont avec leurs propres guides de style (ou leur "
"absence), et ne veut pas introduire de différences qui rendraient la "
"synchronisation avec les dépôts en amont plus difficile."

#: ../../docs/community/contributing/code_style_guidelines.rst:44
msgid ""
"Third-party code is usually included in the ``thirdparty/`` folder and can "
"thus easily be excluded from formatting scripts. For the rare cases where a "
"third-party code snippet needs to be included directly within a Godot file, "
"you can use ``/* clang-format off */`` and ``/* clang-format on */`` to tell "
"clang-format to ignore a chunk of code."
msgstr ""
"Le code tiers est généralement inclus dans le dossier ``thirdparty/`` et "
"peut donc être facilement exclu des scripts de formatage. Dans les rares cas "
"où un extrait de code tiers doit être inclus directement dans un fichier "
"Godot, vous pouvez utiliser ``/* clang-format off */`` et ``/* clang-format "
"on */`` pour indiquer au \"clang-format\" d'ignorer une partie du code."

#: ../../docs/community/contributing/code_style_guidelines.rst:52
msgid "Using clang-format locally"
msgstr "Utiliser clang-format localement"

#: ../../docs/community/contributing/code_style_guidelines.rst:54
msgid ""
"First of all, you will need to install clang-format. As of now, you need to "
"use **clang-format 8.x** to be compatible with Godot's format. Later "
"versions might be suitable, but previous versions had bugs that will cause "
"formatting changes to the current code base."
msgstr ""
"Tout d'abord, vous devrez installer clang-format. Pour le moment, vous devez "
"utiliser **clang-format 8.x** pour être compatible avec le format de Godot. "
"Les versions ultérieures pourraient convenir, mais les versions précédentes "
"comportaient des bugs qui entraîneront des modifications dans le formatage "
"du code actuel."

#: ../../docs/community/contributing/code_style_guidelines.rst:60
msgid "Installation"
msgstr "Installation"

#: ../../docs/community/contributing/code_style_guidelines.rst:62
msgid "Here's how to install clang-format:"
msgstr "Voici comment installer clang-format :"

#: ../../docs/community/contributing/code_style_guidelines.rst:64
msgid ""
"Linux: It will usually be available out-of-the-box with the clang toolchain "
"packaged by your distribution. If your distro version is not the required "
"one, you can download a pre-compiled version from the `LLVM website <http://"
"releases.llvm.org/download.html>`__, or if you are on a Debian derivative, "
"use the `upstream repos <http://apt.llvm.org/>`__."
msgstr ""
"Linux : Il sera généralement disponible prêt à l'emploi avec la chaîne "
"d'outils de clang empaquetée par votre distribution. Si la version de votre "
"distribution n'est pas celle requise, vous pouvez télécharger une version "
"pré-compilée sur le `site web de la LLVM <http://releases.llvm.org/download."
"html>`__, ou si vous êtes sur un dérivé de Debian, utilisez les `dépôts "
"upstream <http://apt.llvm.org/>`__."

#: ../../docs/community/contributing/code_style_guidelines.rst:69
msgid ""
"macOS and Windows: You can download precompiled binaries from the `LLVM "
"website <http://releases.llvm.org/download.html>`__. You may need to add the "
"path to the binary's folder to your system's ``PATH`` environment variable "
"to be able to call ``clang-format`` out of the box."
msgstr ""
"macOS et Windows : Vous pouvez télécharger les binaires pré-compilées depuis "
"le `site web de LLVM <http://releases.llvm.org/download.html>`__. Vous "
"devrez peut-être ajouter le chemin du répertoire des binaires à votre "
"variable d'environnement ``PATH`` pour pouvoir appeler ``clang-format`` "
"depuis n'importe quel endroit."

#: ../../docs/community/contributing/code_style_guidelines.rst:74
msgid ""
"You then have different possibilities to apply clang-format to your changes:"
msgstr ""
"Vous avez alors différentes possibilités pour appliquer le clang-format à "
"vos modifications :"

#: ../../docs/community/contributing/code_style_guidelines.rst:77
msgid "Manual usage"
msgstr "Utilisation manuelle"

#: ../../docs/community/contributing/code_style_guidelines.rst:79
msgid ""
"You can apply clang-format manually one or more files with the following "
"command:"
msgstr ""
"Vous pouvez appliquer manuellement clang-format à un ou plusieurs fichiers "
"avec la commande suivante :"

#: ../../docs/community/contributing/code_style_guidelines.rst:86
msgid ""
"``-i`` means that the changes should be written directly to the file (by "
"default clang-format would only output the fixed version to the terminal)."
msgstr ""
"``-i`` signifie que les modifications doivent être écrites directement dans "
"le fichier (par défaut, clang-format n'affichera la version corrigée que "
"dans le terminal)."

#: ../../docs/community/contributing/code_style_guidelines.rst:88
msgid ""
"The path can point to several files, either one after the other or using "
"wildcards like in a typical Unix shell. Be careful when globbing so that you "
"don't run clang-format on compiled objects (.o and .a files) that are in "
"Godot's tree. So better use ``core/*.{cpp,h}`` than ``core/*``."
msgstr ""
"Le chemin peut pointer vers plusieurs fichiers, soit l'un après l'autre, "
"soit en utilisant des * comme dans un shell Unix typique. Faites attention "
"lors de l'utilisation des * afin de ne pas utiliser le format clang sur des "
"objets compilés (fichiers .o et .a) qui se trouvent dans l'arbre de Godot. "
"Il vaut donc mieux utiliser ``core/*.{cpp,h}`` que ``core/*``."

#: ../../docs/community/contributing/code_style_guidelines.rst:94
msgid "Pre-commit hook"
msgstr "Crochet de pré commit"

#: ../../docs/community/contributing/code_style_guidelines.rst:96
msgid ""
"For ease of use, we provide a pre-commit hook for Git that will run clang-"
"format automatically on all your commits to check them, and let you apply "
"its changes in the final commit."
msgstr ""
"Pour faciliter l'utilisation, nous fournissons un crochet de pré-commission "
"pour Git qui s'exécutera automatiquement au format clang sur tous vos "
"commits pour les vérifier, et vous permettra d'appliquer ses changements "
"dans le commit final."

#: ../../docs/community/contributing/code_style_guidelines.rst:100
msgid ""
"This \"hook\" is a script which can be found in ``misc/hooks``, refer to "
"that folder's README.md for installation instructions."
msgstr ""
"Ce \"crochet\" est un script qui peut être trouvé dans ``misc/hooks``, "
"reportez-vous au fichier README.md de ce dossier pour les instructions "
"d'installation."

#: ../../docs/community/contributing/code_style_guidelines.rst:103
msgid ""
"If your clang-format is not in the ``PATH``, you may have to edit the ``pre-"
"commit-clang-format`` to point to the correct binary for it to work. The "
"hook was tested on Linux and macOS, but should also work in the Git Shell on "
"Windows."
msgstr ""
"Si le format de votre clang n'est pas dans le ``PATH``, vous devrez peut-"
"être modifier le ``pre-commit-clang-format`` pour qu'il pointe vers le "
"binaire correct et qu'il fonctionne. Le crochet a été testé sous Linux et "
"macOS, mais devrait également fonctionner dans le Git Shell sous Windows."

#: ../../docs/community/contributing/code_style_guidelines.rst:109
msgid "IDE plugin"
msgstr "Plugin IDE"

#: ../../docs/community/contributing/code_style_guidelines.rst:111
msgid ""
"Most IDEs or code editors have beautifier plugins that can be configured to "
"run clang-format automatically, for example each time you save a file."
msgstr ""
"La plupart des IDE ou des éditeurs de code disposent de plugins "
"d'embellissement qui peuvent être configurés pour exécuter automatiquement "
"clang, par exemple chaque fois que vous enregistrez un fichier."

#: ../../docs/community/contributing/code_style_guidelines.rst:114
msgid "Here is a non-exhaustive list of beautifier plugins for some IDEs:"
msgstr ""
"Voici une liste non exhaustive de plugins d'embellissement pour quelques "
"IDE :"

#: ../../docs/community/contributing/code_style_guidelines.rst:116
msgid ""
"Qt Creator: `Beautifier plugin <http://doc.qt.io/qtcreator/creator-"
"beautifier.html>`__"
msgstr ""
"Qt Creator : `plugin d'embellissement <http://doc.qt.io/qtcreator/creator-"
"beautifier.html>`__"

#: ../../docs/community/contributing/code_style_guidelines.rst:117
msgid ""
"Visual Studio Code: `Clang-Format <https://marketplace.visualstudio.com/"
"items?itemName=xaver.clang-format>`__"
msgstr ""
"Visual Studio Code : `Clang-Format <https://marketplace.visualstudio.com/"
"items?itemName=xaver.clang-format>`__"

#: ../../docs/community/contributing/code_style_guidelines.rst:118
msgid ""
"Visual Studio: `ClangFormat <https://marketplace.visualstudio.com/items?"
"itemName=LLVMExtensions.ClangFormat>`__"
msgstr ""
"Visual Studio : `ClangFormat <https://marketplace.visualstudio.com/items?"
"itemName=LLVMExtensions.ClangFormat>`__"

#: ../../docs/community/contributing/code_style_guidelines.rst:119
msgid "vim: `vim-clang-format <https://github.com/rhysd/vim-clang-format>`__"
msgstr "vim : `vim-clang-format <https://github.com/rhysd/vim-clang-format>`__"

#: ../../docs/community/contributing/code_style_guidelines.rst:121
msgid "(Pull requests welcome to extend this list with tested plugins.)"
msgstr ""
"(Les PR pour étendre cette liste avec des plugins testés sont les "
"bienvenues.)"

#: ../../docs/community/contributing/code_style_guidelines.rst:124
msgid "Header includes"
msgstr "L'en-tête comprend"

#: ../../docs/community/contributing/code_style_guidelines.rst:126
msgid ""
"When adding new C++ or Objective-C files or including new headers in "
"existing ones, the following rules should be followed:"
msgstr ""
"Lors de l'ajout de nouveaux fichiers C++ ou Objective-C ou de l'inclusion de "
"nouveaux en-têtes dans des fichiers existants, les règles suivantes doivent "
"être suivies :"

#: ../../docs/community/contributing/code_style_guidelines.rst:129
msgid ""
"The first lines in the file should be Godot's copyright header and MIT "
"license, copy-pasted from another file. Make sure to adjust the filename."
msgstr ""
"Les premières lignes du fichier doivent être l'en-tête de copyright de Godot "
"et la licence du MIT, copiées-collées à partir d'un autre fichier. Veillez à "
"ajuster le nom du fichier."

#: ../../docs/community/contributing/code_style_guidelines.rst:131
msgid ""
"In a ``.h`` header, include guards should be used with the form "
"``FILENAME_H``."
msgstr ""
"Dans un en-tête ``.h``, les gardes d'inclusion doivent être utilisés sur ce "
"modèle : ``FILENAME_H``."

#: ../../docs/community/contributing/code_style_guidelines.rst:134
msgid ""
"In a ``.cpp`` file (e.g. ``filename.cpp``), the first include should be the "
"one where the class is declared (e.g. ``#include \"filename.h\"``), followed "
"by an empty line for separation."
msgstr ""
"Dans un fichier ``.cpp`` (par exemple ``filename.cpp``), le premier include "
"doit être celui où la classe est déclarée (par exemple ``#include \"filename."
"h\"``), suivi d'une ligne vide pour la séparation."

#: ../../docs/community/contributing/code_style_guidelines.rst:137
msgid ""
"Then come headers from Godot's own code base, included in alphabetical order "
"(enforced by ``clang-format``) with paths relative to the root folder. Those "
"includes should be done with quotes, e.g. ``#include \"core/object.h\"``. "
"The block of Godot header includes should then be followed by an empty line "
"for separation."
msgstr ""
"Puis viennent les en-têtes de la base de code de Godot, inclus dans l'ordre "
"alphabétique (imposé par le ``clang-format``) avec les chemins relatifs au "
"dossier racine. Ces inclusions doivent être faites avec des guillemets, par "
"exemple ``#inclure \"core/object.h\"``. Le bloc des includes de l'en-tête "
"Godot doit alors être suivi d'une ligne vide pour la séparation."

#: ../../docs/community/contributing/code_style_guidelines.rst:142
msgid ""
"Finally, third-party headers (either from ``thirdparty`` or from the "
"system's include paths) come next and should be included with the < and > "
"symbols, e.g. ``#include <png.h>``. The block of third-party headers should "
"also be followed by an empty line for separation."
msgstr ""
"Enfin, les en-têtes tiers (provenant soit de ``thirdparty`` soit des chemins "
"d'inclusion du système) viennent ensuite et doivent être inclus avec les "
"symboles < et >, par exemple ``#include <png.h>``. Le bloc des en-têtes "
"tiers doit également être suivi d'une ligne vide pour la séparation."

#: ../../docs/community/contributing/code_style_guidelines.rst:146
msgid ""
"Godot and third-party headers should be included in the file that requires "
"them, i.e. in the `.h` header if used in the declarative code or in the `."
"cpp` if used only in the imperative code."
msgstr ""
"Les en-têtes Godot et tiers doivent être inclus dans le fichier qui les "
"requiert, c'est-à-dire dans l'en-tête `.h` si utilisé dans le code "
"déclaratif ou dans le `.cpp` si utilisé uniquement dans le code impératif."

#: ../../docs/community/contributing/code_style_guidelines.rst:150
msgid "Example:"
msgstr "Exemple :"

#: ../../docs/community/contributing/code_style_guidelines.rst:238
msgid "Java"
msgstr "Java"

#: ../../docs/community/contributing/code_style_guidelines.rst:240
msgid ""
"Godot's Java code (mostly in ``platform/android``) is also enforced via "
"``clang-format``, so see the instructions above to set it up. Keep in mind "
"that this style guide only applies to code written and maintained by Godot, "
"not third-party code such as the ``java/src/com/google`` subfolder."
msgstr ""
"Le code Java de Godot (principalement en ``platform/android``) est également "
"mis en forme par ``clang-format``, donc voir les instructions ci-dessus pour "
"le régler. Gardez à l'esprit que ce guide de style ne s'applique qu'au code "
"écrit et maintenu par Godot, et non au code d'une tierce partie comme le "
"sous-dossier ``java/src/com/google``."

#: ../../docs/community/contributing/code_style_guidelines.rst:246
msgid "Python"
msgstr "Python"

#: ../../docs/community/contributing/code_style_guidelines.rst:248
msgid ""
"Godot's SCons buildsystem is written in Python, and various scripts included "
"in the source tree are also using Python."
msgstr ""
"Le système de construction SCons de Godot est écrit en Python, et divers "
"scripts inclus dans l'arbre des sources utilisent également Python."

#: ../../docs/community/contributing/code_style_guidelines.rst:251
msgid ""
"For those, we follow the `PEP-8 style guide <https://www.python.org/dev/peps/"
"pep-0008/>`__, this is however not as strongly enforced as for the C++ code. "
"If you are so inclined, you can check and format your Python changes using "
"`autopep8 <https://pypi.org/project/autopep8/>`__."
msgstr ""
"Pour ces derniers, nous suivons le guide de style `PEP-8 <https://www.python."
"org/dev/peps/pep-0008/>`__, qui n'est cependant pas aussi fortement appliqué "
"que pour le code C++. Si vous le souhaitez, vous pouvez vérifier et formater "
"vos modifications Python en utilisant `autopep8 <https://pypi.org/project/"
"autopep8/>`__."
