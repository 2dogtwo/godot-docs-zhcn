# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-05 17:37+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:4
msgid "GDScript exports"
msgstr "Exports GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:7
msgid "Introduction to exports"
msgstr "Introduction aux exports GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:9
msgid ""
"In Godot, class members can be exported. This means their value gets saved "
"along with the resource (such as the :ref:`scene <class_PackedScene>`) "
"they're attached to. They will also be available for editing in the property "
"editor. Exporting is done by using the ``export`` keyword::"
msgstr ""
"Dans Godot, les membres de classe peuvent être exportés. Cela signifie que "
"leur valeur est sauvegardée avec la ressource (par exemple la :ref:`scene "
"<class_PackedScene>`) à laquelle ils sont attachés. Ils seront également "
"disponibles pour l'édition dans l'éditeur de propriétés. L'exportation se "
"fait en utilisant le mot clé ``export`` :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:18
msgid ""
"An exported variable must be initialized to a constant expression or have an "
"export hint in the form of an argument to the ``export`` keyword (see the "
"*Examples* section below)."
msgstr ""
"Une variable exportée doit être initialisée à une expression constante ou "
"avoir une indication d'exportation sous la forme d'un argument au mot-clé "
"d'exportation (voir les exemples ci-dessous)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:22
msgid ""
"One of the fundamental benefits of exporting member variables is to have "
"them visible and editable in the editor. This way, artists and game "
"designers can modify values that later influence how the program runs. For "
"this, a special export syntax is provided."
msgstr ""
"L'un des avantages fondamentaux de l'exportation des variables membres est "
"de les rendre visibles et modifiables dans l'éditeur. De cette façon, les "
"artistes et les game designers peuvent modifier les valeurs qui "
"influenceront plus tard le fonctionnement du programme. Pour cela, une "
"syntaxe spéciale d'exportation est fournie."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:29
msgid ""
"Exporting properties can also be done in other languages such as C#. The "
"syntax varies depending on the language."
msgstr ""
"L'export de propriété fonctionne également dans d'autres langages comme le "
"C#. La syntaxe varie en fonction du langage."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:33
msgid "Examples"
msgstr "Exemples"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:136
msgid ""
"It must be noted that even if the script is not being run while in the "
"editor, the exported properties are still editable. This can be used in "
"conjunction with a :ref:`script in \"tool\" mode <doc_gdscript_tool_mode>`."
msgstr ""
"Il faut noter que même si le script n'est pas en cours d’exécution alors "
"qu'il est en cours d'édition, les propriétés exportées sont toujours "
"modifiables (voir ci-dessous pour \"outil\")."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:141
msgid "Exporting bit flags"
msgstr "Exportation des indicateurs binaires"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:143
msgid ""
"Integers used as bit flags can store multiple ``true``/``false`` (boolean) "
"values in one property. By using the export hint ``int, FLAGS``, they can be "
"set from the editor::"
msgstr ""
"Les nombres entiers utilisés comme bits de drapeaux (bitflags) peuvent "
"stocker plusieurs valeurs ``vrai``/``faux`` (booléen) en une propriété. En "
"utilisant l'indication d'exportation ``int, FLAGS``, ils peuvent être "
"changés dans l'éditeur :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:150
msgid ""
"Restricting the flags to a certain number of named flags is also possible. "
"The syntax is similar to the enumeration syntax::"
msgstr ""
"Limiter les drapeaux à un certain nombre de drapeaux nommés est également "
"possible. La syntaxe est très similaire à la syntaxe d'énumération :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:156
msgid ""
"In this example, ``Fire`` has value 1, ``Water`` has value 2, ``Earth`` has "
"value 4 and ``Wind`` corresponds to value 8. Usually, constants should be "
"defined accordingly (e.g. ``const ELEMENT_WIND = 8`` and so on)."
msgstr ""
"Dans cet exemple, ``Feu`` a la valeur 1, ``Eau`` a la valeur 2, ``Terre`` a "
"la valeur 4 et ``Vent`` correspond à la valeur 8. Généralement, les "
"constantes doivent être définies en conséquence (p. ex. ``const ELEMENT_VENT "
"= 8`` et ainsi de suite)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:161
msgid ""
"Export hints are also provided for the physics and render layers defined in "
"the project settings::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:168
msgid ""
"Using bit flags requires some understanding of bitwise operations. If in "
"doubt, boolean variables should be exported instead."
msgstr ""
"L'utilisation de drapeaux de bits nécessite une certaine compréhension des "
"opérations sur les bits. En cas de doute, les variables booléennes doivent "
"être exportées à la place."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:172
msgid "Exporting arrays"
msgstr "Exportation de tableaux"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:174
msgid ""
"Exporting arrays works, but with an important caveat: while regular arrays "
"are created local to every class instance, exported arrays are *shared* "
"between all instances. This means that editing them in one instance will "
"cause them to change in all other instances. Exported arrays can have "
"initializers, but they must be constant expressions."
msgstr ""
"L'exportation des tableaux fonctionne mais avec une mise en garde "
"importante : alors que les tableaux normaux sont créés en local pour chaque "
"instance de classe, les tableaux exportés sont *partagés* entre toutes les "
"instances. Cela signifie que le fait de les éditer dans une instance les "
"fera changer dans toutes les autres instances. Les tableaux exportés peuvent "
"avoir des initialisateurs, mais ceux-ci doivent être des expressions "
"constantes."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:180
msgid ""
"If the exported array specifies a type which inherits from Resource, the "
"array values can be set in the inspector by dragging and dropping multiple "
"files from the FileSystem dock at once."
msgstr ""
"Si le tableau exporté spécifie un type qui hérite de Resource, les valeurs "
"du tableau peuvent être définies dans l'inspecteur en glissant et déposant "
"plusieurs fichiers du dock système de fichiers en même temps."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:220
msgid "Setting exported variables from a tool script"
msgstr "Définition des variables exportées à partir d'un script outil(tool)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:222
msgid ""
"When changing an exported variable's value from a script in :ref:"
"`doc_gdscript_tool_mode`, the value in the inspector won't be updated "
"automatically. To update it, call :ref:`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` after setting the "
"exported variable's value."
msgstr ""
"Quand la valeur d'une variable exportée depuis un script :ref:"
"`doc_gdscript_tool_mode` est modifiée, la valeur dans l'inspecteur ne sera "
"pas mise-à-jour automatiquement. Pour la mettre-à-jour, appelez :ref:"
"`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` après avoir défini la "
"valeur de la variable exportée."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:229
msgid "Advanced exports"
msgstr "Exportations avancées"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:231
msgid ""
"Not every type of export can be provided on the level of the language itself "
"to avoid unnecessary design complexity. The following describes some more or "
"less common exporting features which can be implemented with a low-level API."
msgstr ""
"Tous les types d'exportation ne peuvent pas être fournis au niveau du "
"langage lui-même pour éviter une complexité de conception inutile. Ce qui "
"suit décrit quelques fonctions d'exportation plus ou moins courantes qui "
"peuvent être mises en œuvre avec une API de bas niveau."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:235
msgid ""
"Before reading further, you should get familiar with the way properties are "
"handled and how they can be customized with :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>`, and :ref:`_get_property_list() "
"<class_Object_method__get_property_list>` methods as described in :ref:"
"`doc_accessing_data_or_logic_from_object`."
msgstr ""
"Avant de poursuivre la lecture, vous devriez vous familiariser avec la "
"manière dont les propriétés sont gérées et comment elles peuvent être "
"personnalisées avec les méthodes :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref :`_get() "
"<class_Object_method__get_property_list>`, et :ref:`_get_property_list() "
"<class_Object_method__get_property_list>` comme décrit dans :ref:"
"`doc_accessing_data_or_logic_from_object`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:242
msgid ""
"For binding properties using the above methods in C++, see :ref:"
"`doc_binding_properties_using_set_get_property_list`."
msgstr ""
"Pour les propriétés de liaison utilisant les méthodes ci-dessus en C++, "
"voir :ref:`doc_binding_properties_using_set_get_property_list`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:245
msgid ""
"The script must operate in the ``tool`` mode so the above methods can work "
"from within the editor."
msgstr ""
"Le script doit fonctionner en mode ``tool`` pour que les méthodes ci-dessus "
"puissent fonctionner dans l'éditeur."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:249
msgid "Adding script categories"
msgstr "Ajout de catégories de script"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:251
msgid ""
"For better visual distinguishing of properties, a special script category "
"can be embedded into the inspector to act as a separator. ``Script "
"Variables`` is one example of a built-in category."
msgstr ""
"Pour une meilleure distinction visuelle des propriétés, une catégorie "
"d'écriture spéciale peut être intégrée à l'inspecteur pour servir de "
"séparateur. ``Script Variables`` est un exemple de catégorie intégrée."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:268
msgid "``name`` is the name of a category to be added to the inspector;"
msgstr "``name`` est le nom d'une catégorie à ajouter à l'inspecteur ;"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:270
msgid ""
"``PROPERTY_USAGE_CATEGORY`` indicates that the property should be treated as "
"a script category specifically, so the type ``TYPE_NIL`` can be ignored as "
"it won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""
"La propriété ``PROPERTY_USAGE_CATEGORY`` indique que la propriété doit être "
"traitée comme une catégorie de script spécifique, donc le type ``TYPE_NIL`` "
"peut être ignoré car il ne sera pas réellement utilisé pour la logique de "
"script, mais il doit quand même être défini."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:275
msgid "Grouping properties"
msgstr "Regroupement des propriétés"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:277
msgid "A list of properties with similar names can be grouped."
msgstr "Une liste de propriétés ayant des noms similaires peut être groupée."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:291
msgid ""
"``name`` is the name of a group which is going to be displayed as "
"collapsible list of properties;"
msgstr ""
"``name`` est le nom d'un groupe qui va s'afficher sous forme de liste "
"pliable de propriétés ;"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:294
msgid ""
"every successive property added after the group property will be collapsed "
"and shortened as determined by the prefix defined via the ``hint_string`` "
"key. For instance, ``rotate_speed`` is going to be shortened to ``speed`` in "
"this case."
msgstr ""
"chaque propriété successive ajoutée après la propriété de groupe sera "
"réduite et raccourcie comme déterminé par le préfixe défini via la clé "
"``hint_string``. Par exemple, ``rotate_speed`` va être raccourci en "
"``speed`` dans ce cas."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:298
msgid ""
"``PROPERTY_USAGE_GROUP`` indicates that the property should be treated as a "
"script group specifically, so the type ``TYPE_NIL`` can be ignored as it "
"won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""
"``PROPERTY_USAGE_GROUP`` indique que la propriété doit être traitée comme un "
"groupe de script spécifique, donc le type ``TYPE_NIL`` peut être ignoré car "
"il ne sera pas réellement utilisé pour la logique de script, mais il doit "
"quand même être défini."
