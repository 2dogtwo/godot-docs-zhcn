# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-30 19:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:4
msgid "GDScript basics"
msgstr "Bases de GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:7
msgid "Introduction"
msgstr "Introduction"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:9
msgid ""
"*GDScript* is a high-level, dynamically typed programming language used to "
"create content. It uses a syntax similar to `Python <https://en.wikipedia."
"org/wiki/Python_%28programming_language%29>`_ (blocks are indent-based and "
"many keywords are similar). Its goal is to be optimized for and tightly "
"integrated with Godot Engine, allowing great flexibility for content "
"creation and integration."
msgstr ""
"*GDScript* est un langage de haut niveau à typage dynamique utilisé pour "
"créer du contenu. Il utilise une syntaxe similaire au langage `Python "
"<https://fr.wikipedia.org/wiki/Python_(langage)>`_ (les blocs sont "
"identifiés par l'indentation et une grande partie des mots clés sont "
"similaires). Son but est d’être optimisé et étroitement intégré avec le "
"moteur Godot, cela permettant une grande flexibilité pour la création et "
"l’intégration de contenu."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:17
msgid "History"
msgstr "Histoire"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:21
msgid ""
"Documentation about GDScript's history has been moved to the :ref:"
"`Frequently Asked Questions <doc_faq_what_is_gdscript>`."
msgstr ""
"La documentation sur l'histoire de GDScript a été déplacée dans :ref:"
"`Questions fréquentes <doc_faq_what_is_gdscript>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:25
msgid "Example of GDScript"
msgstr "Exemple de GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:27
msgid ""
"Some people can learn better by taking a look at the syntax, so here's a "
"simple example of how GDScript looks."
msgstr ""
"Certaines personnes apprennent plus facilement en regardant la syntaxe. "
"Voici donc un exemple de ce à quoi ressemble GDScript."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:110
msgid ""
"If you have previous experience with statically typed languages such as C, C+"
"+, or C# but never used a dynamically typed one before, it is advised you "
"read this tutorial: :ref:`doc_gdscript_more_efficiently`."
msgstr ""
"Si vous avez déjà de l’expérience avec des langages à typage statique tels "
"que C, C++ ou C# mais que vous n'avez jamais utilisé un langage à typage "
"dynamique, il vous est conseillé de lire ce tutoriel : :ref:"
"`doc_gdscript_more_efficiently`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:115
msgid "Language"
msgstr "Langage"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:117
msgid ""
"In the following, an overview is given to GDScript. Details, such as which "
"methods are available to arrays or other objects, should be looked up in the "
"linked class descriptions."
msgstr ""
"Ce qui suit est un aperçu de GDScript. Les détails tels que les méthodes "
"disponibles pour les tableaux ou autres objets peuvent être consultés dans "
"les liens vers les descriptions des classes."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:122
msgid "Identifiers"
msgstr "Identifiants"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:124
msgid ""
"Any string that restricts itself to alphabetic characters (``a`` to ``z`` "
"and ``A`` to ``Z``), digits (``0`` to ``9``) and ``_`` qualifies as an "
"identifier. Additionally, identifiers must not begin with a digit. "
"Identifiers are case-sensitive (``foo`` is different from ``FOO``)."
msgstr ""
"Toute chaîne de caractère limitée aux caractères alphabétiques (``a`` à "
"``z`` et ``A`` à ``Z``), aux chiffres (``0`` à ``9``) et ``_`` est un "
"identifiant potentiel. Les identifiants ne doivent également pas commencer "
"par un chiffre. Les identifiants sont sensibles à la casse. (``toto`` est "
"différent de ``TOTO``)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:130
msgid "Keywords"
msgstr "Mots-clés"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:132
msgid ""
"The following is the list of keywords supported by the language. Since "
"keywords are reserved words (tokens), they can't be used as identifiers. "
"Operators (like ``in``, ``not``, ``and`` or ``or``) and names of built-in "
"types as listed in the following sections are also reserved."
msgstr ""
"Ce qui suit est une liste de mots-clés supportés par le langage. Étant donné "
"que les mots-clés sont des mots (symboles) réservés, il ne peuvent êtres "
"utilisés comme identifiants. Les opérateurs (comme ``in``, ``not``, ``and`` "
"ou ``or``) et les noms des types intégrés énumérés dans les sections "
"suivantes sont également réservés."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:137
msgid ""
"Keywords are defined in the `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ in "
"case you want to take a look under the hood."
msgstr ""
"Les mots-clés sont définis dans le `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ si "
"vous souhaitez regarder sous le capot."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:141
msgid "Keyword"
msgstr "Mot-clé"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:141
msgid "Description"
msgstr "Description"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:143
msgid "if"
msgstr "if"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:143
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:145
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:147
msgid "See `if/else/elif`_."
msgstr "Voir `if/else/elif`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:145
msgid "elif"
msgstr "elif"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:147
msgid "else"
msgstr "else"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:149
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:834
msgid "for"
msgstr "for"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:149
msgid "See for_."
msgstr "Voir for_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:151
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:823
msgid "while"
msgstr "while"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:151
msgid "See while_."
msgstr "Voir while_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:153
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:869
msgid "match"
msgstr "match"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:153
msgid "See match_."
msgstr "Voir match_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:155
msgid "break"
msgstr "break"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:155
msgid "Exits the execution of the current ``for`` or ``while`` loop."
msgstr "Quitte l'exécution de la boucle ``for`` ou ``while`` courante."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:157
msgid "continue"
msgstr "continue"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:157
msgid ""
"Immediately skips to the next iteration of the ``for`` or ``while`` loop."
msgstr ""
"Passe immédiatement à l'itération suivante de la boucle ``for`` ou ``while``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:159
msgid "pass"
msgstr "pass"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:159
msgid ""
"Used where a statement is required syntactically but execution of code is "
"undesired, e.g. in empty functions."
msgstr ""
"Utilisé lorsqu'une instruction est requise syntaxiquement mais ou "
"l’exécution de code est indésirable, comme par exemple, dans une fonction "
"vide."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:161
msgid "return"
msgstr "return"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:161
msgid "Returns a value from a function."
msgstr "Retourne une valeur à partir d'une fonction."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:163
msgid "class"
msgstr "class"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:163
msgid "Defines a class."
msgstr "Définit une classe."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:165
msgid "extends"
msgstr "extends"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:165
msgid "Defines what class to extend with the current class."
msgstr "Définit quelle classe étendre avec la classe courante."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:167
msgid "is"
msgstr "is"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:167
msgid ""
"Tests whether a variable extends a given class, or is of a given built-in "
"type."
msgstr ""
"Teste si une variable est du type d'une classe donnée, ou si elle est d'un "
"type intégré donnée."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:169
msgid "as"
msgstr "as"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:169
msgid "Cast the value to a given type if possible."
msgstr "Convertir la valeur vers un type donné, si possible."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:171
msgid "self"
msgstr "self"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:171
msgid "Refers to current class instance."
msgstr "Réfère à l'instance courante de la classe."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:173
msgid "tool"
msgstr "tool"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:173
msgid "Executes the script in the editor."
msgstr "Exécute le script dans l'éditeur."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:175
msgid "signal"
msgstr "signal"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:175
msgid "Defines a signal."
msgstr "Définit un signal."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:177
msgid "func"
msgstr "func"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:177
msgid "Defines a function."
msgstr "Définit une fonction."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:179
msgid "static"
msgstr "static"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:179
msgid "Defines a static function. Static member variables are not allowed."
msgstr ""
"Définit une fonction statique. Les variables membres statiques ne sont pas "
"autorisés."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:181
msgid "const"
msgstr "const"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:181
msgid "Defines a constant."
msgstr "Définit une constante."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:183
msgid "enum"
msgstr "enum"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:183
msgid "Defines an enum."
msgstr "Définit une énumération."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:185
msgid "var"
msgstr "var"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:185
msgid "Defines a variable."
msgstr "Définit une variable."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:187
msgid "onready"
msgstr "onready"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:187
msgid ""
"Initializes a variable once the Node the script is attached to and its "
"children are part of the scene tree."
msgstr ""
"Initialise une variable une fois que le nœud auquel le script est attaché, "
"ainsi que ses enfants, font partie de l'arborescence de la scène."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:189
msgid "export"
msgstr "export"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:189
msgid ""
"Saves a variable along with the resource it's attached to and makes it "
"visible and modifiable in the editor."
msgstr ""
"Sauvegarde une variable ainsi que la ressource qui lui est attachée et la "
"rend visible et modifiable via l'éditeur."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:191
msgid "setget"
msgstr "setget"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:191
msgid "Defines setter and getter functions for a variable."
msgstr ""
"Définit les accesseurs (setter) et mutateurs (getter) pour une variable."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:193
msgid "breakpoint"
msgstr "breakpoint"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:193
msgid "Editor helper for debugger breakpoints."
msgstr "Assistant de l'éditeur de points d'arrêt du débogueur."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:195
msgid "preload"
msgstr "preload"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:195
msgid "Preloads a class or variable. See `Classes as resources`_."
msgstr "Précharge une classe ou une variable. Voir `Classes as resources`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:197
msgid "yield"
msgstr "yield"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:197
msgid "Coroutine support. See `Coroutines with yield`_."
msgstr "Support de coroutine. Voir `Coroutines with yield`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:199
msgid "assert"
msgstr "assert"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:199
msgid ""
"Asserts a condition, logs error on failure. Ignored in non-debug builds. See "
"`Assert keyword`_."
msgstr ""
"Affirmer une condition, journalise les erreurs en cas d'échec. Ignorer dans "
"les compilations autre que de débogages. Voir `Assert keyword`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:201
msgid "remote"
msgstr "remote"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:201
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:203
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:205
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:207
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:209
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:211
msgid ""
"Networking RPC annotation. See :ref:`high-level multiplayer docs "
"<doc_high_level_multiplayer>`."
msgstr ""
"Annotation de réseautage RPC. Voir :ref:`high-level multiplayer docs "
"<doc_high_level_multiplayer>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:203
msgid "master"
msgstr "master"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:205
msgid "puppet"
msgstr "puppet"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:207
msgid "remotesync"
msgstr "remotesync"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:209
msgid "mastersync"
msgstr "mastersync"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:211
msgid "puppetsync"
msgstr "puppetsync"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:213
msgid "PI"
msgstr "PI"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:213
msgid "PI constant."
msgstr "Constante PI."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:215
msgid "TAU"
msgstr "TAU"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:215
msgid "TAU constant."
msgstr "Constante TAU."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:217
msgid "INF"
msgstr "INF"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:217
msgid "Infinity constant. Used for comparisons."
msgstr "Constante de l'infinité. Elle est utilisée pour les comparaisons."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:219
msgid "NAN"
msgstr "NAN"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:219
msgid "NAN (not a number) constant. Used for comparisons."
msgstr ""
"La constante NAN (n'est pas un nombre). Elle est utilisée pour les "
"comparaisons."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:223
msgid "Operators"
msgstr "Opérateurs"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:225
msgid "The following is the list of supported operators and their precedence."
msgstr "Ce qui suit est la liste des opérateurs supportés et leur priorité."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:228
msgid "**Operator**"
msgstr "**Opérateur**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:228
msgid "**Description**"
msgstr "**Description**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:230
msgid "``x[index]``"
msgstr "``x[index]``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:230
msgid "Subscription (highest priority)"
msgstr "Abonnement (priorité la plus élevée)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:232
msgid "``x.attribute``"
msgstr "``x.attribut``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:232
msgid "Attribute reference"
msgstr "Référence d'attribut"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:234
msgid "``foo()``"
msgstr "``foo()``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:234
msgid "Function call"
msgstr "Appel de fonction"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:236
msgid "``is``"
msgstr "``is``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:236
msgid "Instance type checker"
msgstr "Vérificateur de type d'instance"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:238
msgid "``~``"
msgstr "``~``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:238
msgid "Bitwise NOT"
msgstr "Opération bit-à-bit de négation"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:240
msgid "``-x``"
msgstr "``-x``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:240
msgid "Negative / Unary negation"
msgstr "Négation / négation unaire"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:242
msgid "``*`` ``/`` ``%``"
msgstr "``*`` ``/`` ``%``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:242
msgid "Multiplication / Division / Remainder"
msgstr "Multiplication / Division / Reste"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:244
msgid ""
"These operators have the same behavior as C++. Integer division is truncated "
"rather than returning a fractional number, and the % operator is only "
"available for ints (\"fmod\" for floats)"
msgstr ""
"Ces opérateurs ont le même comportement qu'en C++. La division d'entiers est "
"tronquée plutôt que de retourner un nombre fractionnaire, et l'opérateur % "
"n'est disponible que pour les ints (\"fmod\" pour les floats)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:250
msgid "``+``"
msgstr "``+``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:250
msgid "Addition / Concatenation of arrays"
msgstr "Ajout / Concaténation de tableaux"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:252
msgid "``-``"
msgstr "``-``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:252
msgid "Subtraction"
msgstr "Soustraction"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:254
msgid "``<<`` ``>>``"
msgstr "``<<`` ``>>``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:254
msgid "Bit shifting"
msgstr "Décalage de bits"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:256
msgid "``&``"
msgstr "``&``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:256
msgid "Bitwise AND"
msgstr "Conjonction logique bit-à-bit"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:258
msgid "``^``"
msgstr "``^``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:258
msgid "Bitwise XOR"
msgstr "Opération \"Ou\" exclusif bit-à-bit"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:260
msgid "``|``"
msgstr "``|``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:260
msgid "Bitwise OR"
msgstr "Disjonction logique bit-à-bit"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:262
msgid "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"
msgstr "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:262
msgid "Comparisons"
msgstr "Comparaisons"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:264
msgid "``in``"
msgstr "``in``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:264
msgid "Content test"
msgstr "Test de contenu"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:266
msgid "``!`` ``not``"
msgstr "``!`` ``not``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:266
msgid "Boolean NOT"
msgstr "NOT booléen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:268
msgid "``and`` ``&&``"
msgstr "``and`` ``&&``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:268
msgid "Boolean AND"
msgstr "AND booléenooléen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:270
msgid "``or`` ``||``"
msgstr "``or`` ``||``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:270
msgid "Boolean OR"
msgstr "OR booléen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:272
msgid "``if x else``"
msgstr "``if x else``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:272
msgid "Ternary if/else"
msgstr "if / else ternaire"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:274
msgid "``as``"
msgstr "``as``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:274
msgid "Type casting"
msgstr "La conversion de type"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:276
msgid "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=``"
msgstr "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:276
msgid "Assignment (lowest priority)"
msgstr "Affectation (priorité la plus basse)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:280
msgid "Literals"
msgstr "Littéraux"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:283
msgid "**Literal**"
msgstr "**Littéraux**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:283
msgid "**Type**"
msgstr "**Type**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:285
msgid "``45``"
msgstr "``45``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:285
msgid "Base 10 integer"
msgstr "Entier en base 10 (décimal)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:287
msgid "``0x8F51``"
msgstr "``0x8F51``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:287
msgid "Base 16 (hexadecimal) integer"
msgstr "Entier base 16 (hexadécimal)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:289
msgid "``0b101010``"
msgstr "``0b101010``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:289
msgid "Base 2 (binary) integer"
msgstr "Entier base 2 (binaire)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:291
msgid "``3.14``, ``58.1e-10``"
msgstr "``3.14``, ``58.1e-10``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:291
msgid "Floating-point number (real)"
msgstr "Nombre à virgule flottante (réel)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:293
msgid "``\"Hello\"``, ``\"Hi\"``"
msgstr "``\"Bonjour\"``, ``\"Salut\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:293
msgid "Strings"
msgstr "Chaînes de caractères"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:295
msgid "``\"\"\"Hello\"\"\"``"
msgstr "``\"\"\"Bonjour\"\"\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:295
msgid "Multiline string"
msgstr "Chaîne de caractères multiligne"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:297
msgid "``@\"Node/Label\"``"
msgstr "``@\"Node/Label\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:297
msgid ":ref:`class_NodePath` or StringName"
msgstr ":ref:`class_NodePath` ou StringName"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:299
msgid "``$NodePath``"
msgstr "``$NodePath``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:299
msgid "Shorthand for ``get_node(\"NodePath\")``"
msgstr "Sténographie pour ``get_node(\"NodePath\")``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:303
msgid "Comments"
msgstr "Commentaire"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:305
msgid ""
"Anything from a ``#`` to the end of the line is ignored and is considered a "
"comment."
msgstr ""
"Tout ce qui est écrit depuis un ``#`` jusqu'à la fin de la ligne est ignoré "
"et est considéré comme un commentaire."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:315
msgid "Built-in types"
msgstr "Types intégrés"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:317
msgid ""
"Built-in types are stack-allocated. They are passed as values. This means a "
"copy is created on each assignment or when passing them as arguments to "
"functions. The only exceptions are ``Array``\\ s and ``Dictionaries``, which "
"are passed by reference so they are shared. (Pooled arrays such as "
"``PoolByteArray`` are still passed as values.)"
msgstr ""
"Les types intégrés sont alloués sur la pile. Ils sont transmis comme "
"valeurs. Cela signifie qu'une copie est créée à chaque affectation ou quand "
"elles sont passées comme arguments aux fonctions. Les seules exceptions sont "
"les ``Array``\\ s et ``Dictionaries``, qui sont passés par référence de "
"sorte qu'ils sont partagés. (PoolArray comme ``PoolByteArray`` sont passés "
"par valeurs.)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:324
msgid "Basic built-in types"
msgstr "Types intégrés basiques"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:326
msgid "A variable in GDScript can be assigned to several built-in types."
msgstr "Une variable en GDScript peut être affectée à divers types intégrés."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:329
msgid "null"
msgstr "null"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:331
msgid ""
"``null`` is an empty data type that contains no information and can not be "
"assigned any other value."
msgstr ""
"``null`` est une donnée vide qui ne contient aucune information et à "
"laquelle aucune autre valeur ne peut être affectée."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:335
msgid ":ref:`bool <class_bool>`"
msgstr ":ref:`bool <class_bool>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:337
msgid "Short for \"boolean\", it can only contain ``true`` or ``false``."
msgstr "Abrégé de \"boolean\", il ne peut contenir que ``true`` ou ``false``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:340
msgid ":ref:`int <class_int>`"
msgstr ":ref:`int <class_int>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:342
msgid ""
"Short for \"integer\", it stores whole numbers (positive and negative). It "
"is stored as a 64-bit value, equivalent to \"int64_t\" in C++."
msgstr ""
"De l'anglais \"integer\", contient des nombres entiers (positifs et "
"négatifs). Ceux-ci sont stockés comme des valeurs 64-bits, équivalent à "
"\"int64_t\" en C++."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:346
msgid ":ref:`float <class_float>`"
msgstr ":ref:`float <class_float>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:348
msgid ""
"Stores real numbers, including decimals, using floating-point values. It is "
"stored as a 64-bit value, equivalent to \"double\" in C++. Note: Currently, "
"data structures such as Vector2, Vector3, and PoolRealArray store 32-bit "
"single-precision \"float\" values."
msgstr ""
"Contient un nombre réel (avec décimales), en tant que valeur à virgule "
"flottante. Celui-ci est stocké comme valeur 64 bits, équivalent à \"double\" "
"en C++. Note : Actuellement, les structures de données comme Vector2, "
"Vector3 et PoolRealArray stockent des valeurs 32 bits à virgules flottantes "
"de précision unique."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:354
msgid ":ref:`String <class_String>`"
msgstr ":ref:`String <class_String>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:356
#, fuzzy
msgid ""
"A sequence of characters in `Unicode format <https://en.wikipedia.org/wiki/"
"Unicode>`_. Strings can contain the following escape sequences:"
msgstr ""
"Une séquence de caractères au `format Unicode <https://en.wikipedia.org/wiki/"
"Unicode>`. Les chaînes de caractère peuvent contenir `des séquences "
"d'échappement C standard <https://en.wikipedia.org/wiki/"
"Escape_sequences_in_C>`_. GDScript prend également en charge :ref:"
"`doc_gdscript_printf`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:360
#, fuzzy
msgid "**Escape sequence**"
msgstr "Séquence d'échappement"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:360
msgid "**Expands to**"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:362
msgid "``\\n``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:362
msgid "Newline (line feed)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:364
msgid "``\\t``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:364
msgid "Horizontal tab character"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:366
msgid "``\\r``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:366
msgid "Carriage return"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:368
msgid "``\\a``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:368
msgid "Alert (beep/bell)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:370
msgid "``\\b``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:370
msgid "Backspace"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:372
msgid "``\\f``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:372
msgid "Formfeed page break"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:374
msgid "``\\v``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:374
#, fuzzy
msgid "Vertical tab character"
msgstr "Personnage cinématique (2D)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:376
msgid "``\\\"``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:376
msgid "Double quote"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:378
msgid "``\\'``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:378
#, fuzzy
msgid "Single quote"
msgstr "Singletons"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:380
msgid "``\\\\``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:380
msgid "Backslash"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:382
msgid "``\\uXXXX``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:382
msgid "Unicode codepoint ``XXXX`` (hexadecimal, case-insensitive)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:386
msgid "GDScript also supports :ref:`doc_gdscript_printf`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:389
msgid "Vector built-in types"
msgstr "Types intégrés vectoriels"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:392
msgid ":ref:`Vector2 <class_Vector2>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:394
msgid ""
"2D vector type containing ``x`` and ``y`` fields. Can also be accessed as an "
"array."
msgstr ""
"Type de vecteur 2D contenant les attributs ``x`` and ``y``. Peut aussi être "
"accédé comme pour un tableau."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:398
msgid ":ref:`Rect2 <class_Rect2>`"
msgstr ":ref:`Rect2 <class_Rect2>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:400
msgid ""
"2D Rectangle type containing two vectors fields: ``position`` and ``size``. "
"Also contains an ``end`` field which is ``position + size``."
msgstr ""
"Type de rectangle 2D contenant deux champs de vecteurs : ``position`` et "
"``size``. Contient également un champ ``end`` qui est ``position + taille``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:404
msgid ":ref:`Vector3 <class_Vector3>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:406
msgid ""
"3D vector type containing ``x``, ``y`` and ``z`` fields. This can also be "
"accessed as an array."
msgstr ""
"Type de vecteur 3D contenant les attributs ``x``, ``y`` et ``z``. Il peut "
"également être accédé comme un tableau."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:410
msgid ":ref:`Transform2D <class_Transform2D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:412
msgid "3×2 matrix used for 2D transforms."
msgstr "Matrice 3x2 utilisée pour les transformations 2D."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:415
msgid ":ref:`Plane <class_Plane>`"
msgstr ":ref:`Plane <class_Plane>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:417
msgid ""
"3D Plane type in normalized form that contains a ``normal`` vector field and "
"a ``d`` scalar distance."
msgstr ""
"Plan 3D normalisé contenant un vecteur ``normal`` et une distance scalaire "
"``d``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:421
msgid ":ref:`Quat <class_Quat>`"
msgstr ":ref:`Quat <class_Quat>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:423
msgid ""
"Quaternion is a datatype used for representing a 3D rotation. It's useful "
"for interpolating rotations."
msgstr ""
"Un quaternion est un type de données utilisé pour représenter une rotation "
"3D. Cette représentation est utile pour l'interpolation de rotations."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:427
msgid ":ref:`AABB <class_AABB>`"
msgstr ":ref:`AABB <class_AABB>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:429
msgid ""
"Axis-aligned bounding box (or 3D box) contains 2 vectors fields: "
"``position`` and ``size``. Also contains an ``end`` field which is "
"``position + size``."
msgstr ""
"La boite englobante (ou 3D box) alignée par axe contient 2 champs de "
"vecteurs : ``position`` et ``size``. Contient également un champ ``end`` qui "
"est ``position + size``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:434
msgid ":ref:`Basis <class_Basis>`"
msgstr ":ref:`Basis <class_Basis>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:436
msgid ""
"3x3 matrix used for 3D rotation and scale. It contains 3 vector fields "
"(``x``, ``y`` and ``z``) and can also be accessed as an array of 3D vectors."
msgstr ""
"Matrice 3x3 utilisée pour les rotations 3D et les mises à l'échelle. Elle "
"contient 3 attributs vecteurs (``x``, ``y`` et ``z``) et peut aussi être "
"accédé comme un tableae de vecteurs 3D."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:441
msgid ":ref:`Transform <class_Transform>`"
msgstr ":ref:`Transform <class_Transform>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:443
msgid ""
"3D Transform contains a Basis field ``basis`` and a Vector3 field ``origin``."
msgstr ""
"Transformation 3D contenant un attribut base vectorielle ``basis`` et un "
"attribut vecteur 3D (Vector3) ``origin``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:447
msgid "Engine built-in types"
msgstr "Types intégrés dans le moteur"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:450
msgid ":ref:`Color <class_Color>`"
msgstr ":ref:`Color <class_Color>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:452
msgid ""
"Color data type contains ``r``, ``g``, ``b``, and ``a`` fields. It can also "
"be accessed as ``h``, ``s``, and ``v`` for hue/saturation/value."
msgstr ""
"Le type de données Color contient les attributs ``r``, ``g``, ``b``, et "
"``a``. Il peut aussi être accédé par ``h``, ``s``, et ``v`` pour la "
"teinte(hue)/saturation/valeur."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:456
msgid ":ref:`NodePath <class_NodePath>`"
msgstr ":ref:`NodePath <class_NodePath>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:458
msgid ""
"Compiled path to a node used mainly in the scene system. It can be easily "
"assigned to, and from, a String."
msgstr ""
"Chemin vers un nœud utilisé principalement dans le système de scène. Il peut "
"facilement être assigné vers ou à partir d'une chaîne de caractère."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:462
msgid ":ref:`RID <class_RID>`"
msgstr ":ref:`RID <class_RID>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:464
msgid "Resource ID (RID). Servers use generic RIDs to reference opaque data."
msgstr ""
"Identifiant de ressource (RID). Les serveurs utilisent des RIDs génériques "
"pour référencer des données opaques."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:467
msgid ":ref:`Object <class_Object>`"
msgstr ":ref:`Object <class_Object>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:469
msgid "Base class for anything that is not a built-in type."
msgstr "Classe de base pour tout ce qui n'est pas un type intégré."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:472
msgid "Container built-in types"
msgstr "Types de conteneurs intégrés"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:475
msgid ":ref:`Array <class_Array>`"
msgstr ":ref:`Array <class_Array>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:477
msgid ""
"Generic sequence of arbitrary object types, including other arrays or "
"dictionaries (see below). The array can resize dynamically. Arrays are "
"indexed starting from index ``0``. Negative indices count from the end."
msgstr ""
"Séquence générique de types d'objets arbitraires. Sont inclus d'autres "
"tableaux ou dictionnaires (voir ci-dessous). Le tableau peut être "
"redimensionné dynamiquement. Les tableaux sont indexés en commençant par "
"l'index ``0``. Les indices négatifs comptent à partir de la fin."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:491
msgid ""
"GDScript arrays are allocated linearly in memory for speed. Large arrays "
"(more than tens of thousands of elements) may however cause memory "
"fragmentation. If this is a concern, special types of arrays are available. "
"These only accept a single data type. They avoid memory fragmentation and "
"use less memory, but are atomic and tend to run slower than generic arrays. "
"They are therefore only recommended to use for large data sets:"
msgstr ""
"Les tableaux GDScript sont alloués en mémoire de façon linéaire pour les "
"performances. Les tableaux de très grosse taille (plus d'une dizaine de "
"milliers d’éléments) peuvent cependant provoquer une fragmentation de la "
"mémoire. S'il s'agit d'un problème à considérer, des types de tableaux "
"spéciaux sont disponibles. Ceux-ci n'acceptent qu'un seul type de données. "
"Ils permettent d’éviter une fragmentation de la mémoire, utilisent moins de "
"mémoire, mais sont atomiques et ont tendance à être moins performants que "
"les tableaux génériques. Leur usage n'est donc recommandé que pour de très "
"larges ensembles de données :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:498
msgid ""
":ref:`PoolByteArray <class_PoolByteArray>`: An array of bytes (integers from "
"0 to 255)."
msgstr ""
":ref:`PoolByteArray <class_PoolByteArray>` : Un tableau d'octets (entiers de "
"0 à 255)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:499
msgid ":ref:`PoolIntArray <class_PoolIntArray>`: An array of integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>` : Un tableau d'entiers."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:500
msgid ":ref:`PoolRealArray <class_PoolRealArray>`: An array of floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>` : Un tableau de nombres flottants."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:501
msgid ":ref:`PoolStringArray <class_PoolStringArray>`: An array of strings."
msgstr ""
":ref:`PoolStringArray <class_PoolStringArray>` : Un tableau de chaînes de "
"caractères."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:502
msgid ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: An array of :ref:`Vector2 "
"<class_Vector2>` objects."
msgstr ""
":ref:`PoolVector2Array <class_PoolVector2Array>` : Un tableau d'objets :ref:"
"`Vector2 <class_Vector2 <class_Vector2>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:503
msgid ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: An array of :ref:`Vector3 "
"<class_Vector3>` objects."
msgstr ""
":ref:`PoolVector3Array <class_PoolVector3Array>` : Un tableau d'objets :ref:"
"`Vector3 <class_Vector3 <class_Vector3>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:504
msgid ""
":ref:`PoolColorArray <class_PoolColorArray>`: An array of :ref:`Color "
"<class_Color>` objects."
msgstr ""
":ref:`PoolColorArray <class_PoolColorArray>` : Un tableau d'objets :ref:"
"`Color <class_Color>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:507
msgid ":ref:`Dictionary <class_Dictionary>`"
msgstr ":ref:`Dictionary <class_Dictionary>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:509
msgid "Associative container which contains values referenced by unique keys."
msgstr ""
"Conteneur associatif qui contient des valeurs référencées par des clés "
"uniques."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:522
msgid ""
"Lua-style table syntax is also supported. Lua-style uses ``=`` instead of ``:"
"`` and doesn't use quotes to mark string keys (making for slightly less to "
"write). However, keys written in this form can't start with a digit (like "
"any GDScript identifier)."
msgstr ""
"Les tables en style Lua sont également supportés. Le style Lua utilise ``=`` "
"au lieu de ``:`` et n'utilise pas de guillemets pour marquer les clés de "
"chaîne de caractères (ce qui réduit légèrement l'écriture). Notez cependant "
"que comme tout identificateur GDScript, les clés écrites dans cette forme ne "
"peuvent pas commencer par un chiffre."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:536
msgid ""
"To add a key to an existing dictionary, access it like an existing key and "
"assign to it::"
msgstr ""
"Pour ajouter une clé à un dictionnaire existant, accédez-y comme une clé "
"existante et affectez lui une valeur :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:552
msgid ""
"The bracket syntax can be used to access properties of any :ref:"
"`class_Object`, not just Dictionaries. Keep in mind it will cause a script "
"error when attempting to index a non-existing property. To avoid this, use "
"the :ref:`Object.get() <class_Object_method_get>` and :ref:`Object.set() "
"<class_Object_method_set>` methods instead."
msgstr ""
"La syntaxe des crochets peut être utilisée pour accéder aux propriétés de "
"n'importe quel :ref:`class_Object`, et pas seulement aux Dictionnaires. "
"N'oubliez pas qu'elle provoquera une erreur de script lorsque vous tenterez "
"d'indexer une propriété inexistante. Pour éviter cela, utilisez les "
"méthodes :ref:`Object.get() <class_Object_method_get>` et :ref:`Object.set() "
"<class_Object_method_set>` à la place."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:559
msgid "Data"
msgstr "Données"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:562
msgid "Variables"
msgstr "Variables"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:564
msgid ""
"Variables can exist as class members or local to functions. They are created "
"with the ``var`` keyword and may, optionally, be assigned a value upon "
"initialization."
msgstr ""
"Les variables peuvent exister en tant que membres de la classe ou locales "
"aux fonctions. Elles sont créées avec le mot-clé ``var`` et peuvent, "
"éventuellement, se voir attribuer une valeur à l'initialisation."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:575
msgid ""
"Variables can optionally have a type specification. When a type is "
"specified, the variable will be forced to have always that same type, and "
"trying to assign an incompatible value will raise an error."
msgstr ""
"Les variables peuvent optionnellement avoir une spécification de type. "
"Lorsqu'un type est spécifié, la variable sera obligée d'avoir toujours le "
"même type, et essayer d'assigner une valeur incompatible entraînera une "
"erreur."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:579
msgid ""
"Types are specified in the variable declaration using a ``:`` (colon) symbol "
"after the variable name, followed by the type."
msgstr ""
"Les types sont spécifiés dans la variable par un ``:`` après le nom de la "
"variable, suivi par le type."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:587
msgid ""
"If the variable is initialized within the declaration, the type can be "
"inferred, so it's possible to omit the type name::"
msgstr ""
"Si la variable est initialisée dans la déclaration, le type peut être "
"déduit, il est donc possible de ne pas mettre le nom du type :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:593
msgid ""
"Type inference is only possible if the assigned value has a defined type, "
"otherwise it will raise an error."
msgstr ""
"L'inférence de type n'est possible que si la valeur affectée a un type "
"défini, sinon une erreur sera générée."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:596
msgid "Valid types are:"
msgstr "Les types valides sont :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:598
msgid "Built-in types (Array, Vector2, int, String, etc.)."
msgstr "Types intégrés (Array, Vector2, int, String, etc.)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:599
msgid "Engine classes (Node, Resource, Reference, etc.)."
msgstr "Classes du moteur (Node, Resource, Reference, etc.)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:600
msgid ""
"Constant names if they contain a script resource (``MyScript`` if you "
"declared ``const MyScript = preload(\"res://my_script.gd\")``)."
msgstr ""
"Les noms des constantes s'ils contiennent un script ressource (``MyScript`` "
"si vous avez déclaré ``const MyScript = preload(\"res://my_script.gd\")``)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:601
msgid ""
"Other classes in the same script, respecting scope (``InnerClass."
"NestedClass`` if you declared ``class NestedClass`` inside the ``class "
"InnerClass`` in the same scope)."
msgstr ""
"D'autres classes dans le même script, respectant la portée (``InnerClass."
"NestedClass`` si vous avez déclaré ``class NestedClass`` à l'intérieur de "
"``class InnerClass`` dans la même portée)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:602
msgid "Script classes declared with the ``class_name`` keyword."
msgstr "Les classes de script déclarées avec le mot-clé ``class_name``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:605
msgid "Casting"
msgstr "Conversion de type"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:607
msgid ""
"Values assigned to typed variables must have a compatible type. If it's "
"needed to coerce a value to be of a certain type, in particular for object "
"types, you can use the casting operator ``as``."
msgstr ""
"Les valeurs affectées à des variables typées doivent avoir un type "
"compatible. S'il est nécessaire de contraindre une valeur à être d'un "
"certain type, surtout pour les types d'objet, vous pouvez utiliser "
"l'opérateur de conversion ``as``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:611
msgid ""
"Casting between object types results in the same object if the value is of "
"the same type or a subtype of the cast type."
msgstr ""
"La conversion de types d'objets résulte en le même objet si la valeur est du "
"même type ou d'un type enfant du type de conversion."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:619
msgid ""
"If the value is not a subtype, the casting operation will result in a "
"``null`` value."
msgstr ""
"Si la valeur n'est pas un type enfant, l'opération de conversion se "
"résultera en une valeur ``null``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:626
msgid ""
"For built-in types, they will be forcibly converted if possible, otherwise "
"the engine will raise an error."
msgstr ""
"Pour les types intégrés, ils seront convertis de force si possible, sinon le "
"moteur générera une erreur."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:635
msgid ""
"Casting is also useful to have better type-safe variables when interacting "
"with the scene tree::"
msgstr ""
"Le casting est également utile pour avoir de meilleures variables de type-"
"safe lors de l’interaction avec l’arbre de la scène :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:645
msgid "Constants"
msgstr "Constantes"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:647
msgid ""
"Constants are similar to variables, but must be constants or constant "
"expressions and must be assigned on initialization."
msgstr ""
"Les constantes sont similaires aux variables, mais doivent être constantes "
"ou des expressions constantes et doivent être assignées à l'initialisation."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:661
msgid ""
"Although the type of constants is inferred from the assigned value, it's "
"also possible to add explicit type specification::"
msgstr ""
"Même si le type des constantes est implicitement spécifié par la valeur "
"assignée, il est également possible d'ajouter une spécification explicite du "
"type :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:667
msgid "Assigning a value of an incompatible type will raise an error."
msgstr "Assigner une valeur à un type incompatible va générer une erreur."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:671
msgid ""
"Since arrays and dictionaries are passed by reference, constants are \"flat"
"\". This means that if you declare a constant array or dictionary, it can "
"still be modified afterwards. They can't be reassigned with another value "
"though."
msgstr ""
"Comme les tableaux et les dictionnaires sont passés par référence, les "
"constantes sont \"flat\". Cela signifie que si vous déclarez un tableau ou "
"un dictionnaire constant, il peut toujours être modifié par la suite. Ils ne "
"peuvent cependant pas être réassignées avec une autre valeur."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:676
msgid "Enums"
msgstr "Énumérations"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:678
msgid ""
"Enums are basically a shorthand for constants, and are pretty useful if you "
"want to assign consecutive integers to some constant."
msgstr ""
"Les énumérations sont en fait une forme abrégée pour déclarer des "
"constantes, et sont pratiques si vous voulez assigner des entiers "
"consécutifs à certaines constantes."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:681
msgid ""
"If you pass a name to the enum, it will put all the keys inside a constant "
"dictionary of that name."
msgstr ""
"Si vous donnez un nom à l'enum, cela mettra également toutes les valeurs à "
"l'intérieur d'un dictionnaire constant de même nom."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:684
msgid ""
"In Godot 3.1 and later, keys in a named enum are not registered as global "
"constants. They should be accessed prefixed by the enum's name (``Name."
"KEY``); see an example below."
msgstr ""
"Dans Godot 3.1 et ultérieur, les clefs dans une enum nommée ne sont pas "
"déclarées en tant que constantes globales. Pour y accéder, elles doivent "
"être préfixées par le nom de l'enum (``Name.KEY``) ; voir l'exemple ci-"
"dessous."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:704
msgid "Functions"
msgstr "Fonctions"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:706
msgid ""
"Functions always belong to a `class <Classes_>`_. The scope priority for "
"variable look-up is: local → class member → global. The ``self`` variable is "
"always available and is provided as an option for accessing class members, "
"but is not always required (and should *not* be sent as the function's first "
"argument, unlike Python)."
msgstr ""
"Les fonctions appartiennent toujours à une `classe <Classes_>`_. La priorité "
"de portée pour la recherche de la variable est : locale → membre de classe → "
"globale. La variable ``self`` est toujours disponible et est fournie comme "
"option pour accéder aux membres de la classe, mais n'est pas toujours "
"nécessaire (et ne devrait *pas* être envoyée comme premier argument de la "
"fonction, contrairement à Python)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:719
msgid ""
"A function can ``return`` at any point. The default return value is ``null``."
msgstr ""
"Une fonction peut ``return`` à tout moment. La valeur de retour par défaut "
"est ``null``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:721
msgid ""
"Functions can also have type specification for the arguments and for the "
"return value. Types for arguments can be added in a similar way to "
"variables::"
msgstr ""
"Les fonctions peuvent également avoir une spécification de type pour les "
"arguments et pour les valeurs retournées. Les types peuvent être ajoutés aux "
"arguments de la même manière que pour les variables :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:727
msgid ""
"If a function argument has a default value, it's possible to infer the type::"
msgstr ""
"Si l'argument d'une fonction a une valeur par défaut, il est possible "
"d'inférer le type :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:732
msgid ""
"The return type of the function can be specified after the arguments list "
"using the arrow token (``->``)::"
msgstr ""
"Le type de retour de la fonction peut être spécifié après la liste "
"d'arguments en utilisant le jeton de flèche (``->``) :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:738
msgid ""
"Functions that have a return type **must** return a proper value. Setting "
"the type as ``void`` means the function doesn't return anything. Void "
"functions can return early with the ``return`` keyword, but they can't "
"return any value."
msgstr ""
"Les fonctions qui ont un type de retour **doivent** retourner une valeur "
"appropriée. Paramétrer le type d'une fonction à ``void`` signifie qu'elle ne "
"retournera rien. Les fonctions vides peuvent retourner à l'avance en "
"utilisant le mot-clé ``return``, mais elles ne peuvent pas retourner de "
"valeurs."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:747
msgid ""
"Non-void functions must **always** return a value, so if your code has "
"branching statements (such as an ``if``/``else`` construct), all the "
"possible paths must have a return. E.g., if you have a ``return`` inside an "
"``if`` block but not after it, the editor will raise an error because if the "
"block is not executed, the function won't have a valid value to return."
msgstr ""
"Les fonctions non-vides doivent **toujours** retourner une valeur, donc si "
"votre code a des instructions de branchement (comme une construction ``if``/"
"``else``), tous les chemins possibles doivent avoir un retour. Par exemple, "
"si vous avez un ``return`` à l'intérieur d'un bloc ``if`` mais pas après, "
"l'éditeur affichera une erreur car si le bloc n'est pas exécuté, la fonction "
"n'aura pas de valeur valide à retourner."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:755
msgid "Referencing functions"
msgstr "Fonctions de référencement"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:757
msgid ""
"Contrary to Python, functions are *not* first-class objects in GDScript. "
"This means they cannot be stored in variables, passed as an argument to "
"another function or be returned from other functions. This is for "
"performance reasons."
msgstr ""
"Contrairement au Python, les fonctions ne sont *pas* des objets de première "
"classe dans GDScript. Cela signifie qu'elles ne peuvent pas être stockées "
"dans des variables, passées en argument à une autre fonction ou être "
"renvoyées par d'autres fonctions. Ceci pour des raisons de performance."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:761
msgid ""
"To reference a function by name at run-time, (e.g. to store it in a "
"variable, or pass it to another function as an argument) one must use the "
"``call`` or ``funcref`` helpers::"
msgstr ""
"Pour référencer une fonction par son nom au moment de l'exécution (par "
"exemple pour la stocker dans une variable, ou la passer à une autre fonction "
"en argument), il faut utiliser les aides ``call`` ou ``funcref`` :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:775
msgid "Static functions"
msgstr "Fonctions statiques"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:777
msgid ""
"A function can be declared static. When a function is static, it has no "
"access to the instance member variables or ``self``. This is mainly useful "
"to make libraries of helper functions::"
msgstr ""
"Une fonction peut être déclarée statique. Lorsqu'une fonction est statique, "
"elle n'a pas accès aux variables membres de l'instance ou à ``self``. Ceci "
"est principalement utile pour faire des bibliothèques de fonctions d'aide :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:786
msgid "Statements and control flow"
msgstr "Instructions et flux de contrôle"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:788
msgid ""
"Statements are standard and can be assignments, function calls, control flow "
"structures, etc (see below). ``;`` as a statement separator is entirely "
"optional."
msgstr ""
"Les instructions sont standard et peuvent être des affectations, des appels "
"de fonctions, des structure de contrôle, etc (voir ci-dessous). ``;`` "
"utilisé comme séparateur d'instructions est entièrement facultatif."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:793
msgid "if/else/elif"
msgstr "if/else/elif (si / sinon / sinon-si)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:795
msgid ""
"Simple conditions are created by using the ``if``/``else``/``elif`` syntax. "
"Parenthesis around conditions are allowed, but not required. Given the "
"nature of the tab-based indentation, ``elif`` can be used instead of "
"``else``/``if`` to maintain a level of indentation."
msgstr ""
"De simples conditions sont créées en utilisant la syntaxe ``if``/``else``/"
"``elif``. Les parenthèses autour des conditions sont autorisées, mais pas "
"obligatoires. Étant donné la nature de l'indentation par onglets, ``elif`` "
"peut être utilisé à la place de ``else``/``if`` pour maintenir le niveau "
"d'indentation."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:809
msgid "Short statements can be written on the same line as the condition::"
msgstr ""
"Les instructions courtes peuvent être écrites sur la même ligne que la "
"condition :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:816
msgid ""
"Sometimes, you might want to assign a different initial value based on a "
"boolean expression. In this case, ternary-if expressions come in handy::"
msgstr ""
"Parfois, il peut être nécessaire d'affecter une valeur initiale différente, "
"basée sur une expression booléenne. Dans ce cas, les conditions ternaires "
"peuvent être utiles :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:825
msgid ""
"Simple loops are created by using ``while`` syntax. Loops can be broken "
"using ``break`` or continued using ``continue``:"
msgstr ""
"Les boucles simples sont créées en utilisant la syntaxe ``while``. Elles "
"peuvent être interrompues en utilisant ``break`` ou poursuivies en utilisant "
"``continue`` :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:836
msgid ""
"To iterate through a range, such as an array or table, a *for* loop is used. "
"When iterating over an array, the current array element is stored in the "
"loop variable. When iterating over a dictionary, the *key* is stored in the "
"loop variable."
msgstr ""
"Pour itérer à travers une plage, telle qu'un tableau ou une table, une "
"boucle *for* est utilisée. Lors de l'itération dans un tableau, l'élément "
"courant du tableau est stocké dans la variable de la boucle. Lors de "
"l'itération sur un dictionnaire, la *key* est stockée dans la variable de la "
"boucle."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:871
msgid ""
"A ``match`` statement is used to branch execution of a program. It's the "
"equivalent of the ``switch`` statement found in many other languages, but "
"offers some additional features."
msgstr ""
"L'instruction ``match`` est utilisée pour réaliser un branchement de "
"l’exécution d'un programme. Elle est semblable à l'instruction ``switch`` "
"présente en beaucoup d'autres langages mais elle procure cependant quelques "
"fonctionnalités supplémentaires."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:874
msgid "Basic syntax::"
msgstr "Syntaxe de base :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:885
msgid "**Crash-course for people who are familiar with switch statements**:"
msgstr ""
"**Cours rapide pour ceux qui sont familiers avec les instructions switch** :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:887
msgid "Replace ``switch`` with ``match``."
msgstr "Remplacez ``switch`` par ``match``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:888
msgid "Remove ``case``."
msgstr "Supprimer ``case``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:889
msgid ""
"Remove any ``break``\\ s. If you don't want to ``break`` by default, you can "
"use ``continue`` for a fallthrough."
msgstr ""
"Enlevez tous les ``break``. Si vous ne voulez pas ``break`` par défaut, vous "
"pouvez utiliser ``continue`` pour poursuivre l’exécution de ``match``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:890
msgid "Change ``default`` to a single underscore."
msgstr "Remplacer ``default`` par un unique underscore (_)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:893
msgid "**Control flow**:"
msgstr "**Contrôle du flux d’exécution** :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:895
msgid ""
"The patterns are matched from top to bottom. If a pattern matches, the first "
"corresponding block will be executed. After that, the execution continues "
"below the ``match`` statement. You can use ``continue`` to stop execution in "
"the current block and check for an additional match in the patterns below it."
msgstr ""
"Les expressions sont comparées du haut vers le bas. Si une expression "
"correspond, le premier bloc de code correspondant sera exécuté. Après cela, "
"l’exécution continuera après le bloc d'instructions ``match``. Vous pouvez "
"utiliser ``continue`` pour arrêter l'exécution dans le bloc en cours et "
"vérifier une correspondance supplémentaire dans les expressions en dessous "
"de celui-ci."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:899
msgid "There are 6 pattern types:"
msgstr "Il y a 6 types d'expressions :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:911
msgid "Constant pattern"
msgstr "Modèle constant"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:902
msgid "Constant primitives, like numbers and strings::"
msgstr ""
"Les constantes primitives, telles que les nombres et les chaînes de "
"caractères :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:923
msgid "Variable pattern"
msgstr "Modèle variable"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:914
msgid "Matches the contents of a variable/enum::"
msgstr "Correspond au contenu d'une variable/énumération :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:937
msgid "Wildcard pattern"
msgstr "Motif générique (joker/wildcard)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:926
msgid "This pattern matches everything. It's written as a single underscore."
msgstr ""
"Cette expression correspond à toute possibilité. Elle est écrite sous la "
"forme d'un simple underscore (_)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:928
msgid ""
"It can be used as the equivalent of the ``default`` in a ``switch`` "
"statement in other languages::"
msgstr ""
"Elle peut être utilisée comme l’équivalent de ``default`` de l'expression "
"``switch`` dans d'autres langages :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:950
msgid "Binding pattern"
msgstr "Expression de liaison"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:940
msgid ""
"A binding pattern introduces a new variable. Like the wildcard pattern, it "
"matches everything - and also gives that value a name. It's especially "
"useful in array and dictionary patterns::"
msgstr ""
"Une expression de liaison introduit une nouvelle variable. Comme le "
"caractère joker (wildcard), elle correspond à toutes les possibilités - et "
"donne aussi un nom à cette valeur. Elle est particulièrement utile avec les "
"tableaux et les dictionnaires :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:971
msgid "Array pattern"
msgstr "Modèle de tableau"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:953
msgid ""
"Matches an array. Every single element of the array pattern is a pattern "
"itself, so you can nest them."
msgstr ""
"Elle correspond à un tableau. Chaque élément du modèle de tableau est un "
"modèle lui-même, de sorte que vous pouvez les imbriquer."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:955
msgid ""
"The length of the array is tested first, it has to be the same size as the "
"pattern, otherwise the pattern doesn't match."
msgstr ""
"La longueur du tableau est d'abord testée, elle doit être de la même taille "
"que l'expression, sinon cette dernière ne correspondra pas."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:957
msgid ""
"**Open-ended array**: An array can be bigger than the pattern by making the "
"last subpattern ``..``."
msgstr ""
"**Tableau ouvert** : Un tableau peut être plus grand que l'expression en "
"faisant de ``..`` la dernière sous-expression."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:959
msgid "Every subpattern has to be comma-separated."
msgstr "Chaque sous-expression doit être séparée par des virgules."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:998
msgid "Dictionary pattern"
msgstr "Modèle de dictionnaire"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:974
msgid ""
"Works in the same way as the array pattern. Every key has to be a constant "
"pattern."
msgstr ""
"Fonctionne de la même manière que le modèle du tableau. Chaque clé doit être "
"une expression constante."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:976
msgid ""
"The size of the dictionary is tested first, it has to be the same size as "
"the pattern, otherwise the pattern doesn't match."
msgstr ""
"La taille du dictionnaire est d'abord testée, elle doit être de la même "
"taille que l'expression, sinon l'expression ne correspondra pas."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:978
msgid ""
"**Open-ended dictionary**: A dictionary can be bigger than the pattern by "
"making the last subpattern ``..``."
msgstr ""
"**Dictionnaire ouvert** : Un dictionnaire peut être plus grand que "
"l'expression en faisant de ``..`` le dernier sous-modèle."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:980
msgid "Every subpattern has to be comma separated."
msgstr "Chaque sous-expression doit être séparée par des virgules."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:982
msgid ""
"If you don't specify a value, then only the existence of the key is checked."
msgstr ""
"Si vous ne spécifiez pas de valeur, seule l'existence de la clé est vérifiée."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:984
msgid "A value pattern is separated from the key pattern with a ``:``."
msgstr ""
"Une expression de valeur est séparée de l'expression de clé par un ``:`` ."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1011
msgid "Multiple patterns"
msgstr "Expressions multiples"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1001
msgid ""
"You can also specify multiple patterns separated by a comma. These patterns "
"aren't allowed to have any bindings in them."
msgstr ""
"Vous pouvez également spécifier plusieurs expressions séparées par une "
"virgule. Ces expressions ne peuvent être des expressions de liaisons."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1014
msgid "Classes"
msgstr "Classes"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1016
msgid ""
"By default, all script files are unnamed classes. In this case, you can only "
"reference them using the file's path, using either a relative or an absolute "
"path. For example, if you name a script file ``character.gd``::"
msgstr ""
"Par défaut, tous les fichiers scripts sont des classes sans nom. Dans ce "
"cas, vous pouvez uniquement les référencer en utilisant le chemin du "
"fichier, en utilisant un chemin relatif ou un chemin absolu. Par exemple, si "
"vous nommez un fichier de script ``character.gd`` :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1029
msgid ""
"Instead, you can give your class a name to register it as a new type in "
"Godot's editor. For that, you use the ``class_name`` keyword. You can add an "
"optional comma followed by a path to an image, to use it as an icon. Your "
"class will then appear with its new icon in the editor::"
msgstr ""
"A la place, vous pouvez donner un nom à votre classe pour l'enregistrer en "
"tant que nouveau type dans l'éditeur de Godot. Pour cela, utilisez le mot "
"clé ``class_name``. Vous pouvez éventuellement ajouter une virgule suivie "
"d'un chemin vers une image pour l'utiliser comme icône. Votre classe "
"apparaîtra alors avec sa nouvelle icône dans l'éditeur :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1041
msgid "Here's a class file example:"
msgstr "Voici un exemple de fichier de classe :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1063
msgid ""
"Godot's class syntax is compact: it can only contain member variables or "
"functions. You can use static functions, but not static member variables. In "
"the same way, the engine initializes variables every time you create an "
"instance, and this includes arrays and dictionaries. This is in the spirit "
"of thread safety, since scripts can be initialized in separate threads "
"without the user knowing."
msgstr ""
"La syntaxe de classe de Godot est compacte : elle ne peut contenir que des "
"membres variables ou des fonctions. Vous pouvez utiliser des fonctions "
"statiques, mais pas des membres variables statiques. De la même manière, le "
"moteur initialise les variables chaque fois que vous créez une instance, ce "
"qui inclut les tableaux et les dictionnaires. Ceci est dans l'esprit de la "
"sécurité des threads, car les scripts peuvent être initialisés dans des "
"threads séparés sans que l'utilisateur n'en soit informé."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1071
msgid "Inheritance"
msgstr "Héritage"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1073
msgid "A class (stored as a file) can inherit from:"
msgstr "Une classe (stockée sous forme de fichier) peut hériter de :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1075
msgid "A global class."
msgstr "Une classe globale."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1076
msgid "Another class file."
msgstr "Un autre fichier de classe."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1077
msgid "An inner class inside another class file."
msgstr "Une classe interne à l'intérieur d'un autre fichier de classe."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1079
msgid "Multiple inheritance is not allowed."
msgstr "L'héritage multiple n'est pas autorisé."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1081
msgid "Inheritance uses the ``extends`` keyword::"
msgstr "L'héritage utilise le mot-clé ``extends`` :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1093
msgid ""
"To check if a given instance inherits from a given class, the ``is`` keyword "
"can be used::"
msgstr ""
"Pour vérifier si une instance donnée hérite d'une classe donnée, le mot-clé "
"``is`` peut être utilisé :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1105
msgid ""
"To call a function in a *parent class* (i.e. one ``extend``-ed in your "
"current class), prepend ``.`` to the function name::"
msgstr ""
"Pour appeler une fonction dans une *classe parent* (c'est-à-dire une qui a "
"été ``extend`` par votre classe courante), préfixez ``.`` au nom de la "
"fonction :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1110
msgid ""
"This is especially useful because functions in extending classes replace "
"functions with the same name in their parent classes. If you still want to "
"call them, you can prefix them with ``.`` (like the ``super`` keyword in "
"other languages)::"
msgstr ""
"Ceci est particulièrement utile parce que les fonctions d'extension de "
"classes remplacent les fonctions portant le même nom dans leurs classes de "
"base. Donc, si vous voulez quand même les appeler, vous pouvez utiliser ``."
"`` ( équivalent au mot-clé ``super`` dans d'autres langages ) :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1118
msgid ""
"Default functions like  ``_init``, and most notifications such as "
"``_enter_tree``, ``_exit_tree``, ``_process``, ``_physics_process``, etc. "
"are called in all parent classes automatically. There is no need to call "
"them explicitly when overloading them."
msgstr ""
"Rappelez-vous que les fonctions par défaut telles que ``_init``, et la "
"plupart des notifications telles que ``_enter_tree``, ``_exit_tree``, "
"``_process``, ``_physics_process``, etc. sont appelées automatiquement dans "
"toutes les classes de base. Il est donc uniquement nécessaire d'appeler la "
"fonction explicitement lorsqu'elle est surchargée."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1125
msgid "Class Constructor"
msgstr "Constructeur de classe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1127
msgid ""
"The class constructor, called on class instantiation, is named ``_init``. As "
"mentioned earlier, the constructors of parent classes are called "
"automatically when inheriting a class. So, there is usually no need to call "
"``._init()`` explicitly."
msgstr ""
"Le constructeur de classe, appelé instanciation de classe, est nommé "
"``_init``. Comme mentionné précédemment, les constructeurs des classes "
"parentes sont appelés automatiquement lors de l'héritage d'une classe. Il "
"n'est donc généralement pas nécessaire d'appeler ``._init()`` explicitement."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1132
msgid ""
"Unlike the call of a regular function, like in the above example with ``."
"some_func``, if the constructor from the inherited class takes arguments, "
"they are passed like this::"
msgstr ""
"Contrairement à l'appel d'une fonction régulière comme dans l'exemple ci-"
"dessus avec ``.some_func``, si le constructeur de la classe héritée prend "
"des arguments, ils sont passés comme ceci :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1139
msgid "This is better explained through examples. Consider this scenario::"
msgstr ""
"Ceci est mieux expliqué par des exemples. Disons que nous avons ce scénario :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1162
msgid "There are a few things to keep in mind here:"
msgstr "Il y a plusieurs choses à garder à l'esprit ici :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1164
msgid ""
"If the inherited class (``State.gd``) defines a ``_init`` constructor that "
"takes arguments (``e`` in this case), then the inheriting class (``Idle."
"gd``) *must* define ``_init`` as well and pass appropriate parameters to "
"``_init`` from ``State.gd``."
msgstr ""
"Si la classe héritée (``State.gd``) définit un constructeur ``_init`` qui "
"prend des arguments (``e`` dans ce cas), alors la classe héritant (``Idle."
"gd``) *doit* définir aussi ``_init`` et à passer les paramètres appropriés à "
"``_init`` depuis ``State.gd``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1167
msgid ""
"``Idle.gd`` can have a different number of arguments than the parent class "
"``State.gd``."
msgstr ""
"``Idle.gd`` peut avoir un nombre différent d'arguments que la classe de base "
"``State.gd``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1168
msgid ""
"In the example above, ``e`` passed to the ``State.gd`` constructor is the "
"same ``e`` passed in to ``Idle.gd``."
msgstr ""
"Dans l'exemple ci-dessus, ``e`` passé au constructeur ``State.gd`` est le "
"même ``e`` passé à ``Idle.gd``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1170
msgid ""
"If ``Idle.gd``'s ``_init`` constructor takes 0 arguments, it still needs to "
"pass some value to the ``State.gd`` parent class, even if it does nothing. "
"This brings us to the fact that you can pass literals in the base "
"constructor as well, not just variables. eg.::"
msgstr ""
"Si le constructeur ``_init`` de ``Idle.gd`` prend 0 arguments, il doit tout "
"de même transmettre une valeur à la classe de base ``State.gd``, même si "
"elle ne fait rien. Ce qui nous amène au fait que vous pouvez aussi passer "
"des littéraux dans le constructeur de base, pas seulement des variables. Par "
"exemple :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1180
msgid "Inner classes"
msgstr "Classes internes"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1182
msgid ""
"A class file can contain inner classes. Inner classes are defined using the "
"``class`` keyword. They are instanced using the ``ClassName.new()`` function."
msgstr ""
"Un fichier de classe peut contenir des classes internes. Les classes "
"internes sont définies à l'aide du mot-clé ``class``. Ils sont instanciés à "
"l'aide de la fonction ``ClassName.new()``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1207
msgid "Classes as resources"
msgstr "Les classes comme ressources"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1209
msgid ""
"Classes stored as files are treated as :ref:`resources <class_GDScript>`. "
"They must be loaded from disk to access them in other classes. This is done "
"using either the ``load`` or ``preload`` functions (see below). Instancing "
"of a loaded class resource is done by calling the ``new`` function on the "
"class object::"
msgstr ""
"Les classes stockées en tant que fichiers sont traitées comme :ref:"
"`ressources <class_GDScript>`. Elles doivent être chargées à partir du "
"disque pour y accéder à partir d'autres classes. Cela se fait soit à l'aide "
"des fonctions ``load`` ou ``preload`` (voir ci-dessous). L'instanciation "
"d'une ressource de classe chargée se fait en appelant la fonction ``new`` "
"sur l'objet de classe :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1226
msgid "Exports"
msgstr "Exports"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1230
msgid ""
"Documentation about exports has been moved to :ref:`doc_gdscript_exports`."
msgstr ""
"La documentation à propos des exports a été déplacé vers :ref:"
"`doc_gdscript_exports`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1233
msgid "Setters/getters"
msgstr "Setters/getters"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1235
msgid ""
"It is often useful to know when a class' member variable changes for "
"whatever reason. It may also be desired to encapsulate its access in some "
"way."
msgstr ""
"Il est souvent utile de savoir quand une variable membre d'une classe change "
"pour une raison quelconque. Il peut également être souhaitable d'encapsuler "
"son accès d'une manière ou d'une autre."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1238
msgid ""
"For this, GDScript provides a *setter/getter* syntax using the ``setget`` "
"keyword. It is used directly after a variable definition:"
msgstr ""
"Pour cela, GDScript fournit une syntaxe *setter/getter* en utilisant le mot-"
"clé ``setget``. Il est utilisé directement après une définition de variable :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1245
msgid ""
"Whenever the value of ``variable`` is modified by an *external* source (i.e. "
"not from local usage in the class), the *setter* function (``setterfunc`` "
"above) will be called. This happens *before* the value is changed. The "
"*setter* must decide what to do with the new value. Vice versa, when "
"``variable`` is accessed, the *getter* function (``getterfunc`` above) must "
"``return`` the desired value. Below is an example::"
msgstr ""
"Chaque fois que la valeur de la ``variable`` est modifiée par une source "
"*externe* (c'est-à-dire qui ne provient pas de l'utilisation locale dans la "
"classe), la fonction *setter* (``setterfunc`` ci-dessus) sera appelée. Ceci "
"se produit *avant* que la valeur soit changée. Le *setter* doit décider quoi "
"faire avec la nouvelle valeur. Inversement, lorsqu'on accède à la "
"``variable``, la fonction *getter* (``getterfunc`` ci-dessus) doit "
"``return`` la valeur désirée. En voici un exemple :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1261
msgid "Either of the *setter* or *getter* functions can be omitted::"
msgstr "Les fonctions *setter* ou *getter* peuvent être omises :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1268
msgid ""
"Setters and getters are useful when :ref:`exporting variables "
"<doc_gdscript_exports>` to the editor in tool scripts or plugins, for "
"validating input."
msgstr ""
"Les setters et les getters sont utiles pour :ref:`exporter les variables "
"<doc_gdscript_exports>` vers l'éditeur dans des scripts d'outils ou des plug-"
"ins, pour la validation des entrées."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1271
msgid ""
"As said, *local* access will *not* trigger the setter and getter. Here is an "
"illustration of this:"
msgstr ""
"L'accès *local* ne déclenchera *pas* le setter et le getter. En voici une "
"illustration :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1288
msgid "Tool mode"
msgstr "Mode tool(outil)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1290
msgid ""
"By default, scripts don't run inside the editor and only the exported "
"properties can be changed. In some cases, it is desired that they do run "
"inside the editor (as long as they don't execute game code or manually avoid "
"doing so). For this, the ``tool`` keyword exists and must be placed at the "
"top of the file::"
msgstr ""
"Par défaut, les scripts ne s'exécutent pas dans l'éditeur et seules les "
"propriétés exportées peuvent être modifiées. Dans certains cas, il est "
"souhaitable qu'ils s'exécutent dans l'éditeur (tant qu'ils n'exécutent pas "
"le code du jeu ou évitent de le faire manuellement). Pour cela, le mot-clé "
"``tool`` existe et doit être placé en haut du fichier :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1304
msgid "See :ref:`doc_running_code_in_the_editor` for more information."
msgstr "Voir :ref:`doc_running_code_in_the_editor` pour plus d'informations."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1306
msgid ""
"Be cautious when freeing nodes with ``queue_free()`` or ``free()`` in a tool "
"script (especially the script's owner itself). As tool scripts run their "
"code in the editor, misusing them may lead to crashing the editor."
msgstr ""
"Faites attention en supprimant des nœuds avec ``queue_free()`` ou ``free()`` "
"dans un script outil (en particulier le propriétaire du script). Puisque les "
"scripts outils s'exécutent dans l'éditeur, une erreur pourrait le faire "
"crasher."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1312
msgid "Memory management"
msgstr "Gestion de la mémoire"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1314
msgid ""
"If a class inherits from :ref:`class_Reference`, then instances will be "
"freed when no longer in use. No garbage collector exists, just reference "
"counting. By default, all classes that don't define inheritance extend "
"**Reference**. If this is not desired, then a class must inherit :ref:"
"`class_Object` manually and must call instance.free(). To avoid reference "
"cycles that can't be freed, a ``weakref`` function is provided for creating "
"weak references."
msgstr ""
"Si une classe hérite de :ref:`class_Reference`, les instances seront "
"libérées lorsqu'elles ne seront plus utilisées. Il n'y a pas de Garbage "
"Collector, uniquement un comptage des références. Par défaut, toutes les "
"classes qui ne définissent pas un héritage étendent de **Reference**. Si "
"cela n'est pas désiré, alors une classe doit hériter :ref:`class_Object` "
"manuellement et doit appeler instance.free(). Pour éviter les cycles de "
"référence qui ne peuvent pas être libérés, une fonction ``weakref`` est "
"fournie pour créer des références faibles."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1322
msgid ""
"Alternatively, when not using references, the "
"``is_instance_valid(instance)`` can be used to check if an object has been "
"freed."
msgstr ""
"Alternativement, quand vous n'utilisez pas de références, le "
"``is_instance_valid(instance)`` peut être utilisé pour vérifier si un objet "
"a été libéré."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1329
msgid "Signals"
msgstr "Signaux"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1331
msgid ""
"Signals are a tool to emit messages from an object that other objects can "
"react to. To create custom signals for a class, use the ``signal`` keyword."
msgstr ""
"Les signaux sont un outil permettant d’émettre des messages à partir d’un "
"objet auquel d’autres objets peuvent réagir. Pour créer des signaux "
"personnalisés pour une classe, utilisez le mot-clé ``signal``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1344
msgid ""
"Signals are a `Callback <https://en.wikipedia.org/wiki/"
"Callback_(computer_programming)>`_ mechanism. They also fill the role of "
"Observers, a common programming pattern. For more information, read the "
"`Observer tutorial <https://gameprogrammingpatterns.com/observer.html>`_ in "
"the Game Programming Patterns ebook."
msgstr ""
"Les signaux sont comme des `fonctions de rappel <https://fr.wikipedia.org/"
"wiki/Fonction_de_rappel>`_. Ils remplissent également le rôle "
"d'Observateurs, un patron de conception courant en programmation. Pour plus "
"d'informations, lisez le `tutoriel sur les Observateurs <https://"
"gameprogrammingpatterns.com/observer.html>`_ (en anglais), de l'e-book Game "
"Programming Patterns."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1351
msgid ""
"You can connect these signals to methods the same way you connect built-in "
"signals of nodes like :ref:`class_Button` or :ref:`class_RigidBody`."
msgstr ""
"Vous pouvez connecter ces signaux à des méthodes de la même manière que vous "
"connectez les signaux intégrés de nœuds tels que :ref:`class_Button` ou :ref:"
"`class_RigidBody`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1354
msgid ""
"In the example below, we connect the ``health_depleted`` signal from a "
"``Character`` node to a ``Game`` node. When the ``Character`` node emits the "
"signal, the game node's ``_on_Character_health_depleted`` is called::"
msgstr ""
"Dans l'exemple ci-dessous, on connecte le signal ``health_depleted`` du nœud "
"``Character`` au nœud ``Game``. Quand le nœud ``Character`` émettra ce "
"signal, la fonction de rappel ``_on_Character_health_depleted`` du nœud "
"``Game`` sera appelée ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1368
msgid "You can emit as many arguments as you want along with a signal."
msgstr ""
"Vous pouvez émettre autant d'arguments que vous souhaitez avec un signal."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1370
msgid ""
"Here is an example where this is useful. Let's say we want a life bar on "
"screen to react to health changes with an animation, but we want to keep the "
"user interface separate from the player in our scene tree."
msgstr ""
"Voici un exemple où cela est utile. Si nous voulons ajouter une barre de vie "
"qui s'anime quand les points de vie changent, mais nous souhaitons séparer "
"l'interface utilisateur du joueur dans notre arbre de scène."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1374
msgid ""
"In our ``Character.gd`` script, we define a ``health_changed`` signal and "
"emit it with :ref:`Object.emit_signal() <class_Object_method_emit_signal>`, "
"and from a ``Game`` node higher up our scene tree, we connect it to the "
"``Lifebar`` using the :ref:`Object.connect() <class_Object_method_connect>` "
"method::"
msgstr ""
"Dans notre script ``Character.gd``, on va définir un signal "
"``health_changed`` et l'émettre avec :ref:`Object.emit_signal() "
"<class_Object_method_emit_signal>`, et depuis le nœud ``Game`` plus haut "
"dans l'arborescence on le connecte au nœud ``Lifebar`` avec :ref:`Object."
"connect() <class_Object_method_connect>` :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1415
msgid ""
"To use signals, your class has to extend the ``Object`` class or any type "
"extending it like ``Node``, ``KinematicBody``, ``Control``..."
msgstr ""
"Pour utiliser les signaux, votre classe doit hériter de la classe ``Object`` "
"ou de n'importe laquelle de ses classes filles comme ``Node``, "
"``KinematicBody``, ``Control``..."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1418
msgid ""
"In the ``Game`` node, we get both the ``Character`` and ``Lifebar`` nodes, "
"then connect the character, that emits the signal, to the receiver, the "
"``Lifebar`` node in this case."
msgstr ""
"Dans le nœud ``Game``, on récupère les nœuds ``Character`` et ``Lifebar`` "
"puis on connecte le personnage, qui émet le signal, au récepteur c'est-à-"
"dire ``Lifebar`` dans notre cas."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1432
msgid ""
"This allows the ``Lifebar`` to react to health changes without coupling it "
"to the ``Character`` node."
msgstr ""
"Cela permet alors à la ``Lifebar`` de réagir aux changements de points de "
"vie sans avoir à la coupler au nœud ``Character``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1435
msgid ""
"You can write optional argument names in parentheses after the signal's "
"definition::"
msgstr ""
"Il est possible d'ajouter des arguments optionnels entre parenthèses après "
"la définition du signal :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1441
msgid ""
"These arguments show up in the editor's node dock, and Godot can use them to "
"generate callback functions for you. However, you can still emit any number "
"of arguments when you emit signals; it's up to you to emit the correct "
"values."
msgstr ""
"Ces arguments seront affichés dans le dock Nœud et Godot les utilisera pour "
"générer les fonctions de rappel automatiquement pour vous. Dans tous les "
"cas, vous pouvez émettre autant d'arguments que vous souhaitez avec vos "
"signaux ; c'est à vous d'émettre les bonnes valeurs."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1447
msgid ""
"GDScript can bind an array of values to connections between a signal and a "
"method. When the signal is emitted, the callback method receives the bound "
"values. These bound arguments are unique to each connection, and the values "
"will stay the same."
msgstr ""
"GDScript peut lier un tableau de valeurs à des connexions entre un signal et "
"une méthode. Lorsque le signal est émis, la méthode de rappel reçoit les "
"valeurs liées. Ces arguments liés sont uniques pour chaque connexion et les "
"valeurs resteront les mêmes."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1452
msgid ""
"You can use this array of values to add extra constant information to the "
"connection if the emitted signal itself doesn't give you access to all the "
"data that you need."
msgstr ""
"Vous pouvez utiliser ces arguments pour ajouter des informations "
"supplémentaires à la connexion si le signal émit ne vous donne pas accès à "
"toutes les informations dont vous avez besoin."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1456
msgid ""
"Building on the example above, let's say we want to display a log of the "
"damage taken by each character on the screen, like ``Player1 took 22 damage."
"``. The ``health_changed`` signal doesn't give us the name of the character "
"that took damage. So when we connect the signal to the in-game console, we "
"can add the character's name in the binds array argument::"
msgstr ""
"À partir de l'exemple présenté plus haut, nous allons afficher une liste des "
"dégâts reçus par chaque personnage à l'écran, par exemple ``Player1 took 22 "
"damage.``. Le signal ``health_changed`` ne nous donne pas le nom du "
"personnage qui a pris des dégâts. Alors, quand on connectera le signal à la "
"console en jeu, il faudra ajouter le nom du personnage parmi les arguments "
"du signal émit :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1470
msgid ""
"Our ``BattleLog`` node receives each element in the binds array as an extra "
"argument::"
msgstr ""
"Le noeud ``BattleLog`` recevra chaque élément dans les paramètres de sa "
"fonction de rappel :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1483
msgid "Coroutines with yield"
msgstr "Coroutines avec yield"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1485
msgid ""
"GDScript offers support for `coroutines <https://en.wikipedia.org/wiki/"
"Coroutine>`_ via the :ref:`yield<class_@GDScript_method_yield>` built-in "
"function. Calling ``yield()`` will immediately return from the current "
"function, with the current frozen state of the same function as the return "
"value. Calling ``resume()`` on this resulting object will continue execution "
"and return whatever the function returns. Once resumed, the state object "
"becomes invalid. Here is an example::"
msgstr ""
"GDScript prend en charge les `coroutines <https://en.wikipedia.org/wiki/"
"Coroutine>`_ via la fonction intégrée :ref:"
"`yield<class_@GDScript_method_yield>`. L'appel à ``yield()`` retournera "
"immédiatement à la fonction actuelle, avec l'état gelé actuel de la même "
"fonction que la valeur de retour. L'appel de ``resume()`` sur cet objet "
"résultant continuera l'exécution et retournera ce que la fonction retourne. "
"Une fois repris, l'objet état devient invalide. Voici un exemple :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1506
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1527
msgid "Will print::"
msgstr "Imprimera :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1512
msgid ""
"It is also possible to pass values between ``yield()`` and ``resume()``, for "
"example::"
msgstr ""
"Il est également possible de passer des valeurs entre ``yield()`` et "
"``resume()``, par exemple :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1533
msgid ""
"Remember to save the new function state, when using multiple ``yield``\\s::"
msgstr ""
"N'oubliez pas de sauvegarder le nouvel état de la fonction lorsque vous "
"utilisez de multiples ``yield``\\s :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1548
msgid "Coroutines & signals"
msgstr "Coroutines et signaux"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1550
msgid ""
"The real strength of using ``yield`` is when combined with signals. "
"``yield`` can accept two arguments, an object and a signal. When the signal "
"is received, execution will recommence. Here are some examples::"
msgstr ""
"La force réelle de l'utilisation de ``yield`` est lorsqu'il est combiné avec "
"des signaux. ``yield`` peut accepter deux paramètres, un objet et un signal. "
"Lorsque le signal est reçu, l'exécution reprend. Voici quelques exemples :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1563
msgid ""
"Coroutines themselves use the ``completed`` signal when they transition into "
"an invalid state, for example::"
msgstr ""
"Les coroutines elles-mêmes utilisent le signal ``completed`` lorsqu'elles "
"passent à un état invalide, par exemple :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1575
msgid ""
"``my_func`` will only continue execution once both buttons have been pressed."
msgstr ""
"``my_func`` ne poursuivra l'exécution que lorsque les deux boutons auront "
"été pressés."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1577
msgid "You can also get the signal's argument once it's emitted by an object:"
msgstr ""
"Vous pouvez également obtenir l'argument du signal une fois qu'il est émis "
"par un objet :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1584
msgid ""
"If you're unsure whether a function may yield or not, or whether it may "
"yield multiple times, you can yield to the ``completed`` signal "
"conditionally:"
msgstr ""
"Si vous n'êtes pas sûr qu'une fonction puisse yield ou non, ou si elle peut "
"yield plusieurs fois, vous pouvez yield au signal ``completed`` de manière "
"conditionnelle :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1606
msgid ""
"This ensures that the function returns whatever it was supposed to return "
"regardless of whether coroutines were used internally. Note that using "
"``while`` would be redundant here as the ``completed`` signal is only "
"emitted when the function didn't yield anymore."
msgstr ""
"Cela garantit que la fonction renvoie ce qu'elle était censée renvoyer, "
"indépendamment du fait que des coroutines aient été utilisées en interne. "
"Notez que l'utilisation de ``while`` serait redondante ici car le signal "
"``completed`` n'est émis que lorsque la fonction ne yield plus."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1612
msgid "Onready keyword"
msgstr "Mot-clé onready"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1614
msgid ""
"When using nodes, it's common to desire to keep references to parts of the "
"scene in a variable. As scenes are only warranted to be configured when "
"entering the active scene tree, the sub-nodes can only be obtained when a "
"call to ``Node._ready()`` is made."
msgstr ""
"Lors de l'utilisation de nœuds, il est très courant de vouloir garder des "
"références à des parties de la scène dans une variable. Comme les scènes ne "
"peuvent être configurées que lors de l'entrée dans l'arbre des scènes "
"actives, les sous-nœuds ne peuvent être obtenus que lorsqu'un appel à ``Node."
"_ready()`` est fait."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1627
msgid ""
"This can get a little cumbersome, especially when nodes and external "
"references pile up. For this, GDScript has the ``onready`` keyword, that "
"defers initialization of a member variable until ``_ready()`` is called. It "
"can replace the above code with a single line::"
msgstr ""
"Cela peut devenir un peu encombrant, surtout lorsque les nœuds et les "
"références externes s’accumulent. Pour cela, GDScript a le mot-clé "
"``onready``, qui reporte l'initialisation d'une variable membre jusqu'à ce "
"que ``_ready()`` soit appelé. Il peut remplacer le code ci-dessus par une "
"seule ligne :"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1635
msgid "Assert keyword"
msgstr "Mot-clé d'assertion"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1637
msgid ""
"The ``assert`` keyword can be used to check conditions in debug builds. "
"These assertions are ignored in non-debug builds. This means that the "
"expression passed as argument won't be evaluated in a project exported in "
"release mode. Due to this, assertions must **not** contain expressions that "
"have side effects. Otherwise, the behavior of the script would vary "
"depending on whether the project is run in a debug build."
msgstr ""
"Le mot-clé ``assert`` sert à vérifier une condition dans un build de "
"débogage. Cette instruction est ignorée dans un build sans débogage, c'est-à-"
"dire que l'expression passée en argument de ``assert`` ne sera pas évaluée "
"dans un projet exporté en mode publication. De ce fait, ``assert`` ne doit "
"**pas** contenir des expressions ayant des effets secondaires. Sinon, le "
"comportement du script variera selon s'il est exécuté dans un build de "
"débogage ou de publication."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1649
msgid ""
"When running a project from the editor, the project will be paused if an "
"assertion error occurs."
msgstr ""
"Lors de l'exécution d'un projet depuis l'éditeur, celui-ci sera mis en pause "
"en cas d'erreur d'assertion."
