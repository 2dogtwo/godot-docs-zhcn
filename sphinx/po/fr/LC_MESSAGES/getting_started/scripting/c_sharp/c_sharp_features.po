# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-01 14:18+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:4
msgid "Features"
msgstr "Fonctionnalités"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:6
msgid ""
"This page provides an overview of the commonly used features of both C# and "
"Godot and how they are used together."
msgstr ""
"Cette page donne un aperçu des fonctionnalités couramment utilisées de C# et "
"de Godot, et de la façon dont elles sont utilisées ensemble."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:10
msgid "Type conversion and casting"
msgstr "Conversion de type et Casting"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:12
msgid ""
"C# is a statically typed language. Therefore, you can't do the following:"
msgstr ""
"C# est un langage à typage statique. Par conséquent, vous ne pouvez pas "
"faire ce qui suit :"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:19
msgid ""
"The method ``GetNode()`` returns a ``Node`` instance. You must explicitly "
"convert it to the desired derived type, ``Sprite`` in this case."
msgstr ""
"La méthode ``GetNode()`` retourne une instance de ``Node``. Vous devez "
"explicitement la convertir dans le type dérive que vous désirez. Dans cet "
"exemple, il s'agit de ``Sprite``."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:22
msgid "For this, you have various options in C#."
msgstr "Pour cela, en C#, vous disposez de plusieurs options."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:24
msgid "**Casting and Type Checking**"
msgstr "**Casting et vérification de type**"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:26
msgid ""
"Throws ``InvalidCastException`` if the returned node cannot be cast to "
"Sprite. You would use it instead of the ``as`` operator if you are pretty "
"sure it won't fail."
msgstr ""
"Envoie ``InvalidCastException`` si le nœud retourné ne peut pas être "
"concertit en Sprite. Utilisez le à la place de l'opérateur \"as\" si vous "
"êtes presque sûr qu'il n'échouera pas."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:34
msgid "**Using the AS operator**"
msgstr "**Utilisation de l'opérateur AS**"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:36
msgid ""
"The ``as`` operator returns null if the node cannot be cast to Sprite, and "
"for that reason, it cannot be used with value types."
msgstr ""
"L'opérateur ``as`` retourne null si le nœud ne peut pas être convertit en "
"Sprite, et pour cette raison il ne peut pas être utilisé avec les types de "
"valeurs."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:45
msgid "**Using the generic methods**"
msgstr "**Utilisation des méthodes génériques**"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:47
msgid ""
"Generic methods are also provided to make this type conversion transparent."
msgstr ""
"Des méthodes génériques sont également fournies pour rendre ce type de "
"conversion transparent."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:49
msgid ""
"``GetNode<T>()`` casts the node before returning it. It will throw an "
"``InvalidCastException`` if the node cannot be cast to the desired type."
msgstr ""
"``GetNode <T> ()`` lance le nœud avant de le retourner. Il enverra une "
"``InvalidCastException`` si le nœud ne peut pas être converti au type désiré."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:56
msgid ""
"``GetNodeOrNull<T>()`` uses the ``as`` operator and will return ``null`` if "
"the node cannot be cast to the desired type."
msgstr ""
"GetNodeOrNull<T>T>()`` utilise l'opérateur ``as`` et retourne ``null`` si le "
"nœud ne peut pas être converti au type désiré."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:64
msgid "**Type checking using the IS operator**"
msgstr "**Vérification du type à l'aide de l'opérateur IS**"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:66
msgid ""
"To check if the node can be cast to Sprite, you can use the ``is`` operator. "
"The ``is`` operator returns false if the node cannot be cast to Sprite, "
"otherwise it returns true."
msgstr ""
"Pour vérifier si le nœud peut être convertit en Sprite, vous pouvez utiliser "
"l'opérateur ``is``. L'opérateur ``is`` retourne false si le nœud ne peut pas "
"être convertit en Sprite, sinon il retourne true."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:77
msgid ""
"For more advanced type checking, you can look into `Pattern Matching "
"<https://docs.microsoft.com/en-us/dotnet/csharp/pattern-matching>`_."
msgstr ""
"Pour un contrôle de type plus avancé, vous pouvez regarder dans `Pattern "
"Matching <https://docs.microsoft.com/en-us/dotnet/csharp/pattern-matching>`_."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:82
msgid "C# signals"
msgstr "Signaux C#"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:84
msgid ""
"For a complete C# example, see the **Handling a signal** section in the step "
"by step :ref:`doc_scripting` tutorial."
msgstr ""
"Pour un exemple complet de C#, voir la section **Manipuler un signal** dans "
"le tutoriel Pas à pas :ref:`doc_scripting`."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:86
msgid ""
"Declaring a signal in C# is done with the ``[Signal]`` attribute on a "
"delegate."
msgstr ""
"Déclarer un signal en C# se fait avec l'attribut ``[Signal]`` sur un "
"delegate."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:96
msgid ""
"These signals can then be connected either in the editor or from code with "
"``Connect``."
msgstr ""
"Ces signaux peuvent ensuite être connectés soit dans l'éditeur, soit à "
"partir du code avec ``Connect``."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:116
msgid "Emitting signals is done with the ``EmitSignal`` method."
msgstr "L'émission de signaux se fait avec la méthode ``EmitSignal``."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:126
msgid ""
"Notice that you can always reference a signal name with the ``nameof`` "
"keyword (applied on the delegate itself)."
msgstr ""
"Notez que vous pouvez toujours faire référence à un nom de signal avec le "
"mot-clé \" nameof \" (appliqué sur le délégué lui-même)."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:128
msgid ""
"It is possible to bind values when establishing a connection by passing an "
"object array."
msgstr ""
"Il est possible de lier des valeurs lors de l'établissement d'une connexion "
"en passant un tableau d'objets."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:148
msgid ""
"Signals support parameters and bound values of all the `built-in types "
"<https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/"
"built-in-types-table>`_ and Classes derived from :ref:`Godot.Object "
"<class_Object>`. Consequently, any ``Node`` or ``Reference`` will be "
"compatible automatically, but custom data objects will need to extend from "
"`Godot.Object` or one of its subclasses."
msgstr ""
"Les signaux supportent les paramètres et les valeurs liées de tous les "
"`types intégrés <https://docs.microsoft.com/fr-fr/dotnet/csharp/language-"
"reference/keywords/built-in-types-table>`_ et les classes dérivées de :ref:"
"`Godot.Object <class_Object>`. Par conséquent, tout ``Node`` ou "
"``Reference`` sera automatiquement compatible mais les objets de données "
"personnalisés devront hériter de `Godot.Object` ou l'une de ses sous-classes."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_features.rst:160
msgid ""
"Finally, signals can be created by calling ``AddUserSignal``, but be aware "
"that it should be executed before any use of said signals (with ``Connect`` "
"or ``EmitSignal``)."
msgstr ""
"Enfin, les signaux peuvent être créés en appelant ``AddUserSignal``, mais "
"sachez que celui-ci doit être exécuté avant toute utilisation desdits "
"signaux (avec ``Connect`` ou ``EmitSignal``)."
