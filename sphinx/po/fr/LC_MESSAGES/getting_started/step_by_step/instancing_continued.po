# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-13 14:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:4
msgid "Instancing (continued)"
msgstr "L'instanciation (suite)"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:7
msgid "Recap"
msgstr "Récapitulatif"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:9
msgid "Instancing has many handy uses. At a glance, with instancing you have:"
msgstr ""
"L'instanciation a de nombreuses utilisations pratiques. En un coup d'œil, "
"avec l'instanciation vous avez :"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:11
msgid "The ability to subdivide scenes and make them easier to manage."
msgstr ""
"La possibilité de subdiviser les scènes et de les rendre plus faciles à "
"gérer."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:12
msgid "A tool to manage and edit multiple node instances at once."
msgstr "Un outil pour gérer et éditer plusieurs instances de nœud à la fois."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:13
msgid ""
"A way to organize and embed complex game flows or even UIs (in Godot, UI "
"Elements are nodes, too)."
msgstr ""
"Une façon d'organiser et d'intégrer des flux de jeu complexes ou même des "
"interfaces utilisateur (dans Godot, les éléments d'interface utilisateur "
"sont aussi des nœuds)."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:17
msgid "Design language"
msgstr "Langage de conception"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:19
msgid ""
"But the greatest strength that comes with instancing scenes is that it works "
"as an excellent design language. This distinguishes Godot from all the other "
"engines out there. Godot was designed from the ground up around this concept."
msgstr ""
"Mais la plus grande force qui vient avec l’instanciation des scènes est "
"qu'elle fonctionne comme un excellent langage de conception. C'est ce qui "
"distingue Godot de tous les autres moteurs. Godot a été conçu dès le départ "
"autour de ce concept."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:24
msgid ""
"When making games with Godot, the recommended approach is to dismiss most "
"common design patterns, such as MVC or Entity-Relationship diagrams, and "
"instead think about your scenes in a more natural way. Start by imagining "
"the visible elements in your game, the ones that can be named not just by a "
"programmer, but by anyone."
msgstr ""
"Lorsque vous créez des jeux avec Godot, l'approche recommandée est de "
"rejeter la plupart des modèles de conception courants, tels que les "
"diagrammes MVC ou Entity-Relationship, et de penser plutôt à vos scènes "
"d'une manière plus naturelle. Commencez par imaginer les éléments visibles "
"dans votre jeu, ceux qui peuvent être nommés non seulement par un "
"programmeur, mais par n'importe qui."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:30
msgid "For example, here's how a simple shooter game could be imagined:"
msgstr "Par exemple, voici comment imaginer un simple jeu de tir :"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:34
msgid ""
"You can come up with a diagram like this for almost any kind of game. Write "
"down the parts of the game that you can visualize, and then add arrows to "
"represent ownership of one component by another."
msgstr ""
"Vous pouvez créer un diagramme comme celui-ci pour presque tous les types de "
"jeux. Notez les parties du jeu que vous pouvez visualiser, puis ajoutez des "
"flèches pour représenter la possession d'un composant par un autre."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:38
msgid ""
"Once you have a diagram like this, the recommended process for making a game "
"is to create a scene for each element listed in the diagram. You'll use "
"instancing (either by code or directly in the editor) for the ownership "
"relationships."
msgstr ""
"Une fois que vous avez un diagramme comme celui-ci, le processus recommandé "
"pour créer un jeu est de créer une scène pour chaque élément répertorié dans "
"le diagramme. Vous utiliserez l'instanciation (soit par code ou directement "
"dans l'éditeur) pour les relations de possession."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:42
msgid ""
"A lot of time spent in programming games (or software in general) is on "
"designing an architecture and fitting game components to that architecture. "
"Designing based on scenes replaces that approach and makes development much "
"faster and more straightforward, allowing you to concentrate on the game "
"logic itself. Because most game components map directly to a scene, using a "
"design based on scene instantiation means little other architectural code is "
"needed."
msgstr ""
"Dans la programmation de jeux vidéos (ou de logiciels en général), une bonne "
"partie du temps est consacrée à concevoir une architecture et à ajouter les "
"composants du jeu dans cette architecture. La conception basée sur des "
"scènes remplace cette approche et rend le développement plus rapide et plus "
"simple, ce qui vous permet de vous concentrer sur la logique du jeu. Comme "
"la plupart des composants du jeu correspondent directement à une scène, "
"l'utilisation d'un design basé sur l'instanciation de la scène signifie que "
"peu d'autres codes architecturaux sont nécessaires."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:48
msgid ""
"Let's take a look at one more, somewhat more complex, example of an open-"
"world type game with lots of assets and nested elements:"
msgstr ""
"Jetons un coup d’œil à un exemple supplémentaire, un peu plus complexe, d'un "
"jeu de type monde ouvert avec beaucoup de ressources et d'éléments "
"imbriqués :"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:53
msgid ""
"Take a look at the room element. Let's say we started there. We could make a "
"couple of different room scenes, with different arrangements of furniture "
"(also scenes) in them. Later, we could make a house scene, connecting rooms "
"to make up its interior."
msgstr ""
"Prenons par exemple l'élément \"room\" (pièce) du diagramme. Disons que nous "
"commencions par ici. Nous pourrions alors créer quelques variantes de la "
"scène \"room\", avec différents arrangements de meubles (eux-mêmes des "
"scènes) à l'intérieur. Plus tard nous pourrions même créer une scène \"house"
"\" (maison) faisant la connexion entre les différentes scènes \"room\" et "
"créant ainsi son intérieur."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:58
msgid ""
"Then, we could make a citadel scene, which is made out of many instanced "
"houses. Then, we could start working on the world map terrain, adding the "
"citadel onto it."
msgstr ""
"Ensuite, nous pourrions faire une scène citadelle, qui est faite de "
"nombreuses maisons instanciées. Ensuite, nous pourrions commencer à "
"travailler sur le terrain de la carte du monde, en y ajoutant la citadelle."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:62
msgid ""
"Later, we could create scenes that represent guards (and other NPCs) and add "
"them to the citadel as well. As a result, they would be indirectly added to "
"the overall game world."
msgstr ""
"Plus tard, nous pourrions créer des scènes représentant des gardes (et "
"d'autres PNJs) et les ajouter à la citadelle. En conséquence, ils seraient "
"indirectement ajoutés à l'ensemble du monde du jeu."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:66
msgid ""
"With Godot, it's easy to iterate on your game like this, as all you need to "
"do is create and instance more scenes. Furthermore, the editor UI is "
"designed to be user friendly for programmers and non-programmers alike. A "
"typical team development process can involve 2D or 3D artists, level "
"designers, game designers, and animators, all working with the editor "
"interface."
msgstr ""
"Avec Godot, il est facile d'itérer sur votre jeu comme ceci, car tout ce que "
"vous avez à faire est de créer et d'instancier plus de scènes. De plus, "
"l'interface utilisateur de l'éditeur est conçue pour être conviviale pour "
"les programmeurs et les non-programmeurs. Un processus typique de "
"développement en équipe peut impliquer des artistes 2D ou 3D, des "
"concepteurs de niveaux, des concepteurs de jeux et des animateurs, tous "
"travaillant avec l'interface de l'éditeur."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:73
msgid "Information overload!"
msgstr "Surcharge d'informations !"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:75
msgid ""
"This has been a lot of high level information dropped on you all at once. "
"However, the important part of this tutorial was to create an awareness of "
"how scenes and instancing are used in real projects."
msgstr ""
"Beaucoup d'informations générales viennent de vous être données en même "
"temps. Cependant, la vocation première de ce tutoriel était de vous faire "
"prendre conscience de la manière dont les scènes et l'instanciation sont "
"utilisées dans de vrais projets."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:79
msgid ""
"Everything discussed here will become second nature to you once you start "
"making games and putting these concepts into practice. For now, don't worry "
"about it too much, and go on to the next tutorial!"
msgstr ""
"Tout ce dont il est question ici deviendra une seconde nature pour vous une "
"fois que vous commencerez à créer des jeux et à mettre ces concepts en "
"pratique. Pour l'instant, ne vous en faites pas trop, et passez au prochain "
"tutoriel !"
