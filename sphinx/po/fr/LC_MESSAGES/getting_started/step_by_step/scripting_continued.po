# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-28 16:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:4
msgid "Scripting (continued)"
msgstr "Scripting (suite)"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:7
msgid "Processing"
msgstr "Traitement"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:9
msgid ""
"Several actions in Godot are triggered by callbacks or virtual functions, so "
"there is no need to write code that runs all the time."
msgstr ""
"Plusieurs actions dans Godot sont déclenchées par des callbacks ou des "
"fonctions virtuelles, il n'y a donc pas besoin d'écrire du code qui "
"s'exécute en permanence."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:12
msgid ""
"However, it is still common to need a script to be processed on every frame. "
"There are two types of processing: idle processing and physics processing."
msgstr ""
"Cependant, il est fréquent d'avoir besoin qu'un script soit exécuté à chaque "
"rafraichissement. Il y a deux types de traitements : les traitements passifs "
"et les traitements physiques."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:16
msgid ""
"Idle processing is activated when the method :ref:`Node._process() "
"<class_Node_method__process>` is found in a script. It can be turned off and "
"on with the :ref:`Node.set_process() <class_Node_method_set_process>` "
"function."
msgstr ""
"Le traitement passif est activé lorsque la méthode :ref:`Node._process() "
"<class_Node_method__process>` se trouve dans un script. Il peut être activé "
"ou désactivé avec la fonction :ref:`Node.set_process() "
"<class_Node_method_set_process>`."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:20
msgid "This method will be called every time a frame is drawn:"
msgstr ""
"Cette méthode sera appelée à chaque fois qu'une image(frame) est dessinée :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:36
msgid ""
"It's important to bear in mind that the frequency with which ``_process()`` "
"will be called depends on how many frames per second (FPS) your application "
"is running at. This rate can vary over time and devices."
msgstr ""
"La fréquence a laquelle la méthode ``_process()`` est appelée, est "
"synchronisée avec le nombre d'images par seconde (FPS) de votre application. "
"Il est important de noter que le nombre d'images par seconde peut varier "
"avec le temps et selon les supports."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:40
msgid ""
"To help manage this variability, the ``delta`` parameter contains the time "
"elapsed in seconds as a floating-point number since the previous call to "
"``_process()``."
msgstr ""
"Pour aider à gérer cette variabilité, le paramètre ``delta`` contient le "
"temps écoulé en secondes, en virgule flottante, depuis l'appel précédent de "
"``_process()``."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:43
msgid ""
"This parameter can be used to make sure things always take the same amount "
"of time, regardless of the game's FPS."
msgstr ""
"Ce paramètre peut être utilisé pour garantir que les actions prendront le "
"même temps, quelque soit le nombre d'images par secondes du jeu."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:46
msgid ""
"For example, movement is often multiplied with a time delta to make movement "
"speed both constant and independent of the frame rate."
msgstr ""
"Par exemple, le mouvement est souvent multiplié par un temps delta pour que "
"la vitesse de mouvement soit constante et indépendante de la fréquence de "
"rafraîchissement."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:49
msgid ""
"Physics processing with ``_physics_process()`` is similar, but it should be "
"used for processes that must happen before each physics step, such as "
"controlling a character. It always runs before a physics step and it is "
"called at fixed time intervals: 60 times per second by default. You can "
"change the interval from the Project Settings, under Physics -> Common -> "
"Physics Fps."
msgstr ""
"Le traitement physique avec ``_physics_process()`` est similaire, mais "
"devrait être utilisé pour des traitements qui doivent se produire avant "
"chaque étape physique, comme lorsqu'on contrôle un personnage. Il est "
"toujours exécuté avant une étape physique et est appelé à intervalles "
"fixes : 60 fois par secondes par défaut. Vous pouvez changer l'intervalle "
"dans les paramètres du projet sous Physics -> Common -> Physics Fps."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:55
msgid ""
"The function ``_process()``, however, is not synced with physics. Its frame "
"rate is not constant and is dependent on hardware and game optimization. Its "
"execution is done after the physics step on single-threaded games."
msgstr ""
"La fonction ``_process()``, cependant, n'est pas synchronisée avec la "
"physique. Son taux de rafraîchissement n'est pas constant et dépend de "
"l'optimisation du hardware et du jeu. Son exécution se fait après le "
"traitement de la physique sur les jeux mono-threadés."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:58
msgid ""
"A simple way to see the ``_process()`` function at work is to create a scene "
"with a single Label node, with the following script:"
msgstr ""
"Une façon simple de voir la fonction ``_process()`` au travail est de créer "
"une scène avec un seul nœud Label, avec le script suivant :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:85
msgid "Which will show a counter increasing each frame."
msgstr "Ce qui montrera un compteur s'incrémentant à chaque image."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:88
msgid "Groups"
msgstr "Groupes"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:90
msgid ""
"Groups in Godot work like tags you might have come across in other software. "
"A node can be added to as many groups as desired. This is a useful feature "
"for organizing large scenes. There are two ways to add nodes to groups. The "
"first is from the UI, using the Groups button under the Node panel:"
msgstr ""
"Les groupes dans Godot fonctionnent comme les étiquettes que vous pouvez "
"trouver dans d'autres logiciels. Un nœud peut appartenir a plusieurs "
"groupes. Pour organiser de grosses scènes il peut être utile de grouper les "
"nœuds. Il y a deux façons de grouper des nœuds, la première en utilisant le "
"bouton Groupes sous le panneau Nœud via l'interface utilisateur :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:97
msgid ""
"And the second way is from code. The following script would add the current "
"node to the ``enemies`` group as soon as it appeared in the scene tree."
msgstr ""
"Et le second moyen est à partir du code. Le script suivant ajouterait le "
"nœud actuel au groupe ``enemies`` dès qu'il apparaît dans l'arborescence."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:115
msgid ""
"This way, if the player is discovered sneaking into a secret base, all "
"enemies can be notified about its alarm sounding by using :ref:`SceneTree."
"call_group() <class_SceneTree_method_call_group>`:"
msgstr ""
"De cette façon, si le joueur est découvert en s'infiltrant dans une base "
"secrète, tous les ennemis peuvent être avertis de l'alarme qu'il déclenche "
"en utilisant :ref:`SceneTree.call_group() "
"<class_SceneTree_method_call_group>` :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:132
msgid ""
"The above code calls the function ``player_was_discovered`` on every member "
"of the group ``enemies``."
msgstr ""
"Le code ci-dessus appelle la fonction ``player_was_discovered`` sur chaque "
"membre du groupe ``enemies``."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:135
msgid ""
"It is also possible to get the full list of ``enemies`` nodes by calling :"
"ref:`SceneTree.get_nodes_in_group() "
"<class_SceneTree_method_get_nodes_in_group>`:"
msgstr ""
"Il est également possible d'obtenir la liste complète des nœuds ``enemies`` "
"en appelant :ref:`SceneTree.get_nodes_in_group() "
"<class_SceneTree_method_get_nodes_in_group>` :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:148
msgid ""
"The :ref:`SceneTree <class_SceneTree>` class provides many useful methods, "
"like interacting with scenes, their node hierarchy and groups of nodes. It "
"allows you to easily switch scenes or reload them, to quit the game or pause "
"and unpause it. It even comes with interesting signals. So check it out if "
"you have some time!"
msgstr ""
"La classe :ref:`SceneTree <class_SceneTree>` fournit de nombreuses méthodes "
"utiles, comme l'interaction avec les scènes, leur hiérarchie de nœuds et "
"leur groupes de nœuds. Elle vous permet de changer facilement de scènes ou "
"de les recharger, de quitter le jeu ou de le mettre en pause, de mettre fin "
"à la pause. Elle contient même des signaux intéressants. Alors allez voir si "
"vous avez le temps !"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:156
msgid "Notifications"
msgstr "Notifications"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:158
msgid ""
"Godot has a system of notifications. These are usually not needed for "
"scripting, as it's too low-level and virtual functions are provided for most "
"of them. It's just good to know they exist. For example, you may add an :ref:"
"`Object._notification() <class_Object_method__notification>` function in "
"your script:"
msgstr ""
"Godot possède un système de notifications. Celles-ci ne sont généralement "
"pas nécessaires pour le scripting, car elles sont de trop bas niveau et des "
"fonctions virtuelles sont fournies pour la plupart d'entre elles. C'est "
"cependant bien de savoir qu'elles existent. Par exemple, vous pouvez ajouter "
"une fonction :ref:`Object._notification() "
"<class_Object_method__notification>` dans votre script :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:193
msgid ""
"The documentation of each class in the :ref:`Class Reference <toc-class-"
"ref>` shows the notifications it can receive. However, in most cases "
"GDScript provides simpler overridable functions."
msgstr ""
"La documentation de chaque classe dans la :ref:`Class Reference <toc-class-"
"ref>` montre les notifications qu'elle peut recevoir. Cependant, dans la "
"plupart des cas, GDScript fournit des fonctions de surchargeable plus "
"simples."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:198
msgid "Overridable functions"
msgstr "Fonctions surchargeables"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:200
msgid ""
"Such overridable functions, which are described as follows, can be applied "
"to nodes:"
msgstr ""
"De telles fonctions surchargeables, décrites comme suit, peuvent être "
"appliquées aux nœuds :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:272
msgid ""
"As mentioned before, it's better to use these functions instead of the "
"notification system."
msgstr ""
"Comme mentionné précédemment, il est préférable d'utiliser ces fonctions "
"plutôt que le système de notification."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:276
msgid "Creating nodes"
msgstr "Création de nœuds"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:278
msgid ""
"To create a node from code, call the ``.new()`` method, like for any other "
"class-based datatype. For example:"
msgstr ""
"Pour créer un nœud à partir du code, appelez la méthode ``.new()``, comme "
"pour tout autre type de données de classe. Par exemple :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:302
msgid ""
"To delete a node, be it inside or outside the scene, ``free()`` must be used:"
msgstr ""
"Pour supprimer un nœud, que ce soit à l'intérieur ou à l'extérieur de la "
"scène, il faut utiliser ``free()`` :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:318
msgid ""
"When a node is freed, it also frees all its child nodes. Because of this, "
"manually deleting nodes is much simpler than it appears. Free the base node "
"and everything else in the subtree goes away with it."
msgstr ""
"Lorsqu'un nœud est libéré, il libère également tous ses nœuds enfants. Pour "
"cette raison, la suppression manuelle des nœuds est beaucoup plus simple "
"qu'il n'y paraît. Libérez le nœud de base et tout le reste dans le sous-"
"arbre disparaît avec lui."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:322
msgid ""
"A situation might occur where we want to delete a node that is currently "
"\"blocked\", because it is emitting a signal or calling a function. This "
"will crash the game. Running Godot with the debugger will often catch this "
"case and warn you about it."
msgstr ""
"Une situation peut se produire dans laquelle nous voulons supprimer un nœud "
"qui est actuellement \"bloqué\", parce qu'il émet un signal ou appelle une "
"fonction. Ceci fera planter le jeu. Lancer Godot avec le débogueur permet "
"souvent de détecter ce cas et de vous en avertir."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:327
msgid ""
"The safest way to delete a node is by using :ref:`Node.queue_free() "
"<class_Node_method_queue_free>`. This erases the node safely during idle."
msgstr ""
"La façon la plus sûre de supprimer un nœud est d'utiliser :ref:`Node."
"queue_free() <class_Node_method_queue_free>`. Ceci efface le nœud en toute "
"sécurité pendant la période d'inactivité."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:345
msgid "Instancing scenes"
msgstr "Instancier des scènes"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:347
msgid ""
"Instancing a scene from code is done in two steps. The first one is to load "
"the scene from your hard drive:"
msgstr ""
"Instancier une scène depuis le code se fait en deux étapes. La première est "
"de charger la scène à partir de votre disque dur :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:360
msgid ""
"Preloading it can be more convenient, as it happens at parse time (GDScript "
"only):"
msgstr ""
"Le préchargement peut être plus pratique, car il se produit lors de "
"l'analyse du code (GDScript uniquement) :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:368
msgid ""
"But ``scene`` is not yet a node. It's packed in a special resource called :"
"ref:`PackedScene <class_PackedScene>`. To create the actual node, the "
"function :ref:`PackedScene.instance() <class_PackedScene_method_instance>` "
"must be called. This will return the tree of nodes that can be added to the "
"active scene:"
msgstr ""
"Mais ``scene`` n'est pas encore un nœud. Elle est emballée dans une "
"ressource spéciale appelée :ref:`PackedScene <class_PackedScene>`. Pour "
"créer le nœud, la fonction :ref:`PackedScene.instance() "
"<class_PackedScene_method_instance_PackedScene_instance>` doit être appelée. "
"Cela retournera l'arborescence des nœuds qui peuvent être ajoutés à la scène "
"active :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:386
msgid ""
"The advantage of this two-step process is that a packed scene may be kept "
"loaded and ready to use so that you can create as many instances as desired. "
"This is especially useful to quickly instance several enemies, bullets, and "
"other entities in the active scene."
msgstr ""
"L'avantage de ce processus en deux temps est qu'une scène emballée peut être "
"chargée et prête à l'emploi afin que vous puissiez créer autant d'instances "
"que vous le souhaitez. C'est particulièrement utile pour instancier "
"rapidement plusieurs ennemis, balles et autres entités dans la scène active."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:394
msgid "Register scripts as classes"
msgstr "Enregistrer des scripts en tant que classes"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:396
msgid ""
"Godot has a \"Script Class\" feature to register individual scripts with the "
"Editor. By default, you can only access unnamed scripts by loading the file "
"directly."
msgstr ""
"Godot fournit une fonctionnalité \"Script Class\" permettant d'enregistrer "
"des scripts depuis l'éditeur. Par défaut, l'accès au scripts anonymes n'est "
"possible qu'en chargeant le fichier directement."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:400
msgid ""
"You can name a script and register it as a type in the editor with the "
"``class_name`` keyword followed by the class's name. You may add a comma and "
"an optional path to an image to use as an icon. You will then find your new "
"type in the Node or Resource creation dialog."
msgstr ""
"Vous pouvez nommer un script et l'enregistrer comme type dans l'éditeur avec "
"le mot-clé ``class_name`` suivi par le nom de la classe. Vous pouvez ajouter "
"une virgule et un éventuel chemin vers une image pour l'utiliser en tant "
"qu’icône. Vous trouverez alors votre nouveau type dans la boîte de dialogue "
"de création de nœuds ou de ressources."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:422
msgid "In Godot 3.1:"
msgstr "Dans Godot v3.11 :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:424
msgid ""
"Only GDScript and NativeScript, i.e., C++ and other GDNative-powered "
"languages, can register scripts."
msgstr ""
"Seuls GDScript et NativeScript, c'est-à-dire C ++ et d'autres langages liés "
"par GDNative, peuvent enregistrer des scripts."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:425
msgid "Only GDScript creates global variables for each named script."
msgstr "Seul GDScript crée des variables globales pour chaque script nommé."
