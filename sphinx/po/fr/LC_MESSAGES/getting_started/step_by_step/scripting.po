# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-18 09:48+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/scripting.rst:4
msgid "Scripting"
msgstr "Les scripts"

#: ../../docs/getting_started/step_by_step/scripting.rst:7
msgid "Introduction"
msgstr "Introduction"

#: ../../docs/getting_started/step_by_step/scripting.rst:9
msgid ""
"Before Godot 3.0, the only choice for scripting a game was to use :ref:"
"`doc_gdscript`. Nowadays, Godot has four (yes, four!) official languages and "
"the ability to add extra scripting languages dynamically!"
msgstr ""
"Avant Godot 3.0, le seul choix pour scripter un jeu était d'utiliser :ref:"
"`doc_gdscript`. À présent, Godot a quatre (oui, quatre !) langages officiels "
"et la possibilité d'ajouter dynamiquement des langages de script "
"supplémentaires !"

#: ../../docs/getting_started/step_by_step/scripting.rst:13
msgid ""
"This is great, mostly due to the large amount of flexibility provided, but "
"it also makes our work supporting languages more difficult."
msgstr ""
"Ceci est formidable, surtout en raison de la grande flexibilité offerte, "
"mais cela rend aussi notre travail de support des langages plus difficile."

#: ../../docs/getting_started/step_by_step/scripting.rst:16
msgid ""
"The \"main\" languages in Godot, though, are GDScript and VisualScript. The "
"main reason to choose them is their level of integration with Godot, as this "
"makes the experience smoother; both have slick editor integration, while C# "
"and C++ need to be edited in a separate IDE. If you are a big fan of "
"statically typed languages, go with C# and C++ instead."
msgstr ""
"Les langages \"principaux\" de Godot sont GDScript et VisualScript. La "
"principale raison de les choisir est leur niveau d'intégration avec Godot, "
"qui rend l'expérience plus fluide ; tous les deux ont une intégration dans "
"l'éditeur très bien huilée, tandis que le C# et C++ doivent être édités dans "
"un IDE séparé. Si vous êtes un adepte des langages à typage statique, optez "
"plutôt pour le C# et le C++."

#: ../../docs/getting_started/step_by_step/scripting.rst:22
msgid "GDScript"
msgstr "GDScript"

#: ../../docs/getting_started/step_by_step/scripting.rst:24
msgid ""
":ref:`doc_gdscript` is, as mentioned above, the main language used in Godot. "
"Using it has some positive points compared to other languages due to its "
"high integration with Godot:"
msgstr ""
":ref:`doc_gdscript` est, comme indiqué ci-dessus, le langage principal "
"utilisé dans Godot. Son utilisation a quelques points positifs par rapport à "
"d'autres langues en raison de sa forte intégration avec Godot :"

#: ../../docs/getting_started/step_by_step/scripting.rst:28
msgid ""
"It's simple, elegant, and designed to be familiar for users of other "
"languages such as Lua, Python, Squirrel, etc."
msgstr ""
"Il est simple, élégant et conçu pour être familier aux utilisateurs d'autres "
"langages telles que Lua, Python, Squirrel, Squirrel, etc."

#: ../../docs/getting_started/step_by_step/scripting.rst:29
msgid "Loads and compiles blazingly fast."
msgstr "Charge et compile avec une rapidité fulgurante."

#: ../../docs/getting_started/step_by_step/scripting.rst:30
msgid ""
"The editor integration is a pleasure to work with, with code completion for "
"nodes, signals, and many other items pertaining to the scene being edited."
msgstr ""
"L'intégration de l'éditeur est un plaisir à travailler avec, avec une "
"complétion de code pour les nœuds, les signaux et de nombreux autres "
"éléments relatifs à la scène en cours d'édition."

#: ../../docs/getting_started/step_by_step/scripting.rst:31
msgid ""
"Has vector types built-in (such as Vectors, transforms, etc.), making it "
"efficient for heavy use of linear algebra."
msgstr ""
"Possède des types vectoriels intégrés (tels que vecteurs, transformations, "
"etc.), ce qui le rend efficace pour l'utilisation intensive de l'algèbre "
"linéaire."

#: ../../docs/getting_started/step_by_step/scripting.rst:32
msgid ""
"Supports multiple threads as efficiently as statically typed languages - one "
"of the limitations that made us avoid VMs such as Lua, Squirrel, etc."
msgstr ""
"Supporte plusieurs threads aussi efficacement que les langages à typage "
"statique - une des limitations qui nous a fait éviter les VMs comme Lua, "
"Squirrel, etc."

#: ../../docs/getting_started/step_by_step/scripting.rst:33
msgid ""
"Uses no garbage collector, so it trades a small bit of automation (most "
"objects are reference counted anyway), by determinism."
msgstr ""
"N'utilise pas de ramasse-miettes, usant donc d'un petit peu d'automatisation "
"(la plupart des objets sont de toute façon comptés par référence), par "
"déterminisme."

#: ../../docs/getting_started/step_by_step/scripting.rst:34
msgid ""
"Its dynamic nature makes it easy to optimize sections of code in C++ (via "
"GDNative) if more performance is required, all without recompiling the "
"engine."
msgstr ""
"Sa nature dynamique facilite l'optimisation de sections de code en C++ (via "
"GDNative) si plus de performance est requise, le tout sans recompiler le "
"moteur."

#: ../../docs/getting_started/step_by_step/scripting.rst:36
msgid ""
"If you're undecided and have experience with programming, especially "
"dynamically typed languages, go for GDScript!"
msgstr ""
"Si vous êtes indécis et que vous avez de l'expérience en programmation, en "
"particulier dans les langages à typage dynamique, optez pour GDScript !"

#: ../../docs/getting_started/step_by_step/scripting.rst:40
msgid "VisualScript"
msgstr "VisualScript"

#: ../../docs/getting_started/step_by_step/scripting.rst:42
msgid ""
"Beginning with 3.0, Godot offers :ref:`Visual "
"Scripting<doc_what_is_visual_script>`. This is a typical implementation of a "
"\"blocks and connections\" language, but adapted to how Godot works."
msgstr ""
"A partir de la version 3.0, Godot propose le :ref:`Visual "
"Scripting<doc_what_is_visual_script>`. Il s'agit d'une implémentation "
"typique d'un langage de \"blocs et connexions\", mais adapté au "
"fonctionnement de Godot."

#: ../../docs/getting_started/step_by_step/scripting.rst:46
msgid ""
"Visual scripting is a great tool for non-programmers, or even for "
"experienced developers who want to make parts of the code more accessible to "
"others, like game designers or artists."
msgstr ""
"Le Visual Scripting est un excellent outil pour les non-programmeurs, ou "
"même pour les développeurs expérimentés qui veulent rendre certaines parties "
"du code plus accessibles à d'autres, comme les concepteurs de jeux ou les "
"artistes."

#: ../../docs/getting_started/step_by_step/scripting.rst:50
msgid ""
"It can also be used by programmers to build state machines or custom visual "
"node workflows - for example, a dialogue system."
msgstr ""
"Il peut également être utilisé par les programmeurs pour construire des "
"machines à états ou des systèmes de nœuds visuels personnalisés - par "
"exemple, un système de dialogue."

#: ../../docs/getting_started/step_by_step/scripting.rst:55
msgid ".NET / C#"
msgstr ".NET / C#"

#: ../../docs/getting_started/step_by_step/scripting.rst:57
msgid ""
"As Microsoft's C# is a favorite amongst game developers, we have added "
"official support for it. C# is a mature language with tons of code written "
"for it, and support was added thanks to a generous donation from Microsoft."
msgstr ""
"Comme le C# de Microsoft est populaire parmi les développeurs de jeux, nous "
"en avons ajouté le support officiel. C# est un langage mature avec des "
"tonnes de code écrit pour lui, et son support a été ajouté grâce à un "
"généreux don de Microsoft."

#: ../../docs/getting_started/step_by_step/scripting.rst:62
msgid ""
"It has an excellent tradeoff between performance and ease of use, although "
"one must be aware of its garbage collector."
msgstr ""
"Il a un excellent compromis entre la performance et la facilité "
"d'utilisation, bien que l'on doit être conscient de son ramasse-miettes."

#: ../../docs/getting_started/step_by_step/scripting.rst:65
msgid ""
"Since Godot uses the `Mono <https://mono-project.com>`_ .NET runtime, in "
"theory any third-party .NET library or framework can be used for scripting "
"in Godot, as well as any Common Language Infrastructure-compliant "
"programming language, such as F#, Boo or ClojureCLR. In practice however, C# "
"is the only officially supported .NET option."
msgstr ""
"Puisque Godot utilise les runtime .NET de `Mono <https://mono-project."
"com>`_, en théorie, n'importe quelle bibliothèque ou framework .NET tiers "
"peut être utilisé pour scripter dans Godot, ainsi que n'importe quel langage "
"de programmation compatible avec l'infrastructure de langage commun (CLI), "
"comme F#, Boo ou ClojureCLR. En pratique, cependant, C# est la seule option ."
"NET officiellement supportée."

#: ../../docs/getting_started/step_by_step/scripting.rst:71
msgid "GDNative / C++"
msgstr "GDNative / C++"

#: ../../docs/getting_started/step_by_step/scripting.rst:73
msgid ""
"Finally, one of our brightest additions for the 3.0 release: GDNative allows "
"scripting in C++ without needing to recompile (or even restart) Godot."
msgstr ""
"Enfin, l'un de nos plus brillants ajouts pour la version 3.0 : GDNative "
"permet de scripter en C++ sans avoir besoin de recompiler (ou même de "
"redémarrer) Godot."

#: ../../docs/getting_started/step_by_step/scripting.rst:77
msgid ""
"Any C++ version can be used, and mixing compiler brands and versions for the "
"generated shared libraries works perfectly, thanks to our use of an internal "
"C API Bridge."
msgstr ""
"N'importe quelle version de C++ peut être utilisée, et mélanger des "
"compilateurs de divers éditeurs et versions pour les bibliothèques partagées "
"générées fonctionne parfaitement, grâce à l'utilisation d'un bridge interne "
"d'API en C."

#: ../../docs/getting_started/step_by_step/scripting.rst:81
msgid ""
"This language is the best choice for performance and does not need to be "
"used throughout an entire game, as other parts can be written in GDScript or "
"Visual Script. However the API is clear and easy to use as it resembles, "
"mostly, Godot's actual C++ API."
msgstr ""
"Ce langage est le meilleur choix pour la performance et n'a pas besoin "
"d'être utilisé tout au long d'un jeu, car d'autres parties peuvent être "
"écrites en GDScript ou en Visual Script. Cependant, l'API est claire et "
"facile à utiliser car elle ressemble, pour la plupart, à l'API C++ de Godot."

#: ../../docs/getting_started/step_by_step/scripting.rst:86
msgid ""
"More languages can be made available through the GDNative interface, but "
"keep in mind we don't have official support for them."
msgstr ""
"D'autres langues peuvent être rendues disponibles via l'interface GDNative, "
"mais gardez à l'esprit que nous n'avons pas de support officiel pour eux."

#: ../../docs/getting_started/step_by_step/scripting.rst:90
msgid "Scripting a scene"
msgstr "Scripter une scène"

#: ../../docs/getting_started/step_by_step/scripting.rst:92
msgid ""
"For the rest of this tutorial we'll set up a GUI scene consisting of a "
"button and a label, where pressing the button will update the label. This "
"will demonstrate:"
msgstr ""
"Pour le reste de ce tutoriel, nous allons mettre en place une scène GUI "
"composée d'un bouton et d'un label, où le fait d'appuyer sur le bouton "
"mettra à jour le label. Cela démontrera :"

#: ../../docs/getting_started/step_by_step/scripting.rst:96
msgid "Writing a script and attaching it to a node."
msgstr "Ecrire un script et l'attacher à un nœud."

#: ../../docs/getting_started/step_by_step/scripting.rst:97
msgid "Hooking up UI elements via signals."
msgstr "Raccordement des éléments de l’UI via des signaux."

#: ../../docs/getting_started/step_by_step/scripting.rst:98
msgid "Writing a script that can access other nodes in the scene."
msgstr "Ecrire un script qui peut accéder à d'autres nœuds de la scène."

#: ../../docs/getting_started/step_by_step/scripting.rst:100
msgid ""
"Before continuing, please make sure to read the :ref:`doc_gdscript` "
"reference. It's a language designed to be simple, and the reference is "
"short, so it will not take more than a few minutes to get an overview of the "
"concepts."
msgstr ""
"Avant de continuer, assurez-vous de lire la référence :ref:`doc_gdscript`. "
"C'est un langage conçu pour être simple, et la référence est courte, de "
"sorte qu'il ne faudra pas plus de quelques minutes pour obtenir une vue "
"d'ensemble des concepts."

#: ../../docs/getting_started/step_by_step/scripting.rst:105
msgid "Scene setup"
msgstr "Configuration de la scène"

#: ../../docs/getting_started/step_by_step/scripting.rst:107
msgid ""
"Use the \"Add Child Node\" dialogue accessed from the Scene tab (or by "
"pressing ``Ctrl+A``) to create a hierarchy with the following nodes:"
msgstr ""
"Utilisez la boîte de dialogue \"Ajouter un nœud enfant\" accessible depuis "
"l'onglet Scène (ou en appuyant sur ``Ctrl+A``) pour créer une hiérarchie "
"avec les nœuds suivants :"

#: ../../docs/getting_started/step_by_step/scripting.rst:110
msgid "Panel"
msgstr "Panneau"

#: ../../docs/getting_started/step_by_step/scripting.rst:112
msgid "Label"
msgstr "Label"

#: ../../docs/getting_started/step_by_step/scripting.rst:113
msgid "Button"
msgstr "Bouton"

#: ../../docs/getting_started/step_by_step/scripting.rst:115
msgid "The scene tree should look like this:"
msgstr "L'arbre de scène devrait ressembler à ceci :"

#: ../../docs/getting_started/step_by_step/scripting.rst:119
msgid ""
"Use the 2D editor to position and resize the Button and Label so that they "
"look like the image below. You can set the text from the Inspector tab."
msgstr ""
"Utilisez l'éditeur 2D pour positionner et redimensionner le bouton et le "
"label afin qu'ils ressemblent à l'image ci-dessous. Vous pouvez définir le "
"texte à partir de l'onglet Inspecteur."

#: ../../docs/getting_started/step_by_step/scripting.rst:124
msgid "Finally, save the scene with a name such as ``sayhello.tscn``."
msgstr "Enfin, sauvegardez la scène avec un nom tel que ``sayhello.tscn``."

#: ../../docs/getting_started/step_by_step/scripting.rst:129
msgid "Adding a script"
msgstr "Ajouter un script"

#: ../../docs/getting_started/step_by_step/scripting.rst:131
msgid ""
"Right click on the Panel node, then select \"Attach Script\" from the "
"context menu:"
msgstr ""
"Cliquez avec le bouton droit sur le nœud Panel, puis sélectionnez \"Attacher "
"un script\" dans le menu contextuel :"

#: ../../docs/getting_started/step_by_step/scripting.rst:136
msgid ""
"The script creation dialog will pop up. This dialog allows you to set the "
"script's language, class name, and other relevant options."
msgstr ""
"La boîte de dialogue de création de script apparaîtra. Cette boîte de "
"dialogue vous permet de définir le langage du script, le nom de la classe et "
"d'autres options."

#: ../../docs/getting_started/step_by_step/scripting.rst:139
msgid ""
"In GDScript, the file itself represents the class, so the class name field "
"is not editable."
msgstr ""
"Dans GDScript, le fichier lui-même représente la classe, ce qui rend le nom "
"de la classe non modifiable."

#: ../../docs/getting_started/step_by_step/scripting.rst:142
msgid ""
"The node we're attaching the script to is a panel, so the Inherits field "
"will automatically be filled in with \"Panel\". This is what we want, as the "
"script's goal is to extend the functionality of our panel node."
msgstr ""
"Le nœud auquel nous attachons le script est un panneau, donc le champ "
"\"hérite\" sera automatiquement rempli avec \"Panneau\". C'est ce que nous "
"voulons, car le but du script est d'étendre la fonctionnalité de notre nœud "
"panneau."

#: ../../docs/getting_started/step_by_step/scripting.rst:146
msgid "Finally, enter a path name for the script and select Create:"
msgstr ""
"Enfin, saisissez un nom de chemin pour le script et sélectionnez Créer :"

#: ../../docs/getting_started/step_by_step/scripting.rst:150
msgid ""
"The script will then be created and added to the node. You can see this as "
"an \"Open script\" icon next to the node in the Scene tab, as well as in the "
"script property under Inspector:"
msgstr ""
"Le script sera alors créé et ajouté au nœud. Vous pouvez voir ceci par une "
"icône \"Ouvrir le script\" à côté du nœud dans l'onglet Scène, ainsi que "
"dans la propriété script dans l'Inspecteur :"

#: ../../docs/getting_started/step_by_step/scripting.rst:156
msgid ""
"To edit the script, select either of these buttons, both of which are "
"highlighted in the above image. This will bring you to the script editor, "
"where a default template will be included:"
msgstr ""
"Pour éditer le script, sélectionnez l'un ou l'autre de ces boutons, qui sont "
"tous deux surlignés dans l'image ci-dessus. Cela vous emmenera vers "
"l'éditeur de script, où un modèle par défaut sera inclus :"

#: ../../docs/getting_started/step_by_step/scripting.rst:161
msgid ""
"There's not much there. The ``_ready()`` function is called when the node, "
"and all its children, enters the active scene. **Note:** ``_ready()`` is not "
"the constructor; the constructor is instead ``_init()``."
msgstr ""
"Il n'y a pas grand-chose. La fonction ``_ready()`` est appelée lorsque le "
"nœud et tous ses enfants entrent dans la scène active. **Note** : "
"``_ready()`` n'est pas le constructeur ; le constructeur est ``_init()``."

#: ../../docs/getting_started/step_by_step/scripting.rst:166
msgid "The role of the script"
msgstr "Le rôle du script"

#: ../../docs/getting_started/step_by_step/scripting.rst:168
msgid ""
"A script adds behavior to a node. It is used to control how the node "
"functions as well as how it interacts with other nodes: children, parent, "
"siblings, and so on. The local scope of the script is the node. In other "
"words, the script inherits the functions provided by that node."
msgstr ""
"Un script ajoute un comportement à un nœud. Il est utilisé pour contrôler le "
"fonctionnement du nœud ainsi que son interaction avec d'autres nœuds : "
"enfants, parents, frères, etc. La portée locale du script est le nœud. En "
"d'autres termes, le script hérite des fonctions fournies par ce nœud."

#: ../../docs/getting_started/step_by_step/scripting.rst:176
msgid "Handling a signal"
msgstr "Traitement d'un signal"

#: ../../docs/getting_started/step_by_step/scripting.rst:178
msgid ""
"Signals are \"emitted\" when some specific kind of action happens, and they "
"can be connected to any function of any script instance. Signals are used "
"mostly in GUI nodes, although other nodes have them too, and you can even "
"define custom signals in your own scripts."
msgstr ""
"Les signaux sont \"émis\" lorsqu'une action spécifique se produit, et ils "
"peuvent être connectés à n'importe quelle fonction de n'importe quelle "
"instance de script. Les signaux sont surtout utilisés dans les nœuds de "
"l'interface graphique, bien que d'autres nœuds en aient aussi, et vous "
"pouvez même définir des signaux personnalisés dans vos propres scripts."

#: ../../docs/getting_started/step_by_step/scripting.rst:183
msgid ""
"In this step, we'll connect the \"pressed\" signal to a custom function. "
"Forming connections is the first part and defining the custom function is "
"the second part. For the first part, Godot provides two ways to create "
"connections: through a visual interface the editor provides or through code."
msgstr ""
"Dans cette étape, nous allons connecter le signal \"pressed\" à une fonction "
"personnalisée. Créer les connexions constitue la première partie, et définir "
"la fonction la seconde. Pour la première partie, Godot fournit deux moyens "
"de créer des connexions : au travers d'une interface visuelle incluse dans "
"l'éditeur, ou au travers du code."

#: ../../docs/getting_started/step_by_step/scripting.rst:188
msgid ""
"While we will use the code method for the remainder of this tutorial series, "
"let's cover how the editor interface works for future reference."
msgstr ""
"Bien que nous utiliserons la méthode du code pour le reste de cette série de "
"tutoriels, voyons comment l'interface de l'éditeur fonctionne pour future "
"référence."

#: ../../docs/getting_started/step_by_step/scripting.rst:191
msgid ""
"Select the Button node in the scene tree and then select the \"Node\" tab. "
"Next, make sure that you have \"Signals\" selected."
msgstr ""
"Sélectionnez le node Button dans l'arbre de scène puis  l'onglet \"Node\". "
"Assurez-vous ensuite que \"Signaux\" est sélectionné."

#: ../../docs/getting_started/step_by_step/scripting.rst:196
msgid ""
"If you then select \"pressed()\" under \"BaseButton\" and click the "
"\"Connect...\" button in the bottom right, you'll open up the connection "
"creation dialogue."
msgstr ""
"Si vous sélectionnez ensuite \"pressed()\" sous \"BaseButton\" et cliquez "
"sur le boutton \"Connecter...\" en bas à droite, vous allez ouvrir la "
"fenêtre de création de connexion."

#: ../../docs/getting_started/step_by_step/scripting.rst:201
msgid ""
"In the bottom-left are the key things you need to create a connection: a "
"node which implements the method you want to trigger (represented here as a "
"NodePath) and the name of the method to trigger."
msgstr ""
"En bas à gauche se situent les éléments importants dont vous avez besoin "
"pour créer une connexion : un noeud qui implémente la méthode que vous "
"voulez déclencher (représenté ici par un NodePath) et le nom de la méthode à "
"déclencher."

#: ../../docs/getting_started/step_by_step/scripting.rst:205
msgid ""
"The top-left section displays a list of your scene's nodes with the emitting "
"node's name highlighted in red. Select the \"Panel\" node here. When you "
"select a node, the NodePath at the bottom will automatically update to point "
"to a relative path from the emitting node to the selected node."
msgstr ""
"La section en haut à gauche affiche une liste des nœuds de votre scène avec "
"le nom du nœud émetteur surligné en rouge. Sélectionnez ici le nœud \"Panel"
"\". Quand vous sélectionnez un nœud, le NodePath en bas se mettra à jour "
"automatiquement pour pointer vers un chemin relatif du nœud émetteur au nœud "
"sélectionné."

#: ../../docs/getting_started/step_by_step/scripting.rst:210
msgid ""
"By default, the method name will contain the emitting node's name (\"Button"
"\" in this case), resulting in \"_on_[EmitterNode]_[signal_name]\". If you "
"do have the \"Make Function\" check button checked, then the editor will "
"generate the function for you before setting up the connection."
msgstr ""
"Par défaut, le nom de la méthode contiendra le nom du noeud émetteur "
"(\"Button\" dans notre cas), ce qui donnera "
"\"_on_[NodeEmetteur]_[nom_du_signal]\". Si vous avez le bouton \"Créer une "
"fonction\" coché, alors l'éditeur générera la fonction pour vous avant de "
"mettre en place la connexion."

#: ../../docs/getting_started/step_by_step/scripting.rst:215
msgid ""
"And that concludes the guide on how to use the visual interface. However, "
"this is a scripting tutorial, so for the sake of learning, let's dive into "
"the manual process!"
msgstr ""
"Ainsi se conclut notre guide sur l'utilisation de l'interface visuelle. "
"Cependant, il s'agit d'un tutoriel de scripting, donc, à titre "
"d'apprentissage, penchons-nous sur la méthode manuelle !"

#: ../../docs/getting_started/step_by_step/scripting.rst:219
msgid ""
"To accomplish this, we will introduce a function that is probably the most "
"used by Godot programmers: :ref:`Node.get_node() "
"<class_Node_method_get_node>`. This function uses paths to fetch nodes "
"anywhere in the scene, relative to the node that owns the script."
msgstr ""
"Pour accomplir cela, nous allons introduire une fonction qui est "
"probablement la plus utilisée par les programmeurs Godot : :ref:`Node."
"get_node() <class_Node_method_get_node>`. Cette fonction utilise des chemins "
"pour récupérer des nœuds n'importe où dans la scène, de manière relative au "
"nœud qui possède le script."

#: ../../docs/getting_started/step_by_step/scripting.rst:224
msgid ""
"For the sake of convenience, delete everything underneath ``extends Panel``. "
"You will fill out the rest of the script manually."
msgstr ""
"Par souci de praticité, supprimez tout en dessous de ``extends Panel``. Vous "
"remplirez le reste du script manuellement."

#: ../../docs/getting_started/step_by_step/scripting.rst:227
msgid ""
"Because the Button and Label are siblings under the Panel where the script "
"is attached, you can fetch the Button by typing the following underneath the "
"``_ready()`` function:"
msgstr ""
"Puisque les noeuds Button et Label sont jumelés sous le Panel où est attaché "
"le script, vous pouvez récupérer le Button en tapant ceci sous la fonction "
"``_ready()`` :"

#: ../../docs/getting_started/step_by_step/scripting.rst:244
msgid "Next, write a function which will be called when the button is pressed:"
msgstr ""
"Ensuite, écrivez une fonction qui sera appelée quand le bouton est pressé :"

#: ../../docs/getting_started/step_by_step/scripting.rst:259
msgid ""
"Finally, connect the button's \"pressed\" signal to ``_ready()`` by using :"
"ref:`Object.connect() <class_Object_method_connect>`."
msgstr ""
"Pour terminer, connectez le signal \"pressed\" du bouton à ``_ready()`` en "
"utilisant :ref:`Object.connect() <class_Object_method_connect>`."

#: ../../docs/getting_started/step_by_step/scripting.rst:275
msgid "The final script should look like this:"
msgstr "Le script final devrait ressembler à ça :"

#: ../../docs/getting_started/step_by_step/scripting.rst:308
msgid ""
"Run the scene and press the button. You should get the following result:"
msgstr ""
"Lancez la scène et appuyez sur le bouton. Vous devriez obtenir le résultat "
"suivant :"

#: ../../docs/getting_started/step_by_step/scripting.rst:312
msgid "Why, hello there! Congratulations on scripting your first scene."
msgstr "Eh bien ! Félicitations, vous venez de scripter votre première scène."

#: ../../docs/getting_started/step_by_step/scripting.rst:316
msgid ""
"A common misunderstanding regarding this tutorial is how ``get_node(path)`` "
"works. For a given node, ``get_node(path)`` searches its immediate children. "
"In the above code, this means that Button must be a child of Panel. If "
"Button were instead a child of Label, the code to obtain it would be:"
msgstr ""
"Une incompréhension fréquente vis-à-vis de ce tutoriel est comment "
"``get_node(path)`` marche. Pour un noeud donné, ``get_node(path)`` cherche "
"dans ses enfants directs. Dans le code ci-dessus, cela signifie que Button "
"doit être un enfant de Panel. Si Button était plutôt un enfant de Label, le "
"code pour le récupérer serait :"

#: ../../docs/getting_started/step_by_step/scripting.rst:334
msgid "Also, remember that nodes are referenced by name, not by type."
msgstr ""
"Souvenez-vous aussi que les noeuds sont référencés par nom, pas par type."

#: ../../docs/getting_started/step_by_step/scripting.rst:338
msgid ""
"The right-hand panel of the connect dialogue is for binding specific values "
"to the connected function's parameters. You can add and remove values of "
"different types."
msgstr ""
"Le panneau de droite de la fenêtre de connexion sert à lier des valeurs "
"spécifiques aux paramètres de la fonction connectée. Vous pouvez ajouter et "
"enlever des valeurs de différents types."

#: ../../docs/getting_started/step_by_step/scripting.rst:342
msgid ""
"The code approach also enables this with a 4th ``Array`` parameter that is "
"empty by default. Feel free to read up on the ``Object.connect`` method for "
"more information."
msgstr ""
"La méthode par le code permet aussi cela avec un 4ème paramètre de type "
"``Array`` qui est vide par défaut. N'hésitez pas à vous renseigner sur la "
"méthode ``Object.connect`` pour plus d'informations."
