# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-01 14:18+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:4
#: ../../docs/getting_started/step_by_step/scene_tree.rst:41
msgid "SceneTree"
msgstr "L'arbre de scène"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:7
msgid "Introduction"
msgstr "Introduction"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:9
msgid ""
"This is where things start getting abstract, but don't panic. There's not "
"much more depth than this."
msgstr ""
"C'est là où les choses comment à devenir floues, mais ne paniquez pas. Ce "
"n'est pas si complexe que ça."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:12
msgid ""
"In previous tutorials, everything revolved around the concept of nodes. "
"Scenes are simply a collection of nodes. They become active once they enter "
"the *scene tree*."
msgstr ""
"Dans le tutoriel précédent, chaque chose tournais autour du concept des "
"nœuds. Chaque scène est simplement une collection de nœud. Elles deviennent "
"actives une fois entrée dans *l'arbre de scène*."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:16
msgid ""
"This concept deserves going into a little more detail. In fact, the scene "
"system is not even a core component of Godot as it is possible to skip it "
"and write a script (or C++ code) that talks directly to the servers, but "
"making a game that way would be a lot of work."
msgstr ""
"Ce concept mérite de se pencher dessus dans le détail. En fait, le système "
"de gestion de scènes ne fait même pas partie des composants de base de Godot "
"car il est possible de ne pas s'en occuper et d'écrire un script "
"(éventuellement du code C++) qui discute directement avec les serveurs, mais "
"fabriquer un jeu de cette façon demanderait beaucoup de travail."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:22
msgid "MainLoop"
msgstr "Boucle événementielle"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:24
msgid ""
"The way Godot works internally is as follows. There is the :ref:`OS "
"<class_OS>` class, which is the only instance that runs at the beginning. "
"Afterwards, all drivers, servers, scripting languages, scene system, etc are "
"loaded."
msgstr ""
"La façon dont Godot fonctionne en interne est la suivante : Au départ, la "
"seule instance qui fonctionne est la classe  :ref:`OS <class_OS>`, ensuite, "
"tous les pilotes, serveurs, langages de script, système de gestion de "
"scènes ... sont chargés."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:29
msgid ""
"When initialization is complete, :ref:`OS <class_OS>` needs to be supplied "
"a :ref:`MainLoop <class_MainLoop>` to run. Up to this point, all this is "
"internals working (you can check main/main.cpp file in the source code if "
"you are ever interested to see how this works internally)."
msgstr ""
"Quand l'initialisation est terminée, une :ref:`MainLoop "
"<class_MainLoop>`doit être fournie à :ref:`OS <class_OS>`  pour fonctionner. "
"Jusqu'à ce point, tout ceci est du fonctionnement interne (vous pouvez "
"consulter le fichier main/main.cpp dans le code source si jamais vous ètes "
"intéressé de voir comment cela fonctionne en interne)."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:35
msgid ""
"The user program, or game, starts in the MainLoop. This class has a few "
"methods, for initialization, idle (frame-synchronized callback), fixed "
"(physics-synchronized callback), and input. Again, this is low level and "
"when making games in Godot, writing your own MainLoop seldom makes sense."
msgstr ""
"Le programme utilisateur, ou le jeu, démarre dans la boucle événementielle. "
"Cette classe a quelques méthodes, pour l'initialisation, l'inactivité "
"(rappel synchronisé par trame), fixe (rappel synchronisé par la physique) et "
"les entrées. Encore une fois, ceci est bas niveau et lorsque vous créez des "
"jeux avec Godot, écrire votre propre boucle événementielle a rarement du "
"sens."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:43
msgid ""
"One of the ways to explain how Godot works is that it's a high level game "
"engine over a low level middleware."
msgstr ""
"L'un des manières d'expliquer comment Godot fonctionne est qu'il est un "
"moteur de jeu de haut niveau, construit par-dessus un middleware de bas "
"niveau."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:46
msgid ""
"The scene system is the game engine, while the :ref:`OS <class_OS>` and "
"servers are the low level API."
msgstr ""
"Le système de gestion de scènes et le \"game engine\" proprement dit tandis "
"que la :ref:`OS <class_OS>` et les serveurs font partis de l'API de bas "
"niveau."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:49
msgid ""
"In any case, the scene system provides its own main loop to OS, :ref:"
"`SceneTree <class_SceneTree>`. This is automatically instanced and set when "
"running a scene, no need to do any extra work."
msgstr ""
"Dans tous les cas, le système de scène fournit sa propre boucle principale à "
"l'OS, :ref:`SceneTree <class_SceneTree>`. Ceci est automatiquement instancié "
"et configuré lors de l'exécution d'une scène, aucun travail supplémentaire "
"est nécessaire."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:54
msgid ""
"It's important to know that this class exists because it has a few important "
"uses:"
msgstr ""
"Il est important de savoir que cette classe existe car elle a des "
"utilisations importantes :"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:57
msgid ""
"It contains the root :ref:`Viewport <class_Viewport>`, to which a scene is "
"added as a child when it's first opened to become part of the *Scene Tree* "
"(more on that next)"
msgstr ""
"Elle contient la racine :ref:`Viewport <class_Viewport>`, à laquelle une "
"scène est ajoutée en tant qu'enfant lorsqu'elle est ouverte pour la première "
"fois, afin de faire partie de l'arborescence de scène (*Scene Tree*) (plus "
"d'informations là-dessus par la suite)"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:60
msgid ""
"It contains information about the groups and has the means to call all nodes "
"in a group or get a list of them."
msgstr ""
"Elle contient des informations sur les groupes et permet d'appeler tous les "
"nœuds d'un groupe ou d'obtenir une liste de ceux-ci."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:62
msgid ""
"It contains some global state functionality, such as setting pause mode or "
"quitting the process."
msgstr ""
"Elle contient certaines fonctionnalités d'état global, comme le réglage du "
"mode pause ou l'abandon du processus."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:65
msgid ""
"When a node is part of the Scene Tree, the :ref:`SceneTree "
"<class_SceneTree>` singleton can be obtained by simply calling :ref:`Node."
"get_tree() <class_Node_method_get_tree>`."
msgstr ""
"Lorsqu'un nœud fait partie de l'arbre des scènes, le singleton :ref:"
"`SceneTree <class_SceneTree>` peut être obtenu en appelant simplement :ref:"
"`Node.get_tree() <class_Node_Node_get_tree>`."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:71
msgid "Root viewport"
msgstr "La fenêtre d'affichage racine"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:73
msgid ""
"The root :ref:`Viewport <class_Viewport>` is always at the top of the scene. "
"From a node, it can be obtained in two different ways:"
msgstr ""
"La racine :ref:`Viewport <class_Viewport>` est toujours en haut de la scène. "
"A partir d'un nœud, elle peut être obtenu de deux manières différentes :"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:88
msgid ""
"This node contains the main viewport, anything that is a child of a :ref:"
"`Viewport <class_Viewport>` is drawn inside of it by default, so it makes "
"sense that the top of all nodes is always a node of this type otherwise "
"nothing would be seen!"
msgstr ""
"Ce nœud contient la vue principale, tout ce qui est un enfant d'un :ref:"
"`Viewport <class_Viewport>` est dessiné à l'intérieur de celui-ci par "
"défaut, il est donc logique que le nœud en amont de tous les autres soit "
"toujours un nœud de ce type, sinon rien ne serait vu !"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:93
msgid ""
"While other viewports can be created in the scene (for split-screen effects "
"and such), this one is the only one that is never created by the user. It's "
"created automatically inside SceneTree."
msgstr ""
"Alors que d'autres fenêtres d'affichage peuvent être créées dans la scène "
"(pour des effets d'écran partagé et autres), celle-ci est la seule qui n'est "
"jamais créée par l'utilisateur. Elle est créée automatiquement à l'intérieur "
"de SceneTree."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:98
msgid "Scene tree"
msgstr "Arbre de scène"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:100
msgid ""
"When a node is connected, directly or indirectly, to the root viewport, it "
"becomes part of the *scene tree*."
msgstr ""
"Lorsqu'un nœud est connecté, directement ou indirectement, à la vue racine, "
"il fait partie de l'arborescence des scènes."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:103
msgid ""
"This means that as explained in previous tutorials, it will get the "
"_enter_tree() and _ready() callbacks (as well as _exit_tree())."
msgstr ""
"Cela signifie que, comme expliqué dans les tutoriels précédents, il recevra "
"les rappels de _enter_tree() et _ready() (ainsi que _exit_tree())."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:108
msgid ""
"When nodes enter the *Scene Tree*, they become active. They get access to "
"everything they need to process, get input, display 2D and 3D, "
"notifications, play sound, groups, etc. When they are removed from the "
"*scene tree*, they lose access."
msgstr ""
"Lorsque les nœuds entrent dans l'*arbre de scène*, ils deviennent actifs. "
"Ils ont accès à tout ce dont ils ont besoin pour traiter, obtenir des "
"entrées, afficher des données en 2D et 3D, des notifications, jouer du son, "
"des groupes, etc. Lorsqu'ils sont retirés de l'*arbre de scène*, ils perdent "
"cet accès."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:114
msgid "Tree order"
msgstr "Ordre de l'arborescence"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:116
msgid ""
"Most node operations in Godot, such as drawing 2D, processing, or getting "
"notifications are done in tree order. This means that parents and siblings "
"with a smaller rank in the tree order will get notified before the current "
"node."
msgstr ""
"La plupart des opérations de nœuds dans Godot, comme le dessin 2D, le "
"traitement ou l'obtention de notifications se font dans l'ordre de "
"l'arborescence. Cela signifie que les parents et les frères et sœurs ayant "
"un rang inférieur dans l'ordre de l'arborescence seront notifiés avant le "
"nœud courant."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:124
msgid "\"Becoming active\" by entering the *Scene Tree*"
msgstr "\"Activation\" en entrant dans l'*arbre de scène*"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:126
msgid "A scene is loaded from disk or created by scripting."
msgstr "Une scène est chargée à partir du disque ou créée par un script."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:127
msgid ""
"The root node of that scene (only one root, remember?) is added as either a "
"child of the \"root\" Viewport (from SceneTree), or to any child or "
"grandchild of it."
msgstr ""
"Le nœud racine de cette scène (une seule racine, vous souvenez-vous ?) est "
"ajouté soit comme un enfant de la fenêtre d'affichage Viewport \"racine"
"\" (de SceneTree), soit à tout enfant ou petit-enfant de celle-ci."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:130
msgid ""
"Every node of the newly added scene, will receive the \"enter_tree\" "
"notification ( _enter_tree() callback in GDScript) in top-to-bottom order."
msgstr ""
"Chaque nœud de la scène nouvellement ajoutée recevra la notification "
"\"enter_tree\" (fonction de rappel _enter_tree() dans GDScript) dans l'ordre "
"haut vers bas."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:133
msgid ""
"An extra notification, \"ready\" ( _ready() callback in GDScript) is "
"provided for convenience, when a node and all its children are inside the "
"active scene."
msgstr ""
"Une notification supplémentaire, \"ready\" (fonction de rappel _ready() dans "
"GDScript) est fournie par commodité, lorsqu'un nœud et tous ses enfants sont "
"à l'intérieur de la scène active."

#: ../../docs/getting_started/step_by_step/scene_tree.rst:136
msgid ""
"When a scene (or part of it) is removed, they receive the \"exit scene\" "
"notification ( _exit_tree() callback in GDScript) in bottom-to-top order"
msgstr ""
"Quand une scène (ou une partie de celle-ci) est enlevée, ils reçoivent la "
"notification \"exit scene\" (fonction de rappel _exit_tree() dans GDScript), "
"du nœud le plus bas vers celui le plus haut"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:141
msgid "Changing current scene"
msgstr "Changement de la scène courante"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:143
msgid ""
"After a scene is loaded, it is often desired to change this scene for "
"another one. The simple way to do this is to use the :ref:`SceneTree."
"change_scene() <class_SceneTree_method_change_scene>` function:"
msgstr ""
"Après qu'une scène soit chargée, il est souvent souhaitable de la remplacer "
"par une autre. La façon la plus simple de le faire est d'utiliser la "
"fonction :ref:`SceneTree.change_scene() "
"<class_SceneTree_method_change_scene>` :"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:161
msgid ""
"Rather than using file paths, one can also use ready-made :ref:`PackedScene "
"<class_PackedScene>` resources using the equivalent function :ref:`SceneTree."
"change_scene_to(PackedScene scene) <class_SceneTree_method_change_scene_to>`:"
msgstr ""
"Au lieu d'utiliser des chemins de fichiers, vous pouvez aussi utiliser la "
"ressource déjà prête :ref:`PackedScene <class_PackedScene>` en utilisant la "
"fonction équivalente :ref:`SceneTree.change_scene_to(PackedScene scene) "
"<class_SceneTree_method_change_scene_to>` :"

#: ../../docs/getting_started/step_by_step/scene_tree.rst:182
msgid ""
"These are quick and useful ways to switch scenes but have the drawback that "
"the game will stall until the new scene is loaded and running. At some point "
"in your game, it may be desired to create proper loading screens with "
"progress bar, animated indicators or thread (background) loading. This must "
"be done manually using autoloads (see next chapter!) and :ref:"
"`doc_background_loading`."
msgstr ""
"c'est un moyen rapide de passer d'une scène à une autre mais qui a "
"l'inconvénient suivant : le jeu va devoir attendre jusqu'à ce que la "
"nouvelle scène soit chargée et fonctionne. À un moment donné, dans votre "
"jeu, vous souhaiterez peut-être créer des écrans de chargement avec des "
"barres de progression ou d'autres façons d'indiquer des chargements en tâche "
"de fond. Cela doit être fait manuellement en utilisant des \"autoloads"
"\" (voir le chapitre suivant !) et :ref:`doc_background_loading`."
