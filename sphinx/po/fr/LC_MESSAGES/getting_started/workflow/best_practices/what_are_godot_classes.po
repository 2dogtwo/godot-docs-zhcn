# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-09 13:27+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:4
msgid "Applying object-oriented principles in Godot"
msgstr ""

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:6
msgid ""
"The engine offers two main ways to create reusable objects: scripts and "
"scenes. Neither of these technically define classes under the hood."
msgstr ""

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:9
msgid ""
"Still, many best practices using Godot involve applying object-oriented "
"programming principles to the scripts and scenes that compose your game. "
"That is why it's useful to understand how we can think of them as classes."
msgstr ""

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:13
#, fuzzy
msgid ""
"This guide briefly explains how scripts and scenes work in the engine's core "
"to help you understand how they work under the hood."
msgstr ""
"Ce guide explique comment les scripts et les scènes fonctionnent dans le "
"cœur du moteur, pour vous aider à avoir une idée de la façon dont Godot "
"fonctionne sous le capot, et pour vous aider à mieux comprendre d'où "
"viennent certaines des meilleures pratiques de cette série."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:17
msgid "How scripts work in the engine"
msgstr ""

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:19
msgid ""
"The engine provides built-in classes like :ref:`Node <class_Node>`. You can "
"extend those to create derived types using a script."
msgstr ""

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:22
#, fuzzy
msgid ""
"These scripts are not technically classes. Instead, they are resources that "
"tell the engine a sequence of initializations to perform on one of the "
"engine's built-in classes."
msgstr ""
"Le moteur Godot fournit des classes intégrées comme :ref:`Node "
"<class_Node>`. Les types créés par l'utilisateur ne sont pas techniquement "
"des classes. Au lieu de cela, ce sont des ressources qui indiquent au moteur "
"une séquence d'initialisation à exécuter sur l'une des classes intégrées du "
"moteur."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:25
msgid ""
"Godot's internal classes have methods that register a class's data with a :"
"ref:`ClassDB <class_ClassDB>`. This database provides runtime access to "
"class information. ``ClassDB`` contains information about classes like:"
msgstr ""
"Les classes internes de Godot ont des méthodes qui enregistrent les données "
"d'une classe avec un :ref:`ClassDB <class_ClassDB>`. Cette base de données "
"fournit un accès runtime aux informations de classe. ``ClassDB`` contient "
"des informations sur les classes comme :"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:29
#, fuzzy
msgid "Properties."
msgstr "propriétés"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:30
#, fuzzy
msgid "Methods."
msgstr "les méthodes"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:31
#, fuzzy
msgid "Constants."
msgstr "Constantes"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:32
#, fuzzy
msgid "Signals."
msgstr "Signaux"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:34
#, fuzzy
msgid ""
"This ``ClassDB`` is what objects check against when performing an operation "
"like accessing a property or calling a method. It checks the database's "
"records and the object's base types' records to see if the object supports "
"the operation."
msgstr ""
"Cette ``ClassDB`` est ce que les Objets vérifient quand ils exécutent une "
"opération comme accéder à une propriété ou appeler une méthode. ``ClassDB`` "
"vérifie les enregistrements de la base de données et les enregistrements des "
"types de base de l'objet pour voir si l'objet supporte l'opération."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:38
msgid ""
"Attaching a :ref:`Script <class_Script>` to your object extends the methods, "
"properties, and signals available from the ``ClassDB``."
msgstr ""

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:43
#, fuzzy
msgid ""
"Even scripts that don't use the ``extends`` keyword implicitly inherit from "
"the engine's base :ref:`Reference <class_Reference>` class. As a result, you "
"can instantiate scripts without the ``extends`` keyword from code. Since "
"they extend ``Reference`` though, you cannot attach them to a :ref:`Node "
"<class_Node>`."
msgstr ""
"même les scripts qui n’héritent pas d'un type basique (built-in), c'est à "
"dire qui ne commencent pas avec le mot clé ``extends``, héritent "
"implicitement de la classe `Reference <class_Reference>` du moteur. Cela "
"permet l'objet de s'en remettre au contenu du script si la logique du moteur "
"le juge approprié."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:49
msgid "Scenes"
msgstr "Les scènes"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:51
msgid ""
"The behavior of scenes has many similarities to classes, so it can make "
"sense to think of a scene as a class. Scenes are reusable, instantiable, and "
"inheritable groups of nodes. Creating a scene is similar to having a script "
"that creates nodes and adds them as children using ``add_child()``."
msgstr ""

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:55
#, fuzzy
msgid ""
"We often pair a scene with a scripted root node that makes use of the "
"scene's nodes. As such, the scene is often an extension of the script's "
"declarative code."
msgstr ""
"Pourquoi tout cela est-il important pour l'organisation de la scène ? Parce "
"que les scènes *sont* des objets. On associe souvent une scène à un nœud "
"racine scripté qui utilise les nœuds inférieurs. Cela signifie que la scène "
"est souvent une extension du code déclaratif du script."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:58
msgid "The content of a scene helps to define:"
msgstr "Le contenu d'une scène aide à définir :"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:60
msgid "What nodes are available to the script"
msgstr "Quels nœuds sont disponibles pour le script"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:61
msgid "How they are organized"
msgstr "Comment ils sont organisés"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:62
msgid "How they are initialized"
msgstr "Comment ils sont initialisés"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:63
msgid "What signal connections they have with each other"
msgstr "Quelles connections signal elles ont, les une avec les autres"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:65
#, fuzzy
msgid ""
"Why is any of this important to scene organization? Because instances of "
"scenes *are* objects. As a result, many object-oriented principles that "
"apply to written code also apply to scenes: single responsibility, "
"encapsulation, and others."
msgstr ""
"Pourquoi tout cela est-il important pour l'organisation de la scène ? Parce "
"que les scènes *sont* des objets. On associe souvent une scène à un nœud "
"racine scripté qui utilise les nœuds inférieurs. Cela signifie que la scène "
"est souvent une extension du code déclaratif du script."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:69
#, fuzzy
msgid ""
"The scene is *always an extension of the script attached to its root node*, "
"so you can interpret it as part of a class."
msgstr ""
"La scène est toujours une extension du script attaché à son nœud racine. "
"Considérez chaque nœud qu'il contient comme une partie d'une unique classe."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:72
#, fuzzy
msgid ""
"Most of the techniques explained in this best practices series build on this "
"point."
msgstr ""
"La plupart des conseils et techniques expliqués dans cette série "
"s'appuieront sur ça."
