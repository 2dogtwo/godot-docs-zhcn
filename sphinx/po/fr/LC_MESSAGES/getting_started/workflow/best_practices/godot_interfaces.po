# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-30 19:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:4
msgid "Godot interfaces"
msgstr "Interfaces de Godot"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:6
msgid ""
"Often one needs scripts that rely on other objects for features. There are 2 "
"parts to this process:"
msgstr ""
"Souvent, on a besoin de scripts qui s'appuient sur d'autres objets pour des "
"fonctionnalités. Il y a 2 parties à ce processus :"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:9
msgid "Acquiring a reference to the object that presumably has the features."
msgstr ""
"Acquisition d'une référence à l'objet qui possède vraisemblablement les "
"fonctionnalités."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:11
msgid "Accessing the data or logic from the object."
msgstr "Accès aux données ou à la logique à partir de l'objet."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:13
msgid "The rest of this tutorial outlines the various ways of doing all this."
msgstr ""
"La suite de ce tutoriel décrit les différentes façons de faire tout cela."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:16
msgid "Acquiring object references"
msgstr "Acquisition de références d'objets"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:18
msgid ""
"For all :ref:`Object <class_Object>`\\s, the most basic way of referencing "
"them is to get a reference to an existing object from another acquired "
"instance."
msgstr ""
"Pour tous les :ref:`Object <class_Object>`\\s, la façon la plus simple de "
"les référencer est d'obtenir une référence à un objet existant depuis une "
"autre instance acquise."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:32
msgid ""
"The same principle applies for :ref:`Reference <class_Reference>` objects. "
"While users often access :ref:`Node <class_Node>` and :ref:`Resource "
"<class_Resource>` this way, alternative measures are available."
msgstr ""
"Le même principe s'applique aux objets :ref:`Référence <class_Reference>`. "
"Bien que les utilisateurs accèdent souvent à :ref:`Node <class_Node>` et :"
"ref:`Resource <class_Resource>` de cette façon, des mesures alternatives "
"sont disponibles."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:36
msgid ""
"Instead of property or method access, one can get Resources by load access."
msgstr ""
"Au lieu de l'accès à la propriété ou à la méthode, on peut obtenir des "
"ressources par accès par chargement."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:115
msgid "Note the following:"
msgstr "Notez ce qui suit :"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:117
msgid "There are many ways in which a language can load such resources."
msgstr ""
"Il existe de nombreuses façons pour un langage de charger de telles "
"ressources."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:119
msgid ""
"When designing how objects will access data, don't forget that one can pass "
"resources around as references as well."
msgstr ""
"Lors de la conception de la manière dont les objets accéderont aux données, "
"n'oubliez pas qu'il est également possible de faire circuler des ressources "
"comme références."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:122
msgid ""
"Keep in mind that loading a resource fetches the cached resource instance "
"maintained by the engine. To get a new object, one must :ref:`duplicate "
"<class_Resource_method_duplicate>` an existing reference or instantiate one "
"from scratch with ``new()``."
msgstr ""
"Gardez à l'esprit que le chargement d'une ressource récupère l'instance de "
"ressource mise en cache maintenue par le moteur. Pour obtenir un nouvel "
"objet, il faut :ref:`duplicate <class_Resource_method_duplicate>` une "
"référence existante ou en instancier une à partir de zéro avec ``new()``."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:127
msgid "Nodes likewise have an alternative access point: the SceneTree."
msgstr "Les nœuds ont également un autre point d'accès : le SceneTree."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:244
msgid "Accessing data or logic from an object"
msgstr "Accès aux données ou à la logique à partir d'un objet"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:246
msgid ""
"Godot's scripting API is duck-typed. This means that if a script executes an "
"operation, Godot doesn't validate that it supports the operation by "
"**type**. It instead checks that the object **implements** the individual "
"method."
msgstr ""
"L'API de script de Godot est duck-typed. Cela signifie que si un script "
"exécute une opération, Godot ne valide pas qu'il supporte l'opération par "
"**type**. Au lieu de cela, il vérifie que l'objet **implémente** la méthode "
"individuelle."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:250
msgid ""
"For example, the :ref:`CanvasItem <class_CanvasItem>` class has a "
"``visible`` property. All properties exposed to the scripting API are in "
"fact a setter and getter pair bound to a name. If one tried to access :ref:"
"`CanvasItem.visible <class_CanvasItem_property_visible>`, then Godot would "
"do the following checks, in order:"
msgstr ""
"Par exemple, la classe :ref:`CanvasItem <class_CanvasItem>` a une propriété "
"``visible``. Toutes les propriétés exposées à l'API de script sont en fait "
"une paire setter et getter liée à un nom. Si on essayait d'accéder à :ref:"
"`CanvasItem.visible <class_CanvasItem_property_property_visible>`, alors "
"Godot ferait les vérifications suivantes, dans l'ordre :"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:256
msgid ""
"If the object has a script attached, it will attempt to set the property "
"through the script. This leaves open the opportunity for scripts to override "
"a property defined on a base object by overriding the setter method for the "
"property."
msgstr ""
"Si l'objet a un script attaché, il tentera de définir la propriété à travers "
"le script. Ceci laisse la possibilité pour les scripts de substituer une "
"propriété définie sur un objet de base en substituant la méthode setter de "
"la propriété."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:261
msgid ""
"If the script does not have the property, it performs a HashMap lookup in "
"the ClassDB for the \"visible\" property against the CanvasItem class and "
"all of its inherited types. If found, it will call the bound setter or "
"getter. For more information about HashMaps, see the :ref:`data preferences "
"<doc_data_preferences>` docs."
msgstr ""
"Si le script n'a pas la propriété, il effectue une recherche HashMap dans la "
"ClassDB pour la propriété \"visible\" envers la classe CanvasItem et tous "
"ses types hérités. S'il est trouvé, il appellera le setter ou le getter lié. "
"Pour plus d'informations sur HashMaps, consultez :ref:`data preferences "
"<doc_data_preferences>`."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:267
msgid ""
"If not found, it does an explicit check to see if the user wants to access "
"the \"script\" or \"meta\" properties."
msgstr ""
"S'il n'est pas trouvé, il vérifie explicitement si l'utilisateur veut "
"accéder aux propriétés \"script\" ou \"meta\"."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:270
msgid ""
"If not, it checks for a ``_set``/``_get`` implementation (depending on type "
"of access) in the CanvasItem and its inherited types. These methods can "
"execute logic that gives the impression that the Object has a property. This "
"is also the case with the ``_get_property_list`` method."
msgstr ""
"Si ce n'est pas le cas, il vérifie la présence d'une implémentation ``_set``/"
"``_get`` (selon le type d'accès) dans l'élément CanvasItem et ses types "
"hérités. Ces méthodes peuvent exécuter une logique qui donne l'impression "
"que l'Objet possède une propriété. C'est également le cas avec la méthode "
"``_get_property_list``."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:275
msgid ""
"Note that this happens even for non-legal symbol names such as in the case "
"of :ref:`TileSet <class_TileSet>`'s \"1/tile_name\" property. This refers to "
"the name of the tile with ID 1, i.e. :ref:`TileSet.tile_get_name(1) "
"<class_TileSet_method_tile_get_name>`."
msgstr ""
"Notez que cela se produit même pour les noms de symboles non légaux comme "
"dans le cas de :ref:`TileSet <class_TileSet>`la propriété \"1/tile_name\". "
"Il s'agit du nom de la tuile avec ID 1, i.e. :ref:`TileSet.tile_get_name(1) "
"<class_TileSet_method_tile_get_name>`."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:280
msgid ""
"As a result, this duck-typed system can locate a property either in the "
"script, the object's class, or any class that object inherits, but only for "
"things which extend Object."
msgstr ""
"En conséquence, ce système duck-typed peut localiser une propriété soit dans "
"le script, soit dans la classe de l'objet, soit dans n'importe quelle classe "
"dont l'objet hérite, mais seulement pour les choses qui étendent de Object."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:284
msgid ""
"Godot provides a variety of options for performing runtime checks on these "
"accesses:"
msgstr ""
"Godot fournit une variété d'options pour effectuer des contrôles d'exécution "
"sur ces accès :"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:287
msgid ""
"A duck-typed property access. These will property check (as described "
"above). If the operation isn't supported by the object, execution will halt."
msgstr ""
"Un accès à des propriétés de façon duck-typed. Celles-ci feront l'objet d'un "
"contrôle de propriété (tel que décrit ci-dessus). Si l'opération n'est pas "
"supportée par l'objet, l'exécution s'arrête."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:315
msgid ""
"A method check. In the case of :ref:`CanvasItem.visible "
"<class_CanvasItem_property_visible>`, one can access the methods, "
"``set_visible`` and ``is_visible`` like any other method."
msgstr ""
"Un contrôle de méthode. Dans le cas de :ref:`CanvasItem.visible "
"<class_CanvasItem_property_property_visible>`, on peut accéder aux méthodes, "
"``set_visible`` et ``is_visible`` comme toute autre méthode."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:447
msgid ""
"Outsource the access to a :ref:`FuncRef <class_FuncRef>`. These may be "
"useful in cases where one needs the max level of freedom from dependencies. "
"In this case, one relies on an external context to setup the method."
msgstr ""
"Externaliser l'accès à un :ref:`FuncRef <class_FuncRef>`. Celles-ci peuvent "
"être utiles dans les cas où l'on a besoin d'un niveau maximum de liberté des "
"dépendances. Dans ce cas, on s'appuie sur un contexte externe pour "
"configurer la méthode."

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:506
msgid ""
"These strategies contribute to Godot's flexible design. Between them, users "
"have a breadth of tools to meet their specific needs."
msgstr ""
"Ces stratégies contribuent à la souplesse de conception de Godot. Entre "
"elles, les utilisateurs disposent d'un large éventail d'outils pour répondre "
"à leurs besoins spécifiques."
