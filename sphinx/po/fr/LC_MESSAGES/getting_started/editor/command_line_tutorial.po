# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-28 10:49+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/editor/command_line_tutorial.rst:4
msgid "Command line tutorial"
msgstr "Tutoriel de ligne de commande"

#: ../../docs/getting_started/editor/command_line_tutorial.rst:8
msgid ""
"Some developers like using the command line extensively. Godot is designed "
"to be friendly to them, so here are the steps for working entirely from the "
"command line. Given the engine relies on little to no external libraries, "
"initialization times are pretty fast, making it suitable for this workflow."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:15
msgid "Path"
msgstr "Chemin"

#: ../../docs/getting_started/editor/command_line_tutorial.rst:17
msgid ""
"It is recommended that your godot binary is in your PATH environment "
"variable, so it can be executed easily from any place by typing ``godot``. "
"You can do so on Linux by placing the Godot binary in ``/usr/local/bin`` and "
"making sure it is called ``godot``."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:23
msgid "Setting the project path"
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:25
msgid ""
"Depending on where your Godot binary is located and what your current "
"working directory is, you may need to set the path to your project for any "
"of the following commands to work correctly."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:29
msgid ""
"This can be done by giving the path to the ``project.godot`` file of your "
"project as either the first argument, like this:"
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:36
msgid "Or by using the ``--path`` argument:"
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:42
msgid ""
"For example, the full command for exporting your game (as explained below) "
"might look like this:"
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:49
msgid "Creating a project"
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:51
msgid ""
"To create a project from the command line, navigate the to the desired place "
"and create an empty project.godot file."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:59
msgid "The project can now be opened with Godot."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:62
msgid "Running the editor"
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:64
msgid ""
"Running the editor is done by executing godot with the ``-e`` flag. This "
"must be done from within the project directory, or a subdirectory, otherwise "
"the command is ignored and the project manager appears."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:72
msgid ""
"If a scene has been created and saved, it can be edited later by running the "
"same code with that scene as argument."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:80
msgid "Erasing a scene"
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:82
msgid ""
"Godot is friends with your filesystem, and will not create extra metadata "
"files, simply use ``rm`` to erase a file. Make sure nothing references that "
"scene, or else an error will be thrown upon opening."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:91
msgid "Running the game"
msgstr "Éxécuter le jeu"

#: ../../docs/getting_started/editor/command_line_tutorial.rst:93
msgid ""
"To run the game, simply execute Godot within the project directory or "
"subdirectory."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:100
msgid ""
"When a specific scene needs to be tested, pass that scene to the command "
"line."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:108
msgid "Debugging"
msgstr "Débogage"

#: ../../docs/getting_started/editor/command_line_tutorial.rst:110
msgid ""
"Catching errors in the command line can be a difficult task because they "
"just fly by. For this, a command line debugger is provided by adding ``-d``. "
"It works for both running the game or a simple scene."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:123
msgid "Exporting"
msgstr "Exportation"

#: ../../docs/getting_started/editor/command_line_tutorial.rst:125
msgid ""
"Exporting the project from the command line is also supported. This is "
"especially useful for continuous integration setups. The version of Godot "
"that is headless (server build, no video) is ideal for this."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:134
msgid ""
"The platform names recognized by the ``--export`` switch are the same as "
"displayed in the export wizard of the editor. To get a list of supported "
"platforms from the command line, try exporting to a non-recognized platform "
"and the full listing of platforms your configuration supports will be shown."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:140
msgid ""
"To export a debug version of the game, use the ``--export-debug`` switch "
"instead of ``--export``. Their parameters and usage are the same."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:144
msgid "Running a script"
msgstr "Éxécuter un script"

#: ../../docs/getting_started/editor/command_line_tutorial.rst:146
msgid ""
"It is possible to run a simple .gd script from the command line. This "
"feature is especially useful in large projects, for batch conversion of "
"assets or custom import/export."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:150
msgid "The script must inherit from SceneTree or MainLoop."
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:152
msgid "Here is a simple example of how it works:"
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:163
msgid "And how to run it:"
msgstr ""

#: ../../docs/getting_started/editor/command_line_tutorial.rst:170
msgid ""
"If no project.godot exists at the path, current path is assumed to be the "
"current working directory (unless ``-path`` is specified)."
msgstr ""
