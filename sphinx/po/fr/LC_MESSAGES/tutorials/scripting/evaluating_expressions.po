# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2022, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-24 15:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Evaluating expressions"
msgstr "Évaluation des expressions"

msgid ""
"Godot provides an :ref:`class_Expression` class you can use to evaluate "
"expressions."
msgstr ""

msgid "An expression can be:"
msgstr "Une expression peut être :"

msgid "A mathematical expression such as ``(2 + 4) * 16/4.0``."
msgstr "Une expression mathématique comme ``(2 + 4) * 16/4.0``."

msgid "A built-in method call like ``deg2rad(90)``."
msgstr "Un appel d'une méthode intégrée comme ``deg2rad(90)``."

msgid ""
"A method call on an user-provided script like ``update_health()``, if "
"``base_instance`` is set to a value other than ``null`` when calling :ref:"
"`Expression.execute() <class_Expression_method_execute>`."
msgstr ""

msgid ""
"The Expression class is independent from GDScript. It's available even if "
"you compile Godot with the GDScript module disabled."
msgstr ""

msgid "Basic usage"
msgstr "Utilisation de base"

msgid "To evaluate a mathematical expression, use::"
msgstr "Pour évaluer une expression mathématique, utilisez ::"

msgid "The following operators are available:"
msgstr "Les opérateurs suivants sont disponibles :"

msgid "Operator"
msgstr "Opérateur"

msgid "Notes"
msgstr "Notes"

msgid "Addition ``+``"
msgstr "Addition ``+``"

msgid ""
"Can also be used to concatenate strings and arrays: - ``\"hello\" + \" "
"world\"`` = ``hello world`` - ``[1, 2] + [3, 4]`` = ``[1, 2, 3, 4]``"
msgstr ""

msgid "Subtraction (``-``)"
msgstr "Soustraction (``-``)"

msgid "Multiplication (``*``)"
msgstr "Multiplication (``*``)"

msgid "Division (``/``)"
msgstr "Division (``/``)"

msgid ""
"Performs and integer division if both operands are integers. If at least one "
"of them is a floating-point number, returns a floating-point value."
msgstr ""

msgid "Modulo (``%``)"
msgstr "Module (``%``)"

msgid "Returns the remainder of an integer division."
msgstr "Retourne le reste d'une division entière."

msgid ""
"Spaces around operators are optional. Also, keep in mind the usual `order of "
"operations <https://en.wikipedia.org/wiki/Order_of_operations>`__ applies. "
"Use parentheses to override the order of operations if needed."
msgstr ""

msgid ""
"All the Variant types supported in Godot can be used: integers, floating-"
"point numbers, strings, arrays, dictionaries, colors, vectors, …"
msgstr ""

msgid "Arrays and dictionaries can be indexed like in GDScript::"
msgstr ""

msgid "Passing variables to an expression"
msgstr ""

msgid ""
"You can pass variables to an expression. These variables will then become "
"available in the expression's \"context\" and will be substituted when used "
"in the expression::"
msgstr ""

msgid ""
"Both the variable names and variable values **must** be specified as an "
"array, even if you only define one variable. Also, variable names are **case-"
"sensitive**."
msgstr ""

msgid "Setting a base instance for the expression"
msgstr "Définition d'une instance de base pour l'expression"

msgid ""
"By default, an expression has a base instance of ``null``. This means the "
"expression has no base instance associated to it."
msgstr ""
"Par défaut, une expression à une instance de base à ``null``. Ceci veut dire "
"que l'expression n'a aucune instance qui lui est associée."

msgid ""
"When calling :ref:`Expression.execute() <class_Expression_method_execute>`, "
"you can set the value of the ``base_instance`` parameter to a specific "
"object instance such as ``self``, another script instance or even a "
"singleton::"
msgstr ""

msgid "Associating a base instance allows doing the following:"
msgstr "Associer une instance de base permet de faire ceci :"

msgid "Reference the instance's constants (``const``) in the expression."
msgstr "Référence la constante (``const``) de l'instance dans l'expression."

msgid "Reference the instance's member variables (``var``) in the expression."
msgstr "Référence la variable (``var``) de l'instance dans l'expression."

msgid ""
"Call methods defined in the instance and use their return values in the "
"expression."
msgstr ""

msgid ""
"Setting a base instance to a value other than ``null`` allows referencing "
"constants, member variables, and calling all methods defined in the script "
"attached to the instance. Allowing users to enter expressions may allow "
"cheating in your game, or may even introduce security vulnerabilities if you "
"allow arbitrary clients to run expressions on other players' devices."
msgstr ""

msgid "Example script"
msgstr "Exemple de script"

msgid "The script below demonstrates what the Expression class is capable of::"
msgstr ""

msgid "The output from the script will be::"
msgstr "La sortie depuis le script sera : :"

msgid "Built-in functions"
msgstr "Fonctions intégrées"

msgid ""
"Most methods available in the :ref:`class_@GDScript` scope are available in "
"the Expression class, even if no base instance is bound to the expression. "
"The same parameters and return types are available."
msgstr ""

msgid ""
"However, unlike GDScript, parameters are **always required** even if they're "
"specified as being optional in the class reference. In contrast, this "
"restriction on arguments doesn't apply to user-made functions when you bind "
"a base instance to the expression."
msgstr ""

#, fuzzy
msgid "Translation status"
msgstr "Format de traduction"
