# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-20 16:21+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/inputs/input_examples.rst:4
msgid "Input examples"
msgstr "Exemples d'entrée"

#: ../../docs/tutorials/inputs/input_examples.rst:7
msgid "Introduction"
msgstr "Introduction"

#: ../../docs/tutorials/inputs/input_examples.rst:9
msgid ""
"In this tutorial, you'll learn how to use Godot's :ref:`InputEvent "
"<class_InputEvent>` system to capture player input. There are many different "
"types of input your game may use - keyboard, gamepad, mouse, etc. - and many "
"different ways to turn those inputs into actions in your game. This document "
"will show you some of the most common scenarios, which you can use as "
"starting points for your own projects."
msgstr ""
"Dans ce tutoriel, vous apprendrez comment utiliser le système :ref:"
"`InputEvent <class_InputEvent>` de Godot pour capturer les entrées du "
"joueur. Il existe de nombreux types d'entrée différents que votre jeu peut "
"utiliser - clavier, manette de jeu, souris, etc. - et de nombreuses façons "
"de transformer ces entrées en actions dans votre jeu. Ce document vous "
"présentera certains des scénarios les plus courants, que vous pourrez "
"utiliser comme point de départ pour vos propres projets."

#: ../../docs/tutorials/inputs/input_examples.rst:16
msgid ""
"For a detailed overview of how Godot's input event system works, see :ref:"
"`doc_inputevent`."
msgstr ""
"Pour un aperçu détaillé du fonctionnement du système d'événements d'entrée "
"de Godot, voir :ref:`doc_inputevent`."

#: ../../docs/tutorials/inputs/input_examples.rst:20
msgid "Events versus polling"
msgstr "Événements comparés aux sondages"

#: ../../docs/tutorials/inputs/input_examples.rst:22
msgid ""
"Sometimes you want your game to respond to a certain input event - pressing "
"the \"jump\" button, for example. For other situations, you might want "
"something to happen as long as a key is pressed, such as movement. In the "
"first case, you can use the ``_input()`` function, which will be called "
"whenever an input event occurs. In the second case, Godot provides the :ref:"
"`Input <class_Input>` singleton, which you can use to query the state of an "
"input."
msgstr ""
"Parfois, vous voulez que votre jeu réponde à un certain événement d'entrée - "
"en appuyant sur le bouton \"sauté\", par exemple. Pour d'autres situations, "
"vous pourriez vouloir que quelque chose se produise tant qu'une touche est "
"enfoncée, comme un mouvement. Dans le premier cas, vous pouvez utiliser la "
"fonction ``_input()``, qui sera appelée à chaque fois qu'un événement "
"d'entrée se produit. Dans le second cas, Godot fournit le singleton :ref:"
"`Input <class_Input>`, que vous pouvez utiliser pour interroger l'état d'une "
"entrée."

#: ../../docs/tutorials/inputs/input_examples.rst:29
msgid "Examples:"
msgstr "Exemples :"

#: ../../docs/tutorials/inputs/input_examples.rst:62
msgid ""
"This gives you the flexibility to mix-and-match the type of input processing "
"you do."
msgstr ""
"Cela vous donne la flexibilité de combiner le type de traitement des entrées "
"que vous effectuez."

#: ../../docs/tutorials/inputs/input_examples.rst:65
msgid ""
"For the remainder of this tutorial, we'll focus on capturing individual "
"events in ``_input()``."
msgstr ""
"Pour le reste de ce tutoriel, nous allons nous concentrer sur la capture "
"d'événements individuels dans ``_input()``."

#: ../../docs/tutorials/inputs/input_examples.rst:69
msgid "Input events"
msgstr "Événement d’entrée"

#: ../../docs/tutorials/inputs/input_examples.rst:71
msgid ""
"Input events are objects that inherit from :ref:`InputEvent "
"<class_InputEvent>`. Depending on the event type, the object will contain "
"specific properties related to that event. To see what events actually look "
"like, add a Node and attach the following script:"
msgstr ""
"Les événements d'entrée sont des objets qui héritent de :ref:`InputEvent "
"<class_InputEvent>`. Selon le type d'événement, l'objet contiendra des "
"propriétés spécifiques liées à cet événement. Pour voir à quoi ressemblent "
"réellement les événements, ajoutez un nœud et attachez le script suivant :"

#: ../../docs/tutorials/inputs/input_examples.rst:91
msgid ""
"As you press keys, move the mouse, and perform other inputs, you'll see each "
"event scroll by in the output window. Here's an example of the output:"
msgstr ""
"Lorsque vous appuyez sur les touches, déplacez la souris et effectuez "
"d'autres entrées, vous verrez chaque événement défiler dans la fenêtre de "
"sortie. Voici un exemple de la sortie :"

#: ../../docs/tutorials/inputs/input_examples.rst:105
msgid ""
"As you can see, the results are very different for the different types of "
"input. Key events are even printed as their key symbols. For example, let's "
"consider :ref:`InputEventMouseButton <class_InputEventMouseButton>`. It "
"inherits from the following classes:"
msgstr ""
"Comme vous pouvez le voir, les résultats sont très différents pour les "
"différents types de saisie. Les événements de touches sont même imprimés en "
"tant que symboles de touches. Par exemple, considérons :ref:"
"`InputEventMouseButton <class_InputEventMouseButton>`. Il hérite des classes "
"suivantes :"

#: ../../docs/tutorials/inputs/input_examples.rst:109
msgid ""
":ref:`InputEvent <class_InputEvent>` - the base class for all input events"
msgstr ""
":ref:`InputEvent <class_InputEvent>` - la classe de base pour tous les "
"événements d'entrée"

#: ../../docs/tutorials/inputs/input_examples.rst:110
msgid ""
":ref:`InputEventWithModifiers <class_InputEventWithModifiers>` - adds the "
"ability to check if modifiers are pressed, such as :kbd:`Shift` or :kbd:"
"`Alt`."
msgstr ""
":ref:`InputEventWithModifiers <class_InputEventWithModifiers>` - ajoute la "
"possibilité de vérifier si des modificateurs sont pressés, comme :kbd:"
"`Shift` ou :kbd:`Alt`."

#: ../../docs/tutorials/inputs/input_examples.rst:111
msgid ""
":ref:`InputEventMouse <class_InputEventMouse>` - adds mouse event "
"properties, such as ``position``"
msgstr ""
":ref:`InputEventMouse <class_InputEventMouse>` - ajoute les propriétés des "
"événements de la souris, comme ``position``"

#: ../../docs/tutorials/inputs/input_examples.rst:112
msgid ""
":ref:`InputEventMouseButton <class_InputEventMouseButton>` - contains the "
"index of the button that was pressed, whether it was a double-click, etc."
msgstr ""
":ref:`InputEventMouseButton <class_InputEventMouseButton>` - contient "
"l'index du bouton qui a été pressé, si c'était un double-clic, etc."

#: ../../docs/tutorials/inputs/input_examples.rst:114
msgid ""
"It's a good idea to keep the class reference open while you're working with "
"events so you can check the event type's available properties and methods."
msgstr ""
"C'est une bonne idée de garder la référence de la classe ouverte lorsque "
"vous travaillez avec des événements afin de pouvoir vérifier les propriétés "
"et les méthodes disponibles du type d'événement."

#: ../../docs/tutorials/inputs/input_examples.rst:118
msgid ""
"You can encounter errors if you try to access a property on an input type "
"that doesn't contain it - calling ``position`` on ``InputEventKey`` for "
"example. To avoid this, make sure to test the event type first:"
msgstr ""
"Vous pouvez rencontrer des erreurs si vous essayez d'accéder à une propriété "
"sur un type d'entrée qui ne la contient pas - en appelant ``position`` sur "
"``InputEventKey`` par exemple. Pour éviter cela, assurez-vous de tester "
"d'abord le type d'événement :"

#: ../../docs/tutorials/inputs/input_examples.rst:140
msgid "InputMap"
msgstr "InputMap"

#: ../../docs/tutorials/inputs/input_examples.rst:142
msgid ""
"The :ref:`InputMap <class_InputMap>` is the most flexible way to handle a "
"variety of inputs. You use this by creating named input *actions*, to which "
"you can assign any number of input events, such as keypresses or mouse "
"clicks. A new Godot project includes a number of default actions already "
"defined. To see them, and to add your own, open Project -> Project Settings "
"and select the InputMap tab:"
msgstr ""
"La :ref:`InputMap <class_InputMap>` est la façon la plus flexible de gérer "
"une variété d'entrées. Vous utilisez ceci en créant des *actions* d'entrée "
"nommées, auxquelles vous pouvez attribuer un nombre quelconque d'événements "
"d'entrée, tels que des pressions de touches ou des clics de souris. Un "
"nouveau projet Godot comprend un certain nombre d'actions par défaut déjà "
"définies. Pour les voir, et pour ajouter les vôtres, ouvrez Projet -> "
"Paramètres du projet et sélectionnez l'onglet InputMap :"

#: ../../docs/tutorials/inputs/input_examples.rst:152
msgid "Capturing actions"
msgstr "Capturer les actions"

#: ../../docs/tutorials/inputs/input_examples.rst:154
msgid ""
"Once you've defined your actions, you can process them in your scripts using "
"``is_action_pressed()`` and ``is_action_released()`` by passing the name of "
"the action you're looking for:"
msgstr ""
"Une fois que vous avez défini vos actions, vous pouvez les traiter dans vos "
"scripts en utilisant ``is_action_pressed()`` et ``is_action_released()`` en "
"passant le nom de l'action que vous recherchez :"

#: ../../docs/tutorials/inputs/input_examples.rst:176
msgid "Keyboard events"
msgstr "Événements clavier"

#: ../../docs/tutorials/inputs/input_examples.rst:178
msgid ""
"Keyboard events are captured in :ref:`InputEventKey <class_InputEventKey>`. "
"While it's recommended to use input actions instead, there may be cases "
"where you want to specifically look at key events. For this example, let's "
"check for the :kbd:`T`:"
msgstr ""
"Les événements clavier sont capturés dans :ref:`InputEventKey "
"<class_InputEventKey>`. Bien qu'il soit recommandé d'utiliser plutôt des "
"actions d'entrées, il peut y avoir des cas où vous voulez examiner "
"spécifiquement des événements clavier. Pour cet exemple, vérifions la "
"touche :kbd:`T` :"

#: ../../docs/tutorials/inputs/input_examples.rst:204
#: ../../docs/tutorials/inputs/input_examples.rst:242
msgid ""
"See :ref:`@GlobalScope_KeyList <enum_@GlobalScope_KeyList>` for a list of "
"scancode constants."
msgstr ""
"Voir :ref:`@GlobalScope_KeyList <enum_@GlobalScope_KeyList>` pour une liste "
"des constantes du scancode."

#: ../../docs/tutorials/inputs/input_examples.rst:208
msgid "Keyboard modifiers"
msgstr "Modificateurs de clavier"

#: ../../docs/tutorials/inputs/input_examples.rst:210
msgid ""
"Modifier properties are inherited from :ref:`InputEventWithModifiers "
"<class_InputEventWithModifiers>`. This  allows you to check for modifier "
"combinations using boolean properties. Let's imagine you want one thing to "
"happen when the :kbd:`T` is pressed, but something different when it's :kbd:"
"`Shift + T`:"
msgstr ""
"Les propriétés des modificateurs sont héritées de :ref:"
"`InputEventWithModifiers <class_InputEventWithModifiers>`. Cela vous permet "
"de vérifier les combinaisons de modificateurs à l'aide de propriétés "
"booléennes. Imaginons que vous vouliez qu'une chose se produise lorsque la "
"touche :kbd:`T` est pressée, mais que quelque chose de différent se produise "
"lorsque c'est :kbd:`Shift + T` :"

#: ../../docs/tutorials/inputs/input_examples.rst:246
msgid "Mouse events"
msgstr "Événements souris"

#: ../../docs/tutorials/inputs/input_examples.rst:248
msgid ""
"Mouse events stem from the :ref:`InputEventMouse <class_InputEventMouse>` "
"class, and are separated into two types: :ref:`InputEventMouseButton "
"<class_InputEventMouseButton>` and :ref:`InputEventMouseMotion "
"<class_InputEventMouseMotion>`. Note that this means that all mouse events "
"will contain a ``position`` property."
msgstr ""
"Les événements souris proviennent de la classe :ref:`InputEventMouse "
"<class_InputEventMouse>`, et sont séparés en deux types : :ref:"
"`InputEventMouseButton <class_InputEventMouseButton>` et :ref:"
"`InputEventMouseMotion <class_InputEventMouseMotion>`. Notez que cela "
"signifie que tous les événements souris contiendront une propriété "
"``position``."

#: ../../docs/tutorials/inputs/input_examples.rst:254
msgid "Mouse buttons"
msgstr "Boutons de la souris"

#: ../../docs/tutorials/inputs/input_examples.rst:256
msgid ""
"Capturing mouse buttons is very similar to handling key events. :ref:"
"`@GlobalScope_ButtonList <enum_@GlobalScope_ButtonList>` contains a list of "
"``BUTTON_*`` constants for each possible button, which will be reported in "
"the event's ``button_index`` property. Note that the scrollwheel also counts "
"as a button - two buttons, to be precise, with both ``BUTTON_WHEEL_UP`` and "
"``BUTTON_WHEEL_DOWN`` being separate events."
msgstr ""
"La capture des boutons de la souris est très similaire à la gestion des "
"événements touches. :ref:`@GlobalScope_ButtonList "
"<enum_@GlobalScope_ButtonList>` contient une liste de constantes "
"``BUTTON_*`` pour chaque bouton possible, qui sera rapportée dans la "
"propriété ``button_index`` de l'événement. Notez que la molette de "
"défilement compte aussi comme un bouton - deux boutons, pour être précis, "
"avec les deux ``BUTTON_WHEEL_UP`` et ``BUTTON_WHEEL_DOWN`` étant des "
"événements séparés."

#: ../../docs/tutorials/inputs/input_examples.rst:291
msgid "Mouse motion"
msgstr "Mouvement de la souris"

#: ../../docs/tutorials/inputs/input_examples.rst:293
msgid ""
":ref:`InputEventMouseMotion <class_InputEventMouseMotion>` events occur "
"whenever the mouse moves. You can find the move's distance with the "
"``relative`` property."
msgstr ""
":ref:`InputEventMouseMotion <class_InputEventMouseMotion>` les événements se "
"produisent à chaque fois que la souris bouge. Vous pouvez trouver la "
"distance du mouvement avec la propriété ``relative``."

#: ../../docs/tutorials/inputs/input_examples.rst:297
msgid ""
"Here's an example using mouse events to drag-and-drop a :ref:`Sprite "
"<class_Sprite>` node:"
msgstr ""
"Voici un exemple d'utilisation des événements de la souris pour glisser-"
"déposer un nœud :ref:`Sprite <class_Sprite>` :"

#: ../../docs/tutorials/inputs/input_examples.rst:355
msgid "Touch events"
msgstr "Événements tactiles"

#: ../../docs/tutorials/inputs/input_examples.rst:357
msgid ""
"If you are using a touchscreen device, you can generate touch events. :ref:"
"`InputEventScreenTouch <class_InputEventScreenTouch>` is equivalent to a "
"mouse click event, and :ref:`InputEventScreenDrag "
"<class_InputEventScreenDrag>` works much the same as mouse motion."
msgstr ""
"Si vous utilisez un appareil avec un écran tactile, vous pouvez générer des "
"événements tactiles. :ref:`InputEventScreenTouch "
"<class_InputEventScreenTouch>` est équivalent à un événement de clic de "
"souris, et :ref:`InputEventScreenDrag <class_InputEventScreenDrag>` "
"fonctionne à peu près de la même manière qu'un mouvement de souris."

#: ../../docs/tutorials/inputs/input_examples.rst:362
msgid ""
"To test your touch events on a non-touchscreen device, open Project Settings "
"and go to the \"Input Devices/Pointing\" section. Enable \"Emulate Touch "
"From Mouse\" and your project will interpret mouse clicks and motion as "
"touch events."
msgstr ""
"Pour tester vos événements tactiles sur un appareil sans écran tactile, "
"ouvrez Paramètres de projet et allez à la section \"Input Devices/Pointing"
"\". Activez \"Emulate Touch From Mouse\" et votre projet interprétera les "
"clics et les mouvements de la souris comme des événements tactiles."
