# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-30 19:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:4
msgid "Using the MeshDataTool"
msgstr "Utilisation du MeshDataTool"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:6
#, fuzzy
msgid ""
"The :ref:`MeshDataTool <class_meshdatatool>` is not used to generate "
"geometry. But it is helpful for dynamically altering geometry, for example "
"if you want to write a script to tessellate, simplify, or deform meshes."
msgstr ""
"MeshDataTool n'est pas utilisé pour générer de la géométrie. Mais il est "
"utile pour modifier dynamiquement la géométrie, par exemple si vous voulez "
"écrire un script pour tesseler, simplifier ou déformer des maillages."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:9
msgid ""
"The MeshDataTool is not as fast as altering arrays directly using ArrayMesh. "
"However, it provides more information and tools to work with meshes than the "
"ArrayMesh does. When the MeshDataTool is used, it calculates mesh data that "
"is not available in ArrayMeshes such as faces and edges, which are necessary "
"for certain mesh algorithms. If you do not need this extra information then "
"it may be better to use an ArrayMesh."
msgstr ""
"MeshDataTool n'est pas aussi rapide que la modification d'arrays directement "
"à l'aide d'ArrayMesh. Cependant, il fournit plus d'informations et d'outils "
"pour travailler avec des maillages que ne le fait ArrayMesh. Lorsque le "
"MeshDataTool est utilisé, il calcule les données de maillage qui ne sont pas "
"disponibles dans ArrayMeshes telles que les faces et les arêtes, qui sont "
"nécessaires pour certains algorithmes de maillage. Si vous n'avez pas besoin "
"de ces informations supplémentaires, il peut être préférable d'utiliser un "
"ArrayMesh."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:14
msgid ""
"MeshDataTool can only be used on Meshes that use the PrimitiveType ``Mesh."
"PRIMITIVE_TRIANGLES``."
msgstr ""
"MeshDataTool ne peut être utilisé que sur les maillages qui utilisent le "
"PrimitiveType ``Mesh.PRIMITIVE_TRIANGLES``."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:16
msgid ""
"As an example, let's walk through the process of deforming the mesh "
"generated in the :ref:`ArrayMesh tutorial <doc_arraymesh>`."
msgstr ""
"A titre d'exemple, nous allons parcourir le processus de déformation du "
"maillage généré dans le tutoriel :ref:`ArrayMesh <doc_arraymesh>`."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:18
msgid ""
"Assume the mesh is stored in an ArrayMesh named ``mesh``. We then initialize "
"the MeshDataTool from ``mesh`` by calling ``create_from_surface()``. If "
"there is already data initialized in the MeshDataTool calling "
"``create_from_surface()`` will clear it for you. Alternatively, you can call "
"``clear()`` yourself before re-using the MeshDataTool"
msgstr ""
"Supposons que le maillage soit stocké dans un ArrayMesh appelé ``mesh``. "
"Nous initialisons alors le MeshDataTool à partir de ``mesh`` en appelant "
"``create_from_surface()``. S'il y a déjà des données initialisées dans le "
"MeshDataTool, appeller ``create_from_surface()`` les effacera pour vous. "
"Vous pouvez aussi appeler vous-même ``clear()`` avant de réutiliser le "
"MeshDataTool"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:29
msgid ""
"``create_from_surface()`` uses the vertex arrays from the ArrayMesh to "
"calculate two additional arrays, one for edges and one for faces."
msgstr ""
"``create_from_surface()`` utilise les arrays de sommets du ArrayMesh pour "
"calculer deux tableaux supplémentaires, un pour les arêtes et un pour les "
"faces."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:32
msgid ""
"An edge is a connection between any two vertices. Each edge in the edge "
"array contains a reference to the two vertices it is composed of, and up to "
"two faces that it is contained within."
msgstr ""
"Une arête est une connexion entre deux sommets. Chaque arête de l'array "
"d'arêtes contient une référence aux deux sommets qui la composent et jusqu'à "
"deux faces dans lesquelles elle est contenue."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:35
msgid ""
"A face is a triangle made up of three vertices and three corresponding "
"edges. Each face in the face array contains a reference to the three "
"triangles and three edges it is composed of."
msgstr ""
"Une face est un triangle composé de trois sommets et de trois arêtes "
"correspondantes. Chaque face de l'array de faces contient une référence aux "
"trois triangles et aux trois arêtes qui la composent."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:38
msgid ""
"The vertex array contains edges, faces, normals, color, tangent, uv, uv2, "
"bones, and weight information connected with each vertex."
msgstr ""
"L'array des vertex contient les arêtes, les faces, les normales, les "
"couleurs, les tangentes, les uv, les uv2, les os et les informations de "
"poids liées à chaque vertex."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:41
msgid ""
"To access information from these arrays you use a function of the form "
"``get_****()``:"
msgstr ""
"Pour accéder aux informations de ces tableaux, vous utilisez une fonction de "
"la forme ``get_****()`` :"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:51
msgid ""
"What you choose to do with these functions is up to you. A common use case "
"is to iterate over all vertices and transform them in some way:"
msgstr ""
"Ce que vous choisissez de faire avec ces fonctions dépend de vous. Un cas "
"d'utilisation courant consiste à parcourir tous les sommets et à les "
"transformer d'une manière ou d'une autre :"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:62
msgid ""
"Finally, ``commit_to_surface()`` adds a new surface to the ArrayMesh. So if "
"you are dynamically updating an existing ArrayMesh, first delete the "
"existing surface before adding a new one."
msgstr ""
"Enfin, ``commit_to_surface()`` ajoute une nouvelle surface à l'ArrayMesh. "
"Donc si vous mettez à jour dynamiquement un ArrayMesh existant, supprimez "
"d'abord la surface existante avant d'en ajouter une nouvelle."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:71
msgid ""
"Below is a complete example that creates a pulsing blob complete with new "
"normals and vertex colors."
msgstr ""
"Vous trouverez ci-dessous un exemple complet qui crée un blob pulsé avec de "
"nouvelles couleurs de normales et de sommets."
