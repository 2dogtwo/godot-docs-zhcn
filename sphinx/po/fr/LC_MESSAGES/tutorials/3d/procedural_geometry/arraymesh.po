# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2022, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-08 13:53+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the ArrayMesh"
msgstr "Utilisation du ArrayMesh"

msgid ""
"This tutorial will present the basics of using an :ref:`ArrayMesh "
"<class_arraymesh>`"
msgstr ""
"Ce tutoriel présente les bases de l'utilisation d'un :ref:`ArrayMesh "
"<class_arraymesh>`"

msgid ""
"To do so, we will use the function :ref:`add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`, which takes up to four "
"parameters. The first two are required, while the second two are optional."
msgstr ""
"Pour ce faire, nous utiliserons la fonction :ref:`add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`, qui prend jusqu'à quatre "
"paramètres. Les deux premiers sont obligatoires, tandis que les deux autres "
"sont facultatifs."

msgid ""
"The first is the ``PrimitiveType``, this is an OpenGL concept that instructs "
"the GPU how to arrange the primitive based on the vertices given whether it "
"is triangles, lines, points, etc. A complete list can be found under the :"
"ref:`Mesh <class_mesh>` class reference page."
msgstr ""
"Le premier est le ``PrimitiveType``, c'est un concept OpenGL qui indique au "
"GPU comment arranger la primitive en fonction des sommets donnés, qu'il "
"s'agisse de triangles, de lignes, de points, etc. Une liste complète peut "
"être trouvée sur la page de référence de la classe :ref:`Mesh <class_mesh>`."

msgid ""
"The second is the actual Array that stores the mesh information. The array "
"is a normal Godot array that is constructed with empty brackets ``[]``. It "
"stores a ``Pool**Array`` (e.g. PoolVector3Array, PoolIntArray, etc.) for "
"each type of information."
msgstr ""
"Le second est le Array réel qui stocke les informations sur le maillage. Le "
"array est un array de Godot normal qui est construit avec des crochets vides "
"``[]``. Il stocke un ``Pool**Array`` (par exemple PoolVector3Array, "
"PoolIntArray, etc.) pour chaque type d'information."

msgid "``ARRAY_VERTEX`` = 0 | PoolVector3Array or PoolVector2Array"
msgstr "``ARRAY_VERTEX`` = 0 | PoolVector3Array ou PoolVector2Array"

msgid "``ARRAY_NORMAL`` = 1 | PoolVector3Array"
msgstr "``ARRAY_NORMAL`` = 1 | PoolVector3Array"

msgid ""
"``ARRAY_TANGENT`` = 2 | PoolRealArray of groups of 4 floats. First 3 floats "
"determine the tangent, and the last the binormal direction as -1 or 1."
msgstr ""
"``ARRAY_TANGENT`` = 2 | PoolRealArray de groupes de 4 flottants. Les 3 "
"premiers flottants déterminent la tangente, et le dernier la direction "
"binormale comme -1 ou 1."

msgid "``ARRAY_COLOR`` = 3 | PoolColorArray"
msgstr "``ARRAY_COLOR`` = 3 | PoolColorArray"

msgid "``ARRAY_TEX_UV`` = 4 | PoolVector2Array or PoolVector3Array"
msgstr "``ARRAY_TEX_UV`` = 4 | PoolVector2Array ou PoolVector3Array"

msgid "``ARRAY_TEX_UV2`` = 5 | PoolVector2Array or PoolVector3Array"
msgstr "``ARRAY_TEX_UV2`` = 5 | PoolVector2Array ou PoolVector3Array"

#, fuzzy
msgid ""
"``ARRAY_BONES`` = 6 | PoolRealArray of groups of 4 floats or PoolIntArray of "
"groups of 4 ints. Each group lists indexes of 4 bones that affects a given "
"vertex."
msgstr ""
"``ARRAY_BONES`` = 6 | PoolRealArray de groupes de 4 flottants ou "
"PoolIntArray de groupes de 4 ints"

#, fuzzy
msgid ""
"``ARRAY_WEIGHTS`` = 7 | PoolRealArray of groups of 4 floats. Each float "
"lists the amount of weight an determined bone on ``ARRAY_BONES`` has on a "
"given vertex."
msgstr ""
"``ARRAY_TANGENT`` = 2 | PoolRealArray de groupes de 4 flottants. Les 3 "
"premiers flottants déterminent la tangente, et le dernier la direction "
"binormale comme -1 ou 1."

msgid "``ARRAY_INDEX`` = 8 | PoolIntArray"
msgstr "``ARRAY_INDEX`` = 8 | PoolIntArray"

msgid ""
"The Array of vertices is always required. All the others are optional and "
"will only be used if included."
msgstr ""
"L'Array des sommets est toujours requis. Tous les autres sont facultatifs et "
"ne seront utilisés que s'ils sont inclus."

msgid ""
"Each array needs to have the same number of elements as the vertex array "
"except for the index array. For arrays like tangents, an element is a group "
"of 4 floats. So the array size will be four times the size of the vertex "
"array size, but they will have the same number of elements"
msgstr ""
"Chaque array doit avoir le même nombre d'éléments que l'array des sommets, à "
"l'exception de l'array des index. Pour les arrays comme les tangentes, un "
"élément est un groupe de 4 flottants. La taille de l'array sera donc quatre "
"fois plus grande que celle de l'array des sommets, mais ils auront le même "
"nombre d'éléments"

msgid "The index array is unique."
msgstr "L'array des index est unique."

msgid ""
"The third parameter is an array of blendshapes for the Mesh to use. While "
"this tutorial does not cover using blendshapes, it is possible to specify "
"them when creating a surface from arrays."
msgstr ""
"Le troisième paramètre est un ensemble de blendshapes à utiliser pour le "
"Mesh. Bien que ce tutoriel ne couvre pas l'utilisation des blendshapes, il "
"est possible de les spécifier lors de la création d'une surface à partir "
"d'arrays."

msgid ""
"The last parameter is the compress flags which specifies which arrays to "
"store with half as many bits. The values can be found in the classref for :"
"ref:`VisualServer <class_visualserver>` under :ref:`ArrayFormat "
"<enum_visualserver_arrayformat>`."
msgstr ""
"Le dernier paramètre est les drapeaux de compression qui spécifient les "
"arrays à stocker avec deux fois moins de bits. Les valeurs peuvent être "
"trouvées dans la classref pour :ref:`VisualServer <class_visualserver>` "
"sous :ref:`ArrayFormat <enum_visualserver_arrayformat>`."

msgid ""
"For normal usage you will find it is best to leave the last two parameters "
"empty."
msgstr ""
"Pour une utilisation normale, il est préférable de laisser les deux derniers "
"paramètres vides."

msgid "ArrayMesh"
msgstr "ArrayMesh"

msgid ""
"Add an :ref:`ArrayMesh <class_arraymesh>` to a MeshInstance. Normally, "
"adding an ArrayMesh in the editor is not useful, but in this case it allows "
"as to access the ArrayMesh from code without creating one."
msgstr ""
"Ajoutez un :ref:`ArrayMesh <class_arraymesh>` à une MeshInstance. "
"Normalement, l'ajout d'un ArrayMesh dans l'éditeur n'est pas utile, mais "
"dans ce cas il permet d'accéder au ArrayMesh à partir du code sans en créer "
"un."

msgid "Next, add a script to the MeshInstance."
msgstr "Ensuite, ajoutez un script au MeshInstance."

msgid "Under ``_ready()``, create a new Array."
msgstr "Sous ``_ready()``, créez un nouvel Array."

msgid ""
"This will be the array that we keep our surface information in, it will hold "
"all the arrays of data that the surface needs. Godot will expect it to be of "
"size ``Mesh.ARRAY_MAX``, so resize it accordingly."
msgstr ""
"Ce sera l'array dans lequel nous conserverons nos informations de surface, "
"il contiendra tous les arrays de données dont la surface a besoin. Godot "
"s'attendra à ce qu'il soit de la taille ``Mesh.ARRAY_MAX``, alors "
"redimensionnez-le en conséquence."

msgid "Next create the arrays for each data type you will use."
msgstr ""
"Créez ensuite les arrays pour chaque type de données que vous utiliserez."

msgid ""
"Once you have filled your data arrays with your geometry you can create a "
"mesh by adding each array to ``surface_array`` and then committing to the "
"mesh."
msgstr ""
"Une fois que vous avez rempli vos arrays de données avec votre géométrie, "
"vous pouvez créer un maillage en ajoutant chaque array à ``surface_array``, "
"puis en validant le maillage."

msgid ""
"In this example, we used ``Mesh.PRIMITIVE_TRIANGLES``, but you can use any "
"primitive type available from mesh."
msgstr ""
"Dans cet exemple, nous avons utilisé ``Mesh.PRIMITIVE_TRIANGLES``, mais vous "
"pouvez utiliser n'importe quel type primitif disponible à partir de mesh."

msgid "Put together the full code looks like:"
msgstr "Le code complet ressemble à ceci :"

msgid ""
"The code that goes in the middle can be whatever you want. Below we will "
"present some example code that could go in the middle."
msgstr ""
"Le code qui va au milieu peut être ce que vous voulez. Ci-dessous, nous "
"présenterons un exemple de code qui pourrait aller au milieu."

msgid "Generating geometry"
msgstr "Génération de la géométrie"

msgid ""
"Here is sample code for generating a sphere. Although the code is presented "
"in GDScript, there is nothing Godot specific about the approach to "
"generating it. This implementation has nothing in particular to do with "
"ArrayMeshes and is just a generic approach to generating a sphere. If you "
"are having trouble understanding it or want to learn more about procedural "
"geometry in general, you can use any tutorial that you find online."
msgstr ""
"Voici un exemple de code pour générer une sphère. Bien que le code soit "
"présenté en GDScript, il n'y a rien de spécifique à Godot dans l'approche de "
"sa génération. Cette implémentation n'a rien de particulier à voir avec "
"ArrayMeshes et n'est qu'une approche générique pour générer une sphère. Si "
"vous avez du mal à comprendre ou si vous souhaitez en savoir plus sur la "
"géométrie procédurale en général, vous pouvez utiliser n'importe quel "
"tutoriel que vous trouverez en ligne."

msgid "Combined with the code above, this code will generate a sphere."
msgstr "Combiné avec le code ci-dessus, ce code va générer une sphère."

msgid ""
"When it comes to generating geometry with the ArrayMesh you need to "
"understand what goes in each array and then you can follow tutorials for any "
"language/engine and convert it into Godot."
msgstr ""
"Quand il s'agit de générer une géométrie avec ArrayMesh, vous devez "
"comprendre ce qui se passe dans chaque array, puis vous pouvez suivre des "
"tutoriels pour n'importe quel langage/moteur et le convertir dans Godot."

msgid "Saving"
msgstr "Enregistrer"

msgid ""
"Finally, Godot provides a single method to save ArrayMeshes using the :ref:"
"`ResourceSaver <class_resourcesaver>` class. This is useful when you want to "
"generate a mesh and then use it later without having to re-generate."
msgstr ""
"Enfin, Godot fournit une méthode unique pour enregistrer ArrayMeshes en "
"utilisant la classe :ref:`ResourceSaver <class_resourcesaver>`. Ceci est "
"utile lorsque vous souhaitez générer un maillage, puis l'utiliser plus tard "
"sans avoir à générer de nouveau."

msgid "Translation status"
msgstr "État de la traduction"
