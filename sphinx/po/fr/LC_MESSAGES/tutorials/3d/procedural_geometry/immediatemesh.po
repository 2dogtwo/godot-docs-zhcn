# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 18:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Using ImmediateMesh"
msgstr "Utilisation de ImmediateGeometry"

#, fuzzy
msgid ""
"Unlike the SurfaceTool or ArrayMesh, :ref:`ImmediateMesh "
"<class_ImmediateMesh>` is an actual node. Being a node makes it quick to add "
"to a scene and get visual output. It uses an OpenGL 1.x-style API like "
"SurfaceTool, but it's actually designed to create meshes on the fly."
msgstr ""
"Contrairement à SurfaceTool ou à ArrayMesh, :ref:`ImmediateGeometry "
"<class_ImmediateGeometry>` est un nœud réel. Être un nœud permet d'être "
"ajouter rapidement à une scène et d'obtenir une sortie visuelle. Il utilise "
"une API de style OpenGL 1.x comme SurfaceTool, mais il est en fait conçu "
"pour créer des maillages à la volée."

msgid ""
"Generating complex geometry (several thousand vertices) with this node is "
"inefficient, even if it's done only once. Instead, it is designed to "
"generate simple geometry that changes every frame."
msgstr ""
"Générer une géométrie complexe (plusieurs milliers de sommets) avec ce nœud "
"est inefficace, même si cela n'est fait qu'une seule fois. Il est plutôt "
"conçu pour générer une géométrie simple qui change à chaque image."

#, fuzzy
msgid ""
"Before starting, you should clear the geometry by calling "
"``clear_surfaces()``. This ensures that you are not building upon the "
"geometry from the previous frame. If you want to keep geometry between "
"frames, do not call ``clear_surfaces()``."
msgstr ""
"Avant de commencer, vous devez effacer la géométrie en appelant ``clear()``. "
"Cela permet de s'assurer que vous ne construisez pas sur la géométrie de "
"l'image précédente. Si vous voulez conserver la géométrie entre les blocs, "
"n'appelez pas ``clear()``."

#, fuzzy
msgid ""
"To begin generating geometry you must call ``surface_begin()``. "
"``surface_begin()`` takes a ``PrimitiveType`` as an argument. "
"``PrimitiveType`` is an OpenGL concept that instructs the GPU how to arrange "
"the primitive based on the vertices given whether it is triangles, lines, "
"points, etc. A complete list can be found under the :ref:`Mesh <class_mesh>` "
"class reference page."
msgstr ""
"Pour commencer à générer la géométrie, vous devez appeler ``begin()``. Le "
"``begin()`` prend un ``PrimitiveType`` comme argument. ``PrimitiveType`` est "
"un concept OpenGL qui indique au GPU comment organiser la primitive en "
"fonction des sommets, qu'il s'agisse de triangles, de droites, de points, "
"etc. Une liste complète peut être trouvée sur la page de référence de la "
"classe :ref:`Mesh <class_mesh>`."

#, fuzzy
msgid ""
"Once you have called ``surface_begin()`` you are ready to start adding "
"vertices. You add vertices one at a time. First you add vertex specific "
"attributes such as normals or UVs using ``surface_set_****()`` (e.g. "
"``surface_set_normal()``). Then you call ``surface_add_vertex()`` to add a "
"vertex with those attributes. For example:"
msgstr ""
"Une fois que vous avez appelé ``begin()``, vous êtes prêt à commencer à "
"ajouter des sommets. Vous ajoutez les sommets un par un. Tout d'abord, vous "
"ajoutez des attributs spécifiques aux sommets tels que les normales ou les "
"UV en utilisant ``set_****()`` (par exemple ``set_normal()``). Ensuite, vous "
"appelez ``add_vertex()`` pour ajouter un sommet avec ces attributs. Par "
"exemple :"

#, fuzzy
msgid ""
"Only attributes added before the call to ``surface_add_vertex()`` will be "
"included in that vertex."
msgstr ""
"Seuls les attributs ajoutés avant l'appel de ``add_vertex()`` seront inclus "
"dans ce sommet."

#, fuzzy
msgid ""
"Finally, once you have added all your vertices call ``surface_end()`` to "
"signal that you have finished generating the mesh."
msgstr ""
"Enfin, une fois que vous avez ajouté tous vos sommets, appelez ``end()`` "
"pour signaler que vous avez fini de générer le maillage."

msgid "The example code below draws a single triangle."
msgstr "L'exemple de code ci-dessous dessine un seul triangle."

msgid "Translation status"
msgstr "État de la traduction"
