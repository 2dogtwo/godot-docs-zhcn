# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-22 14:46+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:4
msgid "Part 2"
msgstr "Partie 2"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:7
msgid "Part overview"
msgstr "Aperçu cette partie"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:9
msgid "In this part we will be giving our player weapons to play with."
msgstr ""
"Dans cette partie, nous donnerons à notre joueur des armes avec lesquelles "
"jouer."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:13
msgid ""
"By the end of this part, you will have a player that can fire a pistol, "
"rifle, and attack using a knife. The player will also now have animations "
"with transitions, and the weapons will interact with objects in the "
"environment."
msgstr ""
"À la fin de cette partie, vous aurez un joueur qui pourra tirer avec un "
"pistolet, un fusil et attaquer avec un couteau. Le joueur aura aussi "
"maintenant des animations avec des transitions, et les armes interagiront "
"avec les objets dans l'environnement."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:17
msgid ""
"You are assumed to have finished :ref:`doc_fps_tutorial_part_one` before "
"moving on to this part of the tutorial. The finished project from :ref:"
"`doc_fps_tutorial_part_one` will be the starting project for part 2"
msgstr ""
"Vous êtes supposé avoir terminé :ref:`doc_fps_tutorial_part_one` avant de "
"passer à cette partie du tutoriel. Le projet fini de :ref:"
"`doc_fps_tutorial_part_one` sera le projet de départ de la partie 2"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:20
msgid "Let's get started!"
msgstr "Commençons tout de suite !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:23
msgid "Making a system to handle animations"
msgstr "Réalisation d'un système de traitement des animations"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:25
msgid ""
"First we need a way to handle changing animations. Open up ``Player.tscn`` "
"and select the :ref:`AnimationPlayer <class_AnimationPlayer>` Node "
"(``Player`` -> ``Rotation_Helper`` -> ``Model`` -> ``Animation_Player``)."
msgstr ""
"Tout d'abord, nous avons besoin d'un moyen de gérer les animations "
"changeantes. Ouvrez ``Player.tscn`` et sélectionnez le Node :ref:"
"`AnimationPlayer <class_AnimationPlayer>` (``Player`` -> ``Rotation_Helper`` "
"-> ``Model`` -> ``Animation_Player``)."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:28
msgid ""
"Create a new script called ``AnimationPlayer_Manager.gd`` and attach that to "
"the :ref:`AnimationPlayer <class_AnimationPlayer>`."
msgstr ""
"Créez un nouveau script appelé ``AnimationPlayer_Manager.gd`` et attachez-le "
"au :ref:`AnimationPlayer <class_AnimationPlayer>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:30
msgid "Add the following code to ``AnimationPlayer_Manager.gd``:"
msgstr "Ajoutez le code suivant dans ``AnimationPlayer_Manager.gd`` :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:152
msgid "Lets go over what this script is doing:"
msgstr "Revoyons ce que fait ce script :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:156
msgid "Lets start with this script's class variables:"
msgstr "Commençons par les variables de classe de ce script :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:158
msgid ""
"``states``: A dictionary for holding our animation states. (Further "
"explanation below)"
msgstr ""
"``states`` : Un dictionnaire pour tenir nos états d'animation. (Plus "
"d'explications ci-dessous)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:159
msgid ""
"``animation_speeds``: A dictionary for holding all the speeds at which we "
"want to play our animations."
msgstr ""
"``animation_speeds`` : Un dictionnaire pour contenir toutes les vitesses "
"auxquelles nous voulons jouer nos animations."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:160
msgid ""
"``current_state``: A variable for holding the name of the animation state we "
"are currently in."
msgstr ""
"``current_state`` : Une variable pour contenir le nom de l'état de "
"l'animation dans lequel nous nous trouvons actuellement."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:161
msgid ""
"``callback_function``: A variable for holding the callback function. "
"(Further explanation below)"
msgstr ""
"``callback_function`` : Variable de maintien de la fonction de rappel. (Plus "
"d'explications ci-dessous)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:163
msgid ""
"If you are familiar with state machines, then you may have noticed that "
"``states`` is structured like a basic state machine. Here is roughly how "
"``states`` is set up:"
msgstr ""
"Si vous êtes familier avec les machines à états, vous avez peut-être "
"remarqué que ``states`` est structuré comme une machine à états de base. "
"Voici en gros comment les ``states`` sont établis :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:166
msgid ""
"``states`` is a dictionary with the key being the name of the current state, "
"and the value being an array holding all the animations (states) we can "
"transition to. For example, if we are currently in the ``Idle_unarmed`` "
"state, we can only transition to ``Knife_equip``, ``Pistol_equip``, "
"``Rifle_equip``, and ``Idle_unarmed``."
msgstr ""
"``states`` est un dictionnaire dont la clé est le nom de l'état courant, et "
"la valeur est un tableau contenant toutes les animations (états) vers "
"lesquelles nous pouvons faire la transition. Par exemple, si nous sommes "
"actuellement dans l'état ``Idle_unarmed``, nous ne pouvons passer qu'à "
"``Knife_equip``, ``Pistol_equip``, ``Rifle_equip`` et ``Idle_unsarmed``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:171
msgid ""
"If we try to transition to a state that is not included in the possible "
"transitions states for the state we are in, then we get a warning message "
"and the animation does not change. We can also automatically transition from "
"some states into others, as will be explained further below in "
"``animation_ended``"
msgstr ""
"Si nous essayons de passer à un état qui n'est pas inclus dans les états de "
"transition possibles pour l'état dans lequel nous nous trouvons, alors nous "
"recevons un message d'avertissement et l'animation ne change pas. Nous "
"pouvons aussi passer automatiquement de certains états à d'autres, comme "
"nous l'expliquerons plus loin dans ``animation_ended``"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:175
msgid ""
"For the sake of keeping this tutorial simple, we are not using a 'proper' "
"state machine. If you are interested to know more about state machines, see "
"the following articles:"
msgstr ""
"Pour que ce tutoriel reste simple, nous n'utilisons pas une machine d'état "
"'correcte'. Si vous souhaitez en savoir plus sur les machines d'état, "
"consultez les articles suivants :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:179
msgid ""
"(Python example) https://dev.to/karn/building-a-simple-state-machine-in-"
"python"
msgstr ""
"(exemple Python) https://dev.to/karn/building-a-simple-state-machine-in-"
"python"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:180
msgid ""
"(C# example) https://www.codeproject.com/Articles/489136/"
"UnderstandingplusandplusImplementingplusStateplusP"
msgstr ""
"(exemple C#) https://www.codeproject.com/Articles/489136/"
"UnderstandingplusandplusImplementingplusStateplusP"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:181
msgid "(Wiki article) https://en.wikipedia.org/wiki/Finite-state_machine"
msgstr "(Article Wiki) https://en.wikipedia.org/wiki/Finite-state_machine"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:183
msgid ""
"``animation_speeds`` is how fast each animation will play. Some of the "
"animations are a little slow and in an effort to make everything look "
"smooth, we need to play them at faster speeds."
msgstr ""
"``animation_speeds`` est la vitesse à laquelle chaque animation sera lue. "
"Certaines animations sont un peu lentes et dans un effort pour que tout ait "
"l'air lisse, nous avons besoin de les jouer à des vitesses plus rapides."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:186
msgid ""
"Notice that all of the firing animations are faster than their normal speed. "
"Remember this for later!"
msgstr ""
"Notez que toutes les animations de tir sont plus rapides que leur vitesse "
"normale. Souvenez-vous de ça pour plus tard !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:188
msgid ""
"``current_state`` will hold the name of the animation state we are currently "
"in."
msgstr ""
"``current_state`` contiendra le nom de l'état de l'animation dans lequel "
"nous sommes actuellement."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:190
msgid ""
"Finally, ``callback_function`` will be a :ref:`FuncRef <class_FuncRef>` "
"passed in by the player for spawning bullets at the proper frame of "
"animation. A :ref:`FuncRef <class_FuncRef>` allows us to pass in a function "
"as an argument, effectively allowing us to call a function from another "
"script, which is how we will use it later."
msgstr ""
"Enfin, ``callback_function`` sera un :ref:`FuncRef <class_FuncRef>` passé "
"par le joueur pour générer des balles à la bonne image de l'animation. Un :"
"ref:`FuncRef <class_FuncRef>` nous permet de passer une fonction en "
"argument, nous permettant effectivement d'appeler une fonction depuis un "
"autre script, ce que nous utiliserons plus tard."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:196
msgid "Now let's look at ``_ready``."
msgstr "Regardons maintenant ``_ready``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:198
msgid ""
"First we are setting our animation to ``Idle_unarmed`` using the "
"``set_animation`` function, so we for sure start in that animation."
msgstr ""
"Tout d'abord, nous réglons notre animation sur ``Idle_unarmed`` à l'aide de "
"la fonction ``set_animation`` ; nous commençons donc avec cette animation."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:201
msgid ""
"Next we connect the ``animation_finished`` signal to this script and assign "
"it to call ``animation_ended``. This means whenever an animation is "
"finished, ``animation_ended`` will be called."
msgstr ""
"Ensuite, nous connectons le signal ``animation_finished`` à ce script et "
"l'assignons à appeler ``animation_ended``. Cela signifie que chaque fois "
"qu'une animation est terminée, ``animation_ended`` sera appelé."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:206
msgid "Lets look at ``set_animation`` next."
msgstr "Regardons ``set_animation`` suivant."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:208
msgid ""
"``set_animation`` changes the animation to the animation named "
"``animation_name`` *if* we can transition to it. In other words, if the "
"animation state we are currently in has the passed in animation state name "
"in ``states``, then we will change to that animation."
msgstr ""
"``set_animation`` change l'animation par l'animation nommée "
"``animation_name`` *si* on la transition est possible. En d'autres termes, "
"si l'état de l'animation dans lequel nous nous trouvons a le nom de l'état "
"de l'animation passé dans ``states``, alors nous allons passer à cette "
"animation."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:212
msgid ""
"Firstly, we check if the passed in animation name is the same name as the "
"animation currently playing. If they are the same, then we write a warning "
"to the console and return ``true``."
msgstr ""
"Tout d'abord, nous vérifions si le nom de l'animation passée dans "
"l'animation est le même que celui de l'animation en cours de lecture. Si ce "
"sont les mêmes, alors nous écrivons un avertissement à la console et nous "
"retournons \"true\"."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:215
msgid ""
"Secondly, we see if :ref:`AnimationPlayer <class_AnimationPlayer>` has the "
"animation with the name ``animation_name`` using ``has_animation``. If it "
"does not, we return ``false``."
msgstr ""
"Deuxièmement, nous voyons si :ref:`AnimationPlayer <class_AnimationPlayer>` "
"a l'animation avec le nom ``animation_name`` en utilisant ``has_animation``. "
"Si ce n'est pas le cas, nous retournons ``false``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:218
msgid ""
"Thirdly, we check whether ``current_state`` is set. If we have a state in "
"``current_state``, then we get all the possible states we can transition to."
msgstr ""
"Troisièmement, nous vérifions si ``current_state`` est défini. Si nous avons "
"un état dans ``current_state``, alors nous obtenons tous les états possibles "
"vers lesquels nous pouvons passer."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:220
msgid ""
"If the animation name is in the list of possible transitions, we set "
"``current_state`` to the passed in animation (``animation_name``), tell :ref:"
"`AnimationPlayer <class_AnimationPlayer>` to play the animation with a blend "
"time of ``-1`` at the speed set in ``animation_speeds`` and return ``true``."
msgstr ""
"Si le nom de l'animation se trouve dans la liste des transitions possibles, "
"nous réglons ``current_state`` sur l'animation passée en animation "
"(``animation_name``), :ref:`AnimationPlayer <class_AnimationPlayer>` pour "
"lire l'animation avec un temps de mélange ``-1`` à la vitesse définie dans "
"``animation_speeds`` et retourner ``true``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:224
msgid "Blend time is how long to blend/mix the two animations together."
msgstr ""
"Le temps de mélange est la durée pendant laquelle les deux animations "
"doivent être mélangées ensemble."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:226
msgid ""
"By putting in a value of ``-1``, the new animation instantly plays, "
"overriding whatever animation is already playing."
msgstr ""
"En mettant une valeur de ``-1``, la nouvelle animation joue instantanément, "
"remplaçant toute animation déjà en cours de lecture."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:228
msgid ""
"If you put in a value of ``1``, for one second the new animation will play "
"with increasing strength, blending the two animations together for one "
"second before playing only the new animation. This leads to a smooth "
"transition between animations, which looks great when you are changing from "
"a walking animation to a running animation."
msgstr ""
"Si vous mettez une valeur de ``1``, pendant une seconde la nouvelle "
"animation jouera avec une force croissante, mélangeant les deux animations "
"ensemble pendant une seconde avant de jouer uniquement la nouvelle "
"animation. Il en résulte une transition en douceur entre les animations, ce "
"qui est parfait lorsque vous passez d'une animation de marche à une "
"animation de course."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:232
msgid ""
"We set the blend time to ``-1`` because we want to instantly change "
"animations."
msgstr ""
"Nous réglons le temps de mélange sur ``-1`` parce que nous voulons changer "
"instantanément les animations."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:236
msgid "Now lets look at ``animation_ended``."
msgstr "Regardons maintenant ``animation_ended``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:238
msgid ""
"``animation_ended`` is the function that will be called by :ref:"
"`AnimationPlayer <class_AnimationPlayer>` when it's done playing an "
"animation."
msgstr ""
"``animation_ended`` est la fonction qui sera appelée par :ref:"
"`AnimationPlayer <class_AnimationPlayer>` quand la lecture d'une animation "
"est terminée."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:241
msgid ""
"For certain animation states, we may need to transition into another state "
"when it's finished. To handle this, we check for every possible animation "
"state. If we need to, we will transition into another state."
msgstr ""
"Pour certains états d'animation, il se peut que nous ayons besoin de passer "
"à un autre état quand il sera terminé. Pour cela, nous vérifions chaque état "
"d'animation possible. S'il le faut, nous ferons la transition vers un autre "
"État."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:244
msgid ""
"If you are using your own animated models, make sure that none of the "
"animations are set to loop. Looping animations do not send the "
"``animation_finished`` signal when they reach the end of the animation and "
"are about to loop again."
msgstr ""
"Si vous utilisez vos propres modèles animés, assurez-vous qu'aucune des "
"animations n'est réglée sur boucle. Les animations en boucle n'envoient pas "
"le signal ``animation_finished`` lorsqu'elles arrivent à la fin de "
"l'animation et sont sur le point de boucler à nouveau."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:248
msgid ""
"The transitions in ``animation_ended`` would ideally be part of the data in "
"``states``, but in an effort to make the tutorial easier to understand, "
"we'll hard code each state transition in ``animation_ended``."
msgstr ""
"Les transitions dans ``animation_ended`` feraient idéalement partie des "
"données dans ``states``, mais dans un effort pour rendre le tutoriel plus "
"facile à comprendre, nous allons coder chaque transition d'état dans "
"``animation_ended```."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:254
msgid ""
"Finally, there is ``animation_callback``. This function will be called by a "
"call method track in our animations. If we have a :ref:`FuncRef "
"<class_FuncRef>` assigned to ``callback_function``, then we call that passed "
"in function. If we do not have a :ref:`FuncRef <class_FuncRef>` assigned to "
"``callback_function``, we print out a warning to the console."
msgstr ""
"Enfin, il y a le ``animation_callback``. Cette fonction sera appelée par une "
"piste de méthode d'appel dans nos animations. Si nous avons un :ref:`FuncRef "
"<class_FuncRef>` assigné à ``callback_function``, alors nous appelons cela "
"passé en fonction. Si nous n'avons pas de :ref:`FuncRef <class_FuncRef>` "
"assigné à ``callback_function``, nous imprimons un avertissement sur la "
"console."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:258
msgid ""
"Try running ``Testing_Area.tscn`` to make sure there are no runtime issues. "
"If the game runs but nothing seems to have changed, then everything is "
"working correctly."
msgstr ""
"Essayez d'exécuter ``Testing_Area.tscn`` pour vous assurer qu'il n'y a pas "
"de problème d'exécution. Si le jeu fonctionne mais que rien ne semble avoir "
"changé, alors tout fonctionne correctement."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:262
msgid "Getting the animations ready"
msgstr "Préparation des animations"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:264
msgid ""
"Now that we have a working animation manager, we need to call it from our "
"player script. Before that, though, we need to set some animation callback "
"tracks in our firing animations."
msgstr ""
"Maintenant que nous avons un gestionnaire d'animation fonctionnel, nous "
"devons l'appeler à partir de notre script joueur. Avant cela, cependant, "
"nous avons besoin de définir quelques pistes de rappel d'animation dans nos "
"animations de tir."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:267
msgid ""
"Open up ``Player.tscn`` if you don't have it open and navigate to the :ref:"
"`AnimationPlayer <class_AnimationPlayer>` node (``Player`` -> "
"``Rotation_Helper`` -> ``Model`` -> ``Animation_Player``)."
msgstr ""
"Ouvrez ``Player.tscn`` si vous ne l'avez pas ouvert et naviguez jusqu'au "
"nœud :ref:`AnimationPlayer <class_AnimationPlayer>` (``Player`` -> "
"``Rotation_Helper`` -> ``Model`` -> ``Animation_Player``)."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:270
msgid ""
"We need to attach a call method track to three of our animations: The firing "
"animation for the pistol, rifle, and knife. Let's start with the pistol. "
"Click the animation drop down list and select \"Pistol_fire\"."
msgstr ""
"Nous avons besoin d'attacher une piste de méthode d'appel à trois de nos "
"animations : L'animation de tir pour le pistolet, le fusil et le couteau. "
"Commençons par le pistolet. Cliquez sur la liste déroulante de l'animation "
"et sélectionnez \"Pistol_fire\"."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:273
msgid ""
"Now scroll down to the bottom of the list of animation tracks. The final "
"item in the list should read ``Armature/Skeleton:Left_UpperPointer``. Now "
"above the list, click the \"Add track\" button, to the left of the time line"
msgstr ""
"Faites maintenant défiler vers le bas de la liste des pistes d'animation. Le "
"dernier élément de la liste devrait s'appeler ``Armature/Skeleton:"
"Left_UpperPointer``. Maintenant au-dessus de la liste, cliquez sur le bouton "
"\"Add track\", à gauche de la ligne de temps"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:278
msgid ""
"This will bring up a window with a few choices. We want to add a call method "
"track, so click the option that reads \"Call Method Track\". This will open "
"a window showing the entire node tree. Navigate to the :ref:`AnimationPlayer "
"<class_AnimationPlayer>` node, select it, and press OK."
msgstr ""
"Ceci ouvrira une fenêtre avec quelques choix. Nous voulons ajouter une piste "
"de méthode d'appel, alors cliquez sur l'option qui s'appelle \"Call Method "
"Track\". Cela ouvrira une fenêtre montrant l'arborescence de nœud en entier. "
"Naviguez jusqu'au nœud :ref:`AnimationPlayer <class_AnimationPlayer>`, "
"sélectionnez-le et appuyez sur OK."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:284
msgid ""
"Now at the bottom of list of animation tracks you will have a green track "
"that reads \"AnimationPlayer\". Now we need to add the point where we want "
"to call our callback function. Scrub the timeline until you reach the point "
"where the muzzle starts to flash."
msgstr ""
"Maintenant au bas de la liste des pistes d'animation, vous aurez une voie "
"verte qui s'appelle \"AnimationPlayer\". Maintenant, nous devons ajouter le "
"point où nous voulons appeler notre fonction de rappel. Faites défiler la "
"ligne de temps jusqu'à ce que vous atteignez le point où le museau de l'arme "
"commence à clignoter."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:288
msgid ""
"The timeline is the window where all the points in our animation are stored. "
"Each of the little points represents a point of animation data."
msgstr ""
"La ligne de temps est la fenêtre dans laquelle tous les points de notre "
"animation sont stockés. Chacun des petits points représente un point de "
"données d'animation."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:291
msgid ""
"To actually preview the \"Pistol_fire\" animation, select the :ref:`Camera "
"<class_Camera>` node underneath Rotation Helper and check the \"Preview\" "
"box underneath Perspective in the top-left corner."
msgstr ""
"Pour prévisualiser l'animation \"Pistol_fire\", sélectionnez le nœud :ref:"
"`Camera <class_Camera>` sous \"Rotation Helper\" et cochez la case "
"\"Previsualiser\" sous \"Perspective\" dans le coin supérieur gauche."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:295
msgid ""
"Scrubbing the timeline means moving ourselves through the animation. So when "
"we say \"scrub the timeline until you reach a point\", what we mean is move "
"through the animation window until you reach the point on the timeline."
msgstr ""
"Faire défiler la ligne de temps signifie se déplacer à travers l'animation. "
"Ainsi, lorsque nous disons \"Faites défiler la ligne de temps jusqu'à ce que "
"vous atteigniez un point\", ce que nous voulons dire c'est se déplacer dans "
"la fenêtre d'animation jusqu'à ce que vous atteigniez le point sur la ligne "
"de temps."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:299
msgid ""
"Also, the muzzle of a gun is the end point where the bullet comes out. The "
"muzzle flash is the flash of light that escapes the muzzle when a bullet is "
"fired. The muzzle is also sometimes referred to as the barrel of the gun."
msgstr ""
"En outre, le museau d'une arme à feu est le point final où la balle sort. Le "
"flash du museau est le flash de lumière qui s'échappe du museau lorsqu'une "
"balle est tirée. Le museau est aussi parfois appelé le canon de l'arme à feu."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:303
msgid ""
"For finer control when scrubbing the timeline, press :kbd:`Ctrl` and scroll "
"forward with the mouse wheel to zoom in. Scrolling backwards will zoom out."
msgstr ""
"Pour un contrôle plus précis lors du défilement de la ligne de temps, "
"appuyez sur :kbd:`Ctrl` et faites défiler vers l'avant avec la molette de la "
"souris pour effectuer un zoom avant. Le défilement vers l'arrière permet "
"d'effectuer un zoom arrière."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:306
msgid ""
"You can also change how the timeline scrubbing snaps by changing the value "
"in ``Step (s)`` to a lower/higher value."
msgstr ""
"Vous pouvez également changer la façon dont le défilement de la ligne de "
"temps s'effectue en changeant la valeur dans ``Step(s)`` à une valeur "
"inférieure/supérieure."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:308
msgid ""
"Once you get to a point you like, right click on the row for \"Animation "
"Player\" and press ``Insert Key``. In the empty name field, enter "
"``animation_callback`` and press :kbd:`Enter`."
msgstr ""
"Une fois que vous arrivez à un point que vous aimez, cliquez avec le bouton "
"droit de la souris sur la ligne pour \"Animation Player\" et appuyez sur l' "
"``Insert Key``. Dans le champ de nom vide, entrez ``animation_callback`` et "
"appuyez sur :kbd:`Enter`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:314
msgid ""
"Now when we are playing this animation the call method track will be "
"triggered at that specific point of the animation."
msgstr ""
"Maintenant, lorsque nous jouons cette animation, la piste de la méthode "
"d'appel sera déclenchée à ce point spécifique de l'animation."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:318
msgid "Let's repeat the process for the rifle and knife firing animations!"
msgstr ""
"Répétons le processus pour les animations de tir au fusil et au couteau !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:320
msgid ""
"Because the process is exactly the same as the pistol, the process is going "
"to explained in a little less depth. Follow the steps from above if you get "
"lost! It is exactly the same, just on a different animation."
msgstr ""
"Parce que le processus est exactement le même que le pistolet, le processus "
"va être expliqué un peu moins en profondeur. Suivez les étapes d'au-dessus "
"si vous vous perdez ! C'est exactement la même chose, juste sur une "
"animation différente."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:323
msgid ""
"Go to the \"Rifle_fire\" animation from the animation drop down. Add the "
"call method track once you reach the bottom of the animation track list by "
"clicking the \"Add Track\" button above the list. Find the point where the "
"muzzle starts to flash and right click and press ``Insert Key`` to add a "
"call method track point at that position on the track."
msgstr ""
"Allez dans l'animation \"Rifle_fire\" à partir du menu déroulant de "
"l'animation. Ajoutez la piste de la méthode d'appel une fois que vous "
"atteignez le bas de la liste des pistes d'animation en cliquant sur le "
"bouton \"Add Track\" au-dessus de la liste. Trouvez le point où le museau de "
"l'arme commence à clignoter et faites un clic droit et appuyez sur ``Insert "
"Key`` pour ajouter un point de piste de la méthode d'appel à cet endroit sur "
"la piste."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:327
msgid ""
"Type \"animation_callback\" into the name field of the pop up which opened "
"and press :kbd:`Enter`."
msgstr ""
"Tapez \"animation_callback\" dans le champ du nom de la fenêtre pop up qui "
"s'est ouverte et appuyez sur :kbd:`Enter`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:329
msgid ""
"Now we need to apply the callback method track to the knife animation. "
"Select the \"Knife_fire\" animation and scroll to the bottom of the "
"animation tracks. Click the \"Add Track\" button above the list and add a "
"method track. Next find a point around the first third of the animation to "
"place the animation callback method point at."
msgstr ""
"Nous devons maintenant appliquer la piste de la méthode callback à "
"l'animation du couteau. Sélectionnez l'animation \"Knife_fire\" et faites "
"défiler jusqu'en bas des pistes d'animation. Cliquez sur le bouton \"Add "
"Track\" au-dessus de la liste et ajoutez une piste de méthode. Trouvez "
"ensuite un point autour du premier tiers de l'animation pour placer le point "
"de la méthode de rappel de l'animation."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:333
msgid ""
"We will not actually be firing the knife, and the animation is a stabbing "
"animation rather than a firing one. For this tutorial we are reusing the gun "
"firing logic for our knife, so the animation has been named in a style that "
"is consistent with the other animations."
msgstr ""
"Nous n'allons pas vraiment tirer au couteau, et l'animation est une "
"animation poignardante plutôt qu'une animation de tir. Pour ce tutoriel, "
"nous réutilisons la logique de tir au fusil pour notre couteau, donc "
"l'animation a été nommée dans un style qui est cohérent avec les autres "
"animations."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:337
msgid ""
"From there right click on the timeline and click \"Insert Key\". Put "
"\"animation_callback\" into the name field and press :kbd:`Enter`."
msgstr ""
"De là, cliquez avec le bouton droit de la souris sur la ligne de temps et "
"cliquez sur \"Insert Key\". Mettez \"animation_callback\" dans le champ de "
"nom et appuyez sur :kbd:`Enter`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:339
msgid "Be sure to save your work!"
msgstr "Assurez-vous de sauvegarder votre travail !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:341
msgid ""
"With that done, we are almost ready to start adding the ability to fire to "
"our player script! We need to set up one last scene: The scene for our "
"bullet object."
msgstr ""
"Cela fait, nous sommes presque prêts à ajouter la possibilité de tirer à "
"notre script de joueur ! On doit monter une dernière scène : La scène de "
"l'objet balle."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:345
msgid "Creating the bullet scene"
msgstr "Créer la scène balle"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:347
msgid ""
"There are several ways to handle a gun's bullets in video games. In this "
"tutorial series, we will be exploring two of the more common ways: Objects, "
"and raycasts."
msgstr ""
"Il existe plusieurs façons de manipuler les balles d'une arme à feu dans les "
"jeux vidéo. Dans cette série de tutoriels, nous explorerons deux des "
"méthodes les plus courantes : Objets, et raycasts."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:352
msgid ""
"One of the two ways is using a bullet object. This will be an object that "
"travels through the world and handles its own collision code. In this method "
"we create/spawn a bullet object in the direction our gun is facing, and then "
"it travels forward."
msgstr ""
"L'une des deux façons est d'utiliser un objet balle. Ce sera un objet qui "
"voyage à travers le monde et manipule son propre code de collision. Dans "
"cette méthode, nous créons un objet balle dans la direction de notre fusil, "
"puis il se déplacera vers l'avant."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:356
msgid ""
"There are several advantages to this method. The first being we do not have "
"to store the bullets in our player. We can simply create the bullet and then "
"move on, and the bullet itself will handle checking for collisions, sending "
"the proper signal(s) to the object it collides with, and destroying itself."
msgstr ""
"Cette méthode présente plusieurs avantages. Le premier étant que nous "
"n'avons pas besoin de stocker les balles dans notre joueur. Nous pouvons "
"simplement créer la balle, puis passer à autre chose, et la balle elle-même "
"vérifiera les collisions, envoyant le ou les signaux appropriés à l'objet "
"avec lequel elle entre en collision, et se détruisant d'elle-même."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:359
msgid ""
"Another advantage is we can have more complex bullet movement. If we want to "
"make the bullet fall ever so slightly as time goes on, we can make the "
"bullet controlling script slowly push the bullet towards the ground. Using "
"an object also makes the bullet take time to reach its target, it doesn't "
"instantly hit whatever it's pointed at. This feels more realistic because "
"nothing in real life moves instantly from one point to another."
msgstr ""
"Un autre avantage est que nous pouvons avoir des mouvements de balles plus "
"complexes. Si nous voulons faire tomber la balle légèrement au fur et à "
"mesure que le temps passe, nous pouvons faire que le script de contrôle de "
"balle pousse lentement la balle vers le sol. L'utilisation d'un objet "
"implique aussi que la balle prend du temps pour atteindre sa cible, elle ne "
"touche pas instantanément ce vers quoi elle est pointée. Cela semble plus "
"réaliste parce que rien dans la vie réelle ne bouge instantanément d'un "
"point à l'autre."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:363
msgid ""
"One of the huge disadvantages is performance. While having each bullet "
"calculate their own paths and handle their own collision allows for a lot of "
"flexibility, it comes at the cost of performance. With this method we are "
"calculating every bullet's movement every step, and while this may not be a "
"problem for a few dozen bullets, it can become a huge problem when you "
"potentially have several hundred bullets."
msgstr ""
"L'un des inconvénients majeurs est la performance. Bien que le fait que "
"chaque balle calcule sa propre trajectoire et gère sa propre collision offre "
"beaucoup de souplesse, cela se fait au détriment de la performance. Avec "
"cette méthode, nous calculons le mouvement de chaque balle à chaque étape, "
"et bien que ce ne soit pas un problème pour quelques dizaines de balles, "
"cela peut devenir un énorme problème lorsque vous avez potentiellement "
"plusieurs centaines de balles."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:367
msgid ""
"Despite the performance hit, many first person shooters include some form of "
"object bullets. Rocket launchers are a prime example because in many first "
"person shooters, rockets do not just instantly explode at their target "
"position. You can also find bullets as objects many times with grenades "
"because they generally bounce around the world before exploding."
msgstr ""
"Malgré le coût en terme de performance, de nombreux jeux de tir à la "
"première personne incluent une certaine forme d'objet balle. Les lance-"
"roquettes en sont un excellent exemple, car dans de nombreux jeux de tir à "
"la première, les roquettes n'explosent pas instantanément à la position "
"prise pour cible. Vous pouvez également souvent trouver des balles comme "
"objets avec les grenades parce qu'elles rebondissent généralement dans le "
"monde avant d'exploser."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:371
msgid ""
"While I cannot say for sure this is the case, these games *probably* use "
"bullet objects in some form or another: (These are entirely from my "
"observations. **They may be entirely wrong**. I have never worked on **any** "
"of the following games)"
msgstr ""
"Bien que je ne puisse pas dire avec certitude que c'est le cas, ces jeux "
"utilisent *probablement* des objets balles sous une forme ou une autre : (Ce "
"sont entièrement de mes observations. **J'ai peut-être tout à fait tort**. "
"Je n'ai travaillé sur **aucun** des jeux suivants)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:374
msgid ""
"Halo (Rocket launchers, fragmentation grenades, sniper rifles, brute shot, "
"and more)"
msgstr ""
"Halo (lance-roquettes, grenades à fragmentation, fusils de sniper, balles "
"brutes, et plus)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:375
msgid ""
"Destiny (Rocket launchers, grenades, fusion rifles, sniper rifles, super "
"moves, and more)"
msgstr ""
"Destiny (lance-roquettes, grenades, fusils à fusion, fusils sniper, super "
"mouvements, et plus)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:376
msgid ""
"Call of Duty (Rocket launchers, grenades, ballistic knives, crossbows, and "
"more)"
msgstr ""
"Call of Duty (lance-roquettes, grenades, couteaux balistiques, arbalètes et "
"autres)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:377
msgid "Battlefield (Rocket launchers, grenades, claymores, mortars, and more)"
msgstr "Battlefield (lance-roquettes, grenades, mortiers, et plus)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:379
msgid ""
"Another disadvantage with bullet objects is networking. Bullet objects have "
"to sync the positions (at least) with all the clients that are connected to "
"the server."
msgstr ""
"Un autre inconvénient des objets balle est la mise en réseau. Les objets "
"balle doivent synchroniser les positions (au moins) avec tous les clients "
"connectés au serveur."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:382
msgid ""
"While we are not implementing any form of networking (as that would be in "
"its own entire tutorial series), it is a consideration to keep in mind when "
"creating your first person shooter, especially if you plan on adding some "
"form of networking in the future."
msgstr ""
"Bien que nous n'implémentons aucune forme de réseau (le réseau aura une "
"série de tutoriels spécifique), c'est une considération à garder à l'esprit "
"lors de la création de votre jeu de tir à la première personne, surtout si "
"vous prévoyez d'ajouter une forme de réseau dans l'avenir."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:387
msgid ""
"The other way of handling bullet collisions we will be looking at is "
"raycasting."
msgstr ""
"L'autre façon de gérer les collisions de balles que nous allons examiner est "
"le raycasting."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:389
msgid ""
"This method is extremely common in guns that have fast moving bullets that "
"rarely change trajectory over time."
msgstr ""
"Cette méthode est extrêmement courante dans les armes à feu qui ont des "
"balles qui se déplacent rapidement et qui changent rarement de trajectoire "
"avec le temps."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:391
msgid ""
"Instead of creating a bullet object and sending it through space, we instead "
"send a ray starting from the barrel/muzzle of the gun forwards. We set the "
"raycast's origin to the starting position of the bullet, and based on the "
"length we can adjust how far the bullet 'travels' through space."
msgstr ""
"Au lieu de créer un objet de balle et de l'envoyer dans l'espace, nous "
"envoyons plutôt un rayon à partir du canon/museau de l'arme vers l'avant. "
"Nous réglons l'origine du raycast à la position de départ de la balle, et en "
"fonction de la longueur, nous pouvons ajuster la distance à laquelle la "
"balle 'voyage' dans l'espace."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:394
msgid ""
"While I cannot say for sure this is the case, these games *probably* use "
"raycasts in some form or another: (These are entirely from my observations. "
"**They may be entirely wrong**. I have never worked on **any** of the "
"following games)"
msgstr ""
"Bien que je ne puisse pas dire avec certitude que c'est le cas, ces jeux "
"utilisent *probablement* des raycasts sous une forme ou une autre : (Ceci "
"est entièrement tirés de mes observations. **J'ai peut-être tout à fait "
"tort**. Je n'ai jamais travaillé sur **aucun** des jeux suivants)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:397
msgid ""
"Halo (Assault rifles, DMRs, battle rifles, covenant carbine, spartan laser, "
"and more)"
msgstr ""
"Halo (fusils d'assaut, DMR, fusils de combat, carabine d'engagement, laser "
"spartan, et plus)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:398
msgid ""
"Destiny (Auto rifles, pulse rifles, scout rifles, hand cannons, machine "
"guns, and more)"
msgstr ""
"Destiny (Auto fusils, fusils à impulsion, fusils scouts, canons à main, "
"mitrailleuses, et plus)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:399
msgid ""
"Call of Duty (Assault rifles, light machine guns, sub machine guns, pistols, "
"and more)"
msgstr ""
"Call of Duty (fusils d'assaut, mitrailleuses légères, mitrailleuses, "
"pistolets, et plus)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:400
msgid "Battlefield (Assault rifles, SMGs, carbines, pistols, and more)"
msgstr "Battlefield (fusils d'assaut, SMG, carabines, pistolets, et plus)"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:402
msgid ""
"One huge advantage of this method is that it's light on performance. Sending "
"a couple hundred rays through space is *much* easier for the computer to "
"calculate than sending a couple hundred bullet objects."
msgstr ""
"L'un des grands avantages de cette méthode est qu'elle est légère en termes "
"de performances. Envoyer quelques centaines de rayons dans l'espace est "
"*beaucoup* plus facile à calculer pour l'ordinateur que d'envoyer quelques "
"centaines d'objets balles."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:406
msgid ""
"Another advantage is we can instantly know if we've hit something or not "
"exactly when we call for it. For networking this is important because we do "
"not need to sync the bullet movements over the Internet, we only need to "
"send whether or not the raycast hit."
msgstr ""
"Un autre avantage est que nous pouvons savoir instantanément si nous avons "
"touché quelque chose ou pas exactement au moment où nous l'appelons. Pour le "
"réseau, c'est important parce que nous n'avons pas besoin de synchroniser "
"les mouvements des balles sur Internet, nous n'avons qu'à envoyer si oui ou "
"non le raycast touche."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:409
msgid ""
"Raycasting does have some disadvantages, though. One major disadvantage is "
"we cannot easily cast a ray in anything but a linear line. This means we can "
"only fire in a straight line for however long our ray length is. You can "
"create the illusion of bullet movement by casting multiple rays at different "
"positions, but not only is this hard to implement in code, it is also "
"heavier on performance."
msgstr ""
"Le raycasting a cependant quelques inconvénients. Un inconvénient majeur est "
"que nous ne pouvons pas facilement lancer un rayon dans autre chose qu'une "
"ligne linéaire. Cela signifie que nous ne pouvons tirer qu'en ligne droite, "
"quelle que soit la longueur de notre rayon. Vous pouvez créer l'illusion "
"d'un mouvement de balle en projetant plusieurs rayons à différentes "
"positions, mais non seulement c'est difficile à mettre en œuvre en code, "
"mais c'est aussi plus lourd sur les performances."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:413
msgid ""
"Another disadvantage is we cannot see the bullet. With bullet objects we can "
"actually see the bullet travel through space if we attach a mesh to it, but "
"because raycasts happen instantly, we do not have a decent way of showing "
"the bullets. You could draw a line from the origin of the raycast to the "
"point where the raycast collided, and that is one popular way of showing "
"raycasts. Another way is simply not drawing the raycast at all, because "
"theoretically the bullets move so fast our eyes could not see it anyway."
msgstr ""
"Un autre inconvénient est que nous ne pouvons pas voir la balle. Avec les "
"objets à balles, nous pouvons voir la balle se déplacer dans l'espace si "
"nous y attachons un maillage, mais comme les raycasts se produisent "
"instantanément, nous n'avons pas une façon décente de montrer les balles. "
"Vous pourriez tracer une ligne à partir de l'origine du raycast jusqu'au "
"point où le raycast est entré en collision, et c'est une façon populaire de "
"montrer les raycasts. Une autre façon est tout simplement de ne pas dessiner "
"le raycast du tout, parce que théoriquement les balles se déplacent si vite "
"que nos yeux ne pourraient pas le voir de toute façon."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:420
msgid ""
"Let's get the bullet object set up. This is what our pistol will create when "
"the \"Pistol_fire\" animation callback function is called."
msgstr ""
"Préparons l'objet balle. C'est ce que notre pistolet va créer lorsque la "
"fonction de rappel d'animation \"Pistol_fire\" est appelée."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:423
msgid ""
"Open up ``Bullet_Scene.tscn``. The scene contains :ref:`Spatial "
"<class_Spatial>` node called bullet, with a :ref:`MeshInstance "
"<class_MeshInstance>` and an :ref:`Area <class_Area>` with a :ref:"
"`CollisionShape <class_CollisionShape>` children to it."
msgstr ""
"Ouvrez ``Bullet_Scene_Scene.tscn``. La scène contient un nœud :ref:`Spatial "
"<class_Spatial>` appelé bullet, avec un :ref:`MeshInstance "
"<class_MeshInstance>` et un :ref:`Area <class_Area>` avec un :ref:"
"`CollisionShape <class_CollisionShape>` enfant."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:427
msgid ""
"Create a new script called ``Bullet_script.gd`` and attach it to the "
"``Bullet`` :ref:`Spatial <class_Spatial>`."
msgstr ""
"Créez un nouveau script appelé ``Bullet_script.gd`` et joignez-le au "
"``Bullet``` :ref:`Spatial <class_Spatial>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:429
msgid ""
"We are going to move the entire bullet object at the root (``Bullet``). We "
"will be using the :ref:`Area <class_Area>` to check whether or not we've "
"collided with something"
msgstr ""
"Nous allons déplacer tout l'objet balle à la racine (\"Bullet\"). Nous "
"utiliserons le :ref:`Area <class_Area>` pour vérifier si nous avons ou non "
"heurté quelque chose"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:431
msgid ""
"Why are we using an :ref:`Area <class_Area>` and not a :ref:`RigidBody "
"<class_RigidBody>`? The main reason we're not using a :ref:`RigidBody "
"<class_RigidBody>` is because we do not want the bullet to interact with "
"other :ref:`RigidBody <class_RigidBody>` nodes. By using an :ref:`Area "
"<class_Area>` we are ensuring that none of the other :ref:`RigidBody "
"<class_RigidBody>` nodes, including other bullets, will be effected."
msgstr ""
"Pourquoi utilisons-nous un :ref:`Area <class_Area>` et non un :ref:"
"`RigidBody <class_RigidBody>` ? La raison principale pour laquelle nous "
"n'utilisons pas un :ref:`RigidBody <class_RigidBody>` est que nous ne "
"voulons pas que la balle interagisse avec d'autres nœuds :ref:`RigidBody "
"<class_RigidBody>`. En utilisant un :ref:`Area <class_Area>` nous nous "
"assurons qu'aucun des autres nœuds :ref:`RigidBody <class_RigidBody>`, y "
"compris les autres balles, ne sera affecté."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:435
msgid ""
"Another reason is simply because it is easier to detect collisions with an :"
"ref:`Area <class_Area>`!"
msgstr ""
"Une autre raison est simplement qu'il est plus facile de détecter les "
"collisions avec un :ref:`Area <class_Area>` !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:437
msgid "Here's the script that will control our bullet:"
msgstr "Voici le script qui va contrôler notre balle :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:473
msgid "Let's go through the script:"
msgstr "Parcourons le script :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:477
msgid "First we define a few class variables:"
msgstr "Nous définissons d'abord quelques variables de classe :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:479
msgid "``BULLET_SPEED``: The speed at which the bullet travels."
msgstr "``BULLET_SPEED`` : La vitesse à laquelle la balle se déplace."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:480
msgid ""
"``BULLET_DAMAGE``: The damage the bullet will cause to anything with which "
"it collides."
msgstr ""
"``BULLET_DAMAGE`` : Les dommages que la balle causera à tout ce avec quoi "
"elle entre en collision."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:481
msgid "``KILL_TIMER``: How long the bullet can last without hitting anything."
msgstr ""
"``KILL_TIMER`` : Combien de temps la balle existe sans toucher quoi que ce "
"soit."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:482
msgid "``timer``: A float for tracking how long the bullet has been alive."
msgstr ""
"``timer`` : Un flottant pour savoir depuis combien de temps la balle existe."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:483
msgid ""
"``hit_something``: A boolean for tracking whether or not we've hit something."
msgstr ""
"``hit_something`` : Un booléen pour savoir si on a touché quelque chose ou "
"non."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:485
msgid ""
"With the exception of ``timer`` and ``hit_something``, all of these "
"variables change how the bullet interacts with the world."
msgstr ""
"À l'exception de ``timer`` et ``hit_something``, toutes ces variables "
"changent la façon dont la balle interagit avec le monde."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:488
msgid ""
"The reason we are using a kill timer is so we do not have a case where we "
"get a bullet travelling forever. By using a kill timer, we can ensure that "
"no bullets will travel forever and consume resources."
msgstr ""
"La raison pour laquelle nous utilisons un kill timer est qu'il n'y a pas de "
"cas où une balle se déplace indéfiniment. En utilisant un kill timer, nous "
"pouvons nous assurer qu'aucune balle ne voyagera éternellement,consommant "
"des ressources."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:492
msgid ""
"As in :ref:`doc_fps_tutorial_part_one`, we have a couple all uppercase class "
"variables. The reason behind this is the same as the reason given in :ref:"
"`doc_fps_tutorial_part_one`: We want to treat these variables like "
"constants, but we want to be able to change them. In this case we will later "
"need to change the damage and speed of these bullets, so we need them to be "
"variables and not constants."
msgstr ""
"Comme dans :ref:`doc_fps_tutorial_part_one`, nous avons quelques variables "
"de classe en majuscules. La raison derrière ceci est la même que celle "
"donnée dans :ref:`doc_fps_tutorial_part_one` : Nous voulons traiter ces "
"variables comme des constantes, mais nous voulons pouvoir les modifier. Dans "
"ce cas, nous devrons plus tard modifier les dommages et la vitesse des "
"balles, nous avons donc besoin qu'elles soient des variables et non des "
"constantes."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:499
msgid ""
"In ``_ready`` we set the area's ``body_entered`` signal to ourself so that "
"it calls the ``collided`` function when a body enters the area."
msgstr ""
"Dans ``_ready`` nous réglons le signal ``body_entered`` de la zone pour "
"qu'il appelle la fonction ``collided`` quand un corps entre dans la zone."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:504
msgid ""
"``_physics_process`` gets the bullet's local ``Z`` axis. If you look at the "
"scene in local mode, you will find that the bullet faces the positive local "
"``Z`` axis."
msgstr ""
"``_physics_process`` obtient l'axe ``Z`` local de la balle. Si vous regardez "
"la scène en mode local, vous verrez que la balle fait face à l'axe local "
"positif ``Z``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:507
msgid ""
"Next we translate the entire bullet by that forward direction, multiplying "
"in our speed and delta time."
msgstr ""
"Ensuite, nous faisons se déplacer la balle entière dans cette direction, en "
"multipliant notre vitesse et notre temps delta."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:509
msgid ""
"After that we add delta time to our timer and check whether the timer has "
"reached a value as big or greater than our ``KILL_TIME`` constant. If it "
"has, we use ``queue_free`` to free the bullet."
msgstr ""
"Ensuite, nous ajoutons le temps delta à notre timer et vérifions si le timer "
"a atteint une valeur aussi grande ou plus grande que notre constante "
"``KILL_TIME``. Si c'est le cas, nous utilisons ``queue_free`` pour libérer "
"la balle."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:514
msgid "In ``collided`` we check whether we've hit something yet."
msgstr ""
"Dans ``collided``, nous vérifions si nous avons déjà touché quelque chose."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:516
msgid ""
"Remember that ``collided`` is only called when a body has entered the :ref:"
"`Area <class_Area>` node. If the bullet has not already collided with "
"something, we then proceed to check if the body the bullet has collided with "
"has a function/method called ``bullet_hit``. If it does, we call it and pass "
"in the bullet's damage and the bullet's global transform so we can get the "
"bullet's rotation and position."
msgstr ""
"Rappelez-vous que ``collided`` n'est appelé que lorsqu'un corps est entré "
"dans le nœud :ref:`Area <class_Area>`. Si la balle n'est pas déjà entrée en "
"collision avec quelque chose, nous vérifions ensuite si le corps avec lequel "
"la balle est entrée en collision a une fonction/méthode appelée "
"``bullet_hit``. Si c'est le cas, nous l'appelons et nous passons les "
"dommages de la balle et la transformation globale de la balle afin que nous "
"puissions obtenir la rotation et la position de la balle."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:521
msgid ""
"in ``collided``, the passed in body can be a :ref:`StaticBody "
"<class_StaticBody>`, :ref:`RigidBody <class_RigidBody>`, or :ref:"
"`KinematicBody <class_KinematicBody>`"
msgstr ""
"Dans ``collided``, le passé dans le corps peut être un :ref:`StaticBody "
"<class_StaticBody>`, :ref:`RigidBody <class_RigidBody>`, ou :ref:"
"`KinematicBody <class_KinematicBody>`"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:524
msgid ""
"We set the Bullet's ``hit_something`` variable to ``true`` because "
"regardless of whether or not the body that the bullet collided with has the "
"``bullet_hit`` function/method, it has hit something and so we need to make "
"sure the bullet does not hit anything else."
msgstr ""
"Nous avons réglé la variable ``hit_something`` de Bullet sur ``true`` parce "
"que, que le corps avec lequel la balle est entrée en collision ait ou non la "
"fonction/méthode ``bullet_hit``, elle a touché quelque chose et nous devons "
"donc nous assurer que la balle ne touche pas autre chose."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:527
msgid "Then we free the bullet using ``queue_free``."
msgstr "Ensuite, nous libérons la balle en utilisant ``queue_free``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:529
msgid ""
"You may be wondering why we even have a ``hit_something`` variable if we "
"free the bullet using ``queue_free`` as soon as it hits something."
msgstr ""
"Vous vous demandez peut-être pourquoi nous avons une variable "
"``hit_something`` si nous libérons la balle en utilisant ``queue_free`` dès "
"qu'elle frappe quelque chose."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:532
msgid ""
"The reason we need to track whether we've hit something or not is because "
"``queue_free`` does not immediately free the node, so the bullet could "
"collide with another body before Godot has a chance to free it. By tracking "
"whether the bullet has hit something, we can make sure that the bullet will "
"only hit one object."
msgstr ""
"La raison pour laquelle nous devons savoir si nous avons touché quelque "
"chose ou non est que ``queue_free`` ne libère pas immédiatement le nœud, de "
"sorte que la balle pourrait entrer en collision avec un autre corps avant "
"que Godot ait une chance de la libérer. En vérifiant si la balle a touché "
"quelque chose, nous pouvons nous assurer qu'elle ne touchera qu'un seul "
"objet."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:540
msgid ""
"Before we start programming the player again, let's take a quick look at "
"``Player.tscn``. Open up ``Player.tscn`` again."
msgstr ""
"Avant de recommencer à programmer le joueur, jetons un coup d’œil rapide sur "
"``Player.tscn``. Ouvrez à nouveau ``Player.tscn``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:543
msgid ""
"Expand ``Rotation_Helper`` and notice how it has two nodes: "
"``Gun_Fire_Points`` and ``Gun_Aim_Point``."
msgstr ""
"Développez ``Rotation_Helper`` et remarquez comment il a deux nœuds : "
"``Gun_Fire_Points`` et ``Gun_Aim_Point``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:546
msgid ""
"``Gun_aim_point`` is the point that the bullets will be aiming at. Notice "
"how it is lined up with the center of the screen and pulled a distance "
"forward on the Z axis. ``Gun_aim_point`` will serve as the point where the "
"bullets will for sure collide with as it goes along."
msgstr ""
"``Gun_aim_point`` est le point sur lequel les balles viseront. Remarquez "
"comment il est aligné avec le centre de l'écran et tiré à une certaine "
"distance vers l'avant sur l'axe Z. ``Gun_aim_point`` servira de point de "
"collision avec les balles au fur et à mesure qu'elles entreront en collision."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:551
msgid ""
"There is a invisible mesh instance for debugging purposes. The mesh is a "
"small sphere that visually shows at which target the bullets will be aiming."
msgstr ""
"Il y a un maillage invisible à des fins de débogage. Le maillage est une "
"petite sphère qui indique visuellement vers qu'elle cible les balles vont "
"être dirigées."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:554
msgid ""
"Open up ``Gun_Fire_Points`` and you'll find three more :ref:`Spatial "
"<class_Spatial>` nodes, one for each weapon."
msgstr ""
"Ouvrez ``Gun_Fire_Points`` et vous trouverez trois autres nœuds :ref:"
"`Spatial <class_Spatial>`, un pour chaque arme."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:557
msgid ""
"Open up ``Rifle_Point`` and you'll find a :ref:`Raycast <class_Raycast>` "
"node. This is where we will be sending the raycasts for our rifle's bullets. "
"The length of the raycast will dictate how far our bullets will travel."
msgstr ""
"Ouvrez ``Rifle_Point`` et vous trouverez un nœud :ref:`Raycast "
"<class_Raycast>`. C'est ici que nous enverrons les raycast pour les balles "
"de notre fusil. La longueur du raycast dictera la distance à laquelle nos "
"balles voyageront."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:561
msgid ""
"We are using a :ref:`Raycast <class_Raycast>` node to handle the rifle's "
"bullet because we want to fire lots of bullets quickly. If we use bullet "
"objects, it is quite possible we could run into performance issues on older "
"machines."
msgstr ""
"Nous utilisons un nœud :ref:`Raycast <class_Raycast>` pour manipuler la "
"balle du fusil car nous voulons tirer beaucoup de balles rapidement. Si nous "
"utilisons des objets Balle, il est fort possible que nous rencontrions des "
"problèmes de performance sur des machines plus anciennes."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:565
msgid ""
"If you are wondering from where the positions of the points came, they are "
"the rough positions of the ends of each weapon. You can see this by going to "
"``AnimationPlayer``, selecting one of the firing animations and scrubbing "
"through the timeline. The point for each weapon should mostly line up with "
"the end of each weapon."
msgstr ""
"Si vous vous demandez d'où viennent les positions des pointes, ce sont les "
"positions brutes des extrémités de chaque arme. Vous pouvez le voir en "
"allant dans ``AnimationPlayer``, en sélectionnant l'une des animations de "
"tir et en parcourant la ligne de temps. La pointe de chaque arme doit être "
"alignée avec l'extrémité de chaque arme."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:571
msgid ""
"Open up ``Knife_Point`` and you'll find an :ref:`Area <class_Area>` node. We "
"are using an :ref:`Area <class_Area>` for the knife because we only care for "
"all the bodies close to us, and because our knife does not fire into space. "
"If we were making a throwing knife, we would likely spawn a bullet object "
"that looks like a knife."
msgstr ""
"Ouvrez ``Knife_Point`` et vous trouverez un nœud :ref:`Area <class_Area>`. "
"Nous utilisons un :ref:`Area <class_Area>>` pour le couteau parce que nous "
"nous occupons seulement de tous les corps proches de nous, et parce que "
"notre couteau ne tire pas dans l'espace. Si nous fabriquions un couteau à "
"lancer, nous produirions probablement un objet de balle qui ressemble à un "
"couteau."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:576
msgid ""
"Finally, we have ``Pistol_Point``. This is the point where we will be "
"creating/instancing our bullet objects. We do not need any additional nodes "
"here, as the bullet handles all of its own collision detection."
msgstr ""
"Enfin, nous avons ``Pistol_Point``. C'est à ce moment-là que nous allons "
"créer/instancier nos objets balles. Nous n'avons pas besoin de nœuds "
"supplémentaires ici, car la balle gère sa propre détection de collision."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:580
msgid ""
"Now that we've seen how we will handle our other weapons, and where we will "
"spawn the bullets, let's start working on making them work."
msgstr ""
"Maintenant que nous avons vu comment nous allons manipuler nos autres armes "
"et où nous allons fabriquer les balles, commençons à travailler pour "
"qu'elles fonctionnent."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:583
msgid ""
"You can also look at the HUD nodes if you want. There is nothing fancy there "
"and other than using a single :ref:`Label <class_Label>`, we will not be "
"touching any of those nodes. Check :ref:"
"`doc_design_interfaces_with_the_control_nodes` for a tutorial on using GUI "
"nodes."
msgstr ""
"Vous pouvez également regarder les nœuds HUD si vous le souhaitez. Il n'y a "
"rien d'extravagant et à part l'utilisation d'un seul :ref:`Label "
"<class_Label>`, nous ne toucherons aucun de ces nœuds. Vérifier :ref:"
"`doc_design_interfaces_with_the_control_nodes` pour un tutoriel sur "
"l'utilisation des nœuds GUI."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:589
msgid "Creating the first weapon"
msgstr "Créer la première arme"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:591
msgid "Lets write the code for each of our weapons, starting with the pistol."
msgstr ""
"Écrivons le code de chacune de nos armes, en commençant par le pistolet."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:593
msgid ""
"Select ``Pistol_Point`` (``Player`` -> ``Rotation_Helper`` -> "
"``Gun_Fire_Points`` -> ``Pistol_Point``) and create a new script called "
"``Weapon_Pistol.gd``."
msgstr ""
"Sélectionnez ``Pistolet_Point`` (``Player`` -> ``Rotation_Helper`` -> "
"``Gun_Fire_Points`` -> ``Pistol_Point``) et créez un nouveau script appelé "
"``Weapon_Pistol.gd``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:595
msgid "Add the following code to ``Weapon_Pistol.gd``:"
msgstr "Ajoutez le code suivant à ``Weapon_Pistol.gd`` :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:646
msgid "Let's go over how the script works."
msgstr "Voyons comment fonctionne le script."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:650
msgid "First we define some class variables we'll need in the script:"
msgstr ""
"Tout d'abord, nous définissons quelques variables de classe dont nous aurons "
"besoin dans le script :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:652
msgid "``DAMAGE``: The amount of damage a single bullet does."
msgstr "``DAMAGE`` : L'ampleur des dommages causés par une seule balle."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:653
msgid "``IDLE_ANIM_NAME``: The name of the pistol's idle animation."
msgstr "``IDLE_ANIM_NAME`` : Le nom de l'animation d'inactivité du pistolet."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:654
msgid "``FIRE_ANIM_NAME``: The name of the pistol's fire animation."
msgstr "``FIRE_ANIM_NAME`` : Le nom de l'animation de tir du pistolet."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:655
msgid ""
"``is_weapon_enabled``: A variable for checking whether this weapon is in use/"
"enabled."
msgstr ""
"``is_weapon_enabled`` : Variable permettant de vérifier si cette arme est "
"utilisée/activée."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:656
msgid "``bullet_scene``: The bullet scene we worked on earlier."
msgstr ""
"``bullet_scene`` : La scène de la balle sur laquelle on a travaillé plus tôt."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:657
msgid "``player_node``: A variable to hold ``Player.gd``."
msgstr "``player_node`` : Une variable pour contenir ``Player.gd``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:659
msgid ""
"The reason we define most of these variables is so we can use them in "
"``Player.gd``."
msgstr ""
"La raison pour laquelle nous définissons la plupart de ces variables est que "
"nous pouvons les utiliser dans ``Player.gd``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:661
msgid ""
"Each of the weapons we'll make will have all these variables (minus "
"``bullet_scene``) so we have a consistent interface to interact with in "
"``Player.gd``. By using the same variables/functions in each weapon, we can "
"interact with them without having to know which weapon we are using, which "
"makes our code much more modular because we can add weapons without having "
"to change much of the code in ``Player.gd`` and it will just work."
msgstr ""
"Chacune des armes que nous fabriquerons aura toutes ces variables (moins "
"``bullet_scene``) donc nous avons une interface cohérente pour interagir "
"avec ``Player.gd``. En utilisant les mêmes variables/fonctions dans chaque "
"arme, nous pouvons interagir avec elles sans avoir à savoir quelle arme nous "
"utilisons, ce qui rend notre code beaucoup plus modulaire parce que nous "
"pouvons ajouter des armes sans avoir à changer une grande partie du code "
"dans ``Player.gd``et ça fonctionne."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:666
msgid ""
"We could write all the code in ``Player.gd``, but then ``Player.gd`` will "
"get increasingly harder to manage as we add weapons. By using a modular "
"design with a consistent interface, we can keep ``Player.gd`` nice and neat, "
"while also making it easier to add/remove/modify weapons."
msgstr ""
"Nous pourrions écrire tout le code dans ``Player.gd``, mais ensuite ``Player."
"gd`` sera de plus en plus difficile à gérer à mesure que nous ajouterons des "
"armes. En utilisant une conception modulaire avec une interface cohérente, "
"nous pouvons garder ``Player.gd`` agréable et soigné, tout en facilitant "
"l'ajout, la suppression et la modification d'armes."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:671
msgid "In ``_ready`` we simply pass over it."
msgstr "Dans ``_ready``, nous ne faisons que passer."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:673
msgid ""
"There is one thing of note though, an assumption that we'll fill in ``Player."
"gd`` at some point."
msgstr ""
"Il y a une chose à noter cependant, l'hypothèse que nous allons remplir "
"``Player.gd`` à un moment."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:675
msgid ""
"We are going to assume that ``Player.gd`` will pass themselves in before "
"calling any of the functions in ``Weapon_Pistol.gd``."
msgstr ""
"Nous allons supposer que ``Player.gd`` passe lui-mêmes en avant l'appel à "
"des fonctions de ``Weapon_Pistol.gd``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:677
msgid ""
"While this can lead to situations where the player does not pass themselves "
"in (because we forget), we would have to have a long string of "
"``get_parent`` calls to traverse up the scene tree to retrieve the player. "
"This does not look pretty (``get_parent().get_parent().get_parent()`` and so "
"on) and it is relatively safe to assume we will remember to pass ourselves "
"to each weapon in ``Player.gd``."
msgstr ""
"Bien que cela puisse conduire à des situations où le joueur ne se passe pas "
"lui-même (parce que nous oublions), nous aurions besoin d'une longue chaîne "
"d'appels ``get_parent`` pour parcourir l'arbre de scène pour récupérer le "
"joueur. Cela n'a pas l'air joli (``get_parent().get_parent().get_parent()`` "
"et ainsi de suite) et il est relativement sûr de supposer que nous allons "
"nous rappeler de nous passer à chaque arme dans ``Player.gd``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:683
msgid "Next let's look at ``fire_weapon``:"
msgstr "Ensuite regardons ``fire_weapon`` :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:685
msgid "The first thing we do is instance the bullet scene we made earlier."
msgstr ""
"La première chose que nous faisons, c'est instancier la scène balles que "
"nous avons faite tout à l'heure."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:687
msgid ""
"By instancing the scene, we are creating a new node holding all the node(s) "
"in the scene we instanced, effectively cloning that scene."
msgstr ""
"En instanciant la scène, nous créons un nouveau nœud contenant tous les "
"nœuds de la scène que nous avons instanciée, clonant effectivement cette "
"scène."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:689
msgid ""
"Then we add a ``clone`` to the first child node of the root of the scene we "
"are currently in. By doing this, we're making it a child of the root node of "
"the currently loaded scene."
msgstr ""
"Ensuite, nous ajoutons un ``clone`` au premier nœud enfant de la racine de "
"la scène dans laquelle nous sommes actuellement. En faisant cela, nous en "
"faisons un enfant du nœud racine de la scène actuellement chargée."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:691
msgid ""
"In other words, we are adding a ``clone`` as a child of the first node "
"(whatever is at the top of the scene tree) in the currently loaded/opened "
"scene. If the currently loaded/open scene is ``Testing_Area.tscn``, we'd be "
"adding our ``clone`` as a child of ``Testing_Area``, the root node in that "
"scene."
msgstr ""
"En d'autres termes, nous ajoutons un ``clone`` en tant qu'enfant du premier "
"nœud (ce qui se trouve en haut de l'arbre de scène) dans la scène "
"actuellement chargée/ouverte. Si la scène actuellement chargée/ouverte est "
"``Testing_Area.tscn``, nous ajouterions notre ``clone`` en tant qu'enfant de "
"``Testing_Area``, le nœud racine dans cette scène."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:694
msgid ""
"As mentioned later below in the section on adding sounds, this method makes "
"an assumption. This will be explained later in the section on adding sounds "
"in :ref:`doc_fps_tutorial_part_three`"
msgstr ""
"Comme mentionné plus loin dans la section sur l'ajout de sons, cette méthode "
"fait une hypothèse. Ceci sera expliqué plus loin dans la section sur l'ajout "
"de sons dans :ref:`doc_fps_tutorial_part_three`"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:697
msgid ""
"Next we set the global transform of the clone to the ``Pistol_Point``'s "
"global transform. The reason we do this is so the bullet is spawned at the "
"end of the pistol."
msgstr ""
"Ensuite, nous réglons la transformation globale du clone sur la "
"transformation globale du ``Pistol_Point``. La raison pour laquelle nous "
"faisons cela, c'est pour que la balle soit crée à l'extrémité du pistolet."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:699
msgid ""
"You can see that ``Pistol_Point`` is positioned right at the end of the "
"pistol by clicking the :ref:`AnimationPlayer <class_AnimationPlayer>` and "
"scrolling through ``Pistol_fire``. You'll find the position is more or less "
"at the end of the pistol when it fires."
msgstr ""
"Vous pouvez voir que ``Pistol_Point`` est positionné au bout du pistolet en "
"cliquant sur le bouton :ref:`AnimationPlayer <class_AnimationPlayer>` et en "
"faisant défiler ``Pistol_fire``. Vous verrez que la position est plus ou "
"moins à l'extrémité du pistolet quand il tire."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:702
msgid ""
"Next we scale it up by a factor of ``4`` because the bullet scene is a "
"little too small by default."
msgstr ""
"Ensuite, nous mettons à l'échelle d'un facteur de ``4`` parce que la scène "
"balle est un peu trop petite par défaut."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:704
msgid ""
"Then we set the bullet's damage (``BULLET_DAMAGE``) to the amount of damage "
"a single pistol bullet does (``DAMAGE``)."
msgstr ""
"Ensuite, nous fixons les dommages de la balle (``BULLET_DAMAGE``) à la "
"quantité de dommages causés par une seule balle de pistolet (``DAMAGE``)."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:708
msgid "Now let's look at ``equip_weapon``:"
msgstr "Regardons maintenant ``equip_weapon`` :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:710
msgid ""
"The first thing we do is check to see whether the animation manager is in "
"the pistol's idle animation. If we are in the pistol's idle animation, we "
"set ``is_weapon_enabled`` to ``true`` and return ``true`` because the pistol "
"has successfully been equipped."
msgstr ""
"La première chose que nous faisons est de vérifier si le gestionnaire "
"d'animation est dans l'animation d'inactivité du pistolet. Si nous sommes "
"dans l'animation d'inactivité du pistolet, nous réglons "
"``is_weapon_enabled`` sur ``true`` et retournons ``true`` parce que le "
"pistolet a été équipé avec succès."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:714
msgid ""
"Because we know our pistol's ``equip`` animation automatically transitions "
"to the pistol's idle animation, if we are in the pistol's idle animation the "
"pistol must have finished playing the equip animation."
msgstr ""
"Parce que nous savons que l'animation ``equip`` de notre pistolet passe "
"automatiquement à l'animation d'inactivité du pistolet, si nous sommes dans "
"l'animation d'inactivité du pistolet, le pistolet doit logiquement avoir "
"terminé de jouer l'animation d'équipement."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:717
msgid ""
"We know these animations will transition because we wrote the code to make "
"them transition in ``Animation_Manager.gd``"
msgstr ""
"Nous savons que ces animations seront en transition parce que nous avons "
"écrit le code pour les faire transitionner dans ``Animation_Manager.gd``"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:719
msgid ""
"Next we check to see if the player is in the ``Idle_unarmed`` animation "
"state. Because all unequipping animations go to this state, and because any "
"weapon can be equipped from this state, we change animations to "
"``Pistol_equip`` if the player is in the ``Idle_unarmed`` state."
msgstr ""
"Ensuite, nous vérifions si le joueur est dans l'état d'animation "
"``Idle_unarmed``. Parce que toutes les animations non équipées vont dans cet "
"état, et parce que n'importe quelle arme peut être équipée à partir de cet "
"état, nous changeons les animations en ``Pistol_equip`` si le joueur est "
"dans l'état ``Idle_unarmed``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:722
msgid ""
"Since we know ``Pistol_equip`` will transition to ``Pistol_idle``, we do not "
"need to do any more additional processing for equipping weapons, but since "
"we were not able to equip the pistol yet, we return ``false``."
msgstr ""
"Puisque nous savons que ``Pistol_equip`` passera à ``Pistol_idle``, nous "
"n'avons pas besoin de faire d'autres traitements supplémentaires pour "
"équiper les armes, mais comme nous n'avons pas encore pu équiper le "
"pistolet, nous retournons \"faux\"."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:727
msgid "Finally, let's look at ``unequip_weapon``:"
msgstr "Enfin, jetons un coup d’œil à ``unequip_weapon`` :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:729
msgid ""
"``unequip_weapon`` is similar to ``equip_weapon``, but instead we're "
"checking things in reverse."
msgstr ""
"``unequip_weapon`` est semblable à ``equip_weapon``, mais nous vérifions les "
"choses à l'inverse."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:731
msgid ""
"First we check to see whether the player is in the idle animation state. "
"Then we check to make sure the player is not in the ``Pistol_unequip`` "
"animation. If the player is not in the ``Pistol_unequip`` animation, we want "
"to play the ``pistol_unequip`` animation."
msgstr ""
"Tout d'abord, nous vérifions si le joueur est dans l'état d'animation "
"d'inactivité. Ensuite, nous vérifions que le joueur n'est pas dans "
"l'animation ``Pistol_unequip``. Si le joueur n'est pas dans l'animation "
"``Pistol_unequip``, nous voulons jouer l'animation ``pistol_unequip``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:734
msgid ""
"You may be wondering why we are checking to see whether the player is in the "
"pistol's idle animation, and then making sure the player is not unequipping "
"right after. The reason behind the additional check is because we could (in "
"rare cases) call ``unequip_weapon`` twice before we've had a chance to "
"process ``set_animation``, so we add this additional check to make sure the "
"unequip animation plays."
msgstr ""
"Vous vous demandez peut-être pourquoi nous vérifions si le joueur est dans "
"l'animation d'inactivité du pistolet, puis nous nous assurons que le joueur "
"n'est pas en train de se déséquiper juste après. La raison de cette "
"vérification supplémentaire est que nous pourrions (dans de rares cas) "
"appeler ``unequip_weapon`` deux fois avant d'avoir eu la chance de traiter "
"``set_animation``, alors nous ajoutons cette vérification supplémentaire "
"pour nous assurer que l'animation déséquipée est jouée."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:738
msgid ""
"Next we check to see whether the player is in ``Idle_unarmed``, which is the "
"animation state we will transition into from ``Pistol_unequip``. If the "
"player is in ``Idle_unarmed``, then we set ``is_weapon_enabled`` to "
"``false`` since we are no longer using this weapon, and return ``true`` "
"because we have successfully unequipped the pistol."
msgstr ""
"Ensuite, nous vérifions si le joueur est dans ``Idle_unarmed``, qui est "
"l'état de l'animation dans lequel nous allons passer depuis "
"``Pistol_unequip``. Si le joueur se trouve dans ``Idle_unarmed``, nous "
"réglons alors ``is_weapon_enabled`` sur ``false`` puisque nous n'utilisons "
"plus cette arme, et nous retournons ``true`` parce que nous avons réussi à "
"déséquiper le pistolet."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:741
msgid ""
"If the player is not in ``Idle_unarmed``, we return ``false`` because we "
"have not yet successfully unequipped the pistol."
msgstr ""
"Si le joueur n'est pas dans \"Idle_unarmed\", nous retournons ``false`` "
"parce que nous n'avons pas encore réussi à déséquiper le pistolet."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:744
msgid "Creating the other two weapons"
msgstr "Création des deux autres armes"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:746
msgid ""
"Now that we have all the code we'll need for the pistol, let's add the code "
"for the rifle and knife next."
msgstr ""
"Maintenant que nous avons tout le code nécessaire pour le pistolet, ajoutons "
"le code pour le fusil et le couteau."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:748
msgid ""
"Select ``Rifle_Point`` (``Player`` -> ``Rotation_Helper`` -> "
"``Gun_Fire_Points`` -> ``Rifle_Point``) and create a new script called "
"``Weapon_Rifle.gd``, then add the following:"
msgstr ""
"Sélectionnez ``Rifle_Point`` (``Player`` -> ``Rotation_Helper`` -> "
"``Gun_Fire_Points`` -> ``Rifle_Point``) et créez un nouveau script appelé "
"``Weapon_Rifle.gd``, puis ajoutez ce qui suit :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:801
msgid ""
"Most of this is exactly the same as ``Weapon_Pistol.gd``, so we're only "
"going to look at what's changed: ``fire_weapon``."
msgstr ""
"C'est exactement la même chose que ``Weapon_Pistol.gd``, alors nous allons "
"seulement regarder ce qui a changé : ``fire_weapon``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:803
msgid ""
"The first thing we do is get the :ref:`Raycast <class_Raycast>` node, which "
"is a child of ``Rifle_Point``."
msgstr ""
"La première chose que nous faisons est d'obtenir le nœud :ref:`Raycast "
"<class_Raycast>`, qui est un enfant de ``Rifle_Point``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:805
msgid ""
"Next we force the :ref:`Raycast <class_Raycast>` to update using "
"``force_raycast_update``. This will force the :ref:`Raycast <class_Raycast>` "
"to detect collisions when we call it, meaning we get a frame perfect "
"collision check with the 3D physics world."
msgstr ""
"Ensuite, nous forçons le :ref:`Raycast <class_Raycast>` à se mettre à jour "
"en utilisant ``force_raycast_update``. Cela forcera le :ref:`Raycast "
"<class_Raycast>` à détecter les collisions lorsque nous l'appelons, ce qui "
"signifie que nous obtenons un contrôle parfait des collisions avec le monde "
"physique 3D."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:808
msgid ""
"Then we check to see if the :ref:`Raycast <class_Raycast>` collided with "
"something."
msgstr ""
"Ensuite, nous vérifions si le :ref:`Raycast <class_Raycast>` est entré en "
"collision avec quelque chose."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:810
msgid ""
"If the :ref:`Raycast <class_Raycast>` has collided with something, we first "
"get the collision body it collided with. This can be a :ref:`StaticBody "
"<class_StaticBody>`, :ref:`RigidBody <class_RigidBody>`, or a :ref:"
"`KinematicBody <class_KinematicBody>`."
msgstr ""
"Si le :ref:`Raycast <class_Raycast>` est entré en collision avec quelque "
"chose, on obtient d'abord le corps de collision avec lequel il est entré en "
"collision. Cela peut être un :ref:`StaticBody <class_StaticBody>`, :ref:"
"`RigidBody <class_RigidBody>`, ou un :ref:`KinematicBody "
"<class_KinematicBody>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:813
msgid ""
"Next we want to make sure the body we've collided with is not the player, "
"since we (probably) do not want to give the player the ability to shoot "
"themselves in the foot."
msgstr ""
"Ensuite, nous voulons nous assurer que le corps avec lequel nous sommes "
"entrés en collision n'est pas le joueur, puisque nous ne voulons "
"(probablement) pas lui donner la possibilité de se tirer dans le pied."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:815
msgid ""
"If the body is not the player, we then check to see if it has a function/"
"method called ``bullet_hit``. If it does, we call it and pass in the amount "
"of damage this bullet does (``DAMAGE``), and the global transform of the :"
"ref:`Raycast <class_Raycast>` so we can tell from which direction the bullet "
"came."
msgstr ""
"Si le corps n’est pas le joueur, nous vérifions ensuite s’il a une fonction/"
"méthode appelée ``bullet_hit``. Si c’est le cas, nous l’appelons et passons "
"le montant des dégâts que cette balle fait (``DAMAGE``), et la "
"transformation globale de la :ref:`Raycast <class_Raycast>` afin que nous "
"puissions dire de quelle direction la balle est venue."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:820
msgid "Now all we need to do is write the code for the knife."
msgstr "Il ne nous reste plus qu'à écrire le code du couteau."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:822
msgid ""
"Select ``Knife_Point`` (``Player`` -> ``Rotation_Helper`` -> "
"``Gun_Fire_Points`` -> ``Knife_Point``) and create a new script called "
"``Weapon_Knife.gd``, then add the following:"
msgstr ""
"Sélectionnez ``Rifle_Point`` (``Player`` -> ``Rotation_Helper`` -> "
"``Gun_Fire_Points`` -> ``Rifle_Point``) et créez un nouveau script appelé "
"``Weapon_Rifle.gd``, puis ajoutez ce qui suit :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:873
msgid ""
"As with ``Weapon_Rifle.gd``, the only differences are in ``fire_weapon``, so "
"let's look at that:"
msgstr ""
"Comme dans le cas de ``Weapon_Rifle.gd``, les seules différences se situent "
"au niveau de ``fire_weapon``, alors regardons cela :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:875
msgid ""
"The first thing we do is get the :ref:`Area <class_Area>` child node of "
"``Knife_Point``."
msgstr ""
"La première chose que nous faisons est d'obtenir le :ref:`Area <class_Area>` "
"nœud enfant de ``Knife_Point``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:877
msgid ""
"Next we want to get all the collision bodies inside the :ref:`Area "
"<class_Area>` using ``get_overlapping_bodies``. This will return a list of "
"every body that touches the :ref:`Area <class_Area>`."
msgstr ""
"Ensuite, nous voulons obtenir tous les corps de collision à l'intérieur de "
"la :ref:`Area <class_Area>` en utilisant ``get_overlapping_bodies``. Ceci "
"retournera une liste de tous les corps qui touchent le :ref:`Area "
"<class_Area>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:880
msgid "We next want to go through each of those bodies."
msgstr "Nous voulons ensuite passer en revue chacun de ces corps."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:882
msgid ""
"First we check to make sure the body is not the player, because we do not "
"want to let the player be able to stab themselves. If the body is the "
"player, we use ``continue`` so we jump and look at the next body in "
"``bodies``."
msgstr ""
"Tout d'abord, nous vérifions que le corps n'est pas le joueur, parce que "
"nous ne voulons pas que le joueur soit capable de se poignarder. Si le corps "
"est le joueur, nous utilisons ``continue`` pour sauter et regarder le corps "
"suivant dans ``bodies``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:885
msgid ""
"If we have not jumped to the next body, we then check to see if the body has "
"the ``bullet_hit`` function/method. If it does, we call it, passing in the "
"amount of damage a single knife swipe does (``DAMAGE``) and the global "
"transform of the :ref:`Area <class_Area>`."
msgstr ""
"Si nous n'avons pas sauté au corps suivant, nous vérifions alors si le corps "
"a la fonction/méthode ``bullet_hit``. Si c'est le cas, nous l'appelons, en "
"passant par le montant des dommages causés par un simple coup de couteau "
"(``DAMAGE``) et la transformation globale de la:ref:`Area <class_Area>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:888
msgid ""
"While we could attempt to calculate a rough location for where the knife hit "
"exactly, we are not going to because using the :ref:`Area <class_Area>`'s "
"position works well enough and the extra time needed to calculate a rough "
"position for each body is not worth the effort."
msgstr ""
"Bien que nous puissions essayer de calculer un emplacement approximatif pour "
"l'endroit exact où le couteau a frappé, nous n'allons pas le faire parce que "
"l'utilisation de la position de :ref:`Area <class_Area>` fonctionne assez "
"bien et le temps supplémentaire nécessaire pour calculer une position "
"approximative pour chaque corps ne vaut pas la peine."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:893
msgid "Making the weapons work"
msgstr "Faire fonctionner les armes"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:895
msgid "Let's start making the weapons work in ``Player.gd``."
msgstr "Commençons à faire fonctionner les armes dans ``Player.gd``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:897
msgid ""
"First let's start by adding some class variables we'll need for the weapons:"
msgstr ""
"Commençons d'abord par ajouter quelques variables de classe dont nous aurons "
"besoin pour les armes :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:915
msgid "Let's go over what these new variables will do:"
msgstr "Voyons ce que ces nouvelles variables vont faire :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:917
msgid ""
"``animation_manager``: This will hold the :ref:`AnimationPlayer "
"<class_AnimationPlayer>` node and its script, which we wrote previously."
msgstr ""
"``animation_manager`` : Cela va contenir le nœud :ref:`AnimationPlayer "
"<class_AnimationPlayer>` et son script, que nous avons écrit précédemment."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:918
msgid ""
"``current_weapon_name``: The name of the weapon we are currently using. It "
"has four possible values: ``UNARMED``, ``KNIFE``, ``PISTOL``, and ``RIFLE``."
msgstr ""
"``current_weapon_name`` : Le nom de l'arme que nous utilisons actuellement. "
"Il a quatre valeurs possibles : ``UNARMED``, ``KNIFE``, ``PISTOL`` et "
"``RIFLE``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:919
msgid "``weapons``: A dictionary that will hold all the weapon nodes."
msgstr "``weapons`` : Un dictionnaire qui contiendra tous les nœuds de l'arme."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:920
msgid ""
"``WEAPON_NUMBER_TO_NAME``: A dictionary allowing us to convert from a "
"weapon's number to its name. We'll use this for changing weapons."
msgstr ""
"``WEAPON_NUMBER_TO_NAME`` : Un dictionnaire permettant de convertir le "
"numéro d'une arme en son nom. On s'en servira pour changer d'armes."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:921
msgid ""
"``WEAPON_NAME_TO_NUMBER``: A dictionary allowing us to convert from a "
"weapon's name to its number. We'll use this for changing weapons."
msgstr ""
"``WEAPON_NAME_TO_NUMBER`` : Un dictionnaire permettant de convertir le nom "
"d'une arme en son numéro. On s'en servira pour changer d'armes."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:922
msgid ""
"``changing_weapon``: A boolean to track whether or not we are changing guns/"
"weapons."
msgstr ""
"``changing_weapon`` : Un booléen pour savoir si oui ou non nous changeons "
"d'armes."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:923
msgid "``changing_weapon_name``: The name of the weapon we want to change to."
msgstr "``changing_weapon_name`` : Le nom de l'arme que nous voulons changer."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:924
msgid ""
"``health``: How much health our player has. In this part of the tutorial we "
"will not be using it."
msgstr ""
"``health`` : Quel quantité vie a notre joueur. Dans cette partie du "
"tutoriel, nous ne l'utiliserons pas."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:925
msgid ""
"``UI_status_label``: A label to show how much health we have, and how much "
"ammo we have both in our gun and in reserve."
msgstr ""
"``UI_status_label`` : Une étiquette pour montrer combien nous avons de vie "
"et combien de munitions nous avons dans notre fusil et en réserve."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:929
msgid ""
"Next we need to add a few things in ``_ready``. Here's the new ``_ready`` "
"function:"
msgstr ""
"Ensuite, nous devons ajouter quelques choses dans le ``_ready``. Voici le "
"nouveau ``_ready`` de la fonction :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:961
msgid "Let's go over what's changed."
msgstr "Voyons ce qui a changé."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:963
msgid ""
"First we get the :ref:`AnimationPlayer <class_AnimationPlayer>` node and "
"assign it to the ``animation_manager`` variable. Then we set the callback "
"function to a :ref:`FuncRef <class_FuncRef>` that will call the player's "
"``fire_bullet`` function. Right now we haven't written the ``fire_bullet`` "
"function, but we'll get there soon."
msgstr ""
"On obtient d'abord le nœud :ref:`AnimationPlayer <class_AnimationPlayer>` et "
"on l'affecte à la variable ``animation_manager``. Ensuite, nous réglons la "
"fonction de rappel sur :ref:`FuncRef <class_FuncRef>` qui appellera la "
"fonction ``fire_bullet`` du joueur. Pour l'instant, nous n'avons pas encore "
"écrit la fonction ``fire_bullet``, mais nous y arriverons bientôt."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:967
msgid ""
"Next we get all the weapon nodes and assign them to ``weapons``. This will "
"allow us to access the weapon nodes only with their name (``KNIFE``, "
"``PISTOL``, or ``RIFLE``)."
msgstr ""
"Ensuite, nous obtenons tous les nœuds d'armes et nous les assignons à "
"``weapons``. Cela nous permettra d'accéder aux nœuds d'armes uniquement avec "
"leur nom (``KNIFE``, ``PISTOL``, or ``RIFLE``)."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:970
msgid ""
"We then get ``Gun_Aim_Point``'s global position so we can rotate the "
"player's weapons to aim at it."
msgstr ""
"Nous obtenons alors la position globale de ``Gun_Aim_Point`` pour que nous "
"puissions faire pivoter les armes du joueur pour viser."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:972
msgid "Then we go through each weapon in ``weapons``."
msgstr "Ensuite, nous passons en revue chaque arme dans ``weapons``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:974
msgid ""
"We first get the weapon node. If the weapon node is not ``null``, we then "
"set its ``player_node`` variable to this script (``Player.gd``). Then we "
"have it look at ``gun_aim_point_pos`` using the ``look_at`` function, and "
"then rotate it by ``180`` degrees on the ``Y`` axis."
msgstr ""
"On prend d'abord le nœud de l'arme. Si le nœud de l'arme n'est pas ``null``, "
"on met alors sa variable ``player_node``` à ce script (``Player.gd``). "
"Ensuite, nous l'observons à l'aide de la fonction ``look_at``, puis nous la "
"faisons tourner de ``180`` degrés sur l'axe ``Y``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:977
msgid ""
"We rotate all of those weapon points by ``180`` degrees on their ``Y`` axis "
"because our camera is pointing backwards. If we did not rotate all of these "
"weapon points by ``180`` degrees, all of the weapons would fire backwards."
msgstr ""
"Nous faisons pivoter tous ces points d'arme de ``180`` degrés sur leur axe "
"``Y`` parce que notre caméra est dirigée vers l'arrière. Si nous ne faisions "
"pas pivoter tous ces points d'arme de ``180`` degrés, toutes les armes "
"tireraient à l'envers."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:980
msgid ""
"Then we set ``current_weapon_name`` and ``changing_weapon_name`` to "
"``UNARMED``."
msgstr ""
"Ensuite, nous réglons ``current_weapon_name`` et ``changing_weapon_name`` "
"sur ``UNARMED``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:982
msgid "Finally, we get the UI :ref:`Label <class_Label>` from our HUD."
msgstr "Enfin, nous obtenons le UI :ref:`Label <class_Label>` de notre HUD."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:986
msgid ""
"Let's add a new function call to ``_physics_process`` so we can change "
"weapons. Here's the new code:"
msgstr ""
"Ajoutons un nouvel appel de fonction à ``_physics_process`` pour pouvoir "
"changer d'arme. Voici le nouveau code :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:996
msgid "Now we will call ``process_changing_weapons``."
msgstr "Maintenant, nous allons appeler ``process_changing_weapons``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1000
msgid ""
"Now let's add all the player input code for the weapons in "
"``process_input``. Add the following code:"
msgstr ""
"Ajoutons maintenant tout le code d'entrée joueur pour les armes dans "
"``process_input``. Ajouter le code suivant :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1040
msgid "Let's go over the additions, starting with how we're changing weapons."
msgstr ""
"Passons en revue les ajouts, en commençant par la façon dont nous changeons "
"les armes."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1042
msgid ""
"First we get the current weapon's number and assign it to "
"``weapon_change_number``."
msgstr ""
"On obtient d'abord le numéro de l'arme courante et on l'assigne à "
"``weapon_change_number``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1044
msgid ""
"Then we check to see if any of the number keys (keys 1-4) are pressed. If "
"they are, we set ``weapon_change_number`` to the value mapped at that key."
msgstr ""
"Ensuite, nous vérifions si l'une des touches numériques (touches 1 à 4) est "
"activée. Si c'est le cas, nous réglons ``weapon_change_number`` sur la "
"valeur mappée à cette clé."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1047
msgid ""
"The reason key 1 is mapped to ``0`` is because the first element in a list "
"is mapped to zero, not one. Most list/array accessors in most programming "
"languages start at ``0`` instead of ``1``. See https://en.wikipedia.org/wiki/"
"Zero-based_numbering for more information."
msgstr ""
"La raison pour laquelle la clé 1 est mappée à ``0`` est que le premier "
"élément d'une liste est mappé à zéro, pas à un. La plupart des accesseurs de "
"listes/tableaux dans la plupart des langages de programmation commencent à "
"``0`` au lieu de ``1``. Voir https://en.wikipedia.org/wiki/Zero-"
"based_numbering pour plus d'informations."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1050
msgid ""
"Next we check to see if ``shift_weapon_positive`` or "
"``shift_weapon_negative`` is pressed. If one of them is, we add/subtract "
"``1`` from ``weapon_change_number``."
msgstr ""
"Ensuite, nous vérifions si ``shift_weapon_positive`` ou "
"``shift_weapon_negative`` est pressé. Si l'un d'eux l'est, on ajoute/"
"soustrait ``1`` au ``numéro_de_changement_d'arme``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1053
msgid ""
"Because the player may have shifted ``weapon_change_number`` outside of the "
"number of weapons the player has, we clamp it so it cannot exceed the "
"maximum number of weapons the player has and it ensures "
"``weapon_change_number`` is ``0`` or more."
msgstr ""
"Parce que le joueur a peut-être changé ``weapon_change_number`` en dehors du "
"nombre d’armes que le joueur possède, nous le fixons de sorte qu’il ne peut "
"pas dépasser le nombre maximum d’armes que le joueur a et il assure que "
"``weapon_change_number`` vaut ``0`` ou plus."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1056
msgid ""
"Then we check to make sure the player is not already changing weapons. If "
"the player is not, we then check to see if the weapon the player wants to "
"change to is a new weapon and not the weapon the player is currently using. "
"If the weapon the player is wanting to change to is a new weapon, we then "
"set ``changing_weapon_name`` to the weapon at ``weapon_change_number`` and "
"set ``changing_weapon`` to ``true``."
msgstr ""
"Ensuite, nous vérifions que le joueur ne change pas déjà d'arme. Si ce n'est "
"pas le cas, nous vérifions si l'arme pour laquelle le joueur veut changer "
"est une nouvelle arme et non celle qu'il utilise actuellement. Si l'arme "
"pour laquelle le joueur changer est une nouvelle arme, nous réglons alors "
"``changing_weapon_name`` sur l'arme à ``weapon_change_number`` et réglons "
"``changing_weapon`` sur ``vrai``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1060
msgid ""
"For firing the weapon we first check to see if the ``fire`` action is "
"pressed. Then we check to make sure the player is not changing weapons. Next "
"we get the weapon node for the current weapon."
msgstr ""
"Pour tirer, nous vérifions d'abord si l'action ``fire`` est pressée. "
"Ensuite, nous vérifions que le joueur ne change pas d'arme. Ensuite, nous "
"obtenons le nœud d'arme pour l'arme actuelle."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1064
msgid ""
"If the current weapon node does not equal ``null``, and the player is in its "
"``IDLE_ANIM_NAME`` state, we set the player's animation to the current "
"weapon's ``FIRE_ANIM_NAME``."
msgstr ""
"Si le nœud d'arme courant n'est pas ``null``, et que le joueur est dans son "
"état ``IDLE_ANIM_NAME``, l'animation du joueur est définie sur "
"``FIRE_ANIM_NAME`` de l'arme courante."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1069
msgid "Let's add ``process_changing_weapons`` next."
msgstr "Ajoutons ``process_changing_weapons`` suivant."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1071
msgid "Add the following code:"
msgstr "Ajoutez le code suivant :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1107
msgid "Let's go over what's happening here:"
msgstr "Voyons ce qui se passe ici :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1109
msgid ""
"The first thing we do is make sure we've received input to change weapons. "
"We do this by making sure ``changing_weapons`` is ``true``."
msgstr ""
"La première chose que nous faisons est de nous assurer que nous avons reçu "
"les informations pour changer les armes. Pour ce faire, nous nous assurons "
"que le ``changing_weapons`` est ``true``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1111
msgid ""
"Next we define a variable (``weapon_unequipped``) so we can check whether "
"the current weapon has been successfully unequipped or not."
msgstr ""
"Ensuite, nous définissons une variable (``weapon_unequipped``) pour pouvoir "
"vérifier si l'arme courante a été correctement déséquipée ou non."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1113
msgid "Then we get the current weapon from ``weapons``."
msgstr "Ensuite, nous obtenons l’arme actuelle depuis ``weapons``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1115
msgid ""
"If the current weapon is not ``null``, then we need to check whether the "
"weapon is enabled. If the weapon is enabled, we call its ``unequip_weapon`` "
"function so it will start the unequip animation. If the weapon is not "
"enabled, we set ``weapon_unequipped`` to ``true`` because the weapon has "
"successfully been unequipped."
msgstr ""
"Si l'arme actuelle n'est pas ``null``, il faut alors vérifier si l'arme est "
"activée. Si l'arme est activée, nous appelons sa fonction ``unequip_weapon`` "
"pour qu'elle lance l'animation de déséquipement. Si l'arme n'est pas "
"activée, nous réglons \"arme_non_équipée\" sur \"vrai\" parce que l'arme n'a "
"pas été correctement équipée."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1118
msgid ""
"If the current weapon is ``null``, then we can simply set "
"``weapon_unequipped`` to ``true``. The reason we do this check is because "
"there is no weapon script/node for ``UNARMED``, but there is also no "
"animations for ``UNARMED``, so we can just start equipping the weapon the "
"player wants to change to."
msgstr ""
"Si l'arme actuelle est ``null``, nous pouvons simplement régler "
"``weapon_unequipped`` sur ``true``. La raison pour laquelle nous faisons "
"cette vérification est qu'il n'y a pas de script/nœud d'arme pour "
"``UNARMED``, mais il n'y a pas non plus d'animations pour ``UNARMED``, donc "
"nous pouvons juste commencer à équiper l'arme pour laquelle le joueur veut "
"changer."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1121
msgid ""
"If the player has successfully unequipped the current weapon "
"(``weapon_unequipped == true``), we need to equip the new weapon."
msgstr ""
"Si le joueur a réussi à déséquiper l'arme actuelle (``weapon_unequipped == "
"true``), nous devons équiper la nouvelle arme."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1123
msgid ""
"First we define a new variable (``weapon_equipped``) for tracking whether "
"the player has successfully equipped the new weapon or not."
msgstr ""
"Tout d'abord, nous définissons une nouvelle variable (``weapon_equipped``) "
"pour savoir si le joueur a réussi à équiper la nouvelle arme ou non."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1125
msgid ""
"Then we get the weapon the player wants to change to. If the weapon the "
"player wants to change to is not ``null``, we then check to see whether it's "
"enabled or not. If it is not enabled, we call its ``equip_weapon`` function "
"so it starts to equip the weapon. If the weapon is enabled, we set "
"``weapon_equipped`` to ``true``."
msgstr ""
"Ensuite, nous obtenons l'arme pour laquelle le joueur veut changer. Si "
"l'arme pour laquelle le joueur veut changer n'est pas ``null``, nous "
"vérifions alors si elle est activée ou non. S'il n'est pas activé, on "
"appelle sa fonction ``equip_weapon`` pour qu'il commence à équiper l'arme. "
"Si l'arme est activée, nous réglons ``weapon_equipped`` sur ``true``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1128
msgid ""
"If the weapon the player wants to change to is ``null``, we simply set "
"``weapon_equipped`` to ``true`` because we do not have any node/script for "
"``UNARMED``, nor do we have any animations."
msgstr ""
"Si l'arme pour laquel le joueur veut changer est ``null``, nous réglons "
"simplement ``weapon_equipped`` sur ``true`` parce que nous n'avons pas de "
"nœud/script pour ``UNARMED``, ni d'animations."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1131
msgid ""
"Finally, we check to see whether the player has successfully equipped the "
"new weapon. If (s)he has done so, we set ``changing_weapon`` to ``false`` "
"because the player is no longer changing weapons. We also set "
"``current_weapon_name`` to ``changing_weapon_name`` since the current weapon "
"has changed, and then we set ``changing_weapon_name`` to an empty string."
msgstr ""
"Enfin, nous vérifions si le joueur a bien équipé la nouvelle arme. S'il l'a "
"fait, nous réglons ``changing_weapon`` sur ``false`` parce que le joueur ne "
"change plus d'arme. Nous réglons aussi ``current_weapon_name`` sur "
"``changing_weapon_name`` puisque l'arme courante a changé, puis nous réglons "
"``changing_weapon_name`` sur un string vide."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1137
msgid ""
"Now, we need to add one more function to the player, and then the player is "
"ready to start firing the weapons!"
msgstr ""
"Maintenant, nous avons besoin d'ajouter une nouvelle fonction au joueur, et "
"après le joueur pourra commencer a tirer !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1139
msgid ""
"We need to add ``fire_bullet``, which will be called by the :ref:"
"`AnimationPlayer <class_AnimationPlayer>` at those points we set earlier in "
"the :ref:`AnimationPlayer <class_AnimationPlayer>` function track:"
msgstr ""
"On a besoin d'ajouter ``fire_bullet``, qui peut être appelée par :ref:"
"`AnimationPlayer <class_AnimationPlayer>` aux points que nous avons fixé "
"précédemment dans l':ref:`AnimationPlayer <class_AnimationPlayer>` :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1151
msgid "Let's go over what this function does:"
msgstr "Voyons ce que fait cette fonction :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1153
msgid ""
"First we check to see whether the player is changing weapons. If the player "
"is changing weapons, we do not want shoot, so we ``return``."
msgstr ""
"Premièrement on vérifie que le joueur est en train de changer d'arme. Et si "
"le joueur change d'arme, on ne veut pas tirer, donc on ``return``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1155
msgid ""
"Calling ``return`` stops the rest of the function from being called. In this "
"case, we are not returning a variable because we are only interested in not "
"running the rest of the code, and because we are not looking for a returned "
"variable either when we call this function."
msgstr ""
"L'appel de ``return`` empêche le reste de la fonction d'être appelé. Dans ce "
"cas, nous ne retournons pas de variable parce que nous sommes seulement "
"intéressés à ne pas exécuter le reste du code, et parce que nous n'attendons "
"pas non plus de variable retournée lorsque nous appelons cette fonction."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1159
msgid ""
"Then we tell the current weapon the player is using to fire by calling its "
"``fire_weapon`` function."
msgstr ""
"Ensuite nous disons que le joueur est en train de tirer avec l'arme actuelle "
"en appelant sa fonction ``fire_weapon``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1161
msgid ""
"Remember how we mentioned the speed of the animations for firing was faster "
"than the other animations? By changing the firing animation speeds, you can "
"change how fast the weapon fires bullets!"
msgstr ""
"Rappelez-vous que nous avons mentionné que la vitesse des animations pour le "
"tir était plus rapide que les autres animations ? En changeant les vitesses "
"d'animation de tir, vous pouvez changer la vitesse à laquelle l'arme tire "
"des balles !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1167
msgid ""
"Before we are ready to test our new weapons, we still have a bit of work to "
"do."
msgstr ""
"Avant de pouvoir tester nos nouvelles armes, nous avons encore un peu de "
"travail à faire."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1170
msgid "Creating some test subjects"
msgstr "Création de quelques sujets de tests"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1172
msgid ""
"Create a new script by going to the scripting window, clicking \"file\", and "
"selecting new. Name this script ``RigidBody_hit_test`` and make sure it "
"extends :ref:`RigidBody <class_RigidBody>`."
msgstr ""
"Crée un nouveau script en allant dans la fenêtre de script, puis clique sur "
"\"fichier\", et sélectionne nouveau. Nomme ce script ``RigidBody_hit_test`` "
"et soit sur qu'il hérite de :ref:`RigidBody <class_RigidBody>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1175
msgid "Now we need to add this code:"
msgstr "Maintenant nous avons besoin d'ajouter ce code :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1192
msgid "Let's go over how ``bullet_hit`` works:"
msgstr "Voyons comment ``bullet_hit`` fonctionne :"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1195
msgid ""
"First we get the bullet's forward directional vector. This is so we can tell "
"from which direction the bullet will hit the :ref:`RigidBody "
"<class_RigidBody>`. We will use this to push the :ref:`RigidBody "
"<class_RigidBody>` in the same direction as the bullet."
msgstr ""
"D'abord, on obtient le vecteur directionnel vers l'avant de la balle. C'est "
"ainsi que nous pouvons dire dans quelle direction la balle va frapper le :"
"ref:`RigidBody <class_RigidBody>`. Nous l'utiliserons pour pousser le :ref:"
"`RigidBody <class_RigidBody>` dans la même direction que la balle."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1198
msgid ""
"We need to boost the directional vector by ``BASE_BULLET_BOOST`` so the "
"bullets pack a bit more of a punch and move the :ref:`RigidBody "
"<class_RigidBody>` nodes in a visible way. You can just set "
"``BASE_BULLET_BOOST`` to lower or higher values if you want less or more of "
"a reaction when the bullets collide with the :ref:`RigidBody "
"<class_RigidBody>`."
msgstr ""
"Nous devons booster le vecteur directionnel par ``BASE_BULLET_BOOST`` pour "
"que les balles aient un peu plus de punch et déplacent les nœuds :ref:"
"`RigidBody <class_RigidBody>` d'une manière visible. Vous pouvez simplement "
"régler ``BASE_BULLET_BOOST`` sur des valeurs inférieures ou supérieures si "
"vous voulez une réaction plus ou moins importante lorsque les balles entrent "
"en collision avec le :ref:`RigidBody <class_RigidBody>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1202
msgid "Then we apply an impulse using ``apply_impulse``."
msgstr "Puis on applique une impulsion en utilisant ``apply_impulse``."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1204
msgid ""
"First, we need to calculate the position for the impulse. Because "
"``apply_impulse`` takes a vector relative to the :ref:`RigidBody "
"<class_RigidBody>`, we need to calculate the distance from the :ref:"
"`RigidBody <class_RigidBody>` to the bullet. We do this by subtracting the :"
"ref:`RigidBody <class_RigidBody>`'s global origin/position from the bullet's "
"global origin/position. This gets us the distance from the :ref:`RigidBody "
"<class_RigidBody>` to the bullet. We normalize this vector so the size of "
"the collider does not effect how much the bullets move the :ref:`RigidBody "
"<class_RigidBody>`."
msgstr ""
"Premièrement, nous avons besoin de calculer la position de l'impulsion. Car "
"``apply_impulse`` prends en entrée un vecteur relatif au :ref:`RigidBody "
"<class_RigidBody>` , nous avons besoin de calculer la distance du :ref:"
"`RigidBody <class_RigidBody>` à la balle. Nous calculons cela en soustrayant "
"la position globale du :ref:`RigidBody <class_RigidBody>`à la position "
"globale de la balle. Cela nous donne le vecteur de la balle au :ref:"
"`RigidBody <class_RigidBody>`. Nous normalisons ce vecteur pour que la "
"taille du collisionneur n'affecte pas l'influence de la balle sur le :ref:"
"`RigidBody <class_RigidBody>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1210
msgid ""
"Finally, we need to calculate the force for the impulse. For this, we use "
"the direction the bullet is facing and multiply it by the bullet's damage. "
"This gives a nice result and for stronger bullets, we get a stronger result."
msgstr ""
"Finalement, nous avons besoin de calculer la force de l'impulsion. Pour "
"cela, on utilise la direction vers laquelle est orienté la balle et nous la "
"multiplions par les dégâts de la balle. Cela donne un bon résultat et pour "
"des balles plus puissantes on obtient un résultat plus important."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1215
msgid ""
"Now we need to attach this script to all of the :ref:`RigidBody "
"<class_RigidBody>` nodes we want to affect."
msgstr ""
"Maintenant, nous devons attacher ce script à tous les nœuds :ref:`RigidBody "
"<class_RigidBody>` que l'on veut affecter."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1217
msgid ""
"Open up ``Testing_Area.tscn`` and select all the cubes parented to the "
"``Cubes`` node."
msgstr ""
"Ouvrez ``Testing_Area.tscn`` et sélectionnez tous les cubes parentés au nœud "
"``Cubes`` node."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1219
msgid ""
"If you select the top cube, and then hold down :kbd:`Shift` and select the "
"last cube, Godot will select all the cubes in-between!"
msgstr ""
"Si vous sélectionnez le cube supérieur, puis maintenez la touche :kbd:"
"`Shift` et sélectionnez le dernier cube, Godot sélectionnera tous les cubes "
"entre les deux !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1222
msgid ""
"Once you have all the cubes selected, scroll down in the inspector until you "
"get to the \"scripts\" section. Click the drop down and select \"Load\". "
"Open your newly created ``RigidBody_hit_test.gd`` script."
msgstr ""
"Une fois que vous avez sélectionné tous les cubes, faites défiler vers le "
"bas dans l’inspecteur jusqu’à ce que vous obtenez à la section \"scripts\". "
"Cliquez sur la liste déroulante et sélectionnez \"charger\". Ouvrez le "
"script ``RigidBody_hit_test.gd`` nouvellement créé."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1226
msgid "Final notes"
msgstr "Notes finales"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1230
msgid ""
"That was a lot of code! But now, with all that done, you can go and give "
"your weapons a test!"
msgstr ""
"C’était beaucoup de code ! Mais maintenant, avec tout ce qui est fait, vous "
"pouvez tester vos armes !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1232
msgid ""
"You should now be able to fire as many bullets as you want at the cubes and "
"they will move in response to the bullets colliding with them."
msgstr ""
"Vous devriez maintenant être capable de tirer autant de balles que vous le "
"voulez sur les cubes, et ces derniers bougeront en fonction des balles qui "
"entrent en collision avec ces derniers."

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1235
msgid ""
"In :ref:`doc_fps_tutorial_part_three`, we will add ammo to the weapons, as "
"well as some sounds!"
msgstr ""
"ICI :ref:`doc_fps_tutorial_part_three`, nous ajouterons des munitions aux "
"armes, mais aussi des bruitages !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1237
msgid "If you ever get lost, be sure to read over the code again!"
msgstr "Si jamais vous vous perdez, n'oubliez pas de relire le code !"

#: ../../docs/tutorials/3d/fps_tutorial/part_two.rst:1239
msgid ""
"You can download the finished project for this part here: :download:"
"`Godot_FPS_Part_2.zip <files/Godot_FPS_Part_2.zip>`"
msgstr ""
"Vous pouvez télécharger le projet fini pour cette partie ICI : :download:"
"`Godot_FPS_Part_2.zip <files/Godot_FPS_Part_2.zip>`"
