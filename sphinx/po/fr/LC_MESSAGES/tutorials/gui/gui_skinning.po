# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-28 16:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/gui/gui_skinning.rst:4
msgid "GUI skinning"
msgstr "Personnalisation de GUI"

#: ../../docs/tutorials/gui/gui_skinning.rst:7
msgid "Oh, beautiful GUI!"
msgstr "Oh, magnifique GUI !"

#: ../../docs/tutorials/gui/gui_skinning.rst:9
msgid ""
"This tutorial is about advanced skinning of a user interface. Most games "
"generally don't need this, as they end up just relying on :ref:`Label "
"<class_Label>`, :ref:`TextureRect <class_TextureRect>`, :ref:`TextureButton "
"<class_TextureButton>` and :ref:`TextureProgress <class_TextureProgress>`."
msgstr ""
"Ce tutoriel concerne le skinning avancé d'une interface utilisateur. La "
"plupart des jeux n'ont généralement pas besoin de cela, car ils s'appuient "
"simplement sur des nœuds de type :ref:`Label <class_Label>`, :ref:"
"`TextureRect <class_TextureRect>`, :ref:`TextureButton "
"<class_TextureButton>` et :ref:`TextureProgress <class_TextureProgress>`."

#: ../../docs/tutorials/gui/gui_skinning.rst:15
msgid ""
"However, many types of games often need complex user interfaces, like MMOs, "
"traditional RPGs, Simulators, Strategy, etc. These kinds of interface are "
"also common in some games that include editors to create content, or "
"interfaces for network connectivity."
msgstr ""
"Cependant, de nombreux types de jeux nécessitent souvent des interfaces "
"utilisateur complexes, comme les MMO, les RPG traditionnels, les "
"simulateurs, les jeux de stratégie, etc. Ces types d'interface sont "
"également courants dans certains jeux qui incluent des éditeurs pour créer "
"du contenu, ou des interfaces pour la connectivité réseau."

#: ../../docs/tutorials/gui/gui_skinning.rst:20
msgid ""
"Godot's user interface uses these kinds of control with the default theme, "
"but they can be skinned to resemble pretty much any kind of user interface."
msgstr ""
"L'interface utilisateur de Godot utilise ces types de contrôle avec le thème "
"par défaut, mais ils peuvent être personnalisés pour ressembler à peu près à "
"n'importe quel type d'interface utilisateur."

#: ../../docs/tutorials/gui/gui_skinning.rst:25
msgid "Theme"
msgstr "Thème"

#: ../../docs/tutorials/gui/gui_skinning.rst:27
msgid ""
"The GUI is skinned through the :ref:`Theme <class_Theme>` resource. Theme "
"contains all the information required to change the entire visual styling of "
"all controls. Theme options are named, so it's not obvious which name "
"changes what (especially from code), but several tools are provided. The "
"ultimate place to look at what each theme option is for each control, which "
"will always be more up to date than any documentation, is the file `scene/"
"resources/default_theme/default_theme.cpp <https://github.com/godotengine/"
"godot/blob/master/scene/resources/default_theme/default_theme.cpp>`__. The "
"rest of this document will explain the different tools used to customize the "
"theme."
msgstr ""
"L'interface graphique est personnalisée via la ressource :ref:`Theme "
"<class_Theme>`. Le thème contient toutes les informations nécessaires pour "
"modifier l'intégralité du style visuel de tous les contrôles. Les options de "
"thème sont nommées, il n'est donc pas évident de savoir quel nom change quoi "
"(en particulier à partir du code), mais plusieurs outils sont fournis. "
"L'endroit ultime pour voir quelle est chaque option de thème pour chaque "
"contrôle, qui sera toujours plus à jour que toute documentation, est le "
"fichier `scene/resources/default_theme/default_theme.cpp <https://github.com/"
"godotengine/godot/blob/master/scene/resources/default_theme/default_theme."
"cpp>`__. Le reste de ce document explique les différents outils utilisés "
"pour personnaliser le thème."

#: ../../docs/tutorials/gui/gui_skinning.rst:38
msgid ""
"A Theme can be applied to any control in the scene. As a result, all "
"children and grand-children controls will use that same theme, too (unless "
"another theme is specified further down the tree). If a value is not found "
"in a theme, it will be searched in themes higher up in the hierarchy, "
"towards the root. If nothing was found, the default theme is used. This "
"system allows for flexible overriding of themes in complex user interfaces."
msgstr ""
"Un thème peut être appliqué à n'importe quel control de la scène. Par "
"conséquent, tous les controls enfants et petits-enfants utiliseront "
"également ce même thème (à moins qu'un autre thème ne soit spécifié plus bas "
"dans l'arbre). Si une valeur n'est pas trouvée dans un thème, elle sera "
"recherchée dans les thèmes plus haut dans la hiérarchie, vers la racine. Si "
"rien n'a été trouvé, le thème par défaut est utilisé. Ce système permet une "
"superposition flexible de thèmes dans des interfaces utilisateur complexes."

#: ../../docs/tutorials/gui/gui_skinning.rst:48
msgid ""
"Don't use the custom theme option in the Project Settings, as there are "
"known bugs with theme propagation. Instead, apply your theme to the root "
"Control node's Theme property. It will propagate to instanced scenes "
"automatically. To get correct theming in the editor for instanced scenes, "
"you can apply the theme resource to the instanced scene's root node as well."
msgstr ""
"N'utilisez pas l'option de thème personnalisé dans les paramètres du projet, "
"car il existe des bogues connus de propagation des thèmes. Appliquez plutôt "
"votre thème à la propriété Theme du nœud de contrôle racine. Il se propagera "
"automatiquement aux scènes instanciées. Pour obtenir une thématisation "
"correcte dans l'éditeur pour les scènes instanciées, vous pouvez également "
"appliquer la ressource de thème au nœud racine de la scèneinstanciée."

#: ../../docs/tutorials/gui/gui_skinning.rst:55
msgid "Theme options"
msgstr "Options de thèmes"

#: ../../docs/tutorials/gui/gui_skinning.rst:57
msgid "Each kind of option in a theme can be:"
msgstr "Chaque type d'option dans un thème peut être :"

#: ../../docs/tutorials/gui/gui_skinning.rst:59
msgid ""
"**An integer constant**: A single numerical constant. Generally used to "
"define spacing between components or alignment."
msgstr ""
"**Une constante entière** : Une seule constante numérique. Généralement "
"utilisé pour définir l'espacement entre les composants ou l'alignement."

#: ../../docs/tutorials/gui/gui_skinning.rst:61
msgid ""
"**A Color**: A single color, with or without transparency. Colors are "
"usually applied to fonts and icons."
msgstr ""
"**Une Couleur** : Une seule couleur, avec ou sans transparence. Les couleurs "
"sont généralement appliquées aux polices et aux icônes."

#: ../../docs/tutorials/gui/gui_skinning.rst:63
msgid ""
"**A Texture**: A single image. Textures are not often used, but when they "
"are, they represent handles to pick or icons in a complex control (such as a "
"file dialog)."
msgstr ""
"**Une texture** : Une seule image. Les textures ne sont pas souvent "
"utilisées, mais lorsqu'elles le sont, elles représentent des poignées à "
"sélectionner ou des icônes dans un contrôle complexe (comme une boîte de "
"dialogue de fichier)."

#: ../../docs/tutorials/gui/gui_skinning.rst:66
msgid ""
"**A Font**: Every control that uses text can be assigned the fonts used to "
"draw strings."
msgstr ""
"**Une Police** : Chaque control qui utilise du texte peut se voir attribuer "
"les polices utilisées pour dessiner les chaînes de caractères."

#: ../../docs/tutorials/gui/gui_skinning.rst:68
msgid ""
"**A StyleBox**: Stylebox is a resource that defines how to draw a panel in "
"varying sizes (more information on them later)."
msgstr ""
"**Un StyleBox** : Stylebox est une ressource qui définit comment dessiner un "
"panneau de différentes tailles (plus d'informations à ce sujet plus tard)."

#: ../../docs/tutorials/gui/gui_skinning.rst:71
msgid "Every option is associated with:"
msgstr "Chaque option est associée à :"

#: ../../docs/tutorials/gui/gui_skinning.rst:73
msgid "A name (the name of the option)"
msgstr "Un nom (le nom de l'option)"

#: ../../docs/tutorials/gui/gui_skinning.rst:74
msgid "A Control (the name of the control)"
msgstr "Un Control (le nom du control)"

#: ../../docs/tutorials/gui/gui_skinning.rst:76
msgid "An example usage:"
msgstr "Un exemple d'utilisation :"

#: ../../docs/tutorials/gui/gui_skinning.rst:95
msgid ""
"In the example above, a new theme is created. The \"font_color\" option is "
"changed and then applied to a label. Therefore, the label's text (and all "
"children and grandchildren labels) will be red."
msgstr ""
"Dans l'exemple ci-dessus, un nouveau thème est créé. L'option \"font_color\" "
"est modifiée puis appliquée à un label. Par conséquent, le label (et touts "
"les labels enfants et petits-enfants) utilisera cette couleur."

#: ../../docs/tutorials/gui/gui_skinning.rst:99
msgid ""
"It is possible to override those options without using the theme directly, "
"and only for a specific control, by using the override API in :ref:`Control."
"add_color_override() <class_Control_method_add_color_override>`:"
msgstr ""
"Il est possible de surcharger ces options sans utiliser directement le "
"thème, et seulement pour un control spécifique, en utilisant l'API de "
"surchargement dans :ref:`Control.add_color_override() "
"<class_Control_method_add_color_override>` :"

#: ../../docs/tutorials/gui/gui_skinning.rst:114
msgid ""
"In the inline help of Godot (in the Script tab), you can check which theme "
"options are overridable, or check the :ref:`Control <class_Control>` class "
"reference."
msgstr ""
"Dans l'aide en ligne de Godot (dans l'onglet script), vous pouvez vérifier "
"quelles options du thème sont surchargeables, ou vérifier la référence de la "
"classe :ref:`Control <class_Control>`."

#: ../../docs/tutorials/gui/gui_skinning.rst:118
msgid "Customizing a control"
msgstr "Personnalisation d'un contrôle"

#: ../../docs/tutorials/gui/gui_skinning.rst:120
msgid ""
"If only a few controls need to be skinned, it is often not necessary to "
"create a new theme. Controls offer their theme options as special kinds of "
"properties. If checked, overriding will take place:"
msgstr ""
"Si seuls quelques contrôles doivent être personnalisés, il n'est souvent pas "
"nécessaire de créer un nouveau thème. Les contrôles offrent leurs propres "
"options de thème sous forme propriétés d'un type spécial. Lorsqu'elles sont "
"cochées, le remplacement aura lieu :"

#: ../../docs/tutorials/gui/gui_skinning.rst:126
msgid ""
"As can be seen in the image above, theme options have little check boxes. If "
"checked, they can be used to override the value of the theme just for that "
"control."
msgstr ""
"Comme on peut le voir dans l'image ci-dessus, les options du thème ont de "
"petites cases à cocher. Si elles sont cochées, elles peuvent être utilisées "
"pour remplacer la valeur du thème juste pour ce control."

#: ../../docs/tutorials/gui/gui_skinning.rst:131
msgid "Creating a theme"
msgstr "Création d'un thème"

#: ../../docs/tutorials/gui/gui_skinning.rst:133
msgid ""
"The simplest way to create a theme is to edit a theme resource. Create a "
"Theme from the resource menu; the editor will appear immediately. After "
"that, save it (for example, with the name mytheme.theme):"
msgstr ""
"La façon la plus simple de créer un thème est d'éditer une ressource thème. "
"Créez un Theme à partir du menu des ressources ; l'éditeur apparaîtra "
"immédiatement. Après cela, enregistrez-le (par exemple, avec le nom mytheme."
"theme) :"

#: ../../docs/tutorials/gui/gui_skinning.rst:139
msgid ""
"This will create an empty theme that can later be loaded and assigned to "
"controls."
msgstr ""
"Cela créera un thème vide qui pourra être chargé et assigné aux controls par "
"la suite."

#: ../../docs/tutorials/gui/gui_skinning.rst:143
msgid "Example: theming a button"
msgstr "Exemple : thème d'un bouton"

#: ../../docs/tutorials/gui/gui_skinning.rst:145
msgid ""
"Download these assets (:download:`skin_assets.zip <files/skin_assets.zip>`) "
"and add them to your project. Open the theme editor, click on \"Edit Theme\" "
"and select \"Add Class Items\":"
msgstr ""
"Téléchargez ces assets (:download:`skin_assets.zip <files/skin_assets.zip>`) "
"et ajoutez les à votre projet. Ouvrez l'éditeur de thème, cliquez sur "
"\"Modifier le thème\" (\"Edit Theme\" en anglais) et sélectionnez \"Ajouter "
"des objets de classe\" (\"Add Class Items\") :"

#: ../../docs/tutorials/gui/gui_skinning.rst:151
msgid ""
"A menu will appear prompting the type of control to create. Select \"Button"
"\":"
msgstr ""
"Un menu apparaîtra alors vous demendant le type de contrôle à créer. "
"Sélectionnez \"Bouton\" (\"Button\") :"

#: ../../docs/tutorials/gui/gui_skinning.rst:156
msgid ""
"Immediately, all button theme options will appear in the property editor, "
"where they can be edited:"
msgstr ""
"Immédiatement, toutes les options de thème du bouton apparaissent dans "
"l'éditeur de propriétés, où elles peuvent être éditées :"

#: ../../docs/tutorials/gui/gui_skinning.rst:161
msgid ""
"From ``Styles``, open the \"Normal\" drop-down menu next to where it "
"probably says \"null\" and create a \"New StyleBoxTexture\", then edit it. A "
"texture stylebox contains a texture and the size of the margins that will "
"not stretch when the texture is stretched. This is called nine-patch or "
"\"3x3\" stretching:"
msgstr ""
"A partir de ``Styles``, ouvrez le menu déroulant \"Normal\" à côté de "
"l'endroit où il est probablement écrit \"null\" et créez un \"New "
"StyleBoxTexture\", puis éditez-le. Une stylebox de texture contient "
"essentiellement une texture et la taille des marges qui ne s'étireront pas "
"lorsque la texture est étirée. Cela s'appelle nine-patch ou étirement "
"\"3x3\" :"

#: ../../docs/tutorials/gui/gui_skinning.rst:169
msgid ""
"Repeat the steps and add the other assets. There is no hover or disabled "
"image in the example files, so use the same stylebox as in normal. Set the "
"supplied font as the button font and change the font color to black. Soon, "
"your button will look different and retro:"
msgstr ""
"Répétez les étapes et ajoutez les autres assets. Il n'y a pas de survol ou "
"d'image désactivée dans les fichiers d'exemple, donc utilisez la même "
"stylebox que dans la version normale. Définissez la police fournie comme "
"police de bouton et changez la couleur de la police en noir. Bientôt, votre "
"bouton aura un aspect différent et rétro :"

#: ../../docs/tutorials/gui/gui_skinning.rst:176
msgid ""
"Save this theme to the .theme file. Go to the 2D editor and create a few "
"buttons:"
msgstr ""
"Enregistrez ce thème dans le fichier .theme. Allez dans l'éditeur 2D et "
"créez quelques boutons :"

#: ../../docs/tutorials/gui/gui_skinning.rst:181
msgid ""
"Now, go to the root node of the scene and locate the \"theme\" property, "
"replace it with the theme that was just created. It should look like this:"
msgstr ""
"Maintenant, allez au nœud racine de la scène et localisez la propriété "
"\"theme\", remplacez-la par le thème qui vient d'être créé. Ça devrait "
"ressembler à cela :"

#: ../../docs/tutorials/gui/gui_skinning.rst:186
msgid "Congratulations! You have created a reusable GUI Theme!"
msgstr "Félicitations ! Vous avez créé un thème GUI réutilisable !"
