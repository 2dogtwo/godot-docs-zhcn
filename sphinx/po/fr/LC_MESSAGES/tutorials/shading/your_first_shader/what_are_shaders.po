# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-19 11:09+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:4
msgid "What are shaders?"
msgstr "Que sont les shaders ?"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:7
msgid "Introduction"
msgstr "Introduction"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:9
msgid ""
"So, you have decided to give shaders a try. You have likely heard that they "
"can be used to create interesting effects that run incredibly fast. You have "
"also likely heard that they are terrifying. Both are true."
msgstr ""
"Donc, vous avez décidé d'essayer de créer des shaders. Vous avez "
"probablement entendu qu'ils peuvent être utilisés pour créer des effets "
"intéressants qui s’exécutent incroyablement vite. Vous avez aussi "
"probablement entendu dire qu'ils sont terrifiants. Les deux sont vrais."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:13
msgid ""
"Shaders can be used to create a wide range of effects (in fact everything "
"drawn in a modern rendering engine is done with shaders)."
msgstr ""
"Les shaders peuvent être utilisés pour créer une large gamme d'effets (en "
"fait, tout ce qui est affiché dans un moteur de rendu moderne est fait avec "
"des shaders)."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:16
msgid ""
"Writing shaders can also be very difficult for people unfamiliar with them. "
"Godot tries to make writing shaders a little easier by exposing many useful "
"built-in features and handling some of the lower-level initialization work "
"for you. However, GLSL (the OpenGL Shading Language, which Godot uses) is "
"still unintuitive and restricting, especially for users who are used to "
"GDScript."
msgstr ""
"Écrire des shaders peut être très difficile pour des personnes peu "
"familières avec eux. Godot essaie de rendre l'écriture de shaders un peu "
"plus facile en proposant de nombreuses fonctionnalités intégrées et en "
"s'occupant d'une partie du travail d'initialisation de bas niveau pour vous. "
"Cependant, le GLSL (le langage de shader OpenGL, que Godot utilise) reste "
"peu intuitif et restrictif, en particulier pour les utilisateurs habitués au "
"GDScript."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:22
msgid "But what are they?"
msgstr "Mais qu'est-ce que c'est ?"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:24
msgid ""
"Shaders are a special kind of program that runs on Graphics Processing Units "
"(GPUs). Most computers have some sort of GPU, either one integrated into "
"their CPU or discrete (meaning it is a separate hardware component, for "
"example, the typical graphics card). GPUs are especially useful for "
"rendering because they are optimized for running thousands of instructions "
"in parallel."
msgstr ""
"Les shaders sont un type de programme spécial qui s’exécutent par les "
"processeurs graphiques (GPU - Graphics Processing Units). La plupart des "
"ordinateurs ont un GPU, qu'il soit intégré dans leur CPU ou discret (ce qui "
"signifie qu'il est un composant matériel distinct, comme par exemple la "
"carte graphique). Les GPUs sont particulièrement utiles pour le rendu car "
"ils sont optimisés pour exécuter des milliers d'instructions en parallèle."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:29
msgid ""
"The output of the shader is typically the colored pixels of the object drawn "
"to the viewport. But some shaders allow for specialized outputs (this is "
"especially true for APIs like Vulkan). Shaders operate inside the shader "
"pipeline. The standard process is the vertex -> fragment shader pipeline. "
"The vertex shader is used to decided where each vertex (point in a 3D model, "
"or corner of a Sprite) goes and the fragment shader decides what color "
"individual pixels receive."
msgstr ""
"La sortie du shader est généralement les pixels colorés de l'objet dessinés "
"dans la fenêtre d'affichage. Mais certains shaders permettent des sorties "
"spécialisées (ce qui est particulièrement vrai pour les API comme Vulkan). "
"Les shaders opèrent à l'intérieur du pipeline de shaders. Le processus "
"standard est le pipeline vertex -> fragment. Le shader vertex est utilisé "
"pour décider où chaque vertex (point dans un modèle 3D, ou coin d'un Sprite) "
"va et le shader de fragment décide quelle couleur les pixels individuels "
"reçoivent."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:35
msgid ""
"Suppose you want to update all the pixels in a texture to a given color, on "
"the CPU you would write:"
msgstr ""
"Supposons que vous vouliez changer tous les pixels d’une texture en une "
"couleur donnée, dans le CPU vous écririez :"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:43
msgid ""
"In a shader you are given access only to the inside of the loop so what you "
"write looks like this:"
msgstr ""
"Dans un shader, vous n’avez accès qu’à l’intérieur de la boucle, donc ce que "
"vous écrivez ressemble à cela :"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:52
msgid ""
"You have no control over how this function is called. So you have to design "
"your shaders differently from how you would design programs on the CPU."
msgstr ""
"Vous n'avez aucun contrôle sur la manière dont cette fonction est appelée. "
"Vous devez donc concevoir vos shaders différemment de vos programmes pour le "
"CPU."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:55
msgid ""
"A consequence of the shader pipeline is that you cannot access the results "
"from a previous run of the shader, you cannot access other pixels from the "
"pixel being drawn, and you cannot write outside of the current pixel being "
"drawn. This enables the GPU to execute the shader for different pixels in "
"parallel, as they do not depend on each other. This lack of flexibility is "
"designed to work with the GPU which allows shaders to be incredibly fast."
msgstr ""
"Une conséquence du pipeline des shader est que vous ne pouvez pas accéder au "
"résultats des exécutions précédentes du shader, vous ne pouvez pas accéder à "
"d'autres pixels que celui qui est en train d'être dessiné et vous ne pouvez "
"pas écrire en dehors de ce pixel. Cela permet au GPU d’exécuter le shader "
"pour différents pixels en parallèle, étant donné qu'ils ne dépendent pas les "
"uns des autres. Ce manque de flexibilité est conçu pour fonctionner avec le "
"GPU qui permet aux shaders d'être incroyablement rapide."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:62
msgid "What can they do"
msgstr "Ce qu'ils peuvent faire"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:64
msgid "position vertices very fast"
msgstr "positionner les sommets très rapidement"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:65
msgid "compute color very fast"
msgstr "calculer les couleurs très rapidement"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:66
msgid "compute lighting very fast"
msgstr "calculer l'éclairage très rapidement"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:67
msgid "lots and lots of math"
msgstr "beaucoup, beaucoup de maths"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:70
msgid "What can't they do"
msgstr "Ce qu'ils ne peuvent pas faire"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:72
msgid "draw outside mesh"
msgstr "dessiner en dehors des maillages"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:73
msgid "access other pixels from current pixel (or vertices)"
msgstr "accéder aux pixels autres que le pixel courant (ou sommets)"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:74
msgid "store previous iterations"
msgstr "stocker les itérations précédentes"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:75
msgid "update on the fly (they can, but they need to be compiled)"
msgstr ""
"mise à jour à la volée (ils peuvent l'être, mais doivent être compilés)"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:78
msgid "Structure of a shader"
msgstr "Structure d'un shader"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:80
msgid ""
"In Godot, shaders are made up of 3 main functions: the ``vertex()`` "
"function, the ``fragment()`` function and the ``light()`` function."
msgstr ""
"Dans Godot, les shaders sont fait de trois fonctions principales : La "
"fonction ``vertex()``, la fonction ``fragment()`` et la fonction ``light()``."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:83
msgid ""
"The ``vertex()`` function runs over all the vertices in the mesh and sets "
"their positions as well as some other per-vertex variables."
msgstr ""
"La fonction ``vertex()`` s'exécute pour tous les sommets du mesh et définit "
"leur position ainsi que quelques autres variables des sommets."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:86
msgid ""
"The ``fragment()`` function runs for every pixel that is covered by the "
"mesh. It uses the variables from the ``vertex()`` function to run. The "
"variables from the ``vertex()`` function are interpolated between the "
"vertices to provide the values for the ``fragment()`` function."
msgstr ""
"La fonction ``fragment()`` s'exécute pour tous les pixels couverts par le "
"mesh. Elle utilise les variables provenant de la fonction ``vertex()``. Les "
"variables de la fonction ``vertex()`` sont interpolées entre les sommets "
"pour fournir les valeurs pour la fonction ``fragment()``."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:90
msgid ""
"The ``light()`` function runs for every pixel and for every light. It takes "
"variables from the ``fragment()`` function and from previous runs of itself."
msgstr ""
"La fonction ``light()`` s'exécute pour chaque pixel et chaque lumière. Elle "
"prends des variables de la fonction ``fragment()`` et de ses exécutions "
"précédentes."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:93
msgid ""
"For more information about how shaders operate specifically in Godot, see "
"the :ref:`Shaders <doc_shaders>` doc."
msgstr ""
"Pour plus d'informations sur comment les shaders fonctionnent dans Godot "
"spécifiquement, regardez la :ref:`Shaders <doc_shaders>` doc."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:97
msgid ""
"The ``light()`` function won't be run if the ``vertex_lighting`` render mode "
"is enabled, or if **Rendering > Quality > Shading > Force Vertex Shading** "
"is enabled in the Project Settings. (It's enabled by default on mobile "
"platforms.)"
msgstr ""
"La fonction ``light()`` ne sera pas exécutée si le mode de rendu "
"``vertex_lighting`` est activé, ou si **Rendering > Quality > Shading > "
"Force Vertex Shading** est activé dans les paramètres du projet. (C'est "
"activée par défaut sur les plateformes mobiles.)"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:103
msgid "Technical overview"
msgstr "Aperçu technique"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:105
msgid ""
"GPUs are able to render graphics much faster than CPUs for a few reasons, "
"but most notably, because they are able to run calculations massively in "
"parallel. A CPU typically has 4 or 8 cores while a GPU typically has "
"thousands. That means a GPU can do hundreds of tasks at once. GPU architects "
"have exploited this in a way that allows for doing many calculations very "
"quickly, but only when many or all cores are doing the same calculation at "
"once, but with different data."
msgstr ""
"Les GPUs sont capables de rendre des éléments graphiques beaucoup plus "
"rapidement que les CPUs pour diverses raisons, mais surtout parce qu'ils "
"sont capables d'exécuter massivement des calculs en parallèle. Un CPU "
"possède généralement 4 ou 8 cœurs, tandis qu'un GPU en possède généralement "
"des milliers. Cela signifie qu'un GPU peut effectuer des centaines de tâches "
"à la fois. Les concepteurs de GPU ont exploité cette possibilité de manière "
"à pouvoir effectuer de nombreux calculs très rapidement, mais uniquement "
"lorsque plusieurs ou tous les cœurs effectuent le même calcul en même temps, "
"avec des données différentes."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:111
msgid ""
"That is where shaders come in. The GPU will call the shader a bunch of times "
"simultaneously, and then operate on different bits of data (vertices, or "
"pixels). These bunches of data are often called wavefronts. A shader will "
"run the same for every thread in the wavefront. For example, if a given GPU "
"can handle 100 threads per wavefront, a wavefront will run on a 10×10 block "
"of pixels together. It will continue to run for all pixels in that wavefront "
"until they are complete. Accordingly, if you have one pixel slower than the "
"rest (due to excessive branching), the entire block will be slowed down, "
"resulting in massively slower render times."
msgstr ""
"C'est là que les shaders entrent en jeu. Le GPU va appeler le shader "
"plusieurs fois simultanément, puis traiter différents bits de données "
"(sommets, ou pixels). Ces paquets de données sont souvent appelés "
"wavefronts. Un shader fonctionnera de la même manière pour chaque thread du "
"wavefront. Par exemple, si un GPU donné peut gérer 100 threads par "
"wavefront, un wavefront fonctionnera sur un bloc de 10x10 pixels à la fois. "
"Et il continuera à fonctionner pour tous les pixels de ce wavefront jusqu'à "
"ce qu'ils soient achevés. Par conséquent, si vous avez un pixel plus lent "
"que les autres (en raison d'une ramification excessive), l'ensemble du bloc "
"sera ralenti, ce qui se traduira par des temps de rendu massivement plus "
"lents."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:119
msgid ""
"This is different from CPU-based operations. On a CPU, if you can speed up "
"even one pixel, the entire rendering time will decrease. On a GPU, you have "
"to speed up the entire wavefront to speed up rendering."
msgstr ""
"Cela diffère des opérations basées sur le CPU. Sur un CPU, si vous pouvez "
"accélérer ne serait-ce qu'un seul pixel, le temps de rendu entier diminuera. "
"Sur un GPU, vous devez accélérer l'ensemble du wavefront pour accélérer le "
"rendu."
