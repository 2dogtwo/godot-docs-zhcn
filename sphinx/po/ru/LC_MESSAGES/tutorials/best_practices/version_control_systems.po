# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 18:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Version control systems"
msgstr "Система Контроля Версий"

msgid "Introduction"
msgstr "Введение"

msgid ""
"Godot aims to be VCS-friendly and generate mostly readable and mergeable "
"files."
msgstr ""

#, fuzzy
msgid "Version control plugins"
msgstr "Система Контроля Версий"

#, fuzzy
msgid ""
"Godot also supports the use of version control systems in the editor itself. "
"However, version control in the editor requires a plugin for the specific "
"VCS you're using."
msgstr ""
"Godot стремиться быть совместимым с VCS и генерировать удобночитаемые и "
"легко сливаемые файлы. Godot также поддерживает использование систем "
"контроля версий прямо из редактора. Но, поддержка конкретного VCS, который "
"вы используете, требует конкретного плагина. VCS может быть задан или убран "
"в редакторе в **Проект > Управление Версиями**."

msgid ""
"As of July 2023, there is only a Git plugin available, but the community may "
"create additional VCS plugins."
msgstr ""

msgid "Official Git plugin"
msgstr "Официальный плагин для Git"

msgid ""
"As of July 2023, the Git plugin hasn't been updated to work with Godot 4.1 "
"and later yet."
msgstr ""

#, fuzzy
msgid ""
"Using Git from inside the editor is supported with an official plugin. You "
"can find the latest releases on `GitHub <https://github.com/godotengine/"
"godot-git-plugin/releases>`__."
msgstr ""
"Использование Git внутри редактора поддерживается официальным плагином. Вы "
"можете найти последние релизы `здесь <https://github.com/godotengine/godot-"
"git-plugin/releases>`__ (он недоступен в библиотеке активов). Документацию "
"по использованию плагина Git можно найти `здесь <https://github.com/"
"godotengine/godot-git-plugin/wiki>`__."

#, fuzzy
msgid ""
"Documentation on how to use the Git plugin can be found on its `wiki "
"<https://github.com/godotengine/godot-git-plugin/wiki>`__."
msgstr ""
"Если вы собираетесь участвовать в работе над документацией, её репозиторий "
"можно найти `здесь <https://github.com/godotengine/godot-docs>`_"

msgid "Files to exclude from VCS"
msgstr "Файлы, исключаемые из VCS"

msgid ""
"This lists files and folders that should be ignored from version control in "
"Godot 4.1 and later."
msgstr ""

msgid ""
"The list of files of folders that should be ignored from version control in "
"Godot 3.x and Godot 4.0 is **entirely** different. This is important, as "
"Godot 3.x and 4.0 may store sensitive credentials in ``export_presets.cfg`` "
"(unlike Godot 4.1 and later)."
msgstr ""

msgid ""
"If you are using Godot 3, check the ``3.5`` version of this documentation "
"page instead."
msgstr ""

msgid ""
"There are some files and folders Godot automatically creates when opening a "
"project in the editor for the first time. To avoid bloating your version "
"control repository with generated data, you should add them to your VCS "
"ignore:"
msgstr ""

msgid "``.godot/``: This folder stores various project cache data."
msgstr ""

#, fuzzy
msgid ""
"``*.translation``: These files are binary imported :ref:`translations "
"<doc_internationalizing_games>` generated from CSV files."
msgstr ""
"``*.translation``: эти файлы представляют собой двоичные импортированные "
"переводы, сгенерированные из CSV-файлов."

msgid ""
"You can make the Godot project manager generate version control metadata for "
"you automatically when creating a project. When choosing the **Git** option, "
"this creates ``.gitignore`` and ``.gitattributes`` files in the project root:"
msgstr ""

msgid ""
"Creating version control metadata in the project manager's New Project dialog"
msgstr ""

msgid ""
"Creating version control metadata in the project manager's **New Project** "
"dialog"
msgstr ""

msgid ""
"In existing projects, select the **Project** menu at the top of the editor, "
"then choose **Version Control > Generate Version Control Metadata**. This "
"creates the same files as if the operation was performed in the project "
"manager."
msgstr ""

msgid "Working with Git on Windows"
msgstr "Работает с Git на Windows"

#, fuzzy
msgid ""
"Most Git for Windows clients are configured with the ``core.autocrlf`` set "
"to ``true``. This can lead to files unnecessarily being marked as modified "
"by Git due to their line endings being converted from LF to CRLF "
"automatically."
msgstr ""
"Настройка большинства Git-приложений не обходится без параметра ``core."
"autocrlf`` со значением ``true``. Это может привести к излишней статусной "
"маркировке — modified, из-за автоматического преобразования окончания строк. "
"Лучше всего изменить это значение на::"

msgid "It is better to set this option as:"
msgstr ""

msgid ""
"Creating version control metadata using the project manager or editor will "
"automatically enforce LF line endings using the ``.gitattributes`` file. In "
"this case, you don't need to change your Git configuration."
msgstr ""

msgid "Translation status"
msgstr "Translation status (статус перевода)"
