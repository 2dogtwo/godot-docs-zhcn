# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-22 14:46+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:4
msgid "C# basics"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:7
msgid "Introduction"
msgstr "Введение"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:9
msgid ""
"C# support is a new feature available since Godot 3.0. As such, you may "
"still run into some issues, or find spots where the documentation could be "
"improved. Please report issues with C# in Godot on the `engine GitHub page "
"<https://github.com/godotengine/godot/issues>`_, and any documentation "
"issues on the `documentation GitHub page <https://github.com/godotengine/"
"godot-docs/issues>`_."
msgstr ""
"Поддержка C# была введена в Godot 3.0. Из-за новизны, вы можете столкнуться "
"с какими-то проблемами, или найти места где документация может быть "
"улучшена. Пожалуйста сообщайте о проблемах с C# в Godot на `странице движка "
"на GitHub  <https://github.com/godotengine/godot/issues>`_, а о проблемах с "
"документацией на `странице GitHub документации <https://github.com/"
"godotengine/godot-docs/issues>`_."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:17
msgid ""
"This page provides a brief introduction to C#, both what it is and how to "
"use it in Godot. Afterwards, you may want to look at :ref:`how to use "
"specific features <doc_c_sharp_features>`, read about the :ref:`differences "
"between the C# and the GDScript API <doc_c_sharp_differences>` and (re)visit "
"the :ref:`Scripting section <doc_scripting>` of the step-by-step tutorial."
msgstr ""
"Эта страница предоставляет краткое введение в C#, о том что это и как "
"использовать его в Godot. После, вас может заинтересовать чтение о том :ref:"
"`как использовать особые возможности <doc_c_sharp_features>`, о :ref:"
"`различиях между C# и GDScript API <doc_c_sharp_differences>` и "
"(пере)посещение :ref:`Секции скриптинга <doc_scripting>` для пошагового "
"руководства."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:24
#, fuzzy
msgid ""
"C# is a high-level programming language developed by Microsoft. In Godot, it "
"is implemented with the Mono 6.x .NET framework, including full support for "
"C# 8.0. Mono is an open source implementation of Microsoft's .NET Framework "
"based on the ECMA standards for C# and the Common Language Runtime. A good "
"starting point for checking its capabilities is the `Compatibility <http://"
"www.mono-project.com/docs/about-mono/compatibility/>`_ page in the Mono "
"documentation."
msgstr ""
"C# это высоко-уровневый язык программирования разработанный Microsoft. В "
"Godot, он применён с использованием фреймворка Mono 5.x .NET, включающий "
"поддержку C# 7.0. Mono - это реализация Microsoft .NET Framework с открытым "
"исходным кодом, базирующаяся на стандартах ECMA для C# и Common Language "
"Runtime(CLR). Для  изучения его возможностей смотрите страницу "
"`Совместимость <http://www.mono-project.com/docs/about-mono/compatibility/"
">`_ в документации Mono."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:32
msgid ""
"This is **not** a full-scale tutorial on the C# language as a whole. If you "
"aren't already familiar with its syntax or features, see the `Microsoft C# "
"guide <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ or look for a "
"suitable introduction elsewhere."
msgstr ""
"Это **не** полномасштабное руководство по целому языку C#. Если вы не "
"знакомы с его синтаксисом или возможностями, посмотрите `Microsoft C# "
"руководство <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ или "
"поищите подходящее введение где-нибудь ещё."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:39
msgid "Setting up C# for Godot"
msgstr "Настройка C# для Godot"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:42
#, fuzzy
msgid "Windows (Visual Studio)"
msgstr "Visual Studio Code"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:44
#, fuzzy
msgid ""
"Download and install the latest version of `Visual Studio <https://"
"visualstudio.microsoft.com/downloads/>`_ (*not* Visual Studio Code), which "
"contains utilities required to use C# in Godot. If you don't plan on using "
"the Visual Studio IDE, you can download just the `Visual Studio Build Tools "
"<https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?"
"sku=BuildTools&rel=15>`_ instead. Make sure you at least have the .NET "
"Framework 4.5 targeting pack installed, you can get it using any of the "
"installers mentioned above inside the \"Individual components\" tab."
msgstr ""
"Загрузите и установите последнюю версию `Visual Studio <https://visualstudio."
"microsoft.com/downloads/>`_ (*не* Visual Studio Code), которая содержит "
"утилиты необходимые для использования C# в Godot. Если вы не планируете "
"использовать Visual Studio IDE, то вы вместо этого вы можете скачать только "
"`Visual Studio Build Tools <https://visualstudio.microsoft.com/thank-you-"
"downloading-visual-studio/?sku=BuildTools&rel=15>`_."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:54
#, fuzzy
msgid "Windows (JetBrains Rider)"
msgstr "JetBrains rider"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:56
msgid ""
"JetBrains Rider comes with bundled MSBuild, so nothing extra is required. "
"Make sure to set the following preferences:"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:59
#, fuzzy
msgid "In Godot:"
msgstr "В Godot 3.1:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:61
msgid "Mono External Editor to JetBrains Rider"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:62
msgid "Mono Build Tool to JetBrains Mono."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:64
msgid "In Rider:"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:66
msgid "Set ``MSBuild version`` to either bundled with Rider or .NET Core."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:67
msgid "Install **Godot support** plugin."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:70
msgid "macOS and Linux"
msgstr "macOS и Linux"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:72
msgid ""
"Download and install the latest version of the `Mono SDK <http://www.mono-"
"project.com/download/>`_. As of Godot 3.1 beta 3, the version number doesn't "
"matter since Godot bundles its own Mono 5.18 installation. We only need the "
"Mono installation for NuGet and MSBuild which are required to use C# in "
"Godot."
msgstr ""
"Загрузите и установите последнюю версию `Mono SDK <http://www.mono-project."
"com/download/>`_. Начиная с Godot 3.1 beta 3, номер версии не играет роли, "
"так как Godot поставляется с собственной сборкой Mono 5.18. Нам нужна Mono "
"установка для NuGet и MSBuild которые нужны для использования C# в Godot."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:78
msgid ""
"To download Mono on macOS, use the \"Stable Channel\" link from the `Mono "
"Downloads Page <http://www.mono-project.com/download/>`_. The Visual Studio "
"channel is an earlier version of Mono and will not work."
msgstr ""
"Для загрузки Mono на macOS, используйте ссылку на \"Stable Channel\" из "
"`Страницы Загрузок Mono <http://www.mono-project.com/download/>`_. Канал "
"Visual Studio это ранняя версия Mono которая не будет работать."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:84
msgid "Additional notes"
msgstr "Дополнительные заметки"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:86
msgid ""
"Your Godot version must have Mono support enabled, so make sure to download "
"the **Mono version** of Godot. If you are building Godot from source, make "
"sure to follow the steps to enable Mono support in your build as outlined in "
"the :ref:`doc_compiling_with_mono` page."
msgstr ""
"Ваша версия Godot должна иметь включенную поддержку Mono, так что убедитесь "
"что скачали именно **Mono версию** Godot. Если вы собираете Godot из "
"исходников, убедитесь что вы \n"
"следовали инструкции по включению Mono в вашу сборку как описано на "
"странице :ref:`doc_compiling_with_mono`."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:92
msgid ""
"In summary, you must have installed Visual Studio or Mono (depending on your "
"operating system) **and** the Mono-enabled version of Godot."
msgstr ""
"В итоге, вы должны иметь установленную Visual Studio или Mono (в зависимости "
"от вашей операционной системы) **и** Mono-ориентированную версию Godot."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:96
msgid "Configuring an external editor"
msgstr "Настройка внешнего редактора"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:98
#, fuzzy
msgid ""
"C# support in Godot's script editor is minimal. Consider using an external "
"IDE or editor, such as  `Visual Studio Code <https://code.visualstudio.com/"
">`_ or MonoDevelop. These provide autocompletion, debugging, and other "
"useful features for C#. To select an external editor in Godot, click on "
"**Editor → Editor Settings** and scroll down to **Mono**. Under **Mono**, "
"click on **Editor**, and select your external editor of choice. Godot "
"currently supports the following external editors:"
msgstr ""
"В то время как Godot имеет собственный редактор скриптов, его поддержка C# "
"минимальна; вместо этого рекомендовано использовать отдельную IDE или "
"редактор, такой как `Visual Studio Code <https://code.visualstudio.com/>`_ "
"или MonoDevelop. Они поддерживают авто-завершение кода, отладку и другие "
"возможности полезные при разработке на C#. Для установки их в Godot, "
"кликните по **Editor → Editor Settings** и прокрутите вниз к настройкам "
"**Mono**. Под **Mono**, кликните по **Editor** и выберите внешний редактор "
"на выбор."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:107
#, fuzzy
msgid "Visual Studio 2019"
msgstr "Visual Studio Code"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:108
#, fuzzy
msgid "Visual Studio Code"
msgstr "Visual Studio Code"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:109
#, fuzzy
msgid "MonoDevelop"
msgstr "KDevelop"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:110
#, fuzzy
msgid "Visual Studio for Mac"
msgstr "Visual Studio Code"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:111
#, fuzzy
msgid "JetBrains Rider"
msgstr "JetBrains rider"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:113
msgid ""
"If you are using Visual Studio Code, ensure you download and install the `C# "
"extension <https://marketplace.visualstudio.com/items?itemName=ms-vscode."
"csharp>`_ to enable features like syntax highlighting and IntelliSense."
msgstr ""
"Если вы используете Visual Studio Code, убедитесь что загрузили и установили "
"`C# расширение <https://marketplace.visualstudio.com/items?itemName=ms-"
"vscode.csharp>`_ для включения подсветки синтаксиса и IntelliSense."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:118
#, fuzzy
msgid ""
"If you are using Visual Studio 2019, you must follow the instructions found "
"in the \"Configure VS2019 for Debugging\" section below."
msgstr ""
"Если вы используете Visual Studio 2019, вам необходимо следовать "
"инструкциям, приведенным в разделе «Настройка VS2019 для отладки» ниже."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:122
msgid "Creating a C# script"
msgstr "Создание C# скрипта"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:124
msgid ""
"After you successfully set up C# for Godot, you should see the following "
"option when selecting ``Attach script`` in the context menu of a node in "
"your scene:"
msgstr ""
"После успешной установки C# в Godot, вы должны увидеть следующую опцию при "
"выборе ``Прикрепить скрипт`` в контекстном меню ноды в вашей сцене:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:129
msgid ""
"Note that while some specifics change, most concepts work the same when "
"using C# for scripting. If you're new to Godot, you may want to follow the "
"tutorials on :ref:`doc_scripting` at this point. While some places in the "
"documentation still lack C# examples, most concepts can be transferred "
"easily from GDScript."
msgstr ""
"Заметьте что хотя некоторые особенности изменились, большинство остались "
"теми же во время использования C# для скриптинга. Если вы новичок в Godot, "
"вы возможно захотите поизучать руководства из :ref:`doc_scripting` на этом "
"месте. Тогда как в некоторых местах  документации ещё отсутствуют примеры "
"для C#, большинство концептов могут быть легко  перенесены из GDScript."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:136
msgid "Project setup and workflow"
msgstr "Настройка проекта и рабочего процесса"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:138
msgid ""
"When you create the first C# script, Godot initializes the C# project files "
"for your Godot project. This includes generating a C# solution (``.sln``) "
"and a project file (``.csproj``), as well as some utility files and folders "
"(``.mono`` and ``Properties/AssemblyInfo.cs``). All of these but ``.mono`` "
"are important and should be committed to your version control system. ``."
"mono`` can be safely added to the ignore list of your VCS. When "
"troubleshooting, it can sometimes help to delete the ``.mono`` folder and "
"let it regenerate."
msgstr ""
"Когда вы создали ваш первый скрипт C#, Godot инициализирует его проектными "
"файлами C# для вашего проекта. Это включает генерацию решения(solution) C# "
"(``.sln``) и проектного файла (``.csproj``), а также создаются ещё некоторые "
"файлы и папки (``.mono`` и ``Properties/AssemblyInfo.cs``). Все они (кроме "
"``.mono``) важны и должны быть включены в вашу систему контроля версий. ``."
"mono`` можно спокойно добавить в лист исключений вашего VCS. Когда вы ищите "
"проблему, иногда может помочь удаление папки ``.mono`` которая затем "
"самовосстановится."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:148
msgid "Example"
msgstr "Пример"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:150
msgid ""
"Here's a blank C# script with some comments to demonstrate how it works."
msgstr ""
"Это пустой C# скрипт с некоторыми комментариями, чтобы продемонстрировать, "
"как он работает."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:177
msgid ""
"As you can see, functions normally in global scope in GDScript like Godot's "
"``print`` function are available in the ``GD`` class which is part of the "
"``Godot`` namespace. For a list of methods in the ``GD`` class, see the "
"class reference pages for :ref:`@GDScript <class_@gdscript>` and :ref:"
"`@GlobalScope <class_@globalscope>`."
msgstr ""
"Как видите, функции, которые в GDScript имеют глобальную область видимости, "
"такие как функция ``print``, здесь доступны из класса ``GD``, который в свою "
"очередь является частью пространства имен ``Godot``. Вы можете ознакомиться "
"со списком методов класса ``GD`` на страницах справки класса :ref:`@GDScript "
"<class_@gdscript>` и :ref:`@GlobalScope <class_@globalscope>`."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:184
msgid ""
"Keep in mind that the class you wish to attach to your node should have the "
"same name as the ``.cs`` file. Otherwise, you will get the following error "
"and won't be able to run the scene: *\"Cannot find class XXX for script "
"res://XXX.cs\"*"
msgstr ""
"Помните, что класс, который вы хотите присоединить к вашему узлу, должен "
"иметь то же имя, что и файл `` .cs``. В противном случае вы получите "
"следующую ошибку и не сможете запустить сцену: * «Не удается найти класс XXX "
"для сценария res://XXX.cs» *"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:190
msgid "General differences between C# and GDScript"
msgstr "Основные различия между C# и GDScript"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:192
msgid ""
"The C# API uses ``PascalCase`` instead of ``snake_case`` in GDScript/C++. "
"Where possible, fields and getters/setters have been converted to "
"properties. In general, the C# Godot API strives to be as idiomatic as is "
"reasonably possible."
msgstr ""
"В языке C# всё API использует стиль записи ``PascalCase`` вместо "
"``snake_case``, принятого в GDScript/C++. Поля и getters/setters "
"представленны в виде свойств, там где это допустимо. В целом, Godot API на "
"C# стримится быть наиболее наглядным, насколько это возможно."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:196
#, fuzzy
msgid "For more information, see the :ref:`doc_c_sharp_differences` page."
msgstr ""
"Для получения дополнительной информации о самих событиях посмотрите "
"руководство :ref:`doc_inputevent`."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:199
msgid "Current gotchas and known issues"
msgstr "Текущие ограничения и известные проблемы"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:201
msgid ""
"As C# support is quite new in Godot, there are some growing pains and things "
"that need to be ironed out. Below is a list of the most important issues you "
"should be aware of when diving into C# in Godot, but if in doubt, also take "
"a look over the official `issue tracker for Mono issues <https://github.com/"
"godotengine/godot/labels/topic%3Amono>`_."
msgstr ""
"Поскольку поддержка C# введена относительно недавно, в ней всё ещё "
"присутствуют \"детские болячки\" и проблемы, которые необходимо устранить. "
"Ниже вы найдёте список наиболее важных проблем, о существовании которых вам "
"следовало бы знать, при использовании C# вместе с Godot. Если есть какие-то "
"сомнения, вы также можете заглянуть на `официальный трекер проблем/запросов "
"Mono <https://github.com/godotengine/godot/labels/topic%3Amono>`_."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:207
msgid ""
"Writing editor plugins is possible, but it is currently quite convoluted."
msgstr ""
"Написание плагинов для редактора возможно, но в настоящее время это довольно "
"затруднительно."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:208
msgid ""
"State is currently not saved and restored when hot-reloading, with the "
"exception of exported variables."
msgstr ""
"В данный момент, при выполнении горячей-перезагруки, состояние не "
"сохраняется и не восстанавливается, за исключением экспортируемых переменных."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:210
msgid ""
"Attached C# scripts should refer to a class that has a class name that "
"matches the file name."
msgstr ""
"Прикрепленные C# скрипты должны относиться к классу, который имеет имя "
"класса, соответствующее имени файла."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:212
msgid ""
"There are some methods such as ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` and signal connection method ``Connect()`` that rely on "
"Godot's ``snake_case`` API naming conventions. So when using e.g. "
"``CallDeferred(\"AddChild\")``, ``AddChild`` will not work because the API "
"is expecting the original ``snake_case`` version ``add_child``. However, you "
"can use any custom properties or methods without this limitation."
msgstr ""
"Есть некоторые методы, такие как `` Get () `` / `` Set () ``, `` Call () "
"`` / `` CallDeferred () `` и метод соединения сигналов `` Connect () ``, "
"которые полагаются на соглашениях именования API ``snake_case`` от Godot. "
"Так, например, при использовании `` CallDeferred (\"AddChild\") ``, `` "
"AddChild`` не будет работать, потому что API ожидает исходную `` "
"snake_case`` версию `` add_child``. Однако вы можете использовать любые "
"пользовательские свойства или методы без этого ограничения."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:220
#, fuzzy
msgid ""
"As of Godot 3.2.2, exporting Mono projects is supported for desktop "
"platforms (Linux, Windows and macOS), Android, HTML5, and iOS. The only "
"platform not supported yet is UWP."
msgstr ""
"Экспорт Mono проектов доступен только для настольных платформ (Linux, "
"Windows and macOS). Android, iOS, HTML5 и UWP в настоящий момент не "
"поддерживаются (`#20267 <https://github.com/godotengine/godot/"
"issues/20267>`_, `#20268 <https://github.com/godotengine/godot/"
"issues/20268>`_ `#20270 <https://github.com/godotengine/godot/"
"issues/20270>`_ `#20271 <https://github.com/godotengine/godot/"
"issues/20271>`_)."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:225
msgid "Performance of C# in Godot"
msgstr "Производительность C# в Godot"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:227
msgid ""
"According to some preliminary `benchmarks <https://github.com/cart/godot3-"
"bunnymark>`_, the performance of C# in Godot — while generally in the same "
"order of magnitude — is roughly **~4×** that of GDScript in some naive "
"cases. C++ is still a little faster; the specifics are going to vary "
"according to your use case. GDScript is likely fast enough for most general "
"scripting workloads. C# is faster, but requires some expensive marshalling "
"when talking to Godot."
msgstr ""
"Согласно некоторым предварительным`бенчмарк-тестам <https://github.com/cart/"
"godot3-bunnymark>`_, производительность C# в Godot — пусть и находится в "
"пределах одного порядка велечины — приблизительно **в ~4 раза** выше, чем в "
"GDScript в некоторых наивных случаях. В то же время, C++ до сих пор является "
"немного быстрее; специфика будет меняться, в зависимости от случаев "
"использования. И всё же, быстродействия GDScript, вероятно, вполне "
"достаточно для большинства основных скриптовых задач. Хоть C# и "
"производительнее, но требует выполнение достаточно ресурсоёмкого маршалинга, "
"когда речь заходит об использовании C# в Godot."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:235
msgid "Using NuGet packages in Godot"
msgstr "Использование пакетов NuGet в Godot"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:237
msgid ""
"`NuGet <https://www.nuget.org/>`_ packages can be installed and used with "
"Godot, as with any C# project. Many IDEs are able to add packages directly. "
"They can also be added manually by adding the package reference in the ``."
"csproj`` file located in the project root:"
msgstr ""
"`NuGet <https://www.nuget.org/>`_ пакеты могут быть установлены и "
"использованы вместе с Godot, как и в любом другом C# проекте. Множество IDE "
"способны добавлять пакеты напрямую. Если необходимо, вы можете добавить их "
"вручную, добавив ссылку на пакет в ``.csproj`` файл, который расположен в "
"корне проекта:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:254
msgid ""
"By default, tools like NuGet put ``Version`` as an attribute of the "
"```PackageReference``` Node. **You must manually create a Version node as "
"shown above.**  This is because the version of MSBuild used requires this. "
"(This will be fixed in Godot 4.0.)"
msgstr ""
"По умолчанию, утилиты вроде NuGet в качестве атрибута для "
"```PackageReference``` используют  ``Version``. **Вы должны создать узел "
"Version вручную как показано выше.**  Это требуется используемой версией "
"MSBuild. (Будет исправлено в Godot 4.0.)"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:256
#, fuzzy
msgid ""
"Whenever packages are added or modified, run ``nuget restore`` (*not* "
"``dotnet restore``) in the root of the project directory. To ensure that "
"NuGet packages will be available for msbuild to use, run:"
msgstr ""
"Всякий раз, когда пакеты были добавлены или модифицированы, следует "
"запусткать ``nuget restore``в корневой папке проекта. Чтобы убедиться, что "
"пакеты NuGet будут доступны в msbuild, выполните:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:265
msgid "Profiling your C# code"
msgstr "Профилирование вашего C# кода"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:267
#, fuzzy
msgid ""
"`Mono log profiler <https://www.mono-project.com/docs/debug+profile/profile/"
"profiler/>`_ is available for Linux and macOS. Due to a Mono change, it does "
"not work on Windows currently."
msgstr ""
"`Mono log profiler <https://www.mono-project.com/docs/debug+profile/profile/"
"profiler/>` _ доступен через `этот PR <https://github.com/godotengine/godot/"
"pull / 26513> `_."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:268
msgid ""
"External Mono profiler like `JetBrains dotTrace <https://www.jetbrains.com/"
"profiler/>`_ can be used as described `here <https://github.com/godotengine/"
"godot/pull/34382>`_."
msgstr ""
"Внешний моно-профилировщик, такой как `JetBrains dotTrace <https://www."
"jetbrains.com/profiler/>` _, можно использовать, как описано `здесь <https://"
"github.com/godotengine/godot/pull/34382>` _."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:271
msgid "Configuring VS 2019 for debugging"
msgstr "Настройка VS 2019 для отладки"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:275
msgid ""
"Godot has built-in support for workflows involving several popular C# IDEs. "
"Built-in support for Visual Studio will be including in future versions, but "
"in the meantime, the steps below can let you configure VS 2019 for use with "
"Godot C# projects."
msgstr ""
"Godot имеет встроенную поддержку рабочих процессов с участием нескольких "
"популярных C# IDE. Встроенная поддержка Visual Studio будет включена в "
"будущие версии, но пока что приведенные ниже шаги могут позволить вам "
"настроить VS 2019 для использования с проектами Godot C#."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:280
msgid ""
"Install VS 2019 with ``.NET desktop development`` and ``Desktop development "
"with C++`` workloads selected."
msgstr ""
"Установите VS 2019 с выбранными рабочими нагрузками ``.NET desktop "
"development`` и ``Desktop development with C++``."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:281
msgid ""
"**Ensure that you do not have Xamarin installed.** Do not choose the "
"``Mobile development with .NET`` workload. Xamarin changes the DLLs used by "
"MonoDebugger, which breaks debugging."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:282
msgid ""
"Install the `VSMonoDebugger extension <https://marketplace.visualstudio.com/"
"items?itemName=GordianDotNet.VSMonoDebugger0d62>`_."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:283
msgid "In VS 2019 --> Extensions --> Mono --> Settings:"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:285
msgid "Select ``Debug/Deploy to local Windows``."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:286
msgid "Leave ``Local Deploy Path`` blank."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:287
msgid ""
"Set the ``Mono Debug Port`` to the port in Godot --> Project --> Project "
"Settings --> Mono --> Debugger Agent."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:288
msgid ""
"Also select ``Wait for Debugger`` in the Godot Mono options. `This Godot "
"Addon <https://godotengine.org/asset-library/asset/435>`_ may be helpful."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:290
msgid ""
"Run the game in Godot. It should hang at the Godot splash screen while it "
"waits for your debugger to attach."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:291
msgid ""
"In VS 2019, open your project and choose Extensions --> Mono --> Attach to "
"Mono Debugger."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:294
#, fuzzy
msgid "Configuring Visual Studio Code for debugging"
msgstr "Настройка VS 2019 для отладки"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:296
msgid ""
"To configure Visual Studio Code for debugging open up a project in Godot. "
"Click on Project and open the project settings. Scroll down and click on "
"Debugger Agent under the Mono category. Then turn on the setting \"wait for "
"debugger.\" Next, copy the port number and open up Visual Studio Code."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:301
msgid ""
"You need to download the Mono Debug extension from Microsoft. Then open the "
"Godot project folder. Go to the run tab and click on create a launch.json "
"file. Select C# Mono from the dropdown menu. When the launch.json file is "
"automatically opened, change the port number to the number you copied "
"previously and save the file. On the run tab, switch the run setting from "
"launch to attach. Whenever you want to debug, make sure Wait for Debugger is "
"turned on in Godot, run the project, and run the debugger in Visual Studio "
"Code."
msgstr ""
