# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-04 16:27+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:4
msgid "GDScript exports"
msgstr "Экспортирование в GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:7
msgid "Introduction to exports"
msgstr "Введение в экспорт"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:9
msgid ""
"In Godot, class members can be exported. This means their value gets saved "
"along with the resource (such as the :ref:`scene <class_PackedScene>`) "
"they're attached to. They will also be available for editing in the property "
"editor. Exporting is done by using the ``export`` keyword::"
msgstr ""
"В Godot, члены класса (переменные и т.д.) могут быть экспортированы. Это "
"означает, что их значение сохраняется вместе с ресурсом (например, :ref:"
"`сцена <class_PackedScene>`), к которому они прикреплены. Они также будут "
"доступны для редактирования редакторе свойств. Экспорт осуществляется с "
"помощью ключевого слова ``export``::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:18
msgid ""
"An exported variable must be initialized to a constant expression or have an "
"export hint in the form of an argument to the ``export`` keyword (see the "
"*Examples* section below)."
msgstr ""
"Экспортируемая переменная должна быть инициализирована в постоянное "
"выражение (Константу) или иметь подсказку на экспорт в виде аргумента к "
"ключевому слову ``export`` (см. ниже секцию *Примеры*)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:22
msgid ""
"One of the fundamental benefits of exporting member variables is to have "
"them visible and editable in the editor. This way, artists and game "
"designers can modify values that later influence how the program runs. For "
"this, a special export syntax is provided."
msgstr ""
"Одним из фундаментальных преимуществ экспорта переменных (членов класса) "
"является то, что они видны и редактируются в редакторе. Таким образом, "
"художники и гейм-дизайнеры могут изменять значения, которые впоследствии "
"будут влиять на работу программы. Для этого предусмотрен специальный "
"синтаксис экспорта."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:29
#, fuzzy
msgid ""
"Exporting properties can also be done in other languages such as C#. The "
"syntax varies depending on the language. See :ref:`doc_c_sharp_exports` for "
"information on C# exports."
msgstr ""
"Экспорт свойств также можно выполнять и в других языках, например, в C#. "
"Синтаксис зависит от конкретного языка."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:34
msgid "Examples"
msgstr "Примеры"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:137
msgid ""
"It must be noted that even if the script is not being run while in the "
"editor, the exported properties are still editable. This can be used in "
"conjunction with a :ref:`script in \"tool\" mode <doc_gdscript_tool_mode>`."
msgstr ""
"Следует отметить, что даже если во время работы в редакторе скрипт не "
"выполняется, экспортируемые свойства все равно можно редактировать. Это "
"можно использовать в сочетании с :ref:`режимом \"инструмента\": "
"<doc_gdscript_tool_mode>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:142
msgid "Exporting bit flags"
msgstr "Экспорт битовых флагов"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:144
msgid ""
"Integers used as bit flags can store multiple ``true``/``false`` (boolean) "
"values in one property. By using the export hint ``int, FLAGS, ...``, they "
"can be set from the editor::"
msgstr ""
"Целые числа, используемые в качестве битовых флагов, могут хранить несколько "
"``true``/``false`` (булевых) значений в одном свойстве. Используя подсказку "
"экспорта ``int, FLAGS``, их можно настроить в редакторе:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:151
msgid ""
"You must provide a string description for each flag. In this example, "
"``Fire`` has value 1, ``Water`` has value 2, ``Earth`` has value 4 and "
"``Wind`` corresponds to value 8. Usually, constants should be defined "
"accordingly (e.g. ``const ELEMENT_WIND = 8`` and so on)."
msgstr ""
"Вы должны предоставить строчное описание каждому флагу. В этом примере у "
"``Fire`` значение 1, у ``Water`` - 2, у ``Earth`` - 4 и у ``Wind`` - 8. "
"Обычно константы должны быть определены соответствующим образом (например, "
"``const ELEMENT_WIND = 8`` и так далее)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:156
msgid ""
"Export hints are also provided for the physics and render layers defined in "
"the project settings::"
msgstr ""
"Подсказки по экспорту также предоставляются для слоев физики и визуализации, "
"определенных в настройках проекта::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:163
msgid ""
"Using bit flags requires some understanding of bitwise operations. If in "
"doubt, use boolean variables instead."
msgstr ""
"Использование бинарных флагов требует некоторого понимания побитовых "
"операций. Если вы сомневаетесь, вместо этого следует экспортировать "
"логические переменные."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:167
msgid "Exporting arrays"
msgstr "Экспорт массивов"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:169
msgid ""
"Exported arrays can have initializers, but they must be constant expressions."
msgstr ""
"Экспортируемые массивы могут иметь инициализаторы, но они должны быть "
"постоянными выражениями."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:171
msgid ""
"If the exported array specifies a type which inherits from Resource, the "
"array values can be set in the inspector by dragging and dropping multiple "
"files from the FileSystem dock at once."
msgstr ""
"Если экспортируемый массив указывает тип, который наследуется от Ресурса, "
"значения массива можно задать в инспекторе (Inspector), перетаскивая "
"несколько файлов из файловой системы (FileSystem) одновременно."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:209
msgid "Setting exported variables from a tool script"
msgstr "Установка экспортированных переменных из скрипта инструмента"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:211
msgid ""
"When changing an exported variable's value from a script in :ref:"
"`doc_gdscript_tool_mode`, the value in the inspector won't be updated "
"automatically. To update it, call :ref:`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` after setting the "
"exported variable's value."
msgstr ""
"При изменении значения экспортируемой переменной из скрипта в :ref:"
"`doc_gdscript_tool_mode` значение в Инспекторе (Inspector) не будет "
"обновляться автоматически. Чтобы обновить его, вызовите :ref:"
"`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` после установки значения "
"экспортируемой переменной."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:218
msgid "Advanced exports"
msgstr "Расширенный экспорт"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:220
msgid ""
"Not every type of export can be provided on the level of the language itself "
"to avoid unnecessary design complexity. The following describes some more or "
"less common exporting features which can be implemented with a low-level API."
msgstr ""
"Не каждый тип экспорта может быть предоставлен на уровне самого языка, чтобы "
"избежать ненужной сложности проектирования. Далее описаны некоторые более "
"или менее распространенные функции экспорта, которые могут быть реализованы "
"с помощью низкоуровневого API."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:224
msgid ""
"Before reading further, you should get familiar with the way properties are "
"handled and how they can be customized with :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>`, and :ref:`_get_property_list() "
"<class_Object_method__get_property_list>` methods as described in :ref:"
"`doc_accessing_data_or_logic_from_object`."
msgstr ""
"Прежде чем читать дальше, вы должны ознакомиться с тем, как свойства "
"обрабатываются и как они могут быть настроены с помощью методов :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>`, and :ref:`_get_property_list() "
"<class_Object_method__get_property_list>`, описанных в разделе :ref:"
"`doc_accessing_data_or_logic_from_object`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:231
msgid ""
"For binding properties using the above methods in C++, see :ref:"
"`doc_binding_properties_using_set_get_property_list`."
msgstr ""
"Свойства привязки, использующие описанные выше методы в C++, см. в разделе :"
"ref:`doc_binding_properties_using_set_get_property_list`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:234
msgid ""
"The script must operate in the ``tool`` mode so the above methods can work "
"from within the editor."
msgstr ""
"Скрипт должен работать в режиме ``tool``, чтобы вышеперечисленные методы "
"могли работать из редактора."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:238
msgid "Adding script categories"
msgstr "Добавление категорий скриптов"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:240
msgid ""
"For better visual distinguishing of properties, a special script category "
"can be embedded into the inspector to act as a separator. ``Script "
"Variables`` is one example of a built-in category."
msgstr ""
"Для лучшего визуального различения свойств в Инспектор (Inspector) может "
"быть встроена специальная категория скрипта, выполняющая роль разделителя. "
"``Script Variables`` - это один из примеров встроенной категории."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:257
msgid "``name`` is the name of a category to be added to the inspector;"
msgstr "``name`` это название категории, которая будет добавлена в инспектор;"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:259
msgid ""
"``PROPERTY_USAGE_CATEGORY`` indicates that the property should be treated as "
"a script category specifically, so the type ``TYPE_NIL`` can be ignored as "
"it won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""
"``PROPERTY_USAGE_CATEGORY`` указывает, что свойство должно рассматриваться "
"именно как категория скрипта, поэтому тип ``TYPE_NIL`` можно игнорировать, "
"поскольку он фактически не будет использоваться для логики скрипта, но все "
"равно должен быть определен."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:264
msgid "Grouping properties"
msgstr "Свойства группировки"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:266
msgid "A list of properties with similar names can be grouped."
msgstr "Список свойств с похожими именами можно сгруппировать."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:280
msgid ""
"``name`` is the name of a group which is going to be displayed as "
"collapsible list of properties;"
msgstr ""
"``name`` - это имя группы, которая будет отображаться в виде складываемого "
"списка свойств;"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:283
msgid ""
"every successive property added after the group property will be collapsed "
"and shortened as determined by the prefix defined via the ``hint_string`` "
"key. For instance, ``rotate_speed`` is going to be shortened to ``speed`` in "
"this case."
msgstr ""
"каждое последующее свойство, добавленное после свойства группы, будет "
"свернуто и сокращено в соответствии с префиксом, определенным с помощью "
"ключа ``hint_string``. Например, в этом случае``rotate_speed`` будет "
"сокращен до ``speed``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:287
msgid ""
"``PROPERTY_USAGE_GROUP`` indicates that the property should be treated as a "
"script group specifically, so the type ``TYPE_NIL`` can be ignored as it "
"won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""
"``PROPERTY_USAGE_GROUP`` указывает, что свойство должно рассматриваться "
"именно как группа сценариев, поэтому тип ``TYPE_NIL`` можно игнорировать, "
"поскольку он фактически не будет использоваться для логики сценариев, но он "
"все равно должен быть определен."
