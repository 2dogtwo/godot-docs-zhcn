# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-04 16:27+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:4
msgid "Exporting packs, patches, and mods"
msgstr "Экспортирование пакетов, патчей и модов"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:7
msgid "Use cases"
msgstr "Случаи использования"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:9
msgid ""
"Oftentimes one would like to add functionality to one's game after it has "
"been deployed."
msgstr ""
"Часто хотелось бы добавить функциональность в свою игру после того, как она "
"была выпущена."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:12
msgid "Examples of this include..."
msgstr "Примеры этого включают..."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:14
msgid ""
"Downloadable Content: the ability to add features and content to one's game."
msgstr ""
"Загружаемый контент: возможность добавлять функции и контент в свою игру."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:15
msgid "Patches: the ability to fix a bug that is present in a shipped product."
msgstr ""
"Патчи: возможность исправить ошибку, которая присутствует в отправленном "
"продукте."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:16
msgid "Mods: grant other people the ability to create content for one's game."
msgstr ""
"Моды: предоставить другим людям возможность создавать контент для своей игры."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:18
msgid ""
"These tools help developers to extend their development beyond the initial "
"release."
msgstr ""
"Эти инструменты помогают разработчикам расширить свою разработку за пределы "
"первоначального выпуска."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:22
msgid "Overview of PCK files"
msgstr "Обзор файлов PCK"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:24
msgid ""
"Godot enables this via a feature called **resource packs** (PCK files, with "
"extension ``.pck``)."
msgstr ""
"Godot позволяет это с помощью функции, называемой «пакеты ресурсов» (файлы "
"PCK, с расширением '.pck')."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:27
msgid "**Advantages:**"
msgstr "**Преимущества:**"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:29
msgid "incremental updates/patches"
msgstr "дополнительные обновления/патчи"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:30
msgid "offer DLCs"
msgstr "даёт возможность создавать DLC"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:31
msgid "offer mod support"
msgstr "даёт возможность поддержки модификаций(модов)"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:32
msgid "no source code disclosure needed for mods"
msgstr "нет необходимости раскрывать исходный код для модов"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:33
msgid "more modular project structure"
msgstr "более модульная структура проекта"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:34
msgid "users don't have to replace the entire game"
msgstr "пользователям не нужно заменять всю игру"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:36
msgid ""
"The first part of using them involves exporting and delivering the project "
"to players. Then, when one wants to add functionality or content later on, "
"they just deliver the updates via PCK files to the users."
msgstr ""
"Первая часть их использования предполагает экспорт и доставку проекта "
"игрокам. Затем, когда кто-то хочет добавить функциональность или контент "
"позже, они просто доставляют обновления через файлы PCK пользователям."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:40
msgid "PCK files usually contain, but are not limited to:"
msgstr "Файлы PCK обычно содержат, но не ограничиваются:"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:42
msgid "scripts"
msgstr "скрипты"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:43
msgid "scenes"
msgstr "сцены"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:44
msgid "shaders"
msgstr "шейдеры"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:45
msgid "models"
msgstr "модели"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:46
msgid "textures"
msgstr "текстуры"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:47
msgid "sound effects"
msgstr "звуковые эффекты"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:48
msgid "music"
msgstr "музыка"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:49
msgid "any other asset suitable for import into the game"
msgstr "любой другой ассет, пригодный для импорта в игру"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:51
msgid ""
"The PCK files can even be an entirely different Godot project, which the "
"original game loads in at runtime."
msgstr ""
"Файлы PCK могут быть даже совершенно другим проектом Godot, который "
"оригинальная игра загружает во время выполнения."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:55
msgid "Generating PCK files"
msgstr "Создание файлов PCK"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:57
msgid ""
"In order to pack all resources of a project into a PCK file open the project "
"and go to Project/Export and click on “Export PCK/Zip”. Also make sure to "
"have an export template selected while doing so."
msgstr ""
"Чтобы упаковать все ресурсы проекта в файл PCK, откройте проект, перейдите в "
"Project/Export (проект/экспорт) и нажмите \"Export PCK/Zip\". Также "
"убедитесь, что при этом выбран шаблон экспорта."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:63
msgid ""
"Another method would be to :ref:`export from the command line "
"<doc_command_line_tutorial_exporting>`. If the output file ends with a PCK "
"or ZIP file extension, then the export process will build that type of file "
"for the chosen platform."
msgstr ""
"Другим методом будет :ref:`экспорт из командной строки "
"<doc_command_line_tutorial_exporting>`. Если выходной файл заканчивается "
"расширением PCK или ZIP, то в процессе экспорта будет построен файл такого "
"типа для выбранной платформы."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:69
msgid ""
"If one wishes to support mods for their game, they will need their users to "
"create similarly exported files. Assuming the original game expects a "
"certain structure for the PCK's resources and/or a certain interface for its "
"scripts, then either..."
msgstr ""
"Если кто-то хочет поддерживать моды для своей игры, им потребуется, чтобы их "
"пользователи создавали файлы, экспортируемые аналогичным образом. "
"Предполагая, что исходная игра ожидает определенной структуры ресурсов PCK и/"
"или определенного интерфейса для своих скриптов, то либо..."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:74
msgid ""
"The developer must publicize documentation of these expected structures/ "
"interfaces, expect modders to install Godot Engine, and then also expect "
"those modders to conform to the documentation's defined API when building "
"mod content for the game (so that it will work). Users would then use "
"Godot's built in exporting tools to create a PCK file, as detailed above."
msgstr ""
"Разработчик должен опубликовать документацию по этим ожидаемым структурам/"
"интерфейсам, ожидать, что моддеры установят Godot Engine, а затем также "
"ожидать, что эти моддеры будут соответствовать заданному в документации API "
"при создании мод-контента для игры (чтобы он работал). Затем пользователи "
"будут использовать встроенные инструменты экспорта Godot для создания файла "
"PCK, как описано выше."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:80
msgid ""
"The developer uses Godot to build a GUI tool for adding their exact API "
"content to a project. This Godot tool must either run on a tools-enabled "
"build of the engine or have access to one (distributed alongside or perhaps "
"in the original game's files). The tool can then use the Godot executable to "
"export a PCK file from the command line with :ref:`OS.execute() "
"<class_OS_method_execute>`. It makes the most sense for the game to not use "
"a tool-build though (for security) and for the modding tools to *do* use a "
"tool-enabled engine build."
msgstr ""
"Разработчик использует Godot для создания инструмента с графическим "
"интерфейсом для добавления своего точного содержимого API в проект. Этот "
"инструмент Godot должен либо работать на сборке движка с инструментами, либо "
"иметь доступ к нему (распространяться вместе или, возможно, в файлах "
"исходной игры). Затем инструмент может использовать исполняемый файл Godot "
"для экспорта файла PCK из командной строки с помощью :ref:`OS.execute() "
"<class_OS_method_execute>`. Для игры имеет смысл не использовать сборку "
"инструментов (в целях безопасности), а для инструментов моддинга "
"*использовать* сборку движка с поддержкой инструментов."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:90
msgid "Opening PCK files at runtime"
msgstr "Открытие файлов PCK во время выполнения"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:92
msgid ""
"To import a PCK file, one uses the ProjectSettings singleton. The following "
"example expects a “mod.pck” file in the directory of the games executable. "
"The PCK file contains a “mod_scene.tscn” test scene in its root."
msgstr ""
"Для импорта файла PCK используется синглтон ProjectSettings. В следующем "
"примере ожидается наличие файла «mod.pck» в каталоге исполняемого файла "
"игры. Файл PCK содержит в своем корне тестовую сцену «mod_scene.tscn»."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:123
msgid ""
"By default, if you import a file with the same file path/name as one you "
"already have in your project, the imported one will replace it. This is "
"something to watch out for when creating DLC or mods (solved easily with a "
"tool isolating mods to a specific mods subfolder). However, it is also a way "
"of creating patches for one's own game. A PCK file of this kind can fix the "
"content of a previously loaded PCK."
msgstr ""
"По умолчанию, если вы импортируете файл с тем же путём/именем, что и файл, "
"который у вас уже есть в вашем проекте, импортированный файл заменит его. "
"Это то, на что следует обратить внимание при создании DLC или модов (легко "
"решается с помощью инструмента, изолирующего моды в определенную подпапку "
"модов). Однако это также способ создания патчей для собственной игры. Файл "
"PCK такого типа может исправить содержимое ранее загруженного файла PCK."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:129
msgid ""
"To opt out of this behavior, pass ``false`` as the second argument to :ref:"
"`ProjectSettings.load_resource_pack() "
"<class_ProjectSettings_method_load_resource_pack>`."
msgstr ""
"Чтобы отказаться от этого поведения, передайте ``false`` в качестве второго "
"аргумента функции :ref:`ProjectSettings."
"load_resource_pack()<class_ProjectSettings_method_load_resource_pack>`."

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:133
msgid ""
"For a C# project, you need to build the DLL and place it in the project "
"directory first. Then, before loading the resource pack, you need to load "
"its DLL as follows: ``Assembly.LoadFile(\"mod.dll\")``"
msgstr ""
"Для проекта C# вам необходимо сначала создать DLL и поместить его в каталог "
"проекта. Затем перед загрузкой пакета ресурсов вам необходимо загрузить этот "
"DLL следующим образом: ``Assembly.LoadFile(\"mod.dll\")``"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:138
msgid "Summary"
msgstr "Подведение итогов"

#: ../../docs/getting_started/workflow/export/exporting_pcks.rst:140
msgid ""
"This tutorial should illustrate how easy adding mods, patches or DLC to a "
"game is. The most important thing is to identify how one plans to distribute "
"future content for their game and develop a workflow that is customized for "
"that purpose. Godot should make that process smooth regardless of which "
"route a developer pursues."
msgstr ""
"Это руководство должно показать, насколько легко добавлять в игру моды, "
"патчи или DLC. Самая важная вещь - определить, как вы планируете "
"распространять будущий контент для своей игры, и разработать рабочий "
"процесс, настроенный для этой цели. Godot должен упростить этот процесс, "
"независимо от того, каким путём придерживается разработчик."
