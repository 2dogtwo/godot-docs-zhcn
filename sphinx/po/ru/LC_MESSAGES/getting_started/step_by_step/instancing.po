# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-08 12:36+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/instancing.rst:4
msgid "Instancing"
msgstr "Создание экземпляров"

#: ../../docs/getting_started/step_by_step/instancing.rst:7
msgid "Introduction"
msgstr "Введение"

#: ../../docs/getting_started/step_by_step/instancing.rst:9
msgid ""
"Creating a single scene and adding nodes into it might work for small "
"projects, but as a project grows in size and complexity, the number of nodes "
"can quickly become unmanageable. To address this, Godot allows a project to "
"be separated into any number of scenes. This provides you with a powerful "
"tool that helps you organize the different components of your game."
msgstr ""
"Создание одной сцены и добавление узлов в нее может работать в небольших "
"проектах, но по мере роста сложности проекта количество узлов может быстро "
"стать огромным. Чтобы решить эту проблему, Godot позволяет разделить проект "
"на любое количество сцен. Это дает вам мощный инструмент, который поможет "
"вам организовать различные компоненты вашей игры."

#: ../../docs/getting_started/step_by_step/instancing.rst:15
msgid ""
"In :ref:`doc_scenes_and_nodes` you learned that a scene is a collection of "
"nodes organized in a tree structure, with a single node as the tree root."
msgstr ""
"В :ref:`doc_scenes_and_nodes` вы узнали, что сцена представляет собой набор "
"узлов, организованных в древовидной структуре, с единственным узлом в "
"качестве корня дерева."

#: ../../docs/getting_started/step_by_step/instancing.rst:20
msgid ""
"You can create as many scenes as you like and save them to disk. Scenes "
"saved in this manner are called \"Packed Scenes\" and have a ``.tscn`` "
"filename extension."
msgstr ""
"Вы можете создать столько сцен, сколько хотите, и сохранить их на диск. "
"Сцены, сохраненные таким образом, называются \"Упакованные сцены\" (Packed "
"Scenes) и имеют расширение ``.tscn``."

#: ../../docs/getting_started/step_by_step/instancing.rst:26
msgid ""
"Once a scene has been saved, it can be instanced into another scene as if it "
"were any other node."
msgstr ""
"Как только сцена была сохранена, ее можно интегрировать в другую сцену, как "
"если бы это был любой другой узел."

#: ../../docs/getting_started/step_by_step/instancing.rst:31
msgid "In the above picture, Scene B was added to Scene A as an instance."
msgstr ""
"На вышеприведенном рисунке сцена В была добавлена в сцену А в качестве узла."

#: ../../docs/getting_started/step_by_step/instancing.rst:34
msgid "Instancing by example"
msgstr "Создание экземпляров на примере"

#: ../../docs/getting_started/step_by_step/instancing.rst:36
msgid ""
"To learn how instancing works, let's start by downloading a sample project: :"
"download:`instancing.zip <files/instancing.zip>`."
msgstr ""
"Чтобы узнать, как это работает, давайте начнем с загрузки примера проекта: :"
"download:`instancing.zip <files/instancing.zip>`."

#: ../../docs/getting_started/step_by_step/instancing.rst:39
msgid ""
"Unzip this project anywhere you like. Then open Godot and add this project "
"to the project manager using the 'Import' button:"
msgstr ""
"Разархивируйте этот проект в любом месте. Затем откройте Godot и добавьте "
"этот проект в менеджер проекта с помощью кнопки 'Импорт':"

#: ../../docs/getting_started/step_by_step/instancing.rst:44
msgid ""
"Browse to the folder you extracted and open the \"project.godot\" file you "
"can find inside it. After doing this, the new project will appear on the "
"list of projects. Edit the project by pressing the 'Edit' button."
msgstr ""
"Перейдите в папку, которую вы извлекли, и откройте файл \"project.godot\", "
"который вы найдете внутри нее. После этого новый проект появится в списке "
"проектов. Отредактируйте проект, нажав кнопку 'Редактировать'."

#: ../../docs/getting_started/step_by_step/instancing.rst:48
msgid ""
"This project contains two scenes: \"Ball.tscn\" and \"Main.tscn\". The ball "
"scene uses a :ref:`RigidBody2D <class_RigidBody2D>` to provide physics "
"behavior while the main scene has a set of obstacles for the ball to collide "
"with (using :ref:`StaticBody2D <class_StaticBody2D>`)."
msgstr ""
"Этот проект содержит две сцены: \"Ball.tscn\" и \"Main.tscn\". Сцена мяча "
"использует :ref:`RigidBody2D <class_RigidBody2D>`, чтобы обеспечить "
"физическое поведение, в то время как основная сцена имеет множество "
"препятствий для столкновения мяча (используя :ref:`StaticBody2D "
"<class_StaticBody2D>`)."

#: ../../docs/getting_started/step_by_step/instancing.rst:57
msgid "Open the ``Main`` scene, and then select the root node:"
msgstr "Откройте сцену ``Main`` и затем выберите корневой узел:"

#: ../../docs/getting_started/step_by_step/instancing.rst:61
msgid ""
"We want to add an instance of the ``Ball`` scene as a child of ``Main``. "
"Click the \"link\"-shaped button (its hover-text says \"Instance a scene "
"file as a Node.\") and select the ``Ball.tscn`` file."
msgstr ""
"Мы хотим добавить экземпляр сцены ``Ball`` в качестве дочернего узла "
"``Main``. Нажмите кнопку в виде \"цепи\" (во всплывающей подсказке сказано: "
"\"Добавить файл сцены как узел.\") и выберите файл ``Ball.tscn``."

#: ../../docs/getting_started/step_by_step/instancing.rst:67
msgid ""
"The ball will be placed at the top-left corner of the screen area (this is "
"``(0, 0)`` in screen coordinates). Click and drag the ball somewhere near "
"the top-center of the scene:"
msgstr ""
"Мяч будет помещен в верхний левый угол области экрана (это ``(0, 0)`` в "
"координатах экрана). Нажмите и перетащите мяч куда-нибудь рядом с верхним "
"центром сцены:"

#: ../../docs/getting_started/step_by_step/instancing.rst:73
msgid "Press \"Play\" and watch the ball fall to the bottom of the screen:"
msgstr "Нажмите «Play» и посмотрите, как мяч упадёт вниз:"

#: ../../docs/getting_started/step_by_step/instancing.rst:78
msgid "Multiple instances"
msgstr "Множественное создание экземпляров"

#: ../../docs/getting_started/step_by_step/instancing.rst:80
msgid ""
"You can add as many instances as you like to a scene, either by using the "
"\"Instance\" button again, or by clicking on the ball instance and pressing :"
"kbd:`Ctrl + D` (:kbd:`Cmd + D` on macOS) to duplicate it:"
msgstr ""
"Вы можете добавить на сцену так много экземпляров объекта, как захотите: "
"либо вновь воспользовавшись кнопкой «Instance», либо выделив экземпляр "
"шарика и нажав :kbd:`Ctrl + D` (:kbd:`Cmd + D` в macOS) чтобы его "
"дублировать:"

#: ../../docs/getting_started/step_by_step/instancing.rst:86
msgid "Run the scene again and all of the balls will fall."
msgstr "Запустите сцену снова, и все шары упадут."

#: ../../docs/getting_started/step_by_step/instancing.rst:91
msgid "Editing instances"
msgstr "Редактирование экземпляров"

#: ../../docs/getting_started/step_by_step/instancing.rst:93
msgid ""
"Open the ``Ball`` scene, expand the ``PhysicsMaterial`` by clicking on it, "
"and set the ``Bounce`` property to ``1``."
msgstr ""
"Откройте сцену ``Ball``, найдите в его настройках параметр "
"``PhysicsMaterial``, нажмите по нему и установите параметр ``Bounce`` "
"(отскок) на значение ``1``."

#: ../../docs/getting_started/step_by_step/instancing.rst:98
msgid ""
"Press \"Play\" and notice that all of the instanced balls are now much more "
"bouncy. Because the instanced balls are based on the saved scene, changes to "
"that scene will affect all instances."
msgstr ""
"Нажмите \"Play\" (Играть) и вы убедитесь в том, что добавленные шары теперь "
"более упругие. Так как эти шары основаны на сохраненной сцене, изменения "
"этой сцены подействуют на другие экземпляры шаров."

#: ../../docs/getting_started/step_by_step/instancing.rst:102
msgid ""
"You can also adjust individual instances. Set the bounce value back to ``0`` "
"and then in the ``Main`` scene, select one of the instanced balls. Resources "
"like ``PhysicsMaterial`` are shared between instances by default, so we need "
"to make it unique. Click on the tools button in the top-right of the "
"Inspector dock and select \"Make Sub-Resources Unique\". Set its ``Bounce`` "
"to ``1`` and press \"Play\"."
msgstr ""
"Вы также можете настроить отдельные экземпляры. Установите значение отскока "
"обратно на ``0``, а затем в сцене ``Main`` выберите один из шаров. Такие "
"ресурсы, как ``PhysicsMaterial`` по умолчанию являются общими для всех "
"экземпляров, но мы можем сделать их уникальными. Нажмите на стрелку вниз и "
"выберите пункт \"Сделать Уникальным (Make Unique)\". Установите для "
"параметра ``Bounce`` значение ``1`` и нажмите «Play»."

#: ../../docs/getting_started/step_by_step/instancing.rst:111
msgid ""
"Notice that a grey \"revert\" button appears next to the adjusted property. "
"When this button is present, it means you modified a property in the "
"instanced scene to override its value in the saved scene. Even if that "
"property is modified in the original scene, the custom value will remain. "
"Pressing the revert button will restore the property to the value in the "
"saved scene."
msgstr ""
"Обратите внимание, что рядом с измененным свойством появляется серая кнопка "
"\"вернуться\". Наличие этой кнопки означает, что вы изменили свойство в "
"экземпляре сцены, чтобы переопределить его значение в сохраненной сцене. "
"Даже если это свойство будет изменено в исходной сцене, пользовательское "
"значение останется. Нажатие кнопки возврата восстановит старое значение "
"свойства, как в сохраненной сцене."

#: ../../docs/getting_started/step_by_step/instancing.rst:119
msgid "Conclusion"
msgstr "Вывод"

#: ../../docs/getting_started/step_by_step/instancing.rst:121
msgid ""
"Instancing can be useful when you want to create many copies of the same "
"object. It is also possible to create instances in code by using GDScript, "
"see :ref:`doc_instancing_continued`."
msgstr ""
"Создавать экземпляры может быть полезно, если вы хотите создать множество "
"копий одного и того же объекта. Также возможно создать экземпляр "
"непосредственно в коде, используя GDScript, см :ref:"
"`doc_scripting_continued`."
