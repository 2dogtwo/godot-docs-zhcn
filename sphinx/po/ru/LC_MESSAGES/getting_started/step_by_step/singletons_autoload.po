# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-05 17:37+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:4
msgid "Singletons (AutoLoad)"
msgstr "Синглтоны (Автозагрузка)"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:7
msgid "Introduction"
msgstr "Введение"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:9
msgid ""
"Godot's scene system, while powerful and flexible, has a drawback: there is "
"no method for storing information (e.g. a player's score or inventory) that "
"is needed by more than one scene."
msgstr ""
"Система сцен Godot, будучи мощной и гибкой, имеет недостаток: отсутствует "
"способ хранения информации (например, счет игрока или инвентарь), которая "
"необходима для нескольких сцен."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:13
msgid ""
"It's possible to address this with some workarounds, but they come with "
"their own limitations:"
msgstr ""
"Можно решить эту проблему с помощью некоторых обходных путей, но у них есть "
"свои ограничения:"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:16
msgid ""
"You can use a \"master\" scene that loads and unloads other scenes as its "
"children. However, this means you can no longer run those scenes "
"individually and expect them to work correctly."
msgstr ""
"Вы можете использовать \"мастер-сцену\", которая загружает и выгружает "
"другие сцены в качестве своих детей. Однако это означает, что вы больше не "
"можете запускать эти сцены по отдельности и ожидать от них корректной работы."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:19
msgid ""
"Information can be stored to disk in ``user://`` and then loaded by scenes "
"that require it, but frequently saving and loading data is cumbersome and "
"may be slow."
msgstr ""
"Информация может храниться на диске в ``user://``, а затем загружаться "
"сценами, которые требуют этого, но увы сохранение и загрузка данных часто "
"является громоздкой и может быть медленной."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:23
msgid ""
"The `Singleton Pattern <https://en.wikipedia.org/wiki/Singleton_pattern>`_ "
"is a useful tool for solving the common use case where you need to store "
"persistent information between scenes. In our case it is possible re-use the "
"same scene or class for multiple singletons, so long as they have different "
"names."
msgstr ""
"`Шаблон Одиночка (Синглтон) <https://ru.wikipedia.org/wiki/"
"Одиночка_(шаблон_проектирования)>`_ - это инструмент для решения проблемы, "
"когда необходимо хранить постоянную информацию между сценами. В нашем случае "
"можно повторно использовать одну и ту же сцену или класс для нескольких "
"синглотнов, при условии, что они имеют разные названия."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:29
msgid "Using this concept, you can create objects that:"
msgstr "Используя эту концепцию, вы можете создавать такие объекты:"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:31
msgid "Are always loaded, no matter which scene is currently running"
msgstr ""
"Всегда загружены, независимо от того, какая сцена в данный момент запущена"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:32
msgid "Can store global variables, such as player information"
msgstr "Может хранить глобальные переменные, такие как информация об игроке"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:33
msgid "Can handle switching scenes and between-scene transitions"
msgstr ""
"Возможность переключения между сценами и переходами от одной сцены к другой"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:34
msgid ""
"Act like a singleton, since GDScript does not support global variables by "
"design"
msgstr ""
"Действуйте как **одиночка**, так как GDScript не поддерживает глобальные "
"переменные по дизайну"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:36
#, fuzzy
msgid "Autoloading nodes and scripts can give us these characteristics."
msgstr "Автозагрузка удовлетворяет наши потребности."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:39
msgid "AutoLoad"
msgstr "Автозагрузка"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:41
msgid ""
"You can use AutoLoad to load a scene or a script that inherits from :ref:"
"`Node <class_Node>`. Note: when autoloading a script, a Node will be created "
"and the script will be attached to it. This node will be added to the root "
"viewport before any other scenes are loaded."
msgstr ""
"Вы можете использовать Автозагрузку для загрузки сцены или скрипта, "
"унаследованного от :ref:`Node <class_Node>`. Примечание: при автозагрузке "
"скрипта будет создан узел и к нему будет прикреплен скрипт. Этот узел будет "
"добавлен в корневое окно(Viewport) перед загрузкой любых других сцен."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:48
msgid ""
"To autoload a scene or script, select ``Project -> Project Settings`` from "
"the menu and switch to the \"AutoLoad\" tab."
msgstr ""
"Чтобы автоматически загрузить сцену или скрипт, выберите в меню ``Проект -> "
"Настройки проекта`` и перейдите на вкладку \"Автозагрузка\"."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:53
msgid ""
"Here you can add any number of scenes or scripts. Each entry in the list "
"requires a name, which is assigned as the node's ``name`` property. The "
"order of the entries as they are added to the global scene tree can be "
"manipulated using the up/down arrow keys."
msgstr ""
"Здесь вы можете добавить любое количество сцен или скриптов. Каждая запись в "
"списке требует имя, которое присваивается свойству узла ``name``. Порядок "
"расположения записей в дереве глобальной сцены может быть изменен с помощью "
"клавиш со стрелками вверх/вниз."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:60
msgid ""
"This means that any node can access a singleton named \"PlayerVariables\" "
"with:"
msgstr ""
"Это означает, что любой узел может получить доступ к синглтону с именем "
"\"PlayerVariables\":"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:73
#, fuzzy
msgid ""
"If the \"Enable\" column is checked (default ``true``) then the singleton "
"can simply be accessed directly:"
msgstr ""
"Если колонка \"Включить\" отмечена галочкой (по умолчанию true), то Синглтон "
"можно просто получить напрямую:"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:86
msgid ""
"Note that autoload objects (scripts and/or scenes) are accessed just like "
"any other node in the scene tree. In fact, if you look at the running scene "
"tree, you'll see the autoloaded nodes appear:"
msgstr ""
"Обратите внимание, что доступ к объектам автозагрузки (скриптам и/или "
"сценам) осуществляется так же, как и к любому другому узлу дерева сцен. На "
"самом деле, если вы посмотрите на дерево выполняющихся сцен, вы увидите, что "
"появились узлы автозагрузки:"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:93
msgid "Custom scene switcher"
msgstr "Пользовательский переключатель сцены"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:95
#, fuzzy
msgid ""
"This tutorial will demonstrate building a scene switcher using autoload. For "
"basic scene switching, you can use the :ref:`SceneTree.change_scene() "
"<class_SceneTree_method_change_scene>` method (see :ref:`doc_scene_tree` for "
"details). However, if you need more complex behavior when changing scenes, "
"this method provides more functionality."
msgstr ""
"В данном руководстве будет продемонстрировано создание переключателя сцен с "
"помощью автозагрузки. В основном для переключения сцены можно использовать "
"метод :ref:`SceneTree.change_scene() <class_SceneTree_method_change_scene>` "
"(подробнее см. :ref:`doc_scene_tree`). Однако, если вам нужно более сложное "
"поведение при смене сцен, этот метод обеспечивает большую функциональность."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:101
msgid ""
"To begin, download the template from here: :download:`autoload.zip <files/"
"autoload.zip>` and open it in Godot."
msgstr ""
"Для начала скачайте шаблон здесь: :download:`autoload.zip <files/autoload."
"zip>` и откройте его в Godot."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:104
msgid ""
"The project contains two scenes: ``Scene1.tscn`` and ``Scene2.tscn``. Each "
"scene contains a label displaying the scene name and a button with its "
"``pressed()`` signal connected. When you run the project, it starts in "
"``Scene1.tscn``. However, pressing the button does nothing."
msgstr ""
"Проект содержит две сцены: ``Scene1.tscn`` and ``Scene2.tscn``. Каждая сцена "
"содержит Label, отображающий название сцены и кнопку с подключенным сигналом "
"``pressed()``. Когда вы запускаете проект, он начинается в ``Scene1.tscn``. "
"Однако, нажатие кнопки ничего не даст."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:110
msgid "Global.gd"
msgstr "Global.gd"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:112
msgid ""
"Switch to the \"Script\" tab and create a new script called Global.gd. Make "
"sure it inherits from ``Node``:"
msgstr ""
"Перейдите на вкладку \"Script\" и создайте новый скрипт под названием Global."
"gd. Убедитесь, что он унаследован от ``Node``:"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:117
#, fuzzy
msgid ""
"The next step is to add this script to the autoLoad list. Open ``Project > "
"Project Settings`` from the menu, switch to the \"AutoLoad\" tab and select "
"the script by clicking the browse button or typing its path: ``res://Global."
"gd``. Press \"Add\" to add it to the autoload list:"
msgstr ""
"Следующим шагом будет добавление этого скрипта в список автозагрузки. "
"Откройте ``Проект > Настройки проекта``, перейдите на вкладку \"Автозагрузка"
"\" и выберите скрипт, нажав на кнопку ``..`` или напечатав его путь: ``res://"
"Global.gd``. Нажмите \"Добавить\", чтобы добавить его в список автозагрузки:"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:124
msgid ""
"Now whenever we run any scene in the project, this script will always be "
"loaded."
msgstr ""
"Теперь всякий раз, когда мы запускаем какую-либо сцену в проекте, этот "
"скрипт всегда будет загружен."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:126
msgid ""
"Returning to the script, it needs to fetch the current scene in the "
"`_ready()` function. Both the current scene (the one with the button) and "
"``global.gd`` are children of root, but autoloaded nodes are always first. "
"This means that the last child of root is always the loaded scene."
msgstr ""
"Возвращаясь к скрипту, он должен получить текущую сцену в функции "
"`_ready()`. Как текущая сцена (сцена с кнопкой), так и сцена ``global.gd`` "
"являются детьми корня, но узлы автозагрузки всегда загружаются первыми. Это "
"означает, что последним дочерним ребенком корня всегда будет загруженная "
"сцена."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:158
msgid ""
"Now we need a function for changing the scene. This function needs to free "
"the current scene and replace it with the requested one."
msgstr ""
"Теперь нам нужна функция для смены сцены. Эта функция должна освободить "
"(очистить) текущую сцену и заменить ее на нужную нам."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:227
msgid ""
"Using :ref:`Object.call_deferred() <class_Object_method_call_deferred>`, the "
"second function will only run once all code from the current scene has "
"completed. Thus, the current scene will not be removed while it is still "
"being used (i.e. its code is still running)."
msgstr ""
"Используя: ref: `Object.call_deferred () "
"<class_Object_method_call_deferred>`, вторая функция будет запускаться "
"только после завершения всего кода из текущей сцены. Таким образом, текущая "
"сцена не будет удалена, пока она все еще используется (то есть ее код все "
"еще выполняется)."

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:232
msgid ""
"Finally, we need to fill the empty callback functions in the two scenes:"
msgstr ""
"Наконец, нам нужно заполнить пустые функции обратного вызова в двух сценах:"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:252
msgid "and"
msgstr "и"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:272
#, fuzzy
msgid ""
"Run the project and test that you can switch between scenes by pressing the "
"button."
msgstr ""
"Запустите проект и проверьте, что вы можете переключаться между сценами, "
"нажав кнопку!"

#: ../../docs/getting_started/step_by_step/singletons_autoload.rst:275
msgid ""
"Note: When scenes are small, the transition is instantaneous. However, if "
"your scenes are more complex, they may take a noticeable amount of time to "
"appear. To learn how to handle this, see the next tutorial: :ref:"
"`doc_background_loading`"
msgstr ""
"Примечание: Если сцены маленькие, переход происходит мгновенно. Однако, если "
"ваши сцены более сложные, на их появление может уйти заметное количество "
"времени. Чтобы узнать, как с этим справиться, см. следующее руководство: :"
"ref:`doc_background_load`"
