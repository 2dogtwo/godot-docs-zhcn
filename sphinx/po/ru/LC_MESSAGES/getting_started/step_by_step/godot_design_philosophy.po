# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-27 12:19+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:4
#, fuzzy
msgid "Godot's design philosophy"
msgstr "Философия дизайна Godot"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:6
msgid "Now that you've gotten your hands wet, let's talk about Godot's design."
msgstr "Теперь, когда вы \"набили руку\", давайте поговорим о дизайне Godot."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:8
#, fuzzy
msgid ""
"**Every game engine is different and fits different needs.** Not only do "
"they offer a range of features, but the design of each engine is unique. "
"This leads to different workflows and different ways to form your games' "
"structures. This all stems from their respective design philosophies."
msgstr ""
"**Каждый игровой движок отличается и соответствует различным потребностям."
"**Они не только предлагают ряд функций,но и дизайн каждого движка уникален. "
"Это приводит к разным рабочим процессам и различным способам формирования "
"структур ваших игр. Все это вытекает из их соответствующих концепций дизайна."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:13
msgid ""
"This page is here to help you understand how Godot works, starting with some "
"of its core pillars. It is not a list of available features, nor is it an "
"engine comparison. To know if any engine can be a good fit for your project, "
"you need to try it out for yourself and understand its design and "
"limitations."
msgstr ""
"Эта страница здесь для того, чтобы помочь вам понять как Godot работает, "
"начиная с самых основ. Это не список доступных возможностей, также это не "
"сравнение различных движков. Чтобы понять, хорошо ли подходит некий движок в "
"проект, его необходимо попробовать и понять его архитектуру и ограничения."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:19
msgid ""
"Please watch `Discover Godot 3, the Free game engine <https://youtu."
"be/4v3qge-3CqQ>`_ if you're looking for an overview of the engine's features."
msgstr ""
"Пожалуйста посмотрите `Открытие Godot 3, свободный игровой движок <https://"
"youtu.be/4v3qge-3CqQ>`_, если вы ищете обзор возможностей движка."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:23
msgid "Object-oriented design and composition"
msgstr "Объектно-ориентированный дизайн и композиция"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:25
msgid ""
"Godot embraces object-oriented design at its core with its flexible scene "
"system and Node hierarchy. It tries to stay away from strict programming "
"patterns to offer an intuitive way to structure your game."
msgstr ""
"Godot включает в себя объектно-ориентированный дизайн с его гибкой системой "
"сцен и иерархией узлов. Он пытается держаться подальше от строгих шаблонов "
"программирования, чтобы предложить интуитивный способ структурирования вашей "
"игры."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:29
msgid ""
"For one, Godot lets you **compose or aggregate** scenes. It's like nested "
"prefabs: you can create a BlinkingLight scene and a BrokenLantern scene that "
"uses the BlinkingLight. Then, create a city filled with BrokenLanterns. "
"Change the BlinkingLight's color, save, and all the BrokenLanterns in the "
"city will update instantly."
msgstr ""
"Во-первых, Godot позволяет вам составлять (или собирать) сцены. Это как "
"вложенные префабы: вы можете создать мерцающий свет и сцену со сломанным "
"фонарём, который использует мерцающий свет. Затем создать город наполненный "
"такими фонарями. Потом поменять цвет мерцания, сохранить объект, и все "
"фонари тут же обновятся."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:36
msgid "On top of that, you can **inherit** from any scene."
msgstr "Более того, вы можете **наследовать** от любой сцены."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:38
#, fuzzy
msgid ""
"A Godot scene could be a Weapon, a Character, an Item, a Door, a Level, part "
"of a level… anything you'd like. It works like a class in pure code, except "
"you're free to design it by using the editor, using only the code, or mixing "
"and matching the two."
msgstr ""
"Сценой в Godot может являться Оружие, Персонаж, Предмет, Дверь, Уровень, "
"часть уровня... всё, что пожелаете. Это работает как классы в коде, за "
"исключением лишь того, что вы сами создаёте всё сами, используя Редактор, "
"либо только код, либо то и другое одновременно."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:43
#, fuzzy
msgid ""
"It's different from prefabs you find in several 3D engines, as you can then "
"inherit from and extend those scenes. You may create a Magician that extends "
"your Character. Modify the Character in the editor and the Magician will "
"update as well. It helps you build your projects so that their structure "
"matches the game's design."
msgstr ""
"Это отличается от префабов, которые можно найти в некоторых 3D движках, так "
"как вы можете наследовать и расширять любую сцену. К примеру, вы можете "
"создать сцену \"Маг\", которая будет потомком вашей сцены \"Персонаж\". И "
"если вы измените сцену \"Персонаж\" в редакторе, то и сцена \"Маг\" также "
"будет обновлена. Это позволит вам организовать проект таким образом, чтобы "
"его структура соответствовала игровому дизайну."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:49
msgid "|image0|"
msgstr "|image0|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:51
#, fuzzy
msgid ""
"Also note that Godot offers many different types of objects called nodes, "
"each with a specific purpose. Nodes are part of a tree and always inherit "
"from their parents up to the Node class. Although the engine does feature "
"components like collision shapes, they're the exception, not the norm."
msgstr ""
"Также обратите внимание, что Godot предлагает множество различных типов "
"объектов, называемых узлами, каждый из которых служит определенной цели. "
"Узлы являются частью дерева и всегда наследуются от своих родителей вплоть "
"до класса Node. Несмотря на то, что движок поддерживает компоненты, "
"например, формы столкновения, они скорее являются исключением, нежели нормой."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:57
msgid "|image1|"
msgstr "|image1|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:59
msgid ""
"Sprite is a Node2D, a CanvasItem and a Node. It has all the properties and "
"features of its three parent classes, like transforms or the ability to draw "
"custom shapes and render with a custom shader."
msgstr ""
"Sprite наследуется от классов Node2D, CanvasItem и Node. Благодаря этому он "
"имеет их свойства и особенности, что позволяет ему, к примеру, выполнять "
"преобразования, отрисовывать произвольные фигуры или использовать сторонние "
"шейдеры."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:64
msgid "All-inclusive package"
msgstr "Комплексный"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:66
msgid ""
"Godot tries to provide its own tools to answer most common needs. It has a "
"dedicated scripting workspace, an animation editor, a tilemap editor, a "
"shader editor, a debugger, a profiler, the ability to hot-reload locally and "
"on remote devices, etc."
msgstr ""
"Godot предоставляет свои собственные инструменты для удовлетворения наиболее "
"распространенных потребностей. Он имеет встроенный редактор кода, редактор "
"анимации, редактор tilemap, редактор шейдеров, отладчик, профилировщик, "
"возможность перезагрузки на ходу локально и на удаленных устройствах и "
"многое другое."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:71
msgid "|image2|"
msgstr "|image2|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:73
msgid ""
"The goal is to offer a full package to create games and a continuous user "
"experience. You can still work with external programs as long as there is an "
"import plugin for it. Or you can create one, like the `Tiled Map Importer "
"<https://github.com/vnen/godot-tiled-importer>`__."
msgstr ""
"Цель состоит в том, чтобы предложить полный пакет для создания игр и "
"непрерывного обучения. Вы можете работать с внешними программами, если для "
"них есть плагин импорта. Или вы можете создать его, например, `Tiled Map "
"Importer <https://github.com/vnen/godot-tiled-importer>`."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:78
#, fuzzy
msgid ""
"That is also partly why Godot offers its own programming languages GDscript "
"and VisualScript, along with C#. They're designed for the needs of game "
"developers and game designers, and they're tightly integrated in the engine "
"and the editor."
msgstr ""
"Это также отчасти потому, что Godot предлагает свои собственные языки "
"программирования GDscript и VisualScript вместе с C#. Они разработаны для "
"нужд разработчиков и гейм дизайнеров и тесно интегрированы в движок и "
"редактор."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:83
msgid ""
"GDscript lets you write simple code using Python-like syntax, yet it detects "
"types and offers a static language's quality of auto-completion. It is also "
"optimized for gameplay code with built-in types like Vectors and Colors."
msgstr ""
"GDscript позволяет писать простой код, используя Python-подобный синтаксис, "
"он обнаруживает типы и предлагает качественное автоматическое завершение "
"статического языка. Он также оптимизирован для игрового кода со встроенными "
"типами, такими как векторы и цвета."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:87
msgid ""
"Note that with GDNative, you can write high-performance code using compiled "
"languages like C, C++, Rust, or Python (using the Cython compiler) without "
"recompiling the engine."
msgstr ""
"Обратите внимание, что с помощью GDNative вы можете написать "
"высокопроизводительный код с использованием скомпилированных языков, таких "
"как C, C ++, Rust или Python (с использованием компилятора Cython) без "
"перекомпиляции движка."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:91
msgid "|image3|"
msgstr "|image3|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:93
msgid ""
"*VisualScript is a node-based programming language that integrates well in "
"the editor. You can drag and drop nodes or resources into the graph to "
"create new code blocks.*"
msgstr ""
"*VisualScript - это язык программирования на основе узлов, который хорошо "
"интегрируется в редактор. Вы можете перетаскивать узлы или ресурсы в граф "
"для создания новых блоков кода.*"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:97
#, fuzzy
msgid ""
"Note that the 3D workspace doesn't feature as many tools as the 2D "
"workspace. You'll need external programs or add-ons to edit terrains, "
"animate complex characters, and so on. Godot provides a complete API to "
"extend the editor's functionality using game code. See `The Godot editor is "
"a Godot game`_ below."
msgstr ""
"Обратите внимание, что в 3D рабочем пространстве не имеется столько "
"инструментов, как в 2D рабочем пространстве. Вам понадобятся внешние "
"программы или аддоны для редактирования ландшафтов, анимации сложных "
"персонажей и т.д. Godot предоставляет полный API для расширения "
"функциональности редактора, используя код игры. См. `Редактор Godot - это "
"игра Godot`_ ниже."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:102
msgid "|image4|"
msgstr "|image4|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:104
msgid ""
"*A State Machine editor plugin in Godot 2 by kubecz3k. It lets you manage "
"states and transitions visually.*"
msgstr ""
"*Плагин State Machine (Машина Состояний) в Godot 2 от kubecz3k. Он позволяет "
"визуально управлять состояниями и переходами*"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:108
msgid "Open source"
msgstr "Открытый исходный код"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:110
#, fuzzy
msgid ""
"Godot offers a fully open source codebase under the **MIT license**. This "
"means all the technologies that ship with it have to be Free (as in freedom) "
"as well. For the most part, they're developed from the ground up by "
"contributors."
msgstr ""
"Godot предлагает полностью открытую кодовую базу под лицензией **MIT.** Это "
"означает, что все технологии, которые поставляются с ней, должны быть "
"бесплатными. По большей части, они разрабатываются авторами с нуля."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:115
#, fuzzy
msgid ""
"Anyone can plug in proprietary tools for the needs of their projects — they "
"just won't ship with the engine. This may include Google AdMob, or FMOD. Any "
"of these can come as third-party plugins instead."
msgstr ""
"Любой может подключить собственные инструменты для нужд своих проектов - они "
"не будут поставляться с движком. Это может быть , например, Google Admob или "
"FMOD . Любой из них может использоваться как сторонние плагины."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:120
#, fuzzy
msgid ""
"On the other hand, an open codebase means you can **learn from and extend "
"the engine** to your heart's content. You can also debug games easily, as "
"Godot will print errors with a stack trace, even if they come from the "
"engine itself."
msgstr ""
"С другой стороны, открытая кодовая база означает, что вы можете **изучать и "
"расширять движок** как вам угодно. Вы также можете легко отлаживать игры, "
"поскольку Godot будет печатать ошибки с трассировкой стека, даже если они "
"исходят из самого движка."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:126
#, fuzzy
msgid ""
"This **does not affect the work you do with Godot** in any way: there's no "
"strings attached to the engine or anything you make with it."
msgstr ""
"В любом случае, это **не влияет на работу, которую вы совершаете с Godot**: "
"никаких условий для движка или всего, что вы делаете с ним, нет."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:130
msgid "Community-driven"
msgstr "Управляемый сообществом"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:132
#, fuzzy
msgid ""
"**Godot is made by its community, for the community, and for all game "
"creators out there.** It's the needs of the users and open discussions that "
"drive the core updates. New features from the core developers often focus on "
"what will benefit the most users first."
msgstr ""
"**Godot создается сообществом, для сообщества и для всех создателей игр.** "
"Это потребности пользователей и открытые обсуждения, которые управляют "
"основными обновлениями. Новые функции от основных разработчиков часто "
"фокусируются на то, что в первую очередь принесет пользу большинству "
"пользователей."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:137
#, fuzzy
msgid ""
"That said, although a handful of core developers work on it full-time, the "
"project has over 600 contributors at the time of writing. Benevolent "
"programmers work on features they may need themselves, so you'll see "
"improvements in all corners of the engine at the same time in every major "
"release."
msgstr ""
"Несмотря на то, что горстка основных разработчиков работает полный рабочий "
"день, в проекте более 500 участников. Доброжелательные программисты работают "
"над функциями, которые им самим могут понадобиться, поэтому в каждой версии "
"вы увидите улучшения во всех аспектах движка."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:144
msgid "The Godot editor is a Godot game"
msgstr "Редактор Godot - это игра Godot"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:146
#, fuzzy
msgid ""
"The Godot editor runs on the game engine. It uses the engine's own UI "
"system, it can hot-reload code and scenes when you test your projects, or "
"run game code in the editor. This means you can **use the same code** and "
"scenes for your games, or **build plugins and extend the editor.**"
msgstr ""
"Редактор Godot работает на игровом движке. Он использует собственную систему "
"пользовательского интерфейса движка. Он может перезагружать код и сцены при "
"тестировании ваших проектов или запускать игровой код в редакторе. Это "
"означает, что вы можете **использовать один и тот же код** и сцены для своих "
"игр или **создавать плагины и расширять редактор.**"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:151
msgid ""
"This leads to a reliable and flexible UI system, as it powers the editor "
"itself. With the ``tool`` keyword, you can run any game code in the editor."
msgstr ""
"Это приводит к созданию надежной и гибкой системы пользовательского "
"интерфейса, поскольку она сама настраивает редактор. С ключевым словом "
"``tool`` вы можете запускать любой игровой код в редакторе."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:154
msgid "|image5|"
msgstr "|image5|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:156
#, fuzzy
msgid ""
"*RPG in a Box is a voxel RPG editor made with Godot 2. It uses Godot's UI "
"tools for its node-based programming system and for the rest of the "
"interface.*"
msgstr ""
"*RPG in a Box - это воксельный редактор RPG, сделанный в Godot 2. Он "
"использует инструменты пользовательского интерфейса Godot для своей системы "
"программирования на основе узлов и для остальной части интерфейса.*"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:160
msgid ""
"Put the ``tool`` keyword at the top of any GDScript file and it will run in "
"the editor. This lets you import and export plugins, create plugins like "
"custom level editors, or create scripts with the same nodes and API you use "
"in your projects."
msgstr ""
"Поместите ключевое слово ``tool`` в начало любого файла GDscript, и он будет "
"запущен в редакторе. Это позволяет импортировать и экспортировать плагины, "
"создавать плагины, такие как настраиваемые редакторы уровней, или создавать "
"скрипты с теми же узлами и API, которые вы используете в своих проектах."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:166
msgid "Separate 2D and 3D engines"
msgstr "Отдельные 2D и 3D движки"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:168
msgid ""
"Godot offers dedicated 2D and 3D rendering engines. As a result, **the base "
"unit for 2D scenes is pixels.** Even though the engines are separate, you "
"can render 2D in 3D, 3D in 2D, and overlay 2D sprites and interfaces over "
"your 3D world."
msgstr ""
"Godot предлагает специализированные 2D и 3D движки. В итоге **базовая "
"единица для 2D-сцен - это пиксели.** Несмотря на то, что движки являются "
"отдельными, вы можете отрендерить 2D в 3D, 3D в 2D и накладывать 2D-спрайты "
"и интерфейс поверх 3D-мира."
