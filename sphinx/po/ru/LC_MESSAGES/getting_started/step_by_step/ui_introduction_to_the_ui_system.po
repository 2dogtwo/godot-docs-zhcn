# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-28 16:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:4
msgid "Design interfaces with the Control nodes"
msgstr "Дизайн интерфейса с помощью узлов контроля"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:6
msgid ""
"Computer displays, mobile phones, and TV screens come in all shapes and "
"sizes. To ship a game, you'll need to support different screen ratios and "
"resolutions. It can be hard to build responsive interfaces that adapt to all "
"platforms. Thankfully, Godot comes with robust tools to design and manage a "
"responsive User Interface."
msgstr ""
"Дисплеи компьютеров, мобильных телефонов и экраны телевизоров бывают разных "
"форм и размеров. Чтобы выпустить игру, вам необходимо сделать поддержку "
"разных соотношений сторон и разрешений экрана. Бывает нелегко создать "
"отзывчивый интерфейс, который адаптируется ко всем платформам. К счастью, "
"Godot предоставляет мощный инструментарий для проектирования и управления "
"чуткого пользовательского интерфейса."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:14
msgid "Godot's editor is made with the engine's UI framework"
msgstr ""
"Редактор Godot создан на основе каркаса пользовательского интерфейса движка"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:16
msgid "This guide will get you started with UI design. You will learn:"
msgstr ""
"Это руководство поможет вам начать разработку пользовательского интефейса. "
"Вы узнаете:"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:18
msgid "The five most useful control nodes to build your games' interface"
msgstr ""
"Пять наиболее полезных узлов управления для сборки ваших игровых интерфейсов"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:19
msgid "How to work with the anchor of UI elements"
msgstr "Как работать с якорями элементов пользовательского интерфейса"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:20
msgid ""
"How to efficiently place and arrange your user interface using containers"
msgstr ""
"Как эффективно разместить и упорядочить ваш пользовательский интерфейс с "
"помощью контейнеров"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:22
msgid ""
"The five most common containers (you can learn more about containers in the :"
"ref:`GUI Containers <doc_gui_containers>` documentation page)."
msgstr ""
"Пять наиболее распространенных контейнеров (узнать о контейнерах больше вы "
"сможете на странице документации :ref:`GUI Containers <doc_gui_containers>`)."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:25
msgid ""
"To learn how to control the interface and connect it to other scripts, read :"
"ref:`Build your first game UI in Godot <doc_ui_game_user_interface>`."
msgstr ""
"Чтобы изучить, как управлять интерфейсом и подключать его к другим скриптам, "
"прочтите :ref:`Создание пользовательского интерфейса своей первой игры в "
"Godot <doc_ui_game_user_interface>`."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:28
msgid ""
"To design your UI, you'll use the Control nodes. These are the nodes with "
"green icons in the editor. There are dozens of them, for creating anything "
"from life bars to complex applications. Godot's editor itself is built using "
"Control nodes."
msgstr ""
"Для создания своего интерфейса вы будете использовать узлы Control. В "
"редакторе это узлы с зелеными иконками. Их десятки, для создания чего "
"угодно: от полосок здоровья до более сложных приложений. Сам редактор Godot "
"построен с использованием узлов Control."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:32
msgid ""
"Control nodes have unique properties that allow them to work well with one "
"another. Other visual nodes, like Node2D and Sprite don't have these "
"capabilities. So to make your life easier use Control nodes wherever "
"possible when building your UIs."
msgstr ""
"Узлы Control имеют уникальные свойства, позволяющие им хорошо "
"взаимодействовать друг с другом. Другие визуальные узлы, такие как Node2D и "
"Sprite, не имеют таких возможностей. Поэтому, чтобы облегчить себе жизнь при "
"создании своих пользовательских интерфейсов, используйте узлы Control везде, "
"где это возможно."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:36
msgid "All control nodes share the same main properties:"
msgstr "Все узлы контроля имеют одни и те же основные свойства:"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:38
msgid "Anchor"
msgstr "Якорь (Anchor)"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:39
msgid "Bounding rectangle"
msgstr "Ограничительный прямоугольник (Rect)"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:40
msgid "Focus and focus neighbor"
msgstr "Фокус и фокус соседей (Focus)"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:41
msgid "Size flags"
msgstr "Флаги размера (Size Flags)"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:42
msgid "Margin"
msgstr "Отступ (Margin)"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:43
msgid "The optional UI theme"
msgstr "Настраиваемая тема пользовательского интерфейса (Theme)"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:45
msgid ""
"Once you understand the basics of the Control node, it will take you less "
"time to learn all the nodes that derive from it."
msgstr ""
"Когда вы поймете основы узла Control, вам потребуется меньше времени для "
"изучения всех производных от него узлов."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:50
msgid "The 5 most common UI elements"
msgstr "Пять наиболее распространенных элементов пользовательского интерфейса"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:52
msgid ""
"Godot ships with dozens of Control nodes. A lot of them are here to help you "
"build editor plugins and applications."
msgstr ""
"Godot поставляется с десятками узлов Control. Многие из них нужны для помощи "
"в создании плагинов и приложений редактора."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:55
msgid ""
"For most games, you'll only need five types of UI elements, and a few "
"Containers. These five Control nodes are:"
msgstr ""
"Для большинства игр вам понадобится всего пять типов элементов "
"пользовательского интерфейса и несколько контейнеров. Вот пять узлов Control:"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:58
msgid "Label: for displaying text"
msgstr "Label: для отображения текста"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:59
msgid ""
"TextureRect: used mostly for backgrounds, or everything that should be a "
"static image"
msgstr ""
"TextureRect: используется в основном для заднего плана или всего, что должно "
"быть статическим изображением"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:61
msgid ""
"TextureProgress: for lifebars, loading bars, horizontal, vertical or radial"
msgstr ""
"TextureProgress: для полос здоровья, загрузки, горизонтальных, вертикальных "
"или радиальных"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:63
msgid "NinePatchRect: for scalable panels"
msgstr "NinePatchRect: для масштабируемых панелей"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:64
msgid "TextureButton: to create buttons"
msgstr "TextureButton: для создания кнопок"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:68
msgid "The 5 most common Control nodes for UI design"
msgstr ""
"Пять наиболее распространенных узлов контроля для дизайна пользовательского "
"интерфейса"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:71
msgid "TextureRect"
msgstr "TextureRect"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:73
msgid ""
"**TextureRect** displays a texture or image inside a UI. It seems similar to "
"the Sprite node, but it offers multiple scaling modes. Set the Stretch Mode "
"property to change its behavior:"
msgstr ""
"**TextureRect** отображает текстуру или изображение внутри пользовательского "
"интерфейса. Он похож на узел Sprite, но предлагает несколько режимов "
"масштабирования. Настройте свойство Stretch Mode, чтобы изменить его "
"поведение:"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:77
msgid ""
"``Scale On Expand (compat)`` scales the texture to fit the node's bounding "
"rectangle, only if ``expand`` property is ``true``; otherwise, it behaves "
"like ``Keep`` mode. Default mode for backwards compatibility."
msgstr ""
"``Scale On Expand (Compat)`` масштабирует текстуру в соответствии с "
"ограничивающим прямоугольником узла, только если свойство ``expand`` имеет "
"значение ``true``; в противном случае оно ведет себя, как в режиме ``Keep``. "
"Режим по умолчанию для обратной совместимости."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:80
msgid "``Scale`` scales the texture to fit the node's bounding rectangle."
msgstr ""
"``Scale`` масштабирует текстуру в соответствии с ограничивающим "
"прямоугольником узла."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:81
msgid "``Tile`` makes the texture repeat, but it won't scale."
msgstr "``Tile`` повторяет текстуру, но не масштабирует."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:82
msgid ""
"``Keep`` and ``Keep Centered`` force the texture to remain at its original "
"size, in the top left corner or the center of the frame respectively."
msgstr ""
"``Keep`` и ``Keep Centered`` заставляют текстуру оставаться в исходном "
"размере в левом верхнем углу или в центре кадра соответственно."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:85
msgid ""
"``Keep Aspect`` and ``Keep Aspect Centered`` scales the texture but force it "
"to remain its original aspect ratio, in the top left corner or the center of "
"the frame respectively."
msgstr ""
"``Keep Aspect`` и ``Keep Aspect Centered`` масштабируют текстуру, но "
"заставляют ее сохранять исходное соотношение сторон в левом верхнем углу или "
"в центре кадра соответственно."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:87
msgid ""
"``Keep Aspect Covered`` works just like ``Keep Aspect Centered`` but the "
"shorter side fits the bounding rectangle and the other one clips to the "
"node's limits."
msgstr ""
"``Keep Aspect Covered`` работает так же, как ``Keep Aspect Centered``, но "
"более короткая сторона совпадает с ограничивающим прямоугольником, а другая "
"отсекается границами узла."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:90
msgid ""
"As with Sprite nodes, you can modulate the TextureRect's color. Click the "
"``Modulate`` property and use the color picker."
msgstr ""
"Как и в случае с узлами Sprite, вы можете модулировать цвет TextureRect. "
"Щелкните свойство ``Modulate`` и используйте средство выбора цвета."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:95
msgid "TextureRect modulated with a red color"
msgstr "TextureRect модулирован красным цветом"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:98
msgid "TextureButton"
msgstr "TextureButton"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:100
msgid ""
"**TextureButton** is like TextureRect, except it has 6 texture slots: one "
"for each of the button's states. Most of the time, you'll use the Normal, "
"Pressed, and Hover textures. Focused is useful if your interface listens to "
"the keyboard's input. The sixth image slot, the Click Mask, lets you define "
"the clickable area using a 1-bit, pure black and white image."
msgstr ""
"**TextureButton** похож на TextureRect, за исключением того, что он имеет 6 "
"слотов для текстур: по одному для каждого состояния кнопки. В большинстве "
"случаев вы будете использовать текстуры Normal (нормальное состояние), "
"Pressed (нажатое) и Hover (при наведении). Focused (сфокусированное) "
"полезно, если ваш интерфейс принимает ввод с клавиатуры. Шестой слот "
"изображения, Click Mask (маска клика), позволяет определить доступную для "
"клика область, используя 1-битное изображение, состоящее только из черного и "
"белого цветов."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:107
msgid ""
"In the Base Button section, you'll find a few checkboxes that change how the "
"button behaves. When ``Toggle Mode`` is on, the button will toggle between "
"active and normal states when you press it. ``Disabled`` makes it disabled "
"by default, in which case it will use the ``Disabled`` texture. "
"TextureButton shares a few properties with the texture frame: it has a "
"``modulate`` property, to change its color, and ``Resize`` and ``Stretch`` "
"modes to change its scale behavior."
msgstr ""
"В разделе Base Button вы найдете несколько флажков, которые изменяют "
"поведение кнопки. Когда ``Toggle Mode`` включен, кнопка при нажатии будет "
"переключаться между активным и нормальным состояниями. ``Disabled`` делает "
"ее отключенной по умолчанию — в этом случае она будет использовать текстуру "
"``Disabled``. TextureButton имеет несколько общих свойств с рамкой текстуры: "
"у него есть свойство ``Modulate`` для изменения цвета и режимы ``Resize`` и "
"``Stretch`` для изменения его поведения масштабирования."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:117
msgid "TextureButton and its 5 texture slots"
msgstr "TextureButton и его 5 слотов текстуры"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:120
msgid "TextureProgress"
msgstr "TextureProgress"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:122
msgid ""
"**TextureProgress** layers up to 3 sprites to create a progress bar. The "
"Under and Over textures sandwich the Progress one, which displays the bar's "
"value."
msgstr ""
"**TextureProgress** накладывает до 3 слоев спрайтов для создания шкалы "
"прогресса. Текстуры Under (нижняя) и Over (верхняя) сэндвичем прокладывают "
"между собой текстуру Progress (прогресса), которая отображает значение шкалы."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:126
msgid ""
"The ``Mode`` property controls the direction in which the bar grows: "
"horizontally, vertically, or radially. If you set it to radial, the "
"``Initial Angle`` and ``Fill Degrees`` properties let you limit the range of "
"the gauge."
msgstr ""
"Свойство ``Mode`` контролирует направление, в котором растет шкала "
"прогресса: горизонтально, вертикально или радиально. Если вы установите его "
"на радиальное, то свойства ``Initial Angle`` и ``Fill Degrees`` позволят вам "
"ограничить диапазон датчика."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:131
msgid ""
"To animate the bar, you'll want to look at the Range section. Set the "
"``Min`` and ``Max`` properties to define the range of the gauge. For "
"instance, to represent a character's life, you'll want to set ``Min`` to ``0,"
"`` and ``Max`` to the character's maximum life. Change the ``Value`` "
"property to update the bar. If you leave the ``Min`` and ``Max`` values to "
"the default of ``0`` and ``100,`` and set the ``Value`` property to ``40``, "
"40% of the ``Progress`` texture will show up, and 60% of it will stay hidden."
msgstr ""
"Чтобы анимировать шкалу, вам стоит взглянуть на раздел Range. Настройте "
"свойства ``Min`` и ``Max`` для определения диапазона датчика. Например, "
"чтобы изобразить жизнь персонажа, вам стоит установить ``Min`` на ``0``, а "
"``Max`` на максимальное количество жизни персонажа. Изменяйте свойство "
"``Value`` для обновления шкалы. Если вы оставите значения ``Min`` и ``Max`` "
"по умолчанию на ``0`` и ``100`` и установите свойство ``Value`` на ``40``, "
"то покажется 40% текстуры ``Progress``, а 60% останутся скрытыми."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:141
msgid "TextureProgress bar, two thirds filled"
msgstr "Шкала TextureProgress, заполнено на две трети"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:144
msgid "Label"
msgstr "Label"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:146
msgid ""
"**Label** prints text to the screen. You'll find all its properties in the "
"Label section, in the Inspector. Write the text in the ``Text`` property, "
"and check Autowrap if you want it to respect the textbox's size. If Autowrap "
"is off, you won't be able to scale the node. You can align the text "
"horizontally and vertically with Align and Valign, respectively."
msgstr ""
"**Label** выводит текст на экран. Все его свойства вы найдете в разделе "
"Label, в Инспекторе. Напишите текст в свойстве ``Text`` и проверьте значение "
"свойства Autowrap, если вы хотите, чтобы он соответствовал размеру "
"текстового поля. Если Autowrap выключен, вы не сможете изменять масштаб "
"узла. Вы можете выровнять текст горизонтально и вертикально при помощи "
"свойств Align и Valing соответственно."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:155
msgid "Picture of a Label"
msgstr "Изображение Label"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:158
msgid "NinePatchRect"
msgstr "NinePatchRect"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:160
msgid ""
"**NinePatchRect** takes a texture split in 3 rows and 3 columns. The center "
"and the sides tile when you scale the texture, but it never scales the "
"corners. It is useful to build panels, dialog boxes and scalable backgrounds "
"for your UI."
msgstr ""
"**NinePatchRect** разделяет текстуру на 3 строки и 3 столбца. Центральная и "
"боковые плитки масштабируют текустуру, а углы — никогда. Полезно создавать "
"панели, диалоговые окна и масштабируемые фоны для вашего пользовательского "
"интерфейса."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:167
msgid "NinePatchRect scaled with the min\\_size property"
msgstr "NinePatchRect отмасштабирован с использованием свойства min\\ _size"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:170
msgid "There are two workflows to build responsive UIs"
msgstr "Есть два способа создания отзывчивых интерфейсов"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:172
msgid ""
"There are two workflows to build scalable and flexible interfaces in Godot:"
msgstr "Есть два способа создания масштабируемых и гибких интерфейсов в Godot:"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:174
msgid ""
"You have many container nodes at your disposal that scale and place UI "
"elements for you. They take control over their children."
msgstr ""
"У вас в распоряжении есть множество узлов контейнера, которые масштабируют и "
"размещают элементы интерфейса. Они управляют своими потомками."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:175
msgid ""
"On the other side, you have the layout menu. It helps you to anchor, place "
"and resize a UI element within its parent."
msgstr ""
"С другой стороны, у вас есть меню макета. Оно помогает вам закрепить, "
"разместить и изменить размер элемента внутри его родителя."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:177
msgid ""
"The two approaches are not always compatible. Because a container controls "
"its children, you cannot use the layout menu on them. Each container has a "
"specific effect, so you may need to nest several of them to get a working "
"interface. With the layout approach you work from the bottom up, on the "
"children. As you don't insert extra containers in the scene it can make for "
"cleaner hierarchies, but it's harder to arrange items in a row, column, "
"grid, etc."
msgstr ""
"Эти два подхода не всегда совместимы. Поскольку контейнер управляет своими "
"потомками, вы не можете использовать меню макета на них. Каждый контейнер "
"имеет определенный эффект, так что вам может потребоваться вложить несколько "
"из них, чтобы получить работающий интерфейс. С подходом макета вы работаете "
"снизу вверх, над потомками. Поскольку вы не вставляете дополнительных "
"контейнеров в сцену, это может сделать более чистой иерархию, но так сложнее "
"расположить элементы в ряд, колонку, сетку и прочее."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:179
msgid ""
"As you create UIs for your games and tools, you'll develop a sense for what "
"fits best in each situation."
msgstr ""
"По мере создания интерфейсов для ваших игр и инструментов, вы развиваете "
"ощущение того, что лучше подходит в конкретной ситуации."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:183
msgid "Place UI elements precisely with anchors"
msgstr "Размещайте элементы интерфейса в точности с якорями"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:185
msgid ""
"Control nodes have a position and size, but they also have anchors and "
"margins. Anchors define the origin, or the reference point, for the Left, "
"Top, Right and Bottom edges of the node. Change any of the 4 anchors to "
"change the reference point of the margins."
msgstr ""
"У управляющих узлов есть позиция и размер, но они также имеют якоря и "
"отступы. Якоря определяют начало координат (ориентир) для левого, верхнего, "
"правого и нижнего краёв узла. Изменив любой из 4 якорей, можно сдвинуть "
"ориентир для отступов."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:192
msgid "The anchor property"
msgstr "Свойство якоря"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:195
msgid "How to change the anchor"
msgstr "Как изменять якорь"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:197
msgid ""
"Like any properties, you can edit the 4 anchor points in the Inspector, but "
"this is not the most convenient way. When you select a control node, the "
"layout menu appears above the viewport, in the toolbar. It gives you a list "
"of icons to set all 4 anchors with a single click, instead of using the "
"inspector's 4 properties. The layout menu will only show up when you select "
"a control node."
msgstr ""
"Как и любые свойства, вы можете редактировать 4 якорные точки в Инспекторе, "
"но это не самый удобный путь. Когда вы выделяете управляющий узел, над окном "
"просмотра в панели инструментов появляется меню макета. Оно дает вам список "
"иконок для установки всех 4 якорей одним кликом вместо использования 4 "
"свойств Инспектора. Меню макета будет видно лишь тогда, когда вы выбрали "
"управляющий узел."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:206
msgid "The layout menu in the viewport"
msgstr "Меню макета в окне просмотра"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:209
msgid "Anchors are relative to the parent container"
msgstr "Якоря относительны к родительскому контейнеру"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:211
msgid ""
"Each anchor is a value between 0 and 1. For the left and top anchors, a "
"value of 0 means that without any margin, the node's edges will align with "
"the left and top edges of its parent. For the right and bottom edges, a "
"value of 1 means they'll align with the parent container's right and bottom "
"edges. On the other hand, margins represent a distance to the anchor "
"position in pixels, while anchors are relative to the parent container's "
"size."
msgstr ""
"Каждый якорь — это значение между 0 и 1. Для левого и верхнего якорей, что "
"значится как 0, без каких-либо отступов края узла будут выровнены по левому "
"и верхнему краям его родителя. Для правого и нижнего краёв, что значится как "
"1, они будут выровнены по правому и нижнему краям родительского контейнера. "
"С другой стороны, отступы представляют собой расстояние до позиции якоря в "
"пикселях, в то время как якоря относительны размеру родительского контейнера."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:221
msgid ""
"Margins are relative to the anchor position, which is relative to the "
"anchors. In practice, you'll often let the container update margins for you"
msgstr ""
"Отступы относительны к позиции якоря, которая относительна якорям. На "
"практике, вы зачастую позволяете контейнеру обновлять отступы за вас"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:226
msgid "Margins change with the anchor"
msgstr "Отступы изменяются вместе с якорем"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:228
msgid ""
"Margins update automatically when you move or resize a control node. They "
"represent the distance from the control node's edges to its anchor, which is "
"relative to the parent control node or container. That's why your control "
"nodes should always be inside a container, as we'll see in a moment. If "
"there's no parent, the margins will be relative to the node's own bounding "
"Rectangle, set in the Rect section, in the inspector."
msgstr ""
"Отступы обновляются автоматически, когда вы перемещаете или изменяете размер "
"управляющего узла. Они представляют собой расстояние от краёв управляющего "
"узла до его якоря, который относителен родительскому управляющему узлу или "
"контейнеру. Вот почему ваши управляющие узлы всегда должны быть внутри "
"контейнера, что мы и увидим через мгновение. Если родитель отсутствует, то "
"отступы будут относительны собственному ограничивающему прямоугольнику узла, "
"установленному в разделе \"Rect\" в Инспекторе."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:238
msgid "Margins on a CenterContainer set to the \"Full Rect\" anchor"
msgstr ""
"Отступы для CenterContainer установлены на якорь \"Полный прямоугольник\""

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:240
msgid ""
"Try to change the anchors or nest your Control nodes inside Containers: the "
"margins will update. You'll rarely need to edit the margins manually. Always "
"try to find a container to help you first; Godot comes with nodes to solve "
"all the common cases for you. Need to add space between a lifebar and the "
"border of the screen? Use the MarginContainer. Want to build a vertical "
"menu? Use the VBoxContainer. More on these below."
msgstr ""
"Попробуйте поизменять якоря или вложить ваши узлы Control внутрь контейнеров "
"— отступы обновятся. Вам нечасто потребуется редактировать отступы вручную. "
"Сначала всегда пробуйте найти контейнер; Godot предоставляет узлы для "
"решения всех распространенных случаев за вас. Нужно добавить пространство "
"между шкалой здоровья и границей экрана? Используйте узел MarginContainer. "
"Хотите сделать вертикальное меню? Используйте узел VBoxContainer. Подробнее "
"об этом ниже."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:249
msgid "Use size tags to change how UI elements fill the available space"
msgstr ""
"Используйте размерные тэги, чтобы влиять на то, как элементы интерфейса "
"будут заполнять доступное пространство"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:251
msgid ""
"Every control node has Size Flags. They tell containers how the UI elements "
"should scale. If you add the \"Fill\" flag to the Horizontal or Vertical "
"property, the node's bounding box will take all the space it can, but it'll "
"respect its siblings and retain its size. If there are 3 TextureRect nodes "
"in an HBoxContainer, with the \"Fill\" flags on both axes, they'll each take "
"up to a third of the available space, but no more. The container will take "
"over the node and resize it automatically."
msgstr ""
"Каждый узел управления имеет флаги размера (Size Flags). Они сообщают "
"контейнерам, как элементы пользовательского интерфейса должны "
"масштабироваться. Если добавить флаг \"Fill\" (заполнить) на свойство "
"Horizontal (горизонталь) или Vertical (вертикаль), ограничивающий "
"прямоугольник узла займет всё возможное пространство, но он будет уважать "
"своих братьев и сестёр и сохранит свои размеры. Если в HBoxContainer есть 3 "
"узла TextureRect с флагами \"Fill\" на обеих осях, то каждый из них займет "
"до трети свободного пространства, но не более. Контейнер возьмёт на себя "
"узел и автоматически изменит его размер."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:261
msgid "3 UI elements in an HBoxContainer, they align horizontally"
msgstr "3 элемента интерфейса в HBoxContainer выровнены по горизонтали"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:263
msgid ""
"The \"Expand\" flag lets the UI element take all the space it can, and push "
"against its siblings. Its bounding rectangle will grow against the edges of "
"its parent, or until it's blocked by another UI node."
msgstr ""
"Флаг \"Expand\" позволяет элементу интерфейса заполнить всё возможное "
"пространство и растолкать своих братьев и сестёр. Его ограничивающий "
"прямоугольник будет расти до краёв родительского элемента или пока он не "
"будет заблокирован другим узлом интерфейса."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:269
msgid ""
"The same example as above, but the center node has the \"Expand\" size flag"
msgstr "Такой же пример как и выше, но центральный узел имеет флаг \"Expand\""

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:272
msgid ""
"You'll need some practice to understand the size tags, as their effect can "
"change quite a bit depending on how you set up your interface."
msgstr ""
"Вам потребуется некоторая практика, чтобы понять размерные теги, насколько "
"сильно их эффект может меняться в зависимости от того, как вы настроили свой "
"интерфейс."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:276
msgid "Arrange control nodes automatically with containers"
msgstr "Автоматическая организация управляющих узлов с контейнерами"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:278
msgid ""
"Containers automatically arrange all children Control nodes including other "
"containers in rows, columns, and more. Use them to add padding around your "
"interface or center nodes in their bounding rectangles. All built-in "
"containers update in the editor, so you can see the effect instantly."
msgstr ""
"Контейнеры автоматически организовывают всех потомков управляющих узлов, "
"заключая другие контейнеры в строки, столбцы и прочее. Используйте их, чтобы "
"добавить отступы вокруг вашего интерфейса или центральных узлов в их "
"ограничивающих прямоугольниках. Все встроенные контейнеры обновятся в "
"редакторе так, что вы увидите эффект мгновенно."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:284
msgid ""
"Containers have a few special properties to control how they arrange UI "
"elements. To change them, navigate down to the Custom Constants section in "
"the Inspector."
msgstr ""
"Контейнеры имеют несколько специальных свойств, чтобы контролировать "
"упорядочивание элементов пользовательского интерфейса. Чтобы изменить их, "
"перейдите в раздел «Пользовательские константы» (Custom Constants) в "
"Инспекторе."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:289
msgid "The 5 most useful containers"
msgstr "5 наиболее полезных контейнеров"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:291
msgid ""
"If you build tools, you might need all of the containers. But for most "
"games, a handful will be enough:"
msgstr ""
"Если вы создаёте инструменты, то вам могут понадобиться все контейнеры. Но "
"для большинства игр достаточно нескольких:"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:294
msgid "MarginContainer, to add margins around part of the UI"
msgstr ""
"MarginContainer, для добавления полей вокруг частей пользовательского "
"интерфейса"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:295
msgid "CenterContainer, to center its children in its bounding box"
msgstr "CenterContainer, центрирует своих детей в ограниченных рамках"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:296
msgid ""
"VboxContainer and HboxContainer, to arrange UI elements in rows or columns"
msgstr ""
"VboxContainer and HboxContainer, чтобы упорядочить элементы "
"пользовательского интерфейса в строках или столбцах"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:298
msgid "GridContainer, to arrange Controls nodes in a grid-like pattern"
msgstr "GridContainer, упорядочивает узлы Controls в виде сетки"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:300
msgid ""
"CenterContainer centers all its children inside of its bounding rectangle. "
"It's one you typically use for title screens, if you want the options to "
"stay in the center of the viewport. As it centers everything, you'll often "
"want a single container nested inside it. If you use textures and buttons "
"instead, they'll stack up."
msgstr ""
"CenterContainer центрирует все свои дочерние элементы внутри ограничивающего "
"прямоугольника. Его типично используют для титульных экранов, если "
"необходимо что бы опции оставались ровно посередине окна отображения. "
"Поскольку он центрует все что в нем находится, вам часто потребуется "
"добавлять в него вложенный контейнер. Если же вы используете текстуры и "
"кнопки, то они будут стыковаться один над другим."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:308
msgid ""
"CenterContainer in action. The life bar centers inside its parent container."
msgstr ""
"CenterContainer в действии. Шкала здоровья находится внутри его "
"родительского контейнера."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:311
msgid ""
"The MarginContainer adds a margin on any side of the child nodes. Add a "
"MarginContainer that encompasses the entire viewport to add a separation "
"between the edge of the window and the UI. You can set a margin on the top, "
"left, right, or bottom side of the container. No need to tick the checkbox: "
"click the corresponding value box and type any number. It will activate "
"automatically."
msgstr ""
"MarginContainer добавляет отступ на любой стороне дочерних узлов. Добавьте "
"MarginContainer, который охватывает весь видимый экран, чтобы добавить "
"разделение между краем окна и UI. Вы можете установить отступ в верхней, "
"левой, правой или нижней части контейнера. Не нужно отмечать этот флажок: "
"щелкните соответствующее поле со значением и введите любое число. Он "
"активируется автоматически."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:320
msgid "The MarginContainer adds a 40px margin around the Game User Interface"
msgstr ""
"MarginContainer добавляет 40-пиксельный отступу вокруг игрового "
"пользовательского интерфейса(GUI)"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:322
msgid ""
"There are two BoxContainers: VBoxContainer and HBoxContainer. You cannot add "
"the BoxContainer node itself, as it is a helper class, but you can use "
"vertical and horizontal box containers. They arrange nodes either in rows or "
"columns. Use them to line up items in a shop, or to build complex grids with "
"rows and columns of different sizes, as you can nest them to your heart's "
"content."
msgstr ""
"Есть два BoxContainers: VBoxContainer и HBoxContainer. Вы не можете добавить "
"сам узел BoxContainer, так как он является вспомогательным классом, но вы "
"можете использовать вертикальные и горизонтальные контейнеры. Они "
"упорядочивают узлы в строках или столбцах. Используйте их для выравнивания "
"предметов в магазине или для создания сложных сеток с строками и столбцами "
"разных размеров, так как вы можете вложить их в ваше ядро."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:331
msgid "The HBoxContainer horizontally aligns UI elements"
msgstr ""
"HBoxContainer горизонтально выравнивает элементы пользовательского интерфейса"

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:333
msgid ""
"VBoxContainer automatically arranges its children into a column. It puts "
"them one after the other. If you use the separation parameter, it will leave "
"a gap between its children. HBoxContainer arranges UI elements in a row. "
"It's similar to the VBoxContainer, with an extra ``add_spacer`` method to "
"add a spacer control node before its first child or after its last child, "
"from a script."
msgstr ""
"VBoxContainer автоматически выравнивает свои дочерние элементы в колонку. "
"Один за другим. Для задания разделителя меж ними, используется параметр "
"разделителя. HBoxContainer выравнивает элементы UI в строку. Он похож на "
"VBoxContainer, но с дополнительным методом ``add_spacer``, позволяющим "
"добавлять узел контроля отступа для первого или последнего элементов, прямо "
"из скрипта."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:340
msgid ""
"The GridContainer lets you arrange UI elements in a grid-like pattern. You "
"can only control the number of columns it has, and it will set the number of "
"rows by itself, based on its children's count. If you have nine children and "
"three columns, you will have 9÷3 = 3 rows. Add three more children and "
"you'll have four rows. In other words, it will create new rows as you add "
"more textures and buttons. Like the box containers, it has two properties to "
"set the vertical and horizontal separation between the rows and columns "
"respectively."
msgstr ""
"GridContainer позволяет упорядочивать элементы пользовательского интерфейса "
"в виде сетки. Вы можете контролировать только количество столбцов, он будет "
"устанавливать количество строк сам по себе, на основе подсчета его дочерних "
"элементов. Если у вас девять дочерних элементов и три столбца, у вас будет "
"9÷3 = 3 строки. Добавьте еще три дочерних элемена, и у вас будет четыре "
"ряда. Другими словами, он будет создавать новые строки по мере добавления "
"текстур и кнопок. Как и box container'ы, он имеет два свойства для установки "
"вертикального и горизонтального разделения между строками и столбцами "
"соответственно."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:351
msgid "A GridContainer with 2 columns. It sizes each column automatically."
msgstr "GridContainer с 2 колонками. Он вычисляет их размер автоматически."

#: ../../docs/getting_started/step_by_step/ui_introduction_to_the_ui_system.rst:353
msgid ""
"Godot's UI system is complex, and has a lot more to offer. To learn how to "
"design more advanced interfaces, head to the :ref:`GUI section <toc-learn-"
"features-gui>` of the docs."
msgstr ""
"Система UI в Godot сложна и включает гораздо больше, чем описано здесь. Для "
"получения подробной информации о том, как разрабатывать более продвинутые "
"UI, обратитесь к разделу :ref:`GUI section <toc-learn-features-gui>` в "
"документации."
