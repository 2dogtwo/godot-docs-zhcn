# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-06 14:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:4
msgid "Design a title screen"
msgstr "Дизайн начального экрана"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:6
msgid ""
"In the next two tutorials, you will build two responsive UI (user interface) "
"scenes step-by-step using the engine's UI system:"
msgstr ""
"В следующих двух уроках мы шаг за шагом разберем как создать адаптивный "
"пользовательский интерфейс:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:9
msgid "A main menu."
msgstr "Главное меню."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:10
msgid "A game UI with a health bar, energy bar, bomb and money counters."
msgstr "Игровой UI со шкалой здоровья и энергии, счетчиками бомб и денег."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:12
msgid ""
"You will learn how to design game UIs efficiently, and how to use Godot's "
"Control nodes. This page focuses on the visual part: everything you do from "
"the editor. To learn how to code a life bar, read :doc:`ui_code_a_life_bar`."
msgstr ""
"Вы научитесь разрабатывать UI эффективно, а так же использовать узлы типа "
"\"Control\". Эта страница фокусируется на визуальной части: все что вы "
"можете сделать с помощью редактора. Для того, чтобы научиться писать код для "
"шкалы здоровья, читайте :doc:`ui_code_a_life_bar`."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:20
msgid "The GUI you're going to create."
msgstr "Графический интерфейс, который вы будете создавать."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:22
msgid ""
"Download the project files: :download:`ui_main_menu_design.zip <files/"
"ui_main_menu_design.zip>` and extract the archive. Import the ``start/`` "
"project in Godot to follow this tutorial. The ``end/`` folder contains the "
"final result. You'll find all the sprites in the ``start/assets/main_menu`` "
"folder."
msgstr ""
"Загрузите файлы проекта: :download:`ui_main_menu_design.zip <files/"
"ui_main_menu_design.zip>` и распакуйте полученный архив. Импортируйте проект "
"``start/`` в Godot чтобы продолжить изучение этого руководства. Каталог "
"``end/`` содержит результат этого примера. Вы найдете все спрайты в каталоге "
"``start/assets/main_menu``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:30
#, fuzzy
msgid ""
"Read the :doc:`ui_introduction_to_the_ui_system` first to learn how Godot's "
"UI system works."
msgstr ""
"Сначала прочитайте :doc:`ui_introduction_to_the_ui_system`, чтобы узнать, "
"как работает система пользовательского интерфейса Godot."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:34
msgid "How to design your game UI"
msgstr "Как разработать UI для вашей игры"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:36
msgid ""
"To design a good UI, you want to come up with a rough mockup first: a plain "
"drawing version that focuses on the placement of your UI components, their "
"size, and user interaction. Pen and paper is all you need. You shouldn't use "
"fancy and final graphics at this stage. Then, you only need simple "
"placeholder sprites and you're good to jump into Godot. You want to make "
"sure the players can find their way around the interface using those "
"placeholders."
msgstr ""
"Для проектирования хорошего пользовательского интерфейса следует начать с "
"наброска: начните с бумажной версии и сфокусируйтесь на размещении "
"компонентов пользовательского интерфейса, их размерах и взаимодействии с "
"игроком. Не тратьте время на создание финального варианта графики на этом "
"этапе. Далее подготовьте спрайты-заглушки и разместите из в Godot. Вы должны "
"убедиться в том, что разработанный интерфейс удобен и понятен даже в таком "
"виде."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:46
msgid "The UI's rough plan or mockup"
msgstr "Примерный план или макет UI"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:48
msgid ""
"Placeholder doesn't have to mean ugly, but you should keep the graphics "
"simple and clean. Avoid special effects, animation, and detailed "
"illustration before you have players playtest your UI. Otherwise:"
msgstr ""
"Заполнители не должны быть уродливыми, но вам следует стараться использовать "
"простую графику для них. Избегайте специальных эффектов, анимаций и излишне "
"детализированных иллюстраций до тех пор, пока ваш UI не используется "
"игроками. В противном случае:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:52
msgid ""
"The graphics might skew the players' perception of the experience and you'll "
"miss out on valuable feedback."
msgstr ""
"Слишком сильный упор на графику на этой стадии может исказить восприятие "
"игроками вашего интерфейса и вы лишитесь ценных отзывов."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:54
msgid "If the User Experience doesn't work, you'll have to redo some sprites."
msgstr ""
"Если пользовательский интерфейс не заработает должным образом, придется "
"переделывать часть спрайтов."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:58
msgid ""
"Always try to make the interface work with simple text and boxes first. It's "
"easy to replace the textures later. Professional UX designers often work "
"with plain outlines and boxes in greyscale. When you take colors and fancy "
"visuals away, it's a lot easier to size and place UI elements properly. It "
"helps you refine the design foundation you'll build upon."
msgstr ""
"Всегда старайтесь в начале сделать интерфейс рабочим с простым текстом и "
"графикой. Вы всегда сможете изменить текстуры. Профессиональные UX-дизайнеры "
"используют в работе простые контуры и серые тона. Отказавшись от красивой "
"графики и ярких цветов на этом этапе вам будет гораздо проще подобрать "
"размеры и разместить элементы интерфейса."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:65
msgid "There are two ways to design your UI in Godot. You can:"
msgstr ""
"Существует два способа проектирования пользовательского интерфейса в Godot. "
"Вы можете:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:67
msgid ""
"Build it all in a single scene, and eventually save some branches as "
"reusable scenes."
msgstr ""
"Создать интерфейс в одной сцене и позже сохранить некоторые его части в "
"отдельные сцены для многоразового использования."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:69
msgid ""
"Build template scenes for reusable components and create specific components "
"that inherit from your base scenes."
msgstr ""
"Собрать шаблонные сцены из базовых элементов и создавать определенные "
"компоненты, используя как основу эти шаблоны."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:72
msgid ""
"We will use the first approach, because the first version of your UI may not "
"work as well as you'd like. You're likely to throw parts away and redesign "
"components as you go. When you're sure everything works, it's easy to make "
"some parts reusable, as you'll see below."
msgstr ""
"Мы будем использовать первый подход, потому что первая версия вашего "
"пользовательского интерфейса может работать не так хорошо, как хотелось бы. "
"Вы, скорее всего, отбросите некоторые части и переработаете компоненты "
"интерфейса. Когда вы уверены, что все работает, легко сделать некоторые "
"части многоразовыми, как показано ниже."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:79
msgid ""
"The files you'll find in Godot. The graphics look cleaner than on the rough "
"design, but they're still placeholders."
msgstr ""
"Файлы, которые вы увидите в Godot. Графика выглядит лучше, чем в грубом "
"дизайне, но все еще является незавершенной."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:83
msgid "Design the main menu"
msgstr "Проектирование главного меню"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:85
msgid ""
"Before we jump into the editor, we want to plan how we'll nest containers "
"based on our mockup image."
msgstr ""
"Прежде чем перейти к редактору, мы планируем расположение контейнеров на "
"основе нашего макета."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:89
#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:282
msgid "Break down the UI mockup"
msgstr "Краш-тест UI макета"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:91
msgid "Here are my three rules of thumb to find the right containers:"
msgstr ""
"Это мои три правила большого пальца, чтобы подобрать правильный контейнер:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:93
msgid ""
"Break down the UI into nested boxes, from the largest that contains "
"everything, to the smallest ones, that encompass one widget, like a bar with "
"its label, a panel or a button."
msgstr ""
"Разбейте пользовательский интерфейс на вложенные контейнеры, от большого, в "
"котором содержится все, до маленького, содержащего один виджет, например с "
"полоской состояния и ее названием, панелью или кнопкой."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:96
msgid "If there's some padding around an area, use a ``MarginContainer``."
msgstr ""
"Если требуются некоторые отступы вокруг участка, используйте "
"``MarginContainer``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:97
msgid ""
"If the elements are arranged in rows or columns, use an ``HBoxContainer`` or "
"``VBoxContainer``."
msgstr ""
"Если элементы расположены в строках или столбцах, используйте "
"``HBoxContainer`` или ``VBoxContainer``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:100
msgid ""
"These rules are enough to get us started, and work well for simple "
"interfaces."
msgstr ""
"Этих правил достаточно, чтобы начать, и хорошо работать с простыми "
"интерфейсами."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:103
msgid ""
"For the main menu, the largest box is the entire game window. There's "
"padding between the edges of the window and the first components: this "
"should be a ``MarginContainer``. Then, the screen is split into two columns, "
"so we'll use an ``HBoxContainer``. In the left column, we'll manage the rows "
"with a ``VBoxContainer``. And in the right column, we'll center the "
"illustration with a ``CenterContainer``."
msgstr ""
"Главное меню, это крупнейшее окно всей игры. Есть отступы между краями окна "
"и первого элемента: это должен быть ``MarginContainer``. Затем, экран "
"разделяется на две колонки, так что мы будем использовать ``HBoxContainer``. "
"В левой колонке мы будем управлять строками с помощью ``VBoxContainer``. И в "
"правой колонке будет иллюстрация в центре  ``CenterContainer``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:112
msgid "Interface building blocks, broken down using the three rules of thumb."
msgstr "Блоки интерфейса, разбитые с помощью трёх вышепреведённых правил."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:116
msgid ""
"Containers adapt to the window's resolution and width-to-height ratio. "
"Although we could place UI elements by hand, containers are faster, more "
"precise, and **responsive**."
msgstr ""
"Контейнеры адаптируются к разрешению окна и соотношению ширины к высоте. "
"Хотя мы могли бы разместить элементы UI вручную, но использование "
"контейнеров быстрее, точнее и **отзывчивее(responsive)**."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:121
msgid "Prepare the Main Menu scene"
msgstr "Подготовка сцены главного меню"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:123
msgid ""
"Let's create the main menu. We'll build it in a single scene. To create an "
"empty scene, click on **Scene > New Scene**."
msgstr ""
"Создадим главное меню. Мы создадим его в одной сцене. Чтобы создать пустую "
"сцену, нажмите на меню **Сцена -> Новая Сцена**."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:126
msgid ""
"We have to add a root node before we can save the scene. Your UI's root "
"should be the outermost container or element. In this case it's a "
"``MarginContainer``. ``MarginContainer`` is a good starting point for most "
"interfaces, as you often need padding around the UI. Press :kbd:`Ctrl + S` (:"
"kbd:`Cmd + S` on macOS) to save the scene to the disk. Name it *MainMenu*."
msgstr ""
"Мы должны добавить корневой узел, прежде чем мы сможем сохранить сцену. "
"Корневой элемент UI должен быть самым внешним контейнером или элементом. В "
"данном случае это ``MarginContainer``. ``MarginContainer`` является хорошей "
"отправной точкой для большинства интерфейсов, так как часто требуется "
"заполнение вокруг UI. Нажмите ``Meta+S``, чтобы сохранить сцену на диск. "
"Назовите его *MainMenu*."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:132
msgid ""
"Select the ``MarginContainer`` again, and head to the inspector to define "
"the margins' size. Scroll down the ``Control`` class, to the ``Custom "
"Constants`` section. Unfold it. Set the margins as such:"
msgstr ""
"Снова выберите ``MarginContainer`` и переходите в инспектор, чтобы "
"определить размер полей. Прокрутите вниз класс ``Control``, в раздел "
"``Custom Constants``. Разверните её. Установите такие отступы:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:136
msgid "Margin Right: *120*"
msgstr "Margin Right: *120*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:137
msgid "Margin Top: *80*"
msgstr "Margin Top: *80*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:138
msgid "Margin Left: *120*"
msgstr "Margin Left: *120*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:139
msgid "Margin Bottom: *80*"
msgstr "Margin Bottom: *80*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:141
msgid ""
"We want the container to fit the window. In the toolbar above the Viewport, "
"open the **Layout** menu and select the last option, **Full Rect**."
msgstr ""
"Мы хотим, чтобы контейнер соответствовал окну. На панели инструментов над "
"окном просмотра откройте меню ``Layout`` и выберите последний вариант, "
"``Full Rect``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:145
msgid "Add the UI sprites"
msgstr "Добавление спрайтов"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:147
msgid ""
"Select the ``MarginContainer``, and create the UI elements as "
"``TextureRect`` nodes. We need:"
msgstr ""
"Выберите``MarginContainer`` и создайте узел ``TextureRect``.  Нам нужно:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:150
msgid "the title or logo,"
msgstr "Название или логотип,"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:151
msgid "the three text options as individual nodes,"
msgstr "Три варианта текста, как отдельные узлы,"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:152
msgid "the version note,"
msgstr "Информация о версии,"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:153
msgid "and the main menu's illustration."
msgstr "И иллюстрация главного меню."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:155
#, fuzzy
msgid ""
"Click the **Add Node** button or press :kbd:`Ctrl + A` (:kbd:`Cmd + A` on "
"macOS) on your keyboard. Start to type ``TextureRect`` to find the "
"corresponding node and press enter. With the new node selected, press :kbd:"
"`Ctrl + D` (:kbd:`Cmd + D` on macOS) five times to create five extra "
"``TextureRect`` instances."
msgstr ""
"Нажмите кнопку **Добавить узел**, или нажмите `Ctrl+A` на клавиатуре. "
"Начните вводить `TextureRect`, чтобы найти соответствующий узел, и нажмите "
"Enter. Выбрав новый узел, нажмите `Ctrl+D` пять раз, чтобы создать пять "
"дополнительных экземпляров `TextureRect`."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:160
msgid ""
"Click each of the nodes to select it. In the inspector, find the **Texture** "
"property and click **[empty] > Load**. A file browser opens and lets you "
"pick a sprite to load into the texture slot."
msgstr ""
"Щелкните на каждый из узлов, чтобы выбрать его. В инспекторе найдите "
"свойство **Texture** и нажмите [пусто],  далее \"Загрузить\". Откроется "
"проводник, который позволяет выбрать спрайт для загрузки в слот текстуры."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:166
msgid "The file browser lets you find and load textures."
msgstr "Файловый проводник позволяет найти и загрузить текстуры."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:168
msgid ""
"Repeat the operation for all ``TextureRect`` nodes. You should have the "
"logo, the illustration, the three menu options and the version note, each as "
"a separate node. Then, double click on each of the nodes in the Scene tab to "
"rename them. Nothing has been placed in containers yet so this should look "
"messy."
msgstr ""
"Повторите операцию для всех узлов ``TextureRect``. У вас должен быть "
"логотип, иллюстрация, три опции для меню и информация о версии, каждая как "
"отдельный узел. Затем дважды щелкните на каждом из узлов на вкладке Сцена, "
"чтобы переименовать их. Пока что элементы не были помещены в контейнеры, "
"поэтому это будет выглядеть странно."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:176
msgid "The six nodes with textures loaded."
msgstr "Шесть узлов с загруженными текстурами."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:180
msgid ""
"If you want to support localization in your game, use ``Labels`` for menu "
"options instead of ``TextureRect``."
msgstr ""
"Если вы хотите добавить возможность локализации вашей игры, используйте "
"``Labels`` для опций меню вместо ``TextureRect``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:184
msgid "Add containers to place UI elements automatically"
msgstr "Добавьте контейнеры для автоматического размещения элементов UI"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:186
#, fuzzy
msgid ""
"Our main menu has some margin around the edges of the screen. It is split in "
"two parts: on the left, you have the logo and the menu options. On the "
"right, you have the characters. We can use one of two containers to achieve "
"this: ``HSplitContainer`` or ``HBoxContainer``. Split containers split the "
"area into two: a left and a right side or a top and a bottom side. They also "
"allow the user to resize the left and right areas using an interactive bar. "
"On the other hand, ``HBoxContainer`` just splits itself into as many columns "
"as it has children. Although you can deactivate the split container's resize "
"behavior, I recommend to favor box containers."
msgstr ""
"Наше главное меню имеет некоторые отступы по краям экрана. Они делятся на "
"две части: слева, у вас логотип и меню. Справа - персонажи. Мы можем "
"использовать один из двух контейнеров для достижения этого: "
"``HSplitContainer`` или ``HBoxContainer``. Сплит-контейнеры разделяют "
"область на две части: левую и правую или верхнюю и нижнюю стороны. Они также "
"позволяют пользователю изменять размер левой и правой областей с помощью "
"интерактивной шкалой. С другой стороны, ``HBoxContainer`` просто разделяется "
"на столько столбцов, сколько у него есть детей. Хотя вы можете отключить "
"изменение размера контейнера, я рекомендую использовать контейнеры для "
"контейнеров."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:197
msgid ""
"Select the ``MarginContainer`` and add an ``HBoxContainer``. Then, we need "
"two containers as children of our ``HBoxContainer``: a ``VBoxContainer`` for "
"the menu options on the left, and a ``CenterContainer`` for the illustration "
"on the right."
msgstr ""
"Выберите ``MarginContainer`` и добавьте ``HBoxContainer``. Затем, нам нужны "
"два контейнера, как дети нашего ``HBoxContainer``: ``VBoxContainer`` для "
"опций меню слева, и ``CenterContainer`` для картинки справа."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:204
msgid ""
"You should have four nested containers and the TextureRect nodes sitting "
"aside from it."
msgstr ""
"У вас должно быть четыре вложенных контейнера и узлы TextureRect "
"расположеные отдельно от них."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:207
msgid ""
"In the node tree, select all the ``TextureRect`` nodes that should go on the "
"left side: the logo, the menu options (Continue, NewGame, Options), and the "
"version note. Drag and drop them into the ``VBoxContainer``. The nodes "
"should position automatically."
msgstr ""
"В дереве узлов выберите все узлы ``TextureRect``, которые должны идти с "
"левой стороны: логотип, параметры и информация о версии. Перетащите их в "
"``VBoxContainer``. Узлы должны позиционироваться автоматически."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:214
msgid "Containers automatically place and resize textures"
msgstr "Контейнеры автоматически размещает и изменяет размер текстур"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:216
msgid "We're left with two problems to solve:"
msgstr "Нам осталось решить две проблемы:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:218
msgid "The characters on the right aren't centered."
msgstr "Картинка справа не центрирована."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:219
msgid "There's no space between the logo and the other UI elements."
msgstr "Между логотипом и другими элементами UI нет места."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:221
msgid ""
"To center the characters on the right, first select the ``CenterContainer``. "
"Then in the Inspector, scroll down to the **Size Flags** category and click "
"on the field to the right of the **Vertical** property, and check **Expand** "
"in addition to **Fill**. Do the same for the **Horizontal** property. This "
"makes the ``CenterContainer`` expand into all available space while "
"respecting its neighbour ``VBoxContainer``. Finally, drag and drop the "
"Characters node into the ``CenterContainer``. The Characters element will "
"center automatically."
msgstr ""
"Чтобы центрировать картинку справа, мы будем использовать "
"``CenterContainer``. Добавьте узел ``CenterContainer`` в качестве дочернего "
"элемента ``HBoxContainer``. Затем в инспекторе, прокрутите вниз до ``Size "
"Flags`` и нажмите на поле справа от свойства ``Vertical``, и выберите "
"``Expand``. Сделайте то же самое для свойства ``Horizontal``. Наконец "
"перетащите картинку в ``CenterContainer``. Картинка будет центрирована "
"автоматически."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:232
msgid ""
"The character node centers inside the right half of the screen as soon as "
"you place it inside the CenterContainer."
msgstr ""
"Картинка будет центрирована в правой половине экрана, как только вы "
"поместите её внутрь CenterContainer."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:235
#, fuzzy
msgid ""
"To space out the menu options and the logo on the left, we'll use one final "
"container and its size flags. Select the ``VBoxContainer`` and press :kbd:"
"`Ctrl + A` (:kbd:`Cmd + A` on macOS) to add a new node inside it. Add a "
"second ``VBoxContainer`` and name it *MenuOptions*. Select all three menu "
"options, ``Continue``, ``NewGame`` and ``Options``, and drag and drop them "
"inside the new ``VBoxContainer``. The UI's layout should barely change, if "
"at all."
msgstr ""
"Для разметки пунктов меню и логотипа слева мы будем использовать один "
"последний контейнер и флаги его размеров. Выберите `` VBoxContainer`` и "
"нажмите :kbd:`Meta + A`, чтобы добавить новый узел внутри него. Добавьте "
"второй `` VBoxContainer`` и назовите его * MenuOptions *. Выберите все три "
"пункта меню, `` Continue``, `` NewGame`` и `` Options``, и перетащите их в "
"новый `` VBoxContainer``. Структура пользовательского интерфейса возможно "
"едва измениться, если вообще изменится."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:245
msgid ""
"Place the new container between the other two nodes to retain the UI's "
"layout."
msgstr ""
"Поместите новый контейнер между другими двумя узлами, чтобы сохранить макет "
"пользовательского интерфейса."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:248
msgid ""
"Now we grouped the menu options together, we can tell their container to "
"expand to take as much vertical space as possible. Select the "
"``MenuOptions`` node. In the Inspector, scroll down to the **Size Flags** "
"category. Click on the field to the right of the **Vertical** property, and "
"check **Expand** in addition to **Fill**. The container expands to take all "
"the available vertical space while respecting its neighbors, the ``Logo`` "
"and ``Version`` elements."
msgstr ""
"Теперь мы сгруппировали варианты меню вместе, мы можем указать их "
"контейнерам расшириться как можно больше вертикально. Выберите узел "
"``MenuOptions``. В инспекторе прокрутите вниз до категории ``Size Flags``. "
"Нажмите на поле справа от свойства ``Vertical`` и установите флажок "
"``Expand`` в дополнение к ``Fill``. Контейнер расширится, чтобы взять все "
"доступное вертикальное пространство, уважая при этом своих соседей, ``Logo`` "
"и``Version``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:256
msgid ""
"To center the nodes in the ``VBoxContainer``, scroll to the top of the "
"Inspector and change the **Alignment** property to **Center**."
msgstr ""
"Чтобы центрировать узлы в `VBoxContainer``, прокрутите до верхней части "
"инспектора и измените свойство ``Alignment`` на ``Center``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:261
msgid "The menu options should center vertically in the UI's left column."
msgstr ""
"Пункты меню должны быть выровнены по центру по вертикали в левом столбце "
"пользовательского интерфейса."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:263
msgid ""
"To wrap things up, let's add some separation between the menu options. "
"Expand the **Custom Constants** category below **Size Flags**, and click the "
"field next to the **Separation** parameter. Set it to 30. Once you press "
"enter, the **Separation** property becomes active and Godot adds 30 pixels "
"between menu options."
msgstr ""
"Наконец, давайте добавим некоторое разделение между параметрами меню. "
"Разверните категорию **Custom Constants** которая ниже **Size Flags** и "
"щелкните на поле рядом с параметром **Separation**. Установите его на 30. "
"После нажатия клавиши Enter, свойство **Separation** становится активным и "
"Godot добавляет 30 пикселей между MenuOptions."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:271
msgid "The final interface."
msgstr "Финальный интерфейс."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:273
msgid ""
"Without a single line of code, we have a precise and responsive main menu."
msgstr "Без единой строки кода у нас есть точное и отзывчивое главное меню."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:276
msgid ""
"Congratulations for getting there! You can download the final menu :download:"
"`ui_main_menu_design.zip <files/ui_main_menu_design.zip>` to compare with "
"your own. In the next tutorial, you'll create a Game User Interface with "
"bars and item counters."
msgstr ""
"Поздравляем с завершением! Вы можете скачать `final menu <#>`__, чтобы "
"сравнить с вашим собственным. В следующем курсе уроков вы создадите UI игры "
"с шкалами и инвентарем."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:284
msgid ""
"A responsive User Interface is all about making sure our UIs scale well on "
"all screen types. TV screens and computer displays have different sizes and "
"ratios. In Godot, we use containers to control the position and the size of "
"UI elements."
msgstr ""
"Гибкий пользовательский интерфейс - это способ сделать так, чтобы наши UI "
"элементы менялись в зависимости от разных экранов. Экраны TV и компьютерных "
"дисплеев имеют различные размеры и соотношения. В Godot мы используем "
"контейнеры для управления позицией и размера элемента UI."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:289
msgid ""
"The order in which you nest matters. To see if your UI adapts nicely to "
"different screen ratios, select the root node, press :kbd:`Q` to activate "
"the Select Mode, select the container and click and drag on one of the "
"container's corners to resize it. The UI components should flow inside of it."
msgstr ""
"Порядок, в котором вы располагаете узлы, имеет значение. Чтобы убедиться, "
"что UI хорошо адаптируется к разным соотношениям экрана, выберите корневой "
"узел, нажмите клавишу :kbd:`Q`, чтобы активировать \"Режим Выделения\". "
"Выберите контейнер, нажмите и перетащите один из углов контейнера, чтобы "
"изменить его размер. Компоненты UI должны \"течь\" внутри него."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:295
msgid ""
"You'll notice that although containers move sprites around, they don't scale "
"them. This is normal. We want the UI system to handle different screen "
"ratios, but we also need the entire game to adapt to different screen "
"resolutions. To do this, Godot scales the entire window up and down."
msgstr ""
"Вы заметите, что, хотя контейнеры перемещают спрайты вокруг, они не "
"масштабируют их. Это нормально. Мы хотим, чтобы система могла обрабатывать "
"различные коэффициенты экрана, но нам также нужно чтобы вся игра "
"адаптировалась к различным разрешениям экрана. Для этого Godot масштабирует "
"все окно вверх и вниз."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:301
msgid ""
"You can change the scale mode in the project settings: click **Project > "
"Project Settings** in the top menu. In the window's left column, look for "
"the **Display** category. Click on the **Window** sub-category. On the right "
"side of the window, you'll find a **Stretch** section. The three settings, "
"**Mode**, **Aspect**, and **Shrink**, control the screen size. For more "
"information, see :ref:`doc_multiple_resolutions`."
msgstr ""
"Вы можете изменить режим масштабирования в настройках проекта: выберите меню "
"**Проект > Настройки проекта**. В левом столбце найдите категорию **Экран**. "
"Нажмите на под категорию **Окна**. В правой части окна вы найдете раздел "
"**Растяжение**. Три параметра, **Режим**,** Aspect** и **Shrink** управляют "
"размером экрана. Для получения дополнительной информации см.: :ref:"
"`doc_multiple_resolutions`."
