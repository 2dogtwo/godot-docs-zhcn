# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-27 13:49+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:4
msgid "Your first game"
msgstr "Ваша Первая Игра"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:7
msgid "Overview"
msgstr "Обзор"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:9
msgid ""
"This tutorial will guide you through making your first Godot project. You "
"will learn how the Godot editor works, how to structure a project, and how "
"to build a 2D game."
msgstr ""
"Этот урок поможет вам сделать свой первый проект в Godot. Вы узнаете, как "
"работает редактор Godot, как структурировать проект и как построить 2D-игру."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:13
msgid ""
"This project is an introduction to the Godot engine. It assumes that you "
"have some programming experience already. If you're new to programming "
"entirely, you should start here: :ref:`doc_scripting`."
msgstr ""
"Этот проект представляет собой введение в движок Godot. Предполагается, что "
"у вас уже есть опыт программирования. Если вы новичок в программировании, "
"вам нужно начать отсюда: :ref:`doc_scripting`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:18
msgid ""
"The game is called \"Dodge the Creeps!\". Your character must move and avoid "
"the enemies for as long as possible. Here is a preview of the final result:"
msgstr ""
"Игра называется \"Увернись от Крипов!\". Ваш персонаж должен двигаться и "
"избегать врагов как можно дольше. Вот предварительная демонстрация "
"финального результата:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:24
#, fuzzy
msgid ""
"**Why 2D?** 3D games are much more complex than 2D ones. You should stick to "
"2D until you have a good understanding of the game development process and "
"how to use Godot."
msgstr ""
"**Почему 2D?** 3D-игры намного сложнее, чем 2D. Вы должны придерживаться 2D, "
"пока не получите хорошее представление о процессе разработки игр."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:29
msgid "Project setup"
msgstr "Настройка проекта"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:31
#, fuzzy
msgid ""
"Launch Godot and create a new project. Then, download :download:"
"`dodge_assets.zip <files/dodge_assets.zip>`. This contains the images and "
"sounds you'll be using to make the game. Unzip these files in your project "
"folder."
msgstr ""
"Запустите Godot и создайте новый проект. Затем загрузите :download:"
"`dodge_assets.zip <files/dodge_assets.zip>` - изображения и звуки, которые "
"вы будете использовать для создания игры. Разархивируйте эти файлы в папку "
"вашего проекта."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:36
#, fuzzy
msgid ""
"For this tutorial, we will assume you are familiar with the Godot editor. If "
"you haven't read :ref:`doc_scenes_and_nodes`, do so now for an explanation "
"of setting up a project and using the editor."
msgstr ""
"Для этого урока мы предположим, что вы уже знакомы с редактором. Если вы еще "
"не читали :ref:`doc_scenes_and_nodes`, сделайте это сейчас для объяснения "
"настройки проекта и использования редактора."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:40
#, fuzzy
msgid ""
"This game is designed for portrait mode, so we need to adjust the size of "
"the game window. Click on Project -> Project Settings -> Display -> Window "
"and set \"Width\" to ``480`` and \"Height\" to ``720``."
msgstr ""
"В данной игре будет использоваться портретный вид, поэтому нам нужно "
"настроить размер игрового окна. Нажмите \"Проект\" -> \"Настройки проекта\" -"
"> \"Дисплей\" -> \"Окно\" и установите значения полей \"Ширина\" - 480 и "
"\"Высота\" - 720."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:44
msgid ""
"Also in this section, under the \"Stretch\" options, set ``Mode`` to \"2d\" "
"and ``Aspect`` to \"keep\". This ensures that the game scales consistently "
"on different sized screens."
msgstr ""
"Также в этой секции, под опциями \"Stretch\", установите ``Mode`` на \"2d\" "
"и ``Aspect`` на \"keep\". Это гарантирует, что игра последовательно "
"масштабируется на экранах разного размера."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:49
msgid "Organizing the project"
msgstr "Организация Проекта"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:51
#, fuzzy
msgid ""
"In this project, we will make 3 independent scenes: ``Player``, ``Mob``, and "
"``HUD``, which we will combine into the game's ``Main`` scene. In a larger "
"project, it might be useful to create folders to hold the various scenes and "
"their scripts, but for this relatively small game, you can save your scenes "
"and scripts in the project's root folder, identified by ``res://``.  You can "
"see your project folders in the FileSystem Dock in the lower left corner:"
msgstr ""
"В этом проекте мы создадим 3 независимые сцены: ``Player``, ``Mob`` и "
"``HUD``, которые мы будем комбинировать со сценой ``Main``. В более крупном "
"проекте было бы полезно сделать папки для хранения различных сцен и их "
"скриптов, но для этой, относительно небольшой игры, вы можете сохранять свои "
"сцены и скрипты в корневой папке, называемой ``res://``. Вы можете видеть "
"папки проекта в доке FileSystem (Файловая Система) в верхнем левом углу:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:62
msgid "Player scene"
msgstr "Сцена Игрока"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:64
msgid ""
"The first scene we will make defines the ``Player`` object. One of the "
"benefits of creating a separate Player scene is that we can test it "
"separately, even before we've created other parts of the game."
msgstr ""
"Первая сцена, которую мы создадим, определяет объект ``Player`` (Игрок). "
"Одним из преимуществ создания отдельной сцены игрока является то, что мы "
"можем протестировать ее отдельно, даже до того, как мы создали другие части "
"игры."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:69
msgid "Node structure"
msgstr "Структура нода"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:71
msgid ""
"To begin, we need to choose a root node for the player object. As a general "
"rule, a scene's root node should reflect the object's desired functionality "
"- what the object *is*. Click the \"Other Node\" button and add an :ref:"
"`Area2D <class_Area2D>` node to the scene."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:78
msgid ""
"Godot will display a warning icon next to the node in the scene tree. You "
"can ignore it for now. We will address it later."
msgstr ""
"Godot отобразит значок предупреждения рядом с этим узлом в древе сцены. Пока "
"что не обращайте внимание на это. Мы рассмотрим это позже."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:81
#, fuzzy
msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change the node's name to ``Player`` by double-clicking on it. Now that "
"we've set the scene's root node, we can add additional nodes to give it more "
"functionality."
msgstr ""
"С помощью ``Area2D`` мы можем обнаруживать объекты, которые перекрывают или "
"сталкиваются с игроком. Измените его имя на ``Player``, нажав на имя узла. "
"Это корневой узел сцены. Мы можем добавить к игроку дополнительные узлы для "
"расширения его функциональности."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:86
msgid ""
"Before we add any children to the ``Player`` node, we want to make sure we "
"don't accidentally move or resize them by clicking on them. Select the node "
"and click the icon to the right of the lock; its tooltip says \"Makes sure "
"the object's children are not selectable.\""
msgstr ""
"Прежде чем мы добавим детей на узел ``Player``, мы хотим убедиться, что "
"нажав на них мы не переместим их и не изменим их размер. Выберите узел и "
"нажмите на значок справа от блокировки; его всплывающая подсказка гласит: "
"\"Гарантирует, что дети объекта не могут быть выбраны.\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:93
msgid ""
"Save the scene. Click Scene -> Save, or press :kbd:`Ctrl + S` on Windows/"
"Linux or :kbd:`Cmd + S` on macOS."
msgstr ""
"Сохраните сцену. Нажмите \"Сцена\" -> \"Сохранить\" в верхней панели или "
"нажмите сочетание клавиш\"Ctrl+S\" на Windows/Linux или ``Command+S`` на Mac."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:95
msgid "For this project, we will be following the Godot naming conventions."
msgstr "Для этого проекта мы будем следовать правилам именования Godot."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:97
msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Классы (узлы) используют PascalCase, переменные и функции - "
"snake_case, константы - ALL_CAPS (см. :ref:`doc_gdscript_styleguide`)."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:101
msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`).  Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#**: Классы, экспортируемые переменные и методы используют PascalCase, "
"приватные поля - _camelCase, локальные переменные и параметры - сamelCase "
"(см. :ref:`doc_c_sharp_styleguide`).  Будьте осторожны, набирайте имена "
"методов точно при подключении сигналов."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:108
msgid "Sprite animation"
msgstr "Анимация Спрайтов"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:110
#, fuzzy
msgid ""
"Click on the ``Player`` node and add an :ref:`AnimatedSprite "
"<class_AnimatedSprite>` node as a child. The ``AnimatedSprite`` will handle "
"the appearance and animations for our player. Notice that there is a warning "
"symbol next to the node. An ``AnimatedSprite`` requires a :ref:`SpriteFrames "
"<class_SpriteFrames>` resource, which is a list of the animations it can "
"display. To create one, find the ``Frames`` property in the Inspector and "
"click \"[empty]\" -> \"New SpriteFrames\". Click again to open the "
"\"SpriteFrames\" panel:"
msgstr ""
"Кликните на узел ``Player`` и добавьте дочерний узел :ref:`AnimatedSprite "
"<class_AnimatedSprite>`. ``AnimatedSprite`` будет обрабатывать внешний вид и "
"анимации для нашего игрока. Обратите внимание на символ предупреждения рядом "
"с узлом. ``AnimatedSprite`` требует ресурс :ref:`SpriteFrames "
"<class_SpriteFrames>`, который представляет собой список отображаемых "
"анимаций. Чтобы его создать, найдите свойство ``Frames`` в окне инспектора и "
"кликните на «[empty]»-> «New SpriteFrames». Далее, в том же месте, нажмите "
"кнопку ``<SpriteFrames>``. Панель «SpriteFrames» откроется автоматически."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:121
#, fuzzy
msgid ""
"On the left is a list of animations. Click the \"default\" one and rename it "
"to \"walk\". Then click the \"New Animation\" button to create a second "
"animation named \"up\". Find the player images in the \"FileSystem\" tab - "
"they're in the ``art`` folder you unzipped earlier. Drag the two images for "
"each animation, named ``playerGrey_up[1/2]`` and ``playerGrey_walk[1/2]``, "
"into the \"Animation Frames\" side of the panel for the corresponding "
"animation:"
msgstr ""
"Слева находится список анимаций. Щелкните на \"default\" и переименуйте на "
"\"right\". Затем щелкните кнопку \"Add\" для создания второй анимации под "
"именем \"up\". Для каждой анимации, перетащите на сторону \"Animation Frames"
"\" два изображения с именами ``playerGrey_up[1/2]`` и "
"``playerGrey_walk[1/2]``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:130
msgid ""
"The player images are a bit too large for the game window, so we need to "
"scale them down. Click on the ``AnimatedSprite`` node and set the ``Scale`` "
"property to ``(0.5, 0.5)``. You can find it in the Inspector under the "
"``Node2D`` heading."
msgstr ""
"Изображения игрока немного великоваты для игрового окна, потому нам надо их "
"слегка уменьшить. Щелкните на узле  ``AnimatedSprite`` и установите параметр "
"``Scale`` в ``(0.5, 0.5)``. Вы можете найти его в Инспекторе, под заголовком "
"``Node2D``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:137
msgid ""
"Finally, add a :ref:`CollisionShape2D <class_CollisionShape2D>` as a child "
"of ``Player``. This will determine the player's \"hitbox\", or the bounds of "
"its collision area. For this character, a ``CapsuleShape2D`` node gives the "
"best fit, so next to \"Shape\" in the Inspector, click \"[empty]\"\" -> "
"\"New CapsuleShape2D\".  Using the two size handles, resize the shape to "
"cover the sprite:"
msgstr ""
"Наконец, добавьте :ref:`CollisionShape2D <class_CollisionShape2D>` в "
"качестве дочернего узла в ``Player``. Это позволит задать игроку \"Hitbox\" "
"или, иначе говоря, границы зоны определения столкновений. Для этого "
"персонажа лучше всего подходит узел ``CapsuleShape2D``, поэтому далее идем в "
"Инспектор, и в разделе \"Shape\" щелкаем \"[empty]\"\" -> \"New "
"CapsuleShape2D\". Подгоните размер фигуры под размер изображения:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:146
msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr "Когда вы закончите, сцена с вашим ``Player`` будет выглядеть вот так:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:150
msgid "Make sure to save the scene again after these changes."
msgstr "После этих изменений обязательно сохраните сцену еще раз"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:153
msgid "Moving the player"
msgstr "Движение Игрока"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:155
#, fuzzy
msgid ""
"Now we need to add some functionality that we can't get from a built-in "
"node, so we'll add a script. Click the ``Player`` node and click the "
"\"Attach Script\" button:"
msgstr ""
"Теперь нам надо добавить немного функционала, который мы не можем получить с "
"помощью встроенных узлов и поэтому мы добавим скрипт. Щелкните на узле "
"``Player`` и нажмите кнопку \"Add Script\":"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:161
msgid ""
"In the script settings window, you can leave the default settings alone. "
"Just click \"Create\":"
msgstr ""
"В окне настроек скрипта вы можете оставить все настройки по умолчанию. "
"Просто нажмите \"Create\":"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:164
msgid ""
"If you're creating a C# script or other languages, select the language from "
"the `language` drop down menu before hitting create."
msgstr ""
"Если вы создаете скрипт на C# или другом языке, выберете нужный вам язык в "
"выпадающем меню `language` перед тем как создать его."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:169
msgid ""
"If this is your first time encountering GDScript, please read :ref:"
"`doc_scripting` before continuing."
msgstr ""
"Если вы первый раз столкнулись с GDScript, то, прежде чем продолжить, "
"пожалуйста прочитайте :ref:`doc_scripting`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:172
msgid "Start by declaring the member variables this object will need:"
msgstr ""
"Начните с объявления переменных - членов, которые понадобятся этому объекту:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:193
msgid ""
"Using the ``export`` keyword on the first variable ``speed`` allows us to "
"set its value in the Inspector. This can be handy for values that you want "
"to be able to adjust just like a node's built-in properties. Click on the "
"``Player`` node and you'll see the property now appears in the \"Script "
"Variables\" section of the Inspector. Remember, if you change the value "
"here, it will override the value written in the script."
msgstr ""
"Использование ключевого слова ``export`` у первой переменной ``speed`` "
"позволяет устанавливать ее значение в Инспекторе. Это может быть полезно, "
"если вы хотите изменять значения точно так же как и встроенные свойства "
"узла. Щелкните на узел ``Player`` и вы увидите, что свойство появилось в "
"разделе \"Script Variables\" в Инспекторе. Помните, что если изменить "
"значение здесь, то оно перезапишет значение, установленное в скрипте."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:200
msgid ""
"If you're using C#, you need to (re)build the project assemblies whenever "
"you want to see new export variables or signals. This build can be manually "
"triggered by clicking the word \"Mono\" at the bottom of the editor window "
"to reveal the Mono Panel, then clicking the \"Build Project\" button."
msgstr ""
"Если вы используете C#, вам нужно (пере)собирать сборки проекта всякий раз, "
"когда вы хотите увидеть новые экспортируемые переменные или сигналы. Эта "
"сборка может быть запущена вручную путем нажатия на слово \"Mono\" в нижней "
"части окна редактора, чтобы открыть Mono Panel, а затем на кнопку \"Build "
"Project\"."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:208
msgid ""
"The ``_ready()`` function is called when a node enters the scene tree, which "
"is a good time to find the size of the game window:"
msgstr ""
"Функция ``_ready ()`` вызывается, когда узел входит в дерево сцены, что "
"является хорошим моментом для определения размера игрового окна:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:224
msgid ""
"Now we can use the ``_process()`` function to define what the player will "
"do. ``_process()`` is called every frame, so we'll use it to update elements "
"of our game, which we expect will change often. For the player, we need to "
"do the following:"
msgstr ""
"Теперь мы можем использовать функцию ``_process()`` для определения того, "
"что игрок будет делать. ``_process()`` вызывается каждый кадр, поэтому мы "
"будем использовать ее для обновления состояния тех элементов нашей игры, "
"которые будут часто изменяться. Для игрока, сделаем следующее:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:229
msgid "Check for input."
msgstr "Проверка ввода."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:230
msgid "Move in the given direction."
msgstr "Перемещение в заданном направлении."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:231
msgid "Play the appropriate animation."
msgstr "Воспроизведение соответствующей анимации."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:233
msgid ""
"First, we need to check for input - is the player pressing a key? For this "
"game, we have 4 direction inputs to check. Input actions are defined in the "
"Project Settings under \"Input Map\". Here, you can define custom events and "
"assign different keys, mouse events, or other inputs to them. For this demo, "
"we will use the default events that are assigned to the arrow keys on the "
"keyboard."
msgstr ""
"Во-первых, нам нужно обрабатывать ввод с клавиатуры (нажимает ли игрок "
"клавишу?). В этой игре у нас есть 4 направления движения, соответственно "
"кнопок управляющих движением тоже будет 4. Назначить действия на "
"определённые клавиши можно в настройках проекта в разделе \"Список действий"
"\". Для данной демонстрации назначать клавиши не понадобится, потому что мы "
"будем использовать действия назначенные по-умолчанию (стрелками на "
"клавиатуре)."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:240
#, fuzzy
msgid ""
"You can detect whether a key is pressed using ``Input.is_action_pressed()``, "
"which returns ``true`` if it's pressed or ``false`` if it isn't."
msgstr ""
"Вы можете определить, нажата ли клавиша с помощью функции ``Input."
"is_action_pressed() ``, которая возвращает ``true``, если клавиша нажата, "
"или ``false``, если нет."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:302
#, fuzzy
msgid ""
"We start by setting the ``velocity`` to ``(0, 0)`` - by default, the player "
"should not be moving. Then we check each input and add/subtract from the "
"``velocity`` to obtain a total direction. For example, if you hold ``right`` "
"and ``down`` at the same time, the resulting ``velocity`` vector will be "
"``(1, 1)``. In this case, since we're adding a horizontal and a vertical "
"movement, the player would move *faster* diagonally than if it just moved "
"horizontally."
msgstr ""
"Начнём с того, что установим значение ``velocity`` в``(0, 0)`` - по "
"умолчанию игрок двигаться не должен. Затем, мы проверяем каждый ввод и "
"добавляем/вычитаем значение из ``velocity``, чтобы получить общее "
"направление. Например, если вы одновременно удерживаете ``right`` и "
"``down``, полученный вектор ``velocity`` будет ``(1, 1) ``. В этом случае, "
"поскольку мы добавляем горизонтальное и вертикальное движение, игрок будет "
"двигаться *быстрее*, чем если бы он перемещался  только по горизонтали."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:309
#, fuzzy
msgid ""
"We can prevent that if we *normalize* the velocity, which means we set its "
"*length* to ``1``, then multiply by the desired speed. This means no more "
"fast diagonal movement."
msgstr ""
"Можем избежать этого, если мы *нормализуем* скорость, что означает, что мы "
"устанавливаем ее *длину* на ``1`` и умножаем на желаемую скорость. Это "
"означает отсутствие более быстрого диагонального движения."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:313
msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`. It's good to "
"know but won't be necessary for the rest of this tutorial."
msgstr ""
"Если вы никогда раньше не использовали векторную математику или нуждаетесь в "
"повторении, вы можете увидеть объяснение использования вектора в Godot по "
"ссылке :ref:`doc_vector_math`. Ее полезно знать, но она не понадобится для "
"остальной части этого урока."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:317
#, fuzzy
msgid ""
"We also check whether the player is moving so we can call ``play()`` or "
"``stop()`` on the AnimatedSprite."
msgstr ""
"Мы также проверяем, движется ли игрок, чтобы мы могли запустить или "
"остановить анимацию AnimatedSprite."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:320
msgid ""
"``$`` is shorthand for ``get_node()``. So in the code above, ``"
"$AnimatedSprite.play()`` is the same as ``get_node(\"AnimatedSprite\")."
"play()``."
msgstr ""
"``$`` является сокращением для ``get_node()``. Поэтому в приведенном выше "
"коде ``$AnimatedSprite.play()`` это то же самое, что и "
"``get_node(\"AnimatedSprite\").play()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:323
msgid ""
"In GDScript, ``$`` returns the node at the relative path from the current "
"node, or returns ``null`` if the node is not found. Since AnimatedSprite is "
"a child of the current node, we can use ``$AnimatedSprite``."
msgstr ""
"В GDScript, ``$`` возвращает узел по относительному пути от текущего узла "
"или возвращает ``null``, если узел не найден. Поскольку AnimatedSprite "
"является дочерним элементом текущего узла, мы можем использовать ``"
"$AnimatedSprite``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:326
#, fuzzy
msgid ""
"Now that we have a movement direction, we can update the player's position. "
"We can also use ``clamp()`` to prevent it from leaving the screen. "
"*Clamping* a value means restricting it to a given range. Add the following "
"to the bottom of the ``_process`` function (make sure it's not indented "
"under the `else`):"
msgstr ""
"Теперь, когда у нас есть направление движения, мы можем обновить позицию "
"игрока. Мы также можем использовать ``clamp()``, чтобы он не покинул экран. "
"*Clamping* означает ограничение движения диапазоном.Добавьте следующее в "
"конец функции ``_process``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:347
msgid ""
"The `delta` parameter in the `_process()` function refers to the *frame "
"length* - the amount of time that the previous frame took to complete. Using "
"this value ensures that your movement will remain consistent even if the "
"frame rate changes."
msgstr ""
"Параметр \"delta\" в функции \"_process()\" означает *длительность кадра*, "
"то есть время, потраченное на завершение обработки предыдущего кадра. "
"Благодаря использованию этого значения скорость движения будет постоянной "
"даже при изменении частоты кадров."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:352
msgid ""
"Click \"Play Scene\" (``F6``) and confirm you can move the player around the "
"screen in all directions."
msgstr ""
"Нажмите \"Воспроизвести сцену\" (``F6``) и удостоверьтесь, что вы можете "
"перемещать игрока по экрану во всех направлениях."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:355
msgid "If you get an error in the \"Debugger\" panel that says"
msgstr "Если вы получаете ошибку в панели \"Отладчик\", которая говорит"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:357
msgid ""
"``Attempt to call function 'play' in base 'null instance' on a null "
"instance``"
msgstr ""
"``Попытка вызова функции 'play' в основании 'null instance' на нулевом "
"экземпляре``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:359
#, fuzzy
msgid ""
"this likely means you spelled the name of the AnimatedSprite node wrong. "
"Node names are case-sensitive and ``$NodeName`` must match the name you see "
"in the scene tree."
msgstr ""
"Если в панели \"Отладчик\" вы получили сообщение об ошибке, которая "
"ссылается на \"несуществующий экземпляр\", это, скорее всего, означает, что "
"вы ввели неправильное имя узла. Имена узлов чувствительны к регистру, а ``"
"$NodeName`` или ``get_node(\"NodeName\")`` должны совпадать с именем, "
"которое вы видите в дереве сцены."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:364
msgid "Choosing animations"
msgstr "Выбор анимации"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:366
#, fuzzy
msgid ""
"Now that the player can move, we need to change which animation the "
"AnimatedSprite is playing based on its direction. We have the \"walk\" "
"animation, which shows the player walking to the right. This animation "
"should be flipped horizontally using the ``flip_h`` property for left "
"movement. We also have the \"up\" animation, which should be flipped "
"vertically with ``flip_v`` for downward movement. Let's place this code at "
"the end of the ``_process()`` function:"
msgstr ""
"Теперь, когда игрок может двигаться, нам нужно изменять анимацию "
"AnimatedSprite в зависимости от направления движения. У нас есть анимация "
"\"вправо\", которую нужно перевернуть горизонтально, используя свойство "
"``flip_h`` для левого движения, и анимация \"вверх\", которую нужно "
"перевернуть вертикально с помощью ``flip_v`` для движения вниз. Давайте "
"поместим следующий код в конец нашей функции ``_process()``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:401
#, fuzzy
msgid ""
"The boolean assignments in the code above are a common shorthand for "
"programmers. Since we're doing a comparison test (boolean) and also "
"*assigning* a boolean value, we can do both at the same time. Consider this "
"code versus the one-line boolean assignment above:"
msgstr ""
"Логическое присваивания в коде выше, является общим сокращением для "
"программистов. Рассмотрим-ка вот этот код в сравнении с сокращенным "
"присваиванием выше:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:425
msgid ""
"Play the scene again and check that the animations are correct in each of "
"the directions."
msgstr ""
"Воспроизведите сцену еще раз и проверьте правильность анимации в каждом из "
"направлений."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:428
msgid ""
"A common mistake here is to type the names of the animations wrong. The "
"animation names in the SpriteFrames panel must match what you type in the "
"code. If you named the animation ``\"Walk\"``, you must also use a capital "
"\"W\" in the code."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:433
#, fuzzy
msgid ""
"When you're sure the movement is working correctly, add this line to "
"``_ready()``, so the player will be hidden when the game starts:"
msgstr ""
"Снова запустите сцену и убедитесь, что анимации правильны для каждого из "
"направлений. Когда вы будете уверены, что движение работает правильно, "
"добавьте эту строку в функцию ``_ready()``, чтобы игрок был скрыт, когда "
"игра начнётся:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:446
msgid "Preparing for collisions"
msgstr "Подготовка к столкновениям"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:448
msgid ""
"We want ``Player`` to detect when it's hit by an enemy, but we haven't made "
"any enemies yet! That's OK, because we're going to use Godot's *signal* "
"functionality to make it work."
msgstr ""
"Мы хотим, чтобы ``Player`` обнаруживал столкновение с врагом, но мы еще не "
"сделали никаких врагов! Это нормально, потому что мы будем использовать "
"такой функционал Godot, как *сигнал*."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:452
msgid "Add the following at the top of the script, after ``extends Area2d``:"
msgstr "Добавьте следующий код в начало скрипта, после ``extends Area2d``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:466
msgid ""
"This defines a custom signal called \"hit\" that we will have our player "
"emit (send out) when it collides with an enemy. We will use ``Area2D`` to "
"detect the collision. Select the ``Player`` node and click the \"Node\" tab "
"next to the Inspector tab to see the list of signals the player can emit:"
msgstr ""
"Это определяет пользовательский сигнал под названием \"hit\", который наш "
"игрок будет излучать (отправлять), когда он сталкивается с противником. Мы "
"будем использовать ``Area2D`` для обнаружения столкновения. Выберите нод "
"``Player`` и щелкните вкладку \"Node\" рядом со вкладкой \"Inspector\", "
"чтобы просмотреть список сигналов, которые может излучать игрок:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:473
#, fuzzy
msgid ""
"Notice our custom \"hit\" signal is there as well! Since our enemies are "
"going to be ``RigidBody2D`` nodes, we want the ``body_entered(body: Node)`` "
"signal. This signal will be emitted when a body contacts the player. Click "
"\"Connect..\" and the \"Connect a Signal\" window appears. We don't need to "
"change any of these settings so click \"Connect\" again. Godot will "
"automatically create a function in your player's script."
msgstr ""
"Обратите внимание, что наш пользовательский сигнал \"hit\" там также есть! "
"Поскольку наши противники будут узлами ``RigidBody2D``, нам нужен сигнал "
"``body_entered(Object body)``; он будет вызываться, когда тело (body) "
"контактирует с игроком. Нажмите \"Подключить..\", а затем снова \"Подключить"
"\" в окне \"Подключение сигнала\". Нам не нужно изменять какие-либо из этих "
"настроек - Godot автоматически создаст функцию, называемую "
"``_on_Player_body_entered`` в скрипте вашего игрока."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:482
msgid ""
"Note the green icon indicating that a signal is connected to this function. "
"Add this code to the function:"
msgstr ""
"Обратите внимание на зеленый значок, указывающий на то, что сигнал подключен "
"к этой функции. Добавьте этот код в функцию:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:502
msgid ""
"Each time an enemy hits the player, the signal is going to be emitted. We "
"need to disable the player's collision so that we don't trigger the ``hit`` "
"signal more than once."
msgstr ""
"Каждый раз, когда противник атакует игрока, будет выпускаться сигнал. Мы "
"должны отключить столкновение игрока, чтобы не вызывать сигнал ``hit``  по "
"нескольку раз."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:506
#, fuzzy
msgid ""
"Disabling the area's collision shape can cause an error if it happens in the "
"middle of the engine's collision processing. Using ``set_deferred()`` tells "
"Godot to wait to disable the shape until it's safe to do so."
msgstr ""
"Отключение зоны столкновения может привести к ошибке, если это произойдет во "
"время обработки столкновений движка. Использование ``call_deferred()`` "
"позволяет нам заставить Godot ждать отключения фигуры, пока это не будет "
"безопасно."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:510
#, fuzzy
msgid ""
"The last piece is to add a function we can call to reset the player when "
"starting a new game."
msgstr ""
"Последняя деталь для нашего игрока заключается в том, чтобы добавить "
"функцию, которую мы можем вызвать для перезагрузки игрока при запуске новой "
"игры."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:531
msgid "Enemy scene"
msgstr "Сцена Врага"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:533
#, fuzzy
msgid ""
"Now it's time to make the enemies our player will have to dodge. Their "
"behavior will not be very complex: mobs will spawn randomly at the edges of "
"the screen, choose a random direction, and move in a straight line."
msgstr ""
"Теперь пришло время сделать врагов, от которых нашему игроку предстоит "
"уклоняться. Их поведение будет не очень сложным: мобы будут появляться "
"случайно по краям экрана и перемещаться в случайном направлении по прямой "
"линии, а затем исчезать, когда они выходят за экран."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:537
#, fuzzy
msgid ""
"We'll create a ``Mob`` scene, which we can then *instance* to create any "
"number of independent mobs in the game."
msgstr ""
"Сделаем это в сцене ``Mob``, которую затем мы можем *инстанцировать*, чтобы "
"создать любое количество независимых мобов в игре."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:540
msgid "See :ref:`doc_instancing` to learn more about instancing."
msgstr ""
"Посмотрите :ref:`doc_instancing`, чтобы узнать больше об инстанцировании."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:543
msgid "Node setup"
msgstr "Настройка узла"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:545
#, fuzzy
msgid "Click Scene -> New Scene and add the following nodes:"
msgstr "Нажмите \"Сцена\" -> \"Новая сцена\", и так мы создадим Моба."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:547
msgid ":ref:`RigidBody2D <class_RigidBody2D>` (named ``Mob``)"
msgstr ":ref:`RigidBody2D <class_RigidBody2D>` (названный ``Mob``)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:549
msgid ":ref:`AnimatedSprite <class_AnimatedSprite>`"
msgstr ":ref:`AnimatedSprite <class_AnimatedSprite>`"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:550
msgid ":ref:`CollisionShape2D <class_CollisionShape2D>`"
msgstr ":ref:`CollisionShape2D <class_CollisionShape2D>`"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:551
#, fuzzy
msgid ":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>`"
msgstr ""
":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>` (названный "
"``Visibility``)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:553
msgid ""
"Don't forget to set the children so they can't be selected, like you did "
"with the Player scene."
msgstr ""
"Не забудьте настроить дочерние узлы, чтобы они не могли быть выбраны, как вы "
"это делали со сценой игрока."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:556
msgid ""
"In the :ref:`RigidBody2D <class_RigidBody2D>` properties, set ``Gravity "
"Scale`` to ``0``, so the mob will not fall downward. In addition, under the "
"``PhysicsBody2D`` section, click the ``Mask`` property and uncheck the first "
"box. This will ensure the mobs do not collide with each other."
msgstr ""
"В свойствах :ref:`RigidBody2D <class_RigidBody2D>` установите в поле "
"``Gravity Scale`` значение ``0``, чтобы моб не упал вниз. Кроме того, в "
"разделе ``PhysicsBody2D`` выберите свойство ``Mask`` и снимите первый "
"флажок. Это гарантирует, что мобы не столкнутся друг с другом."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:563
#, fuzzy
msgid ""
"Set up the :ref:`AnimatedSprite <class_AnimatedSprite>` like you did for the "
"player. This time, we have 3 animations: ``fly``, ``swim``, and ``walk``. "
"There are two images for each animation in the art folder."
msgstr ""
"Настройте :ref:`AnimatedSprite <class_AnimatedSprite>` как вы сделали это "
"для игрока. На этот раз у нас есть 3 анимации: ``fly``, ``swim`` и ``walk``. "
"Установите свойство ``Playing`` в Инспекторе на \"On\" и настройте параметр "
"\"Speed (FPS)\", как показано ниже. Мы будем выбирать одну из этих анимаций "
"случайным образом, чтобы мобы имели некоторое разнообразие."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:567
msgid "Adjust the \"Speed (FPS)\" to ``3`` for all animations."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:571
#, fuzzy
msgid "Set the ``Playing`` property in the Inspector to “On”."
msgstr "Установите в свойстве ``script`` в Инспекторе Ваш собственный скрипт."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:573
msgid ""
"We'll select one of these animations randomly so that the mobs will have "
"some variety."
msgstr ""
"Мы выберем одну из этих анимаций случайным образом, так что мобы будут иметь "
"некоторое разнообразие."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:575
msgid ""
"Like the player images, these mob images need to be scaled down. Set the "
"``AnimatedSprite``'s ``Scale`` property to ``(0.75, 0.75)``."
msgstr ""
"Также как изображения игрока, изображения мобов нужно уменьшить. Установите "
"для ``AnimatedSprite`` в свойстве ``Scale`` значение ``(0.75, 0.75)``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:578
#, fuzzy
msgid ""
"As in the ``Player`` scene, add a ``CapsuleShape2D`` for the collision. To "
"align the shape with the image, you'll need to set the ``Rotation Degrees`` "
"property to ``90`` (under \"Transform\" in the Inspector)."
msgstr ""
"Как и в сцене ``Player``, добавьте узел ``CapsuleShape2D`` для расчета "
"столкновений. Чтобы выровнять фигуру с изображением, вам нужно установить в "
"свойство ``Rotation Degrees`` значение ``90`` под `` Node2D``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:582
#, fuzzy
msgid "Save the scene."
msgstr "Сохранить сцену"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:585
msgid "Enemy script"
msgstr "Скрипт врага"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:587
msgid "Add a script to the ``Mob`` and add the following member variables:"
msgstr "Прикрепите скрипт к ``Mob`` и добавьте следующие переменные:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:611
#, fuzzy
msgid ""
"When we spawn a mob, we'll pick a random value between ``min_speed`` and "
"``max_speed`` for how fast each mob will move (it would be boring if they "
"were all moving at the same speed)."
msgstr ""
"Во время появления моба, выберем случайное значение между ``min_speed`` и "
"``max_speed`` для определения того, как быстро каждый моб будет двигаться "
"(было бы скучно, если бы все они двигались с одинаковой скоростью). Также у "
"нас есть массив, содержащий имена трех анимаций, которые мы будем выбирать "
"случайным образом. Убедитесь, что имена анимаций в скрипте совпадают с "
"именами анимаций в SpriteFrame resource."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:615
msgid ""
"Now let's look at the rest of the script. In ``_ready()`` we randomly choose "
"one of the three animation types:"
msgstr ""
"Теперь давайте посмотрим на остальную часть скрипта. В функции ``_ready()`` "
"мы случайным образом выбираем один из трех типов анимации:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:635
msgid ""
"First, we get the list of animation names from the AnimatedSprite's "
"``frames`` property. This returns an Array containing all three animation "
"names: ``[\"walk\", \"swim\", \"fly\"]``."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:639
msgid ""
"We then need to pick a random number between ``0`` and ``2`` to select one "
"of these names from the list (array indices start at ``0``). ``randi() % n`` "
"selects a random integer between ``0`` and ``n-1``."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:643
#, fuzzy
msgid ""
"You must use ``randomize()`` if you want your sequence of \"random\" numbers "
"to be different every time you run the scene. We're going to use "
"``randomize()`` in our ``Main`` scene, so we won't need it here."
msgstr ""
"Если хотите, чтобы последовательность \"случайных\" чисел была различной при "
"каждом запуске сцены, вам нужно использовать функцию ``randomize()``. Мы "
"будем использовать ``randomize()`` в нашей сцене ``Main``, поэтому сейчас "
"нам это не понадобится. Функция ``randi() % n`` - стандартный способ "
"получить случайное целое число между ``0`` и ``n-1``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:647
#, fuzzy
msgid ""
"The last piece is to make the mobs delete themselves when they leave the "
"screen. Connect the ``screen_exited()`` signal of the "
"``VisibilityNotifier2D`` node and add this code:"
msgstr ""
"И наконец, заставим мобов удалять себя, когда они покидают экран. Подключите "
"сигнал ``screen_exited()`` узла ``Visibility`` и добавьте следующий код:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:664
msgid "This completes the `Mob` scene."
msgstr "На этом заканчиваем работу над сценой `Mob`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:667
msgid "Main scene"
msgstr "Главная сцена"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:669
msgid ""
"Now it's time to bring it all together. Create a new scene and add a :ref:"
"`Node <class_Node>` named ``Main``. Click the \"Instance\" button and select "
"your saved ``Player.tscn``."
msgstr ""
"Пришло время собрать все это вместе. Создайте новую сцену и добавьте узел :"
"ref:`Node <class_Node>` с именем ``Main``. Нажмите кнопку \"Инстанцировать\" "
"и выберите сохраненную ранее сцену ``Player.tscn``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:675
msgid ""
"Now, add the following nodes as children of ``Main``, and name them as shown "
"(values are in seconds):"
msgstr ""
"Теперь добавьте следующие узлы в виде дочерних элементов ``Main`` и назовите "
"их как показано ниже (значения указаны в секундах):"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:678
msgid ""
":ref:`Timer <class_Timer>` (named ``MobTimer``) - to control how often mobs "
"spawn"
msgstr ""
":ref:`Timer <class_Timer>` (назвать ``MobTimer``) - чтобы контролировать "
"частоту появления мобов"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:679
msgid ""
":ref:`Timer <class_Timer>` (named ``ScoreTimer``) - to increment the score "
"every second"
msgstr ""
":ref:`Timer <class_Timer>` (назвать ``ScoreTimer``) - чтобы каждую секунду "
"увеличивать счет"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:680
msgid ""
":ref:`Timer <class_Timer>` (named ``StartTimer``) - to give a delay before "
"starting"
msgstr ""
":ref:`Timer <class_Timer>` (назвать ``StartTimer``) - чтобы дать задержку "
"перед стартом игры"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:681
msgid ""
":ref:`Position2D <class_Position2D>` (named ``StartPosition``) - to indicate "
"the player's start position"
msgstr ""
":ref:`Position2D <class_Position2D>` (назвать ``StartPosition``) - чтобы "
"указать начальную позицию игрока"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:683
msgid ""
"Set the ``Wait Time`` property of each of the ``Timer`` nodes as follows:"
msgstr ""
"Задайте значение ``Wait Time`` для каждого из узлов ``Timer`` следующим "
"образом:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:686
msgid "``MobTimer``: ``0.5``"
msgstr "``MobTimer``: ``0.5``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:687
msgid "``ScoreTimer``: ``1``"
msgstr "``ScoreTimer``: ``1``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:688
msgid "``StartTimer``: ``2``"
msgstr "``StartTimer``: ``2``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:690
msgid ""
"In addition, set the ``One Shot`` property of ``StartTimer`` to \"On\" and "
"set ``Position`` of the ``StartPosition`` node to ``(240, 450)``."
msgstr ""
"Кроме того, установите для свойства ``One Shot`` узла ``StartTimer`` "
"значение \"On\" и для свойства ``Position`` узла ``StartPosition`` "
"установите значение ``(240, 450)``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:694
msgid "Spawning mobs"
msgstr "Добавление мобов"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:696
msgid ""
"The Main node will be spawning new mobs, and we want them to appear at a "
"random location on the edge of the screen. Add a :ref:`Path2D "
"<class_Path2D>` node named ``MobPath`` as a child of ``Main``. When you "
"select ``Path2D``, you will see some new buttons at the top of the editor:"
msgstr ""
"Узел Main будет порождать новых мобов, и мы хотим, чтобы они появлялись в "
"случайном месте на краю экрана. Добавьте узел :ref:`Path2D <class_Path2D>` с "
"именем ``MobPath`` как дочерний элемент узла ``Main``. Когда вы выберете "
"``Path2D``, вы увидите несколько новых кнопок в верхней части редактора:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:703
msgid ""
"Select the middle one (\"Add Point\") and draw the path by clicking to add "
"the points at the corners shown. To have the points snap to the grid, make "
"sure \"Use Grid Snap\" is selected. This option can be found to the left of "
"the \"Lock\" button, appearing as a magnet next to some intersecting lines."
msgstr ""
"Выберите среднюю (\"Добавить Точку\") и нарисуйте путь, щелкнув, чтобы "
"добавить точки на указанные углы. Чтобы точки привязывались к сетке "
"убедитесь, что пункт \"Привязывать к сетке\" включен.Эту опцию можно найти "
"слева от кнопки \"Закрепить\", и она выглядит как магнит с несколькими "
"пересекающимися линиями."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:710
msgid ""
"Draw the path in *clockwise* order, or your mobs will spawn pointing "
"*outwards* instead of *inwards*!"
msgstr ""
"Нарисуйте путь в порядке *по часовой стрелке*, иначе ваши мобы будут "
"появляться с направлением *наружу*, а не *внутрь*!"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:715
msgid ""
"After placing point ``4`` in the image, click the \"Close Curve\" button and "
"your curve will be complete."
msgstr ""
"Поместив точку \"4\" на изображение, нажмите кнопку \"Закрыть кривую\", и "
"она будет завершена."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:718
msgid ""
"Now that the path is defined, add a :ref:`PathFollow2D <class_PathFollow2D>` "
"node as a child of ``MobPath`` and name it ``MobSpawnLocation``. This node "
"will automatically rotate and follow the path as it moves, so we can use it "
"to select a random position and direction along the path."
msgstr ""
"Теперь, когда путь определен, добавьте узел :ref:`PathFollow2D "
"<class_PathFollow2D>` как дочерний элемент ``MobPath`` и назовите его "
"``MobSpawnLocation``. Этот узел будет автоматически вращаться и следовать по "
"пути при его перемещении, поэтому мы можем использовать его для выбора "
"случайной позиции и направления вдоль пути."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:723
#, fuzzy
msgid "Your scene should look like this:"
msgstr "Дерево сцены должно выглядеть так:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:728
msgid "Main script"
msgstr "Главный скрипт"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:730
msgid ""
"Add a script to ``Main``. At the top of the script, we use ``export "
"(PackedScene)`` to allow us to choose the Mob scene we want to instance."
msgstr ""
"Добавьте скрипт к узлу ``Main``. В начале скрипта мы пишем ``export "
"(PackedScene)`` чтобы мы могли выбрать сцену Mob, экземпляр которой мы хотим "
"сделать."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:770
msgid ""
"Click the ``Main`` node and you will see the ``Mob`` property in the "
"Inspector under \"Script Variables\"."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:773
msgid "You can assign this property's value in two ways:"
msgstr "Значение этого свойства можно присвоить двумя способами:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:775
#, fuzzy
msgid ""
"Drag ``Mob.tscn`` from the \"FileSystem\" panel and drop it in the ``Mob`` "
"property ."
msgstr ""
"Перетащите ``Mob.tscn`` из панели \"FileSystem\" в свойство ``Mob`` под "
"переменными скрипта на узле ``Main``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:777
msgid ""
"Click the down arrow next to \"[empty]\" and choose \"Load\". Select ``Mob."
"tscn``."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:780
#, fuzzy
msgid ""
"Next, click on the Player and connect the ``hit`` signal. We want to make a "
"new function named ``game_over``, which will handle what needs to happen "
"when a game ends. Type \"game_over\" in the \"Receiver Method\" box at the "
"bottom of the \"Connect a Signal\" window and click \"Connect\". Add the "
"following code to the new function, as well as a ``new_game`` function that "
"will set everything up for a new game:"
msgstr ""
"Далее, щёлкните на Player и соедините сигнал``hit``. Мы хотим сделать новую "
"функцию с названием ``game_over``, которая будет обрабатывать то, что "
"происходит когда игра заканчивается. Введите \"game_over\" в поле \"Метод-"
"приёмник\" снизу от окна \"Соединение сигнала\". Вставьте следующий код, а "
"также функцию ``new_game`` чтобы настроить всё для новой игры:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:818
#, fuzzy
msgid ""
"Now connect the ``timeout()`` signal of each of the Timer nodes "
"(``StartTimer``, ``ScoreTimer`` , and ``MobTimer``) to the main script. "
"``StartTimer`` will start the other two timers. ``ScoreTimer`` will "
"increment the score by 1."
msgstr ""
"Теперь присоедините сигнал ``timeout()`` каждого из узлов Timer "
"(``StartTimer``, ``ScoreTimer`` ,и ``MobTimer``) к основному скрипту. "
"``StartTimer`` запустит другие два таймера. ``ScoreTimer`` будет увеличивать "
"счет на 1."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:845
msgid ""
"In ``_on_MobTimer_timeout()``, we will create a mob instance, pick a random "
"starting location along the ``Path2D``, and set the mob in motion. The "
"``PathFollow2D`` node will automatically rotate as it follows the path, so "
"we will use that to select the mob's direction as well as its position."
msgstr ""
"В функции ``_on_MobTimer_timeout()`` мы создадим экземпляр противника, "
"выберем случайное начальное местоположение вдоль ``Path2D`` и заставим его "
"двигаться. Узел ``PathFollow2D`` будет автоматически поворачивать его в "
"нужном направлении, поэтому мы воспользуемся этим свойством, чтобы выбрать "
"направление противника и его позицию."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:851
msgid ""
"Note that a new instance must be added to the scene using ``add_child()``."
msgstr ""
"Обратите внимание, что новый экземпляр должен быть добавлен в сцену с "
"помощью функции ``add_child()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:899
#, fuzzy
msgid ""
"Why ``PI``? In functions requiring angles, GDScript uses *radians*, not "
"degrees. If you're more comfortable working with degrees, you'll need to use "
"the ``deg2rad()`` and ``rad2deg()`` functions to convert between the two."
msgstr ""
"В тригонометрических функциях, GDScript использует * радианы*, а не градусы. "
"Если вам удобнее работать с градусами, вам нужно использовать функции "
"``deg2rad()`` и ``rad2deg()`` для преобразования между ними."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:905
#, fuzzy
msgid "Testing the scene"
msgstr "Создание сценариев сцены"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:907
msgid ""
"Let's test the scene to make sure everything is working. Add this to "
"``_ready()``:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:924
msgid ""
"Let's also assign ``Main`` as our \"Main Scene\" - the one that runs "
"automatically when the game launches. Press the \"Play\" button and select "
"``Main.tscn`` when prompted."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:928
msgid ""
"You should be able to move the player around, see mobs spawning, and see the "
"player disappear when hit by a mob."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:931
msgid ""
"When you're sure everything is working, remove the call to ``new_game()`` "
"from ``_ready()``."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:935
msgid "HUD"
msgstr "HUD"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:937
msgid ""
"The final piece our game needs is a UI: an interface to display things like "
"score, a \"game over\" message, and a restart button. Create a new scene, "
"and add a :ref:`CanvasLayer <class_CanvasLayer>` node named ``HUD``. \"HUD\" "
"stands for \"heads-up display\", an informational display that appears as an "
"overlay on top of the game view."
msgstr ""
"Финальная часть нашей игры - UI: интерфейс для отображения таких элементов, "
"как игровой счет, сообщение \"игра окончена\" и кнопка перезапуска. Создайте "
"новую сцену и добавьте :ref:`Canvas Layer <Class_canvas Layer>` узел с "
"именем``HUD``. \"HUD\" означает \"heads-up display\", информационный "
"дисплей, отображающийся поверх игры."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:943
msgid ""
"The :ref:`CanvasLayer <class_CanvasLayer>` node lets us draw our UI elements "
"on a layer above the rest of the game, so that the information it displays "
"isn't covered up by any game elements like the player or mobs."
msgstr ""
"Узел :ref:`CanvasLayer <class_CanvasLayer>` позволяет нам изображать "
"элементы UI поверх всей игры. Это значит, что отображаемая информация не "
"перекрывается никакими игровыми элементами, такими как игрок или мобы."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:947
#, fuzzy
msgid "The HUD needs to display the following information:"
msgstr "HUD отображает следующую информацию:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:949
msgid "Score, changed by ``ScoreTimer``."
msgstr "Счет, измененный ``ScoreTimer``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:950
msgid "A message, such as \"Game Over\" or \"Get Ready!\""
msgstr "Сообщение, например \"Game Over\" или \"Get Ready!\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:951
msgid "A \"Start\" button to begin the game."
msgstr "Кнопка \"Start\" чтобы начать игру."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:953
msgid ""
"The basic node for UI elements is :ref:`Control <class_Control>`. To create "
"our UI, we'll use two types of :ref:`Control <class_Control>` nodes: :ref:"
"`Label <class_Label>` and :ref:`Button <class_Button>`."
msgstr ""
"Основной узел для элементов пользовательского интерфейса :ref:`Control "
"<class_Control>`. Чтобы создать UI, мы будем использовать два вида :ref:"
"`Control <class_Control>` nodes: :ref:`Label <class_Label>` и :ref:`Button "
"<class_Button>`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:957
msgid "Create the following as children of the ``HUD`` node:"
msgstr "Создайте следующее в качестве потомка узла '' HUD'':"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:959
msgid ":ref:`Label <class_Label>` named ``ScoreLabel``."
msgstr ":ref:`Label<class_Label>` названный ``ScoreLabel``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:960
#, fuzzy
msgid ":ref:`Label <class_Label>` named ``Message``."
msgstr ":ref:`Label <class_Label>` названный ``MessageLabel``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:961
msgid ":ref:`Button <class_Button>` named ``StartButton``."
msgstr ":ref:`Кнопка <class_Button>` с именем ``StartButton``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:962
msgid ":ref:`Timer <class_Timer>` named ``MessageTimer``."
msgstr ":ref:`Timer <class_Timer>` названный ``MessageTimer``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:964
#, fuzzy
msgid ""
"Click on the ``ScoreLabel`` and type a number into the ``Text`` field in the "
"Inspector. The default font for ``Control`` nodes is small and doesn't scale "
"well. There is a font file included in the game assets called \"Xolonium-"
"Regular.ttf\". To use this font, do the following:"
msgstr ""
"Нажмите на ``ScoreLabel`` и введите число в поле *Text* в Инспекторе. "
"Стандартный шрифт для узлов ``Control`` мал и плохо масштабируется. "
"Существует файл шрифта, включенный в игровые ресурсы под названием "
"\"Xolonium-Regular.ttf\". Чтобы использовать этот шрифт, выполните следующие "
"действия для каждого из трех узлов ``Control``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:969
msgid "Under \"Custom Fonts\", choose \"New DynamicFont\""
msgstr "Под \"Custom Fonts\", выберите \"New DynamicFont\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:973
msgid ""
"Click on the \"DynamicFont\" you added, and under \"Font/Font Data\", choose "
"\"Load\" and select the \"Xolonium-Regular.ttf\" file. You must also set the "
"font's ``Size``. A setting of ``64`` works well."
msgstr ""
"Нажмите на только что добавленный \"DynamicFont\", и в разделе \"Font/Font "
"Data\", выберите \"Load\" и выберите файл \"Xolonium-Regular.ttf\" . "
"Необходимо также установить размер шрифта ``Size``. Значение ``64`` хорошо "
"подходит."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:979
msgid ""
"Once you've done this on the ``ScoreLabel``, you can click the down arrow "
"next to the DynamicFont property and choose \"Copy\", then \"Paste\" it in "
"the same place on the other two Control nodes."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:983
msgid ""
"**Anchors and Margins:** ``Control`` nodes have a position and size, but "
"they also have anchors and margins. Anchors define the origin - the "
"reference point for the edges of the node. Margins update automatically when "
"you move or resize a control node. They represent the distance from the "
"control node's edges to its anchor. See :ref:"
"`doc_design_interfaces_with_the_control_nodes` for more details."
msgstr ""
"**Якоря и поля:** Узлы ``Control`` имеют не только положение и размер, но "
"также привязки(якоря) и поля. Якоря определяют начало координат - опорную "
"точку для ребер узла. Поля обновляются автоматически при перемещении или "
"изменении размера узла управления. Они представляют расстояние от краев "
"``Control`` - узла до его якоря. См.: ref: "
"`doc_design_interfaces_with_the_control_nodes` для получения более подробной "
"информации."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:990
msgid ""
"Arrange the nodes as shown below. Click the \"Layout\" button to set a "
"Control node's layout:"
msgstr ""
"Организуйте узлы, как показано ниже. Нажмите кнопку \"Layout (Макет)\", "
"чтобы задать макет для узла Control :"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:995
msgid ""
"You can drag the nodes to place them manually, or for more precise "
"placement, use the following settings:"
msgstr ""
"Можно перетаскивать узлы, чтобы разместить их вручную, или для более точного "
"размещения, используйте следующие параметры:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:999
msgid "ScoreLabel"
msgstr "ScoreLabel"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1001
msgid "*Layout* : \"Top Wide\""
msgstr "*Макет* : \"Top Wide (Вверху вшырь)\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1002
msgid "*Text* : ``0``"
msgstr "*Text* : ``0``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1003
#: ../../docs/getting_started/step_by_step/your_first_game.rst:1010
msgid "*Align* : \"Center\""
msgstr "*Выравнивание* : \"Центр\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1006
#, fuzzy
msgid "Message"
msgstr "MessageLabel"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1008
msgid "*Layout* : \"HCenter Wide\""
msgstr "``Макет``: \"HCenter Wide\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1009
msgid "*Text* : ``Dodge the Creeps!``"
msgstr "Text: ``Уворачивайся от крипов!``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1011
msgid "*Autowrap* : \"On\""
msgstr "*Авто-перенос* : \"Включить\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1014
msgid "StartButton"
msgstr "StartButton"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1016
msgid "*Text* : ``Start``"
msgstr "*Текст* : ``Start``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1017
msgid "*Layout* : \"Center Bottom\""
msgstr "``Слой``: \"Center Bottom\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1018
msgid "*Margin* :"
msgstr "*Отступ* :"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1020
msgid "Top: ``-200``"
msgstr "Cверху: ``- 200``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1021
msgid "Bottom: ``-100``"
msgstr "Внизу: ``-100``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1023
#, fuzzy
msgid ""
"On the ``MessageTimer``, set the ``Wait Time`` to ``2`` and set the ``One "
"Shot`` property to \"On\"."
msgstr ""
"Эта функция будет вызывается, когда мы хотим показать временное сообщение, "
"например, \"приготовиться\". На ``MessageTimer``, измените ``Wait Time`` до "
"``2`` и измените ``One Shot`` установить на  \"On\"."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1026
msgid "Now add this script to ``HUD``:"
msgstr "Теперь добавьте этот скрипт в ``HUD``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1045
msgid ""
"The ``start_game`` signal tells the ``Main`` node that the button has been "
"pressed."
msgstr "Сигнал ``start_game`` сообщает узлу ``Main``, что кнопка была нажата."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1067
#, fuzzy
msgid ""
"This function is called when we want to display a message temporarily, such "
"as \"Get Ready\"."
msgstr ""
"Эта функция будет вызывается, когда мы хотим показать временное сообщение, "
"например, \"приготовиться\". На ``MessageTimer``, измените ``Wait Time`` до "
"``2`` и измените ``One Shot`` установить на  \"On\"."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1100
msgid ""
"This function is called when the player loses. It will show \"Game Over\" "
"for 2 seconds, then return to the title screen and, after a brief pause, "
"show the \"Start\" button."
msgstr ""
"Эта функция вызывается, когда игрок проигрывает. Она будет показывать "
"надпись \"Game Over\" на 2 секунды, затем будет происходить возврат к "
"основному экрану и появится кнопка \"Start\"."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1104
#, fuzzy
msgid ""
"When you need to pause for a brief time, an alternative to using a Timer "
"node is to use the SceneTree's ``create_timer()`` function. This can be very "
"useful to add delays such as in the above code, where we want to wait some "
"time before showing the \"Start\" button."
msgstr ""
"Если вам нужно сделать паузу на короткое время, то альтернативой "
"использованию узла Timer является использование функции SceneTree's "
"```create_timer()```. Это может быть очень полезно для задержки, как, "
"например, в вышеприведенном коде, где мы хотим подождать немного времени, "
"прежде чем показать кнопку \"Start\"."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1122
msgid "This function is called by ``Main`` whenever the score changes."
msgstr ""
"Эта функция вызывается из ``Main`` каждый раз, когда изменяется количество "
"очков."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1124
#, fuzzy
msgid ""
"Connect the ``timeout()`` signal of ``MessageTimer`` and the ``pressed()`` "
"signal of ``StartButton`` and add the following code to the new functions:"
msgstr ""
"Соедините \"timeout()\" сигнал из \"MessageTimer\" и сигнал \"pressed()\" из "
"\"StartButton\"."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1152
msgid "Connecting HUD to Main"
msgstr "Подключение к главной HUD"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1154
#, fuzzy
msgid ""
"Now that we're done creating the ``HUD`` scene, go back to ``Main``. "
"Instance the ``HUD`` scene in ``Main`` like you did the ``Player`` scene. "
"The scene tree should look like this, so make sure you didn't miss anything:"
msgstr ""
"Закончив создание ``HUD`` сцены, сохраните её и вернитесь к  ``Main``."
"``HUD`` сцену поместите в нижнюю часть дерева ``Main``. Дерево должно "
"выглядеть так, поэтому убедитесь, что вы ничего не пропустили:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1160
msgid ""
"Now we need to connect the ``HUD`` functionality to our ``Main`` script. "
"This requires a few additions to the ``Main`` scene:"
msgstr ""
"Теперь нам нужно подключить ``HUD`` функцию для ``Main`` скрипта. Для этого "
"требуется несколько дополнений к ``Main`` сцены:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1163
msgid ""
"In the Node tab, connect the HUD's ``start_game`` signal to the "
"``new_game()`` function of the Main node by typing \"new_game\" in the "
"\"Receiver Method\" in the \"Connect a Signal\" window. Verify that the "
"green connection icon now appears next to ``func new_game()`` in the script."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1168
msgid ""
"In ``new_game()``, update the score display and show the \"Get Ready\" "
"message:"
msgstr ""
"В ``new_game()``, обновит счет дисплея и покажет сообщение \"Get Ready\":"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1183
msgid "In ``game_over()`` we need to call the corresponding ``HUD`` function:"
msgstr "В ``game_over()`` нам нужно вызвать соответствующую функцию ``HUD``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1194
msgid ""
"Finally, add this to ``_on_ScoreTimer_timeout()`` to keep the display in "
"sync with the changing score:"
msgstr ""
"Наконец добавьте в ``_on_ScoreTimer_timeout()`` для синхронизации "
"отображения с меняющемся очками:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1206
msgid ""
"Now you're ready to play! Click the \"Play the Project\" button. You will be "
"asked to select a main scene, so choose ``Main.tscn``."
msgstr ""
"Теперь вы готовы к игре! Нажмите на кнопку \"Запустить проект\" или F5. Вам "
"будет предложено выбрать основную сцену, выбирайте ``Main.tscn``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1210
msgid "Removing old creeps"
msgstr "Удаляем старых крипов"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1212
#, fuzzy
msgid ""
"If you play until \"Game Over\" and then start a new game right away, the "
"creeps from the previous game may still be on the screen. It would be better "
"if they all disappeared at the start of a new game. We just need a way to "
"tell *all* the mobs to remove themselves. We can do this with the \"group\" "
"feature."
msgstr ""
"Если вы доиграете до конца и затем начнете новую игру, крипы из предыдущей "
"игры останутся на экране. Будет лучше, если они будут исчезать в начале "
"новой игры."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1217
msgid ""
"In the ``Mob`` scene, select the root node and click the \"Node\" tab next "
"to the Inspector (the same place where you find the node's signals). Next to "
"\"Signals\", click \"Groups\" and you can type a new group name and click "
"\"Add\"."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1223
msgid ""
"Now all mobs will be in the \"mobs\" group. We can then add the following "
"line to the ``game_over()`` function in ``Main``:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1236
msgid ""
"The ``call_group()`` function calls the named function on every node in a "
"group - in this case we are telling every mob to delete itself."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1240
msgid "Finishing up"
msgstr "Завершающие штрихи"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1242
msgid ""
"We have now completed all the functionality for our game. Below are some "
"remaining steps to add a bit more \"juice\" to improve the game experience. "
"Feel free to expand the gameplay with your own ideas."
msgstr ""
"Сейчас мы завершили всю функциональность для нашей игры. Ниже приведены "
"некоторые оставшиеся шаги, чтобы добавить немного \"изюминки\" для повышения "
"игрового опыта. Не стесняйтесь совершенствовать геймплей вашими собственными "
"идеями."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1247
msgid "Background"
msgstr "Фон"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1249
#, fuzzy
msgid ""
"The default gray background is not very appealing, so let's change its "
"color. One way to do this is to use a :ref:`ColorRect <class_ColorRect>` "
"node. Make it the first node under ``Main`` so that it will be drawn behind "
"the other nodes. ``ColorRect`` only has one property: ``Color``. Choose a "
"color you like and select \"Layout\" -> \"Full Rect\" so that it covers the "
"screen."
msgstr ""
"По умолчанию серый фон не очень привлекательный, так что давайте поменяем "
"цвет на свой. Один из способов сделать это заключается в использовании :ref:"
"`ColorRect <class_ColorRect>` узла. Сделайте первый узел под ``Main``  так, "
"что он будет тянутся за другими узлами. ``ColorRect`` имеет только одно "
"свойство: ``Color``. Выберите цвет, который вам нравится и измените размер "
"``ColorRect``, так чтобы он покрывал экран."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1255
#, fuzzy
msgid ""
"You could also add a background image, if you have one, by using a "
"``TextureRect`` node instead."
msgstr ""
"Вы можете добавить фоновое изображение (если у вас оно есть), с помощью узла "
"``Sprite``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1259
msgid "Sound effects"
msgstr "Звуковые эффекты"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1261
msgid ""
"Sound and music can be the single most effective way to add appeal to the "
"game experience. In your game assets folder, you have two sound files: "
"\"House In a Forest Loop.ogg\" for background music, and \"gameover.wav\" "
"for when the player loses."
msgstr ""
"Звук и музыка могут быть самым эффективным способом, чтобы добавить больше "
"привлекательности к игре. В папке активов вашей игры, есть два звуковых "
"файла: \"House In a Forest Loop.ogg\" для фоновой музыки и \"gameover.wav\", "
"когда игрок проигрывает."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1266
msgid ""
"Add two :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` nodes as children "
"of ``Main``. Name one of them ``Music`` and the other ``DeathSound``. On "
"each one, click on the ``Stream`` property, select \"Load\", and choose the "
"corresponding audio file."
msgstr ""
"Добавьте два :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` узла, как "
"дочерний для ``Main``. Назовите одну из них ``Music``, а другие "
"``DeathSound``. На каждом из них, нажмите на кнопку ``Stream`` свойствах "
"выберите \"загрузить\" и добавьте соответствующий звуковой файл."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1271
msgid ""
"To play the music, add ``$Music.play()`` in the ``new_game()`` function and "
"``$Music.stop()`` in the ``game_over()`` function."
msgstr ""
"Для воспроизведения музыки, добавьте ``$Music.play()`` функцию в "
"``new_game()`` и ``$Music.stop()`` в ``game_over()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1274
msgid "Finally, add ``$DeathSound.play()`` in the ``game_over()`` function."
msgstr "Наконец, добавить ``$DeathSound.play()`` в ``game_over()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1277
#, fuzzy
msgid "Keyboard shortcut"
msgstr "Сочетание клавиш"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1279
#, fuzzy
msgid ""
"Since the game is played with keyboard controls, it would be convenient if "
"we could also start the game by pressing a key on the keyboard. We can do "
"this with the \"Shortcut\" property of the ``Button`` node."
msgstr ""
"Поскольку в игру играют с помощью клавиатуры, было бы удобно, если бы мы "
"могли начать игру, нажав любую клавишу. Одним из способов сделать это "
"является использование свойства \"Shortcut\" узла ``Button``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1283
#, fuzzy
msgid ""
"In the ``HUD`` scene, select the ``StartButton`` and find its *Shortcut* "
"property in the Inspector. Select \"New Shortcut\" and click on the "
"\"Shortcut\" item. A second *Shortcut* property will appear. Select \"New "
"InputEventAction\" and click the new \"InputEventAction\". Finally, in the "
"*Action* property, type the name ``ui_select``. This is the default input "
"event associated with the spacebar."
msgstr ""
"В сцене ``HUD`` выберите ``StartButton`` и найдите его свойство *Shortcut* в "
"инспекторе. Выберите \"New Shortcut\" и нажмите на пункт \"Shortcut\". "
"Появится второе свойство *Shortcut*. Выберите \"New InputEventAction\" и "
"нажмите на новый \"InputEvent\". Наконец, в свойстве *Action* введите имя "
"\"ui_select\". Это событие ввода по умолчанию, связанное с пробелом."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1291
msgid ""
"Now when the start button appears, you can either click it or press :kbd:"
"`Space` to start the game."
msgstr ""
"Теперь, когда появится кнопка запуска, вы можете нажать на неё или на "
"клавишу пробел, чтобы начать игру."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1295
msgid "Project files"
msgstr "Файлы проекта"

#: ../../docs/<generated>:1
msgid "You can find a completed version of this project at these locations:"
msgstr "Вы можете загрузить завершённую версию этого проекта по этим ссылкам:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1298
msgid "https://github.com/kidscancode/Godot3_dodge/releases"
msgstr "https://github.com/kidscancode/Godot3_dodge/releases"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1299
msgid "https://github.com/godotengine/godot-demo-projects"
msgstr "https://github.com/godotengine/godot-demo-projects"
