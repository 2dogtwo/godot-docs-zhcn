# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-13 14:08+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:4
msgid "Your First Game"
msgstr "Ваша Первая Игра"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:7
msgid "Overview"
msgstr "Обзор"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:9
msgid ""
"This tutorial will guide you through making your first Godot project. You "
"will learn how the Godot editor works, how to structure a project, and how "
"to build a 2D game."
msgstr ""
"Этот урок поможет вам сделать свой первый проект в Godot. Вы узнаете, как "
"работает редактор Godot, как структурировать проект и как построить 2D-игру."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:13
msgid ""
"This project is an introduction to the Godot engine. It assumes that you "
"have some programming experience already. If you're new to programming "
"entirely, you should start here: :ref:`doc_scripting`."
msgstr ""
"Этот проект представляет собой введение в движок Godot. Предполагается, что "
"у вас уже есть опыт программирования. Если вы новичок в программировании, "
"вам нужно начать отсюда: :ref:`doc_scripting`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:18
msgid ""
"The game is called \"Dodge the Creeps!\". Your character must move and avoid "
"the enemies for as long as possible. Here is a preview of the final result:"
msgstr ""
"Игра называется \"Увернись от Крипов!\". Ваш персонаж должен двигаться и "
"избегать врагов как можно дольше. Вот предварительная демонстрация "
"финального результата:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:24
msgid ""
"**Why 2D?** 3D games are much more complex than 2D ones. You should stick to "
"2D until you have a good understanding of the game development process."
msgstr ""
"**Почему 2D?** 3D-игры намного сложнее, чем 2D. Вы должны придерживаться 2D, "
"пока не получите хорошее представление о процессе разработки игр."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:28
msgid "Project Setup"
msgstr "Настройка Проекта"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:30
msgid ""
"Launch Godot and create a new project. Then, download :download:"
"`dodge_assets.zip <files/dodge_assets.zip>` - the images and sounds you'll "
"be using to make the game. Unzip these files to your project folder."
msgstr ""
"Запустите Godot и создайте новый проект. Затем загрузите :download:"
"`dodge_assets.zip <files/dodge_assets.zip>` - изображения и звуки, которые "
"вы будете использовать для создания игры. Разархивируйте эти файлы в папку "
"вашего проекта."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:34
msgid ""
"For this tutorial, we will assume you are familiar with the editor. If you "
"haven't read :ref:`doc_scenes_and_nodes`, do so now for an explanation of "
"setting up a project and using the editor."
msgstr ""
"Для этого урока мы предположим, что вы уже знакомы с редактором. Если вы еще "
"не читали :ref:`doc_scenes_and_nodes`, сделайте это сейчас для объяснения "
"настройки проекта и использования редактора."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:38
msgid ""
"This game will use portrait mode, so we need to adjust the size of the game "
"window. Click on Project -> Project Settings -> Display -> Window and set "
"\"Width\" to 480 and \"Height\" to 720."
msgstr ""
"В данной игре будет использоваться портретный режим, поэтому нам нужно "
"настроить размер игрового окна. Нажмите \"Проект\" -> \"Настройки проекта\" -"
"> \"Дисплей\" -> \"Окно\" и установите значения полей \"Ширина\" - 480 и "
"\"Высота\" - 720."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:43
msgid "Organizing the Project"
msgstr "Организация Проекта"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:45
msgid ""
"In this project, we will make 3 independent scenes: ``Player``, ``Mob``, and "
"``HUD``, which we will combine into the game's ``Main`` scene. In a larger "
"project, it might be useful to make folders to hold the various scenes and "
"their scripts, but for this relatively small game, you can save your scenes "
"and scripts in the root folder, referred to as ``res://``.  You can see your "
"project folders in the FileSystem Dock in the upper left corner:"
msgstr ""
"В этом проекте мы создадим 3 независимые сцены: ``Player``, ``Mob`` и "
"``HUD``, которые мы будем комбинировать со сценой игры ``Main``. В более "
"крупном проекте было бы полезно сделать папки для хранения различных сцен и "
"их скриптов, но для этой относительно небольшой игры вы можете сохранять "
"свои сцены и скрипты в корневой папке, называемой ``res://``. Вы можете "
"видеть папки проекта в доке FileSystem (Файловая Система) в верхнем левом "
"углу:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:56
msgid "Player Scene"
msgstr "Сцена Игрока"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:58
msgid ""
"The first scene we will make defines the ``Player`` object. One of the "
"benefits of creating a separate Player scene is that we can test it "
"separately, even before we've created other parts of the game."
msgstr ""
"Первая сцена, которую мы создадим, определяет объект ``Player`` (Игрок). "
"Одним из преимуществ создания отдельной сцены игрока является то, что мы "
"можем протестировать ее отдельно, даже до того, как мы создали другие части "
"игры."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:63
msgid "Node Structure"
msgstr "Структура Узла"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:65
msgid ""
"To begin, click the \"Add/Create a New Node\" button and add an :ref:`Area2D "
"<class_Area2D>` node to the scene."
msgstr ""
"Для начала нажмите кнопку \"Добавить/Создать новый узел\" и добавьте в сцену "
"узел :ref:`Area2D <class_Area2D>'."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:70
msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change its name to ``Player`` by clicking on the node's name. This is the "
"scene's root node. We can add additional nodes to the player to add "
"functionality."
msgstr ""
"С помощью ``Area2D`` мы можем обнаруживать объекты, которые перекрывают или "
"сталкиваются с игроком. Измените его имя на ``Player``, нажав на имя узла. "
"Это корневой узел сцены. Мы можем добавить к игроку дополнительные узлы для "
"расширения его функциональности."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:74
msgid ""
"Before we add any children to the ``Player`` node, we want to make sure we "
"don't accidentally move or resize them by clicking on them. Select the node "
"and click the icon to the right of the lock; its tooltip says \"Makes sure "
"the object's children are not selectable.\""
msgstr ""
"Прежде чем мы добавим детей на узел ``Player``, мы хотим убедиться, что "
"нажав на них мы не переместим их и не изменим их размер. Выберите узел и "
"нажмите на значок справа от блокировки; его всплывающая подсказка гласит: "
"\"Гарантирует, что дети объекта не могут быть выбраны.\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:81
msgid ""
"Save the scene. Click Scene -> Save, or press ``Ctrl+S`` on Windows/Linux or "
"``Command+S`` on Mac."
msgstr ""
"Сохраните сцену. Выберите меню \"Сцена\" -> \"Сохранить\" или нажмите \"Ctrl"
"+S\" на Windows/Linux или ``Command+S`` на Mac."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:83
msgid ""
"For this project, we will be following the Godot naming conventions. Classes "
"(nodes) use ``PascalCase``, variables and functions use ``snake_case``, and "
"constants use ``ALL_CAPS``."
msgstr ""
"Для этого проекта мы будем следовать соглашениям об именах Godot. Классы "
"(узлы) используют ``PascalCase``, переменные и функции используют "
"``snake_case``, а константы используют ``ALL_CAPS``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:88
msgid "Sprite Animation"
msgstr "Спрайтовая Анимация"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:90
msgid ""
"Click on the ``Player`` node and add an :ref:`AnimatedSprite "
"<class_AnimatedSprite>` node as a child. The ``AnimatedSprite`` will handle "
"the appearance and animations for our player. Notice that there is a warning "
"symbol next to the node. An ``AnimatedSprite`` requires a :ref:`SpriteFrames "
"<class_SpriteFrames>` resource, which is a list of the animations it can "
"display. To create one, find the ``Frames`` property in the Inspector and "
"click \"<null>\" -> \"New SpriteFrames\". Next, in the same location, click "
"``<SpriteFrames>`` to open the \"SpriteFrames\" panel:"
msgstr ""
"Нажмите на узел ``Player`` и добавьте ему дочерний узел :ref:`AnimatedSprite "
"<class_AnimatedSprite>`. ``AnimatedSprite`` будет обрабатывать внешний вид и "
"анимацию для нашего игрока. Обратите внимание, что рядом с узлом есть "
"предупреждающий символ. Для ``AnimatedSprite`` нужен ресурс :ref:"
"`SpriteFrames <class_SpriteFrames>`, который представляет собой список "
"анимаций, которые он может отображать. Чтобы создать его, найдите свойство "
"``Frames`` в инспекторе и нажмите \"<null>\" -> \"Новый SpriteFrames\". "
"Затем, в том же месте, нажмите ``<SpriteFrames>``, чтобы открыть панель "
"\"SpriteFrames\":"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:102
msgid ""
"On the left is a list of animations. Click the \"default\" one and rename it "
"to \"right\". Then click the \"Add\" button to create a second animation "
"named \"up\". Drag the two images for each animation, named "
"``playerGrey_up[1/2]`` and ``playerGrey_walk[1/2]``, into the \"Animation "
"Frames\" side of the panel:"
msgstr ""
"Слева находится список анимаций. Щелкните на \"default\" и переименуйте на "
"\"right\". Затем щелкните кнопку \"Add\" для создания второй анимации под "
"именем \"up\". Для каждой анимации, перетащите на сторону \"Animation Frames"
"\" два изображения с именами ``playerGrey_up[1/2]`` и "
"``playerGrey_walk[1/2]``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:109
msgid ""
"The player images are a bit too large for the game window, so we need to "
"scale them down. Click on the ``AnimatedSprite`` node and set the ``Scale`` "
"property to ``(0.5, 0.5)``. You can find it in the Inspector under the "
"``Node2D`` heading."
msgstr ""
"Изображения игрока немного великоваты для игрового окна, потому нам надо их "
"слегка уменьшить. Щелкните на узле  ``AnimatedSprite`` и установите параметр "
"``Scale`` в ``(0.5, 0.5)``. Вы можете найти его в Инспекторе, под заголовком "
"``Node2D``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:116
msgid ""
"Finally, add a :ref:`CollisionShape2D <class_CollisionShape2D>` as a child "
"of ``Player``. This will determine the player's \"hitbox\", or the bounds of "
"its collision area. For this character, a ``CapsuleShape2D`` node gives the "
"best fit, so next to \"Shape\" in the Inspector, click \"<null>\"\" -> \"New "
"CapsuleShape2D\".  Resize the shape to cover the sprite:"
msgstr ""
"Наконец, добавьте :ref:`CollisionShape2D <class_CollisionShape2D>` в "
"качестве потомка в ``Player``. Это позволит задать игроку \"хитбокс\" или, "
"иначе говоря, границы зоны определения столкновений. Для этого персонажа "
"лучше всего подходит узел ``CapsuleShape2D``, поэтому далее идем в "
"Инспектор, и в разделе \"Shape\" щелкаем \"<null>\"\" -> \"New CapsuleShape2D"
"\". Подгоните размер фигуры под размер изображения:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:124
msgid ""
"Don't scale the shape's outline! Only use the size handles (circled in red) "
"to adjust the shape!"
msgstr ""
"Не масштабируйте выделение фигуры! Для подгонки фигуры, пользуйтесь только "
"размерными ручками (красные кружочки)!"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:127
msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr "Когда вы закончите, сцена с вашим ``Player`` будет выглядеть вот так:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:132
msgid "Moving the Player"
msgstr "Движение Игрока"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:134
msgid ""
"Now we need to add some functionality that we can't get from a built-in "
"node, so we'll add a script. Click the ``Player`` node and click the \"Add "
"Script\" button:"
msgstr ""
"Теперь нам надо добавить немного функционала, который мы не можем получить с "
"помощью встроенных узлов и поэтому мы добавим скрипт. Щелкните на узле "
"``Player`` и нажмите кнопку \"Add Script\":"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:140
msgid ""
"In the script settings window, you can leave the default settings alone. "
"Just click \"Create\":"
msgstr ""
"В окне настроек скрипта вы можете оставить все настройки по умолчанию. "
"Просто нажмите \"Create\":"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:143
msgid ""
"If you're creating a C# script or other languages, select the language from "
"the `language` drop down menu before hitting create."
msgstr ""
"Если вы создаете скрипт на C# или другом языке, выберете нужный вам язык в "
"выпадающем меню `language` перед тем как создать его."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:148
msgid ""
"If this is your first time encountering GDScript, please read :ref:"
"`doc_scripting` before continuing."
msgstr ""
"Если вы первый раз столкнулись с GDScript, то, прежде чем продолжить, "
"пожалуйста прочитайте :ref:`doc_scripting`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:151
msgid "Start by declaring the member variables this object will need:"
msgstr "Чтобы начать объявлять переменные объекта понадобится:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:172
msgid ""
"Using the ``export`` keyword on the first variable ``SPEED`` allows us to "
"set its value in the Inspector. This can be handy for values that you want "
"to be able to adjust just like a node's built-in properties. Click on the "
"``Player`` node and set the speed property to ``400``."
msgstr ""
"Использование ключевого слова ``export`` у первой переменной ``SPEED``, "
"позволяет устанавливать ее значение в Инспекторе. Это может быть полезно, "
"если вы хотите изменять значения точно так же как и встроенные в узел "
"свойства. Щелкните на узел ``Player`` и установите значение скорости равным "
"``400``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:177
msgid ""
"If you're using C#, you need to restart godot editor temporarily to see "
"exported variables in the editor until it's fixed."
msgstr ""
"Если вы используете С#, вам необходимо перезапускать редактор godot, чтобы "
"увидеть в нем экспортированные переменные, пока это не будет исправлено."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:182
msgid ""
"The ``_ready()`` function is called when a node enters the scene tree, which "
"is a good time to find the size of the game window:"
msgstr ""
"Функция ``_ready ()`` вызывается, когда узел входит в дерево сцены, что "
"является хорошим моментом для определения размера игрового окна:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:198
msgid ""
"Now we can use the ``_process()`` function to define what the player will "
"do. ``_process()`` is called every frame, so we'll use it to update elements "
"of our game which we expect will change often. Here we'll make it:"
msgstr ""
"Сейчас мы можем использовать функцию ``_process()`` для определения того, "
"что игрок будет делать. ``_process()`` вызывается каждый кадр, поэтому мы "
"будем использовать ее для обновления игровых элементов, которые будут часто "
"меняться, как мы этого ожидаем. Здесь мы сделаем следующее:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:202
msgid "Check for input."
msgstr "Проверка ввода."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:203
msgid "Move in the given direction."
msgstr "Перемещение в заданном направлении."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:204
msgid "Play the appropriate animation."
msgstr "Воспроизведение соответствующей анимации."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:206
msgid ""
"First, we need to check for input - is the player pressing a key? For this "
"game, we have 4 direction inputs to check. Input actions are defined in the "
"Project Settings under \"Input Map\". You can define custom events and "
"assign different keys, mouse events, or other inputs to them. For this demo, "
"we will use the default events that are assigned to the arrow keys on the "
"keyboard."
msgstr ""
"Во-первых, нам нужно проверить ввод - игрок нажимает клавишу? Для этой игры "
"у нас есть 4 направления для проверки ввода. Вводные действия определяются в "
"настройках проекта в разделе \"Карта ввода\". Вы можете определить "
"пользовательские события и назначить для них разные клавиши, события мыши "
"или другие варианты ввода. Для данной демонстрации мы будем использовать "
"события по умолчанию, назначенные клавишам со стрелками на клавиатуре."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:213
msgid ""
"You can detect whether a key is pressed using ``Input.is_action_pressed()``, "
"which returns ``true`` if it is pressed or ``false`` if it isn't."
msgstr ""
"Вы можете определить, нажата ли клавиша с помощью функции ``Input."
"is_action_pressed() ``, которая возвращает ``true``, если клавиша нажата, "
"или ``false``, если нет."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:266
msgid ""
"We check each input and add/subtract from the ``velocity`` to obtain a total "
"direction. For example, if you hold ``right`` and ``down`` at the same time, "
"the resulting ``velocity`` vector will be ``(1, 1)``. In this case, since "
"we're adding a horizontal and a vertical movement, the player would move "
"*faster* than if it just moved horizontally."
msgstr ""
"Мы проверяем каждый ввод и добавляем/вычитаем значение из ``velocity``, "
"чтобы получить общее направление. Например, если вы одновременно удерживаете "
"``right`` и ``down``, полученный вектор ``velocity`` будет ``(1, 1) ``. В "
"этом случае, поскольку мы добавляем горизонтальное и вертикальное движение, "
"игрок будет двигаться *быстрее*, чем если бы он просто перемещался по "
"горизонтали."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:272
msgid ""
"We can prevent that if we *normalize* the velocity, which means we set its "
"*length* to ``1``, and multiply by the desired speed. This means no more "
"fast diagonal movement."
msgstr ""
"Можем избежать этого, если мы *нормализуем* скорость, что означает, что мы "
"устанавливаем ее *длину* на ``1`` и умножаем на желаемую скорость. Это "
"означает отсутствие более быстрого диагонального движения."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:276
msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`. It's good to "
"know but won't be necessary for the rest of this tutorial."
msgstr ""
"Если вы никогда раньше не использовали векторную математику или нуждаетесь в "
"повторении, вы можете увидеть объяснение использования вектора в Godot по "
"ссылке :ref:`doc_vector_math`. Ее полезно знать, но она не понадобится для "
"остальной части этого урока."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:280
msgid ""
"We also check whether the player is moving so we can start or stop the "
"AnimatedSprite animation."
msgstr ""
"Мы также проверяем, движется ли игрок, чтобы мы могли запустить или "
"остановить анимацию AnimatedSprite."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:283
msgid ""
"``$`` returns the node at the relative path from this node, or returns "
"``null`` if the node is not found. Since AnimatedSprite is a child of the "
"current node, we can use ``$AnimatedSprite``."
msgstr ""
"``$`` возвращает узел по относительному пути от текущего узла или возвращает "
"``null``, если узел не найден. Поскольку AnimatedSprite является дочерним "
"элементом текущего узла, мы можем использовать ``$AnimatedSprite``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:286
msgid ""
"``$`` is shorthand for ``get_node()``. So in the code above, ``"
"$AnimatedSprite.play()`` is the same as ``get_node(\"AnimatedSprite\")."
"play()``."
msgstr ""
"``$`` является сокращением для ``get_node()``. Поэтому в приведенном выше "
"коде ``$AnimatedSprite.play()`` это то же самое, что и "
"``get_node(\"AnimatedSprite\").play()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:289
msgid ""
"Now that we have a movement direction, we can update ``Player``'s position "
"and use ``clamp()`` to prevent it from leaving the screen by adding the "
"following to the bottom of the ``_process`` function:"
msgstr ""
"Теперь, когда у нас есть направление движения, мы можем обновить позицию "
"``Player`` и использовать функцию ``clamp()``, чтобы он не покидал экран, "
"добавив ее в нижнюю часть функции ``_process``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:309
msgid "*Clamping* a value means restricting it to a given range."
msgstr ""
"*Зажимать* (Clamping) значение означает ограничивать его в заданном "
"диапазоне."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:311
msgid ""
"Click \"Play Scene\" (``F6``) and confirm you can move the player around the "
"screen in all directions."
msgstr ""
"Нажмите \"Воспроизвести сцену\" (``F6``) и удостоверьтесь, что вы можете "
"перемещать игрока по экрану во всех направлениях."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:314
msgid ""
"If you get an error in the \"Debugger\" panel that refers to a \"null "
"instance\", this likely means you spelled the node name wrong. Node names "
"are case-sensitive and ``$NodeName`` or ``get_node(\"NodeName\")`` must "
"match the name you see in the scene tree."
msgstr ""
"Если в панели \"Отладчик\" вы получили сообщение об ошибке, которая "
"ссылается на \"несуществующий экземпляр\", это, скорее всего, означает, что "
"вы ввели неправильное имя узла. Имена узлов чувствительны к регистру, а ``"
"$NodeName`` или ``get_node(\"NodeName\")`` должны совпадать с именем, "
"которое вы видите в дереве сцены."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:319
msgid "Choosing Animations"
msgstr "Выбор анимации"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:321
msgid ""
"Now that the player can move, we need to change which animation the "
"AnimatedSprite is playing based on direction. We have a \"right\" animation, "
"which should be flipped horizontally using the ``flip_h`` property for left "
"movement, and an \"up\" animation, which should be flipped vertically with "
"``flip_v`` for downward movement. Let's place this code at the end of our "
"``_process()`` function:"
msgstr ""
"Теперь, когда игрок может двигаться, нам нужно изменять анимацию "
"AnimatedSprite в зависимости от направления движения. У нас есть анимация "
"\"вправо\", которую нужно перевернуть горизонтально, используя свойство "
"``flip_h`` для левого движения, и анимация \"вверх\", которую нужно "
"перевернуть вертикально с помощью ``flip_v`` для движения вниз. Давайте "
"поместим следующий код в конец нашей функции ``_process()``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:350
msgid ""
"Play the scene again and check that the animations are correct in each of "
"the directions. When you're sure the movement is working correctly, add this "
"line to ``_ready()`` so the player will be hidden when the game starts:"
msgstr ""
"Снова запустите сцену и убедитесь, что анимация правильная для каждого из "
"направлений. Когда вы будете уверены, что движение работает правильно, "
"добавьте эту строку в функцию ``_ready()``, чтобы игрок был скрыт, когда "
"игра начинается:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:365
msgid "Preparing for Collisions"
msgstr "Подготовка к столкновениям"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:367
msgid ""
"We want ``Player`` to detect when it's hit by an enemy, but we haven't made "
"any enemies yet! That's OK, because we're going to use Godot's *signal* "
"functionality to make it work."
msgstr ""
"Мы хотим, чтобы ``Player`` обнаруживал столкновение с врагом, но мы еще не "
"сделали никаких врагов! Это нормально, потому что мы будем использовать "
"такой функционал Godot, как *сигнал*."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:371
msgid "Add the following at the top of the script, after ``extends Area2d``:"
msgstr "Добавьте следующий код в начало скрипта, после ``extends Area2d``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:383
msgid ""
"This defines a custom signal called \"hit\" that we will have our player "
"emit (send out) when it collides with an enemy. We will use ``Area2D`` to "
"detect the collision. Select the ``Player`` node and click the \"Node\" tab "
"next to the Inspector tab to see the list of signals the player can emit:"
msgstr ""
"Это определяет пользовательский сигнал под названием \"hit\", который наш "
"игрок будет излучать (отправлять), когда он сталкивается с противником. Мы "
"будем использовать ``Area2D`` для обнаружения столкновения. Выберите узел "
"``Player`` и щелкните вкладку \"Узел\" рядом со вкладкой \"Инспектор\", "
"чтобы просмотреть список сигналов, которые может излучать игрок:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:390
msgid ""
"Notice our custom \"hit\" signal is there as well! Since our enemies are "
"going to be ``RigidBody2D`` nodes, we want the ``body_entered( Object "
"body )`` signal; this will be emitted when a body contacts the player. Click "
"\"Connect..\" and then \"Connect\" again on the \"Connecting Signal\" "
"window. We don't need to change any of these settings - Godot will "
"automatically create a function called ``_on_Player_body_entered`` in your "
"player's script."
msgstr ""
"Обратите внимание, что наш пользовательский сигнал \"hit\" там также есть! "
"Поскольку наши противники будут узлами ``RigidBody2D``, нам нужен сигнал "
"``body_entered(Object body)``; он будет излучаться, когда тело (body) "
"контактирует с игроком. Нажмите \"Подключить..\", а затем снова \"Подключить"
"\" в окне \"Подключение сигнала\". Нам не нужно изменять какие-либо из этих "
"настроек - Godot автоматически создаст функцию, называемую "
"``_on_Player_body_entered`` в скрипте вашего игрока."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:398
msgid ""
"When connecting a signal, instead of having Godot create a function for you, "
"you can also give the name of an existing function that you want to link the "
"signal to."
msgstr ""
"При подключении сигнала вместо того, чтобы Godot создал для вас функцию, вы "
"также можете указать имя существующей функции, к которой хотите привязать "
"сигнал."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:402
msgid "Add this code to the function:"
msgstr "Добавьте этот код в функцию:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:425
msgid ""
"Disabling the area's collision shape means it won't detect collisions. By "
"turning it off, we make sure we don't trigger the ``hit`` signal more than "
"once."
msgstr ""
"Отключение формы столкновения области означает, что она не обнаружит "
"столкновений. Выключив ее, мы можем быть уверены, что не отправим сигнал "
"``hit`` более одного раза."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:430
msgid ""
"The last piece for our player is to add a function we can call to reset the "
"player when starting a new game."
msgstr ""
"Последняя деталь для нашего игрока заключается в том, чтобы добавить "
"функцию, которую мы можем вызвать для перезагрузки игрока при запуске новой "
"игры."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:453
msgid "Enemy Scene"
msgstr "Сцена врага"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:455
msgid ""
"Now it's time to make the enemies our player will have to dodge. Their "
"behavior will not be very complex: mobs will spawn randomly at the edges of "
"the screen and move in a random direction in a straight line, then despawn "
"when they go offscreen."
msgstr ""
"Теперь пришло время сделать врагов, от которых нашему игроку предстоит "
"уклоняться. Их поведение будет не очень сложным: мобы будут появляться "
"случайно по краям экрана и перемещаться в случайном направлении по прямой "
"линии, а затем исчезать, когда они выходят за экран."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:460
msgid ""
"We will build this into a ``Mob`` scene, which we can then *instance* to "
"create any number of independent mobs in the game."
msgstr ""
"Сделаем это в сцене ``Mob``, которую затем мы можем *инстанцировать*, чтобы "
"создать любое количество независимых мобов в игре."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:464
msgid "Node Setup"
msgstr "Настройка узла"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:466
msgid "Click Scene -> New Scene and we'll create the Mob."
msgstr "Нажмите \"Сцена\" -> \"Новая сцена\", и так мы создадим Моба."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:468
msgid "The Mob scene will use the following nodes:"
msgstr "Сцена Моба будет использовать следующие узлы:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:470
msgid ":ref:`RigidBody2D <class_RigidBody2D>` (named ``Mob``)"
msgstr ":ref:`RigidBody2D <class_RigidBody2D>` (названный ``Mob``)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:472
msgid ":ref:`AnimatedSprite <class_AnimatedSprite>`"
msgstr ":ref:`AnimatedSprite <class_AnimatedSprite>`"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:473
#, fuzzy
msgid ":ref:`CollisionShape2D <class_CollisionShape2D>`"
msgstr ":ref:`CollisionShape2D <class_CollisionShape2D>`"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:474
msgid ""
":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>` (named "
"``Visibility``)"
msgstr ""
":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>` (названный "
"``Visibility``)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:476
msgid ""
"Don't forget to set the children so they can't be selected, like you did "
"with the Player scene."
msgstr ""
"Не забудьте настроить дочерние узлы, чтобы они не могли быть выбраны, как вы "
"это делали со сценой игрока."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:479
msgid ""
"In the :ref:`RigidBody2D <class_RigidBody2D>` properties, set ``Gravity "
"Scale`` to ``0``, so the mob will not fall downward. In addition, under the "
"``PhysicsBody2D`` section, click the ``Mask`` property and uncheck the first "
"box. This will ensure the mobs do not collide with each other."
msgstr ""
"В свойствах :ref:`RigidBody2D <class_RigidBody2D>` установите в поле "
"``Gravity Scale`` значение ``0``, чтобы моб не упал вниз. Кроме того, в "
"разделе ``PhysicsBody2D`` выберите свойство ``Mask`` и снимите первый "
"флажок. Это гарантирует, что мобы не столкнутся друг с другом."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:486
msgid ""
"Set up the :ref:`AnimatedSprite <class_AnimatedSprite>` like you did for the "
"player. This time, we have 3 animations: ``fly``, ``swim``, and ``walk``. "
"Set the ``Playing`` property in the Inspector to \"On\" and adjust the "
"\"Speed (FPS)\" setting as shown below. We'll select one of these animations "
"randomly so that the mobs will have some variety."
msgstr ""
"Настройте :ref:`AnimatedSprite <class_AnimatedSprite>` как вы сделали это "
"для игрока. На этот раз у нас есть 3 анимации: ``fly``, ``swim`` и ``walk``. "
"Установите свойство ``Playing`` в Инспекторе на \"On\" и настройте параметр "
"\"Speed (FPS)\", как показано ниже. Мы будем выбирать одну из этих анимаций "
"случайным образом, чтобы мобы имели некоторое разнообразие."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:493
msgid ""
"``fly`` should be set to 3 FPS, with ``swim`` and ``walk`` set to 4 FPS."
msgstr "``fly`` должно быть настроен на 3 FPS, а ``swim`` и ``walk`` на 4 FPS."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:495
msgid ""
"Like the player images, these mob images need to be scaled down. Set the "
"``AnimatedSprite``'s ``Scale`` property to ``(0.75, 0.75)``."
msgstr ""
"Также как изображения игрока, изображения мобов нужно уменьшить. Установите "
"для ``AnimatedSprite`` в свойстве ``Scale`` значение ``(0.75, 0.75)``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:498
msgid ""
"As in the ``Player`` scene, add a ``CapsuleShape2D`` for the collision. To "
"align the shape with the image, you'll need to set the ``Rotation Degrees`` "
"property to ``90`` under ``Node2D``."
msgstr ""
"Как и в сцене ``Player``, добавьте узел ``CapsuleShape2D`` для расчета "
"столкновений. Чтобы выровнять фигуру с изображением, вам нужно установить в "
"свойство ``Rotation Degrees`` значение ``90`` под `` Node2D``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:503
msgid "Enemy Script"
msgstr "Скрипт врага"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:505
msgid "Add a script to the ``Mob`` and add the following member variables:"
msgstr "Прикрепите скрипт к ``Mob`` и добавьте следующие переменные:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:529
msgid ""
"We'll pick a random value between ``MIN_SPEED`` and ``MAX_SPEED`` for how "
"fast each mob will move (it would be boring if they were all moving at the "
"same speed). Set them to ``150`` and ``250`` in the Inspector. We also have "
"an array containing the names of the three animations, which we'll use to "
"select a random one."
msgstr ""
"Мы будем выбирать случайное значение между ``MIN_SPEED`` и ``MAX_SPEED`` для "
"определения того, как быстро каждый моб будет двигаться (было бы скучно, "
"если бы все они двигались с одинаковой скоростью). Установите значения "
"скорости соответственно ``150`` (MIN_SPEED) и ``250`` (MAX_SPEED) в "
"инспекторе. У нас также есть массив, содержащий имена трех анимаций, которые "
"мы будем выбирать случайным образом."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:535
msgid ""
"Now let's look at the rest of the script. In ``_ready()`` we randomly choose "
"one of the three animation types:"
msgstr ""
"Теперь давайте посмотрим на остальную часть скрипта. В функции ``_ready()`` "
"мы случайным образом выбираем один из трех типов анимации:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:559
msgid ""
"You must use ``randomize()`` if you want your sequence of \"random\" numbers "
"to be different every time you run the scene. We're going to use "
"``randomize()`` in our ``Main`` scene, so we won't need it here. ``randi() % "
"n`` is the standard way to get a random integer between ``0`` and ``n-1``."
msgstr ""
"Если хотите, чтобы последовательность \"случайных\" чисел была различной при "
"каждом запуске сцены, вам нужно использовать функцию ``randomize()``. Мы "
"будем использовать ``randomize()`` в нашей сцене ``Main``, поэтому сейчас "
"нам это не понадобится. Функция ``randi() % n`` - стандартный способ "
"получить случайное целое число между ``0`` и ``n-1``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:565
msgid ""
"The last piece is to make the mobs delete themselves when they leave the "
"screen. Connect the ``screen_exited()`` signal of the ``Visibility`` node "
"and add this code:"
msgstr ""
"И наконец, заставим мобов удалять себя, когда они покидают экран. Подключите "
"сигнал ``screen_exited()`` узла ``Visibility`` и добавьте следующий код:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:582
msgid "This completes the `Mob` scene."
msgstr "На этом заканчиваем работу над сценой `Mob`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:585
msgid "Main Scene"
msgstr "Главная сцена"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:587
msgid ""
"Now it's time to bring it all together. Create a new scene and add a :ref:"
"`Node <class_Node>` named ``Main``. Click the \"Instance\" button and select "
"your saved ``Player.tscn``."
msgstr ""
"Пришло время собрать все это вместе. Создайте новую сцену и добавьте узел :"
"ref:`Node <class_Node>` с именем ``Main``. Нажмите кнопку \"Инстанцировать\" "
"и выберите сохраненную ранее сцену ``Player.tscn``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:593
msgid "See :ref:`doc_instancing` to learn more about instancing."
msgstr ""
"Посмотрите :ref:`doc_instancing`, чтобы узнать больше об инстанцировании."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:595
msgid ""
"Now add the following nodes as children of ``Main``, and name them as shown "
"(values are in seconds):"
msgstr ""
"Теперь добавьте следующие узлы в виде дочерних элементов ``Main`` и назовите "
"их, как показано ниже (значения указаны в секундах):"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:598
msgid ""
":ref:`Timer <class_Timer>` (named ``MobTimer``) - to control how often mobs "
"spawn"
msgstr ""
":ref:`Timer <class_Timer>` (назвать ``MobTimer``) - чтобы контролировать "
"частоту появления мобов"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:599
msgid ""
":ref:`Timer <class_Timer>` (named ``ScoreTimer``) - to increment the score "
"every second"
msgstr ""
":ref:`Timer <class_Timer>` (назвать ``ScoreTimer``) - чтобы каждую секунду "
"увеличивать счет"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:600
msgid ""
":ref:`Timer <class_Timer>` (named ``StartTimer``) - to give a delay before "
"starting"
msgstr ""
":ref:`Timer <class_Timer>` (назвать ``StartTimer``) - чтобы дать задержку "
"перед стартом игры"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:601
msgid ""
":ref:`Position2D <class_Position2D>` (named ``StartPosition``) - to indicate "
"the player's start position"
msgstr ""
":ref:`Position2D <class_Position2D>` (назвать ``StartPosition``) - чтобы "
"указать начальную позицию игрока"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:603
msgid ""
"Set the ``Wait Time`` property of each of the ``Timer`` nodes as follows:"
msgstr ""
"Задайте значение ``Wait Time`` для каждого из узлов ``Timer`` следующим "
"образом:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:606
msgid "``MobTimer``: ``0.5``"
msgstr "``MobTimer``: ``0.5``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:607
msgid "``ScoreTimer``: ``1``"
msgstr "``ScoreTimer``: ``1``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:608
msgid "``StartTimer``: ``2``"
msgstr "``StartTimer``: ``2``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:610
msgid ""
"In addition, set the ``One Shot`` property of ``StartTimer`` to \"On\" and "
"set ``Position`` of the ``StartPosition`` node to ``(240, 450)``."
msgstr ""
"Кроме того, установите для свойства ``One Shot`` узла ``StartTimer`` "
"значение \"On\" и для свойства ``Position`` узла ``StartPosition`` "
"установите значение ``(240, 450)``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:614
msgid "Spawning Mobs"
msgstr "Появление мобов"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:616
msgid ""
"The Main node will be spawning new mobs, and we want them to appear at a "
"random location on the edge of the screen. Add a :ref:`Path2D "
"<class_Path2D>` node named ``MobPath`` as a child of ``Main``. When you "
"select ``Path2D``, you will see some new buttons at the top of the editor:"
msgstr ""
"Узел Main будет порождать новых мобов, и мы хотим, чтобы они появлялись в "
"случайном месте на краю экрана. Добавьте узел :ref:`Path2D <class_Path2D>` с "
"именем ``MobPath`` как дочерний элемент узла ``Main``. Когда вы выберете "
"``Path2D``, вы увидите несколько новых кнопок в верхней части редактора:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:623
msgid ""
"Select the middle one (\"Add Point\") and draw the path by clicking to add "
"the points at the corners shown. To have the points snap to the grid, make "
"sure \"Snap to Grid\" is checked. This option can be found under the "
"\"Snapping options\" button to the left of the \"Lock\" button, appearing as "
"a series of three vertical dots."
msgstr ""
"Выберите среднюю (\"Добавить Точку\") и нарисуйте путь, щелкнув, чтобы "
"добавить точки на указанные углы. Чтобы точки привязывались к сетке "
"убедитесь, что пункт \"Привязывать к сетке\" включен. Эта опция может быть "
"найдена под кнопкой \"Опции привязывания\", левее кнопки \"Закрепить\", в "
"виде ряда из трёх вертикальных точек."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:631
msgid ""
"Draw the path in *clockwise* order, or your mobs will spawn pointing "
"*outwards* instead of *inwards*!"
msgstr ""
"Нарисуйте путь в порядке *по часовой стрелке*, иначе ваши мобы будут "
"появляться с направлением *наружу*, а не *внутрь*!"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:634
msgid ""
"After placing point ``4`` in the image, click the \"Close Curve\" button and "
"your curve will be complete."
msgstr ""
"Поместив точку \"4\" на изображение, нажмите кнопку \"Закрыть кривую\", и "
"она будет завершена."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:637
msgid ""
"Now that the path is defined, add a :ref:`PathFollow2D <class_PathFollow2D>` "
"node as a child of ``MobPath`` and name it ``MobSpawnLocation``. This node "
"will automatically rotate and follow the path as it moves, so we can use it "
"to select a random position and direction along the path."
msgstr ""
"Теперь, когда путь определен, добавьте узел :ref:`PathFollow2D "
"<class_PathFollow2D>` как дочерний элемент ``MobPath`` и назовите его "
"``MobSpawnLocation``. Этот узел будет автоматически вращаться и следовать по "
"пути при его перемещении, поэтому мы можем использовать его для выбора "
"случайной позиции и направления вдоль пути."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:643
msgid "Main Script"
msgstr "Скрипт Main"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:645
msgid ""
"Add a script to ``Main``. At the top of the script we use ``export "
"(PackedScene)`` to allow us to choose the Mob scene we want to instance."
msgstr ""
"Добавьте скрипт к узлу ``Main``. В верхней части скрипта мы используем "
"``export (PackedScene)``, чтобы мы могли выбрать сцену Mob, которую хотим "
"инстанцировать."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:684
msgid ""
"Drag ``Mob.tscn`` from the \"FileSystem\" panel and drop it in the ``Mob`` "
"property under the Script Variables of the ``Main`` node."
msgstr ""
"Перетащите ``Mob.tscn`` из панели \"FileSystem\" в свойство ``Mob`` под "
"переменными скрипта на узле ``Main``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:687
msgid ""
"Next, click on the Player and connect the ``hit`` signal. We want to make a "
"new function named ``game_over``, which will handle what needs to happen "
"when a game ends. Type \"game_over\" in the \"Method In Node\" box at the "
"bottom of the \"Connecting Signal\" window. Add the following code, as well "
"as a ``new_game`` function to set everything up for a new game:"
msgstr ""
"Далее, щёлкните на Player и соедините ``hit``-сигнал. Мы хотим сделать новую "
"функцию с названием ``game_over``, которая будет обрабатывать то, что "
"происходит когда игра заканчивается. Введите \"game_over\" в поле \"Метод в "
"ноде\" снизу от окна \"Соединение сигнала\". Вставьте следующий код, а также "
"функцию ``new_game`` чтобы настроить всё для новой игры:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:729
msgid ""
"Now connect the ``timeout()`` signal of each of the Timer nodes. "
"``StartTimer`` will start the other two timers. ``ScoreTimer`` will "
"increment the score by 1."
msgstr ""
"Теперь соедините ``timeout()`` сигнал каждого из нодов Таймера. "
"``StartTimer`` запустит другие два таймера. ``ScoreTimer`` будет увеличивать "
"счет на 1."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:760
msgid ""
"In ``_on_MobTimer_timeout()`` we will create a mob instance, pick a random "
"starting location along the ``Path2D``, and set the mob in motion. The "
"``PathFollow2D`` node will automatically rotate as it follows the path, so "
"we will use that to select the mob's direction as well as its position."
msgstr ""
"В функции ``_on_MobTimer_timeout()`` мы создадим экземпляр моба, выберем "
"случайное начальное местоположение вдоль ``Path2D`` и настроим моба в "
"движении. Узел ``PathFollow2D`` будет автоматически вращаться следуя по "
"пути, поэтому мы будем использовать это, чтобы выбрать направление моба, а "
"также его позицию."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:766
msgid ""
"Note that a new instance must be added to the scene using ``add_child()``."
msgstr ""
"Обратите внимание, что новый экземпляр должен быть добавлен в сцену с "
"помощью функции ``add_child()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:809
msgid ""
"In functions requiring angles, GDScript uses *radians*, not degrees. If "
"you're more comfortable working with degrees, you'll need to use the "
"``deg2rad()`` and ``rad2deg()`` functions to convert between the two."
msgstr ""
"В тригонометрических функциях, GDScript использует * радианы*, а не градусы. "
"Если вам удобнее работать со степенями, вам нужно использовать функции "
"``deg2rad()`` и ``rad2deg()`` для преобразования между ними."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:815
msgid "HUD"
msgstr "HUD"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:817
#, fuzzy
msgid ""
"The final piece our game needs is a UI: an interface to display things like "
"score, a \"game over\" message, and a restart button. Create a new scene, "
"and add a :ref:`CanvasLayer <class_CanvasLayer>` node named ``HUD``. \"HUD\" "
"stands for \"heads-up display\", an informational display that appears as an "
"overlay on top of the game view."
msgstr ""
"В финале нашей игры нужен UI: интерфейс для отображения таких элементов, как "
"игровой счет, сообщение \"игра окончена\" и кнопка перезапуска. Создайте "
"новую сцену и добавьте :ref:`Canvas Layer <Class_canvas Layer>` узел с "
"именем``HUD``. \"HUD\" означает \"heads-up display\", информационный "
"дисплей, отображающаяся на фоне виртуального игрового пространства в "
"процессе игры."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:823
#, fuzzy
msgid ""
"The :ref:`CanvasLayer <class_CanvasLayer>` node lets us draw our UI elements "
"on a layer above the rest of the game, so that the information it displays "
"isn't covered up by any game elements like the player or mobs."
msgstr ""
"Узел :ref:`CanvasLayer <class_CanvasLayer>` позволяет нам изобразить "
"элементы UI на слое выше остальной частью игры, чтобы отображаемая "
"информация не покрывалась какими-либо игровыми элементами, такими как игрок "
"или мобы."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:827
msgid "The HUD displays the following information:"
msgstr "HUD отображает следующую информацию:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:829
msgid "Score, changed by ``ScoreTimer``."
msgstr "Счет, измененный ``ScoreTimer``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:830
msgid "A message, such as \"Game Over\" or \"Get Ready!\""
msgstr "Сообщение, например \"Game Over\" или \"Get Ready!\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:831
msgid "A \"Start\" button to begin the game."
msgstr "Кнопка \"Start\" чтобы начать игру."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:833
#, fuzzy
msgid ""
"The basic node for UI elements is :ref:`Control <class_Control>`. To create "
"our UI, we'll use two types of :ref:`Control <class_Control>` nodes: :ref:"
"`Label <class_Label>` and :ref:`Button <class_Button>`."
msgstr ""
"Основной узел для элементов пользовательского интерфейса :ref:`Control "
"<class_Control>`. Чтобы создать UI, мы будем использовать два вида :ref:"
"`Control <class_Control>` nodes: :ref:`Label <class_Label>` и :ref:`Button "
"<class_Button>`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:837
#, fuzzy
msgid "Create the following as children of the ``HUD`` node:"
msgstr "Создайте в качестве потомка узла '' HUD'' следующие:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:839
msgid ":ref:`Label <class_Label>` named ``ScoreLabel``."
msgstr ":ref:`Label<class_Label>` названный ``ScoreLabel``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:840
msgid ":ref:`Label <class_Label>` named ``MessageLabel``."
msgstr ":ref:`Label <class_Label>` названный ``MessageLabel``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:841
#, fuzzy
msgid ":ref:`Button <class_Button>` named ``StartButton``."
msgstr ":ref:`Кнопка <class_Button>` с именем ``StartButto"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:842
msgid ":ref:`Timer <class_Timer>` named ``MessageTimer``."
msgstr ":ref:`Timer <class_Timer>` названный ``MessageTimer``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:844
msgid ""
"**Anchors and Margins:** ``Control`` nodes have a position and size, but "
"they also have anchors and margins. Anchors define the origin - the "
"reference point for the edges of the node. Margins update automatically when "
"you move or resize a control node. They represent the distance from the "
"control node's edges to its anchor. See :ref:"
"`doc_design_interfaces_with_the_control_nodes` for more details."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:851
msgid ""
"Arrange the nodes as shown below. Click the \"Anchor\" button to set a "
"Control node's anchor:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:856
msgid ""
"You can drag the nodes to place them manually, or for more precise "
"placement, use the following settings:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:860
msgid "ScoreLabel"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:862
msgid "``Layout``: \"Center Top\""
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:863
#: ../../docs/getting_started/step_by_step/your_first_game.rst:876
#: ../../docs/getting_started/step_by_step/your_first_game.rst:889
msgid "``Margin``:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:865
msgid "Left: ``-25``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:866
msgid "Top: ``0``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:867
msgid "Right: ``25``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:868
msgid "Bottom: ``100``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:870
msgid "Text: ``0``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:873
msgid "MessageLabel"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:875
msgid "``Layout``: \"Center\""
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:878
msgid "Left: ``-200``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:879
msgid "Top: ``-150``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:880
msgid "Right: ``200``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:881
msgid "Bottom: ``0``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:883
msgid "Text: ``Dodge the Creeps!``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:886
msgid "StartButton"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:888
msgid "``Layout``: \"Center Bottom\""
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:891
msgid "Left: ``-100``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:892
msgid "Top: ``-200``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:893
msgid "Right: ``100``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:894
msgid "Bottom: ``-100``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:896
msgid "Text: ``Start``"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:898
msgid ""
"The default font for ``Control`` nodes is small and doesn't scale well. "
"There is a font file included in the game assets called \"Xolonium-Regular."
"ttf\". To use this font, do the following for each of the three ``Control`` "
"nodes:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:903
msgid "Under \"Custom Fonts\", choose \"New DynamicFont\""
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:907
msgid ""
"Click on the \"DynamicFont\" you added, and under \"Font Data\", choose "
"\"Load\" and select the \"Xolonium-Regular.ttf\" file. You must also set the "
"font's ``Size``. A setting of ``64`` works well."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:913
msgid "Now add this script to ``HUD``:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:930
msgid ""
"The ``start_game`` signal tells the ``Main`` node that the button has been "
"pressed."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:953
msgid ""
"This function is called when we want to display a message temporarily, such "
"as \"Get Ready\". On the ``MessageTimer``, set the ``Wait Time`` to ``2`` "
"and set the ``One Shot`` property to \"On\"."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:982
msgid ""
"This function is called when the player loses. It will show \"Game Over\" "
"for 2 seconds, then return to the title screen and show the \"Start\" button."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1000
msgid "This function is called in ``Main`` whenever the score changes."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1002
msgid ""
"Connect the ``timeout()`` signal of ``MessageTimer`` and the ``pressed()`` "
"signal of ``StartButton``."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1032
msgid "Connecting HUD to Main"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1034
msgid ""
"Now that we're done creating the ``HUD`` scene, save it and go back to "
"``Main``. Instance the ``HUD`` scene in ``Main`` like you did the ``Player`` "
"scene, and place it at the bottom of the tree. The full tree should look "
"like this, so make sure you didn't miss anything:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1041
msgid ""
"Now we need to connect the ``HUD`` functionality to our ``Main`` script. "
"This requires a few additions to the ``Main`` scene:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1044
msgid ""
"In the Node tab, connect the HUD's ``start_game`` signal to the "
"``new_game()`` function."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1047
msgid ""
"In ``new_game()``, update the score display and show the \"Get Ready\" "
"message:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1062
msgid "In ``game_over()`` we need to call the corresponding ``HUD`` function:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1074
msgid ""
"Finally, add this to ``_on_ScoreTimer_timeout()`` to keep the display in "
"sync with the changing score:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1087
msgid ""
"Now you're ready to play! Click the \"Play the Project\" button. You will be "
"asked to select a main scene, so choose ``Main.tscn``."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1091
msgid "Finishing Up"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1093
msgid ""
"We have now completed all the functionality for our game. Below are some "
"remaining steps to add a bit more \"juice\" to improve the game experience. "
"Feel free to expand the gameplay with your own ideas."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1098
msgid "Background"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1100
msgid ""
"The default gray background is not very appealing, so let's change its "
"color. One way to do this is to use a :ref:`ColorRect <class_ColorRect>` "
"node. Make it the first node under ``Main`` so that it will be drawn behind "
"the other nodes. ``ColorRect`` only has one property: ``Color``. Choose a "
"color you like and drag the size of the ``ColorRect`` so that it covers the "
"screen."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1107
msgid ""
"You can also add a background image, if you have one, by using a ``Sprite`` "
"node."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1111
msgid "Sound Effects"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1113
msgid ""
"Sound and music can be the single most effective way to add appeal to the "
"game experience. In your game assets folder, you have two sound files: "
"\"House In a Forest Loop.ogg\" for background music, and \"gameover.wav\" "
"for when the player loses."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1118
msgid ""
"Add two :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` nodes as children "
"of ``Main``. Name one of them ``Music`` and the other ``DeathSound``. On "
"each one, click on the ``Stream`` property, select \"Load\", and choose the "
"corresponding audio file."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1123
msgid ""
"To play the music, add ``$Music.play()`` in the ``new_game()`` function and "
"``$Music.stop()`` in the ``game_over()`` function."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1126
msgid "Finally, add ``$DeathSound.play()`` in the ``game_over()`` function."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1129
msgid "Particles"
msgstr "Частицы"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1131
msgid ""
"For one last bit of visual appeal, let's add a trail effect to the player's "
"movement. Choose your ``Player`` scene and add a :ref:`Particles2D "
"<class_Particles2D>` node named ``Trail``."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1135
msgid ""
"There are a large number of properties to choose from when configuring "
"particles. Feel free to experiment and create different effects. For the "
"effect in this example, use the following settings:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1141
msgid ""
"You also need to create a ``Material`` by clicking on ``<null>`` and then "
"\"New ParticlesMaterial\". The settings for that are below:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1146
msgid ""
"To make the gradient for the \"Color Ramp\" setting, we want a gradient "
"taking the alpha (transparency) of the sprite from 0.5 (semi-transparent) to "
"0.0 (fully transparent)."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1150
msgid ""
"Click \"New GradientTexture\", then under \"Gradient\", click \"New Gradient"
"\". You'll see a window like this:"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1155
msgid ""
"The left and right boxes represent the start and end colors. Click on each "
"and then click the large square on the right to choose the color. For the "
"first color, set the ``A`` (alpha) value to around halfway. For the second, "
"set it all the way to ``0``."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1160
msgid ""
"See :ref:`Particles2D <class_Particles2D>` for more details on using "
"particle effects."
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1164
msgid "Project Files"
msgstr ""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1166
msgid ""
"You can find a completed version of this project here: https://github.com/"
"kidscancode/Godot3_dodge/releases"
msgstr ""
