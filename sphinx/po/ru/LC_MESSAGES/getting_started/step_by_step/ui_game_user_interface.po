# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-18 09:48+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:4
msgid "Design the GUI"
msgstr "Разработка графического интерфейса"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:6
msgid ""
"Now that you've nailed the basics, we're going to see how to build a game "
"Graphical User Interface (GUI) with reusable UI components: a life bar, an "
"energy bar, and bomb and emerald counters. By the end of this tutorial, "
"you'll have a game GUI, ready to control with GDscript or VisualScript:"
msgstr ""
"Теперь, когда вы освоили основы, мы рассмотрим, как построить "
"пользовательский интерфейс игры (GUI) с многократно используемыми "
"компонентами: шкала здоровья, энергии, и счетчики бомб и кристаллов. К концу "
"этого урока у вас будет GUI, готовый к управлению с помощью GDscript или "
"VisualScript:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:13
#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:621
msgid "The final result"
msgstr "Окончательный результат"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:15
msgid "You'll also learn to:"
msgstr "Вы также научитесь:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:17
msgid "Create flexible UI components"
msgstr "Создание гибких компонентов UI"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:18
msgid "Use scene inheritance"
msgstr "Использовать наследование сцен"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:19
msgid "Build a complex UI"
msgstr "Построение сложного UI"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:21
msgid ""
"Download the project files: :download:`ui_gui_design.zip <files/"
"ui_gui_design.zip>` and extract the archive. Import the `start/` project in "
"Godot to follow this tutorial. The `end/` folder contains the final result."
msgstr ""
"Скачайте файлы проекта: :download:`ui_gui_design.zip <files/ui_gui_design."
"zip>` и извлеките архив. Импортируйте проект `start/` в Godot, чтобы "
"следовать этому руководству. Папка `end/`содержит конечный результат."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:25
msgid ""
"You can watch this tutorial as a `video on Youtube <https://www.youtube.com/"
"watch?v=y1E_y9AIqow>`_."
msgstr ""
"Вы можете посмотреть это руководство как `видео на Youtube <https://www."
"youtube.com/watch?v=y1E_y9AIqow>`_."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:28
msgid "Breaking down the UI"
msgstr "Разбивка UI"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:30
msgid ""
"Let's break down the final UI and plan the containers we'll use. As in the :"
"doc:`ui_main_menu`, it starts with a ``MarginContainer``. Then, we can see "
"up to three columns:"
msgstr ""
"Давайте разберём окончательный UI спланируем, какие контейнеры мы будем "
"использовать. Как и в: :doc:`ui_main_menu`, начнём с ``MarginContainer``. "
"Затем мы видим три столбца:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:34
msgid "The life and energy counters on the left"
msgstr "Слева счетчики здоровья и энергии"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:35
msgid "The life and energy bars"
msgstr "Шкалы здоровья и энергии"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:36
#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:42
msgid "The bomb and emerald counters on the right"
msgstr "Справа счётчики бомб и кристаллов"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:38
msgid ""
"But the bar's label and the gauge are two parts of the same UI element. If "
"we think of them this way, we're left with two columns:"
msgstr ""
"Но счётчики и шкалы являются частями одного и того же элемента UI. Таким "
"образом, у нас остались две колонки:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:41
msgid "The life and energy bars on the left"
msgstr "Слева шкалы здоровья и энергии"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:44
msgid ""
"This makes it easier to nest containers: we have some margins around the "
"border of the screen using a ``MarginContainer``, followed by an "
"``HBoxContainer`` to manage our two columns. The two bars stack on top of "
"one another inside a ``VBoxContainer``. And we'll need a last "
"``HBoxContainer`` in the right column to place the bomb and emerald counters "
"side-by-side."
msgstr ""
"Это облегчает вложение контейнеров: у нас есть некоторые поля вокруг границы "
"экрана с помощью ``MarginContainer``, а затем ``HBoxContainer`` для "
"управления нашими двумя колонками. Две шкалы ложатся друг на друга внутри "
"``VBoxContainer``. И нам понадобится последний ``HBoxContainer`` в правой "
"колонке, чтобы поместить счетчики бомб и кристаллов бок о бок."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:53
msgid "We get a clean UI layout with only 4 containers"
msgstr "Мы получаем чистую компоновку UI только с 4 контейнерами"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:55
msgid ""
"We will need extra containers inside the individual UI components, but this "
"gives us the main GUI scene's structure. With this plan in place, we can "
"jump into Godot and create our GUI."
msgstr ""
"Нам понадобятся дополнительные контейнеры внутри некоторых компонентов UI, "
"но это дает нам структуру основной сцены GUI. С этим планом мы можем перейти "
"в Godot и создать наш GUI."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:60
msgid "Create the base GUI"
msgstr "Создание базового GUI"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:62
msgid ""
"There are two possible approaches to the GUI: we can design elements in "
"separate scenes and put them together, or prototype everything in a single "
"scene and break it down later. I recommend working with a single scene as "
"you can play with your UI's placement and proportions faster this way. Once "
"it looks good, you can save entire sections of the node tree as reusable sub-"
"scenes. We'll do that in a moment."
msgstr ""
"Есть два способа создания GUI: можно проектировать каждый элемент в "
"отдельной сцене, или же сделать прототипы всех элементов в одной сцене и "
"разбить это на сцены позже. Я рекомендую работать с одной сценой, ведь это "
"позволит вам экспериментировать с пропорциями и я расположением элементов "
"UI. Как только вы добьётесь желанного результата, можно будет сохранить "
"целые разделы дерева узлов как отдельные сцены, которые можно будет "
"переиспользовать. Мы сделаем это немного позже."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:69
msgid "For now, let's start with a few containers."
msgstr "Сейчас давайте начнем с нескольких контейнеров."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:71
msgid ""
"Create a new scene and add a ``MarginContainer``. Select the node and name "
"it ``GUI``."
msgstr ""
"Создайте новую сцену и добавьте ``MarginContainer``. Выберите узел и "
"назовите его ``GUI``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:74
msgid ""
"We want our interface to anchor to the top of the screen. Select the ``GUI`` "
"node and click the Layout button at the top of the viewport. Select the "
"``Top Wide`` option. The ``GUI`` node will anchor to the top edge of its "
"parent, the viewport by default. It will resize automatically on the "
"vertical axis to make space for its child UI components."
msgstr ""
"Мы хотим, чтобы наш интерфейс был привязан к верхней части экрана. Выберите "
"узел ``GUI`` и нажмите кнопку «Макет» в верхней части окна. Выберите опцию "
"``Top Wide``. Узел ``GUI`` будет привязан к верхнему краю родительского "
"элемента, по умолчанию — к видовому экрану. Он будет автоматически изменять "
"размер по вертикальной оси, чтобы дать пространство для его дочерних "
"компонентов."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:80
msgid "Save the scene as ``GUI.tscn``. We will put the entire GUI in it."
msgstr "Сохраните сцену как ``GUI.tscn``. Мы оставим весь GUI в нём."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:82
msgid ""
"With the ``MarginContainer`` selected, head to the inspector and scroll down "
"to the custom constants section. Unfold it and click the field next to each "
"of the ``Margin`` properties. Set them all to ``20`` pixels. Next, add an "
"``HBoxContainer`` node. This one will contain our two bars on the left and "
"separate them from the two counters on the right."
msgstr ""
"Выбрав ``MarginContainer``, направляйтесь к инспектору и прокрутите вниз до "
"раздела пользовательских констант(custom constants). Разверните его и "
"щелкните на поле рядом с каждым из свойств ``Margin``. Установите их все на "
"``20`` пикселей. Затем добавьте узел ``HBoxContainer``. Он будет содержать "
"наши две шкалы слева и отделять их от двух счетчиков справа."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:88
#, fuzzy
msgid ""
"We want to stack the bars vertically inside the ``HBoxContainer``. Add a "
"``VBoxContainer`` as a child of ``HBoxContainer`` and name it ``Bars``. "
"Select the parent ``HBoxContainer`` again and this time, add another "
"``HBoxContainer`` as a child of it. Call it ``Counters``. With these four "
"containers, we have the base for our GUI scene."
msgstr ""
"Мы хотим, чтобы шкалы были вертикальными внутри ``HBoxContainer``. Чтобы "
"сделать это, давайте добавим ``VBoxContainer``. Назовите его ``Bars``. "
"Выберите родитель ``HBoxContainer`` снова, и на этот раз, добавьте еще один "
"``HBoxContainer``. Он будет держать счетчики, поэтому назовите его "
"``Counters``. С этими четырьмя контейнерами, у нас есть базис для нашей GUI "
"сцены."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:95
msgid "You should have 4 containers that look like this"
msgstr "У нас должны быть 4 контейнера, которые выглядят так"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:99
#, fuzzy
msgid ""
"We can work this way because we first broke down our UI design and took a "
"few moments to think about the containers we'd use. When you follow a "
"tutorial like this, it may seem weird. But once you're working on real "
"games, you'll see it's an efficient workflow."
msgstr ""
"Мы можем работать таким образом, потому что сначала мы сделали разбивку "
"дизайна UI и потратили пару минут, чтобы поразмышлять о контейнерах, которые "
"мы будем использовать. Пока вы следуете руководству, это может показаться "
"странным. Но как только вы начнете разрабатывать реальные игры, вы увидите, "
"что это эффективный рабочий процесс."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:105
msgid "Create the bars' base"
msgstr "Создание базы для шкал прогресса"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:107
msgid ""
"Each bar is split into two sub-elements that align horizontally: the label "
"with the health count on the left, and the gauge on the right. Once again, "
"the ``HBoxContainer`` is the perfect tool for the job. Select the ``Bars`` "
"node and add a new ``HBoxContainer`` inside of it. Name it ``Bar``."
msgstr ""
"Каждая шкала делится на два подэлемента, которые выравниваются по "
"горизонтали: ярлык с количеством здоровья слева и датчик справа. Еще раз, "
"``HBoxContainer`` является идеальным инструментом для работы. Выберите узел "
"``Bars`` и добавьте новый ``HBoxContainer`` внутри него. Назовите его "
"``Bar``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:113
msgid ""
"The label itself requires at least three nodes: a ``NinePatchRect`` for the "
"background, on top of which we'll add a texture on the left, either ``HP`` "
"or ``EP``, and a ``Label`` on the right for the value. We can nest "
"``Control`` nodes however we want. We could use the ``NinePatchRect`` as a "
"parent for the two other elements, as it encompasses them. In general, you "
"want to use containers instead, as their role is to help organize UI "
"components. We'll need a ``MarginContainer`` later anyway to add some space "
"between the life count and the gauge. Select the ``Bar`` and add a "
"``MarginContainer``. Name it ``Count``. Inside of it, add three nodes:"
msgstr ""
"Сама метка требует по крайней мере трех узлов: a ``NinePatchRect`` для фона, "
"над которым мы добавим текстуру слева, для ``HP``  или ``EP``, и еще "
"``Label`` справа для значения. Мы могли бы вложить ``Control`` узлы, как нам "
"угодно. И даже использовать ``NinePatchRect`` в качестве родителя для двух "
"других элементов, так как они включают в себя их. Но все же, вместо этого "
"нужно использовать контейнеры, поскольку их роль состоит в том, чтобы помочь "
"упорядочить компоненты UI. Нам понадобится ``MarginContainer`` позже в любом "
"случае, чтобы добавить некоторое пространство между количеством жизни и "
"датчика. Выберите ``Bar`` и добавьте ``MarginContainer``. Назовите его "
"``Count``. Внутри него, добавить три узла:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:124
msgid "A ``NinePatchRect`` named ``Background``"
msgstr "``NinePatchRect`` с именем ``Background``"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:125
msgid "A ``TextureRect`` named ``Title``"
msgstr "``TextureRect`` с именем ``Title``"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:126
msgid "And a ``Label`` named ``Number``"
msgstr "И ``Label`` с именем ``Number``"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:128
msgid "To add the nodes as siblings, always select the ``Count`` node first."
msgstr ""
"Чтобы добавлять узлы на один и тот же уровень, всегда сначала выбирайте узел "
"``Count``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:132
msgid ""
"Your scene tree should look like this. We're ready to throw in some textures"
msgstr ""
"Ваше дерево сцены должно выглядеть так. Мы готовы добавить несколько текстур"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:135
msgid ""
"Our scene is still empty. It's time to throw in some textures. To load the "
"textures, head to the FileSystem dock to the left of the viewport. Browse "
"down to the res://assets/GUI folder."
msgstr ""
"Наша сцена по-прежнему пуста. Самое время, чтобы поместить в неё какие-"
"нибудь текстуры. Для загрузки текстур, направляйтесь в файловую систему "
"слева от окна. Перейдите вниз к папке res://assets/GUI."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:141
msgid "You should see a list of textures that we'll use to skin our interface."
msgstr ""
"Вы должны увидеть список текстур, которые мы будем использовать для нашего "
"интерфейса."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:144
msgid ""
"Select the ``Background`` in the Scene dock. In the Inspector, you should "
"see a ``Texture`` property. In the FileSystem tab, click and drag "
"``label_HP_bg.png`` onto the ``Texture`` slot. It stays squashed. The parent "
"MarginContainer will force its size down to 0 until we force elements inside "
"the container to have a minimum size. Select the ``Background`` node. In the "
"Inspector, scroll down to the Rect section. Set ``Min Size`` to (100, 40). "
"You should see the ``Background`` resize along with its parent containers."
msgstr ""
"Выберите ``Background`` в панели сцены. В инспекторе вы найдите свойство "
"``Texture``. Из вкладки Файловая система перетащите ``label_HP_bg.png`` на "
"параметр ``Texture``. Картинка будет сжата. Родительский MarginContainer "
"будет уменьшать его размер до нуля, пока мы принудительно не изменим "
"элементы внутри контейнера, чтобы получить минимальный размер. Выберите узел "
"``Background``. В инспекторе прокрутите вниз до раздела Rect. Установите "
"``Min Size`` на (100, 40). Вы должны увидеть изменение размера "
"``Background`` вместе с его родительскими контейнерами."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:153
#, fuzzy
msgid ""
"Next, select the ``Title`` and drag and drop ``label_HP.png`` into its "
"``Texture`` slot. Select the ``Number`` node, click the field next to the "
"``Text`` property and type ``10``. This way, we can see both nodes in the "
"viewport. They should stack up in the top-left corner of their parent "
"``MarginContainer``."
msgstr ""
"Далее, выберите ``Title`` и перетащите ``label_HP.png`` в его слот "
"``Texture``. Выберите узел ``Number``, щелкните на поле рядом с свойством "
"``Text`` и введите ``10``. Таким образом, мы можем видеть оба узла на "
"видовом экране. Они должны складываться в верхнем левом углу своего родителя "
"``MarginContainer``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:161
msgid "If you select both nodes, you should see something like this"
msgstr "Если вы выберите оба узла, вы должны увидеть что-то такое"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:163
#, fuzzy
msgid ""
"As they have a container as their direct parent, we cannot move them freely: "
"the ``Count`` node will always reset their anchors, their size and position. "
"Try to move and resize the nodes in the viewport. Then, select any of the "
"three textures and press Ctrl Up or Ctrl Down to reorder them in the Scene "
"dock. They'll snap back to their previous size and position."
msgstr ""
"Поскольку у них есть контейнер в качестве прямого родителя, мы не можем "
"свободно перемещать их: узел ``Count`` всегда будет сбрасывать свои якоря, "
"их размер и положение. Попробуйте переместить и изменить размер узлов на "
"видовом экране. Затем выберите любой из трех текстур и нажмите Ctrl + Up или "
"Ctrl Down, чтобы упорядочить их в сцене. Они вернуться к их предыдущему "
"размеру и положению."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:170
msgid ""
"Parent containers control the size, the scale, the margins, and the anchors "
"of their direct children. To modify the nodes, you must nest them inside a "
"regular Control or another UI element. We'll use the ``Background`` as a "
"parent for the ``Title`` and ``Number``. Select both the ``Title`` and "
"``Number``, and drag and drop them onto ``Background``."
msgstr ""
"Родительские контейнеры управляют размером, масштабом, отступами и якорями "
"их дочерних элементов. Чтобы изменить узлы, необходимо вложить их в обычный "
"элемент управления Control или другой элемент UI. Мы будем использовать "
"``Background`` в качестве родителя для ``Title`` и``Number``. Выберите "
"``Title`` and ``Number``, и перетащите их на ``Background``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:179
msgid ""
"By using the Background node as the two textures' parent, we take control "
"away from the Count MarginContainer"
msgstr ""
"Используя узел Background в качестве родителя для двух текстур, мы берем под "
"контроль Count который является MarginContainer'ом"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:182
#, fuzzy
msgid ""
"Select the ``Title`` and in the Inspector, change its ``Stretch Mode`` "
"property to ``Keep Centered``. Next find the ``Rect`` category in the "
"Inspector and change the ``Size`` property to (50, 40) so it only takes the "
"left half of the background.  Next, select the ``Number`` node. In the "
"viewport, click the ``Layout`` menu and click ``Full Rect``. The node will "
"resize to fit the ``Background``. Head to the Inspector and change its "
"``Align`` property to ``Right``, and the ``VAlign`` property to ``Center``. "
"The text should snap to the center of the ``Background``'s right edge. "
"Resize the node horizontally, so it takes the right half of the "
"``Background`` and there's a bit of padding with the right edge."
msgstr ""
"Выберите ``Title`` и в инспекторе, измените его ``Stretch Mode`` на ``Keep "
"Centered``. Далее найдите категорию ``Rect`` в инспекторе и измените "
"свойство ``Size`` на (50, 40), так что это займет только левую половину "
"заднего фона.  Затем выберите узел ``Number``. В окне просмотра щелкните на "
"``Layout`` и выберите ``Full Rect``. Размер узла будет изменен в "
"соответствии с ``Background``. Отправляйтесь к инспектору и измените его "
"свойство ``Align`` на ``Right`` и ``VAlign`` на ``Center``. Текст должен "
"быть привязан к центру правого края ``Background``'a. Измените размер узла "
"по горизонтали так, чтобы он занимал правую половину ``Background``'a и было "
"немного отступа с правого края."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:195
msgid ""
"Here's how the nodes' bounding boxes should look in the viewport. Keep it "
"rough, you don't need to place them too precisely for now."
msgstr ""
"Вот как грани узлов должны выглядеть на видовом экране. Они расставлены "
"грубо, но вам и не нужно размещать их слишком точно сейчас."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:199
msgid "Replace the Label's font"
msgstr "Замена шрифта у Label"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:201
msgid ""
"The label's font is too small. We need to replace it. Select the ``Number`` "
"node and in the Inspector, scroll down to the ``Control`` class, and find "
"the ``Custom Font`` category. Click the field next to the ``Font`` property "
"and click on ``New Dynamic Font``. Click on the field again and select Edit."
msgstr ""
"Шрифт у метки(label) слишком мал. Нам нужно его изменить. Выберите узел "
"``Number`` в инспекторе, и прокрутите вниз до класса ``Control`` и найдите "
"категорию ``Custom Font``. Щелкните на поле рядом со свойством ``Font`` и "
"выберите ``New Dynamic Font``. Нажмите на поле еще раз и выберите "
"Редактировать."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:207
#, fuzzy
msgid ""
"You will enter the ``Dynamic Font`` resource. Unfold the ``Font`` category "
"and click the field next to ``Font Data``. Click the ``Load`` button. In the "
"file browser, navigate down to the assets/font folder and double click "
"``Comfortaa-Bold.ttf`` to open it. You should see the font update in the "
"viewport. Unfold the settings category to change the font size. Set the "
"``Size`` property to a higher value, like ``24`` or ``28``."
msgstr ""
"Вы попадете в ``Dynamic Font``. Разверните категорию ``Font`` и щелкните на "
"поле рядом с ``Font Data``. Нажмите кнопку ``Load``. В браузере файлов, "
"перейдите вниз к папке Assets/Font и дважды щелкните на ``Comfortaa-Bold."
"ttf``, чтобы открыть его. Вы должны увидеть обновление шрифта на видовом "
"экране. Разверните категорию параметров, чтобы изменить размер шрифта. "
"Задайте для свойства ``Size`` более высокое значение, например ``24`` "
"или``28``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:215
#, fuzzy
msgid ""
"We now need the text's baseline, the number's lower edge, to align with the "
"HP texture on the left. To do so, still in the ``DynamicFont`` resource, you "
"can tweak the ``Bottom`` property under the ``Extra Spacing`` category. It "
"adds some bottom padding to the text. Click the ``Number`` node in the Scene "
"tab to go back to the node's properties and change the ``VAlign`` to "
"``Bottom``. To adjust the text's baseline, click on the font field under the "
"``Custom Font`` category again and tweak the ``Bottom`` property until the "
"text aligns with the ``Title`` node. I used a value of ``2`` pixels."
msgstr ""
"Теперь нам нужно изменить нижний край числа, чтобы выровнять с текстурой HP "
"слева. Для этого, все в том же ``DynamicFont``, вы можете настроить свойство "
"``Bottom`` находящийся в категории ``Extra Spacing``. Оно добавляет "
"некоторое расстояние от текста. Щелкните на узел ``Number``, чтобы вернуться "
"к свойствам узла и изменить ``VAlign`` на ``Bottom``. Чтобы изменить линию "
"текста, нажмите на поле шрифта в категории ``Custom Font`` и настройте "
"свойство ``Bottom``, пока текст не будет выровнен с узлом ``Title``. Я "
"использовал значение ``2``'ух пикселей."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:227
msgid "With a Bottom value of 2 pixels, the Number aligns with the Title"
msgstr "При значении Bottom, равным 2 пикселям, Number выравнивается по Title"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:229
msgid ""
"With this, we finished the hardest part of the GUI. Congratulations! Let's "
"move on to the simpler nodes."
msgstr ""
"С этим, мы закончили самую сложную часть. Поздравляю! Давайте перейдем к "
"более простым узлам."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:233
msgid "Add the progress bar"
msgstr "Добавление шкалы прогресса"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:235
msgid ""
"We need one last element to complete our life bar: the gauge itself. Godot "
"ships with a ``TextureProgress`` node that has everything we need."
msgstr ""
"Нам нужен один последний элемент, чтобы закончить нашу шкалу жизни: "
"собственно сам датчик. Узел ``TextureProgress`` имеет все, что нам нужно."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:238
msgid ""
"Select the Bar node and add a ``TextureProgress`` inside of it. Name it "
"``Gauge``. In the inspector unfold the ``Textures`` section. Head to the "
"FileSystem dock and drag and drop the ``lifebar_bg.png`` texture onto the "
"``Under`` slot. Do the same with the ``lifebar_fill.png`` image and drop it "
"onto the ``Progress`` slot. Under the ``Range`` class in the inspector, "
"change the ``Value`` property to ``50`` to see the gauge fill up."
msgstr ""
"Выберите узел Bar и добавьте в него ``TextureProgress``. Назовите его "
"``Gauge``. В инспекторе разверните раздел ``Textures``. Направляйтесь в "
"файловую систему и перетащите текстуру ``lifebar_bg.png`` в гнездо "
"``Under``. Сделайте то же самое с ``lifebar_fill.png`` и поместите его на "
"слот ``Progress``. Под классом ``Range`` в инспекторе измените свойство "
"``Value`` на ``50``, чтобы увидеть, что датчик заполняется."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:246
msgid "With only five ``Control`` nodes, our first bar is ready to use."
msgstr ""
"С только пятью узлами ' ' Control ' ', наша первая шкала готова к "
"использованию."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:250
msgid ""
"That's it, our life bar is ready. This last part was quick, wasn't it? "
"That's thanks to our robust container setup."
msgstr ""
"Вот и все, наша шкала здоровья готова. Последняя часть была быстрой, не так "
"ли? Это благодаря нашей хорошей установке контейнера."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:254
#, fuzzy
msgid "Design the bomb and emerald counters"
msgstr "Разработка счетчика бомб и кристаллов"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:256
#, fuzzy
msgid ""
"The bomb and emerald counters are like the bar's ``Count`` node. So we'll "
"duplicate it and use it as a template."
msgstr ""
"Счетчики бомб и кристаллов похожи на шкалу узла ``Count``. Таким образом, мы "
"будем дублировать его и использовать его в качестве шаблона."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:259
msgid ""
"Under the ``Bar`` node, select ``Count`` and press Ctrl D to duplicate it. "
"Drag and drop the new node under the ``Counters`` ``HBoxContainer`` at the "
"bottom of the scene tree. You should see it resize automatically. Don't "
"worry about this for now, we'll fix the size soon."
msgstr ""
"В узле ``Bar`` выберите ``Count`` и нажмите ``Ctrl+D``, чтобы дублировать "
"его. Перетащите новый узел под ``Counters`` в нижнюю часть дерева сцены. Вы "
"должны увидеть как он изменит размер автоматически. Не беспокойтесь об этом "
"сейчас, мы исправим его в ближайшее время."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:264
#, fuzzy
msgid ""
"Rename the ``Count2`` node to ``Counter``. Unlike the bars, we want the "
"number to be on the left, and an icon to sit on the right. The setup is the "
"same: we need a background (a ``NinePatchRect``), the title, and the number "
"nodes. The ``Title`` node is a ``TextureRect``, so it's what we need to "
"display the icon. In the scene tree, select the ``Title`` node, and rename "
"it to ``Icon``."
msgstr ""
"Переименуйте узел ``Count2`` в ``Counter``. В отличие от шкал, мы хотим, "
"чтобы число было слева, а иконку - справа. Настройка одинакова: нам нужен "
"фон, ``NinePatchFrame``, и узлы для надписи и числа. Узел ``Title`` является "
"``TextureRect``, так что нам нужно отобразить иконку. В дереве сцены "
"выберите узел ``Title`` и переименуйте его в ``Icon``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:273
msgid "Here's how your node tree should look so far"
msgstr "Вот так древо узлов должно выглядеть на данный момент"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:275
#, fuzzy
msgid ""
"With the ``Icon`` node selected, in the inspector, scroll to the top to see "
"the ``Texture`` slot. Head to the FileSystem dock on the left and select the "
"``bombs_icon.png``. Drag and drop it onto the ``Texture`` slot. In the Scene "
"Tab select both the ``Icon`` and the ``Number`` nodes. Click the Layout menu "
"in the toolbar at the top of the viewport and select ``Full Rect``. Both "
"nodes will update to fit the size of the ``Background``."
msgstr ""
"Выбрав узел ``Icon``, в инспекторе прокрутите вверх, чтобы увидеть слот "
"``Texture``. Направляйтесь в файловую систему слева и выберите ``bombs_icon."
"png``. Перетащите его на слот ``Texture``. На вкладке Сцена выберите узлы "
"``Icon`` и ``Number``. Щелкните на Макет на панели инструментов в верхней "
"части окна и выберите ``Full Rect``. Оба узла будут обновляться в "
"соответствии с размером ``Background'a``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:285
#, fuzzy
msgid "The nodes anchor to the entire Background, but their position is off"
msgstr "Узлы привязаны ко всему Background'у, но их положение свободное"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:287
#, fuzzy
msgid ""
"Let's change the ``Number``'s align properties to move it to the left and "
"center of the ``Background``. Select the ``Number`` node, change its "
"``Align`` property to left and the ``VAlign`` property to centre. Then "
"resize its left edge a little bit to add some padding between the left edge "
"of the ``Background`` and the text."
msgstr ""
"Давайте изменим свойство выравнивания у ``Number'ов``, чтобы переместить его "
"влево и по центру ``Background'a``. Выберите узел ``Number``, измените его "
"свойство ``Align`` на влево(left) и свойство ``VAlign`` на центр(center). "
"Затем измените размер левого края немного, чтобы добавить некоторое "
"пространство между левым краем ``Background'a`` и текстом."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:295
msgid "The Number node aligned to the left and centre"
msgstr "Узел Number выравнивается по центру слева"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:297
msgid ""
"To overlap the Icon and the background, we need a few tweaks. First, our "
"background is a bit too tall. It's because it's inside a margin container "
"that is controlled by the top-most GUI node. Select the GUI node at the top "
"of the scene tree and downsize it vertically so that it's as thin as "
"possible. You'll see the gauge prevents you from making it too small. A "
"container cannot be smaller than the minimal size of its children. The "
"container's margins also weigh in."
msgstr ""
"Чтобы перекрывать иконку и фон, нам нужно кое-что подправить. Во-первых, наш "
"фон несколько высокий. Это потому, что он находится внутри "
"MarginСontainer'a, который контролируется самым верхним узлом GUI. Выберите "
"узел GUI в верхней части дерева сцены и уменьшите его по вертикали так, "
"чтобы он был как можно тоньше. Вы увидите, что датчик мешает вам сделать его "
"слишком маленьким. Родительский контейнер не может быть меньше минимального "
"размера его дочерних. Поля контейнера также учитываются."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:305
#, fuzzy
msgid ""
"Select the Icon, click the Layout menu, and select ``Full Rect`` to re-"
"center it. We need it to anchor to the ``Background``'s right edge. Open the "
"Layout menu again and select ``Center Right``. Move the icon up so it is "
"centered vertically with the ``Background``."
msgstr ""
"Выберите Icon, нажмите кнопку Макет, и выберите ``Full Rect``, чтобы "
"повторно отцентрировать его. Нам нужно привязать  ``Background`` к правому "
"краю. Снова откройте меню «Макет» и выберите ``Center Right``. Переместите "
"Icon вверх, поэтому он выравнивается центрально и по вертикали вместе с "
"``Background``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:313
msgid ""
"The bomb icon anchors to the Background's right edge. Resize the Counter "
"container to see the Icon node stick to its right side"
msgstr ""
"Иконка бомбы крепится к правому краю фона. Измените размер контейнера "
"Counter, чтобы увидеть как узел Icon прилипает к его правой стороне"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:316
msgid ""
"Because we duplicated the ``Counter`` from the bar's ``Count``, the "
"``Number`` node's font is off. Select the ``Number`` node again, head to the "
"``Font`` property, and click it to access the ``DynamicFont`` resource. In "
"the ``Extra Spacing`` section, change the ``Bottom`` value to ``0`` to reset "
"the font's baseline. Our counter now works as expected."
msgstr ""
"Поскольку мы продублировали ``Counter`` как ``Count``, шрифт узла ``Number`` "
"сломался. Снова выберите узел ``Number``, перейдите к свойству ``Font`` и "
"щелкните по нему, чтобы получить доступ к ``DynamicFont``. В разделе ``Extra "
"Spacing`` измените значение ``Bottom`` на ``0``, чтобы сбросить шрифт. "
"Теперь наш счетчик работает, как должен."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:323
#, fuzzy
msgid ""
"Let's make the ``Counters`` anchor to the right edge of the viewport. To do "
"so, we need to set the ``Bars`` container take all the available horizontal "
"space it can. Select the ``Bars`` node and scroll down to the ``Size Flags`` "
"category. In the ``Horizontal`` category, check the ``Expand`` value. The "
"``Bars`` node should resize and push the counter to the right side of the "
"screen."
msgstr ""
"Давайте привяжем``Counters`` к правому краю экрана. Чтобы сделать это, мы "
"должны заставить  контейнер ``Bars`` брать всё доступное горизонтальное "
"пространство. Выберите узел ``Bars`` и прокрутите вниз до раздела ``Size "
"Flags``. В категории ``Horizontal``, поставьте галочку возле значения "
"``Expand``. Узел ``Bars`` должен изменить размер и сдвинуть счетчик в правую "
"части экрана."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:331
msgid ""
"An expanding container eats all the space it can from its parent, pushing "
"everything else along the way"
msgstr ""
"Расширяясь контейнер забирает все пространство, которое он может взять от "
"своего родителя, толкая все остальные объекты"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:335
#, fuzzy
msgid "Turn the bar and counter into reusable UI components"
msgstr "Добавление панели и счетчика в UI"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:337
msgid ""
"We have one bar and one counter widget. But we need two of each. We may need "
"to change the bars' design or their functionality later on. It'd be great if "
"we could have a single scene to store a UI element's template, and child "
"scenes to work on variations. Godot lets us do this with Inherited Scenes."
msgstr ""
"У нас есть одна шкала и один счетчик. Но нам нужно по два. Нам придется "
"изменить конструкцию шкал или их функциональность. Было бы замечательно, "
"если бы мы могли иметь одну сцену для хранения UI шаблона, и дочерние сцены "
"для работы над вариациями нашего интерфейса. Godot позволяет нам делать это "
"с помощью наследования сцен."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:343
#, fuzzy
msgid ""
"Let's save both the ``Counter`` and the ``Bar`` branches as separate scenes "
"that we'll reduce to create the ``LifeBar``, the ``EnergyBar``, the "
"``BombCounter``, and the ``EmeraldCounter``. Select the ``Bar`` "
"HBoxContainer. Right click on it and click on ``Save Branch as Scene``. Save "
"the scene as ``Bar.tscn``. You should see the node branch turn it to a "
"single ``Bar`` node."
msgstr ""
"Давайте сохраним ``Counter`` и  ``Bar`` как отдельные сцены, число которых "
"мы будем уменьшать для создания ``LifeBar``, ``EnergyBar``, ``BombCounter``, "
"и ``RupeeCounter``. Выберите HBoxContainer с именем ``Bar``. Щелкните правой "
"кнопкой мыши на нем и нажмите на ``Сохранить ветку как сцену``. Сохраните "
"сцену как ``Bar.tscn``. Вы должны увидеть, что вся ветвь узла превратится в "
"один узел ``Bar``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:352
#, fuzzy
msgid ""
"A scene is a tree of nodes. The topmost node is the tree's **root**, and the "
"children at the bottom of the hierarchy are **leaves**. Any node other than "
"the root along with one or more children is a **branch**. We can encapsulate "
"node branches into separate scenes, or load and merge them from other scenes "
"into the active one. Right click on any node in the Scene dock and select "
"``Save Branch as Scene`` or ``Merge from Scene``."
msgstr ""
"Сцена представляет собой дерево узлов. Верхний узел является **корнем "
"(root)** дерева, и дети в нижней части иерархии **листья (leaves)**. Любой "
"узел, отличный от корня, вместе с еще одним дочерним является **ветвью "
"(branch)**. Мы можем инкапсулировать ветви узлов в отдельные сцены, или "
"загружать и объединять их из других сцен в активную сцену. Щелкните правой "
"кнопкой мыши на любом узле в панели сцен и выберите ``Сохранить ветвь как "
"сцену`` или ``Соединить со сценой``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:360
#, fuzzy
msgid ""
"Then, select the ``Counter`` node and do the same. Right click, ``Save "
"Branch as Scene``, and save it as ``Counter.tscn``. A new edit scene icon "
"appears to the right of the nodes in the scene tree. Click on the one next "
"to ``Bar`` to open the corresponding scene. Resize the ``Bar`` node so that "
"its bounding box fits its content. The way we named and placed the Control "
"nodes, we're ready to inherit this template and create the life bar. It's "
"the same for the ``Counter``."
msgstr ""
"Затем выберите узел ``Counter`` и сделайте то же самое. Щелкните правой "
"кнопкой мыши на ``Сохранить ветвь как сцену`` и сохраните ее как ``Counter."
"tscn``. Справа от узлов в дереве сцены появится новый значок редактирования "
"сцены. Нажмите на один рядом с ``Bar``, чтобы открыть соответствующую сцену. "
"Измените размер узла ``Bar`` так, чтобы его ограничивающий прямоугольник "
"соответствовал (по размерам) его содержимому. Теперь мы назвали и разместили "
"Control узлы, мы готовы наследовать этот шаблон и создать шкалу жизни. "
"Теперь сделайте то же самое для ``Counter``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:370
msgid "With no extra changes, our Bar is ready to use"
msgstr "Без каких-либо лишних изменений, наша шкала готова к использованию"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:373
#, fuzzy
msgid "Use scene inheritance to create the remaining elements"
msgstr "Использование Наследования для создания оставшихся элементов"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:375
msgid ""
"We need two bars that work the same way: they should feature a label on the "
"left, with some value, and a horizontal gauge on the right. The only "
"difference is that one has the HP label and is green, while the other is "
"called EP and is yellow. Godot gives us a powerful tool to create a common "
"base to reuse for all bars in the game: **inherited scenes**."
msgstr ""
"Нам нужны две шкалы, которые работают одинаково: они должны иметь Label "
"слева, с некоторым значением и горизонтальным счетчиком справа. Единственная "
"разница заключается в том, что один имеет HP Label и он зеленый, а другой "
"называется EP и он желтый. Godot дает нам мощный инструмент для создания "
"шаблонов для повторного их использования для всех шкал в игре:  "
"**Наследование Сцен**."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:383
msgid ""
"Inherited scenes help us keep the GUI scene clean. In the end, we will only "
"have containers and one node for each UI component."
msgstr ""
"Унаследованные сцены помогают нам делать сцену GUI чище. В конце концов, мы "
"будем иметь только контейнеры и один узел для каждого компонента UI."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:386
#, fuzzy
msgid ""
"On an inherited scene, you can change any property of every node in the "
"inspector, aside from its name. If you modify and save the parent scene, all "
"the inherited scenes update to reflect the changes. If you change a value in "
"the inherited scene, it will always override the parent's property. It's "
"useful for UIs, as they often require variations of the same elements. In "
"general, in UI design, buttons, panels etc. share a common base style and "
"interactions. We don't want to copy it over to all variations manually."
msgstr ""
"В унаследованной сцене можно изменить любое свойство каждого узла в "
"инспекторе, кроме его имени. При изменении и сохранении родительской сцены "
"все унаследованные сцены обновляются в соответствии с изменениями. Если "
"изменить значение в унаследованной сцене, оно всегда переопределяет "
"родительское свойство. Это полезно для UI, так как они часто требуют "
"вариаций одних и тех же элементов. В общем, в дизайне UI, кнопки, панели и т."
"д. имеют общий базовый стиль и взаимодействия. Мы не хотим копировать все "
"его вариации вручную."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:395
msgid ""
"A reload icon will appear next to the properties you override. Click it to "
"reset the value to the parent scene's default."
msgstr ""
"Рядом со свойствами, которые вы переопределяете, появится значок "
"перезагрузки. Щелкните его, чтобы сбросить значение на по-умолчанию "
"родительской сцены."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:400
msgid ""
"Think of scene inheritance like the node tree, or the ``extends`` keyword in "
"GDScript. An inherited scene does everything like its parent, but you can "
"override properties, resources and add extra nodes and scripts to extend its "
"functionality."
msgstr ""
"Подумайте о наследовании сцены, как о древе узлов, или ключевом слове в "
"GDScript``extends``. Унаследованная сцена делает все, как и ее родительский "
"элемент, но можно переопределить свойства, ресурсы и добавить дополнительные "
"узлы и скрипты для расширения функциональности."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:406
msgid "Inherit the Bar Scene to build the LifeBar"
msgstr "Наследование Bar для создания шкалы здоровья"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:408
msgid ""
"Go to ``Scene -> New Inherited Scene`` to create a new type of ``Bar``. "
"Select the Bar scene and open it. You should see a new [unsaved] tab, that's "
"like your ``Bar``, but with all nodes except the root in grey. Press ``Meta"
"+S`` to save the new inherited scene and name it ``LifeBar``."
msgstr ""
"Перейдите к ``Сцена -> Новая Унаследованная сцена`, чтобы создать новый тип "
"``Bar``. Выберите сцену Bar и откройте ее. Вы должны увидеть новую "
"[несохраненную] вкладку, которая, такая же как ваш ``Bar``, но со всеми "
"узлами, кроме корневой сцены в сером цвете. Нажмите ``Ctrl+S`` для "
"сохранения Новой Унаследованной сцены и назовите ее ``LifeBar``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:416
msgid "You can't rename grey nodes. This tells you they have a parent scene"
msgstr ""
"Нельзя переименовать серые узлы. Это говорит вам, что у них есть "
"родительская сцена"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:418
#, fuzzy
msgid ""
"First, rename the root or top level node to ``LifeBar``. We always want the "
"root to describe exactly what this UI component is. The name differentiates "
"this bar from the ``EnergyBar`` we'll create next. The other nodes inside "
"the scene should describe the component's structure with broad terms, so it "
"works with all inherited scenes. Like our ``TextureProgress`` and ``Number`` "
"nodes."
msgstr ""
"Сначала переименуйте корневой или верхний узел в ``LifeBar``. Желательно, "
"чтобы корень описал именно то, что этот компонент UI. Название отличает этот "
"бар от ``EnergyBar``, который мы создадим следующим. Другие узлы внутри "
"сцены должны описывать структуру компонента с широкими терминами, поэтому он "
"работает со всеми унаследованными сценами. Как наши ``TextureProgress`` и "
"``Number`` узлы."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:427
#, fuzzy
msgid ""
"If you've ever done web design, it's the same spirit as working with CSS: "
"you create a base class, and add variations with modifier classes. From a "
"base button class, you'll have button-green and button-red variations for "
"the user to accept and refuse prompts. The new class contains the name of "
"the parent element and an extra keyword to explain how it modifies it. When "
"we create an inherited scene and change the name of the top level node, "
"we're doing the same thing."
msgstr ""
"Если вы когда-либо делали веб-дизайн, то это схоже с работой с CSS: вы "
"создаете базовый класс и добавляете вариации с классами модификаторов. От "
"базового класса кнопок, у вас будут вариации зеленая и красная кнопки для "
"пользователя, чтобы принимать и отказываться от чего-то. Новый класс "
"содержит имя родительского элемента и дополнительное ключевое слово, чтобы "
"объяснить, как он изменяет его. Когда мы создаем унаследованную сцену и "
"изменяем имя узла верхнего уровня, мы делаем то же самое."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:436
msgid "Design the EnergyBar"
msgstr "Дизайн шкалы Энергии"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:438
msgid ""
"We already setup the ``LifeBar``'s design with the main ``Bar`` scene. Now "
"we need the ``EnergyBar``."
msgstr ""
"Мы уже создали дизайн ``LifeBar'a`` с главной сценой``Bar``. Теперь нам "
"нужно сделать ``EnergyBar``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:441
msgid ""
"Let's create a new inherited scene, and once again select the ``Bar.tscn`` "
"scene and open it. Double-click on the ``Bar`` root node and rename it to "
"``EnergyBar``. Save the new scene as ``EnergyBar.tscn``. We need to replace "
"the HP texture with EP one, and to change the textures on the gauge."
msgstr ""
"Давайте создадим новую унаследованную сцену и еще раз выбираем сцену ``Bar."
"tscn`` и откроем ее. Дважды щелкните на корневой узел ``Bar`` и переименуйте "
"его в ``EnergyBar``. Сохраните новую сцену как ``EnergyBar.tscn``. Мы должны "
"заменить текстуру HP на EP, и изменить текстуры на шкале."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:447
msgid ""
"Head to the FileSystem dock on the left, select the ``Title`` node in the "
"Scene tree and drag and drop the ``label_EP.png`` file onto the texture "
"slot. Select the ``Number`` node and change the ``Text`` property to a "
"different value like ``14``."
msgstr ""
"Направляйтесь к панели файловой системы слева, выберите узел ``Title`` в "
"дереве сцены и перетащите файл ``label_EP.png`` на слот текстуры(texture). "
"Выберите узел ``Number`` и измените его свойство ``Text`` на другое "
"значение, например ``14``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:452
msgid ""
"You'll notice the EP texture is smaller than the HP one. We should update "
"the ``Number``'s font size to better fit it. A font is a resource. All the "
"nodes in the entire project that use this resource will be affected by any "
"property we change. You can try to change the size to a huge value like "
"``40`` and switch back to the ``LifeBar`` or the ``Bar`` scenes. You will "
"see the text increased in size."
msgstr ""
"Вы заметите, что текстура EP меньше, чем HP. Мы должны обновить размер "
"шрифта у ``Number'ов``, чтобы он был более подходящим. Шрифт — это ресурс. "
"Все узлы во всем проекте, в которых используется этот ресурс, будут "
"затронуты любым изменяемым свойством. Вы можете изменить размер на огромное "
"значение, к примеру ``40`` и переключитесь обратно в сцену ``LifeBar`` или "
"``Bar``. Вы увидите, что текст увеличился в размерах."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:461
msgid "If we change the font resource, all the nodes that use it are affected"
msgstr ""
"Если мы изменим ресурс шрифта, все используемые им узлы будут затронуты"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:464
msgid ""
"To change the font size on this node only, we must create a copy of the font "
"resource. Select the ``Number`` node again and click on the wrench and "
"screwdriver icon on the top right of the inspector. In the drop-down menu, "
"select the ``Make Sub-Resources Unique`` option. Godot will find all the "
"resources this node uses and create unique copies for us."
msgstr ""
"Чтобы изменить размер шрифта только на этом узле, необходимо создать копию "
"ресурса шрифта. Снова выберите узел ``Number`` и нажмите на значок гаечного "
"ключа и отвертки в правом верхнем углу инспектора. В раскрывающемся меню "
"выберите опцию ``Сделать вложенные ресурсы уникальным``. Godot найдет все "
"ресурсы, которые использует этот узел, и создаст для нас уникальные копии."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:472
msgid "Use this option to create unique copies of the resources for one node"
msgstr ""
"Используйте этот параметр для создания уникальных копий ресурсов для одного "
"узла"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:476
msgid ""
"When you duplicate a node from the Scene tree, with ``Meta+D``, it shares "
"its resources with the original node. You need to use ``Make Sub-Resources "
"Unique`` before you can tweak the resources without affecting the source "
"node."
msgstr ""
"При дублировании узла из дерева сцены с помощью ``Ctrl+D``, он делит свои "
"ресурсы с исходным узлом. Вы должны использовать ``Сделать вложенные ресурсы "
"уникальными`` перед тем, как вы сможете настроить ресурсы, не влияя на "
"исходный узел."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:481
#, fuzzy
msgid ""
"Scroll down to the ``Custom Font`` section and open ``Font``. Lower the "
"``Size`` to a smaller value like ``20`` or ``22``. You may also need to "
"adjust the ``Bottom`` spacing value to align the text's baseline with the EP "
"label on the left."
msgstr ""
"Прокрутите вниз до раздела ``Custom Font`` и откройте ``Font``. Уменьшите "
"``Size`` до меньшего значения, например ``20`` или ``22``. Также может "
"понадобиться настроить значение интервала ``Bottom`` для выравнивания "
"основания текста с Label EP слева."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:488
msgid "The EP Count widget, with a smaller font than its HP counterpart"
msgstr "Счетчик EP, с меньшим шрифтом, чем его аналог HP"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:490
msgid ""
"Now, select the ``TextureProgress`` node. Drag the ``energy_bar_bg.png`` "
"file onto the ``Under`` slot and do the same for ``energy_bar_fill.png`` and "
"drop it onto the ``Progress`` texture slot."
msgstr ""
"Теперь выберите узел ``TextureProgress``. Перетащите файл ``energy_bar_bg."
"png`` в слот ``Under`` и сделайте то же самое для ``energy_bar_fill.png`` и "
"поместите его на слот текстуры ``Progress``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:494
#, fuzzy
msgid ""
"You can resize the node vertically so that its bounding rectangle fits the "
"gauge. Do the same with the ``Count`` node until its size aligns with that "
"of the bar. Because the minimal size of ``TextureProgress`` is set based on "
"its textures, you won't be able to downsize the ``Count`` node below that. "
"That is also the size the ``Bar`` container will have. You may downscale "
"this one as well."
msgstr ""
"Вы можете изменить размер узла по вертикали, чтобы его ограничивающий "
"прямоугольник вмещался в шкалу. Проделайте тоже самое с ``Count`` до тех "
"пор, пока его размер не будет на ровне со шкалой. Поскольку минимальный "
"размер ``TextureProgress`` устанавливается на основе его текстур, вы не "
"сможете уменьшить узел ``Count``. Такой же размер будет иметь контейнер "
"``Bar``. Можно уменьшить и его."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:501
msgid ""
"Last but not least, the ``Background`` container has a minimum size that "
"makes it a bit large. Select it and in the ``Rect`` section, change the "
"``Min Size`` property down to ``80`` pixels. It should resize automatically "
"and the ``Title`` and ``Number`` nodes should reposition as well."
msgstr ""
"Последнее, но самое важное. Контейнер ``Background`` имеет свойство, "
"задающее минимальный размер. Текущее значение делает элемент немного "
"великоватым. Выберите этот элемент и в разделе ``Rect измените свойство "
"``Min Size`` на 80 пикселей. Размер элемента, а также позиции ``Title`` и "
"``Number`` должны измениться автоматически."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:509
msgid "The Count looks better now it's a bit smaller"
msgstr "Теперь счётчик выглядит лучше потому-что стал меньше"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:513
#, fuzzy
msgid ""
"The Count node's size affects the position of the TextureProgress. As we'll "
"align our bars vertically in a moment, we're better off using the Counter's "
"left margin to resize our EP label. This way both the EnergyBar's Count and "
"the LifeBar's Count nodes are one hundred pixels wide, so both gauges will "
"align perfectly."
msgstr ""
"Размер узла Count влияет на расположение TextureProgress. Так как мы "
"выровняли наши шкалы вертикально, теперь с помощью левого края счетчика "
"изменим размер нашего EP Label. Таким образом, и шкала Энергии и шкала "
"Здоровья теперь по 100 пикселей шириной, так что оба датчика будет "
"выравниваться идеально."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:520
#, fuzzy
msgid "Prepare the bomb and emerald counters"
msgstr "Подготовка счётчиков бомб и кристаллов"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:522
msgid ""
"Let us now take care of the counters. Go to ``Scene -> New Inherited Scene`` "
"and select the ``Counter.tscn`` as a base. Rename the root node as "
"``BombCounter`` too. Save the new scene as ``BombCounter.tscn``. That's all "
"for this scene."
msgstr ""
"Давайте теперь позаботимся о счетчиках. Перейдите к ``Сцена -> Новая "
"Унаследованная Сцена`` и выберите ``Counter.tscn`` в качестве базового. "
"Также переименуйте корневой узел на ``BombCounter``. Сохраните новую сцену "
"как ``BombCounter.tscn``. На этом работа с этой сценой завершена."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:529
#, fuzzy
msgid "The bomb counter is the same as the original Counter scene"
msgstr "Счетчик бомбы делаем так же как и предыдущую сцену"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:531
#, fuzzy
msgid ""
"Go to ``Scene -> New Inherited Scene`` again and select ``Counter.tscn`` "
"once more. Rename the root node ``EmeraldCounter`` and save the scene as "
"``EmeraldCounter.tscn``. For this one, we mainly need to replace the bomb "
"icon with the emerald icon. In the FileSystem tab, drag the ``emeralds_icon."
"png`` onto the ``Icon`` node's ``Texture`` slot. ``Icon`` already anchors to "
"the right edge of the ``Background`` node so we can change its position and "
"it will scale and reposition with the ``EmeraldCounter`` container. Shift "
"the emerald icon a little bit to the right and down. Use the Arrow Keys on "
"the keyboard to nudge its position. Save, and we're done with all the UI "
"elements."
msgstr ""
"Перейдите к ``Сцена -> Новая Унаследованная Сцена`` выберите ``Counter."
"tscn``. Переименуйте корневой узел в ``RupeeCounter`` и сохраните сцену как "
"``RupeeCounter.tscn``. Теперь нам нужно заменить иконки бомбы и кристалла. "
"Из Файловой системы перетащите ``rupees_icon.png`` в узел ``Icon`` в слот "
"``Texture``.``Icon`` уже привязался к правому краю узла ``Background``, "
"теперь мы можем изменять его позицию, и он будет масштабироваться и "
"передвигаться вместе с контейнером ``RupeeCounter``. Сдвиньте значок "
"кристалла немного вправо и вниз. Используйте клавиши со стрелками на "
"клавиатуре, чтобы сдвинуть его более точно. Сохраняем, и вот мы сделали все "
"элементы нашего интерфейса."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:544
#, fuzzy
msgid "The emerald counter should look something like this"
msgstr "Так должен выглядеть счётчик кристаллов"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:547
#, fuzzy
msgid "Add the UI components to the final GUI"
msgstr "Финальное добавление компонентов GUI"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:549
msgid ""
"Time to add all the UI elements to the main GUI scene. Open the ``GUI.tscn`` "
"scene again, and delete the ``Bar`` and ``Counter`` nodes. In the FileSystem "
"dock, find the ``LifeBar.tscn`` and drag and drop it onto the ``Bars`` "
"container in the scene tree. Do the same for the ``EnergyBar``. You should "
"see them align vertically."
msgstr ""
"Пришло время добавить все элементы интерфейса, на предназначенную для них "
"сцену. Откройте сцену ``GUI.tscn`` и удалите узлы ``Bar`` и ``Counter`. В "
"доке FileSystem (Файловая Система) найдите ``LifeBar.tscn`` и перетащите на "
"контейнер ``Bars``, который должен находиться в дереве сцены. Сделайте тоже "
"самое и для элемента ``EnergyBar``. Вы должны разместить их вертикально."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:557
msgid "The LifeBar and the EnergyBar align automatically"
msgstr "LifeBar и EnergyBar выравниваются автоматически"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:559
#, fuzzy
msgid ""
"Now, drag and drop the ``BombCounter.tscn`` and ``EmeraldCounter.tscn`` "
"scenes onto the ``Counters`` node. They'll resize automatically."
msgstr ""
"Теперь перетащите сцены ``BombCounter.tscn`` и ``RupeeCounter.tscn`` на узел "
"``Counters``. Они автоматически изменят свой размер."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:564
#, fuzzy
msgid "The nodes resize to take all the available vertical space"
msgstr ""
"Измените размер узлов, чтобы охватить всё доступное пространство по вертикали"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:566
#, fuzzy
msgid ""
"To let the ``EmeraldCounter`` and ``BombCounter`` use the size we defined in "
"``Counter.tscn``, we need to change the ``Size Flags`` on the ``Counters`` "
"container. Select the ``Counters`` node and unfold the ``Size Flags`` "
"section in the Inspector. Uncheck the ``Fill`` tag for the ``Vertical`` "
"property, and check ``Shrink Center`` so the container centers inside the "
"``HBoxContainer``."
msgstr ""
"Чтобы позволить ``RupeeCounter`` и ``BombCounter`` использовать размер, "
"который мы определили в ``Counter.tscn``, нам нужно изменить ``Size Flags`` "
"в контейнере ``Counters``. Выберите узел ``Counters`` и разверните раздел "
"``Size Flags`` в инспекторе. Снимите флажок ``Fill`` для свойства "
"``Vertical`` и установите флажок ``Shrink Center``, чтобы контейнер был в "
"центре``HBoxContainer``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:575
msgid "Now both counters have a decent size"
msgstr "Теперь оба счетчика имеют правильный размер"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:579
msgid ""
"Change the ``Min Size`` property of the ``Counters`` container to control "
"the height of the counters' background."
msgstr ""
"Измените свойство ``Min Size`` у контейнера ``Counters`` для управления "
"высоты фона у счетчиков."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:582
#, fuzzy
msgid ""
"We have one small issue left with the EP label on the EnergyBar: the 2 bars "
"should align vertically. Click the icon next to the ``EnergyBar`` node to "
"open its scene. Select the ``Count`` node and scroll down to the ``Custom "
"Constants`` section. Add a ``Margin Left`` of ``20``. In the ``Rect`` "
"section set the node's ``Min Size`` back to 100, the same value as on the "
"LifeBar. The ``Count`` should now have some margin on the left. If you save "
"and go back to the GUI scene, it will be aligned vertically with the "
"``LifeBar``."
msgstr ""
"У нас осталась одна небольшая проблема с Label'ом EP в EnergyBar: 2 бара "
"должны выравниваться по вертикали. Щелкните на значок рядом с узлом "
"``EnergyBar``, чтобы открыть его сцену. Выберите узел ``Count`` и прокрутите "
"вниз до раздела ``Custom Constant``. Добавьте ``Margin Left`` и выставьте "
"значение ``20``. В разделе ``Rect``  установите узел ``Min Size`` обратно на "
"``100``, то же значение, что и у шкалы Здоровья. Теперь ``Count`` должен "
"иметь отступ слева. Если вы сохраните и вернетесь к сцене с GUI, она "
"выровняется по вертикали вместе с ``LifeBar``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:593
msgid "The 2 bars align perfectly"
msgstr "2 шкалы идеально выравниваются"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:597
#, fuzzy
msgid ""
"We could have set up the ``EnergyBar`` this way a few moments ago. But this "
"shows you that you can go back to any scene anytime, tweak it, and see the "
"changes propagate through the project!"
msgstr ""
"Мы могли бы сделать это с ``EnergyBar``еще несколько минут назад. Но теперь "
"мы знаем, что можно вернуться к любой сцене в любое время и настроить его, и "
"увидеть что изменения распространяются через весь проект!"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:602
msgid "Place the GUI onto the game's mockup"
msgstr "Размещение интерфейса на макете игры"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:604
msgid ""
"To wrap up the tutorial we're going to insert the GUI onto the game's mockup "
"scene."
msgstr "Чтобы завершить обучение мы вставим GUI на сцене макета игры."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:607
msgid "Head to the FileSystem dock and open ``LevelMockup.tscn``."
msgstr ""
"Отправляйтесь в панель файловой системы и откройте ``LevelMockup.tscn``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:609
msgid ""
"Drag-and-drop the ``GUI.tscn`` scene right below the ``bg`` node and above "
"the ``Characters``. The GUI will scale to fit the entire viewport. Head to "
"the Layout menu and select the ``Center Top`` option so it anchors to the "
"top edge of the game window. Then resize the GUI to make it as small as "
"possible vertically. Now you can see how the interface looks in the context "
"of the game."
msgstr ""
"Перетащите сцену ``GUI.tscn`` прямо под узел ``bg`` и выше ``Characters``. "
"GUI будет масштабироваться по размеру видового экрана. Направляйтесь в меню "
"\"Макет\" и выберите опцию ``Center Top``, чтобы она привязалась к верхнему "
"краю окна. Теперь измените размер GUI, чтобы сделать его как можно более "
"маленьким по вертикали. Теперь вы можете увидеть, как интерфейс выглядит в "
"самой игре."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:616
#, fuzzy
msgid ""
"Congratulations for getting to the end of this long tutorial. You can find "
"the final project here: :download:`ui_gui_design.zip <files/ui_gui_design."
"zip>`."
msgstr ""
"Поздравляем с завершением этого обучения. Вы можете найти готовый проект "
"`здесь <#>`__."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:625
#, fuzzy
msgid ""
"**A final note about Responsive Design**. If you resize the GUI, you'll see "
"the nodes move, but the textures and text won't scale. The GUI also has a "
"minimum size, based on the textures inside of it. In games, we don’t need "
"the interface to be as flexible as that of a website. You almost never want "
"to support both landscape and portrait screen orientations. It’s one or the "
"other. In landscape orientation, the most common ratios range from 4:3 to "
"16:9. They are close to one another. That's why it’s enough for the GUI "
"elements to only move horizontally when we change the window size."
msgstr ""
"** Заключительное примечание об Отзывчивом Дизайне **. Если вы изменяете "
"размер GUI, вы увидите, что узлы перемещаются, но текстуры и текст не будут "
"масштабироваться. GUI также имеет минимальный размер, основанный на "
"текстурах внутри него. В играх нам не нужен интерфейс, чтобы быть таким же "
"гибким, как и веб-сайт. Вы почти никогда не будете поддерживать как "
"портретный так и ландшафтный ориентации экрана. Или первый или второй. В "
"ландшафтной ориентации наиболее распространенные коэффициенты варьируются от "
"4:3 до 16:9. Они близки друг к другу. Вот почему для элементов GUI "
"достаточно перемещаться только по горизонтали, когда мы изменяем размер окна."
