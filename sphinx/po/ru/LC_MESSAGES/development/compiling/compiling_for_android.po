# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-08 22:29+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_for_android.rst:4
msgid "Compiling for Android"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:9
msgid "Note"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:11
msgid ""
"In most cases, using the built-in deployer and export templates is good "
"enough. Compiling the Android APK manually is mostly useful for custom "
"builds or custom packages for the deployer."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:15
msgid ""
"Also, you still need to follow the steps mentioned in the :ref:"
"`doc_exporting_for_android` tutorial before attempting to build a custom "
"export template."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:20
msgid "Requirements"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:22
msgid "For compiling under Windows, Linux or macOS, the following is required:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:24
msgid "`Python 2.7+ or Python 3.5+ <https://www.python.org/downloads/>`_"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:25
msgid "`SCons <https://scons.org/pages/download.html>`_ build system"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:26
#, fuzzy
msgid ""
"`Android SDK <https://developer.android.com/studio/#command-tools>`_ "
"(command-line tools are sufficient)"
msgstr "Android SDK: https://developer.android.com/studio/"

#: ../../docs/development/compiling/compiling_for_android.rst:28
msgid ""
"Required SDK components will be automatically installed by Gradle (except "
"the NDK)"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:30
#, fuzzy
msgid ""
"`Android NDK <https://developer.android.com/ndk/downloads/>`_ r17 or later"
msgstr "Android SDK: https://developer.android.com/studio/"

#: ../../docs/development/compiling/compiling_for_android.rst:31
msgid "Gradle (will be downloaded and installed automatically if missing)"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:32
msgid "JDK 8 (either OpenJDK or Oracle JDK)"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:34
msgid "JDK 9 or later are not currently supported"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:35
msgid ""
"You can download a build from `ojdkbuild <https://github.com/ojdkbuild/"
"ojdkbuild>`_"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:37
msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"Для общего обзора использования SCons в Godot, смотрите :ref:"
"`doc_introduction_to_the_buildsystem`."

#: ../../docs/development/compiling/compiling_for_android.rst:41
msgid "Setting up the buildsystem"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:43
msgid ""
"Set the environment variable ``ANDROID_HOME`` to point to the Android SDK. "
"If you downloaded the Android command-line tools, this would be the folder "
"where you extracted the contents of the ZIP archive. Later on, ``gradlew`` "
"will install necessary SDK components in this folder. However, you need to "
"accept the SDK component licenses before they can be downloaded by Gradle. "
"This can be done by running the following command from the root of the SDK "
"directory, then answering all the prompts with ``y``:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:57
msgid ""
"Set the environment variable ``ANDROID_NDK_ROOT`` to point to the Android "
"NDK. You also might need to set the variable ``ANDROID_NDK_HOME`` to the "
"same path, especially if you are using custom Android modules, since some "
"Gradle plugins rely on the NDK and use this variable to determine its "
"location."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:63
msgid ""
"To set those environment variables on Windows, press **Windows + R**, type "
"\"control system\", then click on **Advanced system settings** in the left "
"pane, then click on **Environment variables** on the window that appears."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:68
msgid ""
"To set those environment variables on Linux or macOS, use ``export "
"ANDROID_HOME=/path/to/android-sdk`` and ``export ANDROID_NDK_ROOT=/path/to/"
"android-ndk`` where ``/path/to/android-sdk`` and ``/path/to/android-ndk`` "
"point to the root of the SDK and NDK directories."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:75
msgid "Building the export templates"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:77
msgid ""
"Godot needs two export templates for Android: the optimized \"release\" "
"template (``android_release.apk``) and the debug template (``android_debug."
"apk``). As Google will require all APKs to include ARMv8 (64-bit) libraries "
"starting from August 2019, the commands below will build an APK containing "
"both ARMv7 and ARMv8 libraries."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:83
msgid ""
"Compiling the standard export templates is done by calling SCons with the "
"following arguments:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:86
msgid ""
"Release template (used when exporting with **Debugging Enabled** unchecked)"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:99
msgid "The resulting APK will be located at ``bin/android_release.apk``."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:101
msgid "Debug template (used when exporting with **Debugging Enabled** checked)"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:114
msgid "The resulting APK will be located at ``bin/android_debug.apk``."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:117
msgid "Adding support for x86 devices"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:119
msgid ""
"If you also want to include support for x86 devices, run the SCons command a "
"third time with the ``android_arch=x86`` argument before building the APK "
"with Gradle. For example, for the release template:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:135
msgid ""
"This will create a fat binary that works on all platforms. The final APK "
"size of exported projects will depend on the platforms you choose to support "
"when exporting; in other words, unused platforms will be removed from the "
"APK."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:141
#, fuzzy
msgid "Cleaning the generated export templates"
msgstr "Создание сценариев сцены"

#: ../../docs/development/compiling/compiling_for_android.rst:143
msgid ""
"You can use the following commands to remove the generated export templates:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:155
msgid "Using the export templates"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:157
msgid ""
"Godot needs release and debug APKs that were compiled against the same "
"version/commit as the editor. If you are using official binaries for the "
"editor, make sure to install the matching export templates, or build your "
"own from the same version."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:162
msgid ""
"When exporting your game, Godot opens the APK, changes a few things inside "
"and adds your files."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:166
msgid "Installing the templates"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:168
msgid ""
"The newly-compiled templates (``android_debug.apk`` and ``android_release."
"apk``) must be copied to Godot's templates folder with their respective "
"names. The templates folder can be located in:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:172
msgid "Windows: ``%APPDATA%\\Godot\\templates\\<version>\\``"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:173
msgid "Linux: ``$HOME/.local/share/godot/templates/<version>/``"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:174
msgid "macOS: ``$HOME/Library/Application Support/Godot/templates/<version>/``"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:176
msgid ""
"``<version>`` is of the form ``major.minor[.patch].status`` using values "
"from ``version.py`` in your Godot source repository (e.g. ``3.0.5.stable`` "
"or ``3.1.dev``). You also need to write this same version string to a "
"``version.txt`` file located next to your export templates."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:183
msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your APKs as custom export templates here:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:189
msgid ""
"You don't even need to copy them, you can just reference the resulting file "
"in the ``bin\\`` directory of your Godot source folder, so that the next "
"time you build you will automatically have the custom templates referenced."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:195
msgid "Troubleshooting"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:198
msgid "Application not installed"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:200
msgid ""
"Android might complain the application is not correctly installed. If so:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:203
msgid "Check that the debug keystore is properly generated."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:204
msgid "Check that the jarsigner executable is from JDK 8."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:206
msgid ""
"If it still fails, open a command line and run `logcat <https://developer."
"android.com/studio/command-line/logcat>`_:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:212
msgid ""
"Then check the output while the application is installed; the error message "
"should be presented there. Seek assistance if you can't figure it out."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:217
msgid "Application exits immediately"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:219
msgid ""
"If the application runs but exits immediately, this might be due to one of "
"the following reasons:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:222
msgid ""
"Make sure to use export templates that match your editor version; if you use "
"a new Godot version, you *have* to update the templates too."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:224
msgid ""
"``libgodot_android.so`` is not in ``libs/<android_arch>/`` where "
"``<android_arch>`` is the device's architecture."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:226
msgid ""
"The device's architecture does not match the exported one(s). Make sure your "
"templates were built for that device's architecture, and that the export "
"settings included support for that architecture."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:230
msgid "In any case, ``adb logcat`` should also show the cause of the error."
msgstr ""
