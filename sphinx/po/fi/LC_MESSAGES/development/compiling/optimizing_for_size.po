# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-27 12:19+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/optimizing_for_size.rst:4
msgid "Optimizing a build for size"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:9
msgid "Rationale"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:11
msgid ""
"Sometimes, it is desired to optimize a build for size rather than speed. "
"This means not compiling unused functions from the engine, as well as using "
"specific compiler flags to aid on decreasing build size. Common situations "
"include creating builds for mobile and Web platforms."
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:16
msgid ""
"This tutorial aims to give an overview on different methods to create a "
"smaller binary. Before continuing, it is recommended to read the previous "
"tutorials on compiling Godot for each platform."
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:21
msgid "Disabling 3D"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:23
msgid ""
"For 2D games, having the whole 3D engine available usually makes no sense. "
"Because of this, there is a build flag to disable it:"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:29
msgid ""
"Tools must be disabled in order to use this flag, as the editor is not "
"designed to operate without 3D support. Without it, the binary size can be "
"reduced by about 15%."
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:34
msgid "Disabling advanced GUI nodes"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:36
msgid ""
"Most small games don't require complex GUI controls such as Tree, ItemList, "
"TextEditor or GraphEdit. They can be disabled using a build flag:"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:44
msgid "Disabling unwanted modules"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:46
msgid ""
"A lot of Godot's functions are offered as modules. You can see a list of "
"modules with the following command:"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:53
msgid ""
"The list of modules that can be disabled will appear, together with all "
"build options. If you are working on a simple 2D game, you could disable a "
"lot of them:"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:61
msgid ""
"If this proves not to work for your use case, you should review the list of "
"modules and see which ones you actually still need for your game (e.g. you "
"might want to keep networking-related modules, regex support, or theora/webm "
"to play videos)."
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:67
msgid "Optimizing for size instead of speed"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:69
msgid ""
"Godot 3.1 onwards allows compiling using size optimizations (instead of "
"speed). To enable this, set the ``optimize`` flag to ``size``:"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:76
msgid "Some platforms such as WebAssembly already use this mode by default."
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:79
msgid "Compiling with link-time optimization"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:81
msgid ""
"Enabling link-time optimization produces more efficient binaries, both in "
"terms of performance and file size. It works by eliminating duplicate "
"template functions and unused code. It can currently be used with the GCC "
"and MSVC compilers:"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:90
msgid ""
"Linking becomes much slower with this option, so it should be used only for "
"release builds."
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:94
msgid "Stripping binaries"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:96
msgid ""
"If you build from source, remember to strip debug symbols from binaries:"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:103
msgid "Using UPX to compress binaries"
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:105
msgid ""
"If you are targeting desktop platforms, the `UPX <https://upx.github.io/>`_ "
"compressor can be used. This can reduce binary size considerably."
msgstr ""

#: ../../docs/development/compiling/optimizing_for_size.rst:109
msgid ""
"However, keep in mind that some antivirus programs may detect UPX-packed "
"binaries as a virus. Therefore, if you are releasing a commercial game, make "
"sure to sign your binaries or use a platform that will distribute them."
msgstr ""
