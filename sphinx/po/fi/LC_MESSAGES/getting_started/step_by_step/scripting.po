# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-06 14:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/scripting.rst:4
msgid "Scripting"
msgstr "Skriptaus"

#: ../../docs/getting_started/step_by_step/scripting.rst:7
msgid "Introduction"
msgstr "Johdanto"

#: ../../docs/getting_started/step_by_step/scripting.rst:9
msgid ""
"Before Godot 3.0, the only choice for scripting a game was to use :ref:"
"`GDScript<doc_gdscript>`. Nowadays, Godot has four (yes, four!) official "
"languages and the ability to add extra scripting languages dynamically!"
msgstr ""
"Ennen Godotin versiota 3.0 ainoa vaihtoehto pelin skriptaukseen oli "
"käyttää  :ref:`GDScript<doc_gdscript>` kieltä. Nykyään Godotissa on neljä "
"(kyllä, neljä!) virallista kieltä sekä mahdollisuus lisätä ylimääräisiä "
"skriptikieliä dynaamisesti!"

#: ../../docs/getting_started/step_by_step/scripting.rst:13
msgid ""
"This is great, mostly due to the large amount of flexibility provided, but "
"it also makes our work supporting languages more difficult."
msgstr ""
"Tämä on erinomaista, pääasiassa sen tarjoaman suuren joustavuuden vuoksi, "
"mutta se tekee myös työstämme kielien tukemiseksi vaikeampaa."

#: ../../docs/getting_started/step_by_step/scripting.rst:16
msgid ""
"The \"main\" languages in Godot, though, are GDScript and VisualScript. The "
"main reason to choose them is their level of integration with Godot, as this "
"makes the experience smoother; both have slick editor integration, while C# "
"and C++ need to be edited in a separate IDE. If you are a big fan of "
"statically typed languages, go with C# and C++ instead."
msgstr ""
"Godotin \"pääkielet\" ovat kuitenkin GDScript ja VisualScript. Tärkein syy "
"valita ne on niiden integroitumisaste Godotiin, sillä se tekee kokemuksesta "
"sutjakkaamman; molemmilla on näppärä integraatio editoriin, kun taas C# ja C+"
"+ tarvitsevat erillisen kehitysympäristön editointia varten. Jos olet suuri "
"staattisesti tyypitettyjen kielten kannattaja, valitse sen sijaan silloin C# "
"ja C++."

#: ../../docs/getting_started/step_by_step/scripting.rst:22
msgid "GDScript"
msgstr "GDScript"

#: ../../docs/getting_started/step_by_step/scripting.rst:24
msgid ""
":ref:`GDScript<doc_gdscript>` is, as mentioned above, the main language used "
"in Godot. Using it has some positive points compared to other languages due "
"to its high integration with Godot:"
msgstr ""
":ref:`GDScript<doc_gdscript>` on, kuten yllä mainittu, Godotin pääkieli. Sen "
"käytöllä on joitakin myönteisiä näkökohtia muihin kieliin nähden johtuen sen "
"korkeasta integraatiosta Godotiin:"

#: ../../docs/getting_started/step_by_step/scripting.rst:28
msgid ""
"It's simple, elegant, and designed to be familiar for users of other "
"languages such as Lua, Python, Squirrel, etc."
msgstr ""
"Se on yksinkertainen, elegantti ja suunniteltu olemaan tuttu sellaisten "
"kielten, kuten Lua, Python, Squirrel, jne. käyttäjille."

#: ../../docs/getting_started/step_by_step/scripting.rst:29
msgid "Loads and compiles blazingly fast."
msgstr "Latautuu ja kääntyy huikean nopeasti."

#: ../../docs/getting_started/step_by_step/scripting.rst:30
msgid ""
"The editor integration is a pleasure to work with, with code completion for "
"nodes, signals, and many other items pertaining to the scene being edited."
msgstr ""
"Solmujen, signaalien ja monien muiden skeneen liittyvien juttujen "
"kooditäydennyksen sisältävän editori-integraation kanssa on miellyttävä "
"työskennellä."

#: ../../docs/getting_started/step_by_step/scripting.rst:31
msgid ""
"Has vector types built-in (such as Vectors, transforms, etc.), making it "
"efficient for heavy use of linear algebra."
msgstr ""
"Sisältää sisäänrakennetut vektorityypit (kuten Vector-luokat, "
"transformaatiot, jne.), tehden kovasta lineaarialgebran käytöstä tehokasta."

#: ../../docs/getting_started/step_by_step/scripting.rst:32
msgid ""
"Supports multiple threads as efficiently as statically typed languages - one "
"of the limitations that made us avoid VMs such as Lua, Squirrel, etc."
msgstr ""
"Tukee useita säikeitä yhtä tehokkaasti kuin staattisesti tyypitetyt kielet - "
"yksi niistä rajoituksista, jotka saivat meidät välttämään sellaisia "
"virtuaalikoneita kuten Lua, Squirrel, jne."

#: ../../docs/getting_started/step_by_step/scripting.rst:33
msgid ""
"Uses no garbage collector, so it trades a small bit of automation (most "
"objects are reference counted anyway), by determinism."
msgstr ""
"Ei käytä roskienkeruuta, joten pieni määrä automaatiota (useimpien objektien "
"viittauksista pidetään joka tapauksessa kirjaa) on korvattu determinismillä."

#: ../../docs/getting_started/step_by_step/scripting.rst:34
msgid ""
"Its dynamic nature makes it easy to optimize sections of code in C++ (via "
"GDNative) if more performance is required, all without recompiling the "
"engine."
msgstr ""
"Jos parempaa suorituskykyä tarvitaan, sen dynaaminen luonne tekee "
"koodiosioiden korvaamisesta C++:lla helppoa (GDNativen kautta), ilman että "
"koko pelimoottori täytyy kääntää uudelleen."

#: ../../docs/getting_started/step_by_step/scripting.rst:36
msgid ""
"If you're undecided and have experience with programming, especially "
"dynamically typed languages, go for GDScript!"
msgstr ""
"Jos olet epävarma ja sinulla on kokemusta ohjelmoinnista, eritoten "
"dynaamisesti tyypitetyistä kielistä, valitse GDScript!"

#: ../../docs/getting_started/step_by_step/scripting.rst:40
msgid "VisualScript"
msgstr "VisualScript"

#: ../../docs/getting_started/step_by_step/scripting.rst:42
msgid ""
"Beginning with 3.0, Godot offers :ref:`Visual "
"Scripting<doc_what_is_visual_script>`. This is a typical implementation of a "
"\"blocks and connections\" language, but adapted to how Godot works."
msgstr ""
"Alkaen versiosta 3.0, Godot tarjoaa :ref:`Visuaalisen "
"skriptauksen<doc_what_is_visual_script>`. Tämä on tyypillinen toteutus "
"\"lohkot ja yhteydet\" kielestä, mutta mukautettu Godotin toimintatapoihin."

#: ../../docs/getting_started/step_by_step/scripting.rst:46
msgid ""
"Visual scripting is a great tool for non-programmers, or even for "
"experienced developers who want to make parts of the code more accessible to "
"others, like game designers or artists."
msgstr ""
"Visuaalinen skriptaus on mainio työkalu ei-ohjelmoijille ja jopa "
"kokeneemmille kehittäjille, jotka haluavat tehdä osasta koodia helpommin "
"lähestyttävää muille, kuten pelisuunnittelijoille ja artisteille."

#: ../../docs/getting_started/step_by_step/scripting.rst:50
msgid ""
"It can also be used by programmers to build state machines or custom visual "
"node workflows - for example, a dialogue system."
msgstr ""
"Ohjelmoijat voivat myös käyttää sitä tilakoneiden tai mukautettujen "
"visuaalisten solmutyönkulkujen, kuten dialogijärjestelmien, rakentamiseen."

#: ../../docs/getting_started/step_by_step/scripting.rst:55
msgid ".NET / C#"
msgstr ".NET / C#"

#: ../../docs/getting_started/step_by_step/scripting.rst:57
msgid ""
"As Microsoft's C# is a favorite amongst game developers, we have added "
"official support for it. C# is a mature language with tons of code written "
"for it, and support was added thanks to a generous donation from Microsoft."
msgstr ""
"Koska Microsoftin C# on suosikki pelikehittäjien keskuudessa, olemme "
"lisänneet sille virallisen tuen. C# on kehittynyt kieli, jolle on "
"kirjoitettu läjäpäin koodia, ja tuki lisättiin kiitos Microsoftin runsaan "
"lahjoituksen."

#: ../../docs/getting_started/step_by_step/scripting.rst:62
msgid ""
"It has an excellent tradeoff between performance and ease of use, although "
"one must be aware of its garbage collector."
msgstr ""
"Se on erinomainen kompromissi suorituskykyä ja helppokäyttöisyyttä, "
"vaikkakin sen roskienkerääjästä on syytä olla tietoinen."

#: ../../docs/getting_started/step_by_step/scripting.rst:65
msgid ""
"Since Godot uses the `Mono <https://mono-project.com>`_ .NET runtime, in "
"theory any third-party .NET library or framework can be used for scripting "
"in Godot, as well as any Common Language Infrastructure-compliant "
"programming language, such as F#, Boo or ClojureCLR. In practice however, C# "
"is the only officially supported .NET option."
msgstr ""
"Koska Godot käyttää `Mono <https://mono-project.com>`_ .NET ajoympäristöä, "
"teoriassa mitä tahansa kolmannen osapuolen .NET kirjastoa tai "
"kehysympäristöä voidaan käyttää Godotin skriptaamiseen, kuten myös mitä "
"tahansa Common Language Infrastructure yhteensopivaa ohjelmointikieltä, "
"kuten F#, Boo tai ClojureCLR. Käytännössä C# on kuitenkin ainoa virallisesti "
"tuettu .NET vaihtoehto."

#: ../../docs/getting_started/step_by_step/scripting.rst:71
msgid "GDNative / C++"
msgstr "GDNative / C++"

#: ../../docs/getting_started/step_by_step/scripting.rst:73
msgid ""
"Finally, one of our brightest additions for the 3.0 release: GDNative allows "
"scripting in C++ without needing to recompile (or even restart) Godot."
msgstr ""
"Viimein, yksi loistavimmista lisäyksistämme 3.0 julkaisuun: GDNative "
"mahdollistaa C++ skriptauksen ilman että Godotia tarvitsee kääntää uudelleen "
"(tai edes käynnistää uudelleen)."

#: ../../docs/getting_started/step_by_step/scripting.rst:77
msgid ""
"Any C++ version can be used, and mixing compiler brands and versions for the "
"generated shared libraries works perfectly, thanks to our use of an internal "
"C API Bridge."
msgstr ""
"Mitä tahansa C++ versiota voidaan käyttää, ja eri kääntäjien ja versioiden "
"sekoittaminen jaettujen kirjastojen luomiseksi toimii täydellisesti "
"käyttämämme sisäisen C API sillan ansiosta."

#: ../../docs/getting_started/step_by_step/scripting.rst:81
#, fuzzy
msgid ""
"This language is the best choice for performance and does not need to be "
"used throughout an entire game, as other parts can be written in GDScript or "
"Visual Script. However, the API is clear and easy to use as it resembles, "
"mostly, Godot's actual C++ API."
msgstr ""
"Tämä kieli on paras valinta suorituskyvyn kannalta, eikä sitä tarvitse "
"käyttää kauttaaltaan koko peliin, sillä muut osat voidaan kirjoittaa "
"GDScriptillä tai Visual Scriptillä. Ohjelmointirajapinta on kuitenkin selkeä "
"ja helppokäyttöinen, sillä se muistuttaa pääsääntöisesti Godotin varsinaista "
"C++ rajapintaa."

#: ../../docs/getting_started/step_by_step/scripting.rst:86
msgid ""
"More languages can be made available through the GDNative interface, but "
"keep in mind we don't have official support for them."
msgstr ""
"Useampia kieliä voidaan tehdä saataville GDNative-rajapinnan kautta, mutta "
"pidä mielessä, että niille ei ole virallista tukea."

#: ../../docs/getting_started/step_by_step/scripting.rst:90
msgid "Scripting a scene"
msgstr "Skenen skriptaus"

#: ../../docs/getting_started/step_by_step/scripting.rst:92
msgid ""
"For the rest of this tutorial we'll set up a GUI scene consisting of a "
"button and a label, where pressing the button will update the label. This "
"will demonstrate:"
msgstr ""
"Oppaan jäljellä olevassa osassa rakennamme GUI-skenen, joka koostuu "
"painikkeesta ja selitteestä, ja jossa painikkeen painaminen päivittää "
"selitettä. Tämä havainnollistaa:"

#: ../../docs/getting_started/step_by_step/scripting.rst:96
msgid "Writing a script and attaching it to a node."
msgstr "Skriptin kirjoittamista ja sen liittämistä solmuun."

#: ../../docs/getting_started/step_by_step/scripting.rst:97
msgid "Hooking up UI elements via signals."
msgstr "Käyttöliittymäelementtien kytkemisen signaaleilla."

#: ../../docs/getting_started/step_by_step/scripting.rst:98
msgid "Writing a script that can access other nodes in the scene."
msgstr "Muita skenen solmuja käsittelevän skriptin kirjoittamista."

#: ../../docs/getting_started/step_by_step/scripting.rst:100
msgid ""
"Before continuing, please make sure to read the :ref:"
"`GDScript<doc_gdscript>` reference. It's a language designed to be simple, "
"and the reference is short, so it will not take more than a few minutes to "
"get an overview of the concepts."
msgstr ""
"Ennen jatkamista, varmista, että olet lukenut :ref:`GDScript<doc_gdscript>` "
"lähdeaineiston. Se on yksinkertaiseksi suunniteltu kieli ja lähdeaineisto on "
"lyhyt, joten käsitteistä saa yleiskuvan muutamassa minuutissa."

#: ../../docs/getting_started/step_by_step/scripting.rst:105
msgid "Scene setup"
msgstr "Skenen järjestely"

#: ../../docs/getting_started/step_by_step/scripting.rst:107
#, fuzzy
msgid ""
"Use the \"Add Child Node\" dialogue accessed from the Scene tab (or by "
"pressing :kbd:`Ctrl + A`) to create a hierarchy with the following nodes:"
msgstr ""
"Käytä \"Lisää alisolmu\" dialogia Skene-välilehdellä (tai paina ``Ctrl+A``) "
"luodaksesi solmuhierarkian seuraavilla solmuilla:"

#: ../../docs/getting_started/step_by_step/scripting.rst:110
msgid "Panel"
msgstr "Panel"

#: ../../docs/getting_started/step_by_step/scripting.rst:112
msgid "Label"
msgstr "Label"

#: ../../docs/getting_started/step_by_step/scripting.rst:113
msgid "Button"
msgstr "Button"

#: ../../docs/getting_started/step_by_step/scripting.rst:115
msgid "The scene tree should look like this:"
msgstr "Skenepuun pitäisi näyttää tältä:"

#: ../../docs/getting_started/step_by_step/scripting.rst:119
msgid ""
"Use the 2D editor to position and resize the Button and Label so that they "
"look like the image below. You can set the text from the Inspector tab."
msgstr ""
"Käytä 2D-editoria asemoidaksesi ja muuttaaksesi Button ja Label solmujen "
"koot niin, että ne näyttävät samalta kuin alla olevassa kuvassa. Voit "
"asettaa tekstin Tarkastelu-välilehdellä."

#: ../../docs/getting_started/step_by_step/scripting.rst:124
msgid "Finally, save the scene with a name such as ``sayhello.tscn``."
msgstr "Lopuksi tallenna skene nimellä kuten esimerkiksi ``sayhello.tscn``."

#: ../../docs/getting_started/step_by_step/scripting.rst:129
msgid "Adding a script"
msgstr "Skriptin lisäys"

#: ../../docs/getting_started/step_by_step/scripting.rst:131
msgid ""
"Right click on the Panel node, then select \"Attach Script\" from the "
"context menu:"
msgstr ""
"Napsauta oikealla Panel solmusta ja valitse \"Liitä skripti\" pikavalikosta:"

#: ../../docs/getting_started/step_by_step/scripting.rst:136
msgid ""
"The script creation dialog will pop up. This dialog allows you to set the "
"script's language, class name, and other relevant options."
msgstr ""
"Skriptinluonti-ikkuna aukeaa. Tässä ikkunassa voit asettaa skriptin kielien, "
"luokan nimen ja muita oleellisia asetuksia."

#: ../../docs/getting_started/step_by_step/scripting.rst:139
msgid ""
"In GDScript, the file itself represents the class, so the class name field "
"is not editable."
msgstr ""
"GDScriptissä tiedosto itse edustaa luokkaa, joten luokan nimikenttä ei ole "
"muokattavissa."

#: ../../docs/getting_started/step_by_step/scripting.rst:142
msgid ""
"The node we're attaching the script to is a panel, so the Inherits field "
"will automatically be filled in with \"Panel\". This is what we want, as the "
"script's goal is to extend the functionality of our panel node."
msgstr ""
"Solmu, johon olemme liittämässä skriptiä, on paneeli, joten Perii-kenttään "
"täytetään automaattisesti \"Panel\". Näin haluammekin, sillä skriptin "
"tavoite on laajentaa paneelisolmumme toiminnallisuutta."

#: ../../docs/getting_started/step_by_step/scripting.rst:146
msgid "Finally, enter a path name for the script and select Create:"
msgstr "Lopuksi, syötä skriptille polun nimi ja valitse Lataa:"

#: ../../docs/getting_started/step_by_step/scripting.rst:150
msgid ""
"The script will then be created and added to the node. You can see this as "
"an \"Open script\" icon next to the node in the Scene tab, as well as in the "
"script property under Inspector:"
msgstr ""
"Tämän jälkeen skripti luodaan ja liitetään solmuun. Voit nähdä tämän solmun "
"vieressä olevana \"avoimen käärön\" ikonina Skene-välilehdellä, kuten myös "
"Script-ominaisuutena Tarkastelussa:"

#: ../../docs/getting_started/step_by_step/scripting.rst:156
msgid ""
"To edit the script, select either of these buttons, both of which are "
"highlighted in the above image. This will bring you to the script editor, "
"where a default template will be included:"
msgstr ""
"Skriptin muokkaamiseksi käytä jompaa kumpaa näistä painikkeista, jotka on "
"esitetty korostettuna yllä olevassa kuvassa. Tämä vie sinut "
"skriptieditoriin, johon on lisätty valmis skriptipohja:"

#: ../../docs/getting_started/step_by_step/scripting.rst:161
msgid ""
"There's not much there. The ``_ready()`` function is called when the node, "
"and all its children, enters the active scene. **Note:** ``_ready()`` is not "
"the constructor; the constructor is instead ``_init()``."
msgstr ""
"Siinä ei ole paljoakaan valmiina. ``_ready()`` funktiota kutsutaan, kun "
"solmu ja kaikki sen alisolmut lisätään aktiiviseen skeneen. **Huom:** "
"``_ready()`` ei ole luokan konstruktori; konstruktori on sen sijaan "
"``_init()``."

#: ../../docs/getting_started/step_by_step/scripting.rst:166
msgid "The role of the script"
msgstr "Skriptin rooli"

#: ../../docs/getting_started/step_by_step/scripting.rst:168
msgid ""
"A script adds behavior to a node. It is used to control how the node "
"functions as well as how it interacts with other nodes: children, parent, "
"siblings, and so on. The local scope of the script is the node. In other "
"words, the script inherits the functions provided by that node."
msgstr ""
"Skripti lisää solmulle toiminnallisuutta. Sitä käytetään ohjaamaan sitä "
"kuinka solmu toimii, sekä myös sitä kuinka se kommunikoi muiden solmujen "
"kanssa: alisolmujen, yläsolmun, rinnakkaisten solmujen, ja niin edelleen. "
"Skriptin paikallinen näkyvyysalue on solmu itse. Toisin sanoen, skripti "
"perii solmun tarjoamat funktiot."

#: ../../docs/getting_started/step_by_step/scripting.rst:179
msgid "Handling a signal"
msgstr "Signaalin käsittely"

#: ../../docs/getting_started/step_by_step/scripting.rst:181
msgid ""
"Signals are \"emitted\" when some specific kind of action happens, and they "
"can be connected to any function of any script instance. Signals are used "
"mostly in GUI nodes, although other nodes have them too, and you can even "
"define custom signals in your own scripts."
msgstr ""
"Signaaleja \"lähetetään\", kun jokin tietyn tyyppinen toiminto tapahtuu, ja "
"ne voidaan yhdistää minkä tahansa skriptin mihin tahansa funktioon. "
"Signaaleja käytetään pääasiassa käyttöliittymäsolmuissa, joskin muillakin "
"solmuilla on niitä, ja voit jopa määritellä omia signaaleja omissa "
"skripteissäsi."

#: ../../docs/getting_started/step_by_step/scripting.rst:186
msgid ""
"In this step, we'll connect the \"pressed\" signal to a custom function. "
"Forming connections is the first part and defining the custom function is "
"the second part. For the first part, Godot provides two ways to create "
"connections: through a visual interface the editor provides or through code."
msgstr ""
"Tässä vaiheessa kytkemme \"pressed\" signaalin itse luotuun funktioon. "
"Kytkentöjen tekeminen on ensimmäinen osio ja funktion luominen on toinen "
"osio. Ensimmäistä varten Godot tarjoaa kaksi tapaa luoda kytkennän: editorin "
"visuaalisen rajapinnan tai koodin kautta."

#: ../../docs/getting_started/step_by_step/scripting.rst:191
msgid ""
"While we will use the code method for the remainder of this tutorial series, "
"let's cover how the editor interface works for future reference."
msgstr ""
"Vaikkakin käytämme koodimenetelmää tämän oppaan loppuajan, käydään silti "
"vastaisuuden varalle läpi kuinka editorin käyttöliittymä toimii."

#: ../../docs/getting_started/step_by_step/scripting.rst:194
msgid ""
"Select the Button node in the scene tree and then select the \"Node\" tab. "
"Next, make sure that you have \"Signals\" selected."
msgstr ""
"Valitse Button solmu skenepuusta ja valitse sitten \"Solmu\"-välilehti. "
"Varmista seuraavaksi, että \"Signaalit\" on valittuna."

#: ../../docs/getting_started/step_by_step/scripting.rst:199
msgid ""
"If you then select \"pressed()\" under \"BaseButton\" and click the "
"\"Connect...\" button in the bottom right, you'll open up the connection "
"creation dialogue."
msgstr ""
"Jos siten valitset \"pressed()\" kohdan \"BaseButton\" osiosta ja napsautat "
"\"Yhdistä...\" painiketta oikeassa alakulmassa, avaat kytkennänluonti-"
"ikkunan."

#: ../../docs/getting_started/step_by_step/scripting.rst:204
msgid ""
"The top of the dialogue displays a list of your scene's nodes with the "
"emitting node's name highlighted in blue. Select the \"Panel\" node here."
msgstr ""

#: ../../docs/getting_started/step_by_step/scripting.rst:207
msgid ""
"The bottom of the dialogue shows the name of the method that will be "
"created. By default, the method name will contain the emitting node's name "
"(\"Button\" in this case), resulting in ``_on_[EmitterNode]_[signal_name]``."
msgstr ""

#: ../../docs/getting_started/step_by_step/scripting.rst:211
msgid ""
"And that concludes the guide on how to use the visual interface. However, "
"this is a scripting tutorial, so for the sake of learning, let's dive into "
"the manual process!"
msgstr ""
"Ja siihen päättyy opastus visuaalisesta kytkennän luonnista. Tämä on "
"kuitenkin skriptausopas, joten oppimisen nimissä, uppoutukaamme manuaaliseen "
"prosessiin!"

#: ../../docs/getting_started/step_by_step/scripting.rst:215
msgid ""
"To accomplish this, we will introduce a function that is probably the most "
"used by Godot programmers: :ref:`Node.get_node() "
"<class_Node_method_get_node>`. This function uses paths to fetch nodes "
"anywhere in the scene, relative to the node that owns the script."
msgstr ""
"Päämäärän saavuttamiseksi esittelemme funktion, joka on todennäköisesti "
"Godot-ohjelmoijien eniten käyttämä funktio: :ref:`Node.get_node() "
"<class_Node_method_get_node>`. Tämä funktio käyttää polkuja noutaakseen "
"solmuja mistä tahansa skenestä, suhteessa solmuun joka omistaa skriptin."

#: ../../docs/getting_started/step_by_step/scripting.rst:220
msgid ""
"For the sake of convenience, delete everything underneath ``extends Panel``. "
"You will fill out the rest of the script manually."
msgstr ""
"Homman helpottamiseksi, poista kaikki ``extends Panel`` alapuolella oleva. "
"Tulet täyttämään loput skriptistä käsin."

#: ../../docs/getting_started/step_by_step/scripting.rst:223
msgid ""
"Because the Button and Label are siblings under the Panel where the script "
"is attached, you can fetch the Button by typing the following underneath the "
"``_ready()`` function:"
msgstr ""
"Koska Button ja Label ovat naapurisolmuja Panel-solmun, johon skripti on "
"liitetty, alla, voit noutaa Button solmun kirjoittamalla seuraavan "
"``_ready()`` funktion alle:"

#: ../../docs/getting_started/step_by_step/scripting.rst:240
msgid "Next, write a function which will be called when the button is pressed:"
msgstr ""
"Seuraavaksi, kirjoita funktio, jota kutsutaan, kun painiketta on painettu:"

#: ../../docs/getting_started/step_by_step/scripting.rst:255
#, fuzzy
msgid ""
"Finally, connect the button's \"pressed\" signal to ``_on_Button_pressed()`` "
"by using :ref:`Object.connect() <class_Object_method_connect>`."
msgstr ""
"Lopuksi, yhdistä painikkeen \"pressed\" signaali ``_ready()`` funktioon "
"käyttämällä :ref:`Object.connect() <class_Object_method_connect>` funktiota."

#: ../../docs/getting_started/step_by_step/scripting.rst:271
msgid "The final script should look like this:"
msgstr "Lopullisen skriptin pitäisi näyttää tältä:"

#: ../../docs/getting_started/step_by_step/scripting.rst:304
msgid ""
"Run the scene and press the button. You should get the following result:"
msgstr "Aja skene ja paina painiketta. Sinun pitäisi saada seuraava tulos:"

#: ../../docs/getting_started/step_by_step/scripting.rst:308
msgid "Why, hello there! Congratulations on scripting your first scene."
msgstr "No mutta, terve! Onnittelut ensimmäisen skenesi skriptaamisesta."

#: ../../docs/getting_started/step_by_step/scripting.rst:312
msgid ""
"A common misunderstanding regarding this tutorial is how ``get_node(path)`` "
"works. For a given node, ``get_node(path)`` searches its immediate children. "
"In the above code, this means that Button must be a child of Panel. If "
"Button were instead a child of Label, the code to obtain it would be:"
msgstr ""
"Yleinen väärinkäsitys tätä opasta koskien on, että kuinka ``get_node(path)`` "
"toimii. Mille tahansa annetulle solmulle, ``get_node(path)`` etsii sen "
"välittömistä alisolmuista. Yllä olevassa koodissa tämä tarkoittaa, että "
"Button solmun on oltava Panel solmun alisolmu. Jos Button olisi sen sijaan "
"Label solmun alisolmu, koodi, jolla se noudetaan, olisi:"

#: ../../docs/getting_started/step_by_step/scripting.rst:330
msgid "Also, remember that nodes are referenced by name, not by type."
msgstr "Muista myös, että solmuihin viitataan nimellä, ei tyypillä."

#: ../../docs/getting_started/step_by_step/scripting.rst:334
msgid ""
"The right-hand panel of the connect dialogue is for binding specific values "
"to the connected function's parameters. You can add and remove values of "
"different types."
msgstr ""
"Kytkentäikkunan oikeanpuoleinen paneeli on olemassa tiettyjen arvojen "
"liittämiseksi funktion parametreihin. Voit lisätä ja poistaa erityyppisiä "
"arvoja."

#: ../../docs/getting_started/step_by_step/scripting.rst:338
msgid ""
"The code approach also enables this with a 4th ``Array`` parameter that is "
"empty by default. Feel free to read up on the ``Object.connect`` method for "
"more information."
msgstr ""
"Koodilähestymistapa mahdollistaa tämän myös neljännelle ``Array`` "
"parametrille, joka on oletusarvoisesti tyhjä. Ole hyvä ja lukaise ``Object."
"connect`` metodin ohje lisätietoja varten."
