# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-04 09:58+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:4
msgid "Scenes and nodes"
msgstr "场景与节点"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:7
msgid "Introduction"
msgstr "简介"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:11
msgid ""
"Imagine for a second that you are not a game developer anymore. Instead, "
"you're a chef! Change your hipster outfit for a toque and a double breasted "
"jacket. Now, instead of making games, you create new and delicious recipes "
"for your guests."
msgstr ""
"试想一下您不再是一个游戏开发者。相反地，您是一位厨师！把您时髦的着装换成无檐"
"帽和双排扣夹克。现在，您是在为您的客人打造一个美味的菜谱而不是在做游戏。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:16
msgid ""
"So, how does a chef create a recipe? Recipes are divided into two sections: "
"the first is the ingredients and the second is the instructions to prepare "
"it. This way, anyone can follow the recipe and savor your magnificent "
"creation."
msgstr ""
"那么，厨师如何制作菜谱呢？菜谱分为两个部分：第一部分是成分，第二部分是准备它"
"的说明。这样，任何人都可以按照菜谱来品味你的宏伟创作。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:21
msgid ""
"Making games in Godot feels pretty much the same way. Using the engine feels "
"like being in a kitchen. In this kitchen, *nodes* are like a refrigerator "
"full of fresh ingredients with which to cook."
msgstr ""
"在Godot中制作游戏感觉和这种方式相同。使用这个引擎感觉就像是在一个厨房里。在这"
"个厨房里，*节点* 就是装满了用于烹饪的新鲜材料的冰箱。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:25
msgid ""
"There are many types of nodes. Some show images, others play sound, other "
"nodes display 3D models, etc. There are dozens of them."
msgstr ""
"有很多种类型的节点，有的显示图像、有的播放声音、有的节点显示3D模型等等。它们"
"有数十个。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:29
msgid "Nodes"
msgstr "节点"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:31
msgid ""
"But let's start with the basics. Nodes are fundamental building blocks for "
"creating a game. As mentioned above, a node can perform a variety of "
"specialized functions. However, any given node always has the following "
"attributes:"
msgstr ""
"但让我们从基础开始。节点是创建游戏的基本构建块。如上所述，一个节点可以执行各"
"种特定的功能。但是，任何给定节点始终具有以下属性："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:35
msgid "It has a name."
msgstr "有名字。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:36
msgid "It has editable properties."
msgstr "具有可编辑的属性。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:37
msgid "It can receive a callback to process every frame."
msgstr "可以接收回调以处理每个帧。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:38
msgid "It can be extended (to have more functions)."
msgstr "可以被扩展(以具有更多功能)。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:39
msgid "It can be added to another node as a child."
msgstr "可以作为子节点被添加到其他节点上。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:43
msgid ""
"The last one is important. Nodes can have other nodes as children. When "
"arranged in this way, the nodes become a **tree**."
msgstr ""
"最后一点很重要。节点能够持有其他节点作为子节点。以这种方式编排时，这些节点就"
"会变成一棵 **树**。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:46
msgid ""
"In Godot, the ability to arrange nodes in this way creates a powerful tool "
"for organizing projects. Since different nodes have different functions, "
"combining them allows for the creation of more complex functions."
msgstr ""
"在Godot中，以这种方式来编排节点的特点为组织项目创造了一个强有力的工具。因为不"
"同的节点有不同的功能，将它们组合起来则允许创建更多复杂的功能。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:50
msgid ""
"Don't worry if this doesn't click yet. We will continue to explore this over "
"the next few sections. The most important fact to remember for now is that "
"nodes exist and can be arranged this way."
msgstr ""
"如果现在没有领悟它，不要担心。我们会再接下来几节里继续探讨。目前要记住最重要"
"的一点是：有节点这个东西存在，并且能够按这种方式来编排。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:55
msgid "Scenes"
msgstr "场景"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:59
msgid ""
"Now that the concept of nodes has been defined, the next logical step is to "
"explain what a Scene is."
msgstr ""
"既然现在已经定义了节点的概念，那么下一个合逻辑的步骤就是解释场景是什么了。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:62
msgid ""
"A scene is composed of a group of nodes organized hierarchically (in tree "
"fashion). Furthermore, a scene:"
msgstr "一个场景是由一组分层组织(以树形方式)的节点组成。此外，一个场景："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:65
msgid "always has one root node."
msgstr "始终有 **一个** 根节点。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:66
msgid "can be saved to disk and loaded back."
msgstr "能够被保存到磁盘上，也能被载入回来。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:67
msgid "can be *instanced* (more on that later)."
msgstr "能够被 *实例化* (稍后详细说明)。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:69
msgid ""
"Running a game means running a scene. A project can contain several scenes, "
"but for the game to start, one of them must be selected as the main scene."
msgstr ""
"运行一个游戏意味着运行一个场景。一个项目可以有多个场景，但是为了游戏的启动，"
"必须有一个作为主场景。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:72
msgid ""
"Basically, the Godot editor is a **scene editor**. It has plenty of tools "
"for editing 2D and 3D scenes as well as user interfaces, but the editor is "
"based on the concept of editing a scene and the nodes that compose it."
msgstr ""
"本质上，Godot编辑器就是一个 **场景编辑器** 。它有很多用于编辑2D和3D场景以及用"
"户界面的工具，但是编辑器是基于编辑场景及构成场景的节点的概念的。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:77
msgid "Editor"
msgstr "编辑器"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:79
msgid ""
"Open the project you made in :ref:`doc_intro_to_the_editor_interface`, or "
"create a new one. This will open the Godot editor:"
msgstr ""
"打开您在 :ref:`doc_intro_to_the_editor_interface`中创建的项目，或创建一个新项"
"目。这将打开Godot编辑器："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:84
msgid ""
"As mentioned before, making games in Godot feels like being in a kitchen, so "
"let's open the refrigerator and add some fresh nodes to the project. We'll "
"begin with a \"Hello World\" message that we'll put on the screen."
msgstr ""
"正如前面提到的，在Godot做游戏感觉就像在厨房，所以让我们打开冰箱，为项目添加一"
"些新的节点。我们将以在屏幕上显示“Hello World”消息开始。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:89
msgid ""
"To do this we need to add a Label node. Press the \"Add Child Node\" button "
"at the top left of the scene dock (the icon represents a plus symbol). This "
"button is the main way to add new nodes to a scene, and will always add the "
"chosen node as a child of the currently selected node (or, in an empty "
"scene, as the \"root\" node)."
msgstr ""
"为此，我们需要添加 Label（标签）节点。点击场景面板左上角的“添加子节点”按钮"
"（加号图标）。这是往场景中添加新节点的主要方式，会把新建的节点加到当前所选节"
"点下，成为其子节点（如果是空场景，新建节点则会成为根节点）。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:97
msgid ""
"In an empty scene (without root node), the scene dock shows several options "
"to quickly add a root node to the scene. \"2D Scene\" adds a Node2D node, "
"\"3D Scene\" adds a Spatial node, \"User Interface\" adds a Control node, "
"and \"Custom Node\" which lets you select any node (so it is equivalent to "
"pressing the \"Add Child Node\" button). You can also press the star-shaped "
"icon to toggle the display of your favorited nodes."
msgstr ""
"在（没有根节点的）空场景中，场景面板会显示一些快速添加根节点的选项。“2D 场"
"景”会添加 Node2D 节点，“3D 场景”会添加 Spatial 节点，“用户界面”会添加 "
"Control 节点，“自定义节点”则会让你自己选择节点类型（所以和点击“添加子节点”按"
"钮的效果是一致的）。点击星形按钮可以切换是否显示收藏的节点。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:105
msgid ""
"Note that these presets are here for convenience and are not mandatory for "
"the different types of scenes. Not every 3D scene needs a Spatial node as "
"its root node, likewise not every GUI or 2D scene needs a Control node or "
"Node2D as their root node."
msgstr ""
"此处的预设仅仅是为了方便，而不是对各类场景的强制要求。不是所有的 3D 场景都要"
"以 Spatial 节点为根节点，同样，GUI 和 2D 场景的根节点也不一定要是 Control 节"
"点和 Node2D 节点。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:110
msgid ""
"Now, to add a label node to this scene you can click on the Custom Node "
"button or the Add Node button at the top. In scenes that aren't empty you "
"use the add node button to create every child node."
msgstr ""
"所以，往这个场景里添加标签节点的话，无论是点击自定义节点按钮，还是点击顶部的"
"添加节点按钮都可以。而如果是往非空场景里添加子节点，就得使用添加节点按钮。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:116
msgid ""
"This will open the Create Node dialog, showing the long list of nodes that "
"can be created:"
msgstr "这将会打开创建节点对话框，展示了一长串能够被创建的节点列表："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:121
msgid ""
"From there, select the \"Label\" node first. Searching for it is probably "
"the fastest way:"
msgstr "在这里，先选择 ``Label`` 节点。直接搜索它可能是最快捷的方式："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:126
msgid "And finally, create the Label! A lot happens when Create is pressed:"
msgstr "最终，创建了一个标签！当创建按钮被按下时，很多事情就发生了："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:130
msgid ""
"First of all, the scene changes to the 2D editor (because Label is a 2D Node "
"type), and the Label appears, selected, at the top left corner of the "
"viewport."
msgstr ""
"首先，场景更改为2D编辑器(因为标签是一个2D节点类型)，并且标签出现在视图的左上"
"角，处于选中状态。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:133
#, fuzzy
msgid ""
"The node appears in the scene tree editor in the Scene dock, and the label "
"properties appear in the Inspector dock."
msgstr ""
"这个节点出现在了场景树编辑器(上图右上角的框里)，而且标签的属性出现在了属性面"
"板中(上图右下角的框里)。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:136
msgid ""
"The next step will be to change the \"Text\" Property of the label. Let's "
"change it to \"Hello World\":"
msgstr "下一步就是去改变标签的 ``文本`` 属性了，我们来把它改成“Hello,World!”："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:141
#, fuzzy
msgid ""
"Ok, everything's ready to run the scene! Press the PLAY SCENE Button on the "
"top bar (or hit :kbd:`F6`):"
msgstr ""
"好了，一切都已准备就绪，可以来运行场景了！在顶栏按下 :menuselection:`运行场景"
"(PLAY SCENE)` 按钮(或敲击 :kbd:`F6` )："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:146
msgid "Aaaand... Oops."
msgstr "然后……哎呀。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:150
msgid ""
"Scenes need to be saved to be run, so save the scene to something like Hello."
"tscn in Scene -> Save:"
msgstr ""
"场景需要被保存才能被运行，所以在 :menuselection:`场景(Scene) --> 保存菜单"
"(Save)` 中将场景保存成文件如Hello.tscn："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:155
msgid ""
"And here's when something funny happens. The file dialog is a special file "
"dialog, and only allows you to save inside the project. The project root is "
"``res://`` which means \"resource path\". This means that files can only be "
"saved inside the project. For the future, when doing file operations in "
"Godot, remember that ``res://`` is the resource path, and no matter the "
"platform or install location, it is the way to locate where resource files "
"are from inside the game."
msgstr ""
"然后，有趣的事情发生了。这个文件对话框是一个特别的文件对话框，只允许保存在项"
"目内。项目根目录是 ``res://``，意为“资源路径”（resource path）。这也就意味"
"着，文件只可以被保存到项目的内部。以后，当在Godot进行文件操作的时候，记住 "
"``res://`` 就是资源的路径，无论哪种平台和安装位置，它都是定位游戏内部的资源文"
"件位置的方式。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:163
msgid ""
"After saving the scene and pressing run scene again, the \"Hello World\" "
"demo should finally execute:"
msgstr ""
"在保存场景并再一次按下运行场景之后，“Hello World”演示示例应该最终被执行了："

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:168
msgid "Success!"
msgstr "成功！"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:172
msgid ""
"If this doesn't immediately work and you have a hiDPI display on at least "
"one of your monitors, go to **Project → Project Settings → Display → "
"Window** then enable **Allow Hidpi** under **Dpi**."
msgstr ""
"如果这不能立即工作并且在至少一台显示器上有hiDPI显示，请转到 :menuselection:`"
"项目(Project) --> 项目设置(Project Settings) --> 显示(Display) --> 窗口"
"(Window)` 然后在 **Dpi** 下启用 **允许Hidpi**。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:180
msgid "Configuring the project"
msgstr "配置项目"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:182
msgid ""
"Ok, it's time to configure the project. Right now, the only way to run "
"something is to execute the current scene. Projects, however, may have "
"several scenes, so one of them must be set as the main scene. This is the "
"scene that will be loaded any time the project is run."
msgstr ""
"好了，是时候配置项目了。现在，唯一运行某些东西的方式就是执行当前的场景。然"
"而，可能有多个场景，因此其中一个必须被设定为主场景。这个场景是将会在项目运行"
"时被载入的场景。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:187
msgid ""
"These settings are all stored in a project.godot file, which is a plaintext "
"file in win.ini format (for easy editing). There are dozens of settings that "
"you can change in this file to alter how a project executes. To simplify "
"this process, Godot provides a project settings dialog, which acts as a sort "
"of frontend to editing a project.godot file."
msgstr ""
"这些设置将全部被存放在 ``project.godot`` 文件中，一个 ``win.ini`` 格式的普通"
"文本文件(以便编辑)。在这个文件中有数十个设置可以被修改，来更改项目的执行方"
"式。为了简化此过程，Godot提供了项目设置对话框，作为编辑 ``project.godot`` 文"
"件的前端。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:193
msgid "To access that dialog, select Project -> Project Settings. Try it now."
msgstr ""
"要访问这个对话框，选择 :menuselection:`项目(Project) --> 项目设置(Project "
"Settings)``。现在就试试吧。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:195
msgid ""
"Once the window opens, let's select a main scene. Locate the `Application/"
"Run/Main Scene` property and click on it to select 'Hello.tscn'."
msgstr ""
"窗口打开后，让我们选择一个主场景。定位到 :menuselection:`应用程序"
"(Application) --> 运行(Run) --> 主场景(Main Scene)` 属性然后点击以选择 "
"``Hello.tscn``。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:200
msgid ""
"Now, with this change, when you press the regular Play button (or F5), this "
"scene will run, no matter which scene is actively being edited."
msgstr ""
"现在，通过此更改，当您按常规播放按钮(或 :kbd:`F5`)时，无论正在编辑哪个场景，"
"该场景都将运行。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:203
msgid ""
"The project settings dialog provides a lot of options that can be saved to a "
"project.godot file and shows their default values. If you change a value, a "
"tick is marked to the left of its name. This means that the property will be "
"saved to the project.godot file and remembered."
msgstr ""
"项目设置对话框提供了许多能够被保存至 ``project.godot`` 文件的选项并且显示出了"
"它们的默认值。当您改变了一个值，一个对勾被标记在属性名的左侧。这意味着这个属"
"性将被保存到 ``project.godot`` 文件中并被记住。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:208
msgid ""
"As a side note, it is also possible to add custom configuration options and "
"read them in at run-time using the :ref:`ProjectSettings "
"<class_ProjectSettings>` singleton."
msgstr ""
"另外，还可以使用 :ref:`ProjectSettings <class_ProjectSettings>` 单例在运行时"
"来添加自定义配置选项，并读取它们。"

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:212
msgid "To be continued..."
msgstr "未完待续..."

#: ../../docs/getting_started/step_by_step/scenes_and_nodes.rst:214
msgid ""
"This tutorial talked about \"scenes and nodes\", but so far there has been "
"only *one* scene and *one* node! Don't worry, the next tutorial will expand "
"on that..."
msgstr ""
"这篇教程谈论了“场景和节点”，但是目前为止，还只有 *一个* 场景和 *一个* 节点！"
"别担心，下一篇教程将会展开讨论…"
