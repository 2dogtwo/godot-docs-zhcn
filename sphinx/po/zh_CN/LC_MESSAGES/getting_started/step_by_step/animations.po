# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-04 16:27+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/animations.rst:4
msgid "Animations"
msgstr "动画"

#: ../../docs/getting_started/step_by_step/animations.rst:7
msgid "Introduction"
msgstr "前言"

#: ../../docs/getting_started/step_by_step/animations.rst:9
msgid "Godot's animation system is extremely powerful and flexible."
msgstr "Godot的动画系统非常强大和灵活."

#: ../../docs/getting_started/step_by_step/animations.rst:11
msgid ""
"To begin, let's use the scene from the previous tutorial (:ref:"
"`doc_splash_screen`). The goal is to add a \"fade-in\" animation to the "
"splash image. Here's a copy just in case: :download:`robisplash.zip <files/"
"robisplash.zip>`."
msgstr ""
"首先, 让我们使用前面教程中的场景( :ref:`doc_splash_screen` ). 目标是添加一个 "
"``淡入`` 动画到起始图像. 为了防万一, 这里是一个副本: :download:`robisplash."
"zip <files/robisplash.zip>`."

#: ../../docs/getting_started/step_by_step/animations.rst:16
msgid "Add an animation player"
msgstr "添加一个动画播放器"

#: ../../docs/getting_started/step_by_step/animations.rst:18
msgid ""
"First of all, add an :ref:`AnimationPlayer <class_AnimationPlayer>` node to "
"the scene as a child of \"background\" (the root node):"
msgstr ""
"首先, 将一个 :ref:`AnimationPlayer <class_AnimationPlayer>` 节点添加到场景"
"中, 作为 ``background`` (根节点)的子节点:"

#: ../../docs/getting_started/step_by_step/animations.rst:23
msgid ""
"When a node of this type is selected, the animation editor panel will appear:"
msgstr "当选择这种类型的节点时, 动画编辑器面板会出现:"

#: ../../docs/getting_started/step_by_step/animations.rst:28
msgid "The animation editor panel stays visible until manually hidden."
msgstr "动画编辑器面板保持可见, 直到手动隐藏."

#: ../../docs/getting_started/step_by_step/animations.rst:31
msgid "Creating the animation"
msgstr "创建动画"

#: ../../docs/getting_started/step_by_step/animations.rst:33
msgid ""
"It's time to create a new animation! Press the Animation button then select "
"new from the menu. Name the animation \"intro\" when the dialog appears."
msgstr ""
"是时候创建一个新的动画了！按下动画按钮, 然后在菜单中选择新建. 在出现的对话框"
"中输入动画名称 ``intro``."

#: ../../docs/getting_started/step_by_step/animations.rst:40
msgid ""
"Now that we have an animation, the property editor enters \"animation editing"
"\" mode. In this mode, a key icon appears next to every property of the "
"property editor. In Godot, any property of an object can be animated:"
msgstr ""
"现在我们有一个动画, 属性检查器进入 ``动画编辑`` 模式. 在此模式下, 属性检查器"
"的每个属性旁边都会显示一个钥匙图标. 在Godot中, 对象的任何属性都可以被动画化:"

#: ../../docs/getting_started/step_by_step/animations.rst:48
msgid "Editing the animation"
msgstr "编辑动画"

#: ../../docs/getting_started/step_by_step/animations.rst:50
msgid "The logo will appear from the top of the screen."
msgstr "Logo将从屏幕顶部出现."

#: ../../docs/getting_started/step_by_step/animations.rst:52
msgid ""
"With the animation editor panel open, select the \"logo\" node and set the "
"\"Rect / Position\" property to ``(118, -400)`` and press the key button "
"next to the property to add a keyframe:"
msgstr ""
"在动画编辑器面板打开的情况下, 选择 ``logo`` 节点, 并将 ``Rect / Position`` 属"
"性设置为 ``(118, -400)``, 然后按该属性旁边的键按钮以添加关键帧:"

#: ../../docs/getting_started/step_by_step/animations.rst:58
msgid "When the dialog appears, confirm that you are creating a new track."
msgstr "当对话框出现时, 证明你正在创建一个新轨道."

#: ../../docs/getting_started/step_by_step/animations.rst:60
msgid "The keyframe will be added in the animation player editor:"
msgstr "关键帧将添加到动画播放器编辑器中:"

#: ../../docs/getting_started/step_by_step/animations.rst:64
msgid "Move the editor cursor forward in time by clicking here:"
msgstr "点击此处, 将编辑器光标及时向前移动:"

#: ../../docs/getting_started/step_by_step/animations.rst:68
msgid ""
"Change the logo position to ``(118, 0)`` and add a keyframe again. With two "
"keyframes with different values, the animation happens."
msgstr ""
"将 ``logo`` 的位置改为 ``(118, 0)``, 并再次添加一个关键帧. 当有两个具有不同值"
"的关键帧, 将产生动画."

#: ../../docs/getting_started/step_by_step/animations.rst:73
msgid ""
"Pressing \"Play selected animation from start\" button on the animation "
"panel (or :kbd:`Shift + D` on keyboard) will make the logo descend."
msgstr ""
"在动画面板按下 ``从开始播放播放所选动画`` .(或者按下 :kbd:`Shift+D`) 将使 "
"``logo`` 下降."

#: ../../docs/getting_started/step_by_step/animations.rst:78
msgid ""
"Click the \"Autoplay on Load\" button to set the animation to start "
"automatically when the scene starts."
msgstr ""
"点击 ``加载时自动播放(Autoplay on Load)`` 按钮, 将动画设置为在场景开始时自动"
"开始."

#: ../../docs/getting_started/step_by_step/animations.rst:83
msgid ""
"And finally, when running the scene, the animation should look like this:"
msgstr "最终, 当运行场景时, 动画应该是这样的:"
