# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-29 21:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:4
#, fuzzy
msgid "Godot interfaces"
msgstr "调整界面"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:6
msgid ""
"Often one needs scripts that rely on other objects for features. There are 2 "
"parts to this process:"
msgstr "通常需要依赖于其他对象的脚本来提供特性。这个过程分为两部分："

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:9
msgid "Acquiring a reference to the object that presumably has the features."
msgstr "获取对可能具有这些特性的对象的引用。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:11
msgid "Accessing the data or logic from the object."
msgstr "处理来自对象的数据或逻辑。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:13
msgid "The rest of this tutorial outlines the various ways of doing all this."
msgstr "本教程的其余部分，概述了实现这一切的各种方法。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:16
#, fuzzy
msgid "Acquiring object references"
msgstr "动画面板参考"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:18
msgid ""
"For all :ref:`Object <class_Object>`\\s, the most basic way of referencing "
"them is to get a reference to an existing object from another acquired "
"instance."
msgstr ""
"对所有:参考:`对象<类_对象>`来说，引用它们最基本的方法，是从另一个获取的实例中"
"获取对现有对象的引用。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:32
msgid ""
"The same principle applies for :ref:`Reference <class_Reference>` objects. "
"While users often access :ref:`Node <class_Node>` and :ref:`Resource "
"<class_Resource>` this way, alternative measures are available."
msgstr ""
"同样的原则也适用于:参考:`引用<类_引用>`对象。虽然用户经常以这种方式访问:参考:"
"`节点<类_节点>`和:参考:`资源<类_资源>`，还可以采取其他措施。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:36
msgid ""
"Instead of property or method access, one can get Resources by load access."
msgstr "而不是属性或方法访问，可以通过加载访问获得资源。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:115
#, fuzzy
msgid "Note the following:"
msgstr "使用以下名称:"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:117
msgid "There are many ways in which a language can load such resources."
msgstr "一种语言可以通过多种方式加载这些资源。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:119
msgid ""
"When designing how objects will access data, don't forget that one can pass "
"resources around as references as well."
msgstr "在设计对象如何访问数据时，不要忘记，还可以将资源作为引用传递。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:122
msgid ""
"Keep in mind that loading a resource fetches the cached resource instance "
"maintained by the engine. To get a new object, one must :ref:`duplicate "
"<class_Resource_method_duplicate>` an existing reference or instantiate one "
"from scratch with ``new()``."
msgstr ""
"请记住，加载资源将获取引擎维护的缓存资源实例。要获取一个新对象，必须:参考:`复"
"制<类_资源_方法_复制>`一个现有引用，或者使用``new()``从头实例化一个引用。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:127
msgid "Nodes likewise have an alternative access point: the SceneTree."
msgstr "节点也有一个可选的访问点：场景树。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:242
msgid "Accessing data or logic from an object"
msgstr "处理来自对象的数据或逻辑"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:244
msgid ""
"Godot's scripting API is duck-typed. This means that if a script executes an "
"operation, Godot doesn't validate that it supports the operation by "
"**type**. It instead checks that the object **implements** the individual "
"method."
msgstr ""
"Godot的脚本API是隐藏类型。这意味着如果脚本执行某个操作，Godot不验证它是否支持"
"**类型**操作。相反，它检查对象**实现**的单独方法。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:248
msgid ""
"For example, the :ref:`CanvasItem <class_CanvasItem>` class has a "
"``visible`` property. All properties exposed to the scripting API are in "
"fact a setter and getter pair bound to a name. If one tried to access :ref:"
"`CanvasItem.visible <class_CanvasItem_property_visible>`, then Godot would "
"do the following checks, in order:"
msgstr ""
"例如，:参考:`画布组件 <类_画布组件>`类有一个“可见性”的属性。暴露给脚本API的所"
"有属性，实际上都是绑定到名称的设值函数和取值函数对。如果有人试图访问:参考:`画"
"布组件.可见性 <类_画布组件_属性_可见性>`，那么Godot会按照以下顺序进行检查："

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:254
msgid ""
"If the object has a script attached, it will attempt to set the property "
"through the script. This leaves open the opportunity for scripts to override "
"a property defined on a base object by overriding the setter method for the "
"property."
msgstr ""
"如果对象附加了脚本，它将尝试通过脚本设置属性。这就为脚本提供了重写基础对象上"
"定义的属性的机会，方法是重写属性的设值函数方法。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:259
msgid ""
"If the script does not have the property, it performs a HashMap lookup in "
"the ClassDB for the \"visible\" property against the CanvasItem class and "
"all of its inherited types. If found, it will call the bound setter or "
"getter. For more information about HashMaps, see the :ref:`data preferences "
"<doc_data_preferences>` docs."
msgstr ""
"如果脚本没有该属性，它在类数据库中对画布组件类及其所有继承类型执行“可见性”属"
"性的哈希表查找。如果找到，它将调用绑定的设值函数或取值函数。有关哈希表的更多"
"信息，参见:参考:`数据偏好<文档_数据_偏好>`文档。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:265
msgid ""
"If not found, it does an explicit check to see if the user wants to access "
"the \"script\" or \"meta\" properties."
msgstr "如果没有找到，它会显式地检查用户是否想要访问“脚本”或“元”属性。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:268
msgid ""
"If not, it checks for a ``_set``/``_get`` implementation (depending on type "
"of access) in the CanvasItem and its inherited types. These methods can "
"execute logic that gives the impression that the Object has a property. This "
"is also the case with the ``_get_property_list`` method."
msgstr ""
"如果没有，它将检查画布组件中的``_设值``/``_取值``实现(取决于访问的类型)及其继"
"承类型。这些方法可以执行逻辑，从而给人一种对象具有属性的印象。``_获取_属性_列"
"表``方法也是如此。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:273
msgid ""
"Note that this happens even for non-legal symbol names such as in the case "
"of :ref:`TileSet <class_TileSet>`'s \"1/tile_name\" property. This refers to "
"the name of the tile with ID 1, i.e. :ref:`TileSet.tile_get_name(1) "
"<class_TileSet_method_tile_get_name>`."
msgstr ""

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:278
msgid ""
"As a result, this duck-typed system can locate a property either in the "
"script, the object's class, or any class that object inherits, but only for "
"things which extend Object."
msgstr ""
"因此，这个隐藏类型系统可以在脚本中找到一个属性，对象的类，或对象继承的任何"
"类，但仅适用于扩展对象的对象。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:282
msgid ""
"Godot provides a variety of options for performing runtime checks on these "
"accesses:"
msgstr "Godot提供了多种选项，来执行这些访问的运行时检查："

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:285
msgid ""
"A duck-typed property access. These will property check (as described "
"above). If the operation isn't supported by the object, execution will halt."
msgstr ""
"隐藏类型的属性访问。这些将检查属性(如上所述)。如果对象不支持该操作，将停止执"
"行。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:313
msgid ""
"A method check. In the case of :ref:`CanvasItem.visible "
"<class_CanvasItem_property_visible>`, one can access the methods, "
"``set_visible`` and ``is_visible`` like any other method."
msgstr ""
"一种检查方法。在:参考:`画布组件.可见性 <类_画布组件_属性_可见性>`的情况下，我"
"们可以访问这些方法，``设置_可见性``和``为_可见性``与任何其他方法一样。"

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:445
msgid ""
"Outsource the access to a :ref:`FuncRef <class_FuncRef>`. These may be "
"useful in cases where one needs the max level of freedom from dependencies. "
"In this case, one relies on an external context to setup the method."
msgstr ""

#: ../../docs/getting_started/workflow/best_practices/godot_interfaces.rst:504
msgid ""
"These strategies contribute to Godot's flexible design. Between them, users "
"have a breadth of tools to meet their specific needs."
msgstr ""
"这些策略有助于Godot的灵活设计。通过它们，用户可以使用多种工具来满足他们的特定"
"需求。"
