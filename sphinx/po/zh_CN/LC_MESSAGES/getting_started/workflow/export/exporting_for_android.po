# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-02 13:32+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:4
msgid "Exporting for Android"
msgstr "为Android导出"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:6
msgid ""
"Exporting for Android has fewer requirements than compiling Godot for "
"Android. The following steps detail what is needed to set up the Android SDK "
"and the engine."
msgstr ""
"导出Android的要求比编译Android的Godot要少.下面的步骤详细介绍了设置Android SDK"
"和引擎所需的内容."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:10
msgid "Download the Android SDK"
msgstr "下载Android SDK"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:12
msgid "Download and install the Android SDK."
msgstr "下载并安装 Android SDK."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:14
msgid ""
"You can install it using `Android Studio version 4.1 or later <https://"
"developer.android.com/studio/>`__."
msgstr ""
"你可以使用 `Android Studio 4.1或更高版本<https://developer.android.com/"
"studio/>`__ 进行安装."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:16
msgid ""
"Run it once to complete the SDK setup using these `instructions <https://"
"developer.android.com/studio/intro/update#sdk-manager>`__."
msgstr ""
"运行一次,使用这些 `说明<https://developer.android.com/studio/intro/"
"update#sdk-manager>`__ 完成SDK设置."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:17
msgid ""
"Ensure that the `required packages <https://developer.android.com/studio/"
"intro/update#recommended>`__ are installed as well."
msgstr ""
"确保 `必要的软件包<https://developer.android.com/studio/intro/"
"update#recommended>`__ 也被安装."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:19
msgid "Android SDK Platform-Tools version 30.0.5 or later"
msgstr "Android SDK平台工具30.0.5或更高版本"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:20
#, fuzzy
msgid "Android SDK Build-Tools version 30.0.3"
msgstr "Android SDK Build-Tools version 30.0.1"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:21
msgid "Android SDK Platform 29"
msgstr "Android SDK 平台工具 29"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:22
msgid "Android SDK Command-line Tools (latest)"
msgstr "Android SDK命令行工具 (最新)"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:23
msgid "CMake version 3.10.2.4988404"
msgstr "CMake 版本 3.10.2.4988404"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:24
msgid "NDK version 21.4.7075529"
msgstr "NDK 版本 21.4.7075529"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:26
msgid ""
"You can install it using the `command line tools <https://developer.android."
"com/studio/#command-tools>`__."
msgstr ""
"你可以使用 `命令行工具<https://developer.android.com/studio/#command-"
"tools>`__ 来安装它."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:28
msgid ""
"Once the command line tools are installed, run the `sdkmanager <https://"
"developer.android.com/studio/command-line/sdkmanager>`__ command to complete "
"the setup process:"
msgstr ""
"命令行工具安装完成后,运行 `sdkmanager <https://developer.android.com/studio/"
"command-line/sdkmanager>`__ 命令以完成安装过程:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:36
msgid ""
"If you are using Linux, **do not use an Android SDK provided by your "
"distribution's repositories as it will often be outdated**."
msgstr ""
"如果你使用的是Linux, **不要使用你的发行版软件库提供的Android SDK,因为它通常是"
"过时的** ."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:40
msgid "Install OpenJDK 8"
msgstr "安装OpenJDK 8"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:42
msgid ""
"Download and install  `OpenJDK 8 <https://adoptopenjdk.net/index.html?"
"variant=openjdk8&jvmVariant=hotspot>`__."
msgstr ""
"下载并安装 `OpenJDK 8 <https://adoptopenjdk.net/index.html?"
"variant=openjdk8&jvmVariant=hotspot>`__ ."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:45
msgid "Create a debug.keystore"
msgstr "创建一个debug.keystore"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:47
msgid ""
"Android needs a debug keystore file to install to devices and distribute non-"
"release APKs. If you have used the SDK before and have built projects, ant "
"or eclipse probably generated one for you (in the ``~/.android`` directory "
"on Linux and macOS, in the ``C:\\Users\\<user>\\.android\\`` directory on "
"Windows)."
msgstr ""
"Android需要调试密钥库文件，才能安装到设备并分发非发布版本APK。如果您以前使用"
"过SDK并且已经构建了项目，那么ant或eclipse可能会为您生成一个（在Linux和macOS"
"上，您可以在 ``〜/ .android`` 目录中找到它）。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:52
msgid ""
"If you can't find it or need to generate one, the keytool command from the "
"JDK can be used for this purpose::"
msgstr "如果找不到或需要生成一个,则可以使用JDK中的keytool命令:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:57
msgid ""
"This will create a ``debug.keystore`` file in your current directory. You "
"should move it to a memorable location such as ``%USERPROFILE%\\.android"
"\\``, because you will need its location in a later step. For more "
"information on ``keytool`` usage, see `this Q&A article <https://godotengine."
"org/qa/21349/jdk-android-file-missing>`__."
msgstr ""
"这会在当前目录中创建一个 ``debug.keystore`` 文件.你需要移动到一个难忘的位置,"
"比如 ``%USERPROFILE%\\.android\\`` ,因为后续步骤会需要这个位置. ``keytool`` "
"用法的更多信息请查看 `这个 Q&A 文章 <https://godotengine.org/qa/21349/jdk-"
"android-file-missing>`__ ."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:60
msgid "Setting it up in Godot"
msgstr "在Godot中设置它"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:62
msgid ""
"Enter the Editor Settings screen. This screen contains the editor settings "
"for the user account in the computer (it's independent of the project)."
msgstr "进入编辑器设置屏幕.此屏幕包含计算机中用户帐户的编辑器设置(独立于项目)."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:68
msgid "Scroll down to the section where the Android settings are located:"
msgstr "向下滚动到Android设置所在的部分:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:72
msgid "In that screen, 2 paths need to be set:"
msgstr "在该屏幕中,需要设置两个路径:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:74
msgid ""
"The ``Android Sdk Path`` should be the location where the Android SDK was "
"installed. - For example ``%LOCALAPPDATA%\\Android\\Sdk\\`` on Windows or ``/"
"Users/$USER/Library/Android/sdk/`` on macOS."
msgstr ""
"``Android Sdk Path`` 设置为Android SDK的安装位置.例如,Windows上的 ``"
"%LOCALAPPDATA%\\Android\\Sdk\\`` ,或macOS上的 ``/Users/$USER/Library/Android/"
"sdk/`` ."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:77
msgid ""
"The debug ``.keystore`` file - It can be found in the folder where you put "
"the ``debug.keystore`` file you created above."
msgstr ""
"debug ``.keystore``文件 - 可以在之前创建 ``debug.keystore`` 文件的文件夹中找"
"到."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:80
msgid "Once that is configured, everything is ready to export to Android!"
msgstr "配置完成后,导出到Android的一切都准备好了！"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:83
msgid "Providing launcher icons"
msgstr "提供启动器图标"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:85
msgid ""
"Launcher icons are used by Android launcher apps to represent your "
"application to users. Godot only requires high-resolution icons (for "
"``xxxhdpi`` density screens) and will automatically generate lower-"
"resolution variants."
msgstr ""
"启动图标是Android启动器应用把你的应用展示给用户时用到的.Godot只需要高分辨率图"
"标(适用于``xxxhdpi``屏幕),然后自动生成低分辨率变体."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:87
msgid "There are two types of icons required by Godot:"
msgstr "Godot需要两种类型的图标:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:89
msgid ""
"**Main Icon:** The \"classic\" icon. This will be used on all Android "
"versions up to Android 8 (Oreo), exclusive. Must be at least 192×192 px."
msgstr ""
"**Main Icon:** \"经典\" 图标.这会在所有Android版本不高于 Android 8 (Oreo)中使"
"用.必须至少 192×192 px."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:90
msgid ""
"**Adaptive Icons:** Starting from Android 8 (inclusive), `Adaptive Icons "
"<https://developer.android.com/guide/practices/ui_guidelines/"
"icon_design_adaptive>`_ were introduced. Applications will need to include "
"separate background and foreground icons to have a native look. The user's "
"launcher application will control the icon's animation and masking. Must be "
"at least 432×432 px."
msgstr ""
"**Adaptive Icons:** 从 Android 8 (包括)开始, `Adaptive Icons <https://"
"developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive>`_ "
"被引入.应用为了有原生的样式需要包含分离的背景与前景图标.用户的启动程序会控制"
"图标的动画和遮罩.必须至少432×432 px."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:92
msgid ""
"It's important to adhere to some rules when designing adaptive icons. "
"`Google Design has provided a nice article <https://medium.com/google-design/"
"designing-adaptive-icons-515af294c783>`_ that helps to understand those "
"rules and some of the capabilities of adaptive icons."
msgstr ""
"重要的是设计自适应图标时必须遵守一些规则.`Google Design 提供了一篇文章 "
"<https://medium.com/google-design/designing-adaptive-icons-515af294c783>`_ 来"
"帮助理解这些规则以及自适应图标的一些技巧."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:94
msgid ""
"The most important adaptive icon design rule is to have your icon critical "
"elements inside the safe zone: a centered circle with a diameter of 66dp "
"(264 pixels on ``xxxhdpi``) to avoid being clipped by the launcher."
msgstr ""
"最重要的自适应图标规则是,把图标的重要元素放置在安全区:一个直径为"
"66dp(``xxxhdpi``上为264像素)居中的圆来避免被启动器裁剪."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:96
msgid ""
"If you don't provide some of the requested icons, Godot will replace them "
"using a fallback chain, trying the next in line when the current one fails:"
msgstr ""
"如果你不提供必要的图标,Godot会用备用链来替换它们,当当前行失败时会尝试下一行:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:98
msgid ""
"**Main Icon:** Provided main icon -> Project icon -> Default Godot main icon."
msgstr "**主图标:** 提供主图标 -> 项目图标 -> 默认Godot主图标."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:99
msgid ""
"**Adaptive Icon Foreground:** Provided foreground icon -> Provided main icon "
"-> Project icon -> Default Godot foreground icon."
msgstr ""
"**自适应图标前景:** 提供的前景图标 ->提供的主图标 -> 项目图标 -> 默认 Godot "
"前景图标."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:100
msgid ""
"**Adaptive Icon Background:** Provided background icon -> Default Godot "
"background icon."
msgstr "**自适应图标背景:** 提供的背景图标 -> 默认 Godot 背景图标."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:102
msgid ""
"It's highly recommended to provide all the requested icons with their "
"specified resolutions. This way, your application will look great on all "
"Android devices and versions."
msgstr ""
"强烈建议提供所有要求的图标的指定分辨率.这样一来,你的应用程序在所有的Android设"
"备和版本上都会显得非常漂亮."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:106
msgid "Exporting for Google Play Store"
msgstr "为Google Play商店导出"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:108
msgid ""
"Uploading an APK to Google's Play Store requires you to sign using a non-"
"debug keystore file; such file can be generated like this:"
msgstr ""
"将APK上传到Google的Play商店,需要您使用非调试密钥库文件进行签名,这样的文件可以"
"像这样生成:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:115
msgid ""
"This keystore and key are used to verify your developer identity, remember "
"the password and keep it in a safe place! Use Google's Android Developer "
"guides to learn more about `APK signing <https://developer.android.com/"
"studio/publish/app-signing>`__."
msgstr ""
"此密钥库和密钥用于验证您的开发人员身份,记住密码并将其保存在安全的地方！使用"
"Google的Android开发者指南来了解有关 `APK签名 <https://developer.android.com/"
"studio/publish/app-signing>`__ 的更多信息."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:118
msgid "Now fill in the following forms in your Android Export Presets:"
msgstr "现在,在您的Android导出预设中填写以下表格:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:122
msgid "**Release:** Enter the path to the keystore file you just generated."
msgstr "**发布:** 输入您刚刚生成的密钥库文件的路径."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:123
msgid "**Release User:** Replace with the key alias."
msgstr "**发布用户:** 替换为密钥别名."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:124
msgid ""
"**Release Password:** Key password. Note that the keystore password and the "
"key password currently have to be the same."
msgstr "**发布密码:** 密钥密码. 请注意,密钥库密码和密钥密码当前必须相同."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:126
msgid ""
"**Your export_presets.cfg file now contains sensitive information.** If you "
"use a version control system, you should remove it from public repositories "
"and add it to your ``.gitignore`` file or equivalent."
msgstr ""
"**您的export_presets.cfg文件现在包含敏感信息.** 如果使用版本控制系统,则应将其"
"从公共存储库中删除,并将其添加到 ``.gitignore`` 文件或等效文件中."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:130
#, fuzzy
msgid ""
"Don't forget to uncheck the **Export With Debug** checkbox while exporting."
msgstr "选择APK的名称时,请不要忘记取消选中 **带调试导出** 复选框."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:135
msgid "Optimizing the APK size"
msgstr "优化APK大小"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:137
msgid ""
"By default, the APK will contain native libraries for both ARMv7 and ARMv8 "
"architectures. This increases its size significantly. To create a smaller "
"APK, uncheck either **Armeabi-v 7a** or **Arm 64 -v 8a** in your project's "
"Android export preset. This will create an APK that only contains a library "
"for a single architecture. Note that applications targeting ARMv7 can also "
"run on ARMv8 devices, but the opposite is not true."
msgstr ""
"默认情况下,APK将包含适用于ARMv7和ARMv8体系结构的本地库.这会大大增加其大小.要"
"创建较小的APK,请在项目的Android导出预设中取消选中 **Armeabi-v 7a** 或 **Arm "
"64 -v 8a**.这将创建一个仅包含单个架构库的APK.请注意,针对ARMv7的应用程序也可以"
"在ARMv8设备上运行,但事实并非如此."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:144
msgid ""
"Since August 2019, Google Play requires all applications to be available in "
"64-bit form. This means you cannot upload an APK that contains *just* an "
"ARMv7 library. To solve this, you can upload several APKs to Google Play "
"using its `Multiple APK support <https://developer.android.com/google/play/"
"publishing/multiple-apks>`__. Each APK should target a single architecture; "
"creating an APK for ARMv7 and ARMv8 is usually sufficient to cover most "
"devices in use today."
msgstr ""
"自2019年8月起,Google Play要求所有应用程序都必须以64位格式提供.这意味着您不能"
"上传 *仅* 包含ARMv7库的APK.为了解决这个问题,您可以使用其 `多个APK支持 "
"<https://developer.android.com/google/play/publishing/multiple-apks>`__ 将多"
"个APK上传到Google Play.每个APK都应针对单一架构；为ARMv7和ARMv8创建APK通常足以"
"覆盖当今使用的大多数设备."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:151
msgid ""
"You can optimize the size further by compiling an Android export template "
"with only the features you need. See :ref:`doc_optimizing_for_size` for more "
"information."
msgstr ""
"您可以通过仅编译具有所需功能的Android导出模板来进一步优化大小.有关更多信息,请"
"参见 :ref:`doc_optimizing_for_size`."
