# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-08 21:18+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:4
msgid "Project organization"
msgstr "项目组织"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:7
msgid "Introduction"
msgstr "简介"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:9
msgid ""
"This tutorial is aimed to propose a simple workflow on how to organize "
"projects. Since Godot allows the programmer to use the file-system as they "
"please, figuring out a way to organize the projects when starting to use the "
"engine can be a little challenging. Because of this, a simple workflow will "
"be described, which can be used or not, but should work as a starting point."
msgstr ""
"本教程旨在提出一个关于如何组织项目的简单工作流程。 既然Godot允许程序员随心所"
"欲地使用文件系统，在开始使用引擎时想办法组织项目可能会有点困难。 因此，将描述"
"一个简单的工作流程，你来决定使用与否，但应该将其作为一个起点。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:16
msgid ""
"Additionally, using version control can be challenging so this proposition "
"will include that too."
msgstr "另外，使用版本控制可能很具挑战性，所以这个标题也会包含这一点。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:20
msgid "Organization"
msgstr "组织"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:22
msgid ""
"Godot is scene based in nature, and uses the filesystem as-is, without "
"metadata or an asset database."
msgstr "Godot 有非常自然的场景，并使用文件系统，没有元数据或资产数据库。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:25
msgid ""
"Unlike other engines, a lot of resource are contained within the scene "
"itself, so the amount of files in the filesystem is considerably lower."
msgstr ""
"而不像其他的引擎，场景本身包含了大量资源，因此文件系统中的文件数量要低得多。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:28
msgid ""
"Considering that, the most common approach is to group assets close to "
"scenes as, when a project grows, it makes it more maintainable."
msgstr ""
"考虑到这一点，最常见的方法是将资产按照场景分组，当项目增长时，它使其更易于维"
"护。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:31
msgid ""
"As example, base sprite images, 3D model scenes or meshes, materials, etc. "
"can usually be organized in a place, while a separate folder is used to "
"store built levels that use them."
msgstr ""
"例如，基本的精灵图像，3D 模型场景或网格，材质等通常可以组织到一起，而使用单独"
"的文件夹来存储使用它们构建的关卡。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:52
msgid "Importing"
msgstr "导入"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:54
#, fuzzy
msgid ""
"Godot version previous to 3.0 did the import process from files outside the "
"project. While this can be useful in large projects, it resulted in an "
"organization hassle for most developers."
msgstr ""
"3.0版之前的 Godot 版本从项目外的文件中进行导入过程。 虽然这对于大型项目非常有"
"用，但却导致了大多数开发人员的组织问题。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:58
msgid ""
"Because of this, assets are now imported from within the project folder "
"transparently."
msgstr "因此，资产现在可以透明地从项目文件夹中导入。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:61
msgid ""
"If a folder shouldn't be imported into Godot an exception can be made with "
"a .gdignore file."
msgstr ""
"如果一个文件夹不应该导入Godot，那么可以使用 .gdignore 文件进行异常处理。"
