# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-17 12:01+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:4
msgid "API differences to GDScript"
msgstr "与GDScript的API差异"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:6
msgid "This is a (incomplete) list of API differences between C# and GDScript."
msgstr "这是C#和GDScript之间API差异的（不完整）列表。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:9
msgid "General differences"
msgstr "一般差异"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:11
msgid ""
"As explained in the :ref:`doc_c_sharp`, C# generally uses ``PascalCase`` "
"instead of the ``snake_case`` used in GDScript and C++."
msgstr ""
"如 :ref:`doc_c_sharp` 中所述，C#通常使用 ``PascalCase`` 而不是GDScript和C++中"
"使用的 ``snake_case``。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:15
msgid "Global scope"
msgstr "全局作用域"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:17
msgid ""
"Global functions and some constants had to be moved to classes, since C# "
"does not allow declaring them in namespaces. Most global constants were "
"moved to their own enums."
msgstr ""
"全局函数和某些常量必须移动到类中，因为C#不允许在命名空间中声明它们。大多数全"
"局常量都被移动到它们自己的枚举中。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:22
msgid "Constants"
msgstr "常量"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:24
msgid ""
"Global constants were moved to their own enums. For example, ``ERR_*`` "
"constants were moved to the ``Error`` enum."
msgstr ""
"全局常量被移动到它们自己的枚举中。例如，``ERR_*`` 常量被移动到 ``Error`` 枚举"
"中。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:27
msgid "Special cases:"
msgstr "特殊情况："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:30
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:59
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:199
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:214
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:226
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:237
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:245
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:260
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:272
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:332
msgid "GDScript"
msgstr "GDScript"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:30
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:59
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:199
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:214
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:226
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:237
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:245
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:260
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:272
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:332
msgid "C#"
msgstr "C#"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:32
msgid "``SPKEY``"
msgstr "``SPKEY``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:32
msgid "``GD.SpKey``"
msgstr "``GD.SpKey``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:33
msgid "``TYPE_*``"
msgstr "``TYPE_*``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:33
msgid "``Variant.Type`` enum"
msgstr "``Variant.Type`` 枚举"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:34
msgid "``OP_*``"
msgstr "``OP_*``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:34
msgid "``Variant.Operator`` enum"
msgstr "``Variant.Operator`` 枚举"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:38
msgid "Math functions"
msgstr "数学函数"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:40
msgid ""
"Math global functions, like ``abs``, ``acos``, ``asin``, ``atan`` and "
"``atan2``, are located under ``Mathf`` as ``Abs``, ``Acos``, ``Asin``, "
"``Atan`` and ``Atan2``. The ``PI`` constant can be found as ``Mathf.Pi``."
msgstr ""
"如 ``abs``、 ``acos`` 、 ``asin`` 、``atan`` 和 ``atan2`` 这样的全局数学函数"
"位于 ``Mathf`` 下，名为 ``Abs`` 、``Acos``、 ``Asin`` 、``Atan`` 和 "
"``Atan2``。常数 ``PI`` 可以通过 ``Mathf.Pi`` 获得。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:45
msgid "Random functions"
msgstr "随机函数"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:47
msgid ""
"Random global functions, like ``rand_range`` and ``rand_seed``, are located "
"under ``GD``. Example: ``GD.RandRange`` and ``GD.RandSeed``."
msgstr ""
"如 ``rand_range`` 和 ``rand_seed`` 等全局随机函数位于 ``GD`` 下。例如 ``GD."
"RandRange`` 以及 ``GD.RandSeed``。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:51
msgid "Other functions"
msgstr "其他函数"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:53
msgid ""
"Many other global functions like ``print`` and ``var2str`` are located under "
"``GD``. Example: ``GD.Print`` and ``GD.Var2Str``."
msgstr ""
"许多其他的全局函数，如 ``print`` 和 ``var2str`` 位于C#中的 ``GD`` 下。例如："
"``GD.Print`` 和 ``GD.Var2Str``。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:56
msgid "Exceptions:"
msgstr "例外情况："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:61
msgid "``weakref(obj)``"
msgstr "``weakref(obj)``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:61
msgid "``Object.WeakRef(obj)``"
msgstr "``Object.WeakRef(obj)``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:62
msgid "``is_instance_valid(obj)``"
msgstr "``is_instance_valid(obj)``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:62
msgid "``Object.IsInstanceValid(obj)``"
msgstr "``Object.IsInstanceValid(obj)``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:66
msgid "Tips"
msgstr "提示"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:68
msgid ""
"Sometimes it can be useful to use the ``using static`` directive. This "
"directive allows to access the members and nested types of a class without "
"specifying the class name."
msgstr ""
"有时候，使用 ``using static`` 指令是很有用的。该指令允许在不指定类名的情况"
"下，访问类的成员和嵌套类型。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:71
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:92
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:132
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:143
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:155
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:316
msgid "Example:"
msgstr "示例："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:86
msgid "Export keyword"
msgstr "导出关键字"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:88
msgid ""
"Use the ``[Export]`` attribute instead of the GDScript ``export`` keyword. "
"This attribute can also be provided with optional :ref:"
"`PropertyHint<enum_@GlobalScope_PropertyHint>` and ``hintString`` "
"parameters. Default values can be set by assigning a value."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:114
msgid "Signal keyword"
msgstr "信号关键字"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:116
msgid ""
"Use the ``[Signal]`` attribute to declare a signal instead of the GDScript "
"``signal`` keyword. This attribute should be used on a `delegate`, whose "
"name signature will be used to define the signal."
msgstr ""
"使用 ``[Signal]`` 属性代替GDScript中的 ``signal`` 关键字。该属性应该用在 "
"``delegate`` 上，其名称签名将用于定义信号。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:124
msgid "See also: :ref:`c_sharp_signals`"
msgstr "另见： :ref:`c_sharp_signals`"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:127
msgid "Singletons"
msgstr "单例"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:129
msgid ""
"Singletons are available as static classes rather than using the singleton "
"pattern. This is to make code less verbose than it would be with an "
"``Instance`` property."
msgstr ""
"单例可以作为静态类使用，而不是使用单例模式。这是为了使代码不像使用 "
"``Instance`` 属性那样冗长。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:138
msgid ""
"However, in some very rare cases this is not enough. For example, you may "
"want to access a member from the base class ``Godot.Object``, like "
"``Connect``. For such use cases we provide a static property named "
"``Singleton`` that returns the singleton instance. The type of this instance "
"is ``Godot.Object``."
msgstr ""
"但是，在极少数情况下，这还不够。例如，您可能希望访问基类 ``Godot.Object`` 中"
"的成员，比如 ``Connect``。对于此类情况，我们提供了一个名为 ``Singleton`` 的静"
"态属性，该属性返回单例实例。这个实例的类型是 ``Godot.Object``。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:150
msgid "String"
msgstr "字符串"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:152
msgid ""
"Use ``System.String`` (``string``). Most of Godot's String methods are "
"provided by the ``StringExtensions`` class as extension methods."
msgstr ""
"使用 ``System.String`` （ ``string`` ）。所有Godot String方法都由 "
"``StringExtensions`` 类作为扩展方法提供。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:162
msgid "There are a few differences, though:"
msgstr "但是有一些区别："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:164
msgid ""
"``erase``: Strings are immutable in C#, so we cannot modify the string "
"passed to the extension method. For this reason, ``Erase`` was added as an "
"extension method of ``StringBuilder`` instead of string. Alternatively, you "
"can use ``string.Remove``."
msgstr ""
"``erase``：字符串在C#中是不可变的，因此我们无法修改传递给扩展方法的字符串。出"
"于这个原因， ``Erase`` 被添加为 ``StringBuilder`` 的扩展方法而不是字符串。或"
"者您可以使用 ``string.Remove`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:168
msgid ""
"``IsSubsequenceOf``/``IsSubsequenceOfi``: An additional method is provided, "
"which is an overload of ``IsSubsequenceOf``, allowing you to explicitly "
"specify case sensitivity:"
msgstr ""
"``IsSubsequenceOf`` / ``IsSubsequenceOfi`` ：提供了另一种方法，它是 "
"``IsSubsequenceOf`` 的重载，允许明确指定区分大小写："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:179
msgid ""
"``Match``/``Matchn``/``ExprMatch``: An additional method is provided besides "
"``Match`` and ``Matchn``, which allows you to explicitly specify case "
"sensitivity:"
msgstr ""
"``Match`` / ``Matchn`` / ``ExprMatch`` ：除了 ``Match`` 和 ``Matchn`` 之外还"
"提供了另一种方法，它允许明确指定区分大小写："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:190
msgid "Basis"
msgstr "``Basis``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:192
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Basis()`` initializes all primitive members to their default value. Use "
"``Basis.Identity`` for the equivalent of ``Basis()`` in GDScript and C++."
msgstr ""
"结构在C#中不能有无参数构造函数。因此 ``new Basis()`` 将所有原始成员初始化为其"
"默认值。使用 ``Basis.Identity``，相当于GDScript和C++中的 ``Basis()`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:196
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:242
msgid "The following method was converted to a property with a different name:"
msgstr "以下方法已转换为具有不同名称的属性："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:201
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:217
msgid "``get_scale()``"
msgstr "``get_scale()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:201
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:217
msgid "``Scale``"
msgstr "``Scale``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:205
msgid "Transform2D"
msgstr "``Transform2D``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:207
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Transform2D()`` initializes all primitive members to their default value. "
"Please use ``Transform2D.Identity`` for the equivalent of ``Transform2D()`` "
"in GDScript and C++."
msgstr ""
"结构在C#中不能有无参数构造函数，因此 ``new Transform2D()`` 将所有原始成员初始"
"化为其默认值。请使用 ``Transform2D.Identity``，相当于GDScript和C++中的 "
"``Transform2D()`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:211
msgid ""
"The following methods were converted to properties with their respective "
"names changed:"
msgstr "下列方法已转换为属性，其各自名称已被更改："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:216
msgid "``get_rotation()``"
msgstr "``get_rotation()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:216
msgid "``Rotation``"
msgstr "``Rotation``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:221
msgid "Plane"
msgstr "``Plane``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:223
msgid ""
"The following method was converted to a property with a *slightly* different "
"name:"
msgstr "以下方法已转换为名称 *稍有* 不同的属性："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:228
msgid "``center()``"
msgstr "``center()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:228
msgid "``Center``"
msgstr "``Center``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:232
msgid "Rect2"
msgstr "``Rect2``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:234
msgid ""
"The following field was converted to a property with a *slightly* different "
"name:"
msgstr "以下字段已转换为名称 *稍有* 不同的属性："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:239
msgid "``end``"
msgstr "``end``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:239
msgid "``End``"
msgstr "``End``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:247
msgid "``get_area()``"
msgstr "``get_area()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:247
msgid "``Area``"
msgstr "``Area``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:251
msgid "Quat"
msgstr "``Quat``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:253
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Quat()`` initializes all primitive members to their default value. Please "
"use ``Quat.Identity`` for the equivalent of ``Quat()`` in GDScript and C++."
msgstr ""
"结构在C#中不能有无参数构造函数。因此 ``new Quat()`` 将所有原始成员初始化为其"
"默认值。请使用 ``Quat.Identity``，相当于GDScript和C++中的 ``Quat()`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:257
msgid ""
"The following methods were converted to a property with a different name:"
msgstr "以下方法已转换为具有不同名称的属性："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:262
msgid "``length()``"
msgstr "``length()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:262
msgid "``Length``"
msgstr "``Length``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:263
msgid "``length_squared()``"
msgstr "``length_squared()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:263
msgid "``LengthSquared``"
msgstr "``LengthSquared``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:267
msgid "Array"
msgstr "数组"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:269
msgid ""
"*This is temporary. PoolArrays will need their own types to be used the way "
"they are meant to.*"
msgstr "*这是暂时的。PoolArrays将需要使用它们自己的类型才能按预期的方式使用。*"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:274
msgid "``Array``"
msgstr "``Array``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:274
msgid "``Godot.Collections.Array``"
msgstr "``Godot.Collections.Array``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:275
msgid "``PoolIntArray``"
msgstr "``PoolIntArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:275
msgid "``int[]``"
msgstr "``int[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:276
msgid "``PoolByteArray``"
msgstr "``PoolByteArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:276
msgid "``byte[]``"
msgstr "``byte[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:277
msgid "``PoolFloatArray``"
msgstr "``PoolFloatArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:277
msgid "``float[]``"
msgstr "``float[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:278
msgid "``PoolStringArray``"
msgstr "``PoolStringArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:278
msgid "``String[]``"
msgstr "``String[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:279
msgid "``PoolColorArray``"
msgstr "``PoolColorArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:279
msgid "``Color[]``"
msgstr "``Color[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:280
msgid "``PoolVector2Array``"
msgstr "``PoolVector2Array``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:280
msgid "``Vector2[]``"
msgstr "``Vector2[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:281
msgid "``PoolVector3Array``"
msgstr "``PoolVector3Array``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:281
msgid "``Vector3[]``"
msgstr "``Vector3[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:284
msgid ""
"``Godot.Collections.Array<T>`` is a type-safe wrapper around ``Godot."
"Collections.Array``. Use the ``Godot.Collections.Array<T>(Godot.Collections."
"Array)`` constructor to create one."
msgstr ""
"``Godot.Collections.Array<T>`` 是 ``Godot.Collections.Array`` 的类型安全包装"
"器。可使用 ``Godot.Collections.Array<T>(Godot.Collections.Array)`` 构造器创建"
"一个。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:288
msgid "Dictionary"
msgstr "字典"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:290
msgid "Use ``Godot.Collections.Dictionary``."
msgstr "使用 ``Godot.Collections.Dictionary``。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:292
msgid ""
"``Godot.Collections.Dictionary<T>`` is a type-safe wrapper around ``Godot."
"Collections.Dictionary``. Use the ``Godot.Collections.Dictionary<T>(Godot."
"Collections.Dictionary)`` constructor to create one."
msgstr ""
"``Godot.Collections.Dictionary<T>`` 是 ``Godot.Collections.Dictionary`` 的类"
"型安全包装器。可使用 ``Godot.Collections.Dictionary<T>(Godot.Collections."
"Dictionary)`` 构造器创建一个。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:296
msgid "Variant"
msgstr "``Variant``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:298
msgid "``System.Object`` (``object``) is used instead of ``Variant``."
msgstr "``System.Object`` （ ``object`` ）用来代替 ``Variant`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:301
msgid "Communicating with other scripting languages"
msgstr "与其他脚本语言通信"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:303
msgid ""
"The methods ``object Object.Call(string method, params object[] args)``, "
"``object Object.Get(string field)`` and ``object Object.Set(string field, "
"object value)`` are provided to communicate with instances of other "
"scripting languages via the Variant API."
msgstr ""
"方法 ``object Object.Call(string method, params object[] args)``、 ``object "
"Object.Get(string field)`` 和 ``object Object.Set(string field, object "
"value)`` 被提供来通过Variant API与其他脚本语言的实例进行通信。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:309
msgid "Yield"
msgstr "避让（``Yield``）"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:311
msgid ""
"Something similar to GDScript's ``yield`` with a single parameter can be "
"achieved with C#'s `yield keyword <https://docs.microsoft.com/en-US/dotnet/"
"csharp/language-reference/keywords/yield>`_."
msgstr ""
"可以使用C#的 `yield 关键字 <https://docs.microsoft.com/en-US/dotnet/csharp/"
"language-reference/keywords/yield>`_ 来实现类似于GDScript的带有单个参数的 "
"``yield`` 的功能。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:314
msgid ""
"The equivalent of yield on signal can be achieved with async/await and "
"``Godot.Object.ToSignal``."
msgstr ""
"通过 ``async/await`` 和 ``Godot.Object.ToSignal`` 可以实现 ``yield`` 对信号的"
"相同效果。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:324
msgid "Other differences"
msgstr "其他差异"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:326
msgid ""
"``preload``, as it works in GDScript, is not available in C#. Use ``GD."
"Load`` or ``ResourceLoader.Load`` instead."
msgstr ""
"``preload`` 在GDScript中可用，在C#中不可用。请使用 ``GD.Load`` 或 "
"``ResourceLoader.Load`` 替代。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:329
msgid "Other differences:"
msgstr "其他差异："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:334
msgid "``Color8``"
msgstr "``Color8``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:334
msgid "``Color.Color8``"
msgstr "``Color.Color8``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:335
msgid "``is_inf``"
msgstr "``is_inf``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:335
msgid "``float.IsInfinity``"
msgstr "``float.IsInfinity``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:336
msgid "``is_nan``"
msgstr "``is_nan``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:336
msgid "``float.IsNaN``"
msgstr "``float.IsNaN``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:337
msgid "``dict2inst``"
msgstr "``dict2inst``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:337
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:338
msgid "TODO"
msgstr "待完成"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:338
msgid "``inst2dict``"
msgstr "``inst2dict``"
