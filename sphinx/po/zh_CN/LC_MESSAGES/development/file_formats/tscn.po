# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-19 11:09+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/file_formats/tscn.rst:4
msgid "TSCN file format"
msgstr "TSCN 文件格式"

#: ../../docs/development/file_formats/tscn.rst:6
#, fuzzy
msgid ""
"The TSCN (text scene) file format represents a single scene tree inside "
"Godot. Unlike binary SCN files, TSCN files have the advantage of being "
"mostly human-readable and easy for version control systems to manage."
msgstr ""
"TSCN（文本场景）文件格式表示 Godot 内部的单个场景树，其优点是易于人类阅读，并"
"且便于使用版本控制系统进行管理。导入时，TSCN 文件会被编译为二进制的 ``.scn`` "
"文件，存储在 .import 文件夹中。这样的做法可以减小数据大小并且提高加载速度。"

#: ../../docs/development/file_formats/tscn.rst:10
#, fuzzy
msgid ""
"The ESCN (exported scene) file format is identical to the TSCN file format, "
"but is used to indicate to Godot that the file has been exported from "
"another program and should not be edited by the user from within Godot. "
"Unlike SCN and TSCN files, during import, ESCN files are compiled to binary "
"SCN files stored inside the ``.import/`` folder. This reduces the data size "
"and speeds up loading, as binary formats are faster to load compared to text-"
"based formats."
msgstr ""
"ESCN（导出场景）文件格式与 TSCN 文件格式相同，但是用于向 Godot 表明该文件是从"
"另一个程序导出的，不应由用户在 Godot 内部进行编辑。"

#: ../../docs/development/file_formats/tscn.rst:18
msgid ""
"For those looking for a complete description, the parsing is handled in the "
"file `resource_format_text.cpp <https://github.com/godotengine/godot/blob/"
"master/scene/resources/resource_format_text.cpp>`_ in the "
"``ResourceFormatLoaderText`` class."
msgstr ""
"如果想要完整的描述，对这些文件格式的解析是在 `resource_format_text.cpp "
"<https://github.com/godotengine/godot/blob/master/scene/resources/"
"resource_format_text.cpp>`_ 的 ``ResourceFormatLoaderText`` 类中进行处理的。"

#: ../../docs/development/file_formats/tscn.rst:23
msgid "File structure"
msgstr "文件结构"

#: ../../docs/development/file_formats/tscn.rst:25
msgid "There are five main sections inside the TSCN file:"
msgstr "TSCN 文件分为五个主要部分："

#: ../../docs/development/file_formats/tscn.rst:27
msgid "File Descriptor"
msgstr "文件描述符"

#: ../../docs/development/file_formats/tscn.rst:28
#: ../../docs/development/file_formats/tscn.rst:279
msgid "External resources"
msgstr "外部资源"

#: ../../docs/development/file_formats/tscn.rst:29
#: ../../docs/development/file_formats/tscn.rst:301
msgid "Internal resources"
msgstr "内部资源"

#: ../../docs/development/file_formats/tscn.rst:30
msgid "Nodes"
msgstr "节点"

#: ../../docs/development/file_formats/tscn.rst:31
msgid "Connections"
msgstr "连接"

#: ../../docs/development/file_formats/tscn.rst:33
msgid ""
"The file descriptor looks like ``[gd_scene load_steps=3 format=2]`` and "
"should be the first entry in the file. The ``load_steps`` parameter is equal "
"to the total amount of resources (internal and external) plus one (for the "
"file itself). If the file has no resources, ``load_steps`` is omitted. The "
"engine will still load the file correctly if ``load_steps`` is incorrect, "
"but this will affect loading bars and any other piece of code relying on "
"that value."
msgstr ""
"类似 ``[gd_scene load_steps=3 format=2]`` 的就是文件描述符，应该是文件的第一"
"条记录。这里的 ``load_steps`` 参数等于资源总数（包括内部和外部）加一（文件本"
"身）。文件中不包含资源时 ``load_steps`` 会被省略。即便 ``load_steps`` 不正"
"确，引擎仍然能够正确加载文件，但是加载进度条和其它一些使用该值的代码会受影"
"响。"

#: ../../docs/development/file_formats/tscn.rst:40
msgid ""
"These sections should appear in order, but it can be hard to distinguish "
"them. The only difference between them is the first element in the heading "
"for all of the items in the section. For example, the heading of all "
"external resources should start with ``[ext_resource .....]``."
msgstr ""
"这些部分应按顺序显示, 但是可能很难区分它们. 它们之间的唯一区别是该部分中所有"
"项目的标题中的第一个元素. 例如, 所有外部资源的标题都应以 "
"``[ext_resource .....]`` 开头."

#: ../../docs/development/file_formats/tscn.rst:45
msgid ""
"A TSCN file may contain single-line comments starting with a semicolon (``;"
"``). However, comments will be discarded when saving the file using the "
"Godot editor."
msgstr ""
"TSCN文件可能包含以分号(``;``)开头的单行注释. 但是, 使用Godot编辑器保存文件"
"时, 注释将被丢弃."

#: ../../docs/development/file_formats/tscn.rst:49
msgid "Entries inside the file"
msgstr "文件中的条目"

#: ../../docs/development/file_formats/tscn.rst:51
msgid ""
"A heading looks like ``[<resource_type> key=value key=value key=value ...]`` "
"where resource_type is one of:"
msgstr ""
"标题看起来像 ``[<resource_type> key=value key=value key=value ...]`` , 其中 "
"``resource_type`` 是以下之一:"

#: ../../docs/development/file_formats/tscn.rst:55
msgid "``ext_resource``"
msgstr "``ext_resource``"

#: ../../docs/development/file_formats/tscn.rst:56
msgid "``sub_resource``"
msgstr "``sub_resource``"

#: ../../docs/development/file_formats/tscn.rst:57
msgid "``node``"
msgstr "``node``"

#: ../../docs/development/file_formats/tscn.rst:58
msgid "``connection``"
msgstr "``connection``"

#: ../../docs/development/file_formats/tscn.rst:60
msgid ""
"Below every heading comes zero or more ``key = value`` pairs. The values can "
"be complex datatypes such as Arrays, Transforms, Colors, and so on. For "
"example, a spatial node looks like:"
msgstr ""
"在每个标题下方都有零个或多个 ``key = value`` 对. 值可以是复杂的数据类型, 例如"
"Arrays, Transforms, Colors等. 例如, 一个Spatial节点如下所示:"

#: ../../docs/development/file_formats/tscn.rst:71
msgid "The scene tree"
msgstr "场景树"

#: ../../docs/development/file_formats/tscn.rst:73
msgid ""
"The scene tree is made up of… nodes! The heading of each node consists of "
"its name, parent and (most of the time) a type. For example ``[node type="
"\"Camera\" name=\"PlayerCamera\" parent=\"Player/Head\"]``"
msgstr ""
"场景树由……节点组成！每个节点的标题由其名称, 父级和(大多数情况下)一种类型组"
"成. 例如 ``[node type=\"Camera\" name=\"PlayerCamera\" parent=\"Player/Head"
"\"]``"

#: ../../docs/development/file_formats/tscn.rst:77
msgid "Other valid keywords include:"
msgstr "其他有效的关键字包括:"

#: ../../docs/development/file_formats/tscn.rst:79
msgid "``instance``"
msgstr "``instance``"

#: ../../docs/development/file_formats/tscn.rst:80
msgid "``instance_placeholder``"
msgstr "``instance_placeholder``"

#: ../../docs/development/file_formats/tscn.rst:81
msgid "``owner``"
msgstr "``owner``"

#: ../../docs/development/file_formats/tscn.rst:82
msgid "``index`` (if two nodes have the same name)"
msgstr "``index`` (如果两个节点具有相同的名称)"

#: ../../docs/development/file_formats/tscn.rst:83
msgid "``groups``"
msgstr "``groups``"

#: ../../docs/development/file_formats/tscn.rst:85
msgid ""
"The first node in the file, which is also the scene root, must not have a "
"``parent=Path/To/Node`` entry in its heading. All scene files should have "
"exactly *one* scene root. If it doesn't, Godot will fail to import the file. "
"The parent path of other nodes should be absolute, but shouldn't contain the "
"scene root's name. If the node is a direct child of the scene root, the path "
"should be ``\".\"``. Here is an example scene tree (but without any node "
"content):"
msgstr ""
"文件中的第一个节点(也是场景根)的标题中不得包含 ``parent=Path/To/Node`` 条目. "
"所有场景文件应完全具有 *一个* 场景根. 否则,Godot将无法导入文件. 其他节点的父"
"路径应为绝对路径, 但不应包含场景根名称. 如果节点是场景根的直接子代, 则路径应"
"为 ``\".\"``. 这是一个示例场景树(但没有任何节点内容):"

#: ../../docs/development/file_formats/tscn.rst:101
msgid ""
"Similar to the internal resource, the document for each node is currently "
"incomplete. Fortunately, it is easy to find out because you can simply save "
"a file with that node in it. Some example nodes are:"
msgstr ""
"与内部资源类似, 每个节点的文档当前不完整. 幸运的是, 可以很容易地找到, 因为您"
"可以简单地保存文件并将该节点包含其中. 一些示例节点是:"

#: ../../docs/development/file_formats/tscn.rst:140
msgid "NodePath"
msgstr "节点路径"

#: ../../docs/development/file_formats/tscn.rst:142
msgid ""
"A tree structure is not enough to represent the whole scene. Godot uses a "
"``NodePath(Path/To/Node)`` structure to refer to another node or attribute "
"of the node anywhere in the scene tree. For instance, MeshInstance uses "
"``NodePath()`` to point to its skeleton. Likewise, Animation tracks use "
"``NodePath()`` to point to node properties to animate."
msgstr ""
"树形结构不足以代表整个场景.Godot使用 ``NodePath(Path/To/Node)`` 结构来引用该"
"节点的属性或场景树中任何位置的另一个节点. 例如,MeshInstance使用 "
"``NodePath()`` 指向其骨架. 同样, 动画轨迹使用 ``NodePath()`` 指向要动画的节点"
"属性."

#: ../../docs/development/file_formats/tscn.rst:167
msgid "Skeleton"
msgstr "骨架"

#: ../../docs/development/file_formats/tscn.rst:169
msgid ""
"The Skeleton node inherits the Spatial node, but also may have a list of "
"bones described in key-value pairs in the format ``bones/Id/"
"Attribute=Value``. The bone attributes consist of:"
msgstr ""
"Skeleton节点继承了Spatial节点, 但也可能具有以 ``bones/Id/Attribute=Value`` 格"
"式在键值对中描述的骨骼列表. 骨骼属性包括:"

#: ../../docs/development/file_formats/tscn.rst:173
msgid "``name``"
msgstr "``name``"

#: ../../docs/development/file_formats/tscn.rst:174
msgid "``parent``"
msgstr "``parent``"

#: ../../docs/development/file_formats/tscn.rst:175
msgid "``rest``"
msgstr "``rest``"

#: ../../docs/development/file_formats/tscn.rst:176
msgid "``pose``"
msgstr "``pose``"

#: ../../docs/development/file_formats/tscn.rst:177
#: ../../docs/development/file_formats/tscn.rst:397
msgid "``enabled``"
msgstr "``enabled``"

#: ../../docs/development/file_formats/tscn.rst:178
msgid "``bound_children``"
msgstr "``bound_children``"

#: ../../docs/development/file_formats/tscn.rst:180
msgid "``name`` must be the first attribute of each bone."
msgstr "``name`` 必须是每个骨骼的第一个属性."

#: ../../docs/development/file_formats/tscn.rst:181
msgid ""
"``parent`` is the index of parent bone in the bone list, with parent index, "
"the bone list is built to a bone tree."
msgstr ""
"``parent`` 是骨骼列表中父骨骼的索引, 使用父索引, 骨骼列表将构建到骨骼树中."

#: ../../docs/development/file_formats/tscn.rst:183
msgid "``rest`` is the transform matrix of bone in its \"resting\" position."
msgstr "``rest`` 是处于其 \"静止(resting)\" 位置的骨骼的变换矩阵."

#: ../../docs/development/file_formats/tscn.rst:184
msgid "``pose`` is the pose matrix; use ``rest`` as the basis."
msgstr "``pose`` 是姿势矩阵；以 ``rest`` 为基础."

#: ../../docs/development/file_formats/tscn.rst:185
msgid ""
"``bound_children`` is a list of ``NodePath()`` which point to "
"BoneAttachments belonging to this bone."
msgstr ""
"``bound_children`` 是 ``NodePath()`` 的列表, 该列表指向该骨骼的"
"BoneAttachments."

#: ../../docs/development/file_formats/tscn.rst:188
msgid "Here's an example of a skeleton node with two bones:"
msgstr "具有两个骨骼的骨架节点的示例:"

#: ../../docs/development/file_formats/tscn.rst:209
msgid "BoneAttachment"
msgstr "BoneAttachment"

#: ../../docs/development/file_formats/tscn.rst:211
msgid ""
"BoneAttachment node is an intermediate node to describe some node being "
"parented to a single bone in a Skeleton node. The BoneAttachment has a "
"``bone_name=NameOfBone`` attribute, and the corresponding bone being the "
"parent has the BoneAttachment node in its ``bound_children`` list."
msgstr ""
"BoneAttachment节点是一个中间节点, 用于描述在Skeleton节点中以单个骨骼为父节点"
"的某些节点.BoneAttachment具有 ``bone_name=NameOfBone`` 属性, 并且作为父级的相"
"应骨骼在其 ``bound_children`` 列表中具有BoneAttachment节点."

#: ../../docs/development/file_formats/tscn.rst:216
msgid "An example of one MeshInstance parented to a bone in Skeleton:"
msgstr "在Skeleton中以一个骨骼为父级的一个MeshInstance的示例:"

#: ../../docs/development/file_formats/tscn.rst:241
msgid "AnimationPlayer"
msgstr "AnimationPlayer"

#: ../../docs/development/file_formats/tscn.rst:243
msgid ""
"AnimationPlayer works as an animation library. It stores animations listed "
"in the format ``anim/Name=SubResource(ResourceId)``; each line refers to an "
"Animation resource. All the animation resources use the root node of "
"AnimationPlayer. The root node is stored as ``root_node=NodePath(Path/To/"
"Node)``."
msgstr ""
"AnimationPlayer用作动画库. 它以 ``anim/Name=SubResource(ResourceId)`` 格式存"
"储动画；每行都引用一个Animation资源. 所有动画资源都使用AnimationPlayer的根节"
"点. 根节点存储为 ``root_node=NodePath(Path/To/Node)``."

#: ../../docs/development/file_formats/tscn.rst:263
msgid "Resources"
msgstr "资源"

#: ../../docs/development/file_formats/tscn.rst:265
msgid ""
"Resources are components that make up the nodes. For example, a MeshInstance "
"node will have an accompanying ArrayMesh resource. The ArrayMesh resource "
"may be either internal or external to the TSCN file."
msgstr ""
"资源是组成节点的组件. 例如,MeshInstance节点将具有附带的ArrayMesh资源. "
"ArrayMesh资源可以是TSCN文件的内部或外部资源."

#: ../../docs/development/file_formats/tscn.rst:269
msgid ""
"References to the resources are handled by ``id`` numbers in the resource's "
"heading. External resources and internal resources are referred to with "
"``ExtResource(id)`` and ``SubResource(id)``, respectively. Because there "
"have different methods to refer to internal and external resources, you can "
"have the same ID for both an internal and external resource."
msgstr ""
"对资源的引用由资源标题中的 ``id`` 数字处理. 外部资源和内部资源分别以 "
"``ExtResource(id)`` 和 ``SubResource(id)`` 引用. 因为引用内部和外部资源的方法"
"不同, 所以内部和外部资源的ID可以相同."

#: ../../docs/development/file_formats/tscn.rst:275
msgid ""
"For example, to refer to the resource ``[ext_resource id=3 type=\"PackedScene"
"\" path=....]``, you would use ``ExtResource(3)``."
msgstr ""
"例如, 要引用资源 ``[ext_resource id=3 type=\"PackedScene\" path=....]``, 则应"
"使用 ``ExtResource(3)``."

#: ../../docs/development/file_formats/tscn.rst:281
msgid ""
"External resources are links to resources not contained within the TSCN file "
"itself. An external resource consists of a path, a type and an ID."
msgstr ""
"外部资源是指向TSCN文件本身未包含的资源的链接. 外部资源由路径, 类型和ID组成."

#: ../../docs/development/file_formats/tscn.rst:284
msgid ""
"Godot always generates absolute paths relative to the resource directory and "
"thus prefixed with ``res://``, but paths relative to the TSCN file's "
"location are also valid."
msgstr ""
"Godot总是生成相对于资源目录的绝对路径, 因此以 ``res://`` 为前缀, 但是相对于"
"TSCN文件位置的路径也有效."

#: ../../docs/development/file_formats/tscn.rst:288
msgid "Some example external resources are:"
msgstr "一些示例外部资源是:"

#: ../../docs/development/file_formats/tscn.rst:296
msgid ""
"Like TSCN files, a TRES file may contain single-line comments starting with "
"a semicolon (``;``). However, comments will be discarded when saving the "
"resource using the Godot editor."
msgstr ""
"像TSCN文件一样,TRES文件可能包含以分号(``;``)开头的单行注释. 但是, 使用Godot编"
"辑器保存资源时, 注释将被丢弃."

#: ../../docs/development/file_formats/tscn.rst:303
msgid ""
"A TSCN file can contain meshes, materials and other data. These are "
"contained in the *internal resources* section of the file. The heading for "
"an internal resource looks similar to those of external resources, except "
"that it doesn't have a path. Internal resources also have ``key=value`` "
"pairs under each heading. For example, a capsule collision shape looks like:"
msgstr ""
"TSCN文件可以包含网格, 材质和其他数据. 这些包含在文件的 *内部资源* 部分中. 内"
"部资源的标题与外部资源的标题相似, 不同之处在于它没有路径. 内部资源在每个标题"
"下还具有 ``键=值`` 对. 例如, 胶囊碰撞形状如下所示:"

#: ../../docs/development/file_formats/tscn.rst:317
msgid ""
"Some internal resources contain links to other internal resources (such as a "
"mesh having a material). In this case, the referring resource must appear "
"*before* the reference to it. This means that order matters in the file's "
"internal resources section."
msgstr ""
"一些内部资源包含到其他内部资源的链接(例如具有材质的网格). 在这种情况下, 引用"
"的资源必须在对其的引用 *之前* 出现. 这意味着顺序在文件的内部资源部分中很重要."

#: ../../docs/development/file_formats/tscn.rst:322
msgid ""
"Unfortunately, documentation on the formats for these subresources isn't "
"complete. Some examples can be found by inspecting saved resource files, but "
"others can only be found by looking through Godot's source."
msgstr ""
"遗憾的是, 关于这些子资源的格式的文档并不完整, 通过检查已保存的资源文件可以找"
"到一些示例, 但是只有通过查看Godot的源码才能找到其他示例."

#: ../../docs/development/file_formats/tscn.rst:327
msgid "ArrayMesh"
msgstr "ArrayMesh"

#: ../../docs/development/file_formats/tscn.rst:329
msgid ""
"ArrayMesh consists of several surfaces, each in the format ``surface"
"\\Index={}``. Each surface is a set of vertices and a material."
msgstr ""
"ArrayMesh由多个表面组成, 每个表面的格式为 ``surface\\Index={}``. 每个表面都是"
"一组顶点和一种材质."

#: ../../docs/development/file_formats/tscn.rst:332
msgid "TSCN files support two surface formats:"
msgstr "TSCN文件支持两种表面格式:"

#: ../../docs/development/file_formats/tscn.rst:334
msgid "For the old format, each surface has three essential keys:"
msgstr "对于旧格式, 每个表面都有三个基本键:"

#: ../../docs/development/file_formats/tscn.rst:336
msgid "``primitive``"
msgstr "``primitive``"

#: ../../docs/development/file_formats/tscn.rst:337
msgid "``arrays``"
msgstr "``arrays``"

#: ../../docs/development/file_formats/tscn.rst:338
msgid "``morph_arrays``"
msgstr "``morph_arrays``"

#: ../../docs/development/file_formats/tscn.rst:340
msgid ""
"``primitive`` is an enumerate variable, ``primitive=4`` which is "
"``PRIMITIVE_TRIANGLES`` is frequently used."
msgstr ""
"``primitive`` 是一个枚举变量, ``primitive=4`` 是被频繁使用的 "
"``PRIMITIVE_TRIANGLES``."

#: ../../docs/development/file_formats/tscn.rst:343
msgid "``arrays`` is a two-dimensional array, it contains:"
msgstr "``arrays`` 是一个二维数组, 它包含:"

#: ../../docs/development/file_formats/tscn.rst:345
msgid "Vertex positions array"
msgstr "顶点位置数组"

#: ../../docs/development/file_formats/tscn.rst:346
msgid "Tangents array"
msgstr "切线数组"

#: ../../docs/development/file_formats/tscn.rst:347
msgid "Vertex colors array"
msgstr "顶点颜色数组"

#: ../../docs/development/file_formats/tscn.rst:348
msgid "UV array 1"
msgstr "UV数组1"

#: ../../docs/development/file_formats/tscn.rst:349
msgid "UV array 2"
msgstr "UV数组2"

#: ../../docs/development/file_formats/tscn.rst:350
msgid "Bone indexes array"
msgstr "骨骼索引数组"

#: ../../docs/development/file_formats/tscn.rst:351
msgid "Bone weights array"
msgstr "骨骼权重数组"

#: ../../docs/development/file_formats/tscn.rst:352
msgid "Vertex indexes array"
msgstr "顶点索引数组"

#: ../../docs/development/file_formats/tscn.rst:354
msgid ""
"``morph_arrays`` is an array of morphs. Each morph is exactly an ``arrays`` "
"without the vertex indexes array."
msgstr ""
"``morph_arrays`` 是一个morph数组. 每个morph恰好一个没有顶点索引数组的 "
"``arrays``."

#: ../../docs/development/file_formats/tscn.rst:357
msgid "An example of ArrayMesh:"
msgstr "ArrayMesh的一个示例:"

#: ../../docs/development/file_formats/tscn.rst:381
msgid "Animation"
msgstr "动画"

#: ../../docs/development/file_formats/tscn.rst:383
msgid ""
"An animation resource consists of tracks. Besides, it has ``length``, "
"``loop`` and ``step`` applied to all the tracks."
msgstr ""
"动画资源由轨道组成. 此外, 它还有 ``length``, ``loop`` 和 ``step`` 应用于所有"
"轨道."

#: ../../docs/development/file_formats/tscn.rst:386
msgid "``length`` and ``step`` are both durations in seconds."
msgstr "``length`` 和 ``step`` 都是以秒为单位的持续时间."

#: ../../docs/development/file_formats/tscn.rst:388
msgid ""
"Each track is described by a list of key-value pairs in the format ``tracks/"
"Id/Attribute``. Each track includes:"
msgstr ""
"每个轨道由格式为 ``tracks/Id/Attribute`` 的键值对列表描述. 每个轨道包括:"

#: ../../docs/development/file_formats/tscn.rst:391
msgid "``type``"
msgstr "``type``"

#: ../../docs/development/file_formats/tscn.rst:392
msgid "``path``"
msgstr "``path``"

#: ../../docs/development/file_formats/tscn.rst:393
msgid "``interp``"
msgstr "``interp``"

#: ../../docs/development/file_formats/tscn.rst:394
msgid "``keys``"
msgstr "``keys``"

#: ../../docs/development/file_formats/tscn.rst:395
msgid "``loop_wrap``"
msgstr "``loop_wrap``"

#: ../../docs/development/file_formats/tscn.rst:396
msgid "``imported``"
msgstr "``imported``"

#: ../../docs/development/file_formats/tscn.rst:399
msgid ""
"The ``type`` must be the first attribute of each track. The value of "
"``type`` can be:"
msgstr "``type`` 必须是每个轨道的第一个属性. ``type`` 的值可以是:"

#: ../../docs/development/file_formats/tscn.rst:402
msgid "``transform``"
msgstr "``transform``"

#: ../../docs/development/file_formats/tscn.rst:403
msgid "``value``"
msgstr "``value``"

#: ../../docs/development/file_formats/tscn.rst:404
msgid "``method``"
msgstr "``method``"

#: ../../docs/development/file_formats/tscn.rst:406
msgid ""
"The ``path`` has the format ``NodePath(Path/To/Node:attribute)``. It's the "
"path to the animated node or attribute, relative to the root node defined in "
"the AnimationPlayer."
msgstr ""
"``path`` 的格式为 ``NodePath(Path/To/Node:attribute)``. 它是动画化节点或属性"
"的路径, 相对于AnimationPlayer中定义的根节点."

#: ../../docs/development/file_formats/tscn.rst:410
msgid ""
"The ``interp`` is the method to interpolate frames from the keyframes. It is "
"an enum variable with one of the following values:"
msgstr "``interp`` 是对关键帧进行插值的方法. 它是一个枚举变量, 有以下值之一:"

#: ../../docs/development/file_formats/tscn.rst:413
msgid "``0`` (constant)"
msgstr "``0`` (常数)"

#: ../../docs/development/file_formats/tscn.rst:414
msgid "``1`` (linear)"
msgstr "``1`` (线性)"

#: ../../docs/development/file_formats/tscn.rst:415
msgid "``2`` (cubic)"
msgstr "``2`` (立方)"

#: ../../docs/development/file_formats/tscn.rst:417
msgid ""
"The ``keys`` correspond to the keyframes. It appears as a "
"``PoolRealArray()``, but may have a different structure for tracks with "
"different types."
msgstr ""
"``keys`` 对应于关键帧. 它显示为 ``PoolRealArray()``, 但对于具有不同类型的轨道"
"可能具有不同的结构."

#: ../../docs/development/file_formats/tscn.rst:420
msgid ""
"A Transform track uses every 12 real numbers in the ``keys`` to describe a "
"keyframe. The first number is the timestamp. The second number is the "
"transition followed by a 3-number translation vector, followed by a 4-number "
"rotation quaternion (X, Y, Z, W) and finally a 3-number scale vector. The "
"default transition in a Transform track is 1.0."
msgstr ""
"变换轨道使用 ``keys`` 中的每12个实数来描述关键帧. 第一个数字是时间戳, 第二个"
"数字是转换, 后跟三数字转换向量, 四数字旋转四元数 (X, Y, Z, W) , 最后是三数字"
"缩放向量. 变换轨道中的默认变换为1.0."
