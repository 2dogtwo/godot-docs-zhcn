# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-04 23:31+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/packaging_godot.rst:4
msgid "Packaging Godot"
msgstr "包装戈多"

#: ../../docs/development/compiling/packaging_godot.rst:6
msgid ""
"Godot has features to make it easier to distribute and to package it for "
"application repositories."
msgstr "Godot具有使其更易于分发和将其打包为应用程序存储库的功能。"

#: ../../docs/development/compiling/packaging_godot.rst:9
msgid "Default behaviour"
msgstr "默认行为"

#: ../../docs/development/compiling/packaging_godot.rst:11
msgid ""
"By default, Godot stores all settings and installed templates in a per-user "
"directory. First Godot checks the ``APPDATA`` environment variable. If it "
"exists, the per-user directory is the ``Godot`` subdirectory of ``APPDATA``. "
"If ``APPDATA`` doesn't exist, Godot checks the ``HOME`` environment "
"variable. The per-user directory is then the \".godot\" subdir of ``HOME``."
msgstr ""
"默认情况下，Godot将所有设置和已安装的模板存储在每个用户目录中。 First Godot检"
"查``APPDATA``环境变量。 如果它存在，则每用户目录是``APPDATA``的``Godot``子目"
"录。 如果``APPDATA``不存在，Godot会检查``HOME``环境变量。 然后，每用户目录是"
"``HOME``的“.godot”子目录。"

#: ../../docs/development/compiling/packaging_godot.rst:17
msgid "This meets common operating system standards."
msgstr "这符合通用操作系统标准。"

#: ../../docs/development/compiling/packaging_godot.rst:20
msgid "Global template path (Unix only)"
msgstr "全局模板路径（仅限Unix）"

#: ../../docs/development/compiling/packaging_godot.rst:22
msgid ""
"The ``unix_global_settings_path`` build variable is meant for Unix/Linux "
"distro packagers who want to package export templates together with godot. "
"It allows to put the export templates on a hardcoded path."
msgstr ""
"``unix_global_settings_path``构建变量适用于想要将导出模板与godot一起打包的"
"Unix / Linux发行版打包程序。 它允许将导出模板放在硬编码路径上。"

#: ../../docs/development/compiling/packaging_godot.rst:26
msgid ""
"To use it, pass the desired path via the scons ``unix_global_settings_path`` "
"build variable when building the editor. The export templates then live at "
"the \"templates\" subdirectory of the path specified."
msgstr ""
"要使用它，在构建编辑器时，通过scons``unix_global_settings_path``构建变量传递"
"所需的路径。 然后，导出模板位于指定路径的“templates”子目录中。"

#: ../../docs/development/compiling/packaging_godot.rst:30
msgid ""
"Templates installed at the per-user location still override the system wide "
"templates."
msgstr "安装在每个用户位置的模板仍会覆盖系统范围的模板。"

#: ../../docs/development/compiling/packaging_godot.rst:32
msgid "This option is only available on unix based platforms."
msgstr "此选项仅适用于基于unix的平台。"

#: ../../docs/development/compiling/packaging_godot.rst:35
msgid "Self contained mode"
msgstr "自包含模式"

#: ../../docs/development/compiling/packaging_godot.rst:37
msgid ""
"The self contained mode can be used to package Godot for distribution "
"systems where it doesn't live at a fixed location. If the editor finds a ``."
"_sc_`` file in the directory the executable is located in, Godot will "
"continue in \"self contained mode\". On Windows, the file name to use is "
"``_sc_`` (without the preceding dot)."
msgstr ""
"自包含模式可用于将Godot打包到不在固定位置的分发系统。 如果编辑器在可执行文件"
"所在的目录中找到``._sc_``文件，Godot将继续处于“自包含模式”。 在Windows上，要"
"使用的文件名是``_sc_``（没有前面的点）。"

#: ../../docs/development/compiling/packaging_godot.rst:42
msgid ""
"In self contained mode, all config files are located next to the executable "
"in a directory called ``editor_data``. Godot doesn't read or write to the "
"per-user location anymore."
msgstr ""
"在自包含模式下，所有配置文件都位于名为``editor_data``的目录中的可执行文件旁"
"边。 Godot不再读取或写入每个用户的位置。"

#: ../../docs/development/compiling/packaging_godot.rst:45
msgid ""
"The contents of the ``._sc_`` file (when not empty) are read with the "
"ConfigFile api (same format as ``project.godot``, etc). So far it can "
"contain a list of pre-loaded project in this format:"
msgstr ""
"使用ConfigFile api（格式为``project.godot``等）读取``._sc_``文件（非空时）的"
"内容。 到目前为止，它可以包含以下格式的预加载项目列表："

#: ../../docs/development/compiling/packaging_godot.rst:54
msgid ""
"The paths are relative to the executable location, and will be added to the "
"file ``editor_settings.xml`` when this is created for the first time."
msgstr ""
"路径相对于可执行位置，并且在第一次创建时将添加到文件``editor_settings.xml``"
"中。"
