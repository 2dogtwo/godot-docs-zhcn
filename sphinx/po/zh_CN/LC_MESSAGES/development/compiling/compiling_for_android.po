# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-05 17:37+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_for_android.rst:4
msgid "Compiling for Android"
msgstr "为Android平台编译"

#: ../../docs/development/compiling/compiling_for_android.rst:9
msgid "Note"
msgstr "注意"

#: ../../docs/development/compiling/compiling_for_android.rst:11
msgid ""
"In most cases, using the built-in deployer and export templates is good "
"enough. Compiling the Android APK manually is mostly useful for custom "
"builds or custom packages for the deployer."
msgstr ""
"对于大多数情况，使用内置部署程序和导出模板就足够了。手动编译Android APK对于部"
"署程序的自定义版本或自定义程序包最有用。"

#: ../../docs/development/compiling/compiling_for_android.rst:15
msgid ""
"Also, you still need to follow the steps mentioned in the :ref:"
"`doc_exporting_for_android` tutorial before attempting to build a custom "
"export template."
msgstr ""
"此外，在尝试构建自定义导出模板之前，您仍然需要按照 :ref:"
"`doc_exporting_for_android` 教程中提到的步骤进行操作。"

#: ../../docs/development/compiling/compiling_for_android.rst:20
msgid "Requirements"
msgstr "需求"

#: ../../docs/development/compiling/compiling_for_android.rst:22
msgid "For compiling under Windows, Linux or macOS, the following is required:"
msgstr "要在Windows、Linux或macOS下进行编译，需要以下内容："

#: ../../docs/development/compiling/compiling_for_android.rst:24
#, fuzzy
msgid "`Python 3.5+ <https://www.python.org/downloads/>`_."
msgstr "`Python 2.7+或Python 3.5+ <https://www.python.org/downloads/>`__。"

#: ../../docs/development/compiling/compiling_for_android.rst:25
#, fuzzy
msgid "`SCons 3.0+ <https://scons.org/pages/download.html>`_ build system."
msgstr "`SCons <https://scons.org/pages/download.html>`_ 构建系统"

#: ../../docs/development/compiling/compiling_for_android.rst:26
#, fuzzy
msgid ""
"`Android SDK <https://developer.android.com/studio/#command-tools>`_ "
"(command-line tools are sufficient)."
msgstr ""
"`Android SDK <https://developer.android.com/studio/#command-tools>`_ （命令行"
"工具就足够了）"

#: ../../docs/development/compiling/compiling_for_android.rst:29
#, fuzzy
msgid ""
"Required SDK components will be automatically installed by Gradle (except "
"the NDK)."
msgstr "所需的SDK组件将由Gradle自动安装（NDK除外）"

#: ../../docs/development/compiling/compiling_for_android.rst:31
#, fuzzy
msgid ""
"`Android NDK <https://developer.android.com/ndk/downloads/>`_ r17 or later."
msgstr ""
"`Android NDK <https://developer.android.com/ndk/downloads/>`_ r17 或高级版本"

#: ../../docs/development/compiling/compiling_for_android.rst:32
#, fuzzy
msgid "Gradle (will be downloaded and installed automatically if missing)."
msgstr "Gradle（如果缺少，将自动下载并安装）"

#: ../../docs/development/compiling/compiling_for_android.rst:33
#, fuzzy
msgid "JDK 8 (either OpenJDK or Oracle JDK)."
msgstr "JDK 8 ( OpenJDK 或 Oracle JDK)"

#: ../../docs/development/compiling/compiling_for_android.rst:35
#, fuzzy
msgid "JDK 9 or later are not currently supported."
msgstr "目前不支持JDK 9或更高版本"

#: ../../docs/development/compiling/compiling_for_android.rst:36
#, fuzzy
msgid ""
"You can download a build from `ojdkbuild <https://github.com/ojdkbuild/"
"ojdkbuild>`_."
msgstr ""
"您可以从 `ojdkbuild <https://github.com/ojdkbuild/ojdkbuild>`_ 下载一个版本"

#: ../../docs/development/compiling/compiling_for_android.rst:38
msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有关Godot的SCons用法的一般概述，请参阅 :ref:"
"`doc_introduction_to_the_buildsystem`。"

#: ../../docs/development/compiling/compiling_for_android.rst:44
msgid "Setting up the buildsystem"
msgstr "设置构建系统"

#: ../../docs/development/compiling/compiling_for_android.rst:46
msgid ""
"Set the environment variable ``ANDROID_HOME`` to point to the Android SDK. "
"If you downloaded the Android command-line tools, this would be the folder "
"where you extracted the contents of the ZIP archive. Later on, ``gradlew`` "
"will install necessary SDK components in this folder. However, you need to "
"accept the SDK component licenses before they can be downloaded by Gradle. "
"This can be done by running the following command from the root of the SDK "
"directory, then answering all the prompts with ``y``:"
msgstr ""
"将环境变量 ``ANDROID_HOME`` 指向Android SDK。如果您下载了Android命令行工具，"
"那么这将是您解压缩ZIP存档内容的文件夹。稍后，``gradlew`` 将在此文件夹中安装必"
"要的SDK组件。但是，您需要接受SDK组件许可证才能通过Gradle下载。这可以通过从SDK"
"目录的根目录运行以下命令，然后用 ``y`` 回答所有提示来完成："

#: ../../docs/development/compiling/compiling_for_android.rst:60
msgid ""
"Set the environment variable ``ANDROID_NDK_ROOT`` to point to the Android "
"NDK. You also might need to set the variable ``ANDROID_NDK_HOME`` to the "
"same path, especially if you are using custom Android modules, since some "
"Gradle plugins rely on the NDK and use this variable to determine its "
"location."
msgstr ""
"设置环境变量 ``ANDROID_NDK_ROOT`` 指向Android NDK。您还可能需要将变量 "
"``ANDROID_NDK_HOME`` 设置为相同的路径，尤其是在使用自定义Android模块的情况"
"下，因为某些Gradle插件依赖NDK并使用此变量来确定其位置。"

#: ../../docs/development/compiling/compiling_for_android.rst:66
#, fuzzy
msgid ""
"To set those environment variables on Windows, press :kbd:`Windows + R`, "
"type \"control system\", then click on **Advanced system settings** in the "
"left pane, then click on **Environment variables** on the window that "
"appears."
msgstr ""
"要在Windows上设置这些环境变量，请按 **Windows + R**，键入“控制系统”，然后单击"
"左窗格中的 **高级系统设置** ，然后在出现的窗口中单击 **环境变量** 。"

#: ../../docs/development/compiling/compiling_for_android.rst:71
msgid ""
"To set those environment variables on Linux or macOS, use ``export "
"ANDROID_HOME=/path/to/android-sdk`` and ``export ANDROID_NDK_ROOT=/path/to/"
"android-ndk`` where ``/path/to/android-sdk`` and ``/path/to/android-ndk`` "
"point to the root of the SDK and NDK directories."
msgstr ""
"要在Linux或macOS上设置这些环境变量，请使用 ``export ANDROID_HOME=/path/to/"
"android-sdk`` 和 ``export ANDROID_NDK_ROOT=/path/to/android-ndk``，其中 ``/"
"path/to/android-sdk`` 和 ``/path/to/android-ndk`` 是Android SDK和Android NDK"
"目录的根路径。"

#: ../../docs/development/compiling/compiling_for_android.rst:78
msgid "Building the export templates"
msgstr "构建导出模板"

#: ../../docs/development/compiling/compiling_for_android.rst:80
msgid ""
"Godot needs two export templates for Android: the optimized \"release\" "
"template (``android_release.apk``) and the debug template (``android_debug."
"apk``). As Google will require all APKs to include ARMv8 (64-bit) libraries "
"starting from August 2019, the commands below will build an APK containing "
"both ARMv7 and ARMv8 libraries."
msgstr ""
"Godot需要两个Android导出模板：优化的“发布”模板(``android_release.apk``)和调试"
"模板(``android_debug.apk``)。 由于Google将要求所有APK从2019年8月开始包含"
"ARMv8(64位)库，因此以下命令将构建包含ARMv7和ARMv8库的APK。"

#: ../../docs/development/compiling/compiling_for_android.rst:86
msgid ""
"Compiling the standard export templates is done by calling SCons with the "
"following arguments:"
msgstr "通过使用以下参数调用SCons来完成标准导出模板的编译："

#: ../../docs/development/compiling/compiling_for_android.rst:89
msgid ""
"Release template (used when exporting with **Debugging Enabled** unchecked)"
msgstr "发布模板（在导出时未选中“启用调试”的情况下使用）"

#: ../../docs/development/compiling/compiling_for_android.rst:102
msgid "The resulting APK will be located at ``bin/android_release.apk``."
msgstr "生成的APK将位于 ``bin/android_release.apk``。"

#: ../../docs/development/compiling/compiling_for_android.rst:104
msgid "Debug template (used when exporting with **Debugging Enabled** checked)"
msgstr "调试模板（用于在导出时选中“启用调试”的情况下使用）"

#: ../../docs/development/compiling/compiling_for_android.rst:117
msgid "The resulting APK will be located at ``bin/android_debug.apk``."
msgstr "生成的APK将位于 ``bin/android_debug.apk``。"

#: ../../docs/development/compiling/compiling_for_android.rst:120
msgid "Adding support for x86 devices"
msgstr "添加对x86设备的支持"

#: ../../docs/development/compiling/compiling_for_android.rst:122
#, fuzzy
msgid ""
"If you also want to include support for x86 and x86-64 devices, run the "
"SCons command a third and fourth time with the ``android_arch=x86``, and "
"``android_arch=x86_64`` arguments before building the APK with Gradle. For "
"example, for the release template:"
msgstr ""
"如果您还想包含对x86设备的支持，请在使用Gradle构建APK之前，第三次使用 "
"``android_arch=x86`` 参数运行Scons命令。 例如，对于发布模板："

#: ../../docs/development/compiling/compiling_for_android.rst:140
msgid ""
"This will create a fat binary that works on all platforms. The final APK "
"size of exported projects will depend on the platforms you choose to support "
"when exporting; in other words, unused platforms will be removed from the "
"APK."
msgstr ""
"这将创建一个适用于所有平台的胖二进制文件。导出项目的最终APK大小取决于您在导出"
"时选择支持的平台；换句话说，未使用的平台将从APK中删除。"

#: ../../docs/development/compiling/compiling_for_android.rst:146
#, fuzzy
msgid "Cleaning the generated export templates"
msgstr "使用导出模板"

#: ../../docs/development/compiling/compiling_for_android.rst:148
msgid ""
"You can use the following commands to remove the generated export templates:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:160
msgid "Using the export templates"
msgstr "使用导出模板"

#: ../../docs/development/compiling/compiling_for_android.rst:162
msgid ""
"Godot needs release and debug APKs that were compiled against the same "
"version/commit as the editor. If you are using official binaries for the "
"editor, make sure to install the matching export templates, or build your "
"own from the same version."
msgstr ""
"作为Android的导出模板，Godot需根据与编辑器相同的版本/提交编译发布版和调试版"
"APK。如果您使用官方二进制文件作为编辑器，请确保安装匹配的导出模板，或者从相同"
"版本构建自己的模板。"

#: ../../docs/development/compiling/compiling_for_android.rst:167
msgid ""
"When exporting your game, Godot opens the APK, changes a few things inside "
"and adds your files."
msgstr "导出游戏时，Godot将打开APK，更改其中的一些内容并添加文件。"

#: ../../docs/development/compiling/compiling_for_android.rst:171
msgid "Installing the templates"
msgstr "安装模板"

#: ../../docs/development/compiling/compiling_for_android.rst:173
msgid ""
"The newly-compiled templates (``android_debug.apk`` and ``android_release."
"apk``) must be copied to Godot's templates folder with their respective "
"names. The templates folder can be located in:"
msgstr ""
"新编译的模板（``android_debug.apk`` 和 ``android_release.apk``）必须使用各自"
"的名称复制到Godot的模板文件夹中。模板文件夹可以位于："

#: ../../docs/development/compiling/compiling_for_android.rst:177
msgid "Windows: ``%APPDATA%\\Godot\\templates\\<version>\\``"
msgstr "Windows: ``%APPDATA%\\Godot\\templates\\<version>\\``"

#: ../../docs/development/compiling/compiling_for_android.rst:178
msgid "Linux: ``$HOME/.local/share/godot/templates/<version>/``"
msgstr "Linux: ``$HOME/.local/share/godot/templates/<version>/``"

#: ../../docs/development/compiling/compiling_for_android.rst:179
msgid "macOS: ``$HOME/Library/Application Support/Godot/templates/<version>/``"
msgstr ""
"macOS: ``$HOME/Library/Application Support/Godot/templates/<version>/``"

#: ../../docs/development/compiling/compiling_for_android.rst:181
msgid ""
"``<version>`` is of the form ``major.minor[.patch].status`` using values "
"from ``version.py`` in your Godot source repository (e.g. ``3.0.5.stable`` "
"or ``3.1.dev``). You also need to write this same version string to a "
"``version.txt`` file located next to your export templates."
msgstr ""
"``<version>`` 的格式为 ``major.minor[.patch].status`` ，使用Godot源代码库中 "
"``version.py`` 的值（例如 ``3.0.5.stable`` 或 ``3.1.dev``）。您还需要将此相同"
"的版本字符串写入到导出模板旁边的 ``version.txt`` 文件中。"

#: ../../docs/development/compiling/compiling_for_android.rst:188
msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your APKs as custom export templates here:"
msgstr ""
"但是，如果要编写自定义模块或自定义C++代码，则可能需要在此处将APK配置为自定义"
"导出模板："

#: ../../docs/development/compiling/compiling_for_android.rst:194
msgid ""
"You don't even need to copy them, you can just reference the resulting file "
"in the ``bin\\`` directory of your Godot source folder, so that the next "
"time you build you will automatically have the custom templates referenced."
msgstr ""
"您甚至不需要复制它们，只需引用在Godot源文件夹的 ``bin\\`` 目录中生成的文件，"
"因此下次构建时，将自动引用自定义模板。"

#: ../../docs/development/compiling/compiling_for_android.rst:200
msgid "Troubleshooting"
msgstr "故障排除"

#: ../../docs/development/compiling/compiling_for_android.rst:203
msgid "Platform doesn't appear in SCons"
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:205
msgid ""
"Double-check that you've set both the ``ANDROID_HOME`` and "
"``ANDROID_NDK_ROOT`` environment variables. This is required for the "
"platform to appear in SCons' list of detected platforms. See :ref:`Setting "
"up the buildsystem <doc_android_setting_up_the_buildsystem>` for more "
"information."
msgstr ""

#: ../../docs/development/compiling/compiling_for_android.rst:212
msgid "Application not installed"
msgstr "应用程序未安装"

#: ../../docs/development/compiling/compiling_for_android.rst:214
msgid ""
"Android might complain the application is not correctly installed. If so:"
msgstr "Android可能会抱怨该应用程序未正确安装。 如果是这样的话："

#: ../../docs/development/compiling/compiling_for_android.rst:217
msgid "Check that the debug keystore is properly generated."
msgstr "检查是否正确生成了调试密钥库。"

#: ../../docs/development/compiling/compiling_for_android.rst:218
msgid "Check that the jarsigner executable is from JDK 8."
msgstr "检查jarsigner可执行文件是否来自JDK 8。"

#: ../../docs/development/compiling/compiling_for_android.rst:220
msgid ""
"If it still fails, open a command line and run `logcat <https://developer."
"android.com/studio/command-line/logcat>`_:"
msgstr ""
"如果仍然失败，请打开命令行并运行 `logcat <https://developer.android.com/"
"studio/command-line/logcat>`_："

#: ../../docs/development/compiling/compiling_for_android.rst:226
msgid ""
"Then check the output while the application is installed; the error message "
"should be presented there. Seek assistance if you can't figure it out."
msgstr ""
"然后在安装应用程序时检查输出；错误消息应该在此处显示。 如果无法解决，请寻求帮"
"助。"

#: ../../docs/development/compiling/compiling_for_android.rst:231
msgid "Application exits immediately"
msgstr "应用程序秒退"

#: ../../docs/development/compiling/compiling_for_android.rst:233
msgid ""
"If the application runs but exits immediately, this might be due to one of "
"the following reasons:"
msgstr "如果应用程序运行但秒退，则可能是以下原因之一："

#: ../../docs/development/compiling/compiling_for_android.rst:236
msgid ""
"Make sure to use export templates that match your editor version; if you use "
"a new Godot version, you *have* to update the templates too."
msgstr ""
"确保使用与您的编辑器版本匹配的导出模板；如果您使用的是新版Godot，则还 *必须* "
"更新模板。"

#: ../../docs/development/compiling/compiling_for_android.rst:238
msgid ""
"``libgodot_android.so`` is not in ``libs/<android_arch>/`` where "
"``<android_arch>`` is the device's architecture."
msgstr ""
"``libgodot_android.so`` 不在 ``libs/<android_arch>/`` 中，其中 "
"``<android_arch>`` 是设备的架构。"

#: ../../docs/development/compiling/compiling_for_android.rst:240
msgid ""
"The device's architecture does not match the exported one(s). Make sure your "
"templates were built for that device's architecture, and that the export "
"settings included support for that architecture."
msgstr ""
"设备的体系结构与导出的体系结构不匹配。确保您的模板是针对该设备的体系结构构建"
"的，并且导出设置包括对该体系结构的支持。"

#: ../../docs/development/compiling/compiling_for_android.rst:244
msgid "In any case, ``adb logcat`` should also show the cause of the error."
msgstr "无论如何，``adb logcat`` 也应显示错误原因。"
