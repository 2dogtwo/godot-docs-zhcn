# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-08 21:18+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_for_x11.rst:4
msgid "Compiling for X11 (Linux, \\*BSD)"
msgstr "在 X11平台上编译（Linux、 *BSD操作系统）"

#: ../../docs/development/compiling/compiling_for_x11.rst:9
msgid "Requirements"
msgstr ""

#: ../../docs/development/compiling/compiling_for_x11.rst:11
msgid ""
"For compiling under Linux or other Unix variants, the following is required:"
msgstr ""
"要在 Linux 或者其他类 Unix 操作系统上编译 Godot , 你需要准备以下软件和开源"
"库："

#: ../../docs/development/compiling/compiling_for_x11.rst:14
msgid "GCC or Clang"
msgstr "GCC 或者 Clang 编译器"

#: ../../docs/development/compiling/compiling_for_x11.rst:15
msgid "Python 2.7+ (Python 3 only supported as of SCons 3.0)"
msgstr "Python 2.7 或更高版本（Python 3的话需要安装 Scons 3.0以上版本）"

#: ../../docs/development/compiling/compiling_for_x11.rst:16
msgid "SCons build system"
msgstr "Scons 构建系统"

#: ../../docs/development/compiling/compiling_for_x11.rst:17
msgid "pkg-config (used to detect the dependencies below)"
msgstr "pkg-config (用于检测下面这些依赖库)"

#: ../../docs/development/compiling/compiling_for_x11.rst:18
msgid "X11, Xcursor, Xinerama, Xi and XRandR development libraries"
msgstr "X11 、Xcursor 、 Xinerama 、 Xi 、XRandR 这些 X11 平台的开发依赖库。"

#: ../../docs/development/compiling/compiling_for_x11.rst:19
msgid "MesaGL development libraries"
msgstr "MesaGL 开发依赖库。"

#: ../../docs/development/compiling/compiling_for_x11.rst:20
msgid "ALSA development libraries"
msgstr "ALSA 开发依赖库。"

#: ../../docs/development/compiling/compiling_for_x11.rst:21
msgid "PulseAudio development libraries (for sound support)"
msgstr "PulseAudio 开发依赖库（用于音效支持）。"

#: ../../docs/development/compiling/compiling_for_x11.rst:22
msgid "Freetype (for the editor)"
msgstr "Freetype (编辑器需要)"

#: ../../docs/development/compiling/compiling_for_x11.rst:23
msgid "OpenSSL (for HTTPS and TLS)"
msgstr "OpenSSL (用于 HTTPS 和 TLS 功能的实现)"

#: ../../docs/development/compiling/compiling_for_x11.rst:24
#, fuzzy
msgid "*Optional* - libudev (build with ``udev=yes``)"
msgstr "libudev (可选的, 使用构建参数 `udev=yes` 时需要)"

#: ../../docs/development/compiling/compiling_for_x11.rst:25
msgid "*Optional* - yasm (for WebM SIMD optimizations)"
msgstr ""

#: ../../docs/development/compiling/compiling_for_x11.rst:28
msgid "Distro-specific oneliners"
msgstr "各个发型版的安装指令"

#: ../../docs/development/compiling/compiling_for_x11.rst:30
msgid "**Arch**"
msgstr "**Arch**"

#: ../../docs/development/compiling/compiling_for_x11.rst:34
msgid "**Debian** / **Ubuntu**"
msgstr "**Debian** / **Ubuntu**"

#: ../../docs/development/compiling/compiling_for_x11.rst:40
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../docs/development/compiling/compiling_for_x11.rst:46
msgid "**FreeBSD**"
msgstr "**FreeBSD**"

#: ../../docs/development/compiling/compiling_for_x11.rst:51
msgid "**Gentoo**"
msgstr "**Gentoo**"

#: ../../docs/development/compiling/compiling_for_x11.rst:56
msgid "**Mageia**"
msgstr "**Mageia**"

#: ../../docs/development/compiling/compiling_for_x11.rst:62
msgid "**OpenBSD**"
msgstr "**OpenBSD**"

#: ../../docs/development/compiling/compiling_for_x11.rst:66
msgid "**openSUSE**"
msgstr "**openSUSE**"

#: ../../docs/development/compiling/compiling_for_x11.rst:72
msgid "**Solus**"
msgstr "**Solus**"

#: ../../docs/development/compiling/compiling_for_x11.rst:79
msgid "Compiling"
msgstr "开始编译"

#: ../../docs/development/compiling/compiling_for_x11.rst:81
msgid ""
"Start a terminal, go to the root dir of the engine source code and type:"
msgstr "启动终端，然后进入引擎源代码的根目录。键入下面的指令："

#: ../../docs/development/compiling/compiling_for_x11.rst:87
msgid ""
"If all goes well, the resulting binary executable will be placed in the \"bin"
"\" subdirectory. This executable file contains the whole engine and runs "
"without any dependencies. Executing it will bring up the project manager."
msgstr ""
"如果一切顺利，编译结果将存放在 ``bin`` 目录下。 这个可执行文件包含了整个引"
"擎，无需任何依赖项。 执行它将会启动项目管理器。"

#: ../../docs/development/compiling/compiling_for_x11.rst:94
msgid "If you wish to compile using Clang rather than GCC, use this command:"
msgstr "如果你希望使用 Clang 而不是 GCC 编译器， 可以使用这个命令："

#: ../../docs/development/compiling/compiling_for_x11.rst:100
msgid ""
"Using Clang appears to be a requirement for OpenBSD, otherwise fonts would "
"not build."
msgstr ""
"在 OpenBSD 平台上必须使用 Clang，否则在构建字体相关的依赖时会遇到一些麻烦。"

#: ../../docs/development/compiling/compiling_for_x11.rst:104
msgid "Building export templates"
msgstr "构建导出模板"

#: ../../docs/development/compiling/compiling_for_x11.rst:106
msgid ""
"To build X11 (Linux, \\*BSD) export templates, run the build system with the "
"following parameters:"
msgstr ""
"要构建 X11 （Linux，\\*BSD）平台的导出模板， 执行构建系统时需要带上这些参数："

#: ../../docs/development/compiling/compiling_for_x11.rst:109
msgid "(32 bits)"
msgstr "（ 32 位 ）"

#: ../../docs/development/compiling/compiling_for_x11.rst:116
msgid "(64 bits)"
msgstr "( 64 位 )"

#: ../../docs/development/compiling/compiling_for_x11.rst:123
msgid ""
"Note that cross compiling for the opposite bits (64/32) as your host "
"platform is not always straight-forward and might need a chroot environment."
msgstr ""
"请注意，跨CPU位数( 64/32)编译不总是这样直截了当，这可能还需要你通过 "
"``chroot`` 切换编译环境。"

#: ../../docs/development/compiling/compiling_for_x11.rst:126
msgid ""
"To create standard export templates, the resulting files must be copied to:"
msgstr "要创建导出模板，需要你手动把编译出来的二进制文件拷贝到这里："

#: ../../docs/development/compiling/compiling_for_x11.rst:132
msgid ""
"and named like this (even for \\*BSD which is seen as \"Linux X11\" by "
"Godot):"
msgstr ""
"并且还需要将文件命名成这样（在 Godot 中， \\*BSD 平台也被视为 \"Linux "
"X11\"）："

#: ../../docs/development/compiling/compiling_for_x11.rst:141
msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your binaries as custom export templates "
"here:"
msgstr ""
"此外，如果你正在开发自定义模块或修改引擎的其他 C++ 代码，则可以在此处将你编译"
"好的二进制文件配置为自定义导出模板："

#: ../../docs/development/compiling/compiling_for_x11.rst:147
msgid ""
"You don't even need to copy them, you can just reference the resulting files "
"in the bin/ directory of your Godot source folder, so the next time you "
"build you automatically have the custom templates referenced."
msgstr ""
"这样，你就你不必拷贝他们了。你可以直接把自定义模板的可执行文件指向你在 bin/ "
"下面构建好的二进制文件， 下一次你再修改引擎就不需要做任何配置了。"
