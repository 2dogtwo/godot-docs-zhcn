# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-29 21:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_for_x11.rst:4
msgid "Compiling for X11 (Linux, \\*BSD)"
msgstr "为X11平台编译(Linux、 *BSD操作系统)"

#: ../../docs/development/compiling/compiling_for_x11.rst:9
msgid "Requirements"
msgstr "需求"

#: ../../docs/development/compiling/compiling_for_x11.rst:11
msgid ""
"For compiling under Linux or other Unix variants, the following is required:"
msgstr ""
"要在 Linux 或者其他类 Unix 操作系统上编译 Godot , 您需要准备以下软件和开源库:"

#: ../../docs/development/compiling/compiling_for_x11.rst:14
msgid "GCC or Clang"
msgstr "GCC 或者 Clang 编译器"

#: ../../docs/development/compiling/compiling_for_x11.rst:15
#, fuzzy
msgid "Python 3 or 2.7+"
msgstr "Python 2.7+或Python 3.5+"

#: ../../docs/development/compiling/compiling_for_x11.rst:16
msgid "SCons build system (3.0 or later for Python 3)"
msgstr ""

#: ../../docs/development/compiling/compiling_for_x11.rst:17
msgid "pkg-config (used to detect the dependencies below)"
msgstr "pkg-config (用于检测下面这些依赖库)"

#: ../../docs/development/compiling/compiling_for_x11.rst:18
msgid "X11, Xcursor, Xinerama, Xi and XRandR development libraries"
msgstr "X11 、Xcursor 、 Xinerama 、 Xi 、XRandR 这些 X11 平台的开发依赖库"

#: ../../docs/development/compiling/compiling_for_x11.rst:19
msgid "MesaGL development libraries"
msgstr "MesaGL开发库"

#: ../../docs/development/compiling/compiling_for_x11.rst:20
msgid "ALSA development libraries"
msgstr "ALSA开发库"

#: ../../docs/development/compiling/compiling_for_x11.rst:21
#, fuzzy
msgid "PulseAudio development libraries"
msgstr "ALSA开发库"

#: ../../docs/development/compiling/compiling_for_x11.rst:22
msgid "*Optional* - libudev (build with ``udev=yes``)"
msgstr "*可选* - libudev(使用``udev = yes``构建)"

#: ../../docs/development/compiling/compiling_for_x11.rst:23
msgid "*Optional* - yasm (for WebM SIMD optimizations)"
msgstr "*可选* - yasm(用于WebM SIMD优化)"

#: ../../docs/development/compiling/compiling_for_x11.rst:25
msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有关Godot的SCons用法的一般概述，请参阅 :ref:"
"`doc_introduction_to_the_buildsystem`。"

#: ../../docs/development/compiling/compiling_for_x11.rst:29
msgid "Distro-specific oneliners"
msgstr "各个发型版的安装指令"

#: ../../docs/development/compiling/compiling_for_x11.rst:31
#, fuzzy
msgid "**Arch Linux**"
msgstr "**Arch**"

#: ../../docs/development/compiling/compiling_for_x11.rst:35
msgid "**Debian** / **Ubuntu**"
msgstr "**Debian** / **Ubuntu**"

#: ../../docs/development/compiling/compiling_for_x11.rst:40
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../docs/development/compiling/compiling_for_x11.rst:46
msgid "**FreeBSD**"
msgstr "**FreeBSD**"

#: ../../docs/development/compiling/compiling_for_x11.rst:52
msgid "**Gentoo**"
msgstr "**Gentoo**"

#: ../../docs/development/compiling/compiling_for_x11.rst:57
msgid "**Mageia**"
msgstr "**Mageia**"

#: ../../docs/development/compiling/compiling_for_x11.rst:63
msgid "**OpenBSD**"
msgstr "**OpenBSD**"

#: ../../docs/development/compiling/compiling_for_x11.rst:67
msgid "**openSUSE**"
msgstr "**openSUSE**"

#: ../../docs/development/compiling/compiling_for_x11.rst:72
msgid "**Solus**"
msgstr "**Solus**"

#: ../../docs/development/compiling/compiling_for_x11.rst:79
msgid "Compiling"
msgstr "开始编译"

#: ../../docs/development/compiling/compiling_for_x11.rst:81
msgid ""
"Start a terminal, go to the root dir of the engine source code and type:"
msgstr "启动终端，然后进入引擎源代码的根目录。键入下面的指令:"

#: ../../docs/development/compiling/compiling_for_x11.rst:87
msgid ""
"A good rule of thumb for the ``-j`` (*jobs*) flag, is to have at least as "
"many threads compiling Godot as you have cores in your CPU, if not one or "
"two more. Feel free to add the ``-j`` option to any SCons command you see "
"below."
msgstr ""
"`-j``(* jobs *)标志的一个好的经验法则是，至少有多少线程编译Godot，就像您的CPU"
"中有核心一样，如果不是一两个。 随意将 ``-j`` 选项添加到您在下面看到的任何"
"SCons命令。"

#: ../../docs/development/compiling/compiling_for_x11.rst:91
msgid ""
"If all goes well, the resulting binary executable will be placed in the \"bin"
"\" subdirectory. This executable file contains the whole engine and runs "
"without any dependencies. Executing it will bring up the project manager."
msgstr ""
"如果一切顺利，编译结果将存放在 ``bin`` 目录下。 这个可执行文件包含了整个引"
"擎，无需任何依赖项。 执行它将会启动项目管理器。"

#: ../../docs/development/compiling/compiling_for_x11.rst:98
msgid "If you wish to compile using Clang rather than GCC, use this command:"
msgstr "如果您希望使用 Clang 而不是 GCC 编译器， 可以使用这个命令:"

#: ../../docs/development/compiling/compiling_for_x11.rst:104
msgid ""
"Using Clang appears to be a requirement for OpenBSD, otherwise fonts would "
"not build."
msgstr ""
"在 OpenBSD 平台上必须使用 Clang，否则在构建字体相关的依赖时会遇到一些麻烦。"

#: ../../docs/development/compiling/compiling_for_x11.rst:107
msgid ""
"If you are compiling Godot for production use, then you can make the final "
"executable smaller and faster by adding the SCons option "
"``target=release_debug``."
msgstr ""
"如果您正在编译Godot用于生产用途，那么您可以通过添加SCons选项``target = "
"release_debug``来使最终的可执行文件更小更快。"

#: ../../docs/development/compiling/compiling_for_x11.rst:112
msgid "Building export templates"
msgstr "构建导出模板"

#: ../../docs/development/compiling/compiling_for_x11.rst:114
msgid ""
"Linux binaries usually won't run on distributions that are older than the "
"distribution they were built on. If you wish to distribute binaries that "
"work on most distributions, you should build them on an old distribution "
"such as Ubuntu 16.04. You can use a virtual machine or a container to set up "
"a suitable build environment."
msgstr ""

#: ../../docs/development/compiling/compiling_for_x11.rst:122
msgid ""
"To build X11 (Linux, \\*BSD) export templates, run the build system with the "
"following parameters:"
msgstr ""
"要构建 X11 (Linux，\\*BSD)平台的导出模板， 执行构建系统时需要带上这些参数:"

#: ../../docs/development/compiling/compiling_for_x11.rst:125
msgid "(32 bits)"
msgstr "( 32 位 )"

#: ../../docs/development/compiling/compiling_for_x11.rst:132
msgid "(64 bits)"
msgstr "( 64 位 )"

#: ../../docs/development/compiling/compiling_for_x11.rst:139
#, fuzzy
msgid ""
"Note that cross-compiling for the opposite bits (64/32) as your host "
"platform is not always straight-forward and might need a chroot environment."
msgstr ""
"请注意，跨CPU位数( 64/32)编译不总是这样直截了当，这可能还需要您通过 "
"``chroot`` 切换编译环境。"

#: ../../docs/development/compiling/compiling_for_x11.rst:142
msgid ""
"To create standard export templates, the resulting files must be copied to:"
msgstr "要创建导出模板，需要您手动把编译出来的二进制文件拷贝到这里:"

#: ../../docs/development/compiling/compiling_for_x11.rst:148
msgid ""
"and named like this (even for \\*BSD which is seen as \"Linux X11\" by "
"Godot):"
msgstr ""
"并且还需要将文件命名成这样(在 Godot 中， \\*BSD 平台也被视为 \"Linux X11\"):"

#: ../../docs/development/compiling/compiling_for_x11.rst:157
msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your binaries as custom export templates "
"here:"
msgstr ""
"此外，如果您正在开发自定义模块或修改引擎的其他 C++ 代码，则可以在此处将您编译"
"好的二进制文件配置为自定义导出模板:"

#: ../../docs/development/compiling/compiling_for_x11.rst:163
#, fuzzy
msgid ""
"You don't even need to copy them, you can just reference the resulting files "
"in the ``bin/`` directory of your Godot source folder, so the next time you "
"build, you automatically have the custom templates referenced."
msgstr ""
"您甚至不需要复制它们，您只需要在Godot源文件夹的``bin \\``目录中引用结果文件，"
"这样您下次构建时就会自动引用自定义模板。"
