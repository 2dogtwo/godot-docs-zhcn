# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-15 18:11+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_for_windows.rst:4
msgid "Compiling for Windows"
msgstr "为Windows平台编译"

#: ../../docs/development/compiling/compiling_for_windows.rst:9
msgid "Requirements"
msgstr "需求"

#: ../../docs/development/compiling/compiling_for_windows.rst:11
msgid "For compiling under Windows, the following is required:"
msgstr "要在Windows下进行编译，需要以下内容:"

#: ../../docs/development/compiling/compiling_for_windows.rst:13
#, fuzzy
msgid ""
"`Visual Studio Community <https://www.visualstudio.com/vs/community/>`_, "
"version 2015 (14.0) or later. **Make sure to read \"Installing Visual Studio "
"caveats\" below or you will have to run/download the installer again.**"
msgstr ""
"Visual C++，`Visual Studio社区 <https://www.visualstudio.com/vs/community/"
">`__ (推荐)，版本2013(12.0)或更高版本。 **请确保阅读下面的安装Visual Studio警"
"告，或者您必须再次运行/下载安装程序。**"

#: ../../docs/development/compiling/compiling_for_windows.rst:17
msgid "MinGW-w64 can be used as an alternative to Visual Studio."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:18
#, fuzzy
msgid ""
"`Python 3.5+ (recommended) or Python 2.7+. <https://www.python.org/downloads/"
"windows/>`_"
msgstr "`Python 2.7+或Python 3.5+ <https://www.python.org/downloads/>`__"

#: ../../docs/development/compiling/compiling_for_windows.rst:19
#, fuzzy
msgid "`SCons <https://www.scons.org>`_ build system."
msgstr "`SCons <https://www.scons.org>`__构建系统。"

#: ../../docs/development/compiling/compiling_for_windows.rst:20
#, fuzzy
msgid ""
"*Optional* - `yasm <https://yasm.tortall.net/>`_ (for WebM SIMD "
"optimizations)"
msgstr "*可选* - yasm(用于WebM SIMD优化)"

#: ../../docs/development/compiling/compiling_for_windows.rst:22
msgid ""
"If you have `Scoop <https://scoop.sh/>`_ installed, you can easily install "
"MinGW and other dependencies using the following command::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:27
msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有关Godot的SCons用法的一般概述，请参阅 :ref:"
"`doc_introduction_to_the_buildsystem`。"

#: ../../docs/development/compiling/compiling_for_windows.rst:31
msgid "Setting up SCons"
msgstr "设置SCons"

#: ../../docs/development/compiling/compiling_for_windows.rst:33
msgid ""
"First, make sure to enable the option to add Python to the ``PATH`` in the "
"Python installer. The SCons installer should then detect and use the "
"existing Python installation."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:37
#, fuzzy
msgid ""
"To check whether you have installed Python and SCons correctly, you can type "
"``python --version`` and ``scons --version`` into a command prompt (``cmd."
"exe``)."
msgstr ""
"要检查是否已正确安装Python和SCons，可以在Windows命令提示符(``cmd.exe``)中键入"
"``python --version``和``scons --version``。"

#: ../../docs/development/compiling/compiling_for_windows.rst:41
#, fuzzy
msgid ""
"If the commands above don't work, make sure to add Python to your ``PATH`` "
"environment variable after installing it, then check again. You can do so by "
"running the Python installer again and enabling the option to add Python to "
"the ``PATH``."
msgstr ""
"如果上面的命令不起作用，请确保在安装后将Python添加到PATH环境变量中，然后再次"
"检查。"

#: ../../docs/development/compiling/compiling_for_windows.rst:49
msgid "Installing Visual Studio caveats"
msgstr "安装Visual Studio警告"

#: ../../docs/development/compiling/compiling_for_windows.rst:51
msgid ""
"If installing Visual Studio 2017 or 2019, make sure to enable **C++** in the "
"list of workflows to install."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:54
msgid ""
"If installing Visual Studio 2015, make sure to run a **Custom** installation "
"instead of **Typical** and select **C++** as a language there."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:57
#, fuzzy
msgid ""
"If you've already made the mistake of installing Visual Studio without C++ "
"support, run the installer again; it should present you a **Modify** button. "
"Running the installer from *Add/Remove Programs* will only give you a "
"**Repair** option, which won't let you install C++ tools."
msgstr ""
"如果您已经错误地安装了 **典型** ，安装，重新运行从Internet下载的可执行安装程"
"序，它将为您提供 **修改** 按钮选项。 从“添加/删除程序”运行安装只会为您提供“修"
"复”选项，该选项对您的问题无效。"

#: ../../docs/development/compiling/compiling_for_windows.rst:63
msgid "Downloading Godot's source"
msgstr "下载Godot的来源"

#: ../../docs/development/compiling/compiling_for_windows.rst:65
#, fuzzy
msgid ""
"Godot's source code is `hosted on GitHub <https://github.com/godotengine/"
"godot>`_. Downloading it (cloning) using `Git <https://git-scm.com/>`_ is "
"recommended."
msgstr ""
"`Godot的 <https://github.com/godotengine/godot>`__来源托管在GitHub上。 建议通"
"过`Git <https://git-scm.com/>`__下载(克隆)。"

#: ../../docs/development/compiling/compiling_for_windows.rst:68
#, fuzzy
msgid ""
"The tutorial will assume from now on that you placed the source code in ``C:"
"\\godot``."
msgstr "从现在开始，本教程将假设您将源放入``C:\\ godot``。"

#: ../../docs/development/compiling/compiling_for_windows.rst:72
msgid "Compiling"
msgstr "开始编译"

#: ../../docs/development/compiling/compiling_for_windows.rst:75
#, fuzzy
msgid "Selecting a compiler"
msgstr "一个C编译器"

#: ../../docs/development/compiling/compiling_for_windows.rst:77
msgid ""
"SCons will automatically find and use an existing Visual Studio "
"installation. If you do not have Visual Studio installed, it will attempt to "
"use MinGW instead. If you already have Visual Studio installed and want to "
"use MinGW, pass ``use_mingw=yes`` to the SCons command line."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:82
msgid ""
"During development, using the Visual Studio compiler is usually a better "
"idea, as it links the Godot binary much faster than MinGW. However, MinGW "
"can produce more optimized binaries using link-time optimization (see "
"below), making it a better choice for production use."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:88
msgid "Running SCons"
msgstr "运行SCons"

#: ../../docs/development/compiling/compiling_for_windows.rst:90
#, fuzzy
msgid ""
"After opening a command prompt, change to the root directory of the engine "
"source code (using ``cd``) and type::"
msgstr "打开终端，转到引擎源代码的根目录并键入:"

#: ../../docs/development/compiling/compiling_for_windows.rst:95
msgid "You can specify a number of CPU threads to use to speed up the build::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:99
#, fuzzy
msgid ""
"In general, it is OK to have at least as many threads compiling Godot as you "
"have cores in your CPU, if not one or two more. Feel free to add the -j "
"option to any SCons command you see below."
msgstr ""
"一般情况下，如果不是一两个核心，那么至少可以在CPU中拥有与核心一样多的线程来编"
"译Godot。 如果您设置了“Pywin32 Python Extension”，请随意将-j选项添加到您在下"
"面看到的任何SCons命令中。"

#: ../../docs/development/compiling/compiling_for_windows.rst:103
msgid ""
"When compiling with multiple CPU threads, SCons may warn about pywin32 being "
"missing. You can safely ignore this warning."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:106
#, fuzzy
msgid ""
"If all goes well, the resulting binary executable will be placed in ``C:"
"\\godot\\bin\\`` with the name ``godot.windows.tools.32.exe`` or ``godot."
"windows.tools.64.exe``."
msgstr ""
"如果一切顺利，生成的二进制可执行文件将放在``C:\\ godot \\ bin \\``中，名称为"
"``godot.windows.tools.32.exe``或``godot.windows.tools。64.exe``。 SCons将自动"
"检测环境(提示)的设置编译器体系结构，并将构建相应的可执行文件。"

#: ../../docs/development/compiling/compiling_for_windows.rst:110
msgid ""
"By default, SCons will build a binary matching your CPU architecture, but "
"this can be overriden using ``bits=64`` or ``bits=32``."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:113
#, fuzzy
msgid ""
"This executable file contains the whole engine and runs without any "
"dependencies. Running it will bring up the Project Manager."
msgstr ""
"此可执行文件包含整个引擎，并且运行时没有任何依赖性。 执行它将调出项目经理。"

#: ../../docs/development/compiling/compiling_for_windows.rst:116
msgid ""
"If you are compiling Godot for production use, then you can make the final "
"executable smaller and faster by adding the SCons option "
"``target=release_debug``."
msgstr ""
"如果您正在编译Godot用于生产用途，那么您可以通过添加SCons选项``target = "
"release_debug``来使最终的可执行文件更小更快。"

#: ../../docs/development/compiling/compiling_for_windows.rst:120
msgid ""
"If you are compiling Godot with MinGW, you can make the binary even smaller "
"and faster by adding the SCons option ``use_lto=yes``. As link-time "
"optimization is a memory-intensive process, this will require about 3 GB of "
"available RAM while compiling."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:126
msgid "Development in Visual Studio or other IDEs"
msgstr "在Visual Studio或其他IDE中进行开发"

#: ../../docs/development/compiling/compiling_for_windows.rst:128
msgid ""
"For most projects, using only scripting is enough but when development in C+"
"+ is needed, for creating modules or extending the engine, working with an "
"IDE is usually desirable."
msgstr ""
"对于大多数项目，只使用脚本就足够了，但是当需要C++开发时，为了创建模块或扩展引"
"擎，通常需要使用IDE。"

#: ../../docs/development/compiling/compiling_for_windows.rst:132
#, fuzzy
msgid ""
"You can create a Visual Studio solution via SCons by running SCons with the "
"``vsproj=yes`` parameter, like this::"
msgstr ""
"您可以通过使用``vsproj = yes``参数运行SCons来创建Visual Studio解决方案，如下"
"所示:"

#: ../../docs/development/compiling/compiling_for_windows.rst:137
#, fuzzy
msgid ""
"You will be able to open Godot's source in a Visual Studio solution now, and "
"able to build Godot using Visual Studio's **Build** button."
msgstr ""
"您现在可以在Visual Studio解决方案中打开Godot的源代码，并能够通过Visual "
"Studio ** Build **按钮构建Godot。 但是，请确保已安装Pywin32，以便并行(-j)构建"
"正常工作。"

#: ../../docs/development/compiling/compiling_for_windows.rst:140
#, fuzzy
msgid ""
"If you need to edit the build commands, they are located in \"Godot\" "
"project settings, NMAKE sheet. SCons is called at the end of the commands. "
"If you make a mistake, copy the command from one of the other build "
"configurations (debug, release_debug, release) or architectures (Win32/x64); "
"they are equivalent."
msgstr ""
"如果需要编辑编译命令，它们位于“Godot”项目设置，NMAKE表中。 在命令结束时调用"
"SCons。 如果出错，请从其他构建配置(debug，release_debug，release)或体系结构"
"(Win32 / x64)中复制命令。 它们是等价的。"

#: ../../docs/development/compiling/compiling_for_windows.rst:147
msgid "Cross-compiling for Windows from other operating systems"
msgstr "从其他操作系统交叉编译Windows"

#: ../../docs/development/compiling/compiling_for_windows.rst:149
#, fuzzy
msgid ""
"If you are a Linux or macOS user, you need to install `MinGW-w64 <https://"
"mingw-w64.org/doku.php>`_, which typically comes in 32-bit and 64-bit "
"variants. The package names may differ based on your distribution, here are "
"some known ones:"
msgstr ""
"如果您是Linux或macOS用户，则需要安装`MinGW-w64 <https://mingw-w64.org/doku."
"php>`_ ，它通常包含32位和64位变体。 包名称可能因您的发行版而异，以下是一些已"
"知的发行版:"

#: ../../docs/development/compiling/compiling_for_windows.rst:155
msgid "**Arch**"
msgstr "**Arch**"

#: ../../docs/development/compiling/compiling_for_windows.rst:159
msgid "**Debian** / **Ubuntu**"
msgstr "**Debian** / **Ubuntu**"

#: ../../docs/development/compiling/compiling_for_windows.rst:163
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../docs/development/compiling/compiling_for_windows.rst:168
msgid "**macOS**"
msgstr "**macOS**"

#: ../../docs/development/compiling/compiling_for_windows.rst:172
msgid "**Mageia**"
msgstr "**Mageia**"

#: ../../docs/development/compiling/compiling_for_windows.rst:178
#, fuzzy
msgid ""
"Before attempting the compilation, SCons will check for the following "
"binaries in your ``PATH`` environment variable::"
msgstr "在允许您尝试编译之前，SCons将在您的``$ PATH``中检查以下二进制文件:"

#: ../../docs/development/compiling/compiling_for_windows.rst:184
#, fuzzy
msgid ""
"If the binaries are not located in the ``PATH`` (e.g. ``/usr/bin``), you can "
"define the following environment variables to give a hint to the build "
"system::"
msgstr ""
"如果二进制文件不在``$ PATH``中(例如``/ usr / bin``)，您可以定义以下环境变量来"
"给构建系统一个提示:"

#: ../../docs/development/compiling/compiling_for_windows.rst:191
#, fuzzy
msgid ""
"To make sure you are doing things correctly, executing the following in the "
"shell should result in a working compiler (the version output may differ "
"based on your system)::"
msgstr ""
"为了确保您正确地执行操作，在shell中执行以下操作应该会生成一个正常工作的编译器"
"(版本输出可能因您的系统而异):"

#: ../../docs/development/compiling/compiling_for_windows.rst:199
msgid "Troubleshooting"
msgstr "故障排除"

#: ../../docs/development/compiling/compiling_for_windows.rst:201
#, fuzzy
msgid ""
"Cross-compiling from some Ubuntu versions may lead to `this bug <https://"
"github.com/godotengine/godot/issues/9258>`_, due to a default configuration "
"lacking support for POSIX threading."
msgstr ""
"某些版本的Ubuntu的交叉编译可能会导致 `此错误 <https://github.com/godotengine/"
"godot/issues/9258>`_ ，因为默认配置缺乏对POSIX线程的支持。"

#: ../../docs/development/compiling/compiling_for_windows.rst:205
#, fuzzy
msgid ""
"You can change that configuration following those instructions, for 64-bit::"
msgstr "您可以按照这些说明更改该配置，对于32位:"

#: ../../docs/development/compiling/compiling_for_windows.rst:213
#, fuzzy
msgid "And for 32-bit::"
msgstr "而对于64位:"

#: ../../docs/development/compiling/compiling_for_windows.rst:221
msgid "Creating Windows export templates"
msgstr "创建Windows导出模板"

#: ../../docs/development/compiling/compiling_for_windows.rst:223
#, fuzzy
msgid ""
"Windows export templates are created by compiling Godot without the editor, "
"with the following flags::"
msgstr "Windows导出模板是通过将Godot编译为release来创建的，具有以下标志:"

#: ../../docs/development/compiling/compiling_for_windows.rst:231
msgid ""
"If you plan on replacing the standard export templates, copy these to the "
"following location, replacing ``<version>`` with the version identifier "
"(such as ``3.1.1.stable`` or ``3.2.dev``)::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:237
#, fuzzy
msgid "With the following names::"
msgstr "使用以下名称:"

#: ../../docs/development/compiling/compiling_for_windows.rst:244
#, fuzzy
msgid ""
"However, if you are using custom modules or custom engine code, you may "
"instead want to configure your binaries as custom export templates here:"
msgstr ""
"此外，如果您正在开发自定义模块或修改引擎的其他 C++ 代码，则可以在此处将您编译"
"好的二进制文件配置为自定义导出模板:"

#: ../../docs/development/compiling/compiling_for_windows.rst:250
#, fuzzy
msgid ""
"You don't need to copy them in this case, just reference the resulting files "
"in the ``bin\\`` directory of your Godot source folder, so the next time you "
"build, you will automatically have the custom templates referenced."
msgstr ""
"您甚至不需要复制它们，您只需要在Godot源文件夹的``bin \\``目录中引用结果文件，"
"这样您下次构建时就会自动引用自定义模板。"
