# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-09 13:27+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_for_osx.rst:4
msgid "Compiling for macOS"
msgstr "为macOS平台编译"

#: ../../docs/development/compiling/compiling_for_osx.rst:9
msgid "Requirements"
msgstr "需求"

#: ../../docs/development/compiling/compiling_for_osx.rst:11
#, fuzzy
msgid "For compiling under macOS, the following is required:"
msgstr "要在Windows下进行编译，需要以下内容："

#: ../../docs/development/compiling/compiling_for_osx.rst:13
#, fuzzy
msgid "`Python 3.5+ <https://www.python.org>`_."
msgstr "`Python 2.7+ 或 Python 3.5+ <https://www.python.org/>`__"

#: ../../docs/development/compiling/compiling_for_osx.rst:14
#, fuzzy
msgid "`SCons 3.0+ <https://www.scons.org>`_ build system."
msgstr "`SCons <https://www.scons.org>`__ 构建系统。"

#: ../../docs/development/compiling/compiling_for_osx.rst:15
#, fuzzy
msgid ""
"`Xcode <https://apps.apple.com/us/app/xcode/id497799835>`_ (or the more "
"lightweight Command Line Tools for Xcode)."
msgstr "Xcode（或更轻巧的Xcode命令行工具）"

#: ../../docs/development/compiling/compiling_for_osx.rst:17
#, fuzzy
msgid ""
"*Optional* - `yasm <https://yasm.tortall.net/>`_ (for WebM SIMD "
"optimizations)."
msgstr "*可选* - `yasm <https://yasm.tortall.net/>`_ （用于WebM SIMD优化）"

#: ../../docs/development/compiling/compiling_for_osx.rst:19
#, fuzzy
msgid ""
"If you have `Homebrew <https://brew.sh/>`_ installed, you can easily install "
"SCons and yasm using the following command::"
msgstr ""
"如果您已安装 `Scoop <https://scoop.sh/>`_，则可以使用以下命令轻松安装MinGW和"
"其他依赖项："

#: ../../docs/development/compiling/compiling_for_osx.rst:24
msgid ""
"Installing Homebrew will also fetch the Command Line Tools for Xcode "
"automatically if you don't have them already."
msgstr ""

#: ../../docs/development/compiling/compiling_for_osx.rst:27
msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"有关Godot的SCons用法的一般概述，请参阅 :ref:"
"`doc_introduction_to_the_buildsystem`。"

#: ../../docs/development/compiling/compiling_for_osx.rst:31
msgid "Compiling"
msgstr "开始编译"

#: ../../docs/development/compiling/compiling_for_osx.rst:33
#, fuzzy
msgid "Start a terminal, go to the root directory of the engine source code."
msgstr "启动终端，然后进入引擎源代码的根目录。键入下面的指令："

#: ../../docs/development/compiling/compiling_for_osx.rst:35
msgid "To compile for Intel (x86-64) powered Macs, use::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_osx.rst:39
msgid ""
"To compile for Apple Silicon (ARM64) powered Macs, use (only for Godot "
"3.2.3+)::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_osx.rst:43
msgid ""
"To support both architectures in a single \"Universal 2\" binary, run the "
"above two commands and then use ``lipo`` to bundle them together::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_osx.rst:47
#, fuzzy
msgid ""
"If all goes well, the resulting binary executable will be placed in the "
"``bin/`` subdirectory. This executable file contains the whole engine and "
"runs without any dependencies. Executing it will bring up the project "
"manager."
msgstr ""
"如果一切顺利，生成的二进制可执行文件将放在 `` bin`` 子目录中。该可执行文件包"
"含整个引擎，并且运行时无需任何依赖项。 执行它将会启动项目管理器。"

#: ../../docs/development/compiling/compiling_for_osx.rst:52
msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""

#: ../../docs/development/compiling/compiling_for_osx.rst:57
#, fuzzy
msgid ""
"To create an ``.app`` bundle like in the official builds, you need to use "
"the template located in ``misc/dist/osx_tools.app``. Typically, for an "
"optimized editor binary built with ``target=release_debug``::"
msgstr ""
"要像在官方版本中那样创建.app，您需要使用位于 ``misc/dist/osx_tools.app`` 中的"
"模板。通常，使用 ``scons p=osx target=release_debug`` 用于 ``.64`` 优化二进制"
"文件构建："

#: ../../docs/development/compiling/compiling_for_osx.rst:67
msgid "Compiling a headless/server build"
msgstr "编译无头/服务器构建"

#: ../../docs/development/compiling/compiling_for_osx.rst:69
msgid ""
"To compile a *headless* build which provides editor functionality to export "
"projects in an automated manner, use::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_osx.rst:74
msgid ""
"To compile a *server* build which is optimized to run dedicated game "
"servers, use::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_osx.rst:80
#, fuzzy
msgid "Cross-compiling for macOS from Linux"
msgstr "在Linux平台上为iOS做交叉编译"

#: ../../docs/development/compiling/compiling_for_osx.rst:82
#, fuzzy
msgid ""
"It is possible to compile for macOS in a Linux environment (and maybe also "
"in Windows using the Windows Subsystem for Linux). For that, you'll need to "
"install `OSXCross <https://github.com/tpoechtrager/osxcross>`__ to be able "
"to use macOS as a target. First, follow the instructions to install it:"
msgstr ""
"可以在Linux环境中为macOS编译（也可以在带有Cygwin的Windows中）。 为此，您需要 "
"`OSXCross <https://github.com/tpoechtrager/osxcross>`__ 才能使用macOS作为目标"
"平台。首先，按照说明安装它："

#: ../../docs/development/compiling/compiling_for_osx.rst:87
#, fuzzy
msgid ""
"Clone the `OSXCross repository <https://github.com/tpoechtrager/osxcross>`__ "
"somewhere on your machine (or download a ZIP file and extract it somewhere), "
"e.g.::"
msgstr ""
"在您机器的某个地方克隆 `OSXCross存储库 <https://github.com/tpoechtrager/"
"osxcross>`_ （或下载一个zip文件并将其解压缩到某处），例如："

#: ../../docs/development/compiling/compiling_for_osx.rst:93
msgid ""
"Follow the instructions to package the SDK: https://github.com/tpoechtrager/"
"osxcross#packaging-the-sdk"
msgstr ""
"按照说明打包SDK：https://github.com/tpoechtrager/osxcross#packaging-the-sdk"

#: ../../docs/development/compiling/compiling_for_osx.rst:95
msgid ""
"Follow the instructions to install OSXCross: https://github.com/tpoechtrager/"
"osxcross#installation"
msgstr ""
"按照说明安装OSXCross：https://github.com/tpoechtrager/osxcross#installation"

#: ../../docs/development/compiling/compiling_for_osx.rst:98
#, fuzzy
msgid ""
"After that, you will need to define the ``OSXCROSS_ROOT`` as the path to the "
"OSXCross installation (the same place where you cloned the repository/"
"extracted the zip), e.g.::"
msgstr ""
"之后，您需要将 ``OSXCROSS_ROOT`` 定义为OSXCross的安装路径（您克隆存储库/提取"
"zip的位置），例如："

#: ../../docs/development/compiling/compiling_for_osx.rst:104
#, fuzzy
msgid "Now you can compile with SCons like you normally would::"
msgstr "现在您可以像通常那样使用SCons进行编译："

#: ../../docs/development/compiling/compiling_for_osx.rst:108
#, fuzzy
msgid ""
"If you have an OSXCross SDK version different from the one expected by the "
"SCons buildsystem, you can specify a custom one with the ``osxcross_sdk`` "
"argument::"
msgstr ""
"如果您的OSXCross SDK版本与SCons构建系统期望的版本不同，则可以使用 "
"``osxcross_sdk`` 参数指定自定义版本："
