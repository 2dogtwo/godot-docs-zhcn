# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-26 22:13+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:4
msgid "Cross-compiling for iOS on Linux"
msgstr "在Linux平台上为iOS做交叉编译"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:8
msgid ""
"The procedure for this is somewhat complex and requires a lot of steps, but "
"once you have the environment properly configured it will be easy to compile "
"Godot for iOS anytime you want."
msgstr ""
"这个过程有点复杂，需要很多步骤，但是一旦您正确配置了环境，就可以随时随地编译"
"Godot for iOS。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:13
msgid "Disclaimer"
msgstr "放弃"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:15
msgid ""
"While it is possible to compile for iOS on a Linux environment, Apple is "
"very restrictive about the tools to be used (especially hardware-wise), "
"allowing pretty much only their products to be used for development. So this "
"is **not official**. However, a `statement from Apple in 2010 <http://www."
"apple.com/pr/library/2010/09/09Statement-by-Apple-on-App-Store-Review-"
"Guidelines.html>`__ says they relaxed some of the `App Store review "
"guidelines <https://developer.apple.com/app-store/review/guidelines/>`__ to "
"allow any tool to be used, as long as the resulting binary does not download "
"any code, which means it should be OK to use the procedure described here "
"and cross-compiling the binary."
msgstr ""
"虽然可以在Linux环境中为iOS编译，但Apple对使用的工具(特别是硬件方面)非常严格，"
"几乎只允许他们的产品用于开发。 所以这不是官方**。 然而，2010年苹果公司的 `声"
"明 <http://www.apple.com/pr/library/2010/09/09Statement-by-Apple-on-App-"
"Store-Review-Guidelines.html>`__表示放宽了一些 `App Store评论指南 <https://"
"developer.apple.com/app-store/review/guidelines/>`__以允许使用任何工具，只要"
"生成的二进制文件不下载任何代码 ，这意味着可以使用此处描述的过程并交叉编译二进"
"制文件。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:27
msgid "Requirements"
msgstr "需求"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:29
msgid ""
"`XCode with the iOS SDK <https://developer.apple.com/xcode/download>`__ (a "
"dmg image)"
msgstr ""
"`带iOS SDK的XCode <https://developer.apple.com/xcode/download>`__(dmg图片)"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:31
msgid ""
"`Clang >= 3.5 <http://clang.llvm.org>`__ for your development machine "
"installed and in the ``PATH``. It has to be version >= 3.5 to target "
"``arm64`` architecture."
msgstr ""
"`clang> = 3.5 <http://clang.llvm.org>`__用于安装的开发机器和 ``PATH`` 。 它必"
"须是版本> = 3.5才能瞄准 ``arm64`` 架构。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:34
msgid ""
"`Fuse <https://github.com/libfuse/libfuse>`__ for mounting and umounting the "
"dmg image."
msgstr "`Fuse <https://github.com/libfuse/libfuse>`__用于安装和卸载dmg映像。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:36
msgid ""
"`darling-dmg <https://github.com/darlinghq/darling-dmg>`__, which needs to "
"be built from source. The procedure for that is explained below."
msgstr ""
"`darling-dmg <https://github.com/darlinghq/darling-dmg>`__，需要从源码构建。 "
"其程序解释如下。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:40
msgid ""
"For building darling-dmg, you'll need the development packages of the "
"following libraries: fuse, icu, openssl, zlib, bzip2."
msgstr ""
"要构建darling-dmg，您需要以下库的开发包:fuse，icu，openssl，zlib，bzip2。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:43
msgid ""
"`cctools-port <https://github.com/tpoechtrager/cctools-port>`__ for the "
"needed build tools. The procedure for building is quite peculiar and is "
"described below."
msgstr ""
"`cctools-port <https://github.com/tpoechtrager/cctools-port>`__用于所需的构建"
"工具。 建造程序非常奇特，如下所述。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:47
msgid "This also has some extra dependencies: automake, autogen, libtool."
msgstr "这也有一些额外的依赖:automake，autogen，libtool。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:50
msgid "Configuring the environment"
msgstr "配置环境"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:53
msgid "darling-dmg"
msgstr "亲爱的-DMG"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:55
msgid "Clone the repository on your machine:"
msgstr "克隆计算机上的存储库:"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:61
msgid "Build it:"
msgstr "建立它:"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:73
msgid "Preparing the SDK"
msgstr "准备SDK"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:75
msgid "Mount the XCode image:"
msgstr "挂载XCode图像:"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:84
msgid "Extract the iOS SDK:"
msgstr "解压缩iOS SDK:"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:93
msgid "Pack the SDK:"
msgstr "打包SDK:"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:101
msgid "Toolchain"
msgstr "工具链"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:103
msgid "Build cctools:"
msgstr "构建cctools:"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:111
msgid ""
"Copy the tools to a nicer place. Note that the SCons scripts for building "
"will look under ``usr/bin`` inside the directory you provide for the "
"toolchain binaries, so you must copy to such subdirectory, akin to the "
"following commands:"
msgstr ""
"将工具复制到更好的位置。 请注意，用于构建的SCons脚本将在您为工具链二进制文件"
"提供的目录中的“usr / bin”下查看，因此您必须复制到此类子目录，类似于以下命令:"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:121
msgid ""
"Now you should have the iOS toolchain binaries in ``/home/user/iostoolchain/"
"usr/bin``."
msgstr ""
"现在您应该在``/ home / user / iostoolchain / usr / bin``中拥有iOS工具链二进制"
"文件。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:125
msgid "Compiling Godot for iPhone"
msgstr "为iPhone编译Godot"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:127
msgid ""
"Once you've done the above steps, you should keep two things in your "
"environment: the built toolchain and the iPhoneOS SDK directory. Those can "
"stay anywhere you want since you have to provide their paths to the SCons "
"build command."
msgstr ""
"完成上述步骤后，您应该在您的环境中保留两件事:构建的工具链和iPhoneOS SDK目"
"录。 这些可以留在您想要的任何地方，因为您必须提供他们的路径到SCons构建命令。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:132
msgid ""
"For the iPhone platform to be detected, you need the ``OSXCROSS_IOS`` "
"environment variable defined to anything."
msgstr "要检测iPhone平台，您需要为任何事物定义 ``OSXCROSS_IOS`` 环境变量。"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:139
msgid ""
"Now you can compile for iPhone using SCons like the standard Godot way, with "
"some additional arguments to provide the correct paths:"
msgstr ""
"现在您可以使用像标准Godot方式的SCons编译iPhone，并提供一些额外的参数来提供正"
"确的路径:"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:148
msgid "Producing fat binaries"
msgstr "制作胖二进制文件"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:150
msgid ""
"Apple requires a fat binary with both architectures (``armv7`` and "
"``arm64``) in a single file. To do this, use the ``arm-apple-darwin11-lipo`` "
"executable. The following example assumes you are in the root Godot source "
"directory:"
msgstr ""
"Apple需要一个胖二进制文件，两个架构(``armv7``和``arm64``)在一个文件中。 为"
"此，请使用 ``arm-apple-darwin11-lipo`` 可执行文件。 以下示例假定您位于根Godot"
"源目录中:"

#: ../../docs/development/compiling/cross-compiling_for_ios_on_linux.rst:159
msgid ""
"Then you will have an iOS fat binary in ``bin/godot.iphone.opt.debug.fat``."
msgstr ""
"然后您将在``bin / godot.iphone.opt.debug.fat``中拥有一个iOS胖二进制文件。"
