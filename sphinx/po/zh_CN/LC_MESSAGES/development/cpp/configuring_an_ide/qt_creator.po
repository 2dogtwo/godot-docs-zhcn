# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-22 14:46+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:4
msgid "Qt Creator"
msgstr "Qt Creator"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:6
#, fuzzy
msgid ""
"`Qt Creator <https://doc.qt.io/qtcreator/index.html>`_ is a free, open "
"source IDE for all desktop platforms."
msgstr ""
"`KDevelop <https://www.kdevelop.org>`_ 是一个适用于所有桌面平台的免费开源"
"IDE。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:9
msgid "Importing the project"
msgstr "导入项目"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:11
#, fuzzy
msgid ""
"From the Qt Creator's main screen select **New Project > Import Project > "
"Import Existing Project**."
msgstr ""
"选择 *新建项目（New Project）* -> *导入项目（Import Project）* -> *导入现有项"
"目（Import Existing Project）*。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:17
#, fuzzy
msgid "Under **Location** select the Godot root folder."
msgstr ""
"设置 *标头搜索路径（Header Search Paths）* 为您的 Godot 源代码目录的绝对路径"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:23
#, fuzzy
msgid ""
"Next, you can choose which folders and files will be visible to the project. "
"While C/C++ files are added automatically, other extensions can be "
"potentially useful: ``*.py`` for buildsystem files, ``*.java`` for Android "
"platform development, ``*.mm`` for macOS platform development."
msgstr ""
"在这里，您可以选择对项目可见的文件夹和文件。C/C++文件会自动添加。潜在的有益补"
"充：\\*.py 为构建系统文件，\\*.java 用于Android开发，\\*.mm 用于MacOS。点"
"击“下一步”。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:32
msgid ""
"You can change this configuration later by right-clicking on your project "
"and selecting the **Edit Files...** option."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:40
msgid "Finish the import."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:41
msgid ""
"Open the ``project_name.includes`` file and add a line containing ``.`` to "
"it to correctly enable the code completion."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:48
#, fuzzy
msgid "From the left-side menu select **Projects** and open the **Build** tab."
msgstr "点击 *项目（Projects）* 并打开 *构建（Build）* 选项卡。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:49
#, fuzzy
msgid "Delete the predefined ``make`` build step."
msgstr "删除预先定义的 ``make`` 构建步骤。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:55
#, fuzzy
msgid ""
"Click **Add Build Step > Custom Process Step** to add a new build step with "
"the following settings:"
msgstr ""
"点击 *添加构建步骤（Add Build Step）* -> *自定义构建步骤（Custom Process "
"Step）*。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:59
msgid "Command"
msgstr "命令"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:59
#, fuzzy
msgid "**scons**"
msgstr "**scons**"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:61
msgid "Arguments"
msgstr "参数"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:61
#, fuzzy
msgid ""
"See :ref:`doc_introduction_to_the_buildsystem` for a full list of arguments."
msgstr ""
"先阅读:doc:`ui_introduction_to_the_ui_system`来学习Godot的用户界面系统是如何"
"工作的。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:68
#, fuzzy
msgid ""
"If the build fails with ``Could not start process \"scons\"``, it can mean "
"that ``scons`` is not in your ``PATH`` environment variable. In this case, "
"you'll have to specify the full path to the SCons binary."
msgstr ""
"在 *命令（Command）* 字段中输入 ``scons`` 。如果失败并提示 ``无法启动进程 "
"\"scons\"``，则可能意味着 ``scons`` 不在您的 ``PATH`` 环境变量中，因此您可能"
"必须使用SCons二进制文件的完整路径。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:73
#, fuzzy
msgid "Debugging the project"
msgstr "准备项目"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:75
#, fuzzy
msgid "From the left-side menu select **Projects** and open the **Run** tab."
msgstr "点击 *项目（Projects）* 并打开 *构建（Build）* 选项卡。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:76
msgid ""
"Under **Executable** specify the path to your executable located in the "
"``<Godot root directory>/bin`` folder. The name depends on your build "
"configuration, e.g. ``godot.x11.tools.64`` for 64-bit X11 platform with "
"``tools`` enabled. You can use ``%{buildDir}`` to reference the project "
"root, e.g: ``%{buildDir}/bin/godot.x11.opt.tools.64``."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:80
#, fuzzy
msgid ""
"If you want to run a specific project, specify its root folder under "
"**Working directory**."
msgstr ""
"如果要运行特定的游戏或项目，请将 *工作目录（Working directory）* 指向游戏目"
"录。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:81
#, fuzzy
msgid ""
"If you want to run the editor, add ``-e`` to the **Command line arguments** "
"field."
msgstr "如果要运行编辑器，请在 *命令行参数* 字段中添加 ``-e``。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:87
msgid ""
"To learn more about command line arguments, refer to the :ref:`command line "
"tutorial <doc_command_line_tutorial>`."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:91
msgid "Code style configuration"
msgstr "代码风格配置"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:93
#, fuzzy
msgid ""
"Developers must follow the project's :ref:`code style "
"<doc_code_style_guidelines>` and the IDE should help them follow it. By "
"default, Qt Creator uses spaces for indentation which doesn't match the "
"Godot code style guidelines. You can change this behavior by changing the "
"**Code Style** in **Options > C++**."
msgstr ""
"开发人员必须遵循项目的 :ref:`代码风格 <doc_code_style_guidelines>`，并且IDE应"
"该帮助他们做到这一点。默认情况下，Qt Creator确实使用空格进行缩进，这对于Godot"
"项目是不正确的。您可以通过在 *选项（Options）* -> *C++* 中更改“代码风格"
"（Code Style）”来更改此行为。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:102
#, fuzzy
msgid ""
"Click on **Edit** to change the current settings, then click on **Copy Built-"
"in Code Style** button to set a new code style. Set a name for it (e.g. "
"Godot) and change the Tab policy to be **Tabs Only**."
msgstr ""
"点击 *编辑（Edit）* 以更改当前设置，然后点击击 *复制内置代码风格（Copy Built-"
"in Code Style）* 按钮以设置新的代码风格。为它设置一个名称（例如Godot）并将制"
"表符（Tab）策略更改为 *仅制表符（Tabs Only）*。"

#: ../../docs/development/cpp/configuring_an_ide/qt_creator.rst:110
#, fuzzy
msgid ""
"If you run into any issues, ask for help in one of `Godot's community "
"channels <https://godotengine.org/community>`__."
msgstr ""
"有关这些渠道的简要概述也可在 `Godot网站 <https://godotengine.org/"
"community>`_ 上找到。"
