# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-01 14:18+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/cpp/variant_class.rst:4
msgid "Variant class"
msgstr "变量类"

#: ../../docs/development/cpp/variant_class.rst:7
msgid "About"
msgstr "关于"

#: ../../docs/development/cpp/variant_class.rst:9
msgid ""
"Variant is the most important datatype of Godot, it's the most important "
"class in the engine. A Variant takes up only 20 bytes and can store almost "
"any engine datatype inside of it. Variants are rarely used to hold "
"information for long periods of time, instead they are used mainly for "
"communication, editing, serialization and generally moving data around."
msgstr ""
"Variant 是 Godot引 擎中最重要的数据类型，也是引擎中最重要的类。 一个 Variant "
"对象值占用 20 个字节内存，但它能够存储引擎中几乎所有的数据类型。 Variant 很少"
"用于长时间保存信息，而主要用于通信，编辑，序列化 和移动数据。"

#: ../../docs/development/cpp/variant_class.rst:16
msgid "A Variant can:"
msgstr "一个变种可以:"

#: ../../docs/development/cpp/variant_class.rst:18
msgid "Store almost any datatype"
msgstr "存储任意类型的数据"

#: ../../docs/development/cpp/variant_class.rst:19
msgid ""
"Perform operations between many variants (GDScript uses Variant as its "
"atomic/native datatype)."
msgstr ""
"在多个 Variant 对象间执行操作符运算 (GDScript 使用 Variant 作为原生最基础的数"
"据类型)。"

#: ../../docs/development/cpp/variant_class.rst:21
msgid "Be hashed, so it can be compared quickly to other variants"
msgstr "经过哈希处理，因此它能够与其他 Variant 对象进行快速比较"

#: ../../docs/development/cpp/variant_class.rst:22
msgid "Be used to convert safely between datatypes"
msgstr "用于在数据类型之间安全地转换"

#: ../../docs/development/cpp/variant_class.rst:23
msgid ""
"Be used to abstract calling methods and their arguments (Godot exports all "
"its functions through variants)"
msgstr "用于抽象调用方法及其参数(Godot通过变体导出其所有函数)"

#: ../../docs/development/cpp/variant_class.rst:25
msgid "Be used to defer calls or move data between threads."
msgstr "用于推迟调用或在线程之间交换数据。"

#: ../../docs/development/cpp/variant_class.rst:26
msgid "Be serialized as binary and stored to disk, or transferred via network."
msgstr "支持序列化为二进制格式，能被存储到磁盘或通过网络进行传输。"

#: ../../docs/development/cpp/variant_class.rst:28
msgid ""
"Be serialized to text and use it for printing values and editable settings."
msgstr "能被序列化为文本，用于输出值和编辑配置。"

#: ../../docs/development/cpp/variant_class.rst:30
msgid "Work as an exported property, so the editor can edit it universally."
msgstr "作为导出的属性， 这样编辑器能够使用统一的方式进行修改值。"

#: ../../docs/development/cpp/variant_class.rst:31
msgid "Be used for dictionaries, arrays, parsers, etc."
msgstr "能被用于字典、数组、解析器等等常用工具中。"

#: ../../docs/development/cpp/variant_class.rst:33
msgid ""
"Basically, thanks to the Variant class, writing Godot itself was a much, "
"much easier task, as it allows for highly dynamic constructs not common of C+"
"+ with little effort. Become a friend of Variant today."
msgstr ""
"基本上归功于Variant类，编写 Godot 本身变成了一件更加轻松的工作，因为它允许使"
"用 C++ 中不常见的高度动态构造，并只需要写很少的代码。 今天就和 Variant 成为朋"
"友吧。"

#: ../../docs/development/cpp/variant_class.rst:38
#: ../../docs/development/cpp/variant_class.rst:57
msgid "References:"
msgstr "参阅资料:"

#: ../../docs/development/cpp/variant_class.rst:40
msgid ""
"`core/variant.h <https://github.com/godotengine/godot/blob/master/core/"
"variant.h>`__"
msgstr ""
"`core/variant.h <https://github.com/godotengine/godot/blob/master/core/"
"variant.h>`__"

#: ../../docs/development/cpp/variant_class.rst:43
msgid "Containers: Dictionary and Array"
msgstr "容器: 字典(Dictionary) 和 数组(Array)"

#: ../../docs/development/cpp/variant_class.rst:45
msgid ""
"Both are implemented using variants. A Dictionary can match any datatype "
"used as key to any other datatype. An Array just holds an array of Variants. "
"Of course, a Variant can also hold a Dictionary and an Array inside, making "
"it even more flexible."
msgstr "他们都是使用 Variant 实现的。"

#: ../../docs/development/cpp/variant_class.rst:50
msgid ""
"Modifications to a container will modify all references to it. A Mutex "
"should be created to lock it if multi threaded access is desired."
msgstr ""
"对容器的修改将修改对它的所有引用。 如果需要多线程访问，应创建互斥锁以锁定它。"

#: ../../docs/development/cpp/variant_class.rst:54
msgid ""
"Copy-on-write (COW) mode support for containers was dropped with Godot 3.0."
msgstr "Godot 3.0 删除了对容器的写时拷贝(COW)模式支持。"

#: ../../docs/development/cpp/variant_class.rst:59
msgid ""
"`core/dictionary.h <https://github.com/godotengine/godot/blob/master/core/"
"dictionary.h>`__"
msgstr ""
"`core/dictionary.h <https://github.com/godotengine/godot/blob/master/core/"
"dictionary.h>`__"

#: ../../docs/development/cpp/variant_class.rst:60
msgid ""
"`core/array.h <https://github.com/godotengine/godot/blob/master/core/array."
"h>`__"
msgstr ""
"`core/array.h <https://github.com/godotengine/godot/blob/master/core/array."
"h>`__"
