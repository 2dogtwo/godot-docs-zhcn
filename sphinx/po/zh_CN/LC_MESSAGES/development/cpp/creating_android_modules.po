# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-01 14:18+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/cpp/creating_android_modules.rst:4
msgid "Creating Android modules"
msgstr "创建Android模块"

#: ../../docs/development/cpp/creating_android_modules.rst:7
msgid "Introduction"
msgstr "简介"

#: ../../docs/development/cpp/creating_android_modules.rst:9
msgid ""
"Making video games portable is all fine and dandy, until mobile gaming "
"monetization shows up."
msgstr "在移动游戏货币化出现之前，制作便携式视频游戏一切都很好。"

#: ../../docs/development/cpp/creating_android_modules.rst:12
msgid ""
"This area is complex, usually a mobile game that monetizes needs special "
"connections to a server for things like:"
msgstr ""
"这个区域很复杂，通常是一个移动游戏，货币化需要与服务器的特殊连接，例如:"

#: ../../docs/development/cpp/creating_android_modules.rst:15
msgid "Analytics"
msgstr "分析"

#: ../../docs/development/cpp/creating_android_modules.rst:16
msgid "In-app purchases"
msgstr "应用内购买"

#: ../../docs/development/cpp/creating_android_modules.rst:17
msgid "Receipt validation"
msgstr "收据验证"

#: ../../docs/development/cpp/creating_android_modules.rst:18
msgid "Install tracking"
msgstr "安装跟踪"

#: ../../docs/development/cpp/creating_android_modules.rst:19
msgid "Ads"
msgstr "广告"

#: ../../docs/development/cpp/creating_android_modules.rst:20
msgid "Video ads"
msgstr "视频广告"

#: ../../docs/development/cpp/creating_android_modules.rst:21
msgid "Cross-promotion"
msgstr "交叉推广"

#: ../../docs/development/cpp/creating_android_modules.rst:22
msgid "In-game soft & hard currencies"
msgstr "游戏中的软硬货币"

#: ../../docs/development/cpp/creating_android_modules.rst:23
msgid "Promo codes"
msgstr "促销代码"

#: ../../docs/development/cpp/creating_android_modules.rst:24
msgid "A/B testing"
msgstr "A / B测试"

#: ../../docs/development/cpp/creating_android_modules.rst:25
msgid "Login"
msgstr "登录"

#: ../../docs/development/cpp/creating_android_modules.rst:26
msgid "Cloud saves"
msgstr "云保存"

#: ../../docs/development/cpp/creating_android_modules.rst:27
msgid "Leaderboards and scores"
msgstr "排行榜和分数"

#: ../../docs/development/cpp/creating_android_modules.rst:28
msgid "User support & feedback"
msgstr "用户支持和反馈"

#: ../../docs/development/cpp/creating_android_modules.rst:29
msgid "Posting to Facebook, Twitter, etc."
msgstr "发布到Facebook，Twitter等。"

#: ../../docs/development/cpp/creating_android_modules.rst:30
msgid "Push notifications"
msgstr "推送通知"

#: ../../docs/development/cpp/creating_android_modules.rst:32
msgid ""
"On iOS, you can write a C++ module and take advantage of the C++/ObjC "
"intercommunication."
msgstr "在iOS上，您可以编写C++模块并利用C++ / ObjC互通。"

#: ../../docs/development/cpp/creating_android_modules.rst:35
msgid ""
"On Android, interfacing with C++ through JNI (Java Native Interface) isn't "
"as convenient."
msgstr "在Android上，通过JNI(Java Native Interface)与C++连接并不方便。"

#: ../../docs/development/cpp/creating_android_modules.rst:38
msgid "Maybe REST?"
msgstr "也许REST？"

#: ../../docs/development/cpp/creating_android_modules.rst:40
msgid ""
"Most of these APIs allow communication via REST/JSON APIs. Godot has great "
"support for HTTP, HTTPS and JSON, so consider this as an option that works "
"on every platform. Only write the code once and you are set to go."
msgstr ""
"大多数这些API允许通过REST / JSON API进行通信。 Godot非常支持HTTP，HTTPS和"
"JSON，因此请将其视为可在每个平台上运行的选项。 只编写一次代码，然后就可以了。"

#: ../../docs/development/cpp/creating_android_modules.rst:46
msgid "Android module"
msgstr "Android模块"

#: ../../docs/development/cpp/creating_android_modules.rst:48
msgid ""
"Writing an Android module is similar to :ref:`doc_custom_modules_in_c++`, "
"but needs a few more steps."
msgstr ""
"编写Android模块类似于 :ref:`doc_custom_modules_in_c ++`，但需要更多步骤。"

#: ../../docs/development/cpp/creating_android_modules.rst:51
msgid ""
"Make sure you are familiar with building your own :ref:`Android export "
"templates <doc_compiling_for_android>`, as well as creating :ref:"
"`doc_custom_modules_in_c++`."
msgstr ""
"确保您熟悉构建自己的 :ref:`Android export templates "
"<doc_compiling_for_android>`，以及创建 :ref:`doc_custom_modules_in_c ++`。"

#: ../../docs/development/cpp/creating_android_modules.rst:55
msgid "config.py"
msgstr "config.py"

#: ../../docs/development/cpp/creating_android_modules.rst:57
msgid ""
"In the config.py for the module, some extra functions are provided for "
"convenience. First, it's often wise to detect if Android is the target "
"platform being built for and only enable building in this case:"
msgstr ""
"在模块的config.py中，为方便起见，提供了一些额外的功能。 首先，检测Android是否"
"是正在构建的目标平台并且仅在此情况下启用构建通常是明智的:"

#: ../../docs/development/cpp/creating_android_modules.rst:66
msgid ""
"If more than one platform can be built (typical if implementing the module "
"also for iOS), check manually for Android in the configure functions for "
"Android (or other platform-specific) code:"
msgstr ""
"如果可以构建多个平台(例如，如果也为iOS实现模块)，请在Android(或其他特定于平"
"台)代码的配置功能中手动检查Android:"

#: ../../docs/development/cpp/creating_android_modules.rst:80
msgid "Java singleton"
msgstr "Java单例"

#: ../../docs/development/cpp/creating_android_modules.rst:82
msgid ""
"An Android module will usually have a singleton class that will load it, "
"this class inherits from ``Godot.SingletonBase``. Resource identifiers for "
"any additional resources you have provided for the module will be in the "
"``com.godot.game.R`` class, so you'll likely want to import it."
msgstr ""
"Android模块通常会有一个单独的类来加载它，这个类继承自 ``Godot."
"SingletonBase`` 。 您为该模块提供的任何其他资源的资源标识符将位于“com.godot."
"game.R”类中，因此您可能希望导入它。"

#: ../../docs/development/cpp/creating_android_modules.rst:87
msgid "A singleton object template follows:"
msgstr "单例对象模板如下:"

#: ../../docs/development/cpp/creating_android_modules.rst:153
msgid ""
"Calling back to Godot from Java is a little more difficult. The instance ID "
"of the script must be known first, this is obtained by calling "
"``get_instance_ID()`` on the script. This returns an integer that can be "
"passed to Java."
msgstr ""
"从Java回调Godot有点困难。 首先必须知道脚本的实例ID，这是通过在脚本上调用 "
"``get_instance_ID()`` 获得的。 这将返回一个可以传递给Java的整数。"

#: ../../docs/development/cpp/creating_android_modules.rst:158
msgid ""
"From Java, use the ``calldeferred`` function to communicate back with Godot. "
"Java will most likely run in a separate thread, so calls are deferred:"
msgstr ""
"从Java中，使用 ``calldeferred`` 函数与Godot进行通信。 Java很可能在一个单独的"
"线程中运行，因此调用是延迟的:"

#: ../../docs/development/cpp/creating_android_modules.rst:165
msgid ""
"Add this singleton to the build of the project by adding the following to "
"config.py:"
msgstr "通过将以下内容添加到config.py，将此单例添加到项目的构建中:"

#: ../../docs/development/cpp/creating_android_modules.rst:181
msgid "AndroidManifest"
msgstr "AndroidManifest"

#: ../../docs/development/cpp/creating_android_modules.rst:183
msgid ""
"Some SDKs need custom values in AndroidManifest.xml. Permissions can be "
"edited from the Godot exporter so there is no need to add those, but maybe "
"other functionalities are needed."
msgstr ""
"某些SDK需要AndroidManifest.xml中的自定义值。 可以从Godot导出器编辑权限，因此"
"无需添加权限，但可能需要其他功能。"

#: ../../docs/development/cpp/creating_android_modules.rst:187
msgid ""
"Create the custom chunk of android manifest and put it inside the module, "
"add it like this:"
msgstr "创建android清单的自定义块并将其放在模块中，像这样添加:"

#: ../../docs/development/cpp/creating_android_modules.rst:204
msgid "Resources"
msgstr "资源"

#: ../../docs/development/cpp/creating_android_modules.rst:206
msgid ""
"In order to provide additional resources with your module you have to add "
"something like this:"
msgstr "为了向您的模块提供额外资源，您必须添加以下内容:"

#: ../../docs/development/cpp/creating_android_modules.rst:216
msgid ""
"Now you can refer to those resources by their id (``R.string.my_string``, "
"and the like) by importing the ``com.godot.game.R`` class in your Java code."
msgstr ""
"现在，您可以通过在Java代码中导入 ``com.godot.game.R`` 类，通过它们的id(``R."
"string.my_string``等)来引用这些资源。"

#: ../../docs/development/cpp/creating_android_modules.rst:220
msgid "Assets"
msgstr "资源"

#: ../../docs/development/cpp/creating_android_modules.rst:222
msgid ""
"Similarly, you can add any type of raw asset files to your app's asset "
"directory like this:"
msgstr ""
"同样，您可以将任何类型的原始资源文件添加到应用程序的资源目录中，如下所示:"

#: ../../docs/development/cpp/creating_android_modules.rst:231
msgid ""
"Assets don't have resource ids, but can be read with their file name as "
"streams of bytes with the help of the Android AssetManager class."
msgstr ""
"资源没有资源ID，但可以在Android AssetManager类的帮助下将其文件名作为字节流读"
"取。"

#: ../../docs/development/cpp/creating_android_modules.rst:235
msgid "SDK library"
msgstr "SDK库"

#: ../../docs/development/cpp/creating_android_modules.rst:237
msgid ""
"So, finally it's time to add the SDK library. The library can come in two "
"flavors, a JAR file or an Android project for ant. JAR is the easiest to "
"integrate, put it in the module directory and add it:"
msgstr ""
"所以，最后是时候添加SDK库了。 该库可以有两种版本，一种是JAR文件，另一种是针对"
"ant的Android项目。 JAR是最容易集成的，将它放在模块目录中并添加它:"

#: ../../docs/development/cpp/creating_android_modules.rst:257
msgid "SDK project"
msgstr "SDK项目"

#: ../../docs/development/cpp/creating_android_modules.rst:259
msgid ""
"When this is an Android project, things usually get more complex. Copy the "
"project folder inside the module directory and configure it:"
msgstr ""
"当这是一个Android项目时，事情通常会变得更加复杂。 复制模块目录中的项目文件夹"
"并进行配置:"

#: ../../docs/development/cpp/creating_android_modules.rst:266
msgid ""
"As of this writing, Godot uses minsdk 18 and target sdk 27. If this ever "
"changes, it should be reflected in the manifest template: `AndroidManifest."
"xml.template <https://github.com/godotengine/godot/blob/master/platform/"
"android/AndroidManifest.xml.template>`__"
msgstr ""
"在撰写本文时，Godot使用minsdk 18并定位sdk 27.如果这一点发生变化，它应该反映在"
"清单模板中: `AndroidManifest.xml.template <https://github.com/godotengine/"
"godot/blob/master/platform/android/AndroidManifest.xml.template>`__"

#: ../../docs/development/cpp/creating_android_modules.rst:270
msgid "Then, add the module folder to the project:"
msgstr "然后，将模块文件夹添加到项目中:"

#: ../../docs/development/cpp/creating_android_modules.rst:286
msgid "Building"
msgstr "建造"

#: ../../docs/development/cpp/creating_android_modules.rst:288
msgid ""
"As you probably modify the contents of the module, and modify your .java "
"inside the module, you need the module to be built with the rest of Godot, "
"so compile android normally."
msgstr ""
"由于您可能修改了模块的内容，并修改了模块中的.java，因此您需要使用Godot的其余"
"部分构建模块，因此请正常编译android。"

#: ../../docs/development/cpp/creating_android_modules.rst:296
msgid ""
"This will cause your module to be included, the .jar will be copied to the "
"java folder, the .java will be copied to the sources folder, etc. Each time "
"you modify the .java, scons must be called."
msgstr ""
"这将导致您的模块被包含，.jar将被复制到java文件夹，.java将被复制到sources文件"
"夹等。每次修改.java时，都必须调用scons。"

#: ../../docs/development/cpp/creating_android_modules.rst:300
msgid ""
"Afterwards, continue the steps for compiling android  :ref:"
"`doc_compiling_for_android`."
msgstr "然后，继续编译android :ref:`doc_compiling_for_android`的步骤。"

#: ../../docs/development/cpp/creating_android_modules.rst:303
msgid "Using the module"
msgstr "使用模块"

#: ../../docs/development/cpp/creating_android_modules.rst:305
msgid ""
"To use the module from GDScript, first enable the singleton by adding the "
"following line to project.godot:"
msgstr "要使用GDScript中的模块，首先通过向project.godot添加以下行来启用单例:"

#: ../../docs/development/cpp/creating_android_modules.rst:314
msgid ""
"More than one singleton module can be enabled by separating with commas:"
msgstr "通过逗号分隔可以启用多个单例模块:"

#: ../../docs/development/cpp/creating_android_modules.rst:322
msgid "Then request the singleton Java object from Globals like this:"
msgstr "然后从Globals请求单例Java对象，如下所示:"

#: ../../docs/development/cpp/creating_android_modules.rst:335
msgid "Troubleshooting"
msgstr "故障排除"

#: ../../docs/development/cpp/creating_android_modules.rst:338
msgid "Godot crashes upon load"
msgstr "Godot在装载时坠毁"

#: ../../docs/development/cpp/creating_android_modules.rst:340
msgid "Check ``adb logcat`` for possible problems, then:"
msgstr "检查``adb logcat``是否存在可能的问题，然后:"

#: ../../docs/development/cpp/creating_android_modules.rst:342
msgid "Make sure libgodot_android.so is in the ``libs/armeabi`` folder"
msgstr "确保libgodot_android.so位于``libs / armeabi``文件夹中"

#: ../../docs/development/cpp/creating_android_modules.rst:343
msgid ""
"Check that the methods used in the Java singleton only use simple Java "
"datatypes, more complex ones are not supported."
msgstr ""
"检查Java单例中使用的方法是否仅使用简单的Java数据类型，不支持更复杂的数据类"
"型。"

#: ../../docs/development/cpp/creating_android_modules.rst:347
msgid "Future"
msgstr "未来"

#: ../../docs/development/cpp/creating_android_modules.rst:349
msgid ""
"Godot has an experimental Java API Wrapper that allows to use the entire "
"Java API from GDScript."
msgstr "Godot有一个实验性的Java API Wrapper，允许使用GDScript的整个Java API。"

#: ../../docs/development/cpp/creating_android_modules.rst:352
msgid "It's simple to use and it's used like this:"
msgstr "它使用起来很简单，就像这样:"

#: ../../docs/development/cpp/creating_android_modules.rst:358
msgid ""
"This is most likely not functional yet, if you want to test it and help us "
"make it work, contact us through the `developer mailing list <https://groups."
"google.com/forum/#!forum/godot-engine>`__."
msgstr ""
"这很可能尚未实现，如果您想测试它并帮助我们使其工作，请通过 `开发人员邮件列表 "
"<https://groups.google.com/forum/#!forum/godot-engine>`__ 与我们联系。"
