# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-09 12:15+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:4
msgid "Multiple resolutions"
msgstr "多分辨率"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:7
msgid "Base size"
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:9
#, fuzzy
msgid ""
"A base size for the window can be specified in the project settings under "
"\"Display\", \"Window\"."
msgstr ""
"项目的基本屏幕分辨率可以在项目设置的 ``显示（display）``、``窗口（window）`` "
"中指定"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:14
msgid ""
"However, what it does is not completely obvious; the engine will *not* "
"attempt to switch the monitor to this resolution. Rather, think of this "
"setting as the \"design size\", i.e. the size of the area that you work with "
"in the editor. This setting corresponds directly to the size of the blue "
"rectangle in the 2D editor."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:20
msgid ""
"There is often a need to support devices with screen and window sizes that "
"are different from this base size. Godot offers many ways to control how the "
"viewport will be resized and stretched to different screen sizes."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:26
msgid "Resizing"
msgstr "调整尺寸"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:28
msgid ""
"There are several types of devices, with several types of screens, which in "
"turn have different pixel density and resolutions. Handling all of them can "
"be a lot of work, so Godot tries to make the developer's life a little "
"easier. The :ref:`Viewport <class_Viewport>` node has several functions to "
"handle resizing, and the root node of the scene tree is always a viewport "
"(scenes loaded are instanced as a child of it, and it can always be accessed "
"by calling ``get_tree().get_root()`` or ``get_node(\"/root\")``)."
msgstr ""
"市面上有着各种各样的设备, 拥有各种类型的屏幕, 依次有着不同的像素密度和分辨"
"率。处理所有的类型工作量巨大, 所以Godot试图让开发者的生活变得更简单。:ref:"
"`Viewport <class_Viewport>` 节点提供了几个处理尺寸调整的函数, 而场景树的根节"
"点始终是一个Viewport (场景将作为它的子节点被实例化, 并且始终可以通过调用"
"``get_tree().get_root()`` 或``get_node(\"/root\")`` 来访问它。"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:37
msgid ""
"In any case, while changing the root Viewport params is probably the most "
"flexible way to deal with the problem, it can be a lot of work, code and "
"guessing, so Godot provides a simple set of parameters in the project "
"settings to handle multiple resolutions."
msgstr ""
"在任何情况下, 虽然更改”根视区“的参数可能是解决问题的最灵活方法, 但这样做的可"
"能包含大量工作、大量代码和大量推测过程, 因此Godot在“项目设置”中提供了一组简单"
"的参数来处理多分辨率问题。"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:43
msgid "Stretch settings"
msgstr "拉伸设置"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:45
msgid ""
"Stretch settings are located in the project settings, it's just a bunch of "
"configuration variables that provide several options:"
msgstr "拉伸设置位于项目设置中, 它只是一系列提供多种选项的配置变量:"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:51
#, fuzzy
msgid "Stretch Mode"
msgstr "拉伸模式 （Stretch mode）"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:53
msgid ""
"The \"Stretch Mode\" setting defines how the base size is stretched to fit "
"the resolution of the window or screen."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:58
msgid ""
"The animations below use a \"base size\" of just 16×9 pixels to demonstrate "
"the effect of different stretch modes. A single sprite, also 16×9 pixels in "
"size, covers the entire viewport, and a diagonal :ref:`Line2D "
"<class_Line2D>` is added on top of it:"
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:68
msgid ""
"Stretch Mode = **Disabled** (default): No stretching happens. One unit in "
"the scene corresponds to one pixel on the screen. In this mode, the "
"\"Stretch Aspect\" setting has no effect."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:72
msgid ""
"This is a good option if you want full control over every screen pixel, and "
"is probably the best option for 3D games."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:77
#, fuzzy
msgid ""
"Stretch Mode = **2D**: In this mode, the size specified in display/width and "
"display/height in the project settings will be stretched to cover the whole "
"screen (taking the \"Stretch Aspect\" setting into account). This means that "
"everything will be rendered directly at the target resolution. 3D will be "
"largely unaffected, while in 2D there is no longer a 1:1 correspondence "
"between sprite pixels and screen pixels, which may result in scaling "
"artifacts."
msgstr ""
"** 2D **: 在这种模式下, 由”项目设置“中的display/width和display/height指定的分"
"辨率将被拉伸至覆盖整个屏幕。这意味着3D将不受影响 (只不过渲染到更高的分辨率), "
"2D也将渲染到更高的分辨率, 只是增大了。"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:85
msgid ""
"This is a good option if your 2D artwork has a sufficiently high resolution "
"and does not require pixel-perfect rendering. Consider enabling texture "
"filtering and mipmapping on your 2D textures and fonts."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:92
#, fuzzy
msgid ""
"Stretch Mode = **Viewport**: Viewport scaling means that the size of the "
"root :ref:`Viewport <class_Viewport>` is set precisely to the base size "
"specified in the \"Display\" section of the project settings. The scene is "
"rendered to this viewport first. Finally, this viewport is scaled to fit the "
"screen (taking the \"Stretch Aspect\" setting into account)."
msgstr ""
"** Viewport **: Viewport模式的缩放就有所不同, 根节点位置的:ref:`Viewport "
"<class_Viewport>`  被设置为“渲染目标”, 并且仍然精确按照“项目设置”中的 "
"``display/``部分指定的分辨率来渲染。最后, 这个viewport会被复制并缩放以适配屏"
"幕大小。当处理像素精确的游戏或者为了提高性能而渲染到低分辨率时，这个模式很有"
"用。"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:99
msgid ""
"This mode is useful when working with pixel-precise games, or for the sake "
"of rendering to a lower resolution for improving performance."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:105
#, fuzzy
msgid "Stretch Aspect"
msgstr "拉伸比例（Stretch aspect）"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:107
msgid ""
"The second setting is the stretch aspect. Note that this only takes effect "
"if \"Stretch Mode\" is set to something other than \"disabled\"."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:110
msgid ""
"In the animations below, you will notice gray and black areas. The black "
"areas are added by the engine and cannot be drawn into. The gray areas are "
"part of your scene, and can be drawn to. The gray areas correspond to the "
"region outside the blue frame you see in the 2D editor."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:115
#, fuzzy
msgid ""
"Stretch Aspect = **Ignore**: Ignore the aspect ratio when stretching the "
"screen. This means that the original resolution will be stretched to exactly "
"fill the screen, even if it's wider or narrower. This may result in "
"nonuniform stretching: things looking wider or taller than designed."
msgstr ""
"** Ignore **: 在拉伸屏幕时忽略长宽比。这意味着在适配新的屏幕尺寸时，原始分辨"
"率将被拉伸, 即使它更宽或更窄。"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:123
#, fuzzy
msgid ""
"Stretch Aspect = **Keep**: Keep aspect ratio when stretching the screen. "
"This means that the viewport retains its original size regardless of the "
"screen resolution, and black bars will be added to the top/bottom of the "
"screen (\"letterboxing\") or the sides (\"pillarboxing\")."
msgstr ""
"** Keep **: 拉伸屏幕时保持纵横比。这意味着在适配新的屏幕尺寸时, 将保留原始分"
"辨率, 黑色条状图将被添加到屏幕的两侧或顶部/底部。"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:129
msgid ""
"This is a good option if you know the aspect ratio of your target devices in "
"advance, or if you don't want to handle different aspect ratios."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:135
msgid ""
"Stretch Aspect = **Keep Width**: Keep aspect ratio when stretching the "
"screen. If the screen is wider than the base size, black bars are added at "
"the left and right (pillarboxing). But if the screen is taller than the base "
"resolution, the viewport will be grown in the vertical direction (and more "
"content will be visible to the bottom). You can also think of this as "
"\"Expand Vertically\"."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:142
msgid ""
"This is usually the best option for creating GUIs or HUDs that scale, so "
"some controls can be anchored to the bottom (:ref:`doc_size_and_anchors`)."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:148
msgid ""
"Stretch Aspect = **Keep Height**: Keep aspect ratio when stretching the "
"screen. If the the screen is taller than the base size, black bars are added "
"at the top and bottom (letterboxing). But if the screen is wider than the "
"base resolution, the viewport will be grown in the horizontal direction (and "
"more content will be visible to the right). You can also think of this as "
"\"Expand Horizontally\"."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:155
msgid ""
"This is usually the best option for 2D games that scroll horizontally (like "
"runners or platformers)."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:160
#, fuzzy
msgid ""
"Stretch Aspect = **Expand**: Keep aspect ratio when stretching the screen, "
"but keep neither the base width nor height. Depending on the screen aspect "
"ratio, the viewport will either be larger in the horizontal direction (if "
"the screen is wider than the base size) or in the vertical direction (if the "
"screen is taller than the original size)."
msgstr ""
"** Expand **: 拉伸屏幕时保持纵横比, 但不保持宽度和高度。视屏幕纵横比而定, 视"
"区将显示更多水平分辨率 (如果屏幕宽度比原始分辨率宽) 或更多垂直分辨率 (如果屏"
"幕高度比原始分辨率高)。"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:170
#, fuzzy
msgid "Stretch Shrink"
msgstr "拉伸设置"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:172
msgid ""
"The \"Shrink\" setting allows you to add an extra scaling factor on top of "
"what the \"Stretch\" options above already provide. The default value of 1 "
"means that no scaling occurs."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:176
msgid ""
"If, for example, you set \"Shrink\" to 4 and leave \"Stretch Mode\" on "
"\"Disabled\", each unit in your scene will correspond to 4×4 pixels on the "
"screen."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:180
msgid ""
"If \"Stretch Mode\" is set to something other than \"Disabled\", the size of "
"the root viewport is scaled down by the \"Shrink\" factor, and pixels in the "
"output are scaled up by the same amount. This is rarely useful for 2D games, "
"but can be used to increase performance in 3D games by rendering them at a "
"lower resolution."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:187
#, fuzzy
msgid "From scripts"
msgstr "自定义脚本"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:189
msgid ""
"To configure stretching at runtime from a script, use the ``get_tree()."
"set_screen_stretch()`` function (see :ref:`SceneTree."
"set_screen_stretch<class_SceneTree_set_screen_stretch>`)."
msgstr ""
