# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 15:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:4
msgid "Custom HTML page for Web export"
msgstr "导出自定义HTML页面"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:6
msgid ""
"While Web export templates provide a default HTML page fully capable of "
"launching the project without any further customization, it may be "
"beneficial to create a custom HTML page. While the game itself cannot be "
"directly controlled from the outside, such page allows to customize the "
"initialization process for the engine."
msgstr ""
"虽然Web导出模板提供了一个默认的HTML页面，完全能够启动项目而不需要任何进一步的"
"定制，但创建一个自定义的HTML页面可能是有益的。虽然游戏本身不能从外部直接控"
"制，但这种页面允许自定义引擎的初始化过程。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:11
msgid "Some use-cases where customizing the default page is useful include:"
msgstr "自定义默认页面有用的一些用例包括:"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:13
msgid "Loading files from a different directory than the page;"
msgstr "从其他目录加载文件；"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:14
msgid "Loading a ``.zip`` file instead of a ``.pck`` file as the main pack;"
msgstr "加载 ``.zip`` 文件而不是 ``.pck`` 文件作为主资源包；"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:15
msgid "Loading the engine from a different directory than the main pack file;"
msgstr "从主资源包文件以外的目录中加载引擎文件；"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:16
msgid ""
"Adding a click-to-play button so that games can be started in the fullscreen "
"mode;"
msgstr "添加一个“即点即玩”按钮，使游戏可以在全屏模式下启动；"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:17
msgid ""
"Loading some extra files before the engine starts, making them available in "
"the project file system as soon as possible;"
msgstr "在引擎启动之前加载一些额外的文件，以便稍后在文件系统中可用；"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:19
msgid ""
"Passing custom command line arguments, e.g. ``-s`` to start a ``MainLoop`` "
"script."
msgstr "传递自定义“命令行”参数，例如 ``-s`` 启动``MainLoop``脚本。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:21
msgid ""
"The default HTML page is available in the Godot Engine repository at `/misc/"
"dist/html/full-size.html <https://github.com/godotengine/godot/blob/master/"
"misc/dist/html/full-size.html>`__ and can be used as a reference "
"implementation. Another sample HTML page is available at `/misc/dist/html/"
"fixed-size.html <https://github.com/godotengine/godot/blob/master/misc/dist/"
"html/fixed-size.html>`__. It differs from the default one by having a fixed "
"size canvas area and an output widget below it."
msgstr ""
"默认的HTML页面可在Godot引擎存储库中找到，位于`/misc/dist/html/full-size.html "
"<https://github.com/godotengine/godot/blob/master/misc/dist/html/full- size."
"html>`__，可以用作参考实现。 另一个示例HTML页面位于`/misc/dist/html/fixed-"
"size.html <https://github.com/godotengine/godot/blob/master/misc/dist/html/"
"fixed-size.html>`。 __。 与默认设置不同的是，它具有一个固定大小的画布区域，并"
"且在其下方有一个输出小部件。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:27
msgid ""
"It is recommended to use developer tools provided by browser vendors to "
"debug exported projects. Output generated by the engine may be limited and "
"does not include WebGL errors."
msgstr ""
"建议使用浏览器供应商提供的开发者工具来调试导出的项目。引擎生成的输出可能是有"
"限的，并且不包括WebGL错误。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:32
msgid "Setup"
msgstr "场景布置"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:33
msgid ""
"As evident by the default HTML page, it is mostly a regular HTML document. "
"To work with Godot projects it needs to be fully realized, to have a control "
"code that calls the :js:class:`Engine` class, and to provide places for "
"several placeholders, which are replaced with their actual values during "
"export."
msgstr ""
"从默认的HTML页面可以看出，它主要是一个普通的HTML文档。要与Godot项目配合使用，"
"需要完全实现，要有一个调用 :js:class:`Engine` 类的控制代码，并提供几个占位符"
"的位置，在导出时用实际值替换。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:40
msgid ""
"``$GODOT_BASENAME``: The base name from the *Export Path*, as set up in the "
"export options; suffixes are omitted (e.g. ``game.html`` becomes ``game``). "
"This variable can be used to generate a path to the main JavaScript file ``"
"$GODOT_BASENAME.js``, which provides the :js:class:`Engine` class. A splash "
"image shown during the booting process can be accessed using this variable "
"as well: ``$GODOT_BASENAME.png``."
msgstr ""
"``$GODOT_BASENAME``。*导出路径*中的基本名称，在导出选项中设置；后缀被省略（例"
"如，``game.html``变成``game``）。这个变量可以用来生成主JavaScript文件``"
"$GODOT_BASENAME.js``的路径，它提供了:js:class:`Engine`类。开机过程中显示的"
"flash图片也可以使用这个变量来访问。``$GODOT_BASENAME.png``。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:47
msgid ""
"``$GODOT_PROJECT_NAME``: The project name as defined in the Project Settings."
msgstr "``$GODOT_PROJECT_NAME``：项目设置中定义的项目名称。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:50
msgid ""
"``$GODOT_HEAD_INCLUDE``: A custom string to include in the HTML document "
"just before the end of the ``<head>`` tag. It is customized in the export "
"options under the *Html / Head Include* section. While you fully control the "
"HTML page you create, this variable can be useful for configuring parts of "
"the HTML ``head`` element from the Godot Editor, e.g. for different Web "
"export presets."
msgstr ""
"``$GODOT_HEAD_INCLUDE``。在HTML文件中，在``<head>``标签结尾前包含的一个自定义"
"字符串。它是在*Html / Head Include*部分的导出选项中自定义的。虽然你可以完全控"
"制你所创建的HTML页面，但这个变量对于从Godot Editor中配置HTML``head``元素的部"
"分内容很有用，例如，对于不同的Web导出预设。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:56
msgid ""
"``$GODOT_DEBUG_ENABLED``: A flag that tells if this is a debug build, or "
"not. This variable is substituted by strings ``true`` and ``false``, and can "
"be used to disable debug branches within your control code."
msgstr ""
"``$GODOT_DEBUG_ENABLED`` : 这是一个标志，用于说明这是否是一个调试构建。这个变"
"量被字符串 ``true`` 和 ``false`` 代替，可以用来禁用控制代码中的调试分支。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:60
msgid ""
"When the custom page is ready, it can be selected in the export options "
"under the *Html / Custom Html Shell* section."
msgstr ""
"当自定义页面准备好后，可以在 *Html / Custom Html Shell* 部分的导出选项中选"
"择。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:64
#, fuzzy
msgid "Starting the project"
msgstr "设置项目"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:65
msgid ""
"To be able to start the game, you need to write a script that initializes "
"the engine — the control code. This process consists of three steps, though "
"some of them can be skipped and left for a default behavior."
msgstr ""
"为了能够启动游戏，你需要写一个初始化引擎的脚本--控制代码。这个过程包括三个步"
"骤，尽管其中一些步骤可以跳过，并留下一个默认的行为。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:69
msgid ""
"First, the engine must be loaded, then it needs to be initialized, and after "
"this the project can finally be started. You can perform every of these "
"steps manually and with great control. However, in the simplest case all you "
"need to do is to create an instance of the :js:class:`Engine` class and then "
"call the :js:meth:`engine.startGame` method."
msgstr ""
"首先，引擎必须被加载，然后需要初始化，在这之后，项目才能最终启动。你可以手动"
"执行这些步骤，而且能控制许多东西。然而，在最简单的情况下，你需要做的就是创建"
"一个 :js:class:`Engine` 类的实例，然后调用 :js:meth:`engine.startGame` 方法。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:82
msgid ""
"This snippet of code automatically loads and initializes the engine before "
"starting the game. It uses the given path to the executable to deduce the "
"path to load the engine. The :js:meth:`engine.startGame` method is "
"asynchronous and returns a ``Promise``. This allows your control code to "
"track if the game was loaded correctly without blocking execution or relying "
"on polling."
msgstr ""
"这段代码在启动游戏前自动加载并初始化引擎。它使用给定的可执行文件路径来推断加"
"载引擎的路径。 :js:meth:`engine.startGame` 方法是异步的，并返回一个 "
"``Promise`` 。这允许你的控制代码跟踪游戏是否被正确加载，而无需阻止执行或依赖"
"轮询。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:87
msgid ""
"In case your project needs to have special arguments passed to it by the "
"start-up script, :js:meth:`engine.startGame` can be replaced by :js:meth:"
"`engine.start`. This method takes an arbitrary list of string arguments. As "
"it does not have a defined list of arguments, :js:meth:`engine.start` cannot "
"automatically load the engine."
msgstr ""
"如果你的项目需要由启动脚本传递给它特殊的参数， :js:meth:`engine.startGame` 可"
"以被 :js:meth:`engine.start` 替换。这个方法接受一个任意的字符串参数列表。由于"
"它没有定义参数列表，所以 :js:meth:`engine.start` 不能自动加载引擎。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:92
msgid ""
"To load the engine manually the :js:meth:`Engine.load` static method must be "
"called. As this method is static, multiple engine instances can be spawned "
"with the exact same ``basePath``. If an instance requires a different "
"``basePath``, you can call the :js:meth:`engine.init` method with that path "
"before starting the game."
msgstr ""
"要手动加载引擎，必须调用 :js:meth:`Engine.load` 静态方法。因为这个方法是静态"
"的，所以可以用完全相同的 ``basePath`` 生成多个引擎实例。如果一个实例需要一个"
"不同的 ``basePath`` ，你可以在启动游戏之前使用该路径调用 :js:meth:`engine."
"init` 方法。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:97
msgid ""
"Multiple instances cannot be spawned by default, as the engine is "
"immediately unloaded after it is initialized. To prevent this from happening "
"the :js:meth:`engine.setUnloadAfterInit` method can be called. It is still "
"possible to unload the engine manually afterwards by calling the :js:meth:"
"`Engine.unload` static method. Unloading the engine frees browser memory by "
"unloading files that are no longer needed once the instance is initialized."
msgstr ""
"默认情况下不能生成多个实例，因为引擎在初始化后会立即卸载。为了防止这种情况发"
"生，可以调用 :js:meth:`engine.setUnloadAfterInit` 方法。之后仍然可以通过调"
"用 :js:meth:`Engine.unload` 静态方法手动卸载引擎。卸载引擎通过卸载实例初始化"
"后不再需要的文件来释放浏览器内存。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:102
msgid ""
"To correctly load the engine on some hosting providers and network "
"configurations you may need to change the default filename extension by "
"using :js:meth:`Engine.setWebAssemblyFilenameExtension`. By default, the "
"extension is assumed to be ``wasm``. If your hosting provider blocks this "
"extension, this static method can be used to change it to something that is "
"supported."
msgstr ""
"为了在某些主机提供商和网络配置上正确加载引擎，你可能需要通过使用 :js:meth:"
"`Engine.setWebAssemblyFilenameExtension` 来更改默认的文件名扩展。默认情况下，"
"扩展名被假定为 ``wasm`` 。如果你的主机提供商屏蔽了这个扩展名，可以使用这个静"
"态方法将其改为支持的扩展名。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:113
msgid ""
"If a different filename extension is used, some web servers may "
"automatically set the MIME-type of the file to something other than :"
"mimetype:`application/wasm`. In that case some start-up optimizations may be "
"skipped."
msgstr ""
"如果使用了不同的文件扩展名，一些网络服务器可能会自动将文件的MIME类型设置为 :"
"mimetype:`application/wasm` 以外的其他类型。在这种情况下，一些启动优化可能会"
"被跳过。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:118
#, fuzzy
msgid "Customizing the behavior"
msgstr "自定义构建"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:119
msgid ""
"In the Web environment several methods can be used to guarantee that the "
"game will work as intended."
msgstr "在Web环境下，可以使用几种方法来保证游戏能够按照预期的方式运行。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:121
msgid ""
"If you target a specific version of WebGL, or just want to check if WebGL is "
"available at all, you can call the :js:meth:`Engine.isWebGLAvailable` "
"method. It optionally takes an argument that allows to test for a specific "
"major version of WebGL."
msgstr ""
"如果您的目标是WebGL的特定版本，或者只是想检查WebGL是否可用，您可以调用 :js:"
"meth:`Engine.isWebGLAvailable` 方法。它可以选择接受一个参数，允许测试WebGL的"
"特定主要版本。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:125
msgid ""
"As the real executable file does not exist in the Web environment, the "
"engine only stores a virtual filename formed from the base name of loaded "
"engine files. This value affects the output of the :ref:`OS."
"get_executable_path() <class_OS_method_get_executable_path>` method and "
"defines the name of the automatically started main pack. The :js:meth:"
"`engine.setExecutableName` method can be used to override this value."
msgstr ""
"由于真正的可执行文件在Web环境中并不存在，引擎只存储一个由加载的引擎文件的基名"
"形成的虚拟文件名。这个值会影响 :ref:`OS.get_executable_path() "
"<class_OS_method_get_executable_path>` 方法的输出，并定义自动启动的主包名"
"称。 :js:meth:`engine.setExecutableName` 方法可以用来覆盖这个值。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:131
msgid ""
"If your project requires some files to be available the moment it is loaded, "
"you can preload them by calling the :js:meth:`engine.preloadFile` method "
"with a path to a file or by providing it with an ``ArrayBuffer`` object. In "
"case of the ``ArrayBuffer``, or one of its views, a second argument must be "
"specified to define an internal path for the loaded resource."
msgstr ""
"如果你的项目需要一些文件在加载时就可以使用，你可以通过调用 :js:meth:`engine."
"preloadFile` 方法来预加载它们，并提供一个文件的路径，或者提供一个 "
"``ArrayBuffer`` 对象。如果是 ``ArrayBuffer`` 或它的一个视图，必须指定第二个参"
"数来定义加载资源的内部路径。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:137
msgid "Customizing the presentation"
msgstr "自定义演示文稿"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:138
msgid ""
"Several methods can be used to further customize the look and behavior of "
"the game on your page."
msgstr "有几种方法可以用来进一步定制您页面上的游戏外观和行为。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:140
msgid ""
"By default, the first canvas element on the page is used for rendering. To "
"use a different canvas element the :js:meth:`engine.setCanvas` method can be "
"used. It requires a reference to the DOM element itself."
msgstr ""
"默认情况下，页面上的第一个画布元素被用于渲染。要使用不同的canvas元素，可以使"
"用 :js:meth:`engine.setCanvas` 方法。它需要一个DOM元素本身的引用。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:149
msgid ""
"If the width and height of this canvas element differ from values set in the "
"project settings, it will be resized on the project start. This behavior can "
"be disabled by calling the :js:meth:`engine.setCanvasResizedOnStart` method."
msgstr ""
"如果这个canvas元素的宽度和高度与项目设置中设置的值不同，它将在项目启动时被调"
"整大小。这个行为可以通过调用 :js:meth:`engine.setCanvasResizedOnStart` 方法来"
"禁止。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:153
msgid ""
"If your game takes some time to load, it may be useful to display a custom "
"loading UI which tracks the progress. This can be achieved with the :js:meth:"
"`engine.setProgressFunc` method which allows to set up a callback function "
"to be called regularly as the engine loads new bytes."
msgstr ""
"如果你的游戏需要一些时间来加载，那么显示一个自定义的加载UI来跟踪进度可能会很"
"有用。这可以通过 :js:meth:`engine.setProgressFunc` 方法来实现，该方法允许设置"
"一个回调函数，在引擎加载新字节时定期调用。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:164
msgid ""
"Be aware that in some cases ``total`` can be ``0``. This means that it "
"cannot be calculated."
msgstr "请注意，在某些情况下， ``total`` 可能是 ``0`` 。这意味着无法计算。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:166
msgid ""
"If your game supports multiple languages, the :js:meth:`engine.setLocale` "
"method can be used to set a specific locale, provided you have a valid "
"language code string. It may be good to use server-side logic to determine "
"which languages a user may prefer. This way the language code can be taken "
"from the ``Accept-Language`` HTTP header, or determined by a GeoIP service."
msgstr ""
"如果你的游戏支持多种语言，只要你有一个有效的语言代码字符串，就可以使用 :js:"
"meth:`engine.setLocale` 方法来设置一个特定的语言环境。使用服务器端的逻辑来确"
"定用户可能更喜欢哪种语言可能是个好办法。这样一来，语言代码可以从 ``Accept-"
"Language`` HTTP头中获取，或者由GeoIP服务确定。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:172
msgid "Debugging"
msgstr "调试"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:173
msgid ""
"To debug exported projects, it may be useful to read the standard output and "
"error streams generated by the engine. This is similar to the output shown "
"in the editor console window. By default, standard ``console.log`` and "
"``console.warn`` are used for the output and error streams respectively. "
"This behavior can be customized by setting your own functions to handle "
"messages."
msgstr ""
"要调试导出的项目，可能需要读取引擎生成的标准输出和错误流。这与编辑器控制台窗"
"口中显示的输出类似。默认情况下，标准的 ``console.log`` 和 ``console."
"warning`` 分别用于输出和错误流。这种行为可以通过设置自己的函数来处理消息来定"
"制。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:178
msgid ""
"Use the :js:meth:`engine.setStdoutFunc` method to set a callback function "
"for the output stream. Default behavior is similar to this:"
msgstr ""
"使用 :js:meth:`engine.setStdoutFunc` 方法为输出流设置回调函数。默认行为与此类"
"似:"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:188
msgid ""
"Use the :js:meth:`engine.setStderrFunc` method to set a callback function "
"for the error stream. Default behavior is similar to this:"
msgstr ""
"使用 :js:meth:`engine.setStderrFunc` 方法为错误流设置回调函数。默认行为与此类"
"似:"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:198
msgid ""
"When handling the engine output keep in mind, that it may not be desirable "
"to print it out in the finished product. To control whether or not the "
"current execution is actually a debug build you can use ``"
"$GODOT_DEBUG_ENABLED`` placeholder."
msgstr ""
"当处理引擎输出时，请记住，在生产环境中打印出来可能并不可取，如果要控制当前执"
"行是否真的是调试构建，可以使用 ``$GODOT_DEBUG_ENABLED`` 占位符。"

#: ../../docs/tutorials/platform/customizing_html5_shell.rst:202
msgid ""
"Further debugging options and a low level access to the execution "
"environment are available in a form of Emscripten's ``Module`` object. It "
"can be accessed using the :js:attr:`engine.rtenv` property on the engine "
"instance."
msgstr ""
"进一步的调试选项和对执行环境的低阶访问，可以通过Emscripten的 ``Module`` 对象"
"的形式获得。它可以通过引擎实例上的 :js:attr:`engine.rtenv` 属性来访问。"
