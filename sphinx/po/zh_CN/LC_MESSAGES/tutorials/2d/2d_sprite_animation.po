# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-27 13:49+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:4
msgid "2D Sprite animation"
msgstr "2D Sprite animation (2D 精灵动画)"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:7
msgid "Introduction"
msgstr "简介"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:9
#, fuzzy
msgid ""
"In this tutorial, you'll learn how to create 2D animated characters with the "
"AnimatedSprite class and the AnimationPlayer. Typically, when you create or "
"download an animated character, it will come in one of two ways: as "
"individual images or as a single sprite sheet containing all the animation's "
"frames.  Both can be animated in Godot with the AnimatedSprite class."
msgstr ""
"在本教程中，你会学到创建二维动画角色的两种不同方法。通常，当你创建或下载动画"
"化的角色时，它将以两种方式出现：作为单独的图像或一个包含所有动画帧的单张"
"sprite sheet(sprite 清单)。根据你拥有的资源类型，可以选择以下解决方案之一。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:14
#, fuzzy
msgid ""
"First, we'll use :ref:`AnimatedSprite <class_AnimatedSprite>` to animate a "
"collection of individual images. Then we will animate a sprite sheet using "
"this class.  Finally, we will learn another way to animate a sprite sheet "
"with :ref:`AnimationPlayer <class_AnimationPlayer>` and the *Animation* "
"property of :ref:`Sprite <class_Sprite>`."
msgstr ""
"首先，我们将使用 :ref:`AnimatedSprite <class_AnimatedSprite>`把一组互相独立的"
"图片做成动画。然后, 对于sprite sheet，我们将使用 :ref:`AnimationPlayer "
"<class_AnimationPlayer>` 以及 :ref:`Sprite <class_Sprite>` 的*Animation(动"
"画)*属性。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:19
#, fuzzy
msgid ""
"Art for the following examples by https://opengameart.org/users/ansimuz and "
"by https://opengameart.org/users/tgfcoder"
msgstr "以下示例的美术素材由https://opengameart.org/users/ansimuz提供"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:23
msgid "Individual images with AnimatedSprite"
msgstr "各自独立的图像与AnimatedSprite (动画化精灵)"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:25
msgid ""
"In this scenario, you have a collection of images, each containing one of "
"your character's animation frames. For this example, we'll use the following "
"animation:"
msgstr ""
"在这个情况下，你有一组图像，每一个都包含你角色的动画的一帧。对于这个例子，我"
"们将使用以下动画："

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:31
msgid ""
"You can download the images here: :download:`run_animation.zip <files/"
"run_animation.zip>`"
msgstr ""
"你可以在此处下载此示例项目: :download:`2D_movement_demo.zip "
"<files/2D_movement_demo.zip>`"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:34
msgid ""
"Unzip the images and place them in your project folder. Set up your scene "
"tree with the following nodes:"
msgstr "解压缩这些图像并将它们放在项目文件夹中。使用以下节点布置场景树："

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:39
#: ../../docs/tutorials/2d/2d_sprite_animation.rst:143
msgid ""
"The root node could also be :ref:`Area2D <class_Area2D>` or :ref:"
"`RigidBody2D <class_RigidBody2D>`. The animation will still be made in the "
"same way. Once the animation is completed, you can assign a shape to the "
"CollisionShape2D. See :ref:`Physics Introduction <doc_physics_introduction>` "
"for more information."
msgstr ""
"根节点也可以是 :ref:`Area2D <class_Area2D>` 或 :ref:`RigidBody2D "
"<class_RigidBody2D>` 。动画仍然会以同样的方式制作。一旦动画完成，你可以为"
"CollisionShape2D形状分配一个形状。更多信息请参见 :ref:`Physics Introduction "
"<doc_physics_introduction>` 。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:46
msgid ""
"Now select the ``AnimatedSprite`` and in its *SpriteFrames* property, select "
"\"New SpriteFrames\"."
msgstr ""
"现在选择``AnimatedSprite``，并在它的 *SpriteFrames(精灵帧)* 属性中，选择“新"
"建 SpriteFrames”。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:51
msgid ""
"Click on the new SpriteFrames resource and you'll see a new panel appear at "
"the bottom of the editor window:"
msgstr ""
"点击新的 SpriteFrames 资源，你会看到一个新的面板出现在编辑器窗口的底部："

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:56
msgid ""
"From the FileSystem dock on the left side, drag the 8 individual images into "
"the center part of the SpriteFrames panel. On the left side, change the name "
"of the animation from \"default\" to \"run\"."
msgstr ""
"从左边的文件系统面板，将这8张独立的图片拖放到SpriteFrames(精灵帧)面板的中间部"
"分。在左边，将动画名称从“默认”更改为“奔跑”。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:62
msgid ""
"Back in the Inspector, check the box for the *Playing* property. You should "
"now see the animation playing in the viewport. However, it is a bit slow. To "
"fix this, change the *Speed (FPS)* setting in the SpriteFrames panel to 10."
msgstr ""
"回到属性面板，在 *Playing(播放)* 属性的复选框里打勾。您现在应该可以看到在视区"
"中播放的动画。然而，它有点慢。为了解决这个问题，更改SpriteFrames面板中的 *速"
"度 (FPS)* 为10。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:66
msgid ""
"You can add additional animations by clicking the \"New Animation\" button "
"and adding additional images."
msgstr "你可以通过点击“新建动画”按钮并添加其他的图像，来添其他的动画。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:70
msgid "Controlling the animation"
msgstr "控制动画"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:72
msgid ""
"Once the animation is complete, you can control the animation via code using "
"the ``play()`` and ``stop()`` methods. Here is a brief example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"动画完成后，你可以通过代码中的 ``play()`` 和 ``stop()`` 方法控制动画。这里有"
"一个简单的例子, 按住右方向键播放动画，松开后就停下。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:90
#, fuzzy
msgid "Sprite sheet with AnimatedSprite"
msgstr "Sprite sheet (精灵清单)和 AnimationPlayer(动画播放器)"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:92
msgid ""
"You can also easily animate from a sprite sheet with the class "
"``AnimatedSprite``.  We will use this public domain sprite sheet:"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:96
#, fuzzy
msgid ""
"Right-click the image and choose \"Save Image As\" to download it, and then "
"copy the image into your project folder."
msgstr "右键单击图片，选择“图片另存为”下载图片，然后将图片复制到项目文件夹中。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:98
#, fuzzy
msgid ""
"Set up your scene tree the same way you did previously when using individual "
"images.  Select the ``AnimatedSprite`` and in its *SpriteFrames* property, "
"select \"New SpriteFrames\"."
msgstr ""
"现在选择``AnimatedSprite``，并在它的 *SpriteFrames(精灵帧)* 属性中，选择“新"
"建 SpriteFrames”。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:101
#, fuzzy
msgid ""
"Click on the new SpriteFrames resource.  This time, when the bottom panel "
"appears, select \"Add frames from a Sprite Sheet\"."
msgstr ""
"点击新的 SpriteFrames 资源，你会看到一个新的面板出现在编辑器窗口的底部："

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:105
msgid "You will be prompted to open a file.  Select your sprite sheet."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:107
msgid ""
"A new window will open, showing your sprite sheet.  The first thing you will "
"need to do is to change the number of vertical and horizontal images in your "
"sprite sheet.  In this sprite sheet, we have four images horizontally and "
"two images vertically."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:111
msgid ""
"Next, select the frames from the sprite sheet that you want to include in "
"your animation.  We will select the top four, then click \"Add 4 frames\" to "
"create the animation."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:115
msgid ""
"You will now see your animation under the list of animations in the bottom "
"panel.  Double click on default to change the name of the animation to jump."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:119
msgid ""
"Finally, check Playing on the  AnimatedSprite in the inspector to see your "
"frog jump!"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:125
msgid "Sprite sheet with AnimationPlayer"
msgstr "Sprite sheet (精灵清单)和 AnimationPlayer(动画播放器)"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:127
#, fuzzy
msgid ""
"Another way that you can animate when using a sprite sheet is to use a "
"standard :ref:`Sprite <class_Sprite>` node to display the texture, and then "
"animating the change from texture to texture with :ref:`AnimationPlayer "
"<class_AnimationPlayer>`."
msgstr ""
"如果你有一个包含所有动画帧的sprite sheet，你不能轻易使用``AnimatedSprite``。"
"相反，您可以使用一个基础的: :ref:`Sprite <class_Sprite>`节点来显示纹理，然后"
"用 :ref:`AnimationPlayer <class_AnimationPlayer>`对纹理之间的变化进行动画化。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:131
msgid "Consider this sprite sheet, which contains 6 frames of animation:"
msgstr "考虑一下这个sprite sheet，包含6帧动画："

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:135
msgid ""
"Right-click the image and choose \"Save Image As\" to download, then copy "
"the image into your project folder."
msgstr "右键单击图片，选择“图片另存为”下载图片，然后将图片复制到项目文件夹中。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:138
msgid ""
"Our goal is to display these images one after another in a loop. Start by "
"setting up your scene tree:"
msgstr "我们的目的是，循环着一个接一个地显示这些图像。首先布置你的场景树："

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:150
msgid ""
"Drag the spritesheet into the Sprite's *Texture* property, and you'll see "
"the whole sheet displayed on the screen. To slice it up into individual "
"frames, expand the *Animation* section in the Inspector and set the "
"*Hframes* to ``6``. *Hframes* and *Vframes* are the number of horizontal and "
"vertical frames in your sprite sheet."
msgstr ""
"将sprite sheet拖拽到Sprite的 *Texture* 属性里，你会看到整个清单显示在屏幕上。"
"要把它分割成单独的帧，在属性面板中展开 *Animation* 部分，将 *Hframes* 设置为"
"``6``。*Hframes* 和 *Vframes*是sprite sheet中水平和垂直帧的数量。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:158
msgid ""
"Now try changing the value of the *Frame* property. You'll see that it "
"ranges from ``0`` to ``5`` and the image displayed by the Sprite changes "
"accordingly. This is the property we'll be animating."
msgstr ""
"现在尝试更改 *Frame* 属性的值。你可以看到它的范围从``0`` 到 ``5``，Sprite 所"
"显示的图像也随之改变。这就是我们想要动画化的属性。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:162
msgid ""
"Select the ``AnimationPlayer`` and click the \"Animation\" button followed "
"by \"New\". Name the new animation \"walk\". Set the animation length to "
"``0.6`` and click the \"Loop\" button so that our animation will repeat."
msgstr ""
"选中 ``AnimationPlayer`` ，然后点击 \"动画\" 按钮，然后点击“新建”按钮。将新动"
"画命名为“walk”。将动画长度设置为``0.6``，点击 \"Loop\" 按钮，让动画重复播放。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:168
msgid ""
"Now select the ``Sprite`` node and click the key icon to add a new track."
msgstr "现在选中``Sprite``节点，并单击钥匙图标，添加一个新的动画轨道(track)。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:172
msgid ""
"Continue adding frames at each point in the timeline (``0.1`` seconds by "
"default), until you have all the frames from 0 to 5. You'll see the frames "
"actually appearing in the animation track:"
msgstr ""
"继续在时间轴的每一点添加帧(默认为``0.1``秒)，直到你得到了从0到5的所有帧。你会"
"看到这些帧出现在动画轨道(animation track)上："

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:178
msgid "Press \"Play\" on the animation to see how it looks."
msgstr "按下动画上的“播放”键，看看效果如何。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:183
msgid "Controlling an AnimationPlayer animation"
msgstr "控制AnimationPlayer动画"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:185
msgid ""
"Like with AnimatedSprite, you can control the animation via code using the "
"``play()`` and ``stop()`` methods. Again, here is an example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"正如AnimationSprite一样，你可以通过代码中的``play()`` 和 ``stop()``方法控制动"
"画。同样, 这里有一个简单的例子, 按住右方向键键播放动画，松开后就停下。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:202
msgid ""
"If updating both an animation and a separate property at once (for example, "
"a platformer may update the sprite's ``h_flip``/``v_flip`` properties when a "
"character turns while starting a 'turning' animation), it's important to "
"keep in mind that ``play()`` isn't applied instantly. Instead, it's applied "
"the next time the :ref:`AnimationPlayer <class_AnimationPlayer>` is "
"processed. This may end up being on the next frame, causing a 'glitch' "
"frame, where the property change was applied but the animation was not. If "
"this turns out to be a problem, after calling ``play()``, you can call "
"``advance(0)`` to update the animation immediately."
msgstr ""
"如果同时更新一个动画和一个其他的属性(比如说, 一个平台跳跃游戏可能会更新sprite"
"的``h_flip``/``v_flip``属性然后同时开始一个\"转身\"动画), 要记住``play()``不"
"是即时生效的。它是在下次 :ref:`AnimationPlayer <class_AnimationPlayer>` 被处"
"理时生效的。这可能要到下一帧, 导致现在这一帧变成\"错误\"帧-应用了属性的变化, "
"但动画还没有开始。如果这会造成麻烦的话, 在调用``play()``后, 你可以调用"
"``advance(0)`` 来立即开始播放动画。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:213
msgid "Summary"
msgstr "总结"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:215
#, fuzzy
msgid ""
"These examples illustrate the two classes you can use in Godot for 2D "
"animation. ``AnimationPlayer`` is a bit more complex than "
"``AnimatedSprite``, but it provides additional functionality, since you can "
"also animate other properties like position or scale. The class "
"``AnimationPlayer`` can also be used with an ``AnimatedSprite``.  Experiment "
"to see what works best for your needs."
msgstr ""
"这些例子展示了在二维动画中最常见的两种情况。每种方法都有其好处。使用 "
"``AnimationPlayer`` 有点复杂，但是提供了额外的功能，因为你也可以为其他像位置"
"或大小这样的属性做动画，如位置或比例。试验一下，看看哪种最适合你的需要。"
