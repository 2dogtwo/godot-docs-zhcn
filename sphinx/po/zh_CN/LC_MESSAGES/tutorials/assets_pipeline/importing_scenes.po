# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 18:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Importing 3D scenes"
msgstr "导入 3D 场景"

msgid "Godot scene importer"
msgstr "Godot 场景导入器"

msgid ""
"When dealing with 3D assets, Godot has a flexible and configurable importer."
msgstr "在处理 3D 资产时，Godot 有一个非常灵活且可配置的导入器。"

#, fuzzy
msgid ""
"Godot works with *scenes*. This means that the entire scene being worked on "
"in your favorite 3D modeling software will be transferred as close as "
"possible."
msgstr ""
"Godot 使用的是\\ *场景*\\ 。这意味着用你最喜爱的 3D 软件制作的整个场景可以尽"
"可能完整地被导入。"

msgid "Godot supports the following 3D *scene file formats*:"
msgstr "Godot 支持以下 3D *场景文件格式*\\ ："

msgid ""
"glTF 2.0 **(recommended)**. Godot has full support for both text (``.gltf``) "
"and binary (``.glb``) formats."
msgstr ""
"glTF 2.0 **（推荐使用）**\\ 。Godot 完全支持文本（\\ ``.gltf``\\ ）和二进制"
"（ ``.glb`` ）格式。"

msgid ""
"``.blend`` (Blender). This works by calling Blender to export to glTF in a "
"transparent manner (requires Blender to be installed)."
msgstr ""

msgid "DAE (COLLADA), an older format that is fully supported."
msgstr "DAE（COLLADA）：一个比较老的格式，当然完全支持。"

#, fuzzy
msgid ""
"OBJ (Wavefront) format + their MTL material files. This is also fully "
"supported, but pretty limited given the format's limitations (no support for "
"pivots, skeletons, animations, UV2, PBR materials, ...)."
msgstr ""
"OBJ（Wavefront）格式 + 他们的 MTL 材质文件。这也是完全支持的，但相当有限（不"
"支持轴心、骨架、动画、PBR 材质……）。"

#, fuzzy
msgid ""
"FBX, supported via `FBX2glTF <https://github.com/godotengine/FBX2glTF>`__ "
"integration. This requires installing an external program that links against "
"the proprietary FBX SDK, so we recommend using other formats listed above "
"(if suitable for your workflow)."
msgstr ""
"FBX，通过 Open Asset Import library 提供支持。然而，FBX 是专属格式，所以如果"
"无特殊要求的话，推荐使用上面列出的格式。"

#, fuzzy
msgid ""
"Copy the scene file together with the textures and mesh data (if separate) "
"to the project repository, then Godot will do a full import when focusing "
"the editor window."
msgstr "只需将场景文件和纹理一起复制到项目仓库中，Godot 就可以完全导入。"

#, fuzzy
msgid "3D asset direction conventions"
msgstr "命名约定"

msgid ""
"Godot uses a right-handed, Y-is-up coordinate system, with the -Z axis as "
"the camera's forward direction. This is the same as OpenGL. This implies "
"that +Z is back, +X is right, and -X is left for a camera."
msgstr ""

msgid ""
"The convention for 3D assets is to face the opposite direction as the "
"camera, so that characters and other assets are facing the camera by "
"default. This convention is extremely common in 3D modeling applications, "
"and is `codified in glTF as part of the glTF 2.0 specification <https://"
"registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#coordinate-system-and-"
"units>`__. This means that for oriented 3D assets (such as characters), the "
"+Z axis is the direction of the front, so -Z is the rear, +X is the left "
"side, and -X is the right side for a 3D asset. In Blender, this means that "
"+Y is rear and -Y is front for an asset."
msgstr ""

msgid ""
"When rotating an oriented 3D asset in Godot, use the ``use_model_front`` "
"option on the ``look_at`` functions, and use the ``Vector3.MODEL_*`` "
"constants to perform calculations in the oriented asset's local space."
msgstr ""

msgid ""
"For assets without an intrinsic front side or forward direction, such as a "
"game map or terrain, take note of the cardinal directions instead. The "
"convention in Godot and the vast majority of other applications is that +X "
"is east and -X is west. Due to Godot's right-handed Y-is-up coordinate "
"system, this implies that +Z is south and -Z is north. In Blender, this "
"means that +Y is north and -Y is south."
msgstr ""

#, fuzzy
msgid "Exporting glTF 2.0 files from Blender (recommended)"
msgstr "从 Blender 导出 glTF 2.0 文件"

#, fuzzy
msgid "There are 3 ways to export glTF files from Blender:"
msgstr "有两种方法可以导出服务项目:"

msgid "As a glTF binary file (``.glb``)."
msgstr ""

msgid "As a glTF text-based file with embedded binary data (``.gltf`` file)"
msgstr ""

msgid ""
"As a glTF text-based file with separate binary data and textures (``.gltf`` "
"file + ``.bin`` file + textures)."
msgstr ""

#, fuzzy
msgid ""
"glTF binary files (``.glb``) are the smallest of the three options. They "
"include the mesh and textures set up in Blender. When brought into Godot the "
"textures are part of the object's material file."
msgstr ""
"二进制 glTF 文件是三个选项中最小的。包含在 Blender 中设置的网格和纹理。当放"
"入 Godot 中时，纹理将成为对象材质文件的一部分。"

#, fuzzy
msgid ""
"glTF embedded files (``.gltf``) function the same way as binary files. They "
"don't provide extra functionality in Godot, and shouldn't be used since they "
"have a larger file size."
msgstr ""
"嵌入式 glTF 文件的功能与二进制文件相同。没有在 Godot 中提供额外的功能，也不应"
"使用，因为它们的文件较大。"

#, fuzzy
msgid ""
"There are two reasons to use glTF with the textures separate. One is to have "
"the scene description in a text based format and the binary data in a "
"separate binary file. This can be useful for version control if you want to "
"review changes in a text-based format. The second is you need the texture "
"files separate from the material file. If you don't need either of those, "
"glTF binary files are fine."
msgstr ""
"将 glTF 与纹理分开使用的原因有两个。一是将场景以基于文本的格式和二进制数据，"
"描述在单独的二进制文件中。这对于版本控制很有用，如果要基于文本格式评审更改。"
"二是您需要将纹理文件与材质文件分开。如果您不需要这些 glTF 二进制文件的任一"
"个，也可以。"

msgid ""
"If your model contains blend shapes (also known as \"shape keys\" and "
"\"morph targets\"), your glTF export setting **Export Deformation Bones "
"Only** needs to be configured to **Enabled** under the Animation export "
"configurations."
msgstr ""

msgid "Exporting non-deforming bones anyway will lead to incorrect shading."
msgstr ""

msgid ""
"Blender versions older than 3.2 do not export emissive textures with the "
"glTF file. If your model uses one and you're using an older version of "
"Blender, it must be brought in separately."
msgstr ""
"3.2 之前版本的 Blender 导出的 glTF 文件不会包含放射光纹理。如果您的模型使用这"
"种文字，并且你使用的是较旧版本的 Blender，则必须单独分开导入。"

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""
"默认情况下，Blender 在材质上禁用背面剔除，导出材质时匹配其在 Blender 中的渲染"
"方式。这意味着 Godot 中的材质会将其剔除模式设置为 **Disabled**\\ 。这会降低性"
"能，因为背面将被渲染，即使它们不可见。要解决此问题，请在 Blender 的材质选项卡"
"中启用 **Backface Culling** ，然后再次将场景导出为 glTF。"

msgid "Importing ``.blend`` files directly within Godot"
msgstr ""

msgid ""
"This functionality requires Blender 3.0 or later. For best results, we "
"recommend using Blender 3.5 or later, as it includes many fixes to the glTF "
"exporter."
msgstr ""

msgid ""
"It is **strongly** recommended to use an official Blender release downloaded "
"from blender.org, as opposed to a Linux distribution package or Flatpak. "
"This avoids any issues related to packaging, such as different library "
"versions that can cause incompatibilities or sandboxing restrictions."
msgstr ""

msgid ""
"From Godot 4.0 onwards, the editor can directly import ``.blend`` files by "
"calling `Blender <https://www.blender.org/>`__'s glTF export functionality "
"in a transparent manner."
msgstr ""

msgid ""
"This allows you to iterate on your 3D scenes faster, as you can save the "
"scene in Blender, alt-tab back to Godot then see your changes immediately. "
"When working with version control, this is also more efficient as you no "
"longer need to commit a copy of the exported glTF file to version control."
msgstr ""

msgid ""
"To use ``.blend`` import, you must install Blender before opening the Godot "
"editor (if opening a project that already contains ``.blend`` files). If you "
"keep Blender installed at its default location, Godot should be able to "
"detect its path automatically. If this isn't the case, configure the path to "
"the directory containing the Blender executable in the Editor Settings "
"(**Filesystem > Import > Blender > Blender 3 Path**)."
msgstr ""

msgid ""
"If you keep ``.blend`` files within your project folder but don't want them "
"to be imported by Godot, disable **Filesystem > Import > Blender > Enabled** "
"in the advanced Project Settings."
msgstr ""

msgid ""
"When working in a team, keep in mind using ``.blend`` files in your project "
"will require *all* team members to have Blender installed. While Blender is "
"a free download, this may add friction when working on the project. ``."
"blend`` import is also not available on the Android and web editors, as "
"these platforms can't call external programs."
msgstr ""

msgid ""
"If this is problematic, consider using glTF scenes exported from Blender "
"instead."
msgstr ""

msgid "Exporting DAE files from Blender"
msgstr "从 Blender 导出的 DAE 文件"

#, fuzzy
msgid ""
"Blender has built-in COLLADA support, but it does not work properly for the "
"needs of game engines and shouldn't be used as-is. However, scenes exported "
"with the built-in Collada support may still work for simple scenes without "
"animation."
msgstr ""
"Blender 也有内置的 COLLADA 支持，但不能满足游戏引擎的需求，不能完全正常工作，"
"不应该使用。"

#, fuzzy
msgid ""
"For complex scenes or scenes that contain animations, Godot provides a "
"`Blender plugin <https://github.com/godotengine/collada-exporter>`_ that "
"will correctly export COLLADA scenes for use in Godot."
msgstr ""
"Godot 提供了一个 `Blender 插件 <https://github.com/godotengine/collada-"
"exporter>`_\\ ，可以正确导出 COLLADA 场景供 Godot 使用。它不能在 Blender 2.8 "
"或更新的版本中使用，但有计划在未来更新它。"

#, fuzzy
msgid "Importing OBJ files in Godot"
msgstr "在 Godot 3.0+ 中导入资产"

msgid ""
"OBJ is one of the simplest 3D formats out there, so Godot should be able to "
"import most OBJ files successfully. However, OBJ is also a very limited "
"format: it doesn't support skinning, animation, UV2 or PBR materials."
msgstr ""

#, fuzzy
msgid "There are 2 ways to use OBJ meshes in Godot:"
msgstr "设置背景的方法有很多种:"

msgid ""
"Load them directly in a MeshInstance3D node, or any other property that "
"expects as mesh (such as GPUParticles3D). This is the default mode."
msgstr ""

msgid ""
"Change their import mode to **OBJ as Scene** in the Import dock then restart "
"the editor. This allows you to use the same import options as glTF or "
"Collada scenes, such as unwrapping UV2 on import (for :ref:"
"`doc_using_lightmap_gi`)."
msgstr ""

msgid ""
"Blender 3.4 and later can export RGB vertex colors in OBJ files (this is a "
"nonstandard extension of the OBJ format). Godot is able to import those "
"vertex colors since Godot 4.0, but they will not be displayed on the "
"material unless you enable **Vertex Color > Use As Albedo** on the material."
msgstr ""

msgid ""
"Vertex colors from OBJ meshes keep their original color space once imported "
"(sRGB/linear), but their brightness is clamped to 1.0 (they can't be "
"overbright)."
msgstr ""

#, fuzzy
msgid "Importing FBX files in Godot"
msgstr "在 Godot 3.0+ 中导入资产"

msgid ""
"When opening a project containing FBX scenes, you will see a dialog asking "
"you to configure FBX import. Click the link in the dialog to download a "
"fbx2gltf binary, then extract the ZIP archive, place the binary anywhere you "
"wish, then specify its path in the dialog."
msgstr ""

msgid ""
"If you keep ``.fbx`` files within your project folder but don't want them to "
"be imported by Godot, disable **Filesystem > Import > FBX > Enabled** in the "
"advanced Project Settings."
msgstr ""

msgid ""
"The full installation process for using FBX in Godot is described on the "
"`FBX import page of the Godot website <https://godotengine.org/fbx-"
"import>`__."
msgstr ""

msgid "Exporting textures separately"
msgstr "单独导出纹理"

#, fuzzy
msgid ""
"While textures can be exported with a model in certain file formats, such as "
"glTF 2.0, you can also export them separately. Godot uses PBR (physically "
"based rendering) for its materials, so if a texturing program can export PBR "
"textures they can work in Godot. This includes the `Substance suite <https://"
"www.substance3d.com/>`__, `ArmorPaint (open source) <https://armorpaint.org/"
">`__, and `Material Maker (open source) <https://github.com/RodZill4/"
"material-maker>`__."
msgstr ""
"虽然纹理可以和模型一起以某些文件格式导出, 如glTF 2.0, 但您也可以单独导出它们."
"Godot的材质使用PBR(基于物理的渲染), 所以如果一个纹理程序可以导出PBR纹理, 它们"
"就可以在Godot中工作. 这包括 `Substance suite <https://www.substance3d.com/"
">`__ , `ArmorPaint (开源) <https://armorpaint.org/>`__ , `Material Maker (开"
"源) <https://github.com/RodZill4/material-maker>`__ ."

#, fuzzy
msgid ""
"For more information on Godot's materials, see :ref:"
"`doc_standard_material_3d`."
msgstr "关于 Godot 材质的更多信息，请参阅 :ref:`doc_spatial_material`\\ 。"

msgid "Exporting considerations"
msgstr "导出注意事项"

msgid ""
"Since GPUs can only render triangles, meshes that contain quads or N-gons "
"have to be *triangulated* before they can be rendered. Godot can triangulate "
"meshes on import, but results may be unpredictable or incorrect, especially "
"with N-gons. Regardless of the target application, triangulating *before* "
"exporting the scene will lead to more consistent results and should be done "
"whenever possible."
msgstr ""
"由于 GPU 只能渲染三角形，所以包含四边形或 N 边形的网格必须在渲染前进行\\ *三"
"角剖分*\\ 。Godot 可以在导入时对网格进行三角剖分，但结果可能无法预测或不正"
"确，特别是对于 N 边形。无论目标应用是什么，在导出场景之前进行三角剖分会得到更"
"一致的结果，因此应该尽可能地进行三角剖分。"

#, fuzzy
msgid ""
"To avoid issues with incorrect triangulation after importing in Godot, it is "
"recommended to make the 3D modeling software triangulate objects on its own. "
"In Blender, this can be done by adding a Triangulate modifier to your "
"objects and making sure **Apply Modifiers** is checked in the export dialog. "
"Alternatively, depending on the exporter, you may be able to find and enable "
"a **Triangulate Faces** option in the export dialog."
msgstr ""
"为了避免在Godot中导入后出现三角剖分不正确的问题, 建议让3D DCC自行对对象进行三"
"角剖分. 在Blender中, 可以通过向对象添加三角剖分修改器, 并确保在导出对话框中勾"
"选 **应用修改器** 来实现. 另外, 根据导出工具的不同, 您可以在导出对话框中找到"
"并启用 **Triangulate Faces** 选项."

#, fuzzy
msgid ""
"To avoid issues with 3D selection in the editor, it is recommended to apply "
"the object transform in the 3D modeling software before exporting the scene."
msgstr ""
"为了避免在编辑器中出现3D选择的问题, 建议在导出场景前在3D DCC中应用对象变换."

msgid ""
"It is important that the mesh is not deformed by bones when exporting. Make "
"sure that the skeleton is reset to its T-pose or default rest pose before "
"exporting with your favorite 3D editor."
msgstr ""
"在输出时，网格不会被骨骼变形很重要。在使用您喜欢的 3D 编辑器进行导出之前，请"
"确保将骨架重置为其 T 姿势或默认的放松姿势。"

#, fuzzy
msgid "Lighting considerations"
msgstr "导出注意事项"

msgid ""
"While it's possible to import lights from a 3D scene using the glTF, ``."
"blend`` or Collada formats, it's generally advised to design the scene's "
"lighting in the Godot editor after importing the scene."
msgstr ""

msgid ""
"This allows you to get a more accurate feel for the final result, as "
"different engines will render lights in a different manner. This also avoids "
"any issues with lights appearing excessively strong or faint as a result of "
"the import process."
msgstr ""

msgid "Import workflows"
msgstr "导入工作流程"

msgid ""
"Since Godot can only save its own scene format (``.tscn``/``.scn``), Godot "
"cannot save over the original 3D scene file (which uses a different format). "
"This is also a safer approach as it avoids making accidental changes to the "
"source file."
msgstr ""

msgid ""
"To allow customizing the scene and its materials, Godot's scene importer "
"allows for different workflows regarding how data is imported."
msgstr ""

#, fuzzy
msgid "Import dock after selecting a 3D scene in the FileSystem dock"
msgstr "在文件系统停靠面板中找到脚本."

msgid ""
"This import process is customizable using 3 separate interfaces, depending "
"on your needs:"
msgstr ""

msgid ""
"The **Import** dock, after selecting the 3D scene by clicking it once in the "
"FileSystem dock."
msgstr ""

msgid ""
"The **Advanced Import Settings** dialog, which can be accessed by double-"
"clicking the 3D scene in the FileSystem dock or by clicking the **Advanced…"
"** button in the Import dock. This allows you to customize per-object "
"options in Godot."
msgstr ""

msgid ""
":ref:`Import hints <doc_importing_3d_scenes_import_hints>`, which are "
"special suffixes added to object names in the 3D modeling software. This "
"allows you to customize per-object options in the 3D modeling software."
msgstr ""

msgid ""
"For basic customization, using the Import dock suffices. However, for more "
"complex operations such as defining material overrides on a per-material "
"basis, you'll need to use the Advanced Import Settings dialog, import hints, "
"or possibly both."
msgstr ""

#, fuzzy
msgid "Using the Import dock"
msgstr "使用节点面板"

msgid ""
"The following options can be adjusted in the Import dock after selecting a "
"3D scene in the FileSystem dock:"
msgstr ""

msgid ""
"**Root Type:** The node type to use as a root node. Using node types that "
"inherit from Node3D is recommended. Otherwise, you'll lose the ability to "
"position the node directly in the 3D editor."
msgstr ""

msgid ""
"**Root Name:** The name of the root node in the imported scene. This is "
"generally not noticeable when instancing the scene in the editor (or drag-"
"and-dropping from the FileSystem dock), as the root node is renamed to match "
"the filename in this case."
msgstr ""

msgid ""
"**Apply Root Scale:** If enabled, **Root Scale** will be *applied* on the "
"meshes and animations directly, while keeping the root node's scale to the "
"default `(1, 1, 1)`. This means that if you add a child node later on within "
"the imported scene, it won't be scaled. If disabled, **Root Scale** will "
"multiply the scale of the root node instead."
msgstr ""

#, fuzzy
msgid "**Meshes**"
msgstr "网格"

msgid ""
"**Ensure Tangents:** If checked, generate vertex tangents using `Mikktspace "
"<http://www.mikktspace.com/>`__ if the input meshes don't have tangent data. "
"When possible, it's recommended to let the 3D modeling software generate "
"tangents on export instead on relying on this option. Tangents are required "
"for correct display of normal and height maps, along with any material/"
"shader features that require tangents. If you don't need material features "
"that require tangents, disabling this can reduce output file size and speed "
"up importing if the source 3D file doesn't contain tangents."
msgstr ""

msgid ""
"**Generate LODs:** If checked, generates lower detail variants of the mesh "
"which will be displayed in the distance to improve rendering performance. "
"Not all meshes benefit from LOD, especially if they are never rendered from "
"far away. Disabling this can reduce output file size and speed up importing. "
"See :ref:`doc_mesh_lod` for more information."
msgstr ""

msgid ""
"**Create Shadow Meshes:** If checked, enables the generation of shadow "
"meshes on import. This optimizes shadow rendering without reducing quality "
"by welding vertices together when possible. This in turn reduces the memory "
"bandwidth required to render shadows. Shadow mesh generation currently "
"doesn't support using a lower detail level than the source mesh (but shadow "
"rendering will make use of LODs when relevant)."
msgstr ""

msgid ""
"**Light Baking:** Configures the meshes' :ref:`global illumination mode "
"<class_GeometryInstance3D_property_gi_mode>` in the 3D scene. If set to "
"**Static Lightmaps**, sets the meshes' GI mode to **Static** and generates "
"UV2 on import for :ref:`lightmap baking <doc_using_lightmap_gi>`."
msgstr ""

msgid ""
"**Lightmap Texel Size:** Only visible if **Light Baking** is set to **Static "
"Lightmaps**. Controls the size of each texel on the baked lightmap. A "
"smaller value results in more precise lightmaps, at the cost of larger "
"lightmap sizes and longer bake times."
msgstr ""

#, fuzzy
msgid "**Skins**"
msgstr "**天空:**"

msgid ""
"**Use Named Skins:** If checked, use named :ref:`Skins <class_Skin>` for "
"animation. The :ref:`class_MeshInstance3D` node contains 3 properties of "
"relevance here: a skeleton NodePath pointing to the Skeleton3D node (usually "
"``..``), a mesh, and a skin:"
msgstr ""

msgid ""
"The :ref:`class_Skeleton3D` node contains a list of bones with names, their "
"pose and rest, a name and a parent bone."
msgstr ""

msgid ""
"The mesh is all of the raw vertex data needed to display a mesh. In terms of "
"the mesh, it knows how vertices are weight-painted and uses some internal "
"numbering often imported from 3D modeling software."
msgstr ""

msgid ""
"The skin contains the information necessary to bind this mesh onto this "
"Skeleton3D. For every one of the internal bone IDs chosen by the 3D modeling "
"software, it contains two things. Firstly, a Matrix known as the Bind Pose "
"Matrix, Inverse Bind Matrix, or IBM for short. Secondly, the Skin contains "
"each bone's name (if **Use Named Skins** is enabled), or the bone's index "
"within the Skeleton3D list (if **Use Named Skins** is disabled)."
msgstr ""

msgid ""
"Together, this information is enough to tell Godot how to use the bone poses "
"in the Skeleton3D node to render the mesh from each MeshInstance3D. Note "
"that each MeshInstance3D may share binds, as is common in models exported "
"from Blender, or each MeshInstance3D may use a separate Skin object, as is "
"common in models exported from other tools such as Maya."
msgstr ""

#, fuzzy
msgid "**Animation**"
msgstr "动画"

msgid "**Import:** If checked, import animations from the 3D scene."
msgstr ""

msgid ""
"**FPS:** The number of frames per second to use for baking animation curves "
"to a series of points with linear interpolation. It's recommended to "
"configure this value to match the value you're using as a baseline in your "
"3D modeling software. Higher values result in more precise animation with "
"fast movement changes, at the cost of higher file sizes and memory usage. "
"Thanks to interpolation, there is usually not much benefit in going above 30 "
"FPS (as the animation will still appear smooth at higher rendering "
"framerates)."
msgstr ""

msgid ""
"**Trimming:** Trim the beginning and end of animations if there are no "
"keyframe changes. This can reduce output file size and memory usage with "
"certain 3D scenes, depending on the contents of their animation tracks."
msgstr ""

msgid ""
"**Remove Immutable Tracks:** Remove animation tracks that only contain "
"default values. This can reduce output file size and memory usage with "
"certain 3D scenes, depending on the contents of their animation tracks."
msgstr ""

#, fuzzy
msgid "**Import Script**"
msgstr "**JavaScript**"

msgid ""
"**Path:** Path to an import script, which can run code *after* the import "
"process has completed for custom processing. See :ref:"
"`doc_importing_3d_scenes_import_script` for more information."
msgstr ""

msgid "**glTF**"
msgstr ""

msgid ""
"**Embedded Texture Handling:** Controls how textures embedded within glTF "
"scenes should be handled. **Discard All Textures** will not import any "
"textures, which is useful if you wish to manually set up materials in Godot "
"instead. **Extract Textures** extracts textures to external images, "
"resulting in smaller file sizes and more control over import options. "
"**Embed as Basis Universal** and **Embed as Uncompressed** keeps the "
"textures embedded in the imported scene, with and without VRAM compression "
"respectively."
msgstr ""

msgid "Using the Advanced Import Settings dialog"
msgstr ""

msgid ""
"The first tab you'll see is the **Scene** tab. The options available in the "
"panel on the right are identical to the Import dock, but you have access to "
"a 3D preview. The 3D preview can be rotated by holding down the left mouse "
"button then dragging the mouse. Zoom can be adjusted using the mouse wheel."
msgstr ""

msgid "Advanced Import Settings dialog (Scene tab)"
msgstr ""

msgid ""
"Advanced Import Settings dialog (Scene tab). Credit: `Modern Arm Chair 01 - "
"Poly Haven <https://polyhaven.com/a/modern_arm_chair_01>`__"
msgstr ""

#, fuzzy
msgid "**Configuring node import options**"
msgstr "配置导入的译文"

msgid ""
"You can select individual nodes that compose the scene while in the "
"**Scene** tab using the tree view at the left:"
msgstr ""

msgid "Selecting a node in the Advanced Import Settings dialog (Scene tab)"
msgstr ""

msgid "Selecting a node in the Advanced Import Settings dialog (Materials tab)"
msgstr ""

msgid "This exposes several per-node import options:"
msgstr ""

msgid ""
"**Skip Import:** If checked, the node will not be present in the final "
"imported scene. Enabling this disables all other options."
msgstr ""

msgid ""
"**Generate > Physics:** If checked, generates a PhysicsBody3D *parent* node "
"with collision shapes that are *siblings* to the MeshInstance3D node."
msgstr ""

msgid ""
"**Generate > NavMesh:** If checked, generates a NavigationRegion3D *child* "
"node for :ref:`navigation <doc_navigation_overview_3d>`. **Mesh + NavMesh** "
"will keep the original mesh visible, while **NavMesh Only** will only import "
"the navigation mesh (without a visual representation). **NavMesh Only** is "
"meant to be used when you've manually authored a simplified mesh for "
"navigation."
msgstr ""

msgid ""
"**Generate > Occluder:** If checked, generates an OccluderInstance3D "
"*sibling* node for :ref:`occlusion culling <doc_occlusion_culling>` using "
"the mesh's geometry as a basis for the occluder's shape. **Mesh + Occluder** "
"will keep the original mesh visible, while **Occluder Only** will only "
"import the occluder (without a visual representation). **Occluder Only** is "
"meant to be used when you've manually authored a simplified mesh for "
"occlusion culling."
msgstr ""

msgid ""
"These options are only visible if some of the above options are enabled:"
msgstr ""

msgid ""
"**Physics > Body Type:** Only visible if **Generate > Physics** is enabled. "
"Controls the PhysicsBody3D that should be created. **Static** creates a "
"StaticBody3D, **Dynamic** creates a RigidBody3D, **Area** creates an Area3D."
msgstr ""

msgid ""
"**Physics > Shape Type:** Only visible if **Generate > Physics** is enabled. "
"**Trimesh** allows for precise per-triangle collision, but it can only be "
"used with a **Static** body type. Other types are less precise and may "
"require manual configuration, but can be used with any body type. For static "
"level geometry, use **Trimesh**. For dynamic geometry, use primitive shapes "
"if possible for better performance, or use one of the convex decomposition "
"modes if the shape is large and complex."
msgstr ""

msgid ""
"**Decomposition > Advanced:** Only visible if **Physics > Shape Type** is "
"**Decompose Convex**. If checked, allows adjusting advanced decomposition "
"options. If disabled, only a preset **Precision** can be adjusted (which is "
"usually sufficient)."
msgstr ""

msgid ""
"**Decomposition > Precision:** Only visible if **Physics > Shape Type** is "
"**Decompose Convex**. Controls the precision to use for convex "
"decomposition. Higher values result in more detailed collision, at the cost "
"of slower generation and increased CPU usage during physics simulation. To "
"improve performance, it's recommended to keep this value as low as possible "
"for your use cases."
msgstr ""

msgid ""
"**Occluder > Simplification Distance:** Only visible if **Generate > "
"Occluder** is set to **Mesh + Occluder** or **Occluder Only**. Higher values "
"result in a occluder mesh with fewer vertices (resulting in decreased CPU "
"utilization), at the cost of more occlusion culling issues (such as false "
"positives or false negatives). If you run into objects disappearing when "
"they shouldn't when the camera is near a certain mesh, try decreasing this "
"value."
msgstr ""

#, fuzzy
msgid "**Configuring mesh and material import options**"
msgstr "配置导入的译文"

msgid ""
"In the Advanced Import Settings dialog, there are 2 ways to select "
"individual meshes or materials:"
msgstr ""

#, fuzzy
msgid ""
"Switch to the **Meshes** or **Materials** tab in the top-left corner of the "
"dialog."
msgstr "小球会出现在视口的左上角。"

msgid ""
"Stay in the **Scene** tab, but unfold the options on the tree view on the "
"left. After choosing a mesh or material, this presents the same information "
"as the **Meshes** and **Materials** tabs, but in a tree view instead of a "
"list."
msgstr ""

msgid ""
"If you select a mesh, different options will appear in the panel on the "
"right:"
msgstr ""

msgid "Advanced Import Settings dialog (Meshes tab)"
msgstr ""

#, fuzzy
msgid "The options are as follows:"
msgstr "最常见的用例如下:"

msgid ""
"**Save to File:** Saves the :ref:`class_Mesh` *resource* to an external file "
"(this isn't a scene file). You generally don't need to use this for placing "
"the mesh in a 3D scene – instead, you should instance the 3D scene directly. "
"However, having direct access to the Mesh resource is useful for specific "
"nodes, such as :ref:`class_MeshInstance3D`, :ref:"
"`class_MultiMeshInstance3D`, :ref:`class_GPUParticles3D` or :ref:"
"`class_CPUParticles3D`. - You will also need to specify an output file path "
"using the option that appears after enabling **Save to File**. It's "
"recommended to use the ``.res`` output file extension for smaller file sizes "
"and faster loading speeds, as ``.tres`` is inefficient for writing large "
"amounts of data."
msgstr ""

msgid ""
"**Generate > Shadow Meshes:** Per-mesh override for the **Meshes > Create "
"Shadow Meshes** scene-wide import option described in :ref:"
"`doc_importing_3d_scenes_using_the_import_dock`. **Default** will use the "
"scene-wide import option, while **Enable** or **Disable** can forcibly "
"enable or disable this behavior on a specific mesh."
msgstr ""

msgid ""
"**Generate > Lightmap UV:** Per-mesh override for the **Meshes > Light "
"Baking** scene-wide import option described in :ref:"
"`doc_importing_3d_scenes_using_the_import_dock`. **Default** will use the "
"scene-wide import option, while **Enable** or **Disable** can forcibly "
"enable or disable this behavior on a specific mesh. - Setting this to "
"**Enable** on a scene with the **Static** light baking mode is equivalent to "
"configuring this mesh to use **Static Lightmaps**. Setting this to "
"**Disable** on a scene with the **Static Lightmaps** light baking mode is "
"equivalent to configuring this mesh to use **Static** instead."
msgstr ""

msgid ""
"**Generate > LODs:** Per-mesh override for the **Meshes > Generate LODs** "
"scene-wide import option described in :ref:"
"`doc_importing_3d_scenes_using_the_import_dock`. **Default** will use the "
"scene-wide import option, while **Enable** or **Disable** can forcibly "
"enable or disable this behavior on a specific mesh."
msgstr ""

msgid ""
"**LODs > Normal Split Angle:** The minimum angle difference between two "
"vertices required to preserve a geometry edge in mesh LOD generation. If "
"running into visual issues with LOD generation, decreasing this value may "
"help (at the cost of less efficient LOD generation)."
msgstr ""

msgid ""
"**LODs > Normal Merge Angle:** The minimum angle difference between two "
"vertices required to preserve a geometry edge in mesh LOD generation. If "
"running into visual issues with LOD generation, decreasing this value may "
"help (at the cost of less efficient LOD generation)."
msgstr ""

msgid ""
"If you select a material, only one option will appear in the panel on the "
"right:"
msgstr ""

msgid "Advanced Import Settings dialog (Materials tab)"
msgstr ""

msgid ""
"When **Use External** is checked and an output path is specified, this lets "
"you use an external material instead of the material that is included in the "
"original 3D scene file; see the section below."
msgstr ""

#, fuzzy
msgid "Extracting materials to separate files"
msgstr "单独导出纹理"

msgid ""
"While Godot can import materials authored in 3D modeling software, the "
"default configuration may not be suitable for your needs. For example:"
msgstr ""

msgid ""
"You want to configure material features not supported by your 3D application."
msgstr ""

msgid ""
"You want to use a different texture filtering mode, as this option is "
"configured in the material since Godot 4.0 (and not in the image)."
msgstr ""

msgid ""
"You want to replace one of the materials with an entirely different "
"material, such as a custom shader."
msgstr ""

msgid ""
"To be able to modify the 3D scene's materials in the Godot editor, you need "
"to use *external* material resources."
msgstr ""

msgid ""
"In the top-left corner of the Advanced Import Settings dialog, choose "
"**Actions… > Extract Materials**:"
msgstr ""

msgid ""
"Extracting all built-in materials to external resources in the Advanced "
"Import Settings dialog"
msgstr ""

msgid ""
"After choosing this option, select a folder to extract material ``.tres`` "
"files to, then confirm the extraction:"
msgstr ""

msgid ""
"Confirming material extraction in the Advanced Import Settings subdialog"
msgstr ""

msgid ""
"After extracting materials, the 3D scene will automatically be configured to "
"use external material references. As a result, you don't need to manually "
"enable **Use External** on every material to make the external ``.tres`` "
"material effective."
msgstr ""

msgid ""
"When **Use External** is enabled, remember that the Advanced Import Settings "
"dialog will keep displaying the mesh's original materials (the ones designed "
"in the 3D modeling software). This means your customizations to the "
"materials won't be visible within this dialog. To preview your modified "
"materials, you need to place the imported 3D scene in another scene using "
"the editor."
msgstr ""

msgid ""
"Godot will not overwrite changes made to extracted materials when the source "
"3D scene is reimported. However, if the material name is changed in the "
"source 3D file, the link between the original material and the extracted "
"material will be lost. As a result, you'll need to use the Advanced Import "
"Settings dialog to associate the renamed material to the existing extracted "
"material."
msgstr ""

msgid ""
"The above can be done in the dialog's **Materials** tab by selecting the "
"material, enabling **Save to File**, then specifying the save path using the "
"**Path** option that appears after enabling **Save to File**."
msgstr ""

msgid "Using import scripts for automation"
msgstr ""

#, fuzzy
msgid ""
"A special script to process the whole scene after import can be provided. "
"This is great for post-processing, changing materials, doing funny stuff "
"with the geometry, and more."
msgstr ""
"可以提供一个特殊脚本, 来处理导入后的整个场景. 这非常适合后期处理, 更换材质, "
"对几何图形做有趣的事情等."

msgid ""
"Create a script that is not attached to any node by right-clicking in the "
"FileSystem dock and choosing **New > Script…**. In the script editor, write "
"the following:"
msgstr ""

#, fuzzy
msgid ""
"The ``_post_import(scene: Node)`` function takes the imported scene as "
"argument (the parameter is actually the root node of the scene). The scene "
"that will finally be used **must** be returned (even if the scene can be "
"entirely different)."
msgstr ""
"``post_import`` 函数将导入的场景作为参数(参数实际上是场景的根节点). 必须返回"
"最终将要使用的场景. 它可以是不同的."

#, fuzzy
msgid "Using animation libraries"
msgstr "使用 AnimationTree"

msgid ""
"As of Godot 4.0, you can choose to import **only** animations from a glTF "
"file and nothing else. This is used in some asset pipelines to distribute "
"animations separately from models. For example, this allows you to use one "
"set of animations for several characters, without having to duplicate "
"animation data in every character."
msgstr ""

msgid ""
"To do so, select the glTF file in the FileSystem dock, then change the "
"import mode to Animation Library in the Import dock:"
msgstr ""

msgid "Changing the import type to Animation Library in the Import dock"
msgstr ""

msgid ""
"Click **Reimport** and restart the editor when prompted. After restarting, "
"the glTF file will be imported as an :ref:`class_AnimationLibrary` instead "
"of a :ref:`class_PackedScene`. This animation library can then be referenced "
"in an :ref:`class_AnimationPlayer` node."
msgstr ""

msgid ""
"The import options that are visible after changing the import mode to "
"Animation Library act the same as when using the Scene import mode. See :ref:"
"`doc_importing_3d_scenes_using_the_import_dock` for more information."
msgstr ""

#, fuzzy
msgid "Filter script"
msgstr "过滤器脚本"

msgid ""
"It is possible to specify a filter script in a special syntax to decide "
"which tracks from which animations should be kept."
msgstr "可以使用特殊语法指定过滤器脚本, 以决定应保留哪些动画的哪些轨道."

#, fuzzy
msgid ""
"The filter script is executed against each imported animation. The syntax "
"consists of two types of statements, the first for choosing which animations "
"to filter, and the second for filtering individual tracks within the matched "
"animation. All name patterns are performed using a case-insensitive "
"expression match, with support for ``?`` and ``*`` wildcards (using :ref:"
"`String.matchn() <class_String_method_matchn>` under the hood)."
msgstr ""
"过滤器脚本会针对每个导入的动画执行. 语法由两种类型的语句组成, 一种用于选择要"
"过滤的动画, 另一种用于过滤匹配的动画中的各个轨道. 所有名称模式均使用不区分大"
"小写的表达式匹配, 可以使用通配符 ``?`` 和 ``*`` (内部使用 ``String."
"matchn()`` )."

msgid ""
"The script must start with an animation filter statement (as denoted by the "
"line beginning with an ``@``). For example, if we would like to apply "
"filters to all imported animations which have a name ending in "
"``\"_Loop\"``::"
msgstr ""
"脚本必须以动画过滤器语句开头（如以 ``@`` 开头的行表示）。例如，如果我们想要将"
"过滤器应用在所有以 ``\"_Loop\"`` 结尾的导入动画上： ::"

msgid ""
"Similarly, additional patterns can be added to the same line, separated by "
"commas. Here is a modified example to additionally *include* all animations "
"with names that begin with ``\"Arm_Left\"``, but also *exclude* all "
"animations which have names ending in ``\"Attack\"``::"
msgstr ""
"类似地，还可以在同一行中添加其他模式，以逗号分隔。下面是一个修改后的例子，它"
"额外\\ *包含*\\ 所有名称以 ``\"Arm_Left\"`` 开头的动画，同时\\ *排除*\\ 所有"
"名称以 ``\"Attack\"`` 结尾的动画： ::"

msgid ""
"Following the animation selection filter statement, we add track filtering "
"patterns to indicate which animation tracks should be kept or discarded. If "
"no track filter patterns are specified, then all tracks within the matched "
"animations will be discarded!"
msgstr ""
"在动画选择过滤器语句之后, 我们添加轨道过滤模式来指示保留或丢弃哪些动画轨道. "
"如果未指定轨道过滤器模式, 则匹配动画中的所有轨道都会被丢弃！"

msgid ""
"It's important to note that track filter statements are applied in order for "
"each track within the animation, this means that one line may include a "
"track, a later rule can still discard it. Similarly, a track excluded by an "
"early rule may then be re-included once again by a filter rule further down "
"in the filter script."
msgstr ""
"需要注意的是, 轨道过滤器表达式是按顺序作用于动画中的每条轨道, 这意味着, 一行"
"表达式可能包含某个轨道, 但后续的规则仍然可以忽略它. 同样, 一个被之前规则排除"
"的轨道, 可能被过滤器脚本后续的规则重新包含进来."

msgid ""
"For example: include all tracks in animations with names ending in "
"``\"_Loop\"``, but discard any tracks affecting a ``\"Skeleton\"`` which end "
"in ``\"Control\"``, unless they have ``\"Arm\"`` in their name::"
msgstr ""
"例如：包含动画中所有名字以 ``\"_Loop\"`` 结尾的轨道，但忽略任何以 "
"``\"Control\"`` 结尾的 ``\"Skeleton\"`` 轨道，除非它们的名字中有 "
"``\"Arm\"``\\ ： ::"

msgid ""
"In the above example, tracks like ``\"Skeleton:Leg_Control\"`` would be "
"discarded, while tracks such as ``\"Skeleton:Head\"`` or ``\"Skeleton:"
"Arm_Left_Control\"`` would be retained."
msgstr ""
"在上面的示例中，像 ``\"Skeleton:Leg_Control\"`` 这样的轨道会被丢弃，而像 "
"``\"Skeleton:Head\"`` 或 ``\"Skeleton:Arm_Left_Control\"`` 这样的轨道会被保"
"留。"

msgid ""
"Any track filter lines that do not begin with a ``+`` or ``-`` are ignored."
msgstr "任何不是以 ``+`` 或 ``-`` 开头的轨道过滤器行将会被忽略."

msgid "Storage"
msgstr "存储"

msgid ""
"By default, animations are saved as built-in. It is possible to save them to "
"a file instead. This allows adding custom tracks to the animations and "
"keeping them after a reimport."
msgstr ""
"默认情况下, 动画保存为内置. 可以将它们保存到一个文件中. 这允许向动画添加自定"
"义轨道并在重新导入后保留它们."

msgid "Optimizer"
msgstr "优化"

msgid ""
"When animations are imported, an optimizer is run, which reduces the size of "
"the animation considerably. In general, this should always be turned on "
"unless you suspect that an animation might be broken due to it being enabled."
msgstr ""
"导入动画时, 会运行优化程序, 从而大大减少动画的大小. 一般情况下, 除非您怀疑动"
"画可能因启用而被破坏, 否则应始终启用此功能."

msgid "Clips"
msgstr "剪辑"

msgid ""
"It is possible to specify multiple animations from a single timeline as "
"clips. For this to work, the model must have only one animation that is "
"named ``default``. To create clips, change the clip amount to something "
"greater than zero. You can then name a clip, specify which frames it starts "
"and stops on, and choose whether the animation loops or not."
msgstr ""
"可以指定单个时间轴中的多个动画作为剪辑. 这样做的话, 模型必须只有一个命名为 "
"``default`` 的动画. 为了创建剪辑, 把剪辑数量改成比0大的数. 然后可以修改剪辑名"
"字, 指定开始和结束帧, 选择动画是否循环."

msgid "Scene inheritance"
msgstr "场景继承"

#, fuzzy
msgid ""
"In many cases, it may be desired to make manual modifications to the "
"imported scene. By default, this is not possible because if the source 3D "
"asset changes, Godot will re-import the *whole* scene."
msgstr ""
"在许多情况下, 可能需要对导入的场景进行修改. 默认情况下, 这是不可能的, 因为如"
"果源资产发生更改(从3D建模应用程序重新导出了源 ``.dae``, ``.gltf``, ``.obj``),"
"Godot将重新导入 整个场景."

#, fuzzy
msgid ""
"However, it is possible to make local modifications by using *scene "
"inheritance*. If you try to open the imported scene using **Scene > Open "
"Scene…** or **Scene > Quick Open Scene…**, the following dialog will appear:"
msgstr ""
"但是, 可以使用 *场景继承* 进行本地修改. 尝试打开导入的场景, 将出现以下对话框:"

msgid "Dialog when opening an imported 3D scene in the editor"
msgstr ""

#, fuzzy
msgid "In inherited scenes, the only limitations for modification are:"
msgstr "在继承场景中, 修改的唯一限制是:"

#, fuzzy
msgid ""
"Nodes from the base scene can't be removed, but additional nodes can be "
"added anywhere."
msgstr "无法删除节点（但可以在任何位置添加）。"

#, fuzzy
msgid ""
"Subresources can't be edited. Instead, you need to save them externally as "
"described above."
msgstr "子资源无法被编辑（如上所述它们将保存在外部）"

#, fuzzy
msgid "Other than that, everything is allowed."
msgstr "除此之外，一切都是允许的！"

msgid "Import hints"
msgstr "导入提示"

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr "很多时候，编辑场景时，导出后需要完成一些常见任务："

msgid "Adding collision detection to objects."
msgstr "向对象添加碰撞检测。"

msgid "Setting objects as navigation meshes."
msgstr "将对象设置为导航网格。"

msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modelling)."
msgstr "删除游戏引擎中未使用的节点（例如用于建模的特定光源）。"

msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modelling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"为简化此工作流程，Godot 提供了一些后缀，可以将其添加到 3D 建模软件中的对象名"
"称中。导入后，Godot 将检测到它们并自动执行操作。"

#, fuzzy
msgid "All the suffixes described below are **case-sensitive**."
msgstr "下面描述的所有后缀都是\\ *大小写敏感*\\ 的。"

msgid "Remove nodes (-noimp)"
msgstr "删除节点（-noimp）"

msgid ""
"Objects that have the ``-noimp`` suffix will be removed at import-time no "
"matter what their type is. They will not appear in the imported scene."
msgstr ""
"无论是什么类型的节点，具有 ``-noimp`` 后缀的对象都会在导入时被移除，不会出现"
"在导入后的场景中。"

msgid ""
"This is equivalent to enabling **Skip Import** for a node in the Advanced "
"Import Settings dialog."
msgstr ""

msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "创建碰撞体（-col、-convcol、-colonly、-convcolonly）"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""
"``-col`` 选项只作用于网格物体. 如果该选项被检测到, 将会添加一个静态碰撞体的子"
"节点, 用的是跟网格一样的几何体. 这会创建一个三角形网格碰撞体, 这个选项对碰撞"
"检测来说很慢但是精确. 这个选项通常是关卡几何体需要的(但是也看看下面的 ``-"
"colonly`` )."

#, fuzzy
msgid ""
"The option ``-convcol`` will create a :ref:`class_ConvexPolygonShape3D` "
"instead of a :ref:`class_ConcavePolygonShape3D`. Unlike triangle meshes "
"which can be concave, a convex shape can only accurately represent a shape "
"that doesn't have any concave angles (a pyramid is convex, but a hollow box "
"is concave). Due to this, convex collision shapes are generally not suited "
"for level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""
"``-convcol`` 选项将创建一个 :ref:`class_convexpolygonshape` 而不是 :ref:"
"`class_concavepolygonshape`。不像可以是凹型的三角形网格, 一个凸型的形状只能精"
"确的表示它没有任何凹型角度(金字塔是凸型, 但空盒子是凹型). 因此, 凸型碰撞体通"
"常不适用于关卡几何体. 当说到一个很简单的网格时, 凸型碰撞体相对三角形碰撞体有"
"更好的性能. 这个选项适用于简单的物体, 或是需要大多数时精确碰撞检测的动态物体."

msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"然而，在这两个例子中，视觉几何体处理过于复杂或对于碰撞而言不够光滑。物理引擎"
"会出现小故障从而不必要地降低了引擎的速度。"

#, fuzzy
msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_StaticBody3D` collision "
"instead. This helps the visual mesh and actual collision to be separated."
msgstr ""
"为了解决这个问题, 存在 ``-colony`` 修饰符, 该修饰符将在导入时删除网格, 并创建"
"一个 :ref:`class_staticbody` 静态碰撞体. 这有助于将可视网格和实际碰撞体分开."

#, fuzzy
msgid ""
"The option ``-convcolonly`` works in a similar way, but will create a :ref:"
"`class_ConvexPolygonShape3D` instead using convex decomposition."
msgstr ""
"``-convcolonly`` 选项的工作方式类似，但创建的是 :ref:"
"`class_convexpolygonshape`。"

#, fuzzy
msgid ""
"With Collada files, the option ``-colonly`` can also be used with Blender's "
"empty objects. On import, it will create a :ref:`class_StaticBody3D` with a "
"collision node as a child. The collision node will have one of a number of "
"predefined shapes, depending on Blender's empty draw type:"
msgstr ""
"选项 ``-colonly`` 也可以与Blender的空对象一起使用. 导入时, 它将创建一个带有碰"
"撞节点的 :ref:`class_staticbody` 作为子节点. 碰撞节点将具有许多预定义的形状之"
"一, 具体取决于Blender的空绘制类型:"

msgid "Choosing a draw type for an Empty on creation in Blender"
msgstr ""

#, fuzzy
msgid "Single arrow will create a :ref:`class_SeparationRayShape3D`."
msgstr "单箭头将创建 :ref:`class_rayshape`\\ 。"

#, fuzzy
msgid "Cube will create a :ref:`class_BoxShape3D`."
msgstr "方块将创建 :ref:`class_boxshape`\\ 。"

#, fuzzy
msgid "Image will create a :ref:`class_WorldBoundaryShape3D`."
msgstr "图像将创建 :ref:`class_planeshape`\\ 。"

#, fuzzy
msgid ""
"Sphere (and the others not listed) will create a :ref:`class_SphereShape3D`."
msgstr "球体（和其他未列出的）将创建 :ref:`class_sphereshape`\\ 。"

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""
"可能的话，请\\ **试着使用少量图元碰撞形状**\\ ，而不是三角形网格或凸型体。图"
"元形状的性能和可靠性通常更好。"

#, fuzzy
msgid ""
"For better visibility on Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them by changing **Edit "
"> Preferences > Themes > 3D Viewport > Empty**."
msgstr ""
"为了Blender编辑器中更佳的可见性, 可以在碰撞空物体上设置 \"透视\" 选项, 并在"
"Blender的 **用户偏好设置> 主题> 3D视图> 空物体** 中为它们设置不同的颜色."

msgid ""
"If using Blender 2.79 or older, follow these steps instead: **User "
"Preferences > Themes > 3D View > Empty**."
msgstr ""

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr "碰撞体全面概述请查看 :ref:`doc_collision_shapes_3d`."

msgid "Create navigation (-navmesh)"
msgstr "创建导航（-navmesh）"

msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"具有 ``-navmesh`` 后缀的网格节点, 将被转换为导航网格. 原始网格节点将在导入时"
"被删除."

msgid "Create a VehicleBody (-vehicle)"
msgstr "创建 VehicleBody（-vehicle）"

#, fuzzy
msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to a :"
"ref:`class_VehicleBody3D` node."
msgstr ""
"具有 ``-vehicle`` 后缀的网格节点, 将作为一个 :ref:`class_VehicleBody` 节点的"
"子节点被导入."

msgid "Create a VehicleWheel (-wheel)"
msgstr "创建 VehicleWheel（-wheel）"

#, fuzzy
msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to a :ref:"
"`class_VehicleWheel3D` node."
msgstr ""
"具有 ``-wheel`` 后缀的网格节点, 将作为一个 :ref:`class_VehicleWheel` 节点的子"
"节点被导入."

msgid "Rigid Body (-rigid)"
msgstr "刚体（-rigid）"

#, fuzzy
msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as a :ref:"
"`class_RigidBody3D`."
msgstr ""
"具有 ``-rigid`` 后缀的网格节点, 将作为一个 :ref:`class_RigidBody` 节点的子节"
"点被导入."

msgid "Animation loop (-loop, -cycle)"
msgstr "动画循环（-loop、-cycle）"

#, fuzzy
msgid ""
"Animation clips in the source 3D file that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot :ref:`class_Animation` "
"with the loop flag set. **Unlike the other suffixes described above, this "
"does not require a hyphen.**"
msgstr ""
"COLLADA文档中以令牌 ``loop`` 或 ``cycle`` 开头或结尾的动画剪辑将作为设置了循"
"环标志的Godot动画导入. **这是区分大小写的, 不需要连字符.**"

msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"在Blender中, 这需要使用NLA编辑器, 并用 ``loop`` 或 ``cycle`` 前缀或后缀命名该"
"动作."

msgid "Translation status"
msgstr "翻译状态"
