# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-29 23:14+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Importing images"
msgstr "导入图像"

msgid "Supported image formats"
msgstr "支持的图像格式"

msgid "Godot can import the following image formats:"
msgstr "Godot 可以导入以下图像格式："

msgid ""
"BMP (``.bmp``) - No support for 16-bit per pixel images. Only 1-bit, 4-bit, "
"8-bit, 24-bit, and 32-bit per pixel images are supported."
msgstr ""
"BMP（\\ ``.bmp``\\ ）——不支持每像素 16 位的图像。只支持每像素 1 位、4 位、8 "
"位、24 位和 32 位的图像。"

msgid ""
"DirectDraw Surface (``.dds``) - If mipmaps are present in the texture, they "
"will be loaded directly. This can be used to achieve effects using custom "
"mipmaps."
msgstr ""
"DirectDraw Surface（\\ ``.dds``\\ ）——如果纹理中存在 mipmap，则直接加载。可以"
"使用自定义 mipmap 制作特效。"

msgid ""
"Khronos Texture (``.ktx``) - Decoding is done using `libktx <https://github."
"com/KhronosGroup/KTX-Software>`__. Only supports 2D images. Cubemaps, "
"texture arrays and de-padding are not supported."
msgstr ""

msgid ""
"OpenEXR (``.exr``) - Supports HDR (highly recommended for panorama skies)."
msgstr "OpenEXR（\\ ``.exr``\\ ）——支持 HDR（强烈推荐使用在全景天空上）。"

msgid ""
"Radiance HDR (``.hdr``) - Supports HDR (highly recommended for panorama "
"skies)."
msgstr "Radiance HDR（\\ ``.hdr``\\ ）——支持 HDR（强烈推荐使用在全景天空上）。"

msgid ""
"JPEG (``.jpg``, ``.jpeg``) - Doesn't support transparency per the format's "
"limitations."
msgstr ""
"JPEG（\\ ``.jpg``\\ 、\\ ``.jpeg``\\ ）——由于该格式的限制，不支持透明度。"

msgid ""
"PNG (``.png``) - Precision is limited to 8 bits per channel upon importing "
"(no HDR images)."
msgstr "PNG（\\ ``.png``\\ ）——导入时精度限制为每个通道 8 位（无 HDR 图像）。"

msgid "Truevision Targa (``.tga``)"
msgstr "Truevision Targa（\\ ``.tga``\\ ）"

msgid ""
"SVG (``.svg``) - SVGs are rasterized using `ThorVG <https://www.thorvg.org/"
">`__ when importing them. `Support is limited <https://www.thorvg.org/about#:"
"~:"
"text=among%20the%20svg%20tiny%20specs%2C%20yet%20unsupported%20features%20in%20the%20thorvg%20are%20the%20following>`__; "
"complex vectors may not render correctly. You can check whether ThorVG can "
"render a certain vector correctly using its `web-based viewer <https://www."
"thorvg.org/viewer>`__. For complex vectors, rendering them to PNGs using "
"`Inkscape <https://inkscape.org/>`__ is often a better solution. This can be "
"automated thanks to its `command-line interface <https://wiki.inkscape.org/"
"wiki/index.php/Using_the_Command_Line#Export_files>`__."
msgstr ""
"SVG（\\ ``.svg``\\ ）——SVG 在导入时使用 `ThorVG <https://www.thorvg.org/>`__ "
"进行栅格化。`支持并不完善 <https://www.thorvg.org/about#:~:"
"text=among%20the%20svg%20tiny%20specs%2C%20yet%20unsupported%20features%20in%20the%20thorvg%20are%20the%20following>`__ "
"；复杂的矢量图可能无法正确渲染。你可以使用其`基于网络的查看器 <https://www."
"thorvg.org/viewer>`__ 来检查 ThorVG 是否可以正确渲染某个向量。对于复杂的矢"
"量，使用 `Inkscape <https://inkscape.org/>`__ 将它们渲染为 PNG 会是更好的解决"
"方案。由于 Inkscape 具有 `命令行界面 <https://wiki.inkscape.org/wiki/index."
"php/Using_the_Command_Line#Export_files>`__ ，这套流程还可以自动化处理。"

msgid ""
"WebP (``.webp``) - WebP files support transparency and can be compressed "
"lossily or losslessly. The precision is limited to 8 bits per channel."
msgstr ""
"WebP（\\ ``.webp``\\ ）——WebP 文件支持透明，也支持有损和无损压缩。精度限制是"
"每通道 8 位。"

msgid ""
"If you've compiled the Godot editor from source with specific modules "
"disabled, some formats may not be available."
msgstr ""
"如果你从源代码编译 Godot 编辑器时禁用了特定的模块，某些格式可能无法使用。"

msgid "Importing textures"
msgstr "导入纹理"

msgid ""
"The default action in Godot is to import images as textures. Textures are "
"stored in video memory. Their pixel data can't be accessed directly from the "
"CPU without converting them back to an :ref:`class_Image` in a script. This "
"is what makes drawing them efficient."
msgstr ""
"Godot 中的默认操作是将图像导入为纹理。纹理存储在显存中。纹理的像素数据无法直"
"接从 CPU 访问，除非在脚本中将它们转换回 :ref:`class_Image`。这就是使绘制纹理"
"变得高效的原因。"

msgid ""
"There are over a dozen import options that can be adjusted after selecting "
"an image in the FileSystem dock:"
msgstr "在文件系统面板中选择图像后，可以调整十多个导入选项："

msgid ""
"Import options in the Import dock after selecting an image in the FileSystem "
"dock"
msgstr "在文件系统面板中选择图像后，导入面板中的导入选项"

msgid ""
"Import options in the Import dock after selecting an image in the FileSystem "
"dock. Some of these options are only visible with certain compression modes."
msgstr ""
"在文件系统面板中选择图像后，导入扩展面板中的导入选项。其中一些选项仅在某些压"
"缩模式下可见。"

msgid "Changing import type"
msgstr "更改导入类型"

msgid ""
"It is possible to choose other types of imported resources in the Import "
"dock:"
msgstr "可以在“导入”面板中选择其他导入资源的类型："

msgid ""
"**BitMap:** 1-bit monochrome texture (intended to be used as a click mask "
"in :ref:`class_TextureButton` and :ref:`class_TouchScreenButton`). This "
"resource type cannot be displayed directly onto 2D or 3D nodes, but the "
"pixel values can be queried from a script using :ref:`get_bit "
"<class_BitMap_method_get_bit>`."
msgstr ""

msgid ""
"**Cubemap:** Import the texture as a 6-sided cubemap, with interpolation "
"between the cubemap's sides (seamless cubemaps), which can be sampled in "
"custom shaders."
msgstr ""

msgid ""
"**CubemapArray:** Import the texture as a collection of 6-sided cubemaps, "
"which can be sampled in custom shaders. This resource type can only be "
"displayed when using the Forward+ or Forward Mobile rendering methods, not "
"Compatibility."
msgstr ""

msgid ""
"**Font Data (Monospace Image Font):** Import the image as a bitmap font "
"where all characters have the same width. See :ref:`doc_gui_using_fonts`."
msgstr ""

msgid ""
"**Image:** Import the image as-is. This resource type cannot be displayed "
"directly onto 2D or 3D nodes, but the pixel values can be queried from a "
"script using :ref:`get_pixel<class_Image_method_get_pixel>`."
msgstr ""

msgid ""
"**Texture2D:** Import the image as a 2-dimensional texture, suited for "
"display on 2D and 3D surfaces. This is the default import mode."
msgstr ""

msgid ""
"**Texture2DArray:** Import the image as a collection of 2-dimensional "
"textures. Texture2DArray is similar to a 3-dimensional texture, but without "
"interpolation between layers. Built-in 2D and 3D shaders cannot display "
"texture arrays, so you must create a custom shader in :ref:`2D "
"<doc_canvas_item_shader>` or :ref:`3D <doc_spatial_shader>` to display a "
"texture from a texture array."
msgstr ""

msgid ""
"**Texture3D:** Import the image as a 3-dimensional texture. This is *not* a "
"2D texture applied onto a 3D surface. Texture3D is similar to a texture "
"array, but with interpolation between layers. Texture3D is typically used "
"for :ref:`class_FogMaterial` density maps in :ref:`volumetric fog "
"<doc_volumetric_fog>`, :ref:`class_Environment` 3D LUT color correction and "
"custom shaders."
msgstr ""

msgid ""
"**TextureAtlas:** Import the image as an *atlas* of different textures. Can "
"be used to reduce memory usage for animated 2D sprites. Only supported in 2D "
"due to missing support in built-in 3D shaders."
msgstr ""

msgid "Detect 3D"
msgstr "检测 3D"

msgid ""
"The default import options (no mipmaps and **Lossless** compression) are "
"suited for 2D, but are not ideal for most 3D projects. **Detect 3D** makes "
"Godot aware of when a texture is used in a 3D scene (such as a texture in a :"
"ref:`class_BaseMaterial3D`). If this happens, several import options are "
"changed so the texture flags are friendlier to 3D. Mipmaps are enabled and "
"the compression mode is changed to **VRAM Compressed** unless :ref:"
"`doc_importing_images_detect_3d_compress_to` is changed. The texture is also "
"reimported automatically."
msgstr ""
"默认的导入选项（不带 mipmap 并且使用 **Lossless** 压缩）适合 2D，对于大多数 "
"3D 项目而言并不理想。\\ **检测 3D**\\ 能够让 Godot 关注纹理在 3D 场景中的使用"
"（例如用作 :ref:`class_BaseMaterial3D` 的纹理）。一旦使用，就会将部分导入选项"
"进行修改，这样纹理标志就对 3D 更友好。除非修改了 :ref:"
"`doc_importing_images_detect_3d_compress_to`\\ ，否则此时就会启用 mipmap 并将"
"压缩模式修改为 **VRAM Compressed**\\ 。纹理会自动进行重新导入。"

msgid ""
"A message is printed to the Output panel when a texture is detected to be "
"used in 3D."
msgstr "检测到纹理在 3D 中使用时会在“输出”面板中打印一个消息。"

msgid ""
"If you run into quality issues when a texture is detected to be used in 3D "
"(e.g. for pixel art textures), change the :ref:"
"`doc_importing_images_detect_3d_compress_to` option before using the texture "
"in 3D, or change :ref:`doc_importing_images_compress_mode` to **Lossless** "
"after using the texture in 3D. This is preferable to disabling **Detect "
"3D**, as mipmap generation remains enabled to prevent textures from looking "
"grainy at a distance."
msgstr ""
"如果纹理检测到在 3D 中使用后遇到了质量问题（例如像素风纹理），请在用于 3D 之"
"前修改 :ref:`doc_importing_images_detect_3d_compress_to` 选项，或者在用于 3D "
"之后将 :ref:`doc_importing_images_compress_mode` 修改为 **Lossless**\\ 。这样"
"比禁用\\ **检测 3D** 更好，因为仍然会启用 mipmap 生成，从远处观察纹理就不会感"
"觉模糊。"

msgid "Import options"
msgstr "导入选项"

msgid ""
"In Godot 4.0, changing the texture filter and repeat mode is no longer done "
"in the import options."
msgstr "在 Godot 4.0 中，对纹理过滤模式以及重复模式的修改不再位于导入选项中。"

msgid ""
"Instead, texture filter and repeat modes are changed in the CanvasItem "
"properties in 2D (with a project setting acting as a default), and in a :ref:"
"`per-material configuration in 3D <doc_standard_material_3d_sampling>`. In "
"custom shaders, filter and repeat mode is changed on the ``sampler2D`` "
"uniform using hints described in the :ref:`doc_shading_language` "
"documentation."
msgstr ""
"现在，2D 中需要在 CanvasItem 的属性中对纹理过滤模式和重复模式进行修改（项目设"
"置中可以设置默认值），3D 中则是\\ :ref:`针对材质进行配置 "
"<doc_standard_material_3d_sampling>`\\ 。在自定义着色器中，\\ ``sampler2D`` "
"uniform 的过滤和重复模式使用提示修改，见 :ref:`doc_shading_language` 文档。"

msgid "Compress > Mode"
msgstr "压缩 > 模式"

msgid ""
"Images are one of the largest assets in a game. To handle them efficiently, "
"they need to be compressed. Godot offers several compression methods, "
"depending on the use case."
msgstr ""
"图像是游戏中最大的资产之一。要实现高效的处理，就需要进行压缩。Godot 提供了很"
"多压缩方法，可以根据实际情况选用。"

msgid ""
"**Lossless:** This is the default and most common compression mode for 2D "
"assets. It shows assets without any kind of artifacting, and disk "
"compression is decent. It will use considerably more amount of video memory "
"than VRAM Compression, though. This is also the recommended setting for "
"pixel art."
msgstr ""
"**Lossless：**\\ 无损压缩。这是 2D 资产的默认压缩模式，也是最常用的压缩模式。"
"显示资产时不会有任何失真，磁盘压缩也比较合适。但如果与 VRAM 压缩相比，使用的"
"显存就明显要更多。这也是像素画的推荐设置。"

msgid ""
"**Lossy:** This is a good choice for large 2D assets. It has some artifacts, "
"but less than VRAM compression and the file size is several times lower "
"compared to Lossless or VRAM Uncompressed. Video memory usage isn't "
"decreased by this mode; it's the same as with Lossless or VRAM Uncompressed."
msgstr ""
"**Lossy：**\\ 有损压缩。适合较大的 2D 资产。会有一些失真，但是比 VRAM 压缩要"
"少，文件大小比无损压缩以及 VRAM 未压缩要小好几倍。这个模式不会降低显存占用；"
"与无损压缩和 VRAM 未压缩相同。"

msgid ""
"**VRAM Compressed:** This is the default and most common compression mode "
"for 3D assets. Size on disk is reduced and video memory usage is also "
"decreased considerably (usually by a factor between 4 and 6). This mode "
"should be avoided for 2D as it exhibits noticeable artifacts, especially for "
"lower-resolution textures."
msgstr ""
"**VRAM Compressed：**\\ VRAM 压缩。这是 3D 资产的默认压缩模式，也是最常用的压"
"缩模式。会降低磁盘上的大小，显存占用也会显著降低（通常是 4 到 6 倍）。应该避"
"免在 2D 中使用这个模式，因为会有明显的失真，在低分辨率纹理上尤为明显。"

msgid ""
"**VRAM Uncompressed:** Only useful for formats that can't be compressed, "
"such as raw floating-point images."
msgstr ""
"**VRAM Uncompressed：**\\ VRAM 未压缩。仅适用于不能压缩的格式，例如原始浮点数"
"图像。"

msgid ""
"**Basis Universal:** This alternative VRAM compression mode encodes the "
"texture to a format that can be transcoded to most GPU-compressed formats at "
"load-time. This provides very small files that make use of VRAM compression, "
"at the cost of lower quality compared to VRAM Compressed and slow "
"compression times. VRAM usage is usually the same as VRAM Compressed. Basis "
"Universal does not support floating-point image formats (the engine will "
"internally fall back to VRAM Compressed instead)."
msgstr ""
"**Basis Universal：**\\ 这也是一种 VRAM 压缩模式，编码后的纹理格式为能够在加"
"载时转码为大多数 GPU 压缩格式。这样得到的文件就很小，能够利用 VRAM 压缩，但相"
"对于 VRAM 压缩而言质量较差，压缩耗时也更长。显存占用通常和 VRAM 压缩相同。"
"Basis Universal 不支持浮点数图像格式（引擎会在内部回退至 VRAM 压缩）。"

msgid ""
"Even in 3D, \"pixel art\" textures should have VRAM compression disabled as "
"it will negatively affect their appearance, without improving performance "
"significantly due to their low resolution."
msgstr ""
"即便在 3D 中，“像素画”纹理也应该禁用 VRAM 压缩，因为压缩会对外观产生负面影"
"响，较低的分辨率也无法得到显著的性能提升。"

msgid ""
"In this table, each of the 5 options are described together with their "
"advantages and disadvantages (|good| = best, |bad| = worst):"
msgstr ""
"这张表对这五个选项进行了横向比较，列出了各自的优缺点（\\ |good| = 最好、\\ |"
"bad| = 最差）："

msgid "good"
msgstr "good"

msgid "bad"
msgstr "bad"

msgid "Compress mode"
msgstr "压缩模式"

msgid "Lossless"
msgstr "Lossless"

msgid "Lossy"
msgstr "Lossy"

msgid "VRAM Compressed"
msgstr "VRAM Compressed"

msgid "VRAM Uncompressed"
msgstr "VRAM Uncompressed"

msgid "Basis Universal"
msgstr "Basis Universal"

msgid "**Description**"
msgstr "**描述**"

msgid "Stored as Lossless WebP / PNG"
msgstr "存储为无损 WebP / PNG"

msgid "Stored as Lossy WebP"
msgstr "存储为有损 WebP"

msgid "Stored as S3TC, BPTC or ETC2 depending on platform"
msgstr "根据平台不同，存储为 S3TC、BPTC 或 ETC2"

msgid "Stored as raw pixels"
msgstr "存储为原始像素"

msgid "Transcoded to VRAM Compressed format"
msgstr "转码至 VRAM Compressed 格式"

msgid "**Size on disk**"
msgstr "**磁盘占用**"

msgid "|regular| Small"
msgstr "|regular| 小"

msgid "regular"
msgstr "regular"

msgid "|good| Very small"
msgstr "|good| 非常小"

msgid "|bad| Large"
msgstr "|bad| 大"

msgid "**Memory usage**"
msgstr "**内存占用**"

msgid "|good| Small"
msgstr "|good| 小"

msgid "**Performance**"
msgstr "**性能**"

msgid "|regular| Normal"
msgstr "|regular| 普通"

msgid "|good| Fast"
msgstr "|good| 快"

msgid "**Quality loss**"
msgstr "**质量损失**"

msgid "|good| None"
msgstr "|good| 无"

msgid "|regular| Slight"
msgstr "|regular| 轻微"

msgid "|bad| Moderate"
msgstr "|bad| 中等"

msgid "**Load time**"
msgstr "**加载时间**"

msgid "|bad| Slow"
msgstr "|bad| 慢"

msgid "Estimated memory usage for a single RGBA8 texture with mipmaps enabled:"
msgstr "单张 RGBA8 纹理启用 mipmap 后的预估内存占用："

msgid "Texture size"
msgstr "纹理大小"

msgid "**128×128**"
msgstr "**128×128**"

msgid "|good| 85 KiB"
msgstr "|good| 85 KiB"

msgid "|good| 21 KiB"
msgstr "|good| 21 KiB"

msgid "**256×256**"
msgstr "**256×256**"

msgid "|good| 341 KiB"
msgstr "|good| 341 KiB"

msgid "**512×512**"
msgstr "**512×512**"

msgid "|good| 1.33 MiB"
msgstr "|good| 1.33 MiB"

msgid "**1024×1024**"
msgstr "**1024×1024**"

msgid "|regular| 5.33 MiB"
msgstr "|regular| 5.33 MiB"

msgid "**2048×2048**"
msgstr "**2048×2048**"

msgid "|bad| 21.33 MiB"
msgstr "|bad| 21.33 MiB"

msgid "**4096×4096**"
msgstr "**4096×4096**"

msgid "|bad| 85.33 MiB"
msgstr "|bad| 85.33 MiB"

msgid ""
"In the above table, memory usage will be reduced by 25% for images that do "
"not have an alpha channel (RGB8). Memory usage will be further decreased by "
"25% for images that have mipmaps disabled."
msgstr ""

msgid ""
"Notice how at larger resolutions, the impact of VRAM compression is much "
"greater. With a 4:1 compression ratio (6:1 for opaque textures with S3TC), "
"VRAM compression effectively allows a texture to be twice as large on each "
"axis, while using the same amount of memory on the GPU."
msgstr ""

msgid ""
"VRAM compression also reduces the memory bandwidth required to sample the "
"texture, which can speed up rendering in memory bandwidth-constrained "
"scenarios (which are frequent on integrated graphics and mobile). These "
"factors combined make VRAM compression a must-have for 3D games with high-"
"resolution textures."
msgstr ""

msgid ""
"You can preview how much memory a texture takes by double-clicking it in the "
"FileSystem dock, then looking at the Inspector:"
msgstr ""

msgid "Previewing a texture in the Inspector"
msgstr ""

msgid ""
"Previewing a texture in the Inspector. Credit: `Red Brick 03 - Poly Haven "
"<https://polyhaven.com/a/red_brick_03>`__"
msgstr ""

msgid "Compress > High Quality"
msgstr ""

msgid ""
"High-quality VRAM texture compression is only supported in the Forward+ and "
"Forward Mobile rendering methods."
msgstr ""

msgid ""
"When using the Compatibility rendering method, this option is always "
"considered disabled."
msgstr ""

msgid ""
"If enabled, uses BPTC compression on desktop platforms and :abbr:`ASTC "
"(Adaptive Scalable Texture Compression)` compression on mobile platforms. "
"When using BPTC, BC7 is used for SDR textures and BC6H is used for HDR "
"textures."
msgstr ""

msgid ""
"If disabled (default), uses the faster but lower-quality S3TC compression on "
"desktop platforms and ETC2 on mobile/web platforms. When using S3TC, DXT1 "
"(BC1) is used for opaque textures and DXT5 (BC3) is used for transparent or "
"normal map (:abbr:`RGTC (Red-Green Texture Compression)`) textures."
msgstr ""

msgid ""
"BPTC and ASTC support VRAM compression for HDR textures, but S3TC and ETC2 "
"do not (see **HDR Compression** below)."
msgstr ""

#, fuzzy
msgid "Compress > HDR Compression"
msgstr "无损压缩"

msgid ""
"This option only has an effect on textures that are imported as HDR formats "
"in Godot (``.hdr`` and ``.exr`` files)."
msgstr ""

msgid ""
"If set to **Disabled**, never uses VRAM compression for HDR textures, "
"regardless of whether they're opaque or transparent. Instead, the texture is "
"converted to RGBE9995 (9-bits per channel + 5-bit exponent = 32 bits per "
"pixel) to reduce memory usage compared to a half-float or single-precision "
"float image format."
msgstr ""

msgid ""
"If set to **Opaque Only** (default), only uses VRAM compression for opaque "
"HDR textures. This is due to a limitation of HDR formats, as there is no "
"VRAM-compressed HDR format that supports transparency at the same time."
msgstr ""

msgid ""
"If set to **Always**, will force VRAM compression even for HDR textures with "
"an alpha channel. To perform this, the alpha channel is discarded on import."
msgstr ""

#, fuzzy
msgid "Compress > Normal Map"
msgstr "法线贴图"

#, fuzzy
msgid ""
"When using a texture as normal map, only the red and green channels are "
"required. Given regular texture compression algorithms produce artifacts "
"that don't look that nice in normal maps, the :abbr:`RGTC (Red-Green Texture "
"Compression)` compression format is the best fit for this data. Forcing this "
"option to **Enable** will make Godot import the image as :abbr:`RGTC (Red-"
"Green Texture Compression)` compressed. By default, it's set to **Detect**. "
"This means that if the texture is ever detected to be used as a normal map, "
"it will be changed to **Enable** and reimported automatically."
msgstr ""
"将纹理用作法线贴图时，仅需要红色和绿色通道。鉴于常规纹理压缩算法产生的失真在"
"法线贴图中看起来不太好，RGTC 压缩格式最适合这种数据。将此选项强制为“Enabled” "
"将使 Godot 导入 RGTC 压缩的图像。默认情况下，它被设置为“Detect”，这意味着如果"
"纹理一旦被用作法线贴图，则会将其更改为“Enabled”并自动重新导入。"

#, fuzzy
msgid ""
"Note that :abbr:`RGTC (Red-Green Texture Compression)` compression affects "
"the resulting normal map image. You will have to adjust custom shaders that "
"use the normal map's blue channel to take this into account. Built-in "
"material shaders already ignore the blue channel in a normal map (regardless "
"of the actual normal map's contents)."
msgstr ""
"请注意,RGTC压缩会影响生成的法线贴图图像. 您必须在调整使用法线贴图的自定义着色"
"器时, 考虑到这一点."

msgid ""
"In the example below, the normal map with :abbr:`RGTC (Red-Green Texture "
"Compression)` compression is able to preserve its detail much better, while "
"using the same amount of memory as a standard RGBA VRAM-compressed texture:"
msgstr ""

msgid ""
"Normal map with standard VRAM compression (left) and with RGTC VRAM "
"compression (right)"
msgstr ""

#, fuzzy
msgid ""
"Godot requires the normal map to use the X+, Y+ and Z+ coordinates, which is "
"known as an OpenGL-style normal map. If you've imported a material made to "
"be used with another engine, it may be DirectX-style. In this case, the "
"normal map needs to be converted by enabling the **Normal Map Invert Y** "
"import option."
msgstr ""
"Godot 需要法线贴图使用 X+、Y+、Z+ 坐标，即 OpenGL 风格。如果你导入了用于其他"
"引擎的材质，它可能使用的是 DirectX 风格，那么就需要对法线贴图的进行转换，翻"
"转 Y 轴。"

msgid ""
"More information about normal maps (including a coordinate order table for "
"popular engines) can be found `here <http://wiki.polycount.com/wiki/"
"Normal_Map_Technical_Details>`__."
msgstr ""
"可以在 `这里 <http://wiki.polycount.com/wiki/"
"Normal_Map_Technical_Details>`__ 找到关于法线贴图(包括常见引擎的坐标顺序表)的"
"更多信息."

msgid "Compress > Channel Pack"
msgstr ""

msgid ""
"If set to **sRGB Friendly** (default), prevents the RG color format from "
"being used as it does not support sRGB color."
msgstr ""

msgid ""
"If set to **Optimized**, allows the RG color format to be used if the "
"texture does not use the blue channel."
msgstr ""

msgid ""
"A third option **Normal Map (RG Channels)** is *only* available in layered "
"textures (:ref:`class_Cubemap`, :ref:`class_CubemapArray`, :ref:"
"`class_Texture2DArray` and :ref:`class_Texture3D`). This forces all layers "
"from the texture to be imported with the RG color format to reduce memory "
"usage, with only the red and green channels preserved. This only has an "
"effect on textures with the **VRAM Compressed** or **Basis Universal** "
"compression modes."
msgstr ""

#, fuzzy
msgid "Mipmaps > Generate"
msgstr "生成的文件"

msgid ""
"If enabled, smaller versions of the texture are generated on import. For "
"example, a 64×64 texture will generate 6 mipmaps (32×32, 16×16, 8×8, 4×4, "
"2×2, 1×1). This has several benefits:"
msgstr ""

msgid ""
"Textures will not become grainy in the distance (in 3D), or if scaled down "
"due to camera zoom or CanvasItem scale (in 2D)."
msgstr ""

msgid ""
"Performance will improve if the texture is displayed in the distance, since "
"sampling smaller versions of the original texture is faster and requires "
"less memory bandwidth."
msgstr ""

msgid ""
"The downside of mipmaps is that they increase memory usage by roughly 33%."
msgstr "mipmaps 的缺点是会增加大约 33% 的内存使用量。"

msgid ""
"It's recommended to enable mipmaps in 3D. However, in 2D, this should only "
"be enabled if your project visibly benefits from having mipmaps enabled. If "
"the camera never zooms out significantly, there won't be a benefit to "
"enabling mipmaps but memory usage will increase."
msgstr ""

#, fuzzy
msgid "Mipmaps > Limit"
msgstr "Mipmaps"

msgid ""
"**Mipmaps > Limit** is currently not implemented and has no effect when "
"changed."
msgstr ""

msgid ""
"If set to a value greater than ``-1``, limits the maximum number of mipmaps "
"that can be generated. This can be decreased if you don't want textures to "
"become too low-resolution at extreme distances, at the cost of some "
"graininess."
msgstr ""

#, fuzzy
msgid "Roughness > Mode"
msgstr "Roughness(粗糙度)"

msgid ""
"The color channel to consider as a roughness map in this texture. Only "
"effective if **Roughness > Src Normal** is not empty."
msgstr ""

msgid "Rougness > Src Normal"
msgstr ""

msgid ""
"The path to the texture to consider as a normal map for roughness filtering "
"on import. Specifying this can help decrease specular aliasing slightly in "
"3D."
msgstr ""

msgid "Roughness filtering on import is only used in 3D rendering, not 2D."
msgstr ""

#, fuzzy
msgid "Process > Fix Alpha Border"
msgstr "修复 Alpha 边界"

#, fuzzy
msgid ""
"This puts pixels of the same surrounding color in transition from "
"transparent to opaque areas. For textures displayed with bilinear filtering, "
"this helps mitigate the outline effect when exporting images from an image "
"editor."
msgstr ""
"这样会使周围颜色相同的像素从透明过渡到非透明. 从Photoshop等导出图像时, 它有助"
"于减轻轮廓效果."

msgid ""
"It's recommended to leave this enabled (as it is by default), unless this "
"causes issues for a particular image."
msgstr ""

#, fuzzy
msgid "Process > Premult Alpha"
msgstr "预乘Alpha"

msgid ""
"An alternative to fixing darkened borders with **Fix Alpha Border** is to "
"use premultiplied alpha. By enabling this option, the texture will be "
"converted to this format. A premultiplied alpha texture requires specific "
"materials to be displayed correctly:"
msgstr ""
"另一种修复深色边界的方法是使用预乘 alpha。启用该选项后，纹理将被转换为此格"
"式。请注意，在画布项（canvas items）上使用预乘 ALPHA 混合模式需要先创建材质，"
"并开启“PREMULT ALPHA”混合模式："

msgid ""
"In 2D, a :ref:`class_CanvasItemMaterial` will need to be created and "
"configured to use the **Premul Alpha** blend mode on CanvasItems that use "
"this texture."
msgstr ""

msgid ""
"In 3D, there is no support for premultiplied alpha blend mode yet, so this "
"option is only suited for 2D."
msgstr ""

msgid "Process > Normal Map Invert Y"
msgstr ""

#, fuzzy
msgid "Process > HDR as sRGB"
msgstr "HDR 转为 sRGB"

#, fuzzy
msgid ""
"Some HDR images you can find online may be broken and contain sRGB color "
"data (instead of linear color data). It is advised not to use those files. "
"If you absolutely have to, enabling this option on will make them look "
"correct."
msgstr ""
"一些已损坏的 HDR 文件包含 sRGB 颜色数据。建议不要使用这些文件，但在最糟的情况"
"下，启用此选项会使它们看起来正确。"

msgid ""
"Enabling **HDR as sRGB** on well-formatted HDR images will cause the "
"resulting image to look too dark, so leave this disabled if unsure."
msgstr ""

msgid "Process > HDR Clamp Exposure"
msgstr ""

msgid ""
"Some HDR panorama images you can find online may contain extremely bright "
"pixels, due to being taken from real life sources without any clipping."
msgstr ""

msgid ""
"While these HDR panorama images are accurate to real life, this can cause "
"the radiance map generated by Godot to contain sparkles when used as a "
"background sky. This can be seen in material reflections (even on rough "
"materials in extreme cases). Enabling **HDR Clamp Exposure** can resolve "
"this using a smart clamping formula that does not introduce *visible* "
"clipping – glow will keep working when looking at the background sky."
msgstr ""

msgid "Process > Size Limit"
msgstr ""

msgid ""
"If set to a value greater than ``0``, the size of the texture is limited on "
"import to a value smaller than or equal to the value specified here. For non-"
"square textures, the size limit affects the longer dimension, with the "
"shorter dimension scaled to preserve aspect ratio. Resizing is performed "
"using cubic interpolation."
msgstr ""

msgid ""
"This can be used to reduce memory usage without affecting the source images, "
"or avoid issues with textures not displaying on mobile/web platforms (as "
"these usually can't display textures larger than 4096×4096)."
msgstr ""

msgid "Detect 3D > Compress To"
msgstr ""

msgid ""
"This changes the :ref:`doc_importing_images_compress_mode` option that is "
"used when a texture is detected as being used in 3D."
msgstr ""

msgid ""
"Changing this import option only has an effect if a texture is detected as "
"being used in 3D. Changing this to **Disabled** then reimporting will not "
"change the existing compress mode on a texture (if it's detected to be used "
"in 3D), but choosing **VRAM Compressed** or **Basis Universal** will."
msgstr ""

msgid "Best practices"
msgstr "最佳实践"

msgid "Supporting high-resolution texture sizes in 2D without artifacts"
msgstr ""

msgid ""
"To support :ref:`multiple resolutions <doc_multiple_resolutions>` with crisp "
"visuals at high resolutions, you will need to use high-resolution source "
"images (suited for the highest resolution you wish to support without "
"blurriness, which is typically 4K in modern desktop games)."
msgstr ""

#, fuzzy
msgid "There are 2 ways to proceed:"
msgstr "有两种方法可以做到这一点:"

msgid ""
"Use a high base resolution in the project settings (such as 4K), then use "
"the textures at original scale. This is an easier approach."
msgstr ""

msgid ""
"Use a low base resolution in the project settings (such as 1080p), then "
"downscale textures when using them. This is often more difficult and can "
"make various calculations in script tedious, so the approach described above "
"is recommended instead."
msgstr ""

msgid ""
"After doing this, you may notice that textures become grainy at lower "
"viewport resolutions. To resolve this, enable **Mipmaps** on textures used "
"in 2D in the Import dock. This will increase memory usage."
msgstr ""

msgid ""
"Enabling mipmaps can also make textures appear blurrier, but you can choose "
"to make textures sharper (at the cost of some graininess) by setting "
"**Rendering > Textures > Default Filters > Texture Mipmap Bias** to a "
"negative value."
msgstr ""

msgid "Use appropriate texture sizes in 3D"
msgstr ""

msgid ""
"While there's no \"one size fits all\" recommendation, here are some general "
"recommendations for choosing texture sizes in 3D:"
msgstr ""

msgid ""
"The size of a texture should be adjusted to have a consistent texel density "
"compared to surrounding objects. While this cannot be ensured perfectly when "
"sticking to power-of-two texture sizes, it's usually possible to keep "
"texture detail fairly consistent throughout a 3D scene."
msgstr ""

msgid ""
"The smaller the object appears on screen, the smaller its texture should be. "
"For example, a tree that only appears in the background doesn't need a "
"texture resolution as high as other objects the player may be able to walk "
"close to."
msgstr ""

msgid ""
"Using power-of-two texture sizes is recommended, but is not required. "
"Textures don't have to be square – sizes such as 1024×512 are acceptable."
msgstr ""

msgid ""
"There are diminishing returns to using large texture sizes, despite the "
"increased memory usage and loading times. Most modern 3D games not using a "
"pixel art style stick to 2048×2048 textures on average, with 1024×1024 and "
"512×512 for textures spanning smaller surfaces."
msgstr ""

msgid ""
"When working with physically-based materials in 3D, you can reduce memory "
"usage and file size without affecting quality too much by using a lower "
"resolution for certain texture maps. This works especially well for textures "
"that only feature low-frequency detail (such as a normal map for a snow "
"texture)."
msgstr ""

msgid ""
"If you have control over how the 3D models are created, these tips are also "
"worth exploring:"
msgstr ""

msgid ""
"When working with 3D models that are mostly symmetrical, you may be able to "
"use mirrored UVs to double the effective texel density. This may look "
"unnatural when used on human faces though."
msgstr ""

msgid ""
"When working with 3D models using a low-poly style and plain colors, you can "
"rely on vertex colors instead of textures to represent colors on the model's "
"surfaces."
msgstr ""

msgid ""
"Images can be loaded and saved at runtime using :ref:`runtime file loading "
"and saving <doc_runtime_file_loading_and_saving_images>`, including from an "
"exported project."
msgstr ""

msgid "Translation status"
msgstr "翻译状态"
