# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-13 14:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:4
msgid "Inspector plugins"
msgstr "属性检查插件"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:6
msgid ""
"The inspector dock supports custom plugins to create your own widgets for "
"editing properties. This tutorial explains how to use the :ref:"
"`class_EditorInspectorPlugin` and :ref:`class_EditorProperty` classes to "
"write such plugins with the example of creating a custom value editor."
msgstr ""
"检查器dock支持自定义插件来创建自己的编辑属性的小部件. 本教程以创建自定义值编"
"辑器为例, 解释了如何使用 :ref:`class_EditorInspectorPlugin` 和 :ref:"
"`class_EditorProperty` 类来编写此类插件."

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:12
msgid "Setup"
msgstr "场景布置"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:14
msgid ""
"Just like :ref:`doc_making_plugins`, we start out by making a new plugin, "
"getting a ``plugin.cfg`` file created, and start with our :ref:"
"`class_EditorPlugin`.  However, instead of using ``add_custom_node`` or "
"``add_control_to_dock`` we'll use ``add_inspector_plugin``."
msgstr ""
"就像 :ref:`doc_making_plugins` 一样, 我们先制作一个新的插件, 得到一个 "
"``plugin.cfg`` 文件, 然后从我们的 :ref:`class_EditorPlugin` 开始. 但是, 我们"
"不使用 ``add_custom_node`` 或 ``add_control_to_dock`` , 而是使用 "
"``add_inspector_plugin`` ."

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:41
msgid "EditorInspectorPlugin"
msgstr "EditorInspectorPlugin(编辑器属性面板插件)"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:43
msgid ""
"To actually connect into the Inspector, we create a :ref:"
"`class_EditorInspectorPlugin` class. This script provides the \"hooks\" to "
"the inspector. Thanks to this class, the editor will call the functions "
"within the EditorInspectorPlugin while it goes through the process of "
"building the UI for the inspector. The script is used to check if we should "
"enable ourselves for any :ref:`class_Object` that is currently in the "
"inspector (including any :ref:`class_Resource` that is embedded!)."
msgstr ""
"为了实际连接到检查器, 我们创建一个 :ref:`class_EditorInspectorPlugin` 类. 这"
"个脚本为检查器提供了 \"钩子\". 多亏了这个类, 编辑器在为检查器构建UI的过程中, "
"会调用EditorInspectorPlugin中的函数. 该脚本用于检查我们是否应该为当前在检查器"
"中的任何 :ref:`class_Object`(包括任何 :ref:`class_Resource` 的嵌入！)启用自"
"己."

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:51
msgid ""
"Once enabled, EditorInspectorPlugin has methods that allow for adding :ref:"
"`class_EditorProperty` nodes or just custom :ref:`class_Control` nodes to "
"the beginning and end of the inspector for that :ref:`class_Object`, or for "
"overriding or changing existing property editors."
msgstr ""
"一旦启用,EditorInspectorPlugin方法允许添加 :ref:`class_EditorProperty` 节点或"
"只是自定义 :ref:`class_Control` 节点到该 :ref:`class_Object` 的检查器的开头和"
"结尾, 或者覆盖或改变现有的属性编辑器."

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:85
msgid "EditorProperty"
msgstr "EditorProperty(编辑器属性)"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:87
msgid ""
"Next, we define the actual :ref:`class_EditorProperty` custom value editor "
"that we want instantiated to edit integers. This is a custom :ref:"
"`class_Control` and we can add any kinds of additional nodes to make "
"advanced widgets to embed in the inspector."
msgstr ""
"接下来, 我们定义实际的 :ref:`class_EditorProperty` 自定义值编辑器, 我们希望实"
"例化它来编辑整数. 这是一个自定义的 :ref:`class_Control`, 我们可以添加任何类型"
"的附加节点来制作高级部件以嵌入到检查器中."
