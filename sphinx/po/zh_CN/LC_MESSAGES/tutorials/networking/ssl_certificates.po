# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-14 16:05+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/networking/ssl_certificates.rst:4
msgid "SSL certificates"
msgstr "SSL证书"

#: ../../docs/tutorials/networking/ssl_certificates.rst:7
msgid "Introduction"
msgstr "简介"

#: ../../docs/tutorials/networking/ssl_certificates.rst:9
msgid ""
"It is often desired to use SSL connections for communications to avoid \"man "
"in the middle\" attacks. Godot has a connection wrapper, :ref:`StreamPeerSSL "
"<class_StreamPeerSSL>`, which can take a regular connection and add security "
"around it. The :ref:`HTTPClient <class_HTTPClient>` class also supports "
"HTTPS by using this same wrapper."
msgstr ""
"通常希望使用SSL连接进行通信，这可以避免“中间人”攻击。 Godot有一个连接包装器 :"
"ref:`StreamPeerSSL <class_StreamPeerSSL>` ，它可以进行更安全的连接。 :ref:"
"`HTTPClient <class_HTTPClient>` 类也通过使用相同的包装器来支持HTTPS。"

#: ../../docs/tutorials/networking/ssl_certificates.rst:16
msgid ""
"For SSL to work, certificates need to be provided. A .crt file must be "
"specified in the project settings:"
msgstr "为了使SSL工作，需要提供证书。必须在项目设置中指定.crt文件:"

#: ../../docs/tutorials/networking/ssl_certificates.rst:21
msgid ""
"This file should contain any number of public certificates in https://en."
"wikipedia.org/wiki/Privacy-enhanced_Electronic_Mail format."
msgstr ""
"此文件应包含了许多具有 https://en.wikipedia.org/wiki/Privacy-"
"enhanced_Electronic_Mail 格式的公共证书。"

#: ../../docs/tutorials/networking/ssl_certificates.rst:24
msgid ""
"Of course, remember to add .crt as filter so the exporter recognizes this "
"when exporting your project."
msgstr "当然，请记住将.crt添加为过滤器，以便导出器在导出项目时识别这一点。"

#: ../../docs/tutorials/networking/ssl_certificates.rst:29
msgid "There are two ways to obtain certificates:"
msgstr "获取证书有两种方法:"

#: ../../docs/tutorials/networking/ssl_certificates.rst:32
msgid "Approach 1: self signed cert"
msgstr "方法1:自签名证书"

#: ../../docs/tutorials/networking/ssl_certificates.rst:34
msgid ""
"The first approach is the simplest: generate a private and public key pair, "
"and put the public pair in the .crt file (again, in PEM format). The private "
"key should go to your server."
msgstr ""
"第一种方法是最简单的:生成一副私钥和公钥对，并将公钥放在.crt文件中(再说一遍，"
"是PEM格式)。 私钥应该放到您的服务器中。"

#: ../../docs/tutorials/networking/ssl_certificates.rst:38
msgid ""
"OpenSSL has `some documentation <https://raw.githubusercontent.com/openssl/"
"openssl/master/doc/HOWTO/keys.txt>`__ about this. This approach also **does "
"not require domain validation** nor requires you to spend a considerable "
"amount of money in purchasing certificates from a CA."
msgstr ""
"OpenSSL有 `一些文档 <https://raw.githubusercontent.com/openssl/openssl/"
"master/doc/HOWTO/keys.txt>`__  谈到这些。 这种方法也 **不需要域名验证** 也不"
"要求您花费现金从CA购买证书。"

#: ../../docs/tutorials/networking/ssl_certificates.rst:45
msgid "Approach 2: CA cert"
msgstr "方法2:CA证书"

#: ../../docs/tutorials/networking/ssl_certificates.rst:47
msgid ""
"The second approach consists of using a certificate authority (CA) such as "
"Verisign, Geotrust, etc. This is a more cumbersome process, but it's more "
"\"official\" and ensures your identity is clearly represented."
msgstr ""
"第二种方法借助于证书颁发机构(CA)，如Verisign，Geotrust等。这是一个更加繁琐的"
"过程，但它更加“正式”并且确保您的身份被清晰地表示。"

#: ../../docs/tutorials/networking/ssl_certificates.rst:52
msgid ""
"Unless you are working with large companies or corporations, or need to "
"connect to someone else's servers (i.e., connecting to Google or some other "
"REST API provider via HTTPS) this method is not as useful."
msgstr ""
"除非您在大型公司工作或与其合作，或者需要连接到其他人的服务器(即通过HTTPS连接"
"到Google或其他REST API提供商)，否则此方法并不实用。"

#: ../../docs/tutorials/networking/ssl_certificates.rst:56
msgid ""
"Also, when using a CA issued cert, **you must enable domain validation**, to "
"ensure the domain you are connecting to is the one intended, otherwise any "
"website can issue any certificate in the same CA and it will work."
msgstr ""
"此外，当使用CA颁发的证书时， **您必须启用域名验证** ，以确保您要连接的域名是"
"您想连接的域名，否则一个CA颁发的证书将会成功用到任意数量的网站中。"

#: ../../docs/tutorials/networking/ssl_certificates.rst:61
msgid ""
"If you are using Linux, you can use the supplied certs file, generally "
"located in:"
msgstr "如果您使用的是Linux，则可以使用系统提供的证书文件，通常位于:"

#: ../../docs/tutorials/networking/ssl_certificates.rst:68
msgid ""
"This file allows HTTPS connections to virtually any website (i.e., Google, "
"Microsoft, etc.)."
msgstr "此文件允许HTTPS连接到几乎任何网站(即Google，Microsoft等)。"

#: ../../docs/tutorials/networking/ssl_certificates.rst:71
msgid ""
"Or pick any of the more specific certificates there if you are connecting to "
"a specific one."
msgstr "或者，如果要连接到特定网站，请选择任何更加具体的证书。"
