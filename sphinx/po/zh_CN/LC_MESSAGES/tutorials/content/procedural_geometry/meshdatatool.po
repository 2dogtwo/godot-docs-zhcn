# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-13 14:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:4
msgid "Using the MeshDataTool"
msgstr "使用MeshDataTool"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:6
msgid ""
"The :ref:`MeshDataTool <class_meshdatatool>` is not used to generate "
"geometry. But it is helpful for dynamically altering geometry, for example "
"if you want to write a script to tessellate, simplify, or deform meshes."
msgstr ""
":ref:`MeshDataTool <class_meshdatatool>` 不是用来生成几何体的, 但它对动态改变"
"几何体很有帮助, 例如, 如果你想写一个脚本来分割, 简化或变形网格."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:9
msgid ""
"The MeshDataTool is not as fast as altering arrays directly using ArrayMesh. "
"However, it provides more information and tools to work with meshes than the "
"ArrayMesh does. When the MeshDataTool is used, it calculates mesh data that "
"is not available in ArrayMeshes such as faces and edges, which are necessary "
"for certain mesh algorithms. If you do not need this extra information then "
"it may be better to use an ArrayMesh."
msgstr ""
"MeshDataTool不像直接使用ArrayMesh改变数组那么快. 但是, 它提供了比ArrayMesh更"
"多的信息和工具来处理网格. 当使用MeshDataTool时, 它会计算ArrayMeshes中没有的网"
"格数据, 如面和边, 这些数据对于某些网格算法来说是必要的. 如果您不需要这些额外"
"的信息, 那么使用 ArrayMesh 可能会更好."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:14
msgid ""
"MeshDataTool can only be used on Meshes that use the PrimitiveType ``Mesh."
"PRIMITIVE_TRIANGLES``."
msgstr "MeshDataTool 只能用于使用基本类型 ``Mesh.PRIMITIVE_TRIANGLES`` 的网格."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:16
msgid ""
"As an example, let's walk through the process of deforming the mesh "
"generated in the :ref:`ArrayMesh tutorial <doc_arraymesh>`."
msgstr ""
"举个例子, 让我们来看看 :ref:`ArrayMesh 教程 <doc_arraymesh>` 中生成的网格的变"
"形过程."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:18
msgid ""
"Assume the mesh is stored in an ArrayMesh named ``mesh``. We then initialize "
"the MeshDataTool from ``mesh`` by calling ``create_from_surface()``. If "
"there is already data initialized in the MeshDataTool calling "
"``create_from_surface()`` will clear it for you. Alternatively, you can call "
"``clear()`` yourself before re-using the MeshDataTool"
msgstr ""
"假设网格存储在一个名为 ``mesh`` 的ArrayMesh中. 然后我们通过调用 "
"``create_from_surface()`` 从 ``mesh`` 初始化MeshDataTool. 如果MeshDataTool中"
"已经有初始化的数据, 调用 ``create_from_surface()`` 将会清除它, 另外, 也可以在"
"重新使用MeshDataTool之前, 自己调用 ``clear()``"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:29
msgid ""
"``create_from_surface()`` uses the vertex arrays from the ArrayMesh to "
"calculate two additional arrays, one for edges and one for faces."
msgstr ""
"``create_from_surface()`` 使用ArrayMesh中的顶点数组来计算另外两个数组, 一个是"
"边, 一个是面."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:32
msgid ""
"An edge is a connection between any two vertices. Each edge in the edge "
"array contains a reference to the two vertices it is composed of, and up to "
"two faces that it is contained within."
msgstr ""
"边缘是任意两个顶点之间的连接. 边缘数组中的每一条边缘都包含了对它所组成的两个"
"顶点的引用, 以及它所包含的最多的两个面."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:35
msgid ""
"A face is a triangle made up of three vertices and three corresponding "
"edges. Each face in the face array contains a reference to the three "
"triangles and three edges it is composed of."
msgstr ""
"面是由三个顶点和三条对应的边组成的三角形. 面数组中的每个面都包含了它所组成的"
"三个三角形和三条边的参考."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:38
msgid ""
"The vertex array contains edges, faces, normals, color, tangent, uv, uv2, "
"bones, and weight information connected with each vertex."
msgstr ""
"顶点数组包含与每个顶点相连的边, 面, 法线, 颜色, 切线, uv, uv2, 骨骼和权重信"
"息."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:41
msgid ""
"To access information from these arrays you use a function of the form "
"``get_****()``:"
msgstr "为了从这些数组中获取信息, 你可以使用 ``get_ **** ()`` 的函数:"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:51
msgid ""
"What you choose to do with these functions is up to you. A common use case "
"is to iterate over all vertices and transform them in some way:"
msgstr ""
"你选择用这些函数做什么取决于你. 一个常见的用例是对所有顶点进行迭代, 并以某种"
"方式对它们进行转换:"

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:62
msgid ""
"Finally, ``commit_to_surface()`` adds a new surface to the ArrayMesh. So if "
"you are dynamically updating an existing ArrayMesh, first delete the "
"existing surface before adding a new one."
msgstr ""
"最后, ``commit_to_surface()`` 将一个新的曲面添加到ArrayMesh中. 因此, 如果你要"
"动态更新一个现有的ArrayMesh, 首先要删除现有的曲面, 然后再添加一个新的曲面."

#: ../../docs/tutorials/content/procedural_geometry/meshdatatool.rst:71
msgid ""
"Below is a complete example that creates a pulsing blob complete with new "
"normals and vertex colors."
msgstr "下面是一个完整的例子, 它可以创建一个具有新法线和顶点颜色的脉冲耀点."
