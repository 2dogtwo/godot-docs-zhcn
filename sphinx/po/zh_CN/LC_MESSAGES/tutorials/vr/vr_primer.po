# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-22 14:46+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/vr/vr_primer.rst:4
msgid "AR/VR primer"
msgstr "AR / VR示例"

#: ../../docs/tutorials/vr/vr_primer.rst:6
msgid ""
"This tutorial gives you a springboard into the world of AR and VR in the "
"Godot game engine."
msgstr "本教程为您提供了迈向Godot游戏引擎中AR和VR世界的跳板。"

#: ../../docs/tutorials/vr/vr_primer.rst:8
#, fuzzy
msgid ""
"A new architecture was introduced in Godot 3 called the AR/VR Server. On top "
"of this architecture, specific implementations are available as interfaces, "
"most of which are plugins based on GDNative. This tutorial focuses purely on "
"the core elements abstracted by the core architecture. This architecture has "
"enough features for you to create an entire VR experience that can then be "
"deployed for various interfaces. However, each platform often has some "
"unique features that are impossible to abstract. Such features will be "
"documented on the relevant interfaces and fall outside of the scope of this "
"primer."
msgstr ""
"在Godot 3中引入了一种称为AR / VR Server的新架构。 在此体系结构之上，特定的实"
"现可用作接口，其中大多数是基于GDNative的插件。 本教程仅关注核心架构抽象的核心"
"元素。 此体系结构具有足够的功能，您可以创建整个VR体验，然后可以为各种界面进行"
"部署。 但是，每个平台通常都有一些不可能抽象的独特功能。 这些特征将记录在相关"
"界面上，并且不属于本入门手册的范围。"

#: ../../docs/tutorials/vr/vr_primer.rst:12
msgid "AR/VR server"
msgstr "AR / VR服务器"

#: ../../docs/tutorials/vr/vr_primer.rst:14
#, fuzzy
msgid ""
"When Godot starts, each available interface will make itself known to the AR/"
"VR server. GDNative interfaces are setup as singletons; as long as they are "
"added to the list of GDNative singletons in your project, they will make "
"themselves known to the server."
msgstr ""
"当Godot启动时，每个可用的接口将使自己为AR / VR服务器所知。 GDNative接口设置为"
"单例，只要它们被添加到项目中的GDNative单例列表中，它们就会让服务器知道它们。"

#: ../../docs/tutorials/vr/vr_primer.rst:16
#, fuzzy
msgid ""
"You can use the function :ref:`get_interfaces() "
"<class_ARVRServer_method_get_interfaces>` to return a list of available "
"interfaces, but for this tutorial, we're going to use the :ref:`native "
"mobile VR interface <class_MobileVRInterface>` in our examples. This "
"interface is a straightforward implementation that uses the 3DOF sensors on "
"your phone for orientation and outputs a stereoscopic image to the screen. "
"It is also available in the Godot core and outputs to screen on desktop, "
"which makes it ideal for prototyping or a tutorial such as this one."
msgstr ""
"您可以使用函数 :ref:`get_interfaces <class_ARVRServer_get_interfaces>` 返回可"
"用接口列表，但在本教程中，我们将在示例中使用 :ref:`native mobile VR "
"interface <class_MobileVRInterface>` 。 此界面是一种简单的实现，它使用手机上"
"的3DOF传感器进行定位并将立体图像输出到屏幕。 它也可以在Godot核心中使用，并输"
"出到桌面上的屏幕，这使其成为原型设计或此类教程的理想选择。"

#: ../../docs/tutorials/vr/vr_primer.rst:18
#, fuzzy
msgid "To enable an interface, you execute the following code:"
msgstr "要启用界面，请执行以下代码:"

#: ../../docs/tutorials/vr/vr_primer.rst:35
#, fuzzy
msgid ""
"This code finds the interface we wish to use, initializes it and, if that is "
"successful, binds the main viewport to the interface. This last step gives "
"some control over the viewport to the interface, which automatically enables "
"things like stereoscopic rendering on the viewport."
msgstr ""
"此代码找到我们希望使用的界面，对其进行初始化，如果成功，则将主视区绑定到界"
"面。 最后一步是对视区的一些控制，它可以自动启用视区上的立体渲染。"

#: ../../docs/tutorials/vr/vr_primer.rst:37
#, fuzzy
msgid ""
"For our mobile VR interface, and any interface where the main input is "
"directly displayed on screen, the main viewport needs to be the viewport "
"where :ref:`arvr<class_Viewport_property_arvr>` is set to ``true``. But for "
"interfaces that render on an externally attached device, you can use a "
"secondary viewport. In the latter case, a viewport that shows its output on "
"screen will show an undistorted version of the left eye, while showing the "
"fully processed stereoscopic output on the device."
msgstr ""
"对于我们的移动vr界面，以及主要输入直接显示在屏幕上的任何界面，主视区需要是"
"arvr设置为true的视区。 但是对于在外部连接设备上呈现的界面，您可以使用辅助视"
"区。 在后一种情况下，在屏幕上显示其输出的视区将显示左眼的未失真版本，同时在设"
"备上显示完全处理的立体输出。"

#: ../../docs/tutorials/vr/vr_primer.rst:39
msgid ""
"Finally, you should only initialize an interface once; switching scenes and "
"reinitializing interfaces will just introduce a lot of overhead. If you want "
"to turn the headset off temporarily, just disable the viewport or set :ref:"
"`arvr<class_Viewport_property_arvr>` to ``false`` on the viewport. In most "
"scenarios though, you wouldn't disable the headset once you're in VR, this "
"can be disconcerting to the gamer."
msgstr ""
"最后，您应该只初始化一次界面； 切换场景和重新初始化界面都会带来很多性能消"
"耗。 如果您想暂时关闭耳机，只需禁用视口或在视口上将 :ref:"
"`arvr<class_Viewport_property_arvr>` 设置为 ``false``。 不过，在大多数情况"
"下，一旦玩家进入VR，您最好不要禁用耳机，因为这会让玩家感到很不舒服。"

#: ../../docs/tutorials/vr/vr_primer.rst:42
msgid "New AR/VR nodes"
msgstr "新的AR / VR节点"

#: ../../docs/tutorials/vr/vr_primer.rst:44
msgid ""
"Three new node types have been added for supporting AR and VR in Godot and "
"one additional node type especially for AR. These are:"
msgstr ""
"添加了三种新节点类型，用于支持Godot中的AR和VR，以及一种额外的节点类型，尤其是"
"AR。 这些是:"

#: ../../docs/tutorials/vr/vr_primer.rst:46
msgid ":ref:`ARVROrigin <class_ARVROrigin>` - our origin point in the world"
msgstr ":ref:`ARVROrigin <class_ARVROrigin>` - 我们在世界上的起源点"

#: ../../docs/tutorials/vr/vr_primer.rst:47
#, fuzzy
msgid ""
":ref:`ARVRCamera <class_ARVRCamera>` - a special subclass of the camera, "
"which is positionally tracked"
msgstr ":ref:`ARVRCamera <class_ARVRCamera>` - 位置跟踪的摄像机的特殊子类"

#: ../../docs/tutorials/vr/vr_primer.rst:48
msgid ""
":ref:`ARVRController <class_ARVRController>` - a new spatial class, which "
"tracks the location of a controller"
msgstr ""
":ref:`ARVRController <class_ARVRController>` - 一个新的空间类，它跟踪控制器的"
"位置"

#: ../../docs/tutorials/vr/vr_primer.rst:49
msgid ""
":ref:`ARVRAnchor <class_ARVRAnchor>` - an anchor point for an AR "
"implementation mapping a real world location into your virtual world"
msgstr ""
":ref:`ARVRAnchor <class_ARVRAnchor>` - AR实现的一个定位点，将真实世界的位置映"
"射到您的虚拟世界"

#: ../../docs/tutorials/vr/vr_primer.rst:51
msgid ""
"The first two must exist in your scene for AR/VR to work and this tutorial "
"focuses purely on them."
msgstr "前两个必须存在于场景中，AR / VR才能工作，本教程仅关注它们。"

#: ../../docs/tutorials/vr/vr_primer.rst:53
#, fuzzy
msgid ""
":ref:`ARVROrigin <class_ARVROrigin>` is an important node, you must have one "
"and only one of these somewhere in your scene. This node maps the center of "
"your real world tracking space to a location in your virtual world. "
"Everything else is positionally tracked in relation to this point. Where "
"this point lies exactly differs from one implementation to another, but the "
"best example to understand how this node works is to take a look at a room "
"scale location. While we have functions to adjust the point to center it on "
"the player by default, the origin point will be the center location of the "
"room you are in. As you physically walk around the room, the location of the "
"HMD is tracked in relation to this center position and the tracking is "
"mirror in the virtual world."
msgstr ""
":ref:`ARVROrigin <class_ARVROrigin>` 是一个重要的节点，您必须在场景中的某个地"
"方只有一个节点。 此节点将您的真实世界跟踪空间的中心映射到虚拟世界中的某个位"
"置。 其他所有内容都与这一点进行了位置跟踪。 这一点与一个实现完全不同，但理解"
"该节点如何工作的最佳示例是查看房间比例位置。 虽然我们有调整点的功能，但默认情"
"况下，原点将是您所在房间的中心位置。当您在房间内走动时，HMD的位置会相对于该中"
"心进行跟踪 位置和跟踪在虚拟世界中是镜像。"

#: ../../docs/tutorials/vr/vr_primer.rst:55
#, fuzzy
msgid ""
"To keep things simple, when you physically move around your room, the ARVR "
"Origin point stays where it is, the position of the camera and controllers "
"will be adjusted according to your movements. When you move through the "
"virtual world, either through controller input or when you implement a "
"teleport system, it is the position of the origin point which you will have "
"to adjust."
msgstr ""
"为了简单起见，当您在房间内移动时，ARVR Origin点保持原样，相机和控制器的位置将"
"根据您的移动进行调整。 当您在虚拟世界中移动时，无论是通过控制器输入还是实施传"
"送系统，它都是您必须调整位置的原点。"

#: ../../docs/tutorials/vr/vr_primer.rst:58
#, fuzzy
msgid ""
":ref:`ARVRCamera <class_ARVRCamera>` is the second node that must always be "
"a part of your scene and it must always be a child node of your origin node. "
"It is a subclass of Godot's normal camera. However, its position is "
"automatically updated each frame based on the physical orientation and "
"position of the HMD. Also due to the precision required for rendering to an "
"HMD or rendering an AR overlay over a real world camera, most of the "
"standard camera properties are ignored. The only properties of the camera "
"that are used are the near and far plane settings. The FOV, aspect ratio and "
"projection mode are all ignored."
msgstr ""
":ref:`ARVRCamera <class_ARVRCamera>` 是第二个必须始终作为场景一部分的节点，它"
"必须始终是原始节点的子节点。 它是Godot普通相机的子类。 然而，其位置基于HMD的"
"物理定向和位置每帧自动更新。 此外，由于渲染到HMD或在真实世界相机上渲染AR覆盖"
"所需的精度，大多数标准相机属性都被忽略。 使用的相机的唯一属性是近平面和远平面"
"设置。 FOV，宽高比和投影模式都被忽略。"

#: ../../docs/tutorials/vr/vr_primer.rst:60
#, fuzzy
msgid ""
"Note that, for our native mobile VR implementation, there is no positional "
"tracking, only the orientation of the phone and by extension, the HMD is "
"tracked. This implementation artificially places the camera at a height (Y) "
"of 1.85."
msgstr ""
"请注意，对于我们的原生移动VR实施，没有位置跟踪，只跟踪电话的方向和扩展HMD。 "
"该实现人为地将相机放置在1.85的高度(Y)处。"

#: ../../docs/tutorials/vr/vr_primer.rst:62
#, fuzzy
msgid ""
"Conclusion: your minimum setup in your scene to make AR or VR work should "
"look like this:"
msgstr "结论，您在场景中进行AR或VR工作的最小设置应如下所示:"

#: ../../docs/tutorials/vr/vr_primer.rst:66
#, fuzzy
msgid ""
"And that's all you need to get started. Obviously, you need to add something "
"more into your scene, so there is something to see, but after that, you can "
"export the game to your phone of choice, pop it into a viewer and away you "
"go."
msgstr ""
"这就是您开始所需要的一切。 显然您需要在场景中添加更多内容，以便有一些东西可以"
"看，但之后您可以将游戏导出到您选择的手机中，将其弹出到观众中然后离开。"

#: ../../docs/tutorials/vr/vr_primer.rst:69
msgid "Other things to consider"
msgstr "其他需要考虑的事情"

#: ../../docs/tutorials/vr/vr_primer.rst:71
msgid ""
"There are a few other subjects that we need to briefly touch upon in this "
"primer that are important to know."
msgstr "我们需要在本入门手册中简要介绍一些其他一些重要的知识。"

#: ../../docs/tutorials/vr/vr_primer.rst:73
#, fuzzy
msgid ""
"The first are our units. In normal 3D games, you don't have to think a lot "
"about units. As long as everything is at the same scale, a box sized 1 unit "
"by 1 unit by 1 unit can be any size from a cube you can hold in your hand to "
"something the size of a building. In AR and VR, this changes because things "
"in your virtual world are mapped to things in the real world. If you step 1 "
"meter forward in the real world, but you only move 1 cm forward in your "
"virtual world, you have a problem. The same with the position of your "
"controllers; if they don't appear in the right relative space, it breaks the "
"immersion for the player. Most VR platforms, including our AR/VR Server, "
"assume that 1 unit = 1 meter. The AR/VR server, however, has a property "
"that, for convenience, is also exposed on the ARVROrigin node called world "
"scale. For instance, setting this to a value of 10 changes our coordinate "
"system so 10 units = 1 meter."
msgstr ""
"首先是我们的单位。 在普通的3D游戏中，您不必考虑很多单位。 只要所有东西都处于"
"相同的比例，一个1个单位乘1个单位的盒子就可以是任何大小，从您可以握在手中的立"
"方体到建筑物的大小。 在AR和VR中，这会发生变化，因为虚拟世界中的事物被映射到现"
"实世界中的事物。 如果您在现实世界中向前迈出1米，但是您只在您的虚拟世界中向前"
"移动1厘米，那您就有问题了。 与控制器的位置相同，如果它们没有出现在正确的相对"
"空间中，则会打破游戏角色的沉浸感。 大多数VR平台，包括我们的AR / VR服务器，假"
"设1个单位= 1米。 然而，AR / VR服务器具有一个属性，为方便起见，该属性也在称为"
"世界规模的ARVROrigin节点上公开。 例如，将其设置为值10，它会更改我们的坐标系，"
"因此10个单位= 1米。"

#: ../../docs/tutorials/vr/vr_primer.rst:77
#, fuzzy
msgid ""
"Performance is another thing that needs to be carefully considered. "
"Especially VR taxes your game a lot more than most people realize. For "
"mobile VR, you have to be extra careful here, but even for desktop games, "
"there are three factors that make life extra difficult:"
msgstr ""
"性能是另一件需要仔细考虑的事情。 特别是VR对您的游戏征税比大多数人意识到的要多"
"得多。 对于移动VR，您必须要格外小心，但即使是桌面游戏，也有三个因素会让生活变"
"得更加困难:"

#: ../../docs/tutorials/vr/vr_primer.rst:79
msgid ""
"You are rendering stereoscopic, two for the price of one. While not exactly "
"doubling the work load and with things in the pipeline such as supporting "
"the new MultiView OpenGL extension in mind, there still is an extra workload "
"in rendering images for both eyes"
msgstr ""
"您正在渲染立体，两个以一个的价格。 虽然没有完全加倍工作量和管道中的东西，例如"
"考虑到支持新的MultiView OpenGL扩展，但双眼渲染图像仍然存在额外的工作量"

#: ../../docs/tutorials/vr/vr_primer.rst:80
#, fuzzy
msgid ""
"A normal game will run acceptably on 30fps and ideally manages 60fps. That "
"gives you a big range to play with between lower end and higher end "
"hardware. For any HMD application of AR or VR, however, 60fps is the "
"absolute minimum and you should target your games to run at a stable 90fps "
"to ensure your users don't get motion sickness right off the bat."
msgstr ""
"正常游戏将以30fps的速度运行，理想情况下可以管理60fps。 这使您可以在低端和高端"
"硬件之间进行大范围的操作。 对于AR或VR的任何HMD应用，但60fps是绝对最小值，您应"
"该将游戏定位为稳定的90fps，以确保您的用户不会立即晕车。"

#: ../../docs/tutorials/vr/vr_primer.rst:81
msgid ""
"The high FOV and related lens distortion effect require many VR experiences "
"to render at double the resolution. Yes a VIVE may only have a resolution of "
"1080x1200 per eye, we're rendering each eye at 2160x2400 as a result. This "
"is less of an issue for most AR applications."
msgstr ""
"高FOV和相关的镜头失真效果需要许多VR体验才能以两倍的分辨率呈现。 是的，VIVE可"
"能只有每只眼睛1080x1200的分辨率，因此我们将每只眼睛渲染为2160x2400。 对于大多"
"数AR应用程序来说，这不是一个问题。"

#: ../../docs/tutorials/vr/vr_primer.rst:83
#, fuzzy
msgid ""
"All in all, the workload your GPU has in comparison with a normal 3D game is "
"a fair amount higher. While things are in the pipeline to improve this, such "
"as MultiView and foveated rendering, these aren't supported on all devices. "
"This is why you see many VR games using a more art style and if you pay "
"close attention to those VR games that go for realism, you'll probably "
"notice they're a bit more conservative on the effects or use some good old "
"optical trickery."
msgstr ""
"总而言之，与普通3D游戏相比，GPU的工作负载相当高。 虽然有些东西正在改进中，例"
"如MultiView和foveated渲染，但并不是所有设备都支持这些。 这就是为什么您看到许"
"多VR游戏使用更多的艺术风格，如果您密切关注那些真实的VR游戏，您可能会注意到它"
"们对效果更加保守或使用一些好的旧光学技巧。"
