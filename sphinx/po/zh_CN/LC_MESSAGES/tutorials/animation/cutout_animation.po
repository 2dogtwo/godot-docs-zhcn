# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-26 22:13+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/animation/cutout_animation.rst:4
msgid "Cutout animation"
msgstr "剪纸动画"

#: ../../docs/tutorials/animation/cutout_animation.rst:7
msgid "What is it?"
msgstr "它是什么？"

#: ../../docs/tutorials/animation/cutout_animation.rst:9
msgid ""
"Cut-out is a technique of animating in 2D where pieces of paper (or similar "
"material) are cut in special shapes and laid one over the other. The papers "
"are animated and photographed, frame by frame using a stop motion technique "
"(more info `here <https://en.wikipedia.org/wiki/Cutout_animation>`__)."
msgstr ""
"剪纸是一种在2D中制作动画的技术，其中纸张(或类似的材质)被切割成特殊形状并且叠"
"放在一起。使用停止运动技术，这些纸张变成逐帧动画(更多信息见 `这里 <https://"
"en.wikipedia.org/wiki/Cutout_animation>`__)。"

#: ../../docs/tutorials/animation/cutout_animation.rst:15
msgid ""
"With the advent of the digital age, this technique became possible using "
"computers, which resulted in an increased amount of animation TV shows using "
"digital Cut-out. Notable examples are `South Park <https://en.wikipedia.org/"
"wiki/South_Park>`__ or `Jake and the Never Land Pirates <https://en."
"wikipedia.org/wiki/Jake_and_the_Never_Land_Pirates>`__ ."
msgstr ""
"随着数字时代的到来，可以使用计算机实现这种技术，这导致使用数字剪纸动画电视节"
"目的数量增加。 值得注意的示例有 `South Park <https://en.wikipedia.org/wiki/"
"South_Park>`__ 或 `Jake和Never Land Pirates <https://en.wikipedia.org/wiki/"
"Jake_and_the_Never_Land_Pirates>`__ 。"

#: ../../docs/tutorials/animation/cutout_animation.rst:23
msgid ""
"In video games, this technique has also become popular. Examples of this are "
"`Paper Mario <https://en.wikipedia.org/wiki/Super_Paper_Mario>`__ or `Rayman "
"Origins <https://en.wikipedia.org/wiki/Rayman_Origins>`__ ."
msgstr ""
"在视频游戏中，这种技术也变得流行。 例如 `Paper Mario <https://en.wikipedia."
"org/wiki/Super_Paper_Mario>`__ 或 `Rayman Origins <https://en.wikipedia.org/"
"wiki/Rayman_Origins>`__ 。"

#: ../../docs/tutorials/animation/cutout_animation.rst:29
msgid "Cutout in Godot"
msgstr "Godot中的剪纸"

#: ../../docs/tutorials/animation/cutout_animation.rst:31
msgid ""
"Godot provides a few tools for working with these kind of assets, but its "
"overall design makes it ideal for the workflow. The reason is that, unlike "
"other tools meant for this, Godot has the following advantages:"
msgstr ""
"Godot提供了一些工具来处理这些资源，但它的整体设计使其成为工作流程的理想选"
"择。 原因在于，与其他工具不同，Godot具有以下优势:"

#: ../../docs/tutorials/animation/cutout_animation.rst:35
msgid ""
"**The animation system is fully integrated with the engine**: This means, "
"animations can control much more than just motion of objects, such as "
"textures, sprite sizes, pivots, opacity, color modulation, etc. Everything "
"can be animated and blended."
msgstr ""
"**动画系统与引擎完全集成**:这意味着，动画可以控制的不仅仅是物体的运动，例如纹"
"理，精灵大小，枢轴，不透明度，颜色调制等。一切都可以动画和混合。"

#: ../../docs/tutorials/animation/cutout_animation.rst:39
msgid ""
"**Mix with Traditional**: AnimatedSprite allows traditional animation to be "
"mixed, useful for complex objects, such as shape of hands and foot, changing "
"facial expression, etc."
msgstr ""
"**与传统混合**: AnimatedSprite允许混合传统动画，对复杂对象有用，例如手脚形"
"状，改变面部表情等。"

#: ../../docs/tutorials/animation/cutout_animation.rst:42
msgid ""
"**Custom Shaped Elements**: Can be created with :ref:`Polygon2D "
"<class_Polygon2D>` allowing the mixing of UV animation, deformations, etc."
msgstr ""
"**自定义形状元素**: 可以使用 :ref:`Polygon2D <class_Polygon2D>` 创建，允许混"
"合UV动画，变形等。"

#: ../../docs/tutorials/animation/cutout_animation.rst:45
msgid ""
"**Particle Systems**: Can also be mixed with the traditional animation "
"hierarchy, useful for magic effects, jetpacks, etc."
msgstr ""
"**粒子系统**:也可以与传统的动画层次结构混合，对魔术效果，喷气背包等有用。"

#: ../../docs/tutorials/animation/cutout_animation.rst:47
msgid ""
"**Custom Colliders**: Set colliders and influence areas in different parts "
"of the skeletons, great for bosses, fighting games, etc."
msgstr ""
"**自定义碰撞器**:设置碰撞器并影响骨骼不同部位的区域，非常适合老板，格斗游戏"
"等。"

#: ../../docs/tutorials/animation/cutout_animation.rst:49
msgid ""
"**Animation Tree**: Allows complex combinations and blendings of several "
"animations, the same way it works in 3D."
msgstr "**动画树**:允许多个动画的复杂组合和混合，就像在3D中一样。"

#: ../../docs/tutorials/animation/cutout_animation.rst:52
msgid "And much more!"
msgstr "以及更多！"

#: ../../docs/tutorials/animation/cutout_animation.rst:55
#, fuzzy
msgid "Making of GBot"
msgstr "制作GBot！"

#: ../../docs/tutorials/animation/cutout_animation.rst:57
msgid ""
"For this tutorial, we will use as demo content the pieces of the `GBot "
"<https://www.youtube.com/watch?"
"v=S13FrWuBMx4&list=UUckpus81gNin1aV8WSffRKw>`__ character, created by "
"Andreas Esau."
msgstr ""
"在本教程中，我们将使用由Andreas Esau创建的 `GBot <https://www.youtube.com/"
"watch?v=S13FrWuBMx4&list=UUckpus81gNin1aV8WSffRKw>`__ 角色作为演示。"

#: ../../docs/tutorials/animation/cutout_animation.rst:63
msgid ""
"Get your assets: :download:`gbot_resources.zip <files/gbot_resources.zip>`."
msgstr ""
"获得您的资源: :download:`gbot_resources.zip <files/gbot_resources.zip>`。"

#: ../../docs/tutorials/animation/cutout_animation.rst:66
msgid "Setting up the rig"
msgstr "设置装配"

#: ../../docs/tutorials/animation/cutout_animation.rst:68
msgid "Create an empty Node2D as root of the scene, we will work under it:"
msgstr "创建一个空的Node2D作为场景的根，我们将在它下面工作:"

#: ../../docs/tutorials/animation/cutout_animation.rst:72
msgid ""
"OK, the first node of the model that we will create will be the hip. "
"Generally, both in 2D and 3D, the hip is the root of the skeleton. This "
"makes it easier to animate:"
msgstr ""
"好的，我们将创建的模型的第一个节点是臀部。 通常，无论是2D还是3D，臀部都是骨架"
"的根节点。 这使动画变得更容易:"

#: ../../docs/tutorials/animation/cutout_animation.rst:78
msgid ""
"Next will be the torso. The torso needs to be a child of the hip, so create "
"a child sprite and load the torso, later accommodate it properly:"
msgstr ""
"接下来将是躯干。 躯干需要是臀部的子节点，所以创建一个子节点精灵并加载躯干，然"
"后适当地调整它:"

#: ../../docs/tutorials/animation/cutout_animation.rst:83
msgid ""
"This looks good. Let's see if our hierarchy works as a skeleton by rotating "
"the torso. We can do this be pressing ``E`` to enter rotate mode, and "
"dragging with the left mouse button. To exit rotate mode hit ``ESC``."
msgstr ""
"这看起来不错。 让我们通过旋转躯干来看看我们的层次结构是否作为骨架。 我们可以"
"按 ``E`` 进入旋转模式，然后用鼠标左键拖动。 要退出旋转模式，请按 ``ESC``。"

#: ../../docs/tutorials/animation/cutout_animation.rst:89
msgid ""
"Ouch, that doesn't look good! The rotation pivot is wrong, this means it "
"needs to be adjusted."
msgstr "哎哟，看起来不太好看！ 旋转枢轴是错误的，这意味着它需要调整。"

#: ../../docs/tutorials/animation/cutout_animation.rst:92
msgid ""
"This small little cross in the middle of the :ref:`Sprite <class_Sprite>` is "
"the rotation pivot:"
msgstr "这个在 :ref:`Sprite <class_Sprite>` 中间的小十字架是旋转轴:"

#: ../../docs/tutorials/animation/cutout_animation.rst:99
msgid "Adjusting the pivot"
msgstr "调整枢轴"

#: ../../docs/tutorials/animation/cutout_animation.rst:101
msgid ""
"The pivot can be adjusted by changing the *offset* property in the Sprite:"
msgstr "可以通过更改Sprite中的 *offset* 属性来调整pivot:"

#: ../../docs/tutorials/animation/cutout_animation.rst:106
msgid ""
"However, there is a way to do it more *visually*. While hovering over the "
"desired pivot point, simply press the \"v\" key to move the pivot there for "
"the selected Sprite. Alternately, there is a tool in the tool bar that has a "
"similar function."
msgstr ""
"但是，有一种方法可以在 *视觉上* 做得更多。 将鼠标悬停在所需的枢轴点上时，只需"
"按“v”键即可为所选的Sprite移动枢轴。 或者，工具栏中有一个具有类似功能的工具。"

#: ../../docs/tutorials/animation/cutout_animation.rst:113
msgid ""
"Now it looks good! Let's continue adding body pieces, starting by the right "
"arm. Make sure to put the sprites in hierarchy, so their rotations and "
"translations are relative to the parent:"
msgstr ""
"现在看起来不错！ 让我们从右臂开始继续添加物体碎片。 确保将精灵放在层次结构"
"中，因此它们的旋转和平移是相对于父级的:"

#: ../../docs/tutorials/animation/cutout_animation.rst:119
msgid ""
"This seems easy, so continue with the left arm. The rest should be simple! "
"Or maybe not:"
msgstr "这似乎很容易，所以继续左臂。 其余的应该很简单！ 或者可能不是:"

#: ../../docs/tutorials/animation/cutout_animation.rst:124
msgid ""
"Right. In 2D, parent nodes appear below children nodes. Well, this sucks. "
"But how can this problem be solved? We want the left arm to appear behind "
"the hip and the torso. For this, we can move the nodes behind the hip (note "
"that you can bypass this by setting the Node2D Z property, but then you "
"won't learn about all this!):"
msgstr ""
"对。 在2D中，父节点出现在子节点下方。 嗯，这很糟糕。 但是如何解决这个问题"
"呢？ 我们希望左臂出现在臀部和躯干后面。 为此，我们可以移动臀部后面的节点(请注"
"意，您可以通过设置Node2D Z属性来绕过它，但是您将无法了解所有这些！):"

#: ../../docs/tutorials/animation/cutout_animation.rst:132
msgid ""
"But then, we lose the hierarchy layout, which allows to control the skeleton "
"like.. a skeleton. Is there any hope?.. Of Course!"
msgstr ""
"但是，我们失去了层次结构布局，这允许像骨架一样控制骨架。 有什么希望吗？当然！"

#: ../../docs/tutorials/animation/cutout_animation.rst:136
msgid "RemoteTransform2D node"
msgstr "RemoteTransform2D节点"

#: ../../docs/tutorials/animation/cutout_animation.rst:138
msgid ""
"Godot provides a special node, :ref:`RemoteTransform2D "
"<class_RemoteTransform2D>`. This node will transform nodes that are sitting "
"somewhere else in the hierarchy, by applying the transform to the remote "
"nodes."
msgstr ""
"Godot提供了一个特殊节点， :ref:`RemoteTransform2D "
"<class_RemoteTransform2D>`。 通过将转换应用于远程节点，此节点将转换位于层次结"
"构中其他位置的节点。"

#: ../../docs/tutorials/animation/cutout_animation.rst:142
msgid "This enables to have a visibility order independent from the hierarchy."
msgstr "这使得能够具有独立于层次结构的可见性顺序。"

#: ../../docs/tutorials/animation/cutout_animation.rst:145
msgid ""
"Simply create two more nodes as children from torso, remote_arm_l and "
"remote_hand_l and link them to the actual sprites:"
msgstr ""
"只需从torso，remote_arm_l和remote_hand_l创建另外两个节点作为子节点，并将它们"
"链接到实际的sprite:"

#: ../../docs/tutorials/animation/cutout_animation.rst:150
msgid ""
"Moving the remote transform nodes will move the sprites, allowing you to "
"easily animate and pose the character:"
msgstr "移动远程变换节点将移动精灵，使您可以轻松设置角色的动画和姿势:"

#: ../../docs/tutorials/animation/cutout_animation.rst:156
msgid "Completing the skeleton"
msgstr "完成骨架"

#: ../../docs/tutorials/animation/cutout_animation.rst:158
msgid ""
"Complete the skeleton by following the same steps for the rest of the parts. "
"The resulting scene should look similar to this:"
msgstr "按照其余部分的相同步骤完成骨架。 生成的场景应该类似于:"

#: ../../docs/tutorials/animation/cutout_animation.rst:163
msgid ""
"The resulting rig will be easy to animate. By selecting the nodes and "
"rotating them you can animate forward kinematics (FK) efficiently."
msgstr ""
"生成的装备很容易制作动画。 通过选择节点并旋转它们，您可以有效地为前向运动学"
"(FK)设置动画。"

#: ../../docs/tutorials/animation/cutout_animation.rst:166
msgid ""
"For simple objects and rigs this is fine, however the following problems are "
"common:"
msgstr "对于简单的物体和装配，这已足够，但仍有以下常见问题:"

#: ../../docs/tutorials/animation/cutout_animation.rst:169
msgid ""
"Selecting sprites can become difficult for complex rigs, and the scene tree "
"ends being used due to the difficulty of clicking over the proper sprite."
msgstr ""
"对于复杂的装配，选择精灵可能变得困难，并且由于难以点击正确的精灵而使用场景"
"树。"

#: ../../docs/tutorials/animation/cutout_animation.rst:172
msgid "Inverse Kinematics is often desired for extremities."
msgstr "四肢通常需要反向运动学。"

#: ../../docs/tutorials/animation/cutout_animation.rst:174
msgid "To solve these problems, Godot supports a simple method of skeletons."
msgstr "为了解决这些问题，Godot支持一种简单的骨骼方法。"

#: ../../docs/tutorials/animation/cutout_animation.rst:177
msgid "Skeletons"
msgstr "骨架"

#: ../../docs/tutorials/animation/cutout_animation.rst:179
msgid ""
"Godot doesn't actually support *true* Skeletons, but it does feature a "
"helper to create \"bones\" between nodes. This is enough for most cases, but "
"the way it works is not completely obvious."
msgstr ""
"Godot实际上并不支持 *真的* 骨架，但它确实有一个帮助器来创建节点之间的“骨"
"骼”。 对于大多数情况来说这已经足够了，但它的工作方式并不完全明显。"

#: ../../docs/tutorials/animation/cutout_animation.rst:185
msgid ""
"As an example, let's turn the right arm into a skeleton. To create "
"skeletons, a chain of nodes must be selected from top to bottom:"
msgstr ""
"举个示例，让我们将右臂变成骨架。 要创建骨架，必须从上到下选择一系列节点:"

#: ../../docs/tutorials/animation/cutout_animation.rst:190
msgid "Then, click on the Skeleton menu and select ``Make Bones``."
msgstr "然后，单击Skeleton菜单并选择 ``Make Bones`` 。"

#: ../../docs/tutorials/animation/cutout_animation.rst:194
msgid ""
"This will add bones covering the arm, but the result is not quite what is "
"expected."
msgstr "这将增加覆盖手臂的骨骼，但结果并不完全符合预期。"

#: ../../docs/tutorials/animation/cutout_animation.rst:199
msgid ""
"It looks like the bones are shifted up in the hierarchy. The hand connects "
"to the arm, and the arm to the body. So the question is:"
msgstr ""
"看起来骨骼在层次结构中向上移动。 手连接到手臂，手臂连接到物体。 所以问题是:"

#: ../../docs/tutorials/animation/cutout_animation.rst:202
msgid "Why does the hand lack a bone?"
msgstr "为什么手掌缺少骨骼？"

#: ../../docs/tutorials/animation/cutout_animation.rst:203
msgid "Why does the arm connect to the body?"
msgstr "为什么胳膊要连接到物体？"

#: ../../docs/tutorials/animation/cutout_animation.rst:205
msgid ""
"This might seem strange at first, but will make sense later on. In "
"traditional skeleton systems, bones have a position, an orientation and a "
"length. In Godot, bones are mostly helpers so they connect the current node "
"with the parent. Because of this, **toggling a node as a bone will just "
"connect it to the parent**."
msgstr ""
"起初这可能看起来很奇怪，但稍后会有意义。 在传统的骨架系统中，骨骼具有位置，方"
"向和长度。 在Godot中，骨骼主要是帮助者，因此它们将当前节点与父节点连接起来。 "
"因此， **将节点切换为骨骼只会将其连接到父** 。"

#: ../../docs/tutorials/animation/cutout_animation.rst:211
msgid ""
"So, with this knowledge. Let's do the same again so we have an actual, "
"useful skeleton."
msgstr ""
"所以，有了这些知识。 让我们再次这样做，这样我们就有了一个实际的，有用的骨架。"

#: ../../docs/tutorials/animation/cutout_animation.rst:214
msgid ""
"The first step is creating an endpoint node. Any kind of node will do, but :"
"ref:`Position2D <class_Position2D>` is preferred because it's visible in the "
"editor. The endpoint node will ensure that the last bone has orientation."
msgstr ""
"第一步是创建端点节点。 任何类型的节点都可以，但是 :ref:`Position2D "
"<class_Position2D>` 是首选，因为它在编辑器中可见。 端点节点将确保最后一个骨骼"
"具有方向。"

#: ../../docs/tutorials/animation/cutout_animation.rst:221
msgid ""
"Now select the whole chain, from the endpoint to the arm and create bones:"
msgstr "现在选择整个链，从端点到手臂并创建骨骼:"

#: ../../docs/tutorials/animation/cutout_animation.rst:226
msgid ""
"The result resembles a skeleton a lot more, and now the arm and forearm can "
"be selected and animated."
msgstr "结果类似于骨架更多，现在可以选择手臂和前臂并设置动画。"

#: ../../docs/tutorials/animation/cutout_animation.rst:229
msgid ""
"Finally, create endpoints in all meaningful extremities and connect the "
"whole skeleton with bones up to the hip."
msgstr "最后，在所有有意义的四肢中创建端点，并将整个骨骼与骨骼连接起来。"

#: ../../docs/tutorials/animation/cutout_animation.rst:232
msgid ""
"You may notice when connecting the hip and torso, that an extra bone is "
"created. To fix this, select the root and hip node, open the Skeleton menu, "
"click ``clear bones``."
msgstr ""
"您可能会注意到连接臀部和躯干时，会产生额外的骨骼。 要解决这个问题，请选择root"
"和hip节点，打开Skeleton菜单，单击 ``clear bones``。"

#: ../../docs/tutorials/animation/cutout_animation.rst:238
msgid "After fixing that your final skeleton should look something like this:"
msgstr "修复后您的最终骨架应该是这样的:"

#: ../../docs/tutorials/animation/cutout_animation.rst:242
msgid ""
"Finally! the whole skeleton is rigged! On close look, it is noticeable that "
"there is a second set of endpoints in the hands. This will make sense soon."
msgstr ""
"最后！ 整个骨架都被操纵了！ 仔细观察，可以看出手中有第二组端点。 这很快就会有"
"意义。"

#: ../../docs/tutorials/animation/cutout_animation.rst:246
msgid ""
"Now that a whole skeleton is rigged, the next step is setting up the IK "
"chains. IK chains allow for more natural control of extremities."
msgstr "现在整个骨架被装配，下一步是设置IK链。 IK链可以更自然地控制四肢。"

#: ../../docs/tutorials/animation/cutout_animation.rst:250
msgid "IK chains"
msgstr "IK链"

#: ../../docs/tutorials/animation/cutout_animation.rst:252
msgid ""
"IK chains are a powerful animation tool. Imagine you want to pose a "
"character's foot in a specific position on the ground. Without IK chains, "
"each motion of the foot would require rotating and positioning several other "
"bones. This would be quite complex and lead to imprecise results."
msgstr ""
"IK链是一种强大的动画工具。 想象一下，您想要将角色的脚放在地面上的特定位置。 "
"如果没有IK链，脚的每次运动都需要旋转和定位其他几个骨骼。 这将非常复杂并导致不"
"精确的结果。"

#: ../../docs/tutorials/animation/cutout_animation.rst:254
msgid "What if we could move the foot and let the rest of the leg self-adjust?"
msgstr "如果我们想要移动脚并让腿的其余部分自我调整怎么办？"

#: ../../docs/tutorials/animation/cutout_animation.rst:256
msgid "This type of posing is called IK (Inverse Kinematic)."
msgstr "这种类型的姿势称为IK(反向运动学)。"

#: ../../docs/tutorials/animation/cutout_animation.rst:258
msgid ""
"To create an IK chain, simply select a chain of bones from endpoint to the "
"base for the chain. For example, to create an IK chain for the right leg, "
"select the following:"
msgstr ""
"要创建IK链，只需从端点到链的基础选择一串骨骼。 例如，要为右腿创建IK链，请选择"
"以下内容:"

#: ../../docs/tutorials/animation/cutout_animation.rst:264
msgid "Then enable this chain for IK. Go to Edit > Make IK Chain."
msgstr "然后为IK启用此链。 转到编辑>制作IK链。"

#: ../../docs/tutorials/animation/cutout_animation.rst:268
msgid "As a result, the base of the chain will turn *Yellow*."
msgstr "结果，链的基部将变为 *黄色*。"

#: ../../docs/tutorials/animation/cutout_animation.rst:272
msgid ""
"Once the IK chain is set-up, simply grab any of the bones in the extremity, "
"any child or grand-child of the base of the chain and try to grab it and "
"move it. Result will be pleasant, satisfaction warranted!"
msgstr ""
"一旦IK链被设置，只需抓住肢体中的任何骨骼，链条基部的任何儿童或幼儿，并尝试抓"
"住它并移动它。 结果将是愉快的，满意的保证！"

#: ../../docs/tutorials/animation/cutout_animation.rst:279
msgid "Animation"
msgstr "动画"

#: ../../docs/tutorials/animation/cutout_animation.rst:281
msgid ""
"The following section will be a collection of tips for creating animation "
"for your rigs. If unsure about how the animation system in Godot works, "
"refresh it by checking again the :ref:`doc_animations`."
msgstr ""
"以下部分将为您的装备创建动画的提示集合。 如果不确定Godot的动画系统是如何工作"
"的，请再次检查 :ref:`doc_animations` 来刷新它。"

#: ../../docs/tutorials/animation/cutout_animation.rst:286
msgid "2D animation"
msgstr "2D动画"

#: ../../docs/tutorials/animation/cutout_animation.rst:288
msgid ""
"When doing animation in 2D, a helper will be present in the top menu. This "
"helper only appears when the animation editor window is opened:"
msgstr ""
"在2D中执行动画时，顶部菜单中将显示帮助程序。 此助手仅在打开动画编辑器窗口时出"
"现:"

#: ../../docs/tutorials/animation/cutout_animation.rst:293
msgid ""
"The key button will insert location/rotation/scale keyframes to the selected "
"objects or bones. This depends on the mask enabled. Green items will insert "
"keys while red ones will not, so modify the key insertion mask to your "
"preference."
msgstr ""
"键按钮将位置/旋转/缩放关键帧插入所选对象或骨骼。 这取决于启用的掩码。 绿色项"
"目将插入键，而红色项目不会，因此根据您的喜好修改键插入掩码。"

#: ../../docs/tutorials/animation/cutout_animation.rst:299
msgid "Rest pose"
msgstr "休息姿势"

#: ../../docs/tutorials/animation/cutout_animation.rst:301
msgid ""
"These kind of rigs do not have a \"rest\" pose, so it's recommended to "
"create a reference rest pose in one of the animations."
msgstr "这些装备没有“休息”姿势，因此建议在其中一个动画中创建参考静止姿势。"

#: ../../docs/tutorials/animation/cutout_animation.rst:304
msgid "Simply do the following steps:"
msgstr "只需执行以下步骤:"

#: ../../docs/tutorials/animation/cutout_animation.rst:306
msgid "Make sure the rig is in \"rest\" (not doing any specific pose)."
msgstr "确保装配处于“休息”状态(不做任何特定姿势)。"

#: ../../docs/tutorials/animation/cutout_animation.rst:308
msgid "Create a new animation, rename it to \"rest\"."
msgstr "创建一个新动画，将其重命名为“rest”。"

#: ../../docs/tutorials/animation/cutout_animation.rst:310
msgid "Select all nodes (box selection should work fine)."
msgstr "选择所有节点(框选择应该正常)。"

#: ../../docs/tutorials/animation/cutout_animation.rst:312
msgid "Select \"loc\" and \"rot\" on the top menu."
msgstr "在顶部菜单中选择“loc”和“rot”。"

#: ../../docs/tutorials/animation/cutout_animation.rst:314
msgid ""
"Push the key button. Keys will be inserted for everything, creating a "
"default pose."
msgstr "按下按键。 将为所有内容插入键，创建默认姿势。"

#: ../../docs/tutorials/animation/cutout_animation.rst:320
msgid "Rotation"
msgstr "旋转"

#: ../../docs/tutorials/animation/cutout_animation.rst:322
msgid ""
"Animating these models means only modifying the rotation of the nodes. "
"Location and scale are rarely used, with the only exception of moving the "
"entire rig from the hip (which is the root node)."
msgstr ""
"动画这些模型意味着只修改节点的旋转。 很少使用位置和比例，唯一的例外是从臀部"
"(根节点)移动整个装备。"

#: ../../docs/tutorials/animation/cutout_animation.rst:326
msgid ""
"As a result, when inserting keys, only the \"rot\" button needs to be "
"pressed most of the time:"
msgstr "因此，在插入键时，大多数时间只需要按下“rot”按钮:"

#: ../../docs/tutorials/animation/cutout_animation.rst:331
msgid ""
"This will avoid the creation of extra animation tracks for the position that "
"will remain unused."
msgstr "这将避免为将保持未使用的位置创建额外的动画轨道。"

#: ../../docs/tutorials/animation/cutout_animation.rst:335
msgid "Keyframing IK"
msgstr "关键帧IK"

#: ../../docs/tutorials/animation/cutout_animation.rst:337
msgid ""
"When editing IK chains, it is not necessary to select the whole chain to add "
"keyframes. Selecting the endpoint of the chain and inserting a keyframe will "
"automatically insert keyframes until the chain base too. This makes the task "
"of animating extremities much simpler."
msgstr ""
"编辑IK链时，无需选择整个链来添加关键帧。 选择链的端点并插入关键帧将自动插入关"
"键帧，直到链基。 这使得动画四肢的任务变得更加简单。"

#: ../../docs/tutorials/animation/cutout_animation.rst:343
#, fuzzy
msgid "Moving sprites above and behind others"
msgstr "移动精灵在其他物体之上和之后。"

#: ../../docs/tutorials/animation/cutout_animation.rst:345
msgid ""
"RemoteTransform2D works in most cases, but sometimes it is necessary to have "
"a node above and below others during an animation. To aid on this the "
"\"Behind Parent\" property exists on any Node2D:"
msgstr ""
"RemoteTransform2D在大多数情况下都有效，但有时在动画期间必须在其他节点之上和之"
"下有一个节点。 为此，在任何Node2D上都存在“Behind Parent”属性:"

#: ../../docs/tutorials/animation/cutout_animation.rst:352
msgid "Batch setting transition curves"
msgstr "批量设置过渡曲线"

#: ../../docs/tutorials/animation/cutout_animation.rst:354
msgid ""
"When creating complex animations and inserting many keyframes, editing the "
"individual keyframe curves for each can become an endless task. For this, "
"the Animation Editor has a small menu where changing animation curves is "
"easy. First select the appropriate keys. Next click on the pencil icon in "
"the bottom right of the animation panel, this will open the transition "
"editor. Now click on one of the curve options most appropriate for your "
"animation."
msgstr ""
"在创建复杂动画和插入许多关键帧时，编辑每个关键帧曲线可能会成为一项无穷无尽的"
"任务。 为此，动画编辑器有一个小菜单，可以轻松更改动画曲线。 首先选择合适的"
"键。 接下来，单击动画面板右下角的铅笔图标，这将打开转换编辑器。 现在单击最适"
"合动画的曲线选项之一。"

#: ../../docs/tutorials/animation/cutout_animation.rst:365
msgid "2D Skeletal deform"
msgstr ""

#: ../../docs/tutorials/animation/cutout_animation.rst:367
msgid ""
"Starting with Godot 3.1, 2D skeletal deform is supported, which can be used "
"to enhance this workflow and add more flexibility (single pieces can deform "
"more organically instead of having to use many separate ones)."
msgstr ""

#: ../../docs/tutorials/animation/cutout_animation.rst:370
msgid ""
"This process is described in a :ref:`separate tutorial <doc_2d_skeletons>`."
msgstr ""
