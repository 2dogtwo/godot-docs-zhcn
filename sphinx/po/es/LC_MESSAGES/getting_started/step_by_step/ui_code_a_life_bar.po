# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-14 16:05+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:4
msgid "Control the game's UI with code"
msgstr "Controla la UI del juego con código"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:7
msgid "Intro"
msgstr "Introducción"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:9
#, fuzzy
msgid ""
"In this tutorial, you will connect a character to a life bar and animate the "
"health loss."
msgstr ""
"En este tutorial conectarás un personaje a una barra de vida y animarás la "
"pérdida de salud."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:14
msgid ""
"Here's what you'll create: the bar and the counter animate when the "
"character takes a hit. They fade when it dies."
msgstr ""
"Esto es lo que vas a crear: la barra y el contador se animan cuando el "
"personaje recibe un golpe. Se desvanecen cuando muere."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:18
msgid "You will learn:"
msgstr "Aprenderás:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:20
msgid "How to **connect** a character to a GUI with signals"
msgstr "Cómo **conectar** un personaje a una GUI mediante señales"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:21
msgid "How to **control** a GUI with GDscript"
msgstr "Cómo **controlar** una GUI mediante GDscript"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:22
msgid "How to **animate** a life bar with the :ref:`Tween <class_Tween>` node"
msgstr ""
"Cómo **animar** una barra de vida con el nodo :ref:`Tween <class_Tween>`"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:25
msgid ""
"If you want to learn how to set up the interface instead, check out the step-"
"by-step UI tutorials:"
msgstr ""
"Si deseas aprender a configurar la interfaz en su lugar, echa un vistazo a "
"los tutoriales de UI paso a paso:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:28
msgid "Create a main menu screen"
msgstr "Crear una pantalla de menú principal"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:29
msgid "Create a game user interface"
msgstr "Crear una interfaz de usuario para el juego"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:32
msgid ""
"When you code a game, you want to build the core gameplay first: the main "
"mechanics, player input, win and loss conditions. The UI comes a bit later. "
"You want to keep all the elements that make up your project separate if "
"possible. Each character should be in its own scene, with its own scripts, "
"and so should the UI elements. This prevents bugs, keeps your project "
"manageable, and allows different team members to work on different parts of "
"the game."
msgstr ""
"Cuando codificas un juego, primero quieres construir el núcleo del juego: la "
"mecánica principal, el comportamiento del jugador, las condiciones de "
"ganancia y pérdida. La UI viene un poco más tarde. Si es posible, debes "
"mantener separados todos los elementos que componen tu proyecto. Cada "
"personaje debe estar en su propia escena, con sus propios scripts, y también "
"los elementos de la interfaz de usuario. Esto previene errores, mantiene su "
"proyecto manejable y permite que diferentes miembros del equipo trabajen en "
"diferentes partes del juego."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:40
msgid ""
"Once the core gameplay and the UI are ready, you'll need to connect them "
"somehow. In our example, we have the Enemy who attacks the Player at "
"constant time intervals. We want the life bar to update when the Player "
"takes damage."
msgstr ""
"Una vez que el núcleo del juego y la UI estén listos, tendrás que "
"conectarlos de alguna manera. En nuestro ejemplo, tenemos al Enemy (Enemigo) "
"que ataca al Player (Jugador) a intervalos de tiempo constantes. Queremos "
"que la barra de vida se actualice cuando el Player sufra daños."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:45
msgid "To do this, we will use **signals**."
msgstr "Para hacer esto, usaremos **señales**."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:49
#, fuzzy
msgid ""
"Signals are Godot's version of the Observer pattern. They allow us to send "
"out some message. Other nodes can connect to the object that **emits** the "
"signal and receive the information. It's a powerful tool we use a lot for "
"User Interface and achievement systems. You don't want to use them "
"everywhere, though. Connecting two nodes adds some coupling between them. "
"When there's a lot of connections, they become hard to manage. For more "
"information, check out the `signals video tutorial <https://youtu.be/"
"l0BkQxF7X3E>`_ on GDquest."
msgstr ""
"Las señales son la versión de Godot del patrón Observador. Nos permiten "
"enviar algún mensaje. Otros nodos pueden conectarse al objeto que **emite** "
"la señal y reciba la información. Es una herramienta poderosa que usamos "
"mucho para la interfaz de usuario y los sistemas de logros. Sin embargo, no "
"es conveniente usarlos en todas partes. La conexión de dos nodos añade algo "
"de acoplamiento entre ellos. Cuando hay muchas conexiones, se vuelven "
"difíciles de manejar. Para más información sobre el tutorial en vídeo "
"`señales <https://youtu.be/l0BkQxF7X3E>`_ en GDquest."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:53
msgid "Download and explore the start project"
msgstr "Descarga y explora el proyecto de inicio"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:55
msgid ""
"Download the Godot project: :download:`ui_code_life_bar.zip <files/"
"ui_code_life_bar.zip>`. It contains all the assets and scripts you need to "
"get started. Extract the .zip archive to get two folders: `start` and `end`."
msgstr ""
"Descarga el proyecto Godot: :download:`ui_code_life_bar.zip <files/"
"ui_code_life_bar.zip>`. Contiene todos los recursos y scripts que necesitas "
"para empezar. Extrae el archivo .zip para obtener las dos carpetas:`start` "
"and `end`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:58
#, fuzzy
msgid ""
"Load the ``start`` project in Godot. In the ``FileSystem`` dock, double "
"click on LevelMockup.tscn to open it. It's an RPG game's mockup where 2 "
"characters face each other. The pink enemy attacks and damages the green "
"square at regular time intervals, until its death. Feel free to try out the "
"game: the basic combat mechanics already work. But as the character isn't "
"connected to the life bar, the ``GUI`` doesn't do anything."
msgstr ""
"Carga el proyecto ``start`` en Godot. En el panel ``Sistema de Archivos`` "
"haz doble clic en LevelMockup.tscn para abrirlo. Es una maqueta de un juego "
"de RPG donde dos personajes se enfrentan. El enemigo rosa ataca y daña al "
"cuadrado verde a intervalos regulares, hasta su muerte. Tómate la libertad "
"de probar el juego: la mecánica básica de combate ya funciona. Pero como el "
"personaje no está conectado a la barra de vida, el ``GUI`` no hace nada."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:68
msgid ""
"This is typical of how you'd code a game: you implement the core gameplay "
"first, handle the player's death, and only then you'll add the interface. "
"That's because the UI listens to what's happening in the game. So it can't "
"work if other systems aren't in place yet. If you design the UI before you "
"prototype and test the gameplay, chances are it won't work well and you'll "
"have to re-create it from scratch."
msgstr ""
"Esto es típico de como codificarías un juego: primero implementas el núcleo "
"de la mecánica de juego, te encargas del muerto del jugador, y sólo entonces "
"añades la interfaz. Eso es porque la interfaz de usuario escucha lo que pasa "
"en el juego, así que no puede funcionar si los demás sistemas todavía están "
"implementados. Si diseñas la interfaz de usuario antes de construir y probar "
"la mecánica de juego, es probable que no funcionará bien y tendrás que "
"reconstruirlo desde cero."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:71
msgid "The scene contains a background sprite, a GUI, and two characters."
msgstr ""
"La escena contiene un sprite del fondo, una interfaz gráfica de usuario, y "
"dos personajes."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:75
msgid "The scene tree, with the GUI scene set to display its children"
msgstr "El árbol de escena, con la escena GUI puesto para mostrar sus hijos"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:77
#, fuzzy
msgid ""
"The GUI scene encapsulates all of the game's Graphical User Interface. It "
"comes with a barebones script where we get the path to nodes that exist "
"inside the scene:"
msgstr ""
"La escena GUI encapsula toda la Interfaz de Usuario del Juego. Viene con un "
"script básico donde obtenemos la ruta a los nodos que existen dentro de la "
"escena:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:105
msgid ""
"``number_label`` displays a life count as a number. It's a ``Label`` node"
msgstr ""
"``number_label`` muestra un contador de las vidas como número. Es un nodo "
"``Label``"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:107
msgid "``bar`` is the life bar itself. It's a ``TextureProgress`` node"
msgstr "``bar`` es la barra de vida misma. Es un nodo ``TextureProgress``"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:108
msgid ""
"``tween`` is a component-style node that can animate and control any value "
"or method from any other node"
msgstr ""
"``tween`` es un nodo estilo-componente que puede controlar y hacer una "
"animación de cualquier valor o método de cualquier otro nodo"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:113
msgid ""
"The project uses a simple organisation that works for game jams and tiny "
"games."
msgstr ""
"El proyecto utiliza una organización simple que funciona para los game jams "
"y juegos pequeños."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:115
msgid ""
"At the root of the project, in the `res://` folder, you will find the "
"`LevelMockup`. That's the main game scene and the one we will work with. All "
"the components that make up the game are in the `scenes/` folder. The "
"`assets/` folder contains the game sprites and the font for the HP counter. "
"In the `scripts/` folder you will find the enemy, the player, and the GUI "
"controller scripts."
msgstr ""
"En la raíz del proyecto, en la carpeta `res://`, encontrará el "
"`LevelMockup`. Esa es la escena principal del juego y con la que "
"trabajaremos. Todos los componentes que componen el juego están en la "
"carpeta `scenes/`. La carpeta `assets/` contiene los sprites del juego y la "
"fuente para el contador de HP. En la carpeta `scripts/` encontrará el "
"enemigo, el jugador y los scripts del controlador GUI."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:117
msgid ""
"Click the edit scene icon to the right of the node in the scene tree to open "
"the scene in the editor. You'll see the LifeBar and EnergyBar are sub-scenes "
"themselves."
msgstr ""
"Haz clic en el icono de editar escena a la derecha del nodo en el árbol de "
"escenas para abrir la escena en el editor. Verás que LifeBar y EnergyBar son "
"subescenas en sí mismas."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:121
msgid "The scene tree, with the Player scene set to display its children"
msgstr ""
"El árbol de escenas, con la escena Player lista para mostrar a sus hijos"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:124
msgid "Set up the Lifebar with the Player's max\\_health"
msgstr "Configura el Lifebar del Player con max\\_health"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:126
msgid ""
"We have to tell the GUI somehow what the player's current health is, to "
"update the lifebar's texture, and to display the remaining health in the HP "
"counter in the top left corner of the screen. To do this we send the "
"player's health to the GUI every time they take damage. The GUI will then "
"update the ``Lifebar`` and ``Number`` nodes with this value."
msgstr ""
"Tenemos que decirle al GUI de alguna manera cuál es la salud actual del "
"jugador, para actualizar la textura de la barra de vida, y para mostrar la "
"salud restante en el contador de HP en la esquina superior izquierda de la "
"pantalla. Para ello enviamos la salud del jugador a la GUI cada vez que "
"sufre un daño. La GUI actualizará los nodos ``Lifebar`` y ``Number`` con "
"este valor."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:132
msgid ""
"We could stop here to display the number, but we need to initialize the "
"bar's ``max_value`` for it to update in the right proportions. The first "
"step is thus to tell the ``GUI`` what the green character's ``max_health`` "
"is."
msgstr ""
"Podríamos parar aquí para mostrar el número, pero necesitamos inicializar el "
"``max_value`` de la barra para que se actualice en las proporciones "
"correctas. El primer paso es, por lo tanto, decirle al ``GUI`` cuál es el "
"``max_health`` del personaje verde."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:139
msgid ""
"The bar, a `TextureProgress`, has a `max_value` of `100` by default. If you "
"don't need to display the character's health with a number, you don't need "
"to change its `max_value` property. You send a percentage from the `Player` "
"to the `GUI` instead:  `health / max_health * 100`."
msgstr ""
"La barra, un `TextureProgress`, tiene un `max_value` de `100` por defecto. "
"Si no necesitas mostrar la salud del personaje con un número, no necesitas "
"cambiar su propiedad `max_value`. En su lugar, envía un porcentaje del "
"`Player` al `GUI`:  `health / max_health * 100`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:143
msgid ""
"Click the script icon to the right of the ``GUI`` in the Scene dock to open "
"its script. In the ``_ready`` function, we're going to store the "
"``Player``'s ``max_health`` in a new variable and use it to set the "
"``bar``'s ``max_value``:"
msgstr ""
"Haz clic en el icono de script a la derecha de la ``GUI`` en el panel de "
"Escenas para abrir su script. En la función ``_ready``, vamos a guardar el "
"``Player``'s ``max_health`` en una nueva variable y lo usaremos para "
"establecer el ``bar``'s ``max_value``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:164
msgid ""
"Let's break it down. ``$\"../Characters/Player\"`` is a shorthand that goes "
"one node up in the scene tree, and retrieves the ``Characters/Player`` node "
"from there. It gives us access to the node. The second part of the "
"statement, ``.max_health``, accesses the ``max_health`` on the Player node."
msgstr ""
"Vamos a desglosarlo. ``$\"../Characters/Player\"`` es una abreviatura que "
"sube un nodo en el árbol de escenas, y recupera el nodo ``Characters/"
"Player`` desde allí. Nos da acceso al nodo. La segunda parte de la "
"declaración, ``.max_health``, accede a ``max_health`` en el nodo Player."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:170
msgid ""
"The second line assigns this value to ``bar.max_value``. You could combine "
"the two lines into one, but we'll need to use ``player_max_health`` again "
"later in the tutorial."
msgstr ""
"La segunda línea asigna este valor a ``bar.max_value``. Se podrían combinar "
"las dos líneas en una sola, pero necesitaremos usar ``player_max_health`` "
"más adelante en el tutorial."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:174
msgid ""
"``Player.gd`` sets the ``health`` to ``max_health`` at the start of the "
"game, so we could work with this. Why do we still use ``max_health``? There "
"are two reasons:"
msgstr ""
"``Player.gd`` establece ``health`` en ``max_health`` al principio del juego, "
"para que podamos trabajar con esto. ¿Por qué seguimos usando ``max_health``? "
"Hay dos razones:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:178
msgid ""
"We don't have the guarantee that ``health`` will always equal "
"``max_health``: a future version of the game may load a level where the "
"player already lost some health."
msgstr ""
"No tenemos la garantía de que ``health`` sea siempre igual a la "
"``max_salud``: una futura versión del juego puede cargar un nivel en el que "
"el jugador ya haya perdido algo de salud."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:184
msgid ""
"When you open a scene in the game, Godot creates nodes one by one, following "
"the order in your Scene dock, from top to bottom. `GUI` and `Player` are not "
"part of the same node branch. To make sure they both exist when we access "
"each other, we have to use the `_ready` function. Godot calls `_ready` right "
"after it loaded all nodes, before the game starts. It's the perfect function "
"to set everything up and prepare the game session. Learn more about _ready: :"
"doc:`scripting_continued`"
msgstr ""
"Cuando abres una escena en el juego, Godot crea nodos uno a uno, siguiendo "
"el orden de tu panel de Escenas, de arriba a abajo. GUI` y `Player` no son "
"parte de la misma rama del nodo. Para asegurarnos de que ambos existen "
"cuando accedemos el uno al otro, tenemos que usar la función `_ready`. Godot "
"llama `_ready` justo después de haber cargado todos los nodos, antes de que "
"el juego comience. Es la función perfecta para configurar todo y preparar la "
"sesión de juego. Más información about _ready: :doc:`scripting_continued`"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:188
msgid "Update health with a signal when the player takes a hit"
msgstr "Actualizar la salud con una señal cuando el jugador recibe un golpe"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:190
msgid ""
"Our GUI is ready to receive the ``health`` value updates from the "
"``Player``. To achieve this we're going to use **signals**."
msgstr ""
"Nuestra GUI está lista para recibir las actualizaciones de valor de "
"``health`` desde ``Player``. Para lograr esto vamos a usar **señales**."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:195
msgid ""
"There are many useful built-in signals like `enter_tree` and `exit_tree`, "
"that all nodes emit when they are respectively created and destroyed. You "
"can also create your own using the `signal` keyword. On the `Player` node, "
"you'll find two signals we created for you: `died` and `health_changed`."
msgstr ""
"Hay muchas señales útiles incorporadas como `enter_tree` y `exit_tree`, que "
"todos los nodos emiten cuando son creados y destruidos respectivamente. "
"También puedes crear el tuyo propio usando la palabra clave `signal`. En el "
"nodo `Player`, encontrarás dos señales que hemos creado para ti: `died` y "
"`health_changed`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:197
msgid ""
"Why don't we directly get the ``Player`` node in the ``_process`` function "
"and look at the health value? Accessing nodes this way creates tight "
"coupling between them. If you did it sparingly it may work. As your game "
"grows bigger, you may have many more connections. If you get nodes this way "
"it gets complex quickly. Not only that: you need to listen to the state "
"change constantly in the ``_process`` function. This check happens 60 times "
"a second and you'll likely break the game because of the order in which the "
"code runs."
msgstr ""
"¿Por qué no buscamos directamente el nodo ``Player`` en la función "
"``_process`` y miramos el valor de la salud? Accediendo a los nodos de esta "
"manera se crea un estrecho acoplamiento entre ellos. Si lo hicieras con "
"moderación, podría funcionar. A medida que el juego crece, es posible que "
"tengas muchas más conexiones. Si obtienes nodos de esta manera, se complica "
"rápidamente. No sólo eso: necesitas escuchar el cambio de estado "
"constantemente en la función ``_process``. Esta comprobación se realiza 60 "
"veces por segundo y es probable que rompas el juego debido al orden en el "
"que se ejecuta el código."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:206
msgid ""
"On a given frame you may look at another node's property *before* it was "
"updated: you get a value from the last frame. This leads to obscure bugs "
"that are hard to fix. On the other hand, a signal is emitted right after a "
"change happened. It **guarantees** you're getting a fresh piece of "
"information. And you will update the state of your connected node *right "
"after* the change happened."
msgstr ""
"En un determinado frame se puede ver la propiedad de otro nodo *antes* de "
"que se actualizara: se obtiene un valor del último frame. Esto conduce a "
"errores que son difíciles de arreglar. Por otro lado, se emite una señal "
"justo después de que ha ocurrido un cambio. Esto **garantiza** que estás "
"recibiendo un nuevo fragmento de información. Se actualizará el estado del "
"nodo conectado *justo después* de que se haya producido el cambio."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:215
msgid ""
"The Observer pattern, that signals derive from, still adds a bit of coupling "
"between node branches. But it's generally lighter and more secure than "
"accessing nodes directly to communicate between two separate classes. It can "
"be okay for a parent node to get values from its children. But you'll want "
"to favor signals if you're working with two separate branches. Read Game "
"Programming Patterns for more information on the `Observer pattern <http://"
"gameprogrammingpatterns.com/observer.html>`_. The `full book <http://"
"gameprogrammingpatterns.com/contents.html>`_ is available online for free."
msgstr ""
"El patrón Observador, del que derivan las señales, todavía añade un poco de "
"acoplamiento entre las ramas de los nodos. Pero generalmente es más ligero y "
"seguro que acceder a los nodos directamente para comunicarse entre dos "
"clases separadas. Puede estar bien que un nodo padre obtenga valores de sus "
"hijos. Pero querrás favorecer las señales si estás trabajando con dos ramas "
"separadas. Lee Patrones de Programación de Juegos para obtener más "
"información sobre el patrón `Observador <http://gameprogrammingpatterns.com/"
"observer.html>`_. El `libro completo <http://gameprogrammingpatterns.com/"
"contents.html>`_ está disponible en línea de forma gratuita."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:219
#, fuzzy
msgid ""
"With this in mind, let's connect the ``GUI`` to the ``Player``. Click on the "
"``Player`` node in the scene dock to select it. Head down to the Inspector "
"and click on the Node tab. This is the place to connect nodes to listen to "
"the one you selected."
msgstr ""
"Con esto en mente, vamos a conectar el ``GUI`` con el ``Player``. Haz clic "
"en el nodo ``Player`` del panel de escenas para seleccionarlo. Dirígete al "
"Inspector y haz clic en la pestaña Nodos. Este es el lugar donde se conectan "
"los nodos para que escuche el que seleccionaste."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:224
msgid "The first section lists custom signals defined in ``Player.gd``:"
msgstr ""
"La primera sección enlista las señales personalizadas definidas en ``Player."
"gd``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:226
msgid ""
"``died`` is emitted when the character died. We will use it in a moment to "
"hide the UI."
msgstr ""
"``died`` se emite cuando el personaje muere. Lo usaremos en un momento para "
"ocultar la UI."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:228
msgid "``health_changed`` is emitted when the character got hit."
msgstr "``health_changed`` se emite cuando el personaje es golpeado."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:232
msgid "We're connecting to the health\\_changed signal"
msgstr "Nos estamos conectando a la señal health\\_changed"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:234
msgid ""
"Select ``health_changed`` and click on the Connect button in the bottom "
"right corner to open the Connect Signal window. On the left side you can "
"pick the node that will listen to this signal. Select the ``GUI`` node. The "
"right side of the screen lets you pack optional values with the signal. We "
"already took care of it in ``Player.gd``. In general I recommend not to add "
"too many arguments using this window as they're less convenient than doing "
"it from the code."
msgstr ""
"Selecciona ``health_changed`` y haz clic en el botón Conectar situado en la "
"esquina inferior derecha para abrir la ventana Contectando señal. En el lado "
"izquierdo puedes elegir el nodo que escuchará esta señal. Selecciona el nodo "
"``GUI``. El lado derecho de la pantalla permite agrupar valores opcionales "
"con la señal. Ya nos encargamos de ello en ``Player.gd`. En general se "
"recomienda no añadir demasiados argumentos usando esta ventana ya que son "
"menos convenientes que hacerlo desde el código."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:244
msgid "The Connect Signal window with the GUI node selected"
msgstr "La ventana Conectando Señal con el nodo GUI seleccionado"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:248
msgid ""
"You can optionally connect nodes from the code. However doing it from the "
"editor has two advantages:"
msgstr ""
"Opcionalmente se pueden conectar nodos desde el código. Pero hacerlo desde "
"el editor tiene dos ventajas:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:250
msgid "Godot can write new callback functions for you in the connected script"
msgstr ""
"Godot puede escribir nuevas funciones de devolución de llamada para ti en el "
"script conectado"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:251
msgid ""
"An emitter icon appears next to the node that emits the signal in the Scene "
"dock"
msgstr ""
"Aparece un icono en forma de emisor junto al nodo que emite la señal en el "
"panel de Escenas"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:253
msgid ""
"At the bottom of the window you will find the path to the node you selected. "
"We're interested in the second row called \"Method in Node\". This is the "
"method on the ``GUI`` node that gets called when the signal is emitted. This "
"method receives the values sent with the signal and lets you process them. "
"If you look to the right, there is a \"Make Function\" radio button that is "
"on by default. Click the connect button at the bottom of the window. Godot "
"creates the method inside the ``GUI`` node. The script editor opens with the "
"cursor inside a new ``_on_Player_health_changed`` function."
msgstr ""
"En la parte inferior de la ventana se encuentra la ruta al nodo "
"seleccionado. Nos interesa la segunda fila llamada \"Method in Node\". Este "
"es el método en el nodo ``GUI`` que se llama cuando se emite la señal. Este "
"método recibe los valores enviados con la señal y permite procesarlos. Si "
"observas a la derecha, hay un botón de radio que dice \"Make Function\" y "
"está activado por defecto. Haz clic en el botón de conexión en la parte "
"inferior de la ventana. Godot crea el método dentro del nodo ``GUI``. El "
"editor de scripts se abre con el cursor dentro de una nueva función "
"``_on_Player_health_changed``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:265
msgid ""
"When you connect nodes from the editor, Godot generates a method name with "
"the following pattern: ``_on_EmitterName_signal_name``. If you wrote the "
"method already, the \"Make Function\" option will keep it. You may replace "
"the name with anything you'd like."
msgstr ""
"Cuando conectas nodos desde el editor, Godot genera un nombre de método con "
"el siguiente patrón: ``_on_EmitterName_signal_name``. Si ya se ha escrito el "
"método, la opción \"Make Function\" lo mantendrá. Puedes reemplazar el "
"nombre con lo que quieras."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:272
msgid "Godot writes the callback method for you and takes you to it"
msgstr ""
"Godot escribe el método de devolución de llamada para ti y te lleva a él"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:274
#, fuzzy
msgid ""
"Inside the parentheses after the function name, add a ``player_health`` "
"argument. When the player emits the ``health_changed`` signal, it will send "
"its current ``health`` alongside it. Your code should look like:"
msgstr ""
"Dentro de los paréntesis después del nombre de la función, agregue un "
"argumento ``player_health``. Cuando el jugador emite la señal "
"``health_changed`` enviará su ``health`` actual junto a él. Tu código "
"debería verse así:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:292
#, fuzzy
msgid ""
"The engine does not convert PascalCase to snake_case, for C# examples we'll "
"be using PascalCase for method names & camelCase for method parameters, "
"which follows the official `C# naming conventions. <https://docs.microsoft."
"com/en-us/dotnet/standard/design-guidelines/capitalization-conventions>`_"
msgstr ""
"El motor no convierte PascalCase a snake_case, para ejemplos de C# usaremos "
"PascalCase para nombres de métodos y camelCase para parámetros de métodos "
"que siguen las convenciones oficiales de nomenclatura `C#. <https://docs."
"microsoft.com/en-us/dotnet/standard/design-guidelines/capitalization-"
"conventions>`_"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:299
msgid ""
"In Player.gd, when the Player emits the health\\_changed signal, it also "
"sends its health value"
msgstr ""
"En Player.gd, cuando el Player emite la señal health\\_changed, también "
"envía su valor de salud"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:302
#, fuzzy
msgid ""
"Inside ``_on_Player_health_changed``, let's call a second function called "
"``update_health`` and pass it the ``player_health`` variable."
msgstr ""
"Dentro de ``_on_Player_health_changed`` llamaremos a una segunda función "
"llamada ``update_health`` y le pasaremos la variable ``player_health``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:307
msgid ""
"We could directly update the health value on `LifeBar` and `Number`. There "
"are two reasons to use this method instead:"
msgstr ""
"Podríamos actualizar directamente el valor de salud en `LifeBar` y `Number`. "
"Hay dos razones para usar este método en su lugar:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:309
msgid ""
"The name makes it clear for our future selves and teammates that when the "
"player took damage, we update the health count on the GUI"
msgstr ""
"El nombre deja claro para nuestro futuro yo y compañeros de equipo que "
"cuando el jugador sufrió un daño, actualizamos el conteo de salud con la GUI"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:310
msgid "We will reuse this method a bit later"
msgstr "Reutilizaremos este método un poco más tarde"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:312
msgid ""
"Create a new ``update_health`` method below ``_on_Player_health_changed``. "
"It takes a new\\_value as its only argument:"
msgstr ""
"Crea un nuevo método ``update_health`` debajo de "
"``_on_Player_health_changed``. Solo necesita new\\_value como único "
"argumento:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:327
msgid "This method needs to:"
msgstr "Este método necesita hacer:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:329
msgid ""
"set the ``Number`` node's ``text`` to ``new_value`` converted to a string"
msgstr ""
"establece ``text`` del nodo ``Number`` en ``new_value`` convertido en un "
"string"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:331
msgid "set the ``TextureProgress``'s ``value`` to ``new_value``"
msgstr "establece el ``value`` de ``TextureProgress`` en ``new_value``"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:350
#, fuzzy
msgid ""
"``str`` is a built-in function that converts about any value to text. "
"``Number``'s ``text`` property requires a string, so we can't assign it to "
"``new_value`` directly"
msgstr ""
"``str`` es una función incorporada que convierte cualquier valor en texto. "
"La propiedad ``Number``'s ``text`` requiere un string por lo que no podemos "
"asignarlo a ``new_value`` directamente"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:354
msgid ""
"Also call ``update_health`` at the end of the ``_ready`` function to "
"initialize the ``Number`` node's ``text`` with the right value at the start "
"of the game. Press F5 to test the game: the life bar updates with every "
"attack!"
msgstr ""
"Llama también a ``update_health`` al final de la función ``_ready`` para "
"inicializar el texto del nodo ``Number`` con el valor correcto al principio "
"del juego. Pulsa F5 para probar el juego: ¡la barra de vida se actualiza con "
"cada ataque!"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:361
msgid ""
"Both the Number node and the TextureProgress update when the Player takes a "
"hit"
msgstr ""
"Tanto el nodo Number como el TextureProgress se actualizan cuando el jugador "
"recibe un golpe"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:365
msgid "Animate the loss of life with the Tween node"
msgstr "Animar la pérdida de vida con el nodo Tween"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:367
#, fuzzy
msgid ""
"Our interface is functional, but it could use some animation. That's a good "
"opportunity to introduce the ``Tween`` node, an essential tool to animate "
"properties. ``Tween`` animates anything you'd like from a start to an end "
"state over a certain duration. For example, it can animate the health on the "
"``TextureProgress`` from its current level to the ``Player``'s new "
"``health`` when the character takes damage."
msgstr ""
"Nuestra interfaz es funcional, pero le vendría bien un poco de animación. Es "
"una buena oportunidad para presentar el nodo ``Tween``, una herramienta "
"esencial para animar propiedades. Tween anima cualquier cosa que quieras "
"desde el principio hasta el final durante un cierto tiempo. Por ejemplo, "
"puede animar la salud del ``TextureProgress`` desde su nivel actual hasta el "
"nuevo valor de ``health`` del ``Player`` cuando el personaje sufre daños."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:374
msgid ""
"The ``GUI`` scene already contains a ``Tween`` child node stored in the "
"``tween`` variable. Let's now use it. We have to make some changes to "
"``update_health``."
msgstr ""
"La escena ``GUI`` ya contiene un nodo hijo ``Tween`` almacenado en la "
"variable ``tween``. Ahora vamos a usarlo. Tenemos que hacer algunos cambios "
"en ``update_health``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:378
msgid ""
"We will use the ``Tween`` node's ``interpolate_property`` method. It takes "
"seven arguments:"
msgstr ""
"Usaremos el método ``Tween`` del nodo ``interpolate_property``. Se necesitan "
"siete argumentos:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:381
msgid "A reference to the node who owns the property to animate"
msgstr "Una referencia al nodo que posee la propiedad para animar"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:382
msgid "The property's identifier as a string"
msgstr "El identificador de la propiedad es un string"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:383
msgid "The starting value"
msgstr "El valor inicial"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:384
msgid "The end value"
msgstr "El valor final"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:385
msgid "The animation's duration in seconds"
msgstr "Duración de la animación en segundos"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:386
msgid "The type of the transition"
msgstr "El tipo de transición"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:387
msgid "The easing to use in combination with the equation."
msgstr "La facilidad de uso en combinación con la ecuación."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:389
#, fuzzy
msgid ""
"The last two arguments combined correspond to an easing equation. This "
"controls how the value evolves from the start to the end point."
msgstr ""
"Los dos últimos argumentos combinados corresponden a una `ecuación de "
"relajación <#>`__. Esto controla cómo evoluciona el valor desde el punto de "
"inicio hasta el punto final."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:393
msgid ""
"Click the script icon next to the ``GUI`` node to open it again. The "
"``Number`` node needs text to update itself, and the ``Bar`` needs a float "
"or an integer. We can use ``interpolate_property`` to animate a number, but "
"not to animate text directly. We're going to use it to animate a new ``GUI`` "
"variable named ``animated_health``."
msgstr ""
"Haz clic en el icono del script junto al nodo ``GUI`` para abrirlo de nuevo. "
"El nodo ``Number`` necesita texto para actualizarse, y ``Bar`` necesita un "
"float o un integer. Podemos usar ``interpolate_property`` para animar un "
"número, pero no para animar texto directamente. Vamos a usarlo para animar "
"una nueva variable ``GUI`` llamada ``animated_health``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:399
msgid ""
"At the top of the script, define a new variable, name it "
"``animated_health``, and set its value to 0. Navigate back to the "
"``update_health`` method and clear its content. Let's animate the "
"``animated_health`` value. Call the ``Tween`` node's "
"``interpolate_property`` method:"
msgstr ""
"En la parte superior del script, define una nueva variable, llámala "
"``animated_health``, y establece su valor en 0. Regresa al método "
"``update_health`` y borra su contenido. Vamos a animar el valor de "
"``animated_health``. Llama al método ``Tween`` del nodo "
"``interpolate_property``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:421
msgid "Let's break down the call:"
msgstr "Vamos a interrumpir la llamada:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:427
msgid ""
"We target ``animated_health`` on ``self``, that is to say the ``GUI`` node. "
"``Tween``'s interpolate\\_property takes the property's name as a string. "
"That's why we write it as ``\"animated_health\"``."
msgstr ""
"Apuntamos a ``animated_health`` en ``self``, es decir, el nodo ``GUI``. "
"Interpolate_property toma el nombre de la propiedad como un string. Por eso "
"lo escribimos como ``\"animated_health\"``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:435
msgid ""
"The starting point is the current value the bar's at. We still have to code "
"this part, but it's going to be ``animated_health``. The end point of the "
"animation is the ``Player``'s ``health`` after the ``health_changed``: "
"that's ``new_value``. And ``0.6`` is the animation's duration in seconds."
msgstr ""
"El punto de partida es el valor actual de la barra. Todavía tenemos que "
"programar esta parte, pero va a ser ``animated_health``. El punto final de "
"la animación es el valor de ``health`` del ``Player`` después de "
"``health_changed``: ese es el ``new_value``. Y ``0.6`` es la duración de la "
"animación en segundos."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:445
msgid ""
"The last two arguments are constants from the ``Tween`` class. "
"``TRANS_LINEAR`` means the animation should be linear. ``EASE_IN`` doesn't "
"do anything with a linear transition, but we must provide this last argument "
"or we'll get an error."
msgstr ""
"Los dos últimos argumentos son constantes de la clase ``Tween``. "
"``TRANS_LINEAR`` significa que la animación debe ser lineal. ``EASE_IN`` no "
"hace nada con una transición lineal, pero debemos proporcionar este último "
"argumento si no queremos recibir un error."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:450
msgid ""
"The animation will not play until we activated the ``Tween`` node with "
"``tween.start()``. We only have to do this once if the node is not active. "
"Add this code after the last line:"
msgstr ""
"La animación no se reproducirá hasta que activemos el nodo ``Tween`` con "
"``tween.start()``. Sólo tenemos que hacerlo una vez si el nodo no está "
"activo. Añade este código después de la última línea:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:469
msgid ""
"Although we could animate the `health` property on the `Player`, we "
"shouldn't. Characters should lose life instantly when they get hit. It makes "
"it a lot easier to manage their state, like to know when one died. You "
"always want to store animations in a separate data container or node. The "
"`tween` node is perfect for code-controlled animations. For hand-made "
"animations, check out `AnimationPlayer`."
msgstr ""
"Aunque podríamos animar la propiedad `health` en el `Player`, no deberíamos. "
"Los personajes deben perder la vida instantáneamente cuando son golpeados. "
"Hace que sea mucho más fácil manejar su estado, como para saber cuándo ha "
"muerto. Siempre es conveniente almacenar las animaciones en un container "
"data o nodo separado. El nodo `tween` es perfecto para animaciones "
"controladas por código. Para animaciones hechas a mano, echa un vistazo a "
"`AnimationPlayer`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:472
msgid "Assign the animated\\_health to the LifeBar"
msgstr "Asignar animated\\_health a LifeBar"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:474
msgid ""
"Now the ``animated_health`` variable animates but we don't update the actual "
"``Bar`` and ``Number`` nodes anymore. Let's fix this."
msgstr ""
"Ahora la variable ``animated_health`` anima pero ya no se actualizan los "
"nodos ``Bar`` y ``Number`` existentes. Solucionemos esto."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:477
msgid "So far, the update\\_health method looks like this:"
msgstr "Hasta ahora, el método update\\_health se ve así:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:501
msgid ""
"In this specific case, because ``number_label`` takes text, we need to use "
"the ``_process`` method to animate it. Let's now update the ``Number`` and "
"``TextureProgress`` nodes like before, inside of ``_process``:"
msgstr ""
"En este caso en particular, debido a que ``number_label`` recibe texto, "
"necesitamos usar el método ``_process`` para animarlo. Vamos a actualizar "
"los nodos ``Number`` y ``TextureProgress`` como antes, dentro de "
"``_process``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:523
msgid ""
"`number_label` and `bar` are variables that store references to the `Number` "
"and `TextureProgress` nodes."
msgstr ""
"`number_label` y `bar` son variables que guardan referencias a los nodos "
"`Number` y `TextureProgress`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:525
msgid ""
"Play the game to see the bar animate smoothly. But the text displays decimal "
"number and looks like a mess. And considering the style of the game, it'd be "
"nice for the life bar to animate in a choppier fashion."
msgstr ""
"Reproduce el juego para ver la barra animada sin problemas. Pero el texto "
"muestra un número decimal y parece un desastre. Tomando en cuenta el estilo "
"del juego, sería bueno que la barra de vida se animara de una manera más "
"atractiva."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:531
#, fuzzy
msgid "The animation is smooth, but the number is broken"
msgstr "La animación es suave pero el número está roto"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:533
msgid ""
"We can fix both problems by rounding out ``animated_health``. Use a local "
"variable named ``round_value`` to store the rounded ``animated_health``. "
"Then assign it to ``number_label.text`` and ``bar.value``:"
msgstr ""
"Podemos solucionar ambos problemas redondeando ``animated_health``. Usa la "
"variable local llamada ``round_value`` para guardar el valor redondeado "
"``animated_health``. Luego asígnalo a ``number_label.text`` y ``bar.value``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:555
msgid "Try the game again to see a nice blocky animation."
msgstr "Intenta jugar de nuevo para ver una bonita animación de bloques."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:559
#, fuzzy
msgid "By rounding out animated\\_health, we kill two birds with one stone"
msgstr "Gracias a redondear animated\\_health matamos dos pájaros de un tiro"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:563
msgid ""
"Every time the player takes a hit, the ``GUI`` calls "
"``_on_Player_health_changed``, which in turn calls ``update_health``. This "
"updates the animation and the ``number_label`` and ``bar`` follow in "
"``_process``. The animated life bar that shows the health going down "
"gradually is a trick. It makes the GUI feel alive. If the ``Player`` takes 3 "
"damage, it happens in an instant."
msgstr ""
"Cada vez que el jugador recibe un golpe, la ``GUI`` llama "
"``on_Player_health_changed``, que a su vez llama ``update_health``. Esto "
"actualiza la animación y el ``number_label`` y ``bar`` siguen en "
"``_process``. La barra de vida animada que muestra la salud bajando "
"gradualmente es un truco. Hace que el GUI se sienta vivo. Si el ``Player`` "
"recibe 3 de daño, ocurre en un instante."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:571
msgid "Fade the bar when the Player dies"
msgstr "Desvanecer la barra cuando el jugador muere"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:573
msgid ""
"When the green character dies, it plays a death animation and fades out. At "
"this point, we shouldn't show the interface anymore. Let's fade the bar as "
"well when the character died. We will reuse the same ``Tween`` node as it "
"manages multiple animations in parallel for us."
msgstr ""
"Cuando el personaje verde muere, reproduce una animación de muerte y se "
"desvanece. En este punto, no deberíamos mostrar más la interfaz. "
"Desvanezcamos la barra también cuando el personaje muera. Reutilizaremos el "
"mismo nodo ``Tween`` ya que gestiona múltiples animaciones en paralelo por "
"nosotros."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:578
msgid ""
"First, the ``GUI`` needs to connect to the ``Player``'s ``died`` signal to "
"know when it died. Press :kbd:`F1` to jump back to the 2D Workspace. Select "
"the ``Player`` node in the Scene dock and click on the Node tab next to the "
"Inspector."
msgstr ""
"Primero, ``GUI`` necesita conectarse a la señal de ``died`` del ``Player``'s "
"para saber cuándo murió. Pulsa :kbd:`F1` para volver al espacio de trabajo "
"2D. Selecciona el nodo ``Player`` en el panel de Escenas y haz clic en la "
"pestaña Nodos junto al Inspector."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:583
msgid "Find the ``died`` signal, select it, and click the Connect button."
msgstr "Busca la señal ``died``, selecciónala y haz clic en el botón Conectar."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:587
msgid "The signal should already have the Enemy connected to it"
msgstr "La señal ya debería tener al enemigo conectado"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:589
msgid ""
"In the Connecting Signal window, connect to the ``GUI`` node again. The Path "
"to Node should be ``../../GUI`` and the Method in Node should show "
"``_on_Player_died``. Leave the Make Function option on and click Connect at "
"the bottom of the window. This will take you to the ``GUI.gd`` file in the "
"Script Workspace."
msgstr ""
"En la ventana Contectando Señal, conecta de nuevo con el nodo ``GUI``. La "
"ruta al nodo debe ser ``../../GUI`` y el método en el nodo debe mostrar "
"``_on_Player_died``. Deja la opción Make Function activada y haz clic en "
"Conectar en la parte inferior de la ventana. Esto te llevará al archivo "
"``GUI.gd`` en el Área de Trabajo de Scripts."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:597
msgid "You should get these values in the Connecting Signal window"
msgstr "Se debe obtener estos valores en la ventana Conectando Señal"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:601
msgid ""
"You should see a pattern by now: every time the GUI needs a new piece of "
"information, we emit a new signal. Use them wisely: the more connections you "
"add, the harder they are to track."
msgstr ""
"Ya deberías notar un patrón: cada vez que la GUI necesita una nueva "
"información, emitimos una nueva señal. Úsalas sabiamente: mientras más "
"conexiones añadas, serán más difíciles de seguir."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:603
msgid ""
"To animate a fade on a UI element, we have to use its ``modulate`` property. "
"``modulate`` is a ``Color`` that multiplies the colors of our textures."
msgstr ""
"Para animar el desvanecimiento de un elemento de UI, tenemos que usar su "
"propiedad ``modulate``. ``modulate`` es un ``Color``que multiplica los "
"colores de nuestras texturas."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:609
msgid ""
"`modulate` comes from the `CanvasItem` class, All 2D and UI nodes inherit "
"from it. It lets you toggle the visibility of the node, assign a shader to "
"it, and modify it using a color with `modulate`."
msgstr ""
"`modulate` proviene de nuestra clase `CanvasItem`, Todos los nodos 2D y de "
"UI heredan de él. Este permite alternar la visiblidad del nodo, asignarle un "
"shader y modificarlo usando un color mediante `modulate`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:611
#, fuzzy
msgid ""
"``modulate`` takes a ``Color`` value with 4 channels: red, green, blue and "
"alpha. If we darken any of the first three channels it darkens the "
"interface. If we lower the alpha channel, our interface fades out."
msgstr ""
"``modulate`` recibe un valor de ``Color`` con 4 canales: rojo, verde, azul y "
"alfa. Si obscurecemos cualquiera de los tres primeros canales la interfaz se "
"obscurece. Si reducimos el valor del canal alfa la interfaz se va "
"desvaneciendo."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:615
msgid ""
"We're going to tween between two color values: from a white with an alpha of "
"``1``, that is to say at full opacity, to a pure white with an alpha value "
"of ``0``, completely transparent. Let's add two variables at the top of the "
"``_on_Player_died`` method and name them ``start_color`` and ``end_color``. "
"Use the ``Color()`` constructor to build two ``Color`` values."
msgstr ""
"Vamos a elegir entre dos valores de color: desde un blanco con un alfa de "
"``1``, es decir, con opacidad total, hasta un blanco puro con un valor alfa "
"de ``0``, completamente transparente. Añadamos dos variables en la parte "
"superior del método ``_on_Player_died`` y las nombraremos ``start_color`` y "
"``end_color``. Usa el constructor ``Color()`` para crear dos valores "
"``Color``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:637
msgid ""
"``Color(1.0, 1.0, 1.0)`` corresponds to white. The fourth argument, "
"respectively ``1.0`` and ``0.0`` in ``start_color`` and ``end_color``, is "
"the alpha channel."
msgstr ""
"``Color(1.0, 1.0, 1.0)`` corresponde a blanco. El cuarto argumento, "
"respectivamente ``1.0`` y ``0.0``en ``start_color`` y ``end_color``, es el "
"canal alfa."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:641
msgid ""
"We then have to call the ``interpolate_property`` method of the ``Tween`` "
"node again:"
msgstr ""
"Luego debemos llamar nuevamente al método ``interpolate_property`` del nodo "
"``Tween``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:654
#, fuzzy
msgid ""
"This time, we change the ``modulate`` property and have it animate from "
"``start_color`` to the ``end_color``. The duration is of one second, with a "
"linear transition. Here again, because the transition is linear, the easing "
"does not matter. Here's the complete ``_on_Player_died`` method:"
msgstr ""
"Esta vez cambiaremos la propiedad ``modulate`` y la tendremos animada de "
"``start_color`` a ``end_color``. La duración es de un segundo, con una "
"transición lineal. Aquí también, debido a que la transición es lineal, la "
"relajación no importa. Aquí está el método completo ``_on_Player_died``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:679
msgid "And that is it. You may now play the game to see the final result!"
msgstr ""
"Y eso es todo ¡Ahora puedes jugar el juego para ver el resultado final!"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:683
msgid "The final result. Congratulations for getting there!"
msgstr "El resultado final ¡Felicidades por llegar hasta aquí!"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:687
msgid ""
"Using the exact same techniques, you can change the color of the bar when "
"the Player gets poisoned, turn the bar red when its health drops low, shake "
"the UI when they take a critical hit... the principle is the same: emit a "
"signal to forward the information from the `Player` to the `GUI` and let the "
"`GUI` process it."
msgstr ""
"Usando exactamente las mismas técnicas, puedes cambiar el color de la barra "
"cuando el jugador se envenena, poner la barra roja cuando su salud baja, "
"sacudir la UI cuando reciben un golpe crítico... el principio es el mismo: "
"emitir una señal para enviar la información del `Player` al `GUI` y dejar "
"que el `GUI` la procese."
