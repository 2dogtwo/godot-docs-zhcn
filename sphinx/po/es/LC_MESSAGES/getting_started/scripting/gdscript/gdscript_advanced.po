# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-01 14:18+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:4
msgid "GDScript: An introduction to dynamic languages"
msgstr "GDScript: Introducción a los lenguajes dinámicos"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:7
msgid "About"
msgstr "Acerca de"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:9
msgid ""
"This tutorial aims to be a quick reference for how to use GDScript more "
"efficiently. It focuses on common cases specific to the language, but also "
"covers a lot of information on dynamically typed languages."
msgstr ""
"Este tutorial pretende ser una referencia rápida para aprender a usar "
"GDScript de forma más eficiente. Está enfocado a casos específicos del "
"lenguaje, pero también cubre bastante información sobre lenguajes "
"dinámicamente tipados."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:13
msgid ""
"It's meant to be especially useful for programmers with little or no "
"previous experience with dynamically typed languages."
msgstr ""
"Está pensada para ser especialmente útil para programadores con poca o "
"ninguna experiencia con lenguajes de tipado dinámico."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:17
msgid "Dynamic nature"
msgstr "Naturaleza dinámica"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:20
msgid "Pros & cons of dynamic typing"
msgstr "Pros y contras del tipado dinámico"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:22
msgid ""
"GDScript is a Dynamically Typed language. As such, its main advantages are "
"that:"
msgstr ""
"GDScript es un lenguaje de tipado dinámico. Como tal, sus grandes ventajas "
"son:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:25
msgid "The language is simple and easy to learn."
msgstr "El idioma es simple y fácil de aprender."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:26
msgid "Most code can be written and changed quickly and without hassle."
msgstr ""
"La mayoría del código puede ser escrito y cambiado rápidamente sin "
"complicaciones."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:27
msgid "Less code written means less errors & mistakes to fix."
msgstr ""
"Escribir menos código significa tener menos errores y fallos que corregir."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:28
msgid "Easier to read the code (less clutter)."
msgstr "Código más sencillo de leer (menos desorganizado)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:29
msgid "No compilation is required to test."
msgstr "No es necesario compilar para probarlo."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:30
msgid "Runtime is tiny."
msgstr "El código en ejecución es pequeño."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:31
msgid "Duck-typing and polymorphism by nature."
msgstr "Duck-typing y polimorfismo por naturaleza."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:33
msgid "While the main disadvantages are:"
msgstr "Siendo las principales desventajas:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:35
msgid "Less performance than statically typed languages."
msgstr "Menor rendimiento que los lenguajes de tipado estático."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:36
msgid "More difficult to refactor (symbols can't be traced)"
msgstr "Mayor dificultad para refactorizar (no se pueden trazar los símbolos)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:37
msgid ""
"Some errors that would typically be detected at compile time in statically "
"typed languages only appear while running the code (because expression "
"parsing is more strict)."
msgstr ""
"Algunos errores que se detectarían en el tiempo de compilación en lenguajes "
"de tipado estático, solo aparecen cuando se ejecuta el código (porque el "
"análisis gramatical es más estricto)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:40
msgid ""
"Less flexibility for code-completion (some variable types are only known at "
"run-time)."
msgstr ""
"Menos flexibilidad para el auto completado de código (los tipos de algunas "
"variables solo se conocen en tiempo de ejecución)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:43
msgid ""
"This, translated to reality, means that Godot+GDScript are a combination "
"designed to create games quickly and efficiently. For games that are very "
"computationally intensive and can't benefit from the engine built-in tools "
"(such as the Vector types, Physics Engine, Math library, etc), the "
"possibility of using C++ is present too. This allows you to still create "
"most of the game in GDScript and add small bits of C++ in the areas that "
"need a performance boost."
msgstr ""
"Esto, si lo traducimos a la realidad, significa que Godot+GDScript son una "
"combinación diseñada para crear juegos de forma rápida y eficiente. Para "
"juegos que son muy exigentes desde el punto de vista computacional y que no "
"pueden beneficiarse de las herramientas incorporadas en el motor (como los "
"tipos de Vector, el Motor de Física, la biblioteca de Matemáticas, etc.), "
"existe la posibilidad de usar C++. Esto permite crear todo el juego en "
"GDScript y añadir pequeños trozos de C++ en las áreas que necesitan un "
"aumento de rendimiento."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:52
msgid "Variables & assignment"
msgstr "Variables y asignaciones"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:54
msgid ""
"All variables in a dynamically typed language are \"variant\"-like. This "
"means that their type is not fixed, and is only modified through assignment. "
"Example:"
msgstr ""
"Todas las variables en lenguajes de tipado dinámico son del tipo \"variant"
"\". Esto significa que su tipo no es fijo, y solo se puede modificar "
"mediante la asignación. Ejemplo:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:58
#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:80
msgid "Static:"
msgstr "Estático:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:66
#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:94
msgid "Dynamic:"
msgstr "Dinámico:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:75
msgid "As function arguments:"
msgstr "Como argumentos de funciones:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:77
msgid ""
"Functions are of dynamic nature too, which means they can be called with "
"different arguments, for example:"
msgstr ""
"Las funciones también tienen una naturaleza dinámica, lo que significa que "
"pueden ser invocadas con diferentes argumentos, por ejemplo:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:107
msgid "Pointers & referencing:"
msgstr "Punteros y referencia:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:109
msgid ""
"In static languages, such as C or C++ (and to some extent Java and C#), "
"there is a distinction between a variable and a pointer/reference to a "
"variable. The latter allows the object to be modified by other functions by "
"passing a reference to the original one."
msgstr ""
"En lenguajes estáticos como C o C++ (y hasta cierto punto Java y C#), hay "
"una distinción entre una variable y un puntero/referencia a una variable. "
"Este último permite al objeto ser modificado por otras funciones pasando una "
"referencia del original."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:114
msgid ""
"In C# or Java, everything not a built-in type (int, float, sometimes String) "
"is always a pointer or a reference. References are also garbage-collected "
"automatically, which means they are erased when no longer used. Dynamically "
"typed languages tend to use this memory model, too. Some Examples:"
msgstr ""
"En C# o Java, todo lo que no es un tipo integrado (*int*, *float*, y algunas "
"veces *string*) es siempre un puntero o una referencia. Las referencias son "
"recogidas por el recolector de basura automáticamente, lo que significa que "
"se borran cuando no se están usando. Los lenguajes dinámicos tienden a usar "
"este modelo de memoria también. Algunos ejemplos:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:120
msgid "C++:"
msgstr "C++:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:136
msgid "Java:"
msgstr "Java:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:154
msgid "GDScript:"
msgstr "GDScript:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:166
msgid ""
"In GDScript, only base types (int, float, string and the vector types) are "
"passed by value to functions (value is copied). Everything else (instances, "
"arrays, dictionaries, etc) is passed as reference. Classes that inherit :ref:"
"`class_Reference` (the default if nothing is specified) will be freed when "
"not used, but manual memory management is allowed too if inheriting manually "
"from :ref:`class_Object`."
msgstr ""
"En GDScript, solo los tipos básicos (int, float, string y los tipos vector) "
"se pasan por valor a las funciones (el valor es copiado). Todo lo demás "
"(instancias, arrays, diccionarios, etc) se pasa como referencia. Las clases "
"que heredan :ref:`class_Reference` (Herencia por defecto si no se especifica "
"otra) serán liberadas cuando no estén en uso, pero se permite el manejo "
"manual de la memoria también si se hereda específicamente de :ref:"
"`class_Object`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:174
msgid "Arrays"
msgstr "Arreglos"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:176
msgid ""
"Arrays in dynamically typed languages can contain many different mixed "
"datatypes inside and are always dynamic (can be resized at any time). "
"Compare for example arrays in statically typed languages:"
msgstr ""
"Los arrays en lenguajes de tipado dinámico pueden contener mezclados muchos "
"tipos diferentes de datos y son siempre dinámicos (pueden cambiar su tamaño "
"en cualquier momento). Compara, por ejemplo, los arrays en lenguajes de "
"tipado estático:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:203
msgid "And in GDScript:"
msgstr "Y en GDScript:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:212
msgid ""
"In dynamically typed languages, arrays can also double as other datatypes, "
"such as lists:"
msgstr ""
"En lenguajes de tipado dinámico, los arrays pueden replicar otros tipos de "
"datos, como listas:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:222
msgid "Or unordered sets:"
msgstr "O conjuntos desordenados:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:231
msgid "Dictionaries"
msgstr "Diccionarios"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:233
msgid ""
"Dictionaries are a powerful tool in dynamically typed languages. Most "
"programmers that come from statically typed languages (such as C++ or C#) "
"ignore their existence and make their life unnecessarily more difficult. "
"This datatype is generally not present in such languages (or only in limited "
"form)."
msgstr ""
"Los diccionarios son una herramienta poderosa en lenguajes de tipado "
"dinámico. La mayoría de los programadores que provienen de lenguajes de "
"programación estáticos (como C++ o C#) ignoran su existencia y hacen su vida "
"más difícil innecesariamente. Este tipo de datos generalmente no está "
"presente en tales lenguajes (o sólo en forma limitada)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:239
msgid ""
"Dictionaries can map any value to any other value with complete disregard "
"for the datatype used as either key or value. Contrary to popular belief, "
"they are efficient because they can be implemented with hash tables. They "
"are, in fact, so efficient that some languages will go as far as "
"implementing arrays as dictionaries."
msgstr ""
"Los diccionarios pueden asignar cualquier valor a cualquier otro valor sin "
"tener en cuenta el tipo de datos utilizado como clave o valor. En contra de "
"la creencia popular, son eficientes porque se pueden implementar con tablas "
"de hash. De hecho, son tan eficientes que algunos idiomas llegan a "
"implementar arrays como diccionarios."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:245
msgid "Example of Dictionary:"
msgstr "Ejemplo de Diccionario:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:252
msgid ""
"Dictionaries are also dynamic, keys can be added or removed at any point at "
"little cost:"
msgstr ""
"Los diccionarios también son dinámicos, las claves pueden ser agregadas y "
"eliminadas en cualquier punto a muy bajo costo:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:261
msgid ""
"In most cases, two-dimensional arrays can often be implemented more easily "
"with dictionaries. Here's a simple battleship game example:"
msgstr ""
"En la mayoría de los caso, los arrays bidimensionales pueden frecuentemente "
"ser implementados más fácilmente como diccionarios. Aquí hay un juego simple "
"de batalla naval de ejemplo:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:294
msgid ""
"Dictionaries can also be used as data markup or quick structures. While "
"GDScript's dictionaries resemble python dictionaries, it also supports Lua "
"style syntax and indexing, which makes it useful for writing initial states "
"and quick structs:"
msgstr ""
"Los diccionarios también se pueden utilizar como marcadores de datos o "
"estructuras rápidas. Mientras que los diccionarios GDScript se asemejan a "
"los diccionarios python, también soportan sintaxis e indexación estilo Lua, "
"lo que lo hace útil para escribir estados iniciales y estructuras rápidas:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:318
msgid "For & while"
msgstr "For y While"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:320
msgid "Iterating in some statically typed languages can be quite complex:"
msgstr ""
"La iteración en lenguajes estáticamente tipados puede ser bastante compleja:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:341
msgid "This is usually greatly simplified in dynamically typed languages:"
msgstr ""
"Esto es usualmente muy simplificado en lenguajes dinámicamente tipificados:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:348
msgid ""
"Container datatypes (arrays and dictionaries) are iterable. Dictionaries "
"allow iterating the keys:"
msgstr ""
"Los tipos de datos de los containers (matrices y diccionarios) son "
"iterables. Los diccionarios permiten iterar entre las claves:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:356
msgid "Iterating with indices is also possible:"
msgstr "Iterar con índices también es posible:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:363
msgid "The range() function can take 3 arguments:"
msgstr "La función range() puede tomar 3 argumentos:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:371
msgid "Some statically typed programming language examples:"
msgstr "Algunos ejemplos de lenguajes estáticamente tipados:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:381
msgid "Translate to:"
msgstr "Traducir a:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:394
msgid "And backwards looping is done through a negative counter:"
msgstr "Y el loop invertido se realiza a través de un contador negativo:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:400
msgid "Becomes:"
msgstr "Se vuelve:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:408
msgid "While"
msgstr "While"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:410
msgid "while() loops are the same everywhere:"
msgstr "Los bucles while() son los mismos en todas partes:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:421
msgid "Custom iterators"
msgstr "Itineradores personalizados"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:422
msgid ""
"You can create custom iterators in case the default ones don't quite meet "
"your needs by overriding the Variant class's ``_iter_init``, ``_iter_next``, "
"and ``_iter_get`` functions in your script. An example implementation of a "
"forward iterator follows:"
msgstr ""
"Puedes crear iteradores personalizados en caso de que los predeterminados no "
"cumplan con tus necesidades anulando las funciones ``_iter_init``, "
"``_iter_next``, e ``_iter_get`` de la clase Variant en su script. A "
"continuación se muestra un ejemplo de implementación de un iterador avanzado:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:454
msgid "And it can be used like any other iterator:"
msgstr "Y se puede utilizar como cualquier otro iterador:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:462
msgid ""
"Make sure to reset the state of the iterator in ``_iter_init``, otherwise "
"nested for-loops that use custom iterators will not work as expected."
msgstr ""
"Asegúrate de restablecer el estado del iterador en ``_iter_init``, de lo "
"contrario, los bucles for que utilizan iteradores personalizados no "
"funcionarán como se espera."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:466
msgid "Duck typing"
msgstr "Tipado dinámico (duck typing)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:468
msgid ""
"One of the most difficult concepts to grasp when moving from a statically "
"typed language to a dynamic one is duck typing. Duck typing makes overall "
"code design much simpler and straightforward to write, but it's not obvious "
"how it works."
msgstr ""
"Uno de los conceptos más difíciles de entender a la hora de pasar de un "
"lenguaje de tipado estático a otro dinámico es el duck typing. Duck typing "
"hace que el diseño general del código sea mucho más simple y sencillo de "
"escribir, pero no es obvio cómo funciona."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:473
msgid ""
"As an example, imagine a situation where a big rock is falling down a "
"tunnel, smashing everything on its way. The code for the rock, in a "
"statically typed language would be something like:"
msgstr ""
"Por ejemplo, imagina una situación en la que una gran roca cae por un túnel, "
"aplastando todo en su camino. El código para la roca, en un lenguaje de "
"tipado estático sería algo así como:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:484
msgid ""
"This way, everything that can be smashed by a rock would have to inherit "
"Smashable. If a character, enemy, piece of furniture, small rock were all "
"smashable, they would need to inherit from the class Smashable, possibly "
"requiring multiple inheritance. If multiple inheritance was undesired, then "
"they would have to inherit a common class like Entity. Yet, it would not be "
"very elegant to add a virtual method ``smash()`` to Entity only if a few of "
"them can be smashed."
msgstr ""
"De esta manera, todo lo que pueda ser aplastado por una roca tendrá que "
"heredar Smashable. Si un personaje, un enemigo, un mueble o una pequeña roca "
"se pudieran destruir, tendrían que heredar de la clase Smashable, lo que "
"posiblemente requeriría una herencia múltiple. Si la herencia múltiple no "
"era deseada, entonces tendrían que heredar una clase común como Entity. Sin "
"embargo, no sería muy elegante añadir un método virtual ``smash()`` a Entity "
"sólo si unos pocos de ellos pueden ser aplastados."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:492
msgid ""
"With dynamically typed languages, this is not a problem. Duck typing makes "
"sure you only have to define a ``smash()`` function where required and "
"that's it. No need to consider inheritance, base classes, etc."
msgstr ""
"Con lenguajes de tipado dinámico, esto no es un problema. Duck typing "
"asegura de que sólo tengas que definir una función ``smash()`` donde sea "
"necesario y nada más. No hay necesidad de considerar la herencia, clases "
"base, etc."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:501
msgid ""
"And that's it. If the object that hit the big rock has a smash() method, it "
"will be called. No need for inheritance or polymorphism. Dynamically typed "
"languages only care about the instance having the desired method or member, "
"not what it inherits or the class type. The definition of Duck Typing should "
"make this clearer:"
msgstr ""
"Y eso es todo. Si el objeto que golpea a la roca grande tiene un método "
"smash(), entonces será llamado. No se necesita herencia ni polimorfismo. Los "
"lenguajes de tipado dinámico solo se preocupan de que la instancia tenga los "
"métodos o miembros deseados, no que hereda ni el tipo de clase. La "
"definición de Duck Typing debería hacer esto más claro:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:507
msgid ""
"*\"When I see a bird that walks like a duck and swims like a duck and quacks "
"like a duck, I call that bird a duck\"*"
msgstr ""
"*\"Cuando veo un ave que camina como un pato, nada como un pato y grazna "
"como un pato, entonces llamo al ave pato\"*"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:510
msgid "In this case, it translates to:"
msgstr "En este caso, se traduce como:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:512
msgid ""
"*\"If the object can be smashed, don't care what it is, just smash it.\"*"
msgstr ""
"*\"Si el objeto puede ser golpeado, no me importa lo que es, solo golpéalo."
"\"*"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:514
msgid "Yes, we should call it Hulk typing instead."
msgstr "Sí, en su lugar deberíamos llamarlo Hulk Typing."

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:516
msgid ""
"It's possible that the object being hit doesn't have a smash() function. "
"Some dynamically typed languages simply ignore a method call when it doesn't "
"exist (like Objective C), but GDScript is stricter, so checking if the "
"function exists is desirable:"
msgstr ""
"Es posible que el objeto que recibe el impacto no tenga una función smash(). "
"Algunos lenguajes escritos dinámicamente simplemente ignoran una llamada a "
"un método cuando no existe (como Objective C), pero GDScript es más "
"estricto, por lo que es deseable comprobar si la función existe:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_advanced.rst:527
msgid ""
"Then, simply define that method and anything the rock touches can be smashed."
msgstr ""
"Entonces, simplemente define el método y todo lo que la roca toca puede ser "
"aplastado."
