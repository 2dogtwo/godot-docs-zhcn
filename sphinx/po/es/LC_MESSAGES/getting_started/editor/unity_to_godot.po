# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 15:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/editor/unity_to_godot.rst:8
msgid "From Unity to Godot Engine"
msgstr "De Unity a Godot Engine"

#: ../../docs/getting_started/editor/unity_to_godot.rst:10
msgid ""
"This guide provides an overview of Godot Engine from the viewpoint of a "
"Unity user, and aims to help you migrate your existing Unity experience into "
"the world of Godot."
msgstr ""
"Esta guía proporciona una visión general del motor Godot desde el punto de "
"vista de un usuario Unity y apunta a ayudarte a migrar tu experiencia actual "
"en Unity al mundo de Godot."

#: ../../docs/getting_started/editor/unity_to_godot.rst:15
msgid ""
"This article talks about older versions of Unity. Nestable prefabs ('Nested "
"prefabs') were added to Unity 2018.3. Nestable prefabs are analogous to "
"Godot's scenes, and allow a more Godot-like approach to scene organization."
msgstr ""
"Este artículo habla sobre versiones anteriores de Unity. Se agregaron "
"prefabricados anidables ('Nested prefabs') a Unity 2018.3. Los prefabricados "
"anidables son análogos a las escenas de Godot, y permiten un enfoque más "
"parecido a Godot para la organización de la escena."

#: ../../docs/getting_started/editor/unity_to_godot.rst:18
msgid "Differences"
msgstr "Diferencias"

#: ../../docs/getting_started/editor/unity_to_godot.rst:21
msgid "Unity"
msgstr "Unity"

#: ../../docs/getting_started/editor/unity_to_godot.rst:21
msgid "Godot"
msgstr "Godot"

#: ../../docs/getting_started/editor/unity_to_godot.rst:23
msgid "License"
msgstr "Licencia"

#: ../../docs/getting_started/editor/unity_to_godot.rst:23
msgid ""
"Proprietary, closed, free license with revenue caps and usage restrictions"
msgstr ""
"Licencia propietaria, cerrada y libre con límites de ingresos y "
"restricciones de uso"

#: ../../docs/getting_started/editor/unity_to_godot.rst:23
msgid "MIT license, free and fully open source without any restriction"
msgstr ""
"Licencia MIT, libre y completamente open source sin ninguna restricción"

#: ../../docs/getting_started/editor/unity_to_godot.rst:25
msgid "OS (editor)"
msgstr "OS (editor)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:25
msgid "Windows, macOS, Linux"
msgstr "Windows, macOS, Linux"

#: ../../docs/getting_started/editor/unity_to_godot.rst:25
msgid "Windows, macOS, X11 (Linux, \\*BSD)"
msgstr "Windows, macOS, X11 (Linux, \\*BSD)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:27
msgid "OS (export)"
msgstr "OS (exportar)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:27
msgid "**Desktop:** Windows, macOS, Linux"
msgstr "**Escritorio:** Windows, macOS, Linux"

#: ../../docs/getting_started/editor/unity_to_godot.rst:28
msgid "**Mobile:** Android, iOS, Windows Phone, Tizen"
msgstr "**Móvil:** Android, iOS, Windows Phone, Tizen"

#: ../../docs/getting_started/editor/unity_to_godot.rst:29
msgid "**Web:** WebAssembly or asm.js"
msgstr "**Web:** WebAssembly o asm.js"

#: ../../docs/getting_started/editor/unity_to_godot.rst:30
msgid "**Consoles:** PS4, PS Vita, Xbox One, Xbox 360, Wii U, Nintendo 3DS"
msgstr "**Consolas:** PS4, PS Vita, Xbox One, Xbox 360, Wii U, Nintendo 3DS"

#: ../../docs/getting_started/editor/unity_to_godot.rst:31
msgid ""
"**VR:** Oculus Rift, SteamVR, Google Cardboard, PlayStation VR, Gear VR, "
"HoloLens"
msgstr ""
"**VR:** Oculus Rift, SteamVR, Google Cardboard, Playstation VR, Gear VR, "
"HoloLens"

#: ../../docs/getting_started/editor/unity_to_godot.rst:32
msgid "**TV:** Android TV, Samsung SMART TV, tvOS"
msgstr "**TV:** Android TV, Samsung SMART TV, tvOS"

#: ../../docs/getting_started/editor/unity_to_godot.rst:27
msgid "**Desktop:** Windows, macOS, X11"
msgstr "**Escritorio:** Windows, macOS, X11"

#: ../../docs/getting_started/editor/unity_to_godot.rst:28
msgid "**Mobile:** Android, iOS"
msgstr "**Móvil:** Android, iOS"

#: ../../docs/getting_started/editor/unity_to_godot.rst:29
msgid "**Web:** WebAssembly"
msgstr "**Web:** WebAssembly"

#: ../../docs/getting_started/editor/unity_to_godot.rst:30
msgid "**Console:** See :ref:`doc_consoles`"
msgstr "**Consolas:** Ver :ref:`doc_consoles`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:31
msgid "**VR:** Oculus Rift, SteamVR"
msgstr "**VR:** Oculus Rift, SteamVR"

#: ../../docs/getting_started/editor/unity_to_godot.rst:34
msgid "Scene system"
msgstr "Sistema de escenas"

#: ../../docs/getting_started/editor/unity_to_godot.rst:34
msgid "Component/Scene (GameObject > Component)"
msgstr "Componente/Escena (GameObject > Componente)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:35
msgid "Prefabs"
msgstr "Prefabs"

#: ../../docs/getting_started/editor/unity_to_godot.rst:34
msgid ""
":ref:`Scene tree and nodes <doc_scenes_and_nodes>`, allowing scenes to be "
"nested and/or inherit other scenes"
msgstr ""
":ref:`Árbol de escenas y nodos <doc_scenes_and_nodes>`, permitiendo que las "
"escenas se aniden y/o hereden otras escenas"

#: ../../docs/getting_started/editor/unity_to_godot.rst:37
msgid "Third-party tools"
msgstr "Herramientas de terceros"

#: ../../docs/getting_started/editor/unity_to_godot.rst:37
msgid "Visual Studio or VS Code"
msgstr "Visual Studio o VS Code"

#: ../../docs/getting_started/editor/unity_to_godot.rst:37
msgid ":ref:`External editors are possible <doc_external_editor>`"
msgstr ":ref:`Los editores externos son posibles <doc_external_editor>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:38
msgid ":ref:`Android SDK for Android export <doc_exporting_for_android>`"
msgstr ""
":ref:`Android SDK para exportación a Android <doc_exporting_for_android>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:40
msgid "Notable advantages"
msgstr "Ventajas notables"

#: ../../docs/getting_started/editor/unity_to_godot.rst:40
msgid "Huge community"
msgstr "Gran comunidad"

#: ../../docs/getting_started/editor/unity_to_godot.rst:41
msgid "Large assets store"
msgstr "Gran almacén de recursos"

#: ../../docs/getting_started/editor/unity_to_godot.rst:40
msgid "Scene System"
msgstr "Sistema de Escenas"

#: ../../docs/getting_started/editor/unity_to_godot.rst:41
msgid ":ref:`Animation Pipeline <doc_animations>`"
msgstr ":ref:`Canalización de Animaciones<doc_animations>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:42
msgid ":ref:`Easy to write Shaders <doc_shading_language>`"
msgstr ":ref:`Shaders fáciles de escribir <doc_shading_language>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:43
msgid "Debug on Device"
msgstr "Depuración en el dispositivo"

#: ../../docs/getting_started/editor/unity_to_godot.rst:50
msgid "The editor"
msgstr "El editor"

#: ../../docs/getting_started/editor/unity_to_godot.rst:52
msgid ""
"Godot Engine provides a rich-featured editor that allows you to build your "
"games. The pictures below display the default layouts of both editors with "
"colored blocks to indicate common functionalities."
msgstr ""
"Godot Engine proporciona un editor con numerosas funciones para que puedas "
"crear tus juegos. Las siguientes imágenes muestran los diseños "
"predeterminados de ambos editores con bloques de color para indicar "
"funcionalidades comunes."

#: ../../docs/getting_started/editor/unity_to_godot.rst:58
msgid ""
"While both editors may seem similar, there are many differences below the "
"surface. Both let you organize the project using the filesystem, but Godot's "
"approach is simpler with a single configuration file, minimalist text "
"format, and no metadata. This makes Godot more friendly to VCS systems, such "
"as Git, Subversion, or Mercurial."
msgstr ""
"Aunque ambos editores pueden parecer similares, hay muchas diferencias bajo "
"la superficie. Ambos permiten organizar el proyecto usando el Sistema de "
"Archivos, pero el enfoque de Godot es más simple al contar con un solo "
"archivo de configuración, un formato de texto minimalista y sin metadatos. "
"Esto hace que Godot sea más amigable con los sistemas VCS, como Git, "
"Subversion o Mercurial."

#: ../../docs/getting_started/editor/unity_to_godot.rst:63
msgid ""
"Godot's Scene panel is similar to Unity's Hierarchy panel but, as each node "
"has a specific function, the approach used by Godot is more visually "
"descriptive. It's easier to understand what a scene does at a glance."
msgstr ""
"El panel de escenas de Godot es similar al panel de jerarquía de Unity pero, "
"como cada nodo tiene una función específica, el enfoque utilizado por Godot "
"es más descriptivo visualmente. Es más fácil entender lo que hace una escena "
"a primera vista."

#: ../../docs/getting_started/editor/unity_to_godot.rst:67
msgid ""
"The Inspector in Godot is more minimal, it shows only properties. Thanks to "
"this, objects can expose more useful parameters to the user without having "
"to hide functionality in language APIs. As a plus, Godot allows animating "
"any of those properties visually. Changing colors, textures, enumerations, "
"or even links to resources in real-time is possible without needing to write "
"code."
msgstr ""
"El inspector de Godot es más minimalista, sólo muestra propiedades. Gracias "
"a esto, los objetos pueden mostrar al usuario parámetros más útiles sin "
"necesidad de ocultar la funcionalidad en las APIs del lenguaje. Como "
"ventaja, Godot permite animar visualmente cualquiera de estas propiedades. "
"Es posible cambiar colores, texturas, enumeraciones o incluso enlaces a "
"recursos en tiempo real sin necesidad de escribir código."

#: ../../docs/getting_started/editor/unity_to_godot.rst:72
msgid ""
"The Toolbar at the top of the screen is similar in both editors, offering "
"control over project playback. Projects in Godot run in a separate window, "
"rather than inside the editor (but the tree and objects can still be "
"explored in the debugger window)."
msgstr ""
"La barra de herramientas en la parte superior de la pantalla es similar en "
"ambos editores, ofreciendo control sobre la reproducción del proyecto. Los "
"proyectos en Godot se ejecutan en una ventana separada, en lugar de hacerlo "
"dentro del editor (pero el árbol y los objetos pueden ser explorados en la "
"ventana del depurador)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:76
msgid "This approach has several advantages:"
msgstr "Este enfoque tiene varias ventajas:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:78
msgid ""
"Running the project and closing it is fast (Unity has to save, run the "
"project, close the project, and then reload the previous state)."
msgstr ""
"Ejecutar el proyecto y cerrarlo es rápido (Unity tiene que guardar, ejecutar "
"el proyecto, cerrar el proyecto, y luego recargar el estado anterior)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:79
msgid ""
"Live editing is a lot more useful because changes done to the editor take "
"effect immediately in the game and are not lost (nor have to be synced) when "
"the game is closed. This allows fantastic workflows, like creating levels "
"while you play them."
msgstr ""
"La edición en vivo es mucho más útil porque los cambios hechos al editor "
"tienen efecto inmediatamente en el juego y no se pierden (ni tienen que ser "
"sincronizados) cuando el juego está cerrado. Esto permite flujos de trabajo "
"fantásticos, como crear niveles mientras los reproduces."

#: ../../docs/getting_started/editor/unity_to_godot.rst:80
msgid "The editor is more stable because the game runs in a separate process."
msgstr ""
"El editor es más estable porque el juego se ejecuta en un proceso separado."

#: ../../docs/getting_started/editor/unity_to_godot.rst:81
msgid ""
"The running game can be explored from different angles by toggling the "
"\"Camera Override\" button in the editor viewport, which will switch between "
"using the editor view and the game camera view."
msgstr ""
"El juego en ejecución se puede explorar desde diferentes ángulos alternando "
"el botón \"Anular cámara\" en la vista del editor, que cambiará entre usar "
"la vista del editor y la vista de la cámara del juego."

#: ../../docs/getting_started/editor/unity_to_godot.rst:83
msgid ""
"Finally, Godot's top toolbar includes a menu for remote debugging. These "
"options allow deployment to a device (connected phone, tablet, or browser "
"via HTML5), and debugging/live editing on it after the game is exported."
msgstr ""
"Finalmente, la barra de herramientas superior de Godot incluye un menú para "
"depuración remota. Estas opciones facilitan la implementación en cualquier "
"dispositivo (teléfono, tableta o navegador conectado a través de HTML5) y la "
"depuración/edición en vivo en él después de exportar el juego."

#: ../../docs/getting_started/editor/unity_to_godot.rst:88
msgid "The scene system"
msgstr "El sistema de escenas"

#: ../../docs/getting_started/editor/unity_to_godot.rst:90
msgid ""
"This is the most important difference between Unity and Godot and the "
"favorite feature of most Godot users."
msgstr ""
"Esta es la diferencia más importante entre Unity y Godot, y la función "
"favorita de la mayoría de los usuarios de Godot."

#: ../../docs/getting_started/editor/unity_to_godot.rst:92
msgid ""
"Working on a 'level' in Unity usually means embedding all the required "
"assets in a scene and linking them together with components and scripts."
msgstr ""
"Trabajar en un 'nivel' en Unity normalmente significa integrar todos los "
"recursos necesarios en una escena y vincularlos mediante componentes y "
"scripts."

#: ../../docs/getting_started/editor/unity_to_godot.rst:95
msgid ""
"Godot's scene system is superficially similar to Unity. A 'level' consists "
"of a collection of nodes, each with its own purpose: Sprite, Mesh, Light, "
"etc. However, in Godot the nodes are arranged in a tree. Each node can have "
"multiple children, which makes each a subscene of the main scene. This means "
"you can compose a whole scene with different scenes stored in different "
"files."
msgstr ""
"El sistema de escenas de Godot es aparentemente similar al de la Unity. Un "
"'nivel' consiste en una colección de nodos, cada uno con su propio "
"propósito: Sprite, Mesh, Light, etc. Sin embargo, en Godot los nodos están "
"organizados en árbol. Cada nodo puede tener varios hijos, lo que hace de "
"cada uno una subescena de la escena principal. Esto significa que puedes "
"crear una escena completa a partir de diferentes escenas guardadas en "
"diferentes archivos."

#: ../../docs/getting_started/editor/unity_to_godot.rst:98
msgid ""
"For example, think of a platformer level. You would compose it with multiple "
"elements:"
msgstr ""
"Por ejemplo, piensa en un nivel de un juego de plataformas. Verías que está "
"compuesto de múltiples elementos:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:100
msgid "Bricks"
msgstr "Bloques"

#: ../../docs/getting_started/editor/unity_to_godot.rst:101
msgid "Coins"
msgstr "Mondedas"

#: ../../docs/getting_started/editor/unity_to_godot.rst:102
msgid "The player"
msgstr "El jugador"

#: ../../docs/getting_started/editor/unity_to_godot.rst:103
msgid "The enemies"
msgstr "Los enemigos"

#: ../../docs/getting_started/editor/unity_to_godot.rst:105
msgid ""
"In Unity, you would put all the GameObjects in the scene: the player, "
"multiple instances of enemies, bricks everywhere to form the ground of the "
"level and then multiple instances of coins all over the level. You would "
"then add various components to each element to link them and add logic in "
"the level: For example, you'd add a BoxCollider2D to all the elements of the "
"scene so that they can collide. This principle is different in Godot."
msgstr ""
"En Unity, pondrías todos los GameObjects en la escena: el jugador, múltiples "
"instancias de enemigos, bloques por todas partes para formar la base del "
"nivel, y múltiples instancias de monedas por todo el nivel. A continuación, "
"se añadirían varios componentes a cada elemento para enlazarlos y añadir "
"lógica en el nivel: por ejemplo, se añadiría un BoxCollider2D a todos los "
"elementos de la escena para que puedan colisionar. Este principio es "
"diferente en Godot."

#: ../../docs/getting_started/editor/unity_to_godot.rst:110
msgid ""
"In Godot, you would split your whole scene into three separate, smaller "
"scenes, and instance them in the main scene."
msgstr ""
"En Godot, puedes dividir toda tu escena en tres escenas separadas, más "
"pequeñas, e incluirlas en la escena principal."

#: ../../docs/getting_started/editor/unity_to_godot.rst:112
msgid "**A scene for the Player alone.**"
msgstr "**Una escena sólo para el Player.**"

#: ../../docs/getting_started/editor/unity_to_godot.rst:114
msgid ""
"Consider the player as an element we'd like to use in different parent "
"scenes (for instance 'level' scenes). In our case, the player element needs "
"at least an AnimatedSprite node. This node contains the sprite textures "
"necessary for various animations (for example, a walking animation)."
msgstr ""
"Veamos al jugador como un elemento que nos gustaría usar en diferentes "
"escenas padre (por ejemplo, las escenas de 'nivel'). En nuestro caso, el "
"elemento jugador necesita al menos un nodo AnimatedSprite. Este nodo "
"contiene las texturas de sprite necesarias para diversas animaciones (por "
"ejemplo, la animación de caminar)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:116
msgid "**A scene for the Enemy.**"
msgstr "**La escena del Enemigo.**"

#: ../../docs/getting_started/editor/unity_to_godot.rst:118
msgid ""
"An enemy is also an element we'd like to use in several scenes. It's almost "
"the same as the Player node. The only differences are the script (it needs "
"'AI' routines to generate the enemy's behavior) and the sprite textures used "
"by the AnimatedSprite node."
msgstr ""
"Un enemigo también es un elemento que podríamos usar en diversas escenas. Es "
"casi igual que el nodo Player. Las únicas diferencias son el script "
"(necesita rutinas 'IA' para generar el comportamiento del enemigo) y las "
"texturas de los sprites que utiliza el nodo AnimatedSprite."

#: ../../docs/getting_started/editor/unity_to_godot.rst:122
msgid "**A Level scene.**"
msgstr "**La escena de Nivel.**"

#: ../../docs/getting_started/editor/unity_to_godot.rst:124
msgid ""
"A Level scene is composed of Bricks (for platforms), Coins (for the player "
"to collect) and a number of instances of the Enemy scene. Each instance is a "
"node in the Level scene tree. These instances are separate enemies, which "
"initially have shared behavior and appearance as defined in the Enemy scene. "
"You can set different properties for each Enemy node (to change its color, "
"for example)."
msgstr ""
"Una escena de nivel se compone de Bricks (bloques para las plataformas), "
"Coins (monedas para que el jugador las recoja) y una serie de instancias de "
"la escena Enemy. Cada instancia es un nodo en el árbol de escenas del nivel. "
"Estas instancias son enemigos independientes, que inicialmente tienen un "
"comportamiento y apariencia compartidos, tal y como se han definido en la "
"escena Enemy. Puedes establecer diferentes propiedades para cada nodo Enemy "
"(por ejemplo, para cambiar de color)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:128
msgid ""
"4. **A Main scene.** The Main scene would be composed of one root node with "
"2 children: a Player instance node, and a Level instance node. The root node "
"can be anything, generally a \"root\" type such as \"Node\" which is the "
"most global type, or \"Node2D\" (root type of all 2D-related nodes), "
"\"Spatial\" (root type of all 3D-related nodes) or \"Control\" (root type of "
"all GUI-related nodes)."
msgstr ""
"4. **La escena principal.** La escena principal estaría compuesta por un "
"nodo raíz con 2 hijos: una instancia de Player y otra de Level. El nodo raíz "
"puede ser cualquier cosa, generalmente un tipo \"raíz\" como \"Node\" que es "
"el tipo más global, o \"Node2D\" (tipo raíz de todos los nodos relacionados "
"con 2D), \"Spatial\" (tipo raíz de todos los nodos relacionados con 3D) o "
"\"Control\" (tipo raíz de todos los nodos relacionados con GUI)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:134
msgid ""
"As you can see, every scene is organized as a tree. The same goes for nodes' "
"properties: you don't *add* a collision component to a node to make it "
"collidable like Unity does. Instead, you make this node a *child* of a new "
"specific node that has collision properties. Godot features various "
"collision types nodes, depending on the usage (see the :ref:`Physics "
"introduction <doc_physics_introduction>`)."
msgstr ""
"Como puedes ver, cada escena está organizada como un árbol. Lo mismo ocurre "
"con las propiedades de los nodos: no se *añade* un componente de colisión a "
"un nodo para hacerlo colisionable como lo hace Unity. En su lugar, este nodo "
"se convierte en *hijo* de un nuevo nodo específico que tiene propiedades de "
"colisión. Godot dispone de varios tipos de nodos de colisión, dependiendo "
"del uso (ver :ref:`Physics introduction <doc_physics_introduction>`)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:139
msgid ""
"What are the advantages of this system? Wouldn't this system potentially "
"increase the depth of the scene tree? And doesn't Unity already allow you to "
"organize GameObjects by putting them inside empty GameObjects?"
msgstr ""
"¿Cuáles son las ventajas de este sistema? ¿Este sistema no aumentaría "
"potencialmente la profundidad del árbol de la escenas? ¿Y Unity no permite "
"ya organizar GameObjects poniéndolos dentro de GameObjects vacíos?"

#: ../../docs/getting_started/editor/unity_to_godot.rst:141
msgid ""
"Godot's system is closer to the well-known object-oriented paradigm: Godot "
"provides a number of nodes which are not clearly \"Game Objects\", but they "
"provide their children with their own capabilities: this is inheritance."
msgstr ""
"El sistema de Godot está más cerca del conocido paradigma orientado a "
"objetos: Godot proporciona una serie de nodos que no son claramente "
"\"Objetos de Juego\", pero que proporcionan a sus hijos sus propias "
"capacidades: esto es herencia."

#: ../../docs/getting_started/editor/unity_to_godot.rst:142
msgid ""
"Godot allows the extraction of a subtree of a scene to make it a scene of "
"its own. So if a scene tree gets too deep, it can be split into smaller "
"subtrees. This is better for reusability, as you can include any subtree as "
"a child of any node. Putting multiple GameObjects in an empty GameObject in "
"Unity does not provide the same functionality."
msgstr ""
"Godot permite la extracción de un subárbol de una escena para convertirla en "
"una escena propia. Así que si un árbol de escena se hace demasiado profundo, "
"puede dividirse en subárboles más pequeños. Esto es mejor para la "
"reutilización, ya que se puede incluir cualquier subárbol como hijo de "
"cualquier nodo. Poner varios GameObjects en un GameObject vacío en Unity no "
"proporciona la misma funcionalidad."

#: ../../docs/getting_started/editor/unity_to_godot.rst:145
msgid "Project organization"
msgstr "Organización del proyecto"

#: ../../docs/getting_started/editor/unity_to_godot.rst:149
msgid ""
"There is no perfect project architecture. Any architecture can be made to "
"work in either Unity and Godot."
msgstr ""
"No existe una arquitectura de proyecto perfecta. Se puede hacer que "
"cualquier arquitectura funcione en Unity y Godot."

#: ../../docs/getting_started/editor/unity_to_godot.rst:152
msgid ""
"However, a common architecture for Unity projects is to have one Assets "
"folder in the root directory that contains various folders, one per type of "
"asset: Audio, Graphics, Models, Materials, Scripts, Scenes, and so on."
msgstr ""
"Sin embargo, es común en los proyectos de Unity tener una carpeta de Assets "
"en el directorio raíz que contiene varias carpetas, una por tipo de activo: "
"Audio, Gráficos, Modelos, Materiales, Scripts, Escenas, etc."

#: ../../docs/getting_started/editor/unity_to_godot.rst:155
msgid ""
"Since Godot allows splitting scenes into smaller scenes, each scene and "
"subscene existing as a file in the project, we recommend organizing your "
"project a bit differently. This wiki provides a page for this: :ref:"
"`doc_project_organization`."
msgstr ""
"Como Godot permite dividir las escenas en escenas más pequeñas, cada escena "
"y subescena existe como un archivo en el proyecto, por lo tanto, se "
"recomienda organizar el proyecto de una manera un poco diferente. Este wiki "
"proporciona información al respecto: :ref:`doc_project_organization`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:160
msgid "Where are my prefabs?"
msgstr "¿Dónde están mis prefabs?"

#: ../../docs/getting_started/editor/unity_to_godot.rst:162
msgid ""
"A prefab as provided by Unity is a 'template' element of the scene. It is "
"reusable, and each instance of the prefab that exists in the scene has an "
"existence of its own, but all of them have the same properties as defined by "
"the prefab."
msgstr ""
"Un prefabricado proporcionado por Unity es un elemento 'plantilla' de la "
"escena. Es reutilizable, y cada instancia del prefabricado que existe en la "
"escena tiene una existencia propia, pero todos tienen las mismas propiedades "
"definidas por el prefabricado."

#: ../../docs/getting_started/editor/unity_to_godot.rst:166
msgid ""
"Godot does not provide prefabs as such, but the same functionality is "
"provided by its scene system: The scene system is organized as a tree. Godot "
"allows you to save any subtree of a scene as a scene file. This new scene "
"can then be instanced as many times as you want, as a child of any node. Any "
"change you make to this new, separate scene will be applied to its "
"instances. However, any change you make to the instance will not have any "
"impact on the 'template' scene."
msgstr ""
"Godot no proporciona prefabs como tales, pero esta funcionalidad se "
"encuentra disponible gracias al sistema de escenas: como vimos el sistema de "
"escenas está organizado como un árbol. Godot permite guardar un subárbol de "
"una escena como una escena propia, guardada en su propio archivo. Esta nueva "
"escena puede ser instanciada tantas veces como se desee. Cualquier cambio "
"que se realice en esta nueva escena separada se aplicará a sus instancias. "
"Sin embargo, cualquier cambio que se realice en la instancia no tendrá "
"ningún impacto en la escena `plantilla'."

#: ../../docs/getting_started/editor/unity_to_godot.rst:173
msgid ""
"To be precise, you can modify the parameters of an instance in the Inspector "
"panel. The nodes that compose this instance are initially locked. You can "
"unlock them if you need to by right-clicking the instance in the Scene tree "
"and selecting \"Editable children\" in the menu. You don't need to do this "
"to add *new* child nodes to this node. Remember that any new children will "
"belong to the instance, not to the 'template' scene on disk. If you want to "
"add new children to every instance of your 'template' scene, then you should "
"add them in the 'template' scene."
msgstr ""
"Para ser precisos, se pueden modificar los parámetros de una instancia en el "
"panel del Inspector. Los nodos que componen esta instancia están "
"inicialmente bloqueados. Puedes desbloquearlos si lo necesitas haciendo clic "
"con el botón derecho del ratón sobre la instancia en el Árbol de Escenas y "
"seleccionando \"Hijos editables\" en el menú. No necesitas hacer esto para "
"añadir *nuevos* nodos hijos a este nodo. Recuerda que cualquier nuevo hijo "
"pertenecerá a la instancia, no a la escena 'plantilla' en el disco. Si "
"quieres añadir nuevos hijos a cada instancia de tu escena 'plantilla', "
"entonces debes añadirlos en la escena 'plantilla'."

#: ../../docs/getting_started/editor/unity_to_godot.rst:183
msgid "Glossary correspondence"
msgstr "Correspondencia del glosario"

#: ../../docs/getting_started/editor/unity_to_godot.rst:185
msgid "GameObject -> Node"
msgstr "GameObject -> Nodo"

#: ../../docs/getting_started/editor/unity_to_godot.rst:186
msgid "Add a component -> Inheriting"
msgstr "Add a component -> Heredar"

#: ../../docs/getting_started/editor/unity_to_godot.rst:187
msgid "Prefab -> Reusable Scene file"
msgstr "Prefab -> Archivo de escena reusable"

#: ../../docs/getting_started/editor/unity_to_godot.rst:191
msgid "Scripting: GDScript, C# and Visual Script"
msgstr "Scripting: GDScript, C# y Visual Script"

#: ../../docs/getting_started/editor/unity_to_godot.rst:194
msgid "Design"
msgstr "Diseño"

#: ../../docs/getting_started/editor/unity_to_godot.rst:196
msgid ""
"Unity supports C#. C# benefits from its integration with Visual Studio and "
"has desirable features such as static typing."
msgstr ""
"Como ya sabrás, \"Unity soporta C#\" y se beneficia de su integración con "
"Visual Studio y otras características, como el tipado estático."

#: ../../docs/getting_started/editor/unity_to_godot.rst:198
msgid ""
"Godot provides its own scripting language, :ref:`GDScript <doc_scripting>` "
"as well as support for :ref:`Visual Script <toc-learn-scripting-"
"visual_script>` and :ref:`C# <doc_c_sharp>`. GDScript borrows its syntax "
"from Python, but is not related to it. If you wonder about the reasoning for "
"a custom scripting language, please read the :ref:`doc_gdscript` and :ref:"
"`doc_faq` pages. GDScript is strongly attached to the Godot API and doesn't "
"take long to learn: Between one evening for an experienced programmer and a "
"week for a complete beginner."
msgstr ""
"Godot proporciona su propio lenguaje de secuencias de comandos: ref: "
"`GDScript <doc_scripting>` y también admite: ref: `Visual Script <toc-learn-"
"scripting-visual_script>` y: ref: `C # <doc_c_sharp>`. GDScript toma "
"prestada su sintaxis de Python, pero no está relacionada con ella. Si se "
"pregunta sobre el razonamiento de un lenguaje de script personalizado, lea "
"las páginas: ref: `doc_gdscript` y: ref:` doc_faq`. GDScript está "
"fuertemente vinculado a la API de Godot y no tarda mucho en aprender: entre "
"una noche para un programador experimentado y una semana para un "
"principiante completo."

#: ../../docs/getting_started/editor/unity_to_godot.rst:204
msgid ""
"Unity allows you to attach as many scripts as you want to a GameObject. Each "
"script adds a behavior to the GameObject: For example, you can attach a "
"script so that it reacts to the player's controls, and another that controls "
"its specific game logic."
msgstr ""
"Unity te permite adjuntar tantos scripts como quieras a un GameObject. Cada "
"script añade un comportamiento al GameObject: por ejemplo, se puede adjuntar "
"un script para que reaccione a los controles del jugador y otro para que "
"controle su lógica de juego específica."

#: ../../docs/getting_started/editor/unity_to_godot.rst:208
msgid ""
"In Godot, you can only attach one script per node. You can use either an "
"external GDScript file or include the script directly in the node. If you "
"need to attach more scripts to one node, then you may consider two "
"solutions, depending on your scene and on what you want to achieve:"
msgstr ""
"En Godot, sólo puedes adjuntar un script por nodo. Se puede utilizar un "
"archivo GDScript externo o incluirlo directamente en el nodo. Si necesitas "
"adjuntar más scripts a un nodo, entonces puedes considerar dos soluciones, "
"dependiendo de tu escena y de lo que quieras lograr:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:212
msgid ""
"either add a new node between your target node and its current parent, then "
"add a script to this new node."
msgstr ""
"puedes añadir un nuevo nodo entre tu nodo de destino y su padre actual, y "
"luego añadir un script a este nuevo nodo."

#: ../../docs/getting_started/editor/unity_to_godot.rst:213
msgid ""
"or, you can split your target node into multiple children and attach one "
"script to each of them."
msgstr ""
"o bien, puedes dividir tu nodo objetivo en varios hijos y adjuntar un script "
"a cada uno de ellos."

#: ../../docs/getting_started/editor/unity_to_godot.rst:215
msgid ""
"As you can see, it can be easy to turn a scene tree to a mess. Consider "
"splitting any complicated scene into multiple, smaller branches."
msgstr ""
"Como puede ver, puede ser fácil convertir un árbol de escena en un desastre. "
"Considere dividir cualquier escena complicada en varias ramas más pequeñas."

#: ../../docs/getting_started/editor/unity_to_godot.rst:218
msgid "Connections: groups and signals"
msgstr "Conexiones: grupos y señales"

#: ../../docs/getting_started/editor/unity_to_godot.rst:220
msgid ""
"You can control nodes by accessing them via script and calling built-in or "
"user-defined functions on them. You can also place nodes in a group and call "
"functions on all nodes in this group. See more in the :ref:`scripting "
"documentation <doc_scripting_continued>`."
msgstr ""
"Puedes controlar los nodos accediendo a ellos mediante un script y llamando "
"a funciones incorporadas o definidas por el usuario. También es posible "
"colocar nodos en un grupo y llamar funciones en todos los nodos de este "
"grupo. Ver más en la :ref:`documentación de scripting "
"<doc_scripting_continued>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:225
msgid ""
"Nodes can send a signal when a specified action occurs. A signal can be set "
"to call any function. You can define custom signals and specify when they "
"are triggered. See more in the :ref:`signals documentation "
"<doc_gdscript_signals>`."
msgstr ""
"Los nodos pueden enviar una señal cuando ocurre una acción especificada. Se "
"puede configurar una señal para llamar a cualquier función. Puedes definir "
"señales personalizadas y especificar cuándo se activan. Ver más en la :ref:"
"`documentación de señales <doc_gdscript_signals>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:230
msgid "Script serialization"
msgstr "Serialización de scripts"

#: ../../docs/getting_started/editor/unity_to_godot.rst:232
msgid "Unity can handle script serialization in two ways:"
msgstr "Unity puede manejar la serialización de scripts de dos maneras:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:234
msgid ""
"Implicit: All public fields in a class are automatically serialized if the "
"type is a serializable type (``Dictionary`` is not serializable)."
msgstr ""
"Implícita: todos los campos públicos en una clase se serializan "
"automáticamente si el tipo es un tipo serializable (``Dictionary`` no es "
"serializable)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:235
msgid ""
"Explicit: Non-public fields can be serialized using the ``[SerializeField]`` "
"attribute."
msgstr ""
"Explícita: los campos no públicos se pueden serializar usando el atributo "
"``[SerializeField]``."

#: ../../docs/getting_started/editor/unity_to_godot.rst:237
msgid ""
"Godot also has a built-in script serialization system, but it works only "
"explicitly. You can serialize any serializable type (:ref:`built-in and "
"various engine types <doc_binary_serialization_api>`, including :ref:"
"`class_Array` and :ref:`class_Dictionary`) using the ``export`` keyword. See "
"the :ref:`exports documentation <doc_gdscript_exports>` for details."
msgstr ""
"Godot también tiene un sistema integrado de serialización de scripts, pero "
"funciona solo explícitamente. Puede serializar cualquier tipo serializable (:"
"ref:`incorporado y varios tipos de motores <doc_binary_serialization_api>`, "
"incluyendo ref:`class_Array` y:ref:`class_Dictionary`) usando la palabra "
"clave ``export``. Consulte la:ref:`documentación de exportaciones "
"<doc_gdscript_exports>` para obtener más información."

#: ../../docs/getting_started/editor/unity_to_godot.rst:242
msgid ""
"Unity also has a data type called ``ScriptableObject`` used to serialize "
"custom asset objects. Its equivalent in Godot is the base class for all "
"resources: :ref:`class_Resource`. Creating a script that inherits :ref:"
"`class_Resource` will allow you to create custom serializable objects. More "
"information about resources can be found :ref:`here <doc_resources>`."
msgstr ""
"Unity también tiene un tipo de datos llamado ``ScriptableObject`` que se "
"utiliza para serializar objetos de recursos personalizados. Su equivalente "
"en Godot es la clase base para todos los recursos: ref:`class_Resource`. "
"Crear un script que herede :ref:`class_Resource` te permitirá crear objetos "
"personalizados serializables. Se puede encontrar más información sobre los "
"recursos :ref:`aquí <doc_resources>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:247
msgid "Using Godot in C++"
msgstr "Usando Godot en C++"

#: ../../docs/getting_started/editor/unity_to_godot.rst:249
msgid ""
"Godot allows you to develop your project directly in C++ by using its API, "
"which is not possible with Unity at the moment. As an example, you can "
"consider Godot Engine's editor as a \"game\" written in C++ using the Godot "
"API."
msgstr ""
"Godot te permite desarrollar tu proyecto directamente en C++ utilizando su "
"API, lo que no es posible con Unity en este momento. Por ejemplo, puedes "
"considerar el editor de Godot Engine como un \"juego\" escrito en C++ usando "
"la API de Godot."

#: ../../docs/getting_started/editor/unity_to_godot.rst:252
msgid ""
"If you are interested in using Godot in C++, you may want to start reading "
"the :ref:`Developing in C++ <doc_introduction_to_godot_development>` page."
msgstr ""
"Si estás interesado en usar Godot en C++, puedes empezar a leer la página :"
"ref:`Desarrollando en C++ <doc_introduction_to_godot_development>`."
