# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-30 19:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/animation/animation_tree.rst:4
msgid "AnimationTree"
msgstr "AnimationTree"

#: ../../docs/tutorials/animation/animation_tree.rst:7
msgid "Introduction"
msgstr "Introducción"

#: ../../docs/tutorials/animation/animation_tree.rst:9
msgid ""
"With :ref:`AnimationPlayer <class_AnimationPlayer>`, Godot has one of the "
"most flexible animation systems that you can find in any game engine. The "
"ability to animate pretty much any property in any node or resource, as well "
"as having dedicated transform, bezier, function calling, audio and sub-"
"animation tracks, is pretty much unique."
msgstr ""
"Con :ref:`AnimationPlayer <class_AnimationPlayer>`, Godot tiene uno de los "
"sistemas de animación más flexibles que puedas encontrar en cualquier motor "
"de juegos. La capacidad de animar prácticamente cualquier propiedad en "
"cualquier nodo o recurso, además de tener pistas dedicadas de "
"transformación, Bézier, llamada de funciones, audio y pistas de "
"subanimación, es prácticamente única."

#: ../../docs/tutorials/animation/animation_tree.rst:13
msgid ""
"However, the support for blending those animations via ``AnimationPlayer`` "
"is relatively limited, as only a fixed cross-fade transition time can be set."
msgstr ""
"Sin embargo, el soporte para mezclar esas animaciones a través de "
"``AnimationPlayer`` es relativamente limitado, ya que sólo se puede "
"establecer un tiempo fijo de transición de cruce."

#: ../../docs/tutorials/animation/animation_tree.rst:15
msgid ""
":ref:`AnimationTree <class_AnimationTree>` is a new node introduced in Godot "
"3.1 to deal with advanced transitions. It supersedes the ancient "
"``AnimationTreePlayer``, while adding a huge amount of features and "
"flexibility."
msgstr ""
":ref:`AnimationTree <class_AnimationTree>` es un nuevo nodo introducido en "
"Godot 3.1 para gestionar transiciones avanzadas. Sustituye al antiguo "
"``AnimationTreePlayer``, mientras que añade una gran cantidad de "
"características y flexibilidad."

#: ../../docs/tutorials/animation/animation_tree.rst:19
msgid "Creating an AnimationTree"
msgstr "Creando un AnimationTree"

#: ../../docs/tutorials/animation/animation_tree.rst:21
msgid ""
"Before starting, it must be made clear that an ``AnimationTree`` node does "
"not contain its own animations. Instead, it uses animations contained in an "
"``AnimationPlayer`` node. This way, you can edit your animations (or import "
"them from a 3D scene) as usual and then use this extra node to control the "
"playback."
msgstr ""
"Antes de empezar, debe quedar claro que un nodo ``AnimationTree`` no "
"contiene sus propias animaciones. En su lugar, utiliza las animaciones "
"contenidas en un nodo ``AnimationPlayer``. De esta manera, puedes editar tus "
"animaciones (o importarlas desde una escena 3D) como de costumbre y luego "
"usar este nodo extra para controlar la reproducción."

#: ../../docs/tutorials/animation/animation_tree.rst:25
msgid ""
"The most common way to use ``AnimationTree`` is in a 3D scene. When "
"importing your scenes from a 3D exchange format, they will usually come with "
"animations built-in (either multiple ones or split from a large one on "
"import). At the end, the imported Godot scene will contain the animations in "
"a ``AnimationPlayer`` node."
msgstr ""
"La forma más común de usar \"AnimationTree\" es en una escena 3D. Al "
"importar tus escenas de un formato de intercambio 3D, normalmente vendrán "
"con animaciones integradas ( ya sean múltiples o separadas desde una más "
"grande en la importación). Al final, la escena importada de Godot contendrá "
"las animaciones en un nodo ``AnimationPlayer``."

#: ../../docs/tutorials/animation/animation_tree.rst:29
msgid ""
"As you rarely use imported scenes directly in Godot (they are either "
"instantiated or inherited from), you can place the ``AnimationTree`` node in "
"your new scene which contains the imported one. Afterwards, point the "
"``AnimationTree`` node to the ``AnimationPlayer`` that was created in the "
"imported scene."
msgstr ""
"Como en raras ocasiones se utilizan las escenas importadas directamente en "
"Godot (son instanciadas o heredadas), puedes colocar el nodo "
"``AnimationTree`` en tu nueva escena que contiene lo importado. Después, "
"apunta el nodo ``AnimationTree`` al ``AnimationPlayer`` que fue creado en la "
"escena importada."

#: ../../docs/tutorials/animation/animation_tree.rst:32
msgid ""
"This is how it's done in the `Third Person Shooter demo <https://github.com/"
"godotengine/tps-demo>`_, for reference:"
msgstr ""
"Así es como se hace en `Third Person Shooter demo <https://github.com/"
"godotengine/tps-demo>`_, como referencia:"

#: ../../docs/tutorials/animation/animation_tree.rst:36
msgid ""
"A new scene was created for the player with a ``KinematicBody`` as root. "
"Inside this scene, the original ``.dae`` (Collada) file was instantiated and "
"an ``AnimationTree`` node was created."
msgstr ""
"Se creó una nueva escena para el jugador con un ``KinematicBody`` como raíz. "
"Dentro de esta escena, el archivo original ``.dae`` (Collada) fue "
"instanciado y se creó un nodo ``AnimationTree``."

#: ../../docs/tutorials/animation/animation_tree.rst:40
msgid "Creating a tree"
msgstr "Creando un árbol"

#: ../../docs/tutorials/animation/animation_tree.rst:42
msgid ""
"There are three main types of nodes that can be used in ``AnimationTree``:"
msgstr ""
"Hay tres tipos principales de nodos que pueden ser usados en "
"``AnimationTree``:"

#: ../../docs/tutorials/animation/animation_tree.rst:44
msgid ""
"Animation nodes, which reference an animation from the linked "
"``AnimationTree``."
msgstr ""
"Nodos Animation, que hacen referencia a una animación del ``AnimationTree`` "
"vinculado."

#: ../../docs/tutorials/animation/animation_tree.rst:45
msgid "Animation Root nodes, which are used to blend sub-nodes."
msgstr "Nodos Animation Root, que se utilizan para combinar subnodos."

#: ../../docs/tutorials/animation/animation_tree.rst:46
msgid ""
"Animation Blend nodes, which are used within ``AnimationNodeBlendTree`` as "
"single-graph blending via multiple input ports."
msgstr ""
"Nodos Animation Blend, que se utilizan dentro de ``AnimationNodeBlendTree`` "
"para combinar un solo gráfico a través de múltiples puertos de entrada."

#: ../../docs/tutorials/animation/animation_tree.rst:48
msgid "To set a root node in ``AnimationTree``, a few types are available:"
msgstr ""
"Para establecer un nodo raíz en ``AnimationTree``, hay algunos tipos "
"disponibles:"

#: ../../docs/tutorials/animation/animation_tree.rst:52
msgid ""
"``AnimationNodeAnimation``: Selects an animation from the list and plays it. "
"This is the simplest root node, and generally not used directly as root."
msgstr ""
"``AnimationNodeAnimation``: Selecciona una animación de la lista y la "
"reproduce. Este es el nodo raíz más simple, y generalmente no se usa "
"directamente como raíz."

#: ../../docs/tutorials/animation/animation_tree.rst:53
msgid ""
"``AnimationNodeBlendTree``: Contains many *blend* type nodes, such as mix, "
"blend2, blend3, one shot, etc. This is one of the most commonly used roots."
msgstr ""
"``AnimationNodeBlendTree``: Contiene muchos nodos de tipo *blend*, como mix, "
"blend2, blend3, one shot, etc. Esta es una de las raíces más utilizadas."

#: ../../docs/tutorials/animation/animation_tree.rst:54
msgid ""
"``AnimationNodeStateMachine``: Contains multiple root nodes as children in a "
"graph. Each node is used as a *state*, and provides multiple functions to "
"alternate between states."
msgstr ""
"``AnimationNodeStateMachine``: Contiene múltiples nodos raíz como hijos en "
"un gráfico. Cada nodo se utiliza como un *estado*, y proporciona múltiples "
"funciones para alternar entre los estados."

#: ../../docs/tutorials/animation/animation_tree.rst:55
msgid ""
"``AnimationNodeBlendSpace2D``: Allows placing root nodes in a 2D blend "
"space. Control the blend position in 2D to mix between multiple animations."
msgstr ""
"``AnimationNodeBlendSpace2D``: Permite colocar nodos raíz en un espacio de "
"mezcla 2D. Controla la posición de mezcla en 2D para combinar varias "
"animaciones."

#: ../../docs/tutorials/animation/animation_tree.rst:56
msgid "``AnimationNodeBlendSpace1D``: Simplified version of the above (1D)."
msgstr "``AnimationNodeBlendSpace1D``: Versión simplificada del anterior (1D)."

#: ../../docs/tutorials/animation/animation_tree.rst:59
msgid "Blend tree"
msgstr "Blend tree"

#: ../../docs/tutorials/animation/animation_tree.rst:61
msgid ""
"An ``AnimationNodeBlendTree`` can contain both root and regular nodes used "
"for blending. Nodes are added to the graph from a menu:"
msgstr ""
"Un ``AnimationNodeBlendTree`` puede contener nodos raíz y comunes usados "
"para la mezcla. Los nodos se añaden al gráfico desde un menú:"

#: ../../docs/tutorials/animation/animation_tree.rst:65
msgid ""
"All blend trees contain an ``Output`` node by default, and something has to "
"be connected to it in order for animations to play."
msgstr ""
"Todos los blend trees contienen un nodo ``Output`` por defecto, y algo tiene "
"que estar conectado a él para que las animaciones puedan reproducirse."

#: ../../docs/tutorials/animation/animation_tree.rst:67
msgid ""
"The easiest way to test this functionality is to connect an ``Animation`` "
"node to it directly:"
msgstr ""
"La forma más fácil de probar esta funcionalidad es conectar un nodo de "
"``Animation`` directamente:"

#: ../../docs/tutorials/animation/animation_tree.rst:71
msgid ""
"This will simply play back the animation. Make sure that the "
"``AnimationTree`` is active for something to actually happen."
msgstr ""
"Esto simplemente reproducirá la animación. Asegúrate de que el "
"``AnimationTree`` esté activo para que algo suceda en verdad."

#: ../../docs/tutorials/animation/animation_tree.rst:73
msgid "Following is a short description of available nodes:"
msgstr ""
"A continuación se presenta una breve descripción de los nodos disponibles:"

#: ../../docs/tutorials/animation/animation_tree.rst:76
msgid "Blend2 / Blend3"
msgstr "Blend2 / Blend3"

#: ../../docs/tutorials/animation/animation_tree.rst:78
msgid ""
"These nodes will blend between two or three inputs by a user-specified blend "
"value:"
msgstr ""
"Estos nodos se mezclarán entre dos o tres entradas mediante un valor de "
"mezcla especificado por el usuario:"

#: ../../docs/tutorials/animation/animation_tree.rst:82
msgid "For more complex blending, it is advised to use blend spaces instead."
msgstr ""
"Para mezclas más complejas, se aconseja usar espacios de mezcla en su lugar."

#: ../../docs/tutorials/animation/animation_tree.rst:84
msgid ""
"Blending can also use filters, i.e. you can control individually which "
"tracks go through the blend function. This is very useful for layering "
"animations on top of each other."
msgstr ""
"La mezcla también puede utilizar filtros, es decir, se puede controlar "
"individualmente cuáles son las pistas que pasan por la función de mezcla. "
"Esto es muy útil para superponer animaciones."

#: ../../docs/tutorials/animation/animation_tree.rst:90
msgid "OneShot"
msgstr "OneShot"

#: ../../docs/tutorials/animation/animation_tree.rst:92
msgid ""
"This node will execute a sub-animation and return once it finishes. Blend "
"times for fading in and out can be customized, as well as filters."
msgstr ""
"Este nodo ejecutará una subanimación y volverá una vez que termine. Los "
"tiempos de mezcla para el desvanecimiento de entrada y salida pueden ser "
"personalizados, así como los filtros."

#: ../../docs/tutorials/animation/animation_tree.rst:97
msgid "Seek"
msgstr "Seek"

#: ../../docs/tutorials/animation/animation_tree.rst:99
msgid ""
"This node can be used to cause a seek command to happen to any sub-children "
"of the graph. After setting the time, this value returns to -1."
msgstr ""
"Este nodo puede ser usado para hacer que un comando de búsqueda le suceda a "
"cualquier sub-hijo del gráfico. Después de establecer el tiempo, este valor "
"vuelve a -1."

#: ../../docs/tutorials/animation/animation_tree.rst:102
msgid "TimeScale"
msgstr "TimeScale"

#: ../../docs/tutorials/animation/animation_tree.rst:104
msgid ""
"Allows scaling the speed of the animation (or reverse it) in any children "
"nodes. Setting it to 0 will pause the animation."
msgstr ""
"Permite escalar la velocidad de la animación (o invertirla) en cualquier "
"nodo hijo. Poniéndolo en 0 se detendrá la animación."

#: ../../docs/tutorials/animation/animation_tree.rst:107
msgid "Transition"
msgstr "Transition"

#: ../../docs/tutorials/animation/animation_tree.rst:109
msgid ""
"Very simple state machine (when you don't want to cope with a "
"``StateMachine`` node). Animations can be connected to the outputs and "
"transition times can be specified."
msgstr ""
"Una máquina de estados muy simple (cuando no quieres lidiar con un nodo "
"``StateMachine``). Las animaciones pueden ser conectadas a las salidas y se "
"pueden especificar los tiempos de transición."

#: ../../docs/tutorials/animation/animation_tree.rst:112
msgid "BlendSpace2D"
msgstr "BlendSpace2D"

#: ../../docs/tutorials/animation/animation_tree.rst:114
msgid ""
"``BlendSpace2D`` is a node to do advanced blending in two dimensions. Points "
"are added to a two-dimensional space and then a position can be controlled "
"to determine blending:"
msgstr ""
"``BlendSpace2D`` es un nodo para hacer mezclas avanzadas en dos dimensiones. "
"Se añaden puntos a un espacio bidimensional y luego se puede controlar una "
"posición para determinar la mezcla:"

#: ../../docs/tutorials/animation/animation_tree.rst:119
msgid ""
"The ranges in X and Y can be controlled (and labeled for convenience). By "
"default, points can be placed anywhere (just right-click on the coordinate "
"system or use the *add point* button) and triangles will be generated "
"automatically using Delaunay."
msgstr ""
"Los rangos en X e Y pueden ser controlados (y etiquetados para mayor "
"comodidad). Por defecto, los puntos pueden ser colocados en cualquier lugar "
"(sólo hay que hacer clic con el botón derecho del ratón en el sistema de "
"coordenadas o usar el botón *añadir punto*) y los triángulos se generarán "
"automáticamente usando Delaunay."

#: ../../docs/tutorials/animation/animation_tree.rst:124
msgid ""
"It is also possible to draw the triangles manually by disabling the *auto "
"triangle* option, though this is rarely necessary:"
msgstr ""
"También es posible dibujar los triángulos manualmente desactivando la opción "
"*triángulo automático*, aunque esto rara vez es necesario:"

#: ../../docs/tutorials/animation/animation_tree.rst:128
msgid ""
"Finally, it is possible to change the blend mode. By default, blending "
"happens by interpolating points inside the closest triangle. When dealing "
"with 2D animations (frame by frame), you may want to switch to *Discrete* "
"mode. Alternatively, if you want to keep the current play position when "
"switching between discrete animations, there is a *Carry* mode. This mode "
"can be changed in the *Blend* menu:"
msgstr ""
"Finalmente, es posible cambiar el modo de mezcla. Por defecto, la mezcla se "
"realiza interpolando puntos dentro del triángulo más cercano. Cuando se "
"trata de animaciones 2D (cuadro por cuadro), es posible que quieras cambiar "
"al modo *Discrete*. Por otra parte, si quieres mantener la posición actual "
"de reproducción al cambiar entre las animaciones discretas, hay un modo "
"*Carry*. Este modo puede cambiarse en el menú *Blend*:"

#: ../../docs/tutorials/animation/animation_tree.rst:136
msgid "BlendSpace1D"
msgstr "BlendSpace1D"

#: ../../docs/tutorials/animation/animation_tree.rst:138
msgid ""
"This is similar to 2D blend spaces, but in one dimension (so triangles are "
"not needed)."
msgstr ""
"Esto es similar a los espacios de mezcla 2D, pero en una dimensión (por lo "
"que los triángulos no son necesarios)."

#: ../../docs/tutorials/animation/animation_tree.rst:141
msgid "StateMachine"
msgstr "StateMachine"

#: ../../docs/tutorials/animation/animation_tree.rst:143
msgid ""
"This node is a relatively simple state machine. Root nodes can be created "
"and connected via lines. States are connected via *Transitions*, which are "
"connections with special properties. Transitions are uni-directional, but "
"two can be used to connect in both ways."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:148
msgid "There are many types of transitions:"
msgstr "Existen varios tipos de transición:"

#: ../../docs/tutorials/animation/animation_tree.rst:152
msgid ""
"*Immediate*: Will switch to the next state immediately. The current state "
"will end and blend into the beginning of the new one."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:153
msgid ""
"*Sync*: Will switch to the next state immediately, but will seek the new "
"state to the playback position of the old state."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:154
msgid ""
"*At End*: Will wait for the current state playback to end, then switch to "
"the beginning of the next state animation."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:156
msgid ""
"Transitions also have a few properties. Click any transition and it will be "
"displayed in the inspector dock:"
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:160
msgid ""
"*Switch Mode* is the transition type (see above), it can be modified after "
"creation here."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:161
msgid ""
"*Auto Advance* will turn on the transition automatically when this state is "
"reached. This works best with the *At End* switch mode."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:162
msgid ""
"*Advance Condition* will turn on auto advance when this condition is set. "
"This is a custom text field that can be filled with a variable name. The "
"variable can be modified from code (more on this later)."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:164
msgid "*Xfade Time* is the time to cross-fade between this state and the next."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:165
msgid ""
"*Priority* is used together with the ``travel()`` function from code (more "
"on this later). When travelling from a state to another, give more priority "
"to this node."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:166
msgid ""
"*Disabled* allows to disable this transition (it will not be used during "
"travel or auto advance)."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:170
msgid "Root motion"
msgstr "Root motion"

#: ../../docs/tutorials/animation/animation_tree.rst:172
msgid ""
"When working with 3D animations, a popular technique is for animators to use "
"the root skeleton bone to give motion to the rest of the skeleton. This "
"allows animating characters in a way where steps actually match the floor "
"below. It also allows precise interaction with objects during cinematics."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:175
msgid ""
"When playing back the animation in Godot, it is possible to select this bone "
"as the *root motion track*. Doing so will cancel the bone transformation "
"visually (the animation will stay in place)."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:180
msgid ""
"Afterwards, the actual motion can be retrieved via the :ref:`AnimationTree "
"<class_AnimationTree>` API as a transform:"
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:191
msgid ""
"This can be fed to functions such as :ref:`KinematicBody.move_and_slide "
"<class_KinematicBody_method_move_and_slide>` to control the character "
"movement."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:193
msgid ""
"There is also a tool node, ``RootMotionView``, that can be placed in a scene "
"and will act as a custom floor for your character and animations (this node "
"is normally disabled during the game)."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:200
msgid "Controlling from code"
msgstr "Controlando desde código"

#: ../../docs/tutorials/animation/animation_tree.rst:202
msgid ""
"After building the tree and previewing it, the only question remaining is "
"\"How is all this controlled from code?\"."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:204
msgid ""
"Keep in mind that the animation nodes are just resources and, as such, they "
"are shared between all the instances. Setting values in the nodes directly "
"will affect all instances of the scene that uses this ``AnimationTree``. "
"This has some cool use cases, though, e.g. you can copy and paste parts of "
"your animation tree, or reuse nodes with a complex layout (such as a state "
"machine or blend space) in different animation trees."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:209
msgid ""
"The actual animation data is contained in the ``AnimationTree`` node and is "
"accessed via properties. Check the \"Parameters\" section of the "
"``AnimationTree`` node to see all the parameters that can be modified in "
"real-time:"
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:214
msgid ""
"This is handy because it makes it possible to animate them from an "
"``AnimationPlayer``, or even the ``AnimationTree`` itself, allowing the "
"realization of very complex animation logic."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:217
msgid ""
"To modify these values from code, the property path must be obtained. This "
"is done easily by hovering the mouse over any of the parameters:"
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:221
msgid "Which allows setting them or reading them:"
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:236
msgid "State machine travel"
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:238
msgid ""
"One of the nice features in Godot's ``StateMachine`` implementation is the "
"ability to travel. The graph can be instructed to go from the current state "
"to another one, while visiting all the intermediate ones. This is done via "
"the A\\* algorithm."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:241
msgid ""
"To use the travel ability, you should first retrieve the :ref:"
"`AnimationNodeStateMachinePlayback "
"<class_AnimationNodeStateMachinePlayback>` object from the ``AnimationTree`` "
"node (it is exported as a property)."
msgstr ""

#: ../../docs/tutorials/animation/animation_tree.rst:254
msgid ""
"Once retrieved, it can be used by calling one of the many functions it "
"offers:"
msgstr ""
