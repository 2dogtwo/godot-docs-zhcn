# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 15:51+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Using the ArrayMesh"
msgstr "Usando ArrayMesh"

msgid ""
"This tutorial will present the basics of using an :ref:`ArrayMesh "
"<class_arraymesh>`"
msgstr ""
"Este tutorial presentará los fundamentos del uso de un :ref:`ArrayMesh "
"<class_arraymesh>`"

msgid ""
"To do so, we will use the function :ref:`add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`, which takes up to four "
"parameters. The first two are required, while the second two are optional."
msgstr ""
"Para ello, utilizaremos la función :ref:`add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>`, que toma hasta cuatro "
"parámetros. Los dos primeros son obligatorios, mientras que los dos segundos "
"son opcionales."

msgid ""
"The first is the ``PrimitiveType``, this is an OpenGL concept that instructs "
"the GPU how to arrange the primitive based on the vertices given whether it "
"is triangles, lines, points, etc. A complete list can be found under the :"
"ref:`Mesh <class_mesh>` class reference page."
msgstr ""

msgid ""
"The second is the actual Array that stores the mesh information. The array "
"is a normal Godot array that is constructed with empty brackets ``[]``. It "
"stores a ``Pool**Array`` (e.g. PoolVector3Array, PoolIntArray, etc.) for "
"each type of information."
msgstr ""
"El segundo es el Array actual que almacena la información del mesh. El array "
"es un array normal de Godot que se construye con los corchetes vacíos "
"``[]``. Almacena un ``Pool**Array`` (por ejemplo, PoolVector3Array, "
"PoolIntArray, etc.) para cada tipo de información."

msgid "``ARRAY_VERTEX`` = 0 | PoolVector3Array or PoolVector2Array"
msgstr "``ARRAY_VERTEX`` = 0 | PoolVector3Array o PoolVector2Array"

msgid "``ARRAY_NORMAL`` = 1 | PoolVector3Array"
msgstr "``ARRAY_NORMAL`` = 1 | PoolVector3Array"

#, fuzzy
msgid ""
"``ARRAY_TANGENT`` = 2 | PoolRealArray of groups of 4 floats. First 3 floats "
"determine the tangent, and the last the binormal direction as -1 or 1."
msgstr ""
"``ARRAY_TANGENT`` = 2 | PoolRealArray de grupos de 4 floats. Los primeros 3 "
"floats determinan la tangente, y el último la dirección binormal como -1 o 1."

msgid "``ARRAY_COLOR`` = 3 | PoolColorArray"
msgstr "``ARRAY_COLOR`` = 3 | PoolColorArray"

msgid "``ARRAY_TEX_UV`` = 4 | PoolVector2Array or PoolVector3Array"
msgstr "``ARRAY_TEX_UV`` = 4 | PoolVector2Array o PoolVector3Array"

msgid "``ARRAY_TEX_UV2`` = 5 | PoolVector2Array or PoolVector3Array"
msgstr "``ARRAY_TEX_UV2`` = 5 | PoolVector2Array o PoolVector3Array"

msgid ""
"``ARRAY_BONES`` = 6 | PoolRealArray of groups of 4 floats or PoolIntArray of "
"groups of 4 ints"
msgstr ""
"``ARRAY_BONES`` = 6 | PoolRealArray de grupos de 4 floats o PoolIntArray de "
"grupos de 4 ints"

msgid "``ARRAY_WEIGHTS`` = 7 | PoolRealArray of groups of 4 floats"
msgstr "``ARRAY_WEIGHTS`` = 7 | PoolRealArray de grupos de 4 floats"

msgid "``ARRAY_INDEX`` = 8 | PoolIntArray"
msgstr "``ARRAY_INDEX`` = 8 | PoolIntArray"

msgid ""
"The Array of vertices is always required. All the others are optional and "
"will only be used if included."
msgstr ""
"El Array de vértices siempre es requerido. Todos los demás son opcionales y "
"sólo se usarán si se incluyen."

msgid ""
"Each array needs to have the same number of elements as the vertex array "
"except for the index array. For arrays like tangents, an element is a group "
"of 4 floats. So the array size will be four times the size of the vertex "
"array size, but they will have the same number of elements"
msgstr ""
"Cada array debe tener el mismo número de elementos que el array de vértices, "
"excepto el array de índices. Para arrays como las tangentes, un elemento es "
"un grupo de 4 floats. Así que el tamaño del array será cuatro veces el "
"tamaño del array de vértices, pero tendrán el mismo número de elementos"

msgid "The index array is unique."
msgstr "El array de índices es único."

msgid ""
"The third parameter is an array of blendshapes for the Mesh to use. While "
"this tutorial does not cover using blendshapes, it is possible to specify "
"them when creating a surface from arrays."
msgstr ""
"El tercer parámetro es un conjunto de blendshapes para que el Mesh lo "
"utilice. Aunque este tutorial no cubre el uso de blendshapes, es posible "
"especificarlos al crear una superficie a partir de arrays."

msgid ""
"The last parameter is the compress flags which specifies which arrays to "
"store with half as many bits. The values can be found in the classref for :"
"ref:`VisualServer <class_visualserver>` under :ref:`ArrayFormat "
"<enum_visualserver_arrayformat>`."
msgstr ""

msgid ""
"For normal usage you will find it is best to leave the last two parameters "
"empty."
msgstr ""

msgid "ArrayMesh"
msgstr "ArrayMesh"

msgid ""
"Add an :ref:`ArrayMesh <class_arraymesh>` to a MeshInstance. Normally, "
"adding an ArrayMesh in the editor is not useful, but in this case it allows "
"as to access the ArrayMesh from code without creating one."
msgstr ""
"Añade un :ref:`ArrayMesh <class_arraymesh>` a un MeshInstance. Normalmente, "
"añadir un ArrayMesh en el editor no es útil, pero en este caso permite como "
"acceder al ArrayMesh desde el código sin crear uno."

msgid "Next, add a script to the MeshInstance."
msgstr "A continuación, agrega el script al MeshInstance."

msgid "Under ``_ready()``, create a new Array."
msgstr "Dentro de ``_ready()``, crea un nuevo Array."

msgid ""
"This will be the array that we keep our surface information in, it will hold "
"all the arrays of data that the surface needs. Godot will expect it to be of "
"size ``Mesh.ARRAY_MAX``, so resize it accordingly."
msgstr ""

msgid "Next create the arrays for each data type you will use."
msgstr ""

msgid ""
"Once you have filled your data arrays with your geometry you can create a "
"mesh by adding each array to ``surface_array`` and then committing to the "
"mesh."
msgstr ""

msgid ""
"In this example, we used ``Mesh.PRIMITIVE_TRIANGLES``, but you can use any "
"primitive type available from mesh."
msgstr ""

msgid "Put together the full code looks like:"
msgstr ""

msgid ""
"The code that goes in the middle can be whatever you want. Below we will "
"present some example code that could go in the middle."
msgstr ""

msgid "Generating geometry"
msgstr "Generando geometría"

msgid ""
"Here is sample code for generating a sphere. Although the code is presented "
"in GDScript, there is nothing Godot specific about the approach to "
"generating it. This implementation has nothing in particular to do with "
"ArrayMeshes and is just a generic approach to generating a sphere. If you "
"are having trouble understanding it or want to learn more about procedural "
"geometry in general, you can use any tutorial that you find online."
msgstr ""

msgid "Combined with the code above, this code will generate a sphere."
msgstr ""

msgid ""
"When it comes to generating geometry with the ArrayMesh you need to "
"understand what goes in each array and then you can follow tutorials for any "
"language/engine and convert it into Godot."
msgstr ""

msgid "Saving"
msgstr ""

msgid ""
"Finally, Godot provides a single method to save ArrayMeshes using the :ref:"
"`ResourceSaver <class_resourcesaver>` class. This is useful when you want to "
"generate a mesh and then use it later without having to re-generate."
msgstr ""
