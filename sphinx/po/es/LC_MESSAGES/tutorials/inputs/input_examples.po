# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 15:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/inputs/input_examples.rst:4
msgid "Input examples"
msgstr "Ejemplo de Input"

#: ../../docs/tutorials/inputs/input_examples.rst:7
msgid "Introduction"
msgstr "Introducción"

#: ../../docs/tutorials/inputs/input_examples.rst:9
msgid ""
"In this tutorial, you'll learn how to use Godot's :ref:`InputEvent "
"<class_InputEvent>` system to capture player input. There are many different "
"types of input your game may use - keyboard, gamepad, mouse, etc. - and many "
"different ways to turn those inputs into actions in your game. This document "
"will show you some of the most common scenarios, which you can use as "
"starting points for your own projects."
msgstr ""
"En este tutorial, aprenderás a utilizar el sistema :ref:`InputEvent "
"<class_InputEvent>` de Godot para capturar la entrada del reproductor. Hay "
"muchos tipos diferentes de entrada que tu juego puede utilizar - teclado, "
"gamepad, ratón, etc. - y muchas maneras diferentes de convertir esas "
"entradas en acciones en tu juego. Este documento te mostrará algunos de los "
"escenarios más comunes, que puedes usar como puntos de partida para tus "
"propios proyectos."

#: ../../docs/tutorials/inputs/input_examples.rst:16
msgid ""
"For a detailed overview of how Godot's input event system works, see :ref:"
"`doc_inputevent`."
msgstr ""
"Para una visión detallada de cómo funciona el sistema de eventos de entrada "
"de Godot, ver :ref:`doc_inputevent`."

#: ../../docs/tutorials/inputs/input_examples.rst:20
msgid "Events versus polling"
msgstr "Eventos vs polling"

#: ../../docs/tutorials/inputs/input_examples.rst:22
msgid ""
"Sometimes you want your game to respond to a certain input event - pressing "
"the \"jump\" button, for example. For other situations, you might want "
"something to happen as long as a key is pressed, such as movement. In the "
"first case, you can use the ``_input()`` function, which will be called "
"whenever an input event occurs. In the second case, Godot provides the :ref:"
"`Input <class_Input>` singleton, which you can use to query the state of an "
"input."
msgstr ""
"A veces quieres que tu juego responda a un determinado evento de entrada - "
"pulsando el botón de \"salto\", por ejemplo. En otras situaciones, puede que "
"quieras que algo suceda mientras se presiona una tecla, como el movimiento. "
"En el primer caso, puedes usar la función ``input()``, que será llamada "
"siempre que ocurra un evento de entrada. En el segundo caso, Godot "
"proporciona el singleton :ref:`Input <class_Input>`, que puedes usar para "
"consultar el estado de una entrada."

#: ../../docs/tutorials/inputs/input_examples.rst:29
msgid "Examples:"
msgstr "Ejemplos:"

#: ../../docs/tutorials/inputs/input_examples.rst:63
msgid ""
"This gives you the flexibility to mix-and-match the type of input processing "
"you do."
msgstr ""
"Esto le da la flexibilidad de mezclar y combinar el tipo de procesamiento de "
"entrada que hace."

#: ../../docs/tutorials/inputs/input_examples.rst:66
msgid ""
"For the remainder of this tutorial, we'll focus on capturing individual "
"events in ``_input()``."
msgstr ""
"Para el resto de este tutorial, nos centraremos en la captura de eventos "
"individuales en ``input()``."

#: ../../docs/tutorials/inputs/input_examples.rst:70
msgid "Input events"
msgstr "Eventos de entrada"

#: ../../docs/tutorials/inputs/input_examples.rst:72
msgid ""
"Input events are objects that inherit from :ref:`InputEvent "
"<class_InputEvent>`. Depending on the event type, the object will contain "
"specific properties related to that event. To see what events actually look "
"like, add a Node and attach the following script:"
msgstr ""
"Los eventos de entrada son objetos que heredan de :ref:`InputEvent "
"<class_InputEvent>`. Dependiendo del tipo de evento, el objeto contendrá "
"propiedades específicas relacionadas con ese evento. Para ver cómo son "
"realmente los eventos, añade un Nodo y adjunta el siguiente script:"

#: ../../docs/tutorials/inputs/input_examples.rst:99
msgid ""
"As you press keys, move the mouse, and perform other inputs, you'll see each "
"event scroll by in the output window. Here's an example of the output:"
msgstr ""
"A medida que presionas las teclas, mueves el ratón y realizas otras "
"entradas, verás cómo cada evento se desplaza por la ventana de salida. Aquí "
"hay un ejemplo de la salida:"

#: ../../docs/tutorials/inputs/input_examples.rst:113
msgid ""
"As you can see, the results are very different for the different types of "
"input. Key events are even printed as their key symbols. For example, let's "
"consider :ref:`InputEventMouseButton <class_InputEventMouseButton>`. It "
"inherits from the following classes:"
msgstr ""
"Como puedes ver, los resultados son muy diferentes para los diferentes tipos "
"de entrada. Los eventos clave se imprimen incluso como sus símbolos clave. "
"Por ejemplo, consideremos :ref:`InputEventMouseButton "
"<class_InputEventMouseButton>`. Hereda de las siguientes clases:"

#: ../../docs/tutorials/inputs/input_examples.rst:118
msgid ""
":ref:`InputEvent <class_InputEvent>` - the base class for all input events"
msgstr ""
":ref:`InputEvent <class_InputEvent>` - La clase base para todos los eventos "
"de entrada"

#: ../../docs/tutorials/inputs/input_examples.rst:119
msgid ""
":ref:`InputEventWithModifiers <class_InputEventWithModifiers>` - adds the "
"ability to check if modifiers are pressed, such as :kbd:`Shift` or :kbd:"
"`Alt`."
msgstr ""
":ref:`InputEventWithModifiers <class_InputEventWithModifiers>` - agrega la "
"habilidad de verificar si algunos modificadores fueron presionados, como :"
"kbd:`Shift` o :kbd:`Alt`."

#: ../../docs/tutorials/inputs/input_examples.rst:120
msgid ""
":ref:`InputEventMouse <class_InputEventMouse>` - adds mouse event "
"properties, such as ``position``"
msgstr ""
":ref:`InputEventMouse <class_InputEventMouse>` - agrega propiedades de "
"eventos de mouse, como ``position``"

#: ../../docs/tutorials/inputs/input_examples.rst:121
msgid ""
":ref:`InputEventMouseButton <class_InputEventMouseButton>` - contains the "
"index of the button that was pressed, whether it was a double-click, etc."
msgstr ""
":ref:`InputEventMouseButton <class_InputEventMouseButton>` - contiene el "
"índice del botón que fue presionado, si fue un doble clic, etc."

#: ../../docs/tutorials/inputs/input_examples.rst:123
msgid ""
"It's a good idea to keep the class reference open while you're working with "
"events so you can check the event type's available properties and methods."
msgstr ""
"Es una buena idea mantener la referencia de la clase abierta mientras "
"trabajas con los eventos para que puedas comprobar las propiedades y métodos "
"disponibles del tipo de evento."

#: ../../docs/tutorials/inputs/input_examples.rst:127
msgid ""
"You can encounter errors if you try to access a property on an input type "
"that doesn't contain it - calling ``position`` on ``InputEventKey`` for "
"example. To avoid this, make sure to test the event type first:"
msgstr ""
"Puedes encontrar errores si intentas acceder a una propiedad en un tipo de "
"entrada que no la contiene - llamando ``position`` en ``InputEventKey`` por "
"ejemplo. Para evitar esto, asegúrate de probar primero el tipo de evento:"

#: ../../docs/tutorials/inputs/input_examples.rst:149
msgid "InputMap"
msgstr "InputMap"

#: ../../docs/tutorials/inputs/input_examples.rst:151
msgid ""
"The :ref:`InputMap <class_InputMap>` is the most flexible way to handle a "
"variety of inputs. You use this by creating named input *actions*, to which "
"you can assign any number of input events, such as keypresses or mouse "
"clicks. A new Godot project includes a number of default actions already "
"defined. To see them, and to add your own, open Project -> Project Settings "
"and select the InputMap tab:"
msgstr ""
"El :ref:`InputMap <class_InputMap>` es la forma más flexible de manejar una "
"variedad de entradas. Se utiliza creando *acciones* de entrada con nombre, a "
"las que se puede asignar cualquier número de eventos de entrada, como "
"pulsaciones de teclas o clics de ratón. Un nuevo proyecto Godot incluye un "
"número de acciones predeterminadas ya definidas. Para verlas, y para añadir "
"las tuyas propias, abre Proyecto -> Configuración del proyecto y selecciona "
"la pestaña InputMap:"

#: ../../docs/tutorials/inputs/input_examples.rst:161
msgid "Capturing actions"
msgstr "Capturando acciones"

#: ../../docs/tutorials/inputs/input_examples.rst:163
msgid ""
"Once you've defined your actions, you can process them in your scripts using "
"``is_action_pressed()`` and ``is_action_released()`` by passing the name of "
"the action you're looking for:"
msgstr ""
"Una vez que hayas definido tus acciones, puedes procesarlas en tus scripts "
"usando ``is_action_pressed()`` y ``is_action_released()`` pasando el nombre "
"de la acción que estás buscando:"

#: ../../docs/tutorials/inputs/input_examples.rst:185
msgid "Keyboard events"
msgstr "Eventos de teclado"

#: ../../docs/tutorials/inputs/input_examples.rst:187
msgid ""
"Keyboard events are captured in :ref:`InputEventKey <class_InputEventKey>`. "
"While it's recommended to use input actions instead, there may be cases "
"where you want to specifically look at key events. For this example, let's "
"check for the :kbd:`T`:"
msgstr ""
"Los eventos de teclado son capturados en :ref:`InputEventKey "
"<clase_InputEventKey>`. Aunque se recomienda usar acciones de entrada en su "
"lugar, puede haber casos en los que quieras mirar específicamente los "
"eventos de teclado. Para este ejemplo, busquemos el :kbd:`T`:"

#: ../../docs/tutorials/inputs/input_examples.rst:213
#: ../../docs/tutorials/inputs/input_examples.rst:251
msgid ""
"See :ref:`@GlobalScope_KeyList <enum_@GlobalScope_KeyList>` for a list of "
"scancode constants."
msgstr ""
"Ver :ref:`@GlobalScope_KeyList <enum_@GlobalScope_KeyList>` para una lista "
"de constantes del código de escaneado."

#: ../../docs/tutorials/inputs/input_examples.rst:217
msgid "Keyboard modifiers"
msgstr "Modificadores de teclado"

#: ../../docs/tutorials/inputs/input_examples.rst:219
msgid ""
"Modifier properties are inherited from :ref:`InputEventWithModifiers "
"<class_InputEventWithModifiers>`. This  allows you to check for modifier "
"combinations using boolean properties. Let's imagine you want one thing to "
"happen when the :kbd:`T` is pressed, but something different when it's :kbd:"
"`Shift + T`:"
msgstr ""
"Las propiedades de los modificadores se heredan de :ref:"
"`InputEventWithModifiers <class_InputEventWithModifiers>`. Esto permite "
"comprobar las combinaciones de modificadores usando propiedades booleanas. "
"Imaginemos que quieres que ocurra una cosa cuando se presiona :kbd:`T`, pero "
"algo diferente cuando es :kbd:`Shift + T`:"

#: ../../docs/tutorials/inputs/input_examples.rst:255
msgid "Mouse events"
msgstr "Eventos del ratón"

#: ../../docs/tutorials/inputs/input_examples.rst:257
msgid ""
"Mouse events stem from the :ref:`InputEventMouse <class_InputEventMouse>` "
"class, and are separated into two types: :ref:`InputEventMouseButton "
"<class_InputEventMouseButton>` and :ref:`InputEventMouseMotion "
"<class_InputEventMouseMotion>`. Note that this means that all mouse events "
"will contain a ``position`` property."
msgstr ""
"Los eventos del ratón se derivan de la clase :ref:`InputEventMouse "
"<clase_InputEventMouse>`, y se separan en dos tipos: :ref:"
"`InputEventMouseButton <clase_InputEventMouseButton>` y :ref:"
"`InputEventMouseMotion <clase_InputEventMouseMotion>`. Ten en cuenta que "
"esto significa que todos los eventos del ratón contendrán una propiedad de "
"``position``."

#: ../../docs/tutorials/inputs/input_examples.rst:263
msgid "Mouse buttons"
msgstr "Botones de mouse"

#: ../../docs/tutorials/inputs/input_examples.rst:265
msgid ""
"Capturing mouse buttons is very similar to handling key events. :ref:"
"`@GlobalScope_ButtonList <enum_@GlobalScope_ButtonList>` contains a list of "
"``BUTTON_*`` constants for each possible button, which will be reported in "
"the event's ``button_index`` property. Note that the scrollwheel also counts "
"as a button - two buttons, to be precise, with both ``BUTTON_WHEEL_UP`` and "
"``BUTTON_WHEEL_DOWN`` being separate events."
msgstr ""
"Capturar los botones del ratón es muy similar al manejo de eventos clave. :"
"ref:`@GlobalScope_ButtonList <enum_@GlobalScope_ButtonList>` contiene una "
"lista de constantes ``BUTTON_*`` para cada posible botón, que se informará "
"en la propiedad ``button_index`` del evento. Ten en cuenta que la rueda de "
"desplazamiento también cuenta como un botón - dos botones, para ser "
"precisos, con ambos ``BUTTON_WHEEL_UP`` y ``BUTTON_WHEEL_DOWN`` siendo "
"eventos separados."

#: ../../docs/tutorials/inputs/input_examples.rst:300
msgid "Mouse motion"
msgstr "Movimiento del mouse"

#: ../../docs/tutorials/inputs/input_examples.rst:302
msgid ""
":ref:`InputEventMouseMotion <class_InputEventMouseMotion>` events occur "
"whenever the mouse moves. You can find the move's distance with the "
"``relative`` property."
msgstr ""
":ref:`InputEventMouseMotion <clase_InputEventMouseMotion>` los eventos "
"ocurren cada vez que el ratón se mueve. Puedes encontrar la distancia del "
"movimiento con la propiedad ``relative``."

#: ../../docs/tutorials/inputs/input_examples.rst:306
msgid ""
"Here's an example using mouse events to drag-and-drop a :ref:`Sprite "
"<class_Sprite>` node:"
msgstr ""
"Aquí hay un ejemplo usando eventos de ratón para arrastrar y soltar un nodo :"
"ref:`Sprite <class_Sprite>`:"

#: ../../docs/tutorials/inputs/input_examples.rst:379
msgid "Touch events"
msgstr "Eventos de toque"

#: ../../docs/tutorials/inputs/input_examples.rst:381
msgid ""
"If you are using a touchscreen device, you can generate touch events. :ref:"
"`InputEventScreenTouch <class_InputEventScreenTouch>` is equivalent to a "
"mouse click event, and :ref:`InputEventScreenDrag "
"<class_InputEventScreenDrag>` works much the same as mouse motion."
msgstr ""
"Si usas un dispositivo de pantalla táctil, puedes generar eventos táctiles. :"
"ref:`InputEventScreenTouch <class_InputEventScreenTouch>` equivale a un "
"evento de clic de ratón, y :ref:`InputEventScreenDrag "
"<class_InputEventScreenDrag>` funciona de manera muy similar al movimiento "
"del ratón."

#: ../../docs/tutorials/inputs/input_examples.rst:386
msgid ""
"To test your touch events on a non-touchscreen device, open Project Settings "
"and go to the \"Input Devices/Pointing\" section. Enable \"Emulate Touch "
"From Mouse\" and your project will interpret mouse clicks and motion as "
"touch events."
msgstr ""
"Para probar los eventos táctiles en un dispositivo sin pantalla táctil, abra "
"Configuración del proyecto y vaya a la sección \"Dispositivos de entrada/"
"punto\". Habilita \"Emular el toque del ratón\" y tu proyecto interpretará "
"los clics y el movimiento del ratón como eventos táctiles."
