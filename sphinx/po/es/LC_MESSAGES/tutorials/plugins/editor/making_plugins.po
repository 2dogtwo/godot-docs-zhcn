# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-02 13:32+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:4
msgid "Making plugins"
msgstr "Creando plugins"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:7
msgid "About plugins"
msgstr "Acerca de los plugins"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:9
msgid ""
"A plugin is a great way to extend the editor with useful tools. It can be "
"made entirely with GDScript and standard scenes, without even reloading the "
"editor. Unlike modules, you don't need to create C++ code nor recompile the "
"engine. While this makes plugins less powerful, there are still many things "
"you can do with them. Note that a plugin is similar to any scene you can "
"already make, except it is created using a script to add editor "
"functionality."
msgstr ""
"Un plugin es una gran manera de ampliar el editor con herramientas útiles. "
"Se puede hacer completamente con GDScript y escenas estándar, sin siquiera "
"recargar el editor. A diferencia de los módulos, no es necesario crear "
"código C++ ni recompilar el motor. Aunque esto hace que los plugins sean "
"menos potentes, todavía hay muchas cosas que puedes hacer con ellos. Ten en "
"cuenta que un plugin es similar a cualquier escena que ya puedas hacer, "
"excepto que se crea usando un script para añadir funcionalidad de edición."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:16
msgid ""
"This tutorial will guide you through the creation of two simple plugins so "
"you can understand how they work and be able to develop your own. The first "
"will be a custom node that you can add to any scene in the project and the "
"other will be a custom dock added to the editor."
msgstr ""
"Este tutorial te guiará a través de la creación de dos sencillos plugins "
"para que puedas entender cómo funcionan y ser capaz de desarrollar los tuyos "
"propios. El primero será un nodo personalizado que puede añadir a cualquier "
"escena del proyecto y el otro será un panel personalizado añadido al editor."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:22
msgid "Creating a plugin"
msgstr "Creando un plugin"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:24
msgid ""
"Before starting, create a new empty project wherever you want. This will "
"serve as a base to develop and test the plugins."
msgstr ""
"Antes de empezar, crea un proyecto vacío nuevo donde quieras. Esto servirá "
"como base para desarrollar y probar los plugins."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:27
msgid ""
"The first thing you need for the editor to identify a new plugin is to "
"create two files: a ``plugin.cfg`` for configuration and a tool script with "
"the functionality. Plugins have a standard path like ``addons/plugin_name`` "
"inside the project folder. Godot provides a dialog for generating those "
"files and placing them where they need to be."
msgstr ""
"Lo primero que necesita el editor para identificar un nuevo plugin es crear "
"dos archivos: un ``plugin.cfg`` para la configuración y un script de "
"herramientas con la funcionalidad. Los plugins tienen una ruta estándar como "
"``addons/plugin_name`` dentro de la carpeta del proyecto. Godot proporciona "
"un diálogo para generar esos archivos y colocarlos donde deben estar."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:33
msgid ""
"In the main toolbar, click the ``Project`` dropdown. Then click ``Project "
"Settings...``. Go to the ``Plugins`` tab and then click on the ``Create`` "
"button in the top-right."
msgstr ""
"En la barra de herramientas principal, haz clic en el desplegable "
"``Project``. Luego haz clic en ``Project Settings...``. Ve a la pestaña "
"``Plugins`` y luego haz clic en el botón ``Create`` en la parte superior "
"derecha."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:37
msgid "You will see the dialog appear, like so:"
msgstr "Verás aparecer el diálogo, así:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:41
msgid ""
"The placeholder text in each field describes how it affects the plugin's "
"creation of the files and the config file's values."
msgstr ""
"El texto del marcador de posición en cada campo describe cómo afecta a la "
"creación de los archivos del plugin y a los valores del archivo de "
"configuración."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:44
msgid "To continue with the example, use the following values::"
msgstr "PAra continuar con el ejemplo, utiliza los siguientes valores:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:55
msgid "You should end up with a directory structure like this:"
msgstr "Feberías terminar con una estructura de directorios como esta:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:59
msgid ""
"``plugin.cfg`` is a simple INI file with metadata about your plugin. The "
"name and description help people understand what it does. Your name helps "
"you get properly credited for your work. The version number helps others "
"know if they have an outdated version; if you are unsure on how to come up "
"with the version number, check out `Semantic Versioning <https://semver.org/"
">`_. The main script file will instruct Godot what your plugin does in the "
"editor once it is active."
msgstr ""
"``plugin.cfg`` es un simple archivo INI con metadatos sobre tu plugin. El "
"nombre y la descripción ayudan a la gente a entender lo que hace. Tu nombre "
"ayuda a que te acrediten adecuadamente por tu trabajo. El número de versión "
"ayuda a los demás a saber si tienen una versión obsoleta; si no estás seguro "
"de cómo conseguir el número de versión, consulta ``Semantic Versioning "
"<https://semver.org/>`_. El archivo principal del script te indicará a Godot "
"lo que hace tu plugin en el editor una vez que esté activo."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:68
msgid "The script file"
msgstr "El archivo del script"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:70
msgid ""
"Upon creation of the plugin, the dialog will automatically open the "
"EditorPlugin script for you. The script has two requirements that you cannot "
"change: it must be a ``tool`` script, or else it will not load properly in "
"the editor, and it must inherit from :ref:`class_EditorPlugin`."
msgstr ""
"Una vez creado el plugin, el diálogo abrirá automáticamente el script "
"EditorPlugin para ti. El script tiene dos requisitos que no puedes cambiar: "
"debe ser un script de ``tool``, o de lo contrario no se cargará "
"correctamente en el editor, y debe heredar de :ref:`class_EditorPlugin`."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:76
msgid ""
"In addition to the EditorPlugin script, any other GDScript that your plugin "
"uses must *also* be a tool.  Any GDScript without ``tool`` imported into the "
"editor will act like an empty file!"
msgstr ""
"Además del script EditorPlugin, cualquier otro GDScript que use tu plugin "
"debe ser *también* una herramienta.  ¡Cualquier GDScript sin ``tool`` "
"importado en el editor actuará como un archivo vacío!"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:80
msgid ""
"It's important to deal with initialization and clean-up of resources. A good "
"practice is to use the virtual function :ref:`_enter_tree() "
"<class_Node_method__enter_tree>` to initialize your plugin and :ref:"
"`_exit_tree() <class_Node_method__exit_tree>` to clean it up. Thankfully, "
"the dialog generates these callbacks for you. Your script should look "
"something like this:"
msgstr ""
"Es importante ocuparse de la inicialización y la limpieza de los recursos. "
"Una buena práctica es usar la función virtual :ref:`_enter_tree() "
"<class_Node_method__enter_tree>` para inicializar tu plugin y :ref:"
"`_exit_tree() <class_Node_method__exit_tree>` para limpiarlo. "
"Afortunadamente, el diálogo genera estas llamadas para ti. Tu script debería "
"verse algo como esto:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:125
msgid "This is a good template to use when creating new plugins."
msgstr "Esta es una buena plantilla para usar cuando se crean nuevos plugins."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:128
msgid "A custom node"
msgstr "Un nodo personalizado"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:130
msgid ""
"Sometimes you want a certain behavior in many nodes, such as a custom scene "
"or control that can be reused. Instancing is helpful in a lot of cases, but "
"sometimes it can be cumbersome, especially if you're using it in many "
"projects. A good solution to this is to make a plugin that adds a node with "
"a custom behavior."
msgstr ""
"A veces queremos un cierto comportamiento en muchos nodos, como una escena "
"personalizada o o un control que pueda ser reutilizado. Instanciarlo es útil "
"en muchos casos, pero a veces puede ser incómodo, especialmente si lo está "
"usando en varios proyectos . Una buena solución es crear un plugin que "
"agregue un nodo con un comportamiento personalizado."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:138
msgid ""
"Nodes added via an EditorPlugin are \"CustomType\" nodes. While they work "
"with any scripting language, they have fewer features than :ref:`the Script "
"Class system <doc_scripting_continued_class_name>`. If you are writing "
"GDScript or NativeScript, we recommend using Script Classes instead."
msgstr ""
"Los nodos agregados vía un editor de pulgins son del tipo personalizado "
"(custom type). Cuando estos trabajan con algún lenguaje de scripting, tienen "
"menos caracteristicas que :ref:`the Script Class system "
"<doc_scripting_continued_class_name>` . Si usted está escribiendo Gdscript o "
"NativeScript, recomendamos usar Script Classes en su lugar."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:143
msgid ""
"To create a new node type, you can use the function :ref:`add_custom_type() "
"<class_EditorPlugin_method_add_custom_type>` from the :ref:"
"`class_EditorPlugin` class. This function can add new types to the editor "
"(nodes or resources). However, before you can create the type, you need a "
"script that will act as the logic for the type. While that script doesn't "
"have to use the ``tool`` keyword, it can be added so the script runs in the "
"editor."
msgstr ""
"Para crear un nuevo tipo de nodo, puede usar la función :ref:"
"`add_custom_type() <class_EditorPlugin_method_add_custom_type>` de la clase :"
"ref:`class_EditorPlugin`. Esta función puede agregar nuevos tipos al editor "
"(nodos o recursos). Sin embargo, antes de que pueda crear el tipo, necesita "
"un script que actuará como lógica para el tipo. Si bien ese script no tiene "
"que usar la palabra clave ``herramienta``, se puede agregar para que el "
"script se ejecute en el editor."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:150
msgid ""
"For this tutorial, we'll create a simple button that prints a message when "
"clicked. For that, we'll need a simple script that extends from :ref:"
"`class_Button`. It could also extend :ref:`class_BaseButton` if you prefer:"
msgstr ""
"Para este tutorial, crearemos un botón simple que imprime un mensaje cuando "
"se hace clic en él. Para eso, necesitaremos un script simple que se extienda "
"desde :ref:`class_Button`. También podría extender :ref:`class_BaseButton` "
"si lo prefiere:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:188
msgid ""
"That's it for our basic button. You can save this as ``my_button.gd`` inside "
"the plugin folder. You'll also need a 16×16 icon to show in the scene tree. "
"If you don't have one, you can grab the default one from the engine and save "
"it in your `addons/my_custom_node` folder as `icon.png`, or use the default "
"Godot logo (`preload(\"res://icon.png\")`). You can also use SVG icons if "
"desired."
msgstr ""
"Eso es todo para nuestro botón básico. Puede guardar esto como ``my_button."
"gd`` dentro de la carpeta del complemento. También necesitará un icono de 16 "
"× 16 para mostrar en el árbol de escenas. Si no tiene uno, puede tomar el "
"predeterminado del motor y guardarlo en su carpeta `addons / my_custom_node` "
"como` icon.png`, o usar el logo de Godot predeterminado (`preload(\"res://"
"icon.png\")`). También puede utilizar iconos SVG si lo desea."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:196
msgid ""
"Now, we need to add it as a custom type so it shows on the **Create New "
"Node** dialog. For that, change the ``custom_node.gd`` script to the "
"following:"
msgstr ""
"Ahora, debemos agregarlo como un tipo personalizado para que se muestre en "
"el cuadro de diálogo **Crear nuevo nodo**. Para eso, cambie el script "
"``custom_node.gd`` a lo siguiente:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:244
msgid ""
"With that done, the plugin should already be available in the plugin list in "
"the **Project Settings**, so activate it as explained in `Checking the "
"results`_."
msgstr ""
"Una vez hecho esto, el complemento ya debería estar disponible en la lista "
"de complementos en **Configuración del proyecto**, así que actívelo como se "
"explica en `Verificación de los resultados`_."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:247
msgid "Then try it out by adding your new node:"
msgstr "Luego pruébalo y agregando tu nuevo nodo:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:251
msgid ""
"When you add the node, you can see that it already has the script you "
"created attached to it. Set a text to the button, save and run the scene. "
"When you click the button, you can see some text in the console:"
msgstr ""
"Cuando agrega el nodo, puede ver que ya tiene adjunto el script que creó. "
"Establezca un texto para el botón, guarde y ejecute la escena. Al hacer clic "
"en el botón, puede ver un texto en la consola:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:258
msgid "A custom dock"
msgstr "Un panel personalizado"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:260
msgid ""
"Sometimes, you need to extend the editor and add tools that are always "
"available. An easy way to do it is to add a new dock with a plugin. Docks "
"are just scenes based on Control, so they are created in a way similar to "
"usual GUI scenes."
msgstr ""
"Algunas veces necesitarás ampliar el editor y añadir herramientas que estén "
"siempre disponibles. Una forma fácil de hacerlo es añadir un nuevo panel con "
"un plugin. Los paneles son sólo escenas basadas en Control, estas son "
"creadas de una manera similar a las escenas GUI comunes."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:264
msgid ""
"Creating a custom dock is done just like a custom node. Create a new "
"``plugin.cfg`` file in the ``addons/my_custom_dock`` folder, then add the "
"following content to it:"
msgstr ""
"La creación de un muelle personalizado se realiza como un nodo "
"personalizado. Cree un nuevo archivo ``plugin.cfg`` en la carpeta``addons/"
"my_custom_dock``, luego agregue el siguiente contenido:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:289
msgid ""
"Then create the script ``custom_dock.gd`` in the same folder. Fill it with "
"the :ref:`template we've seen before <doc_making_plugins_template_code>` to "
"get a good start."
msgstr ""
"Luego cree el script ``custom_dock.gd`` en la misma carpeta. Rellénelo con "
"la plantilla :ref:`que hemos visto antes de "
"<doc_making_plugins_template_code>` para comenzar bien."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:293
msgid ""
"Since we're trying to add a new custom dock, we need to create the contents "
"of the dock. This is nothing more than a standard Godot scene: just create a "
"new scene in the editor then edit it."
msgstr ""
"Dado que estamos intentando añadir un nuevo panel personalizado, necesitamos "
"crear el contenido de dicho panel. Esto no es más que una escena estándar de "
"Godot. sólo crea una nueva escena y luego editarla."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:297
msgid ""
"For an editor dock, the root node **must** be a :ref:`Control "
"<class_Control>` or one of its child classes. For this tutorial, you can "
"create a single button. The name of the root node will also be the name that "
"appears on the dock tab, so be sure to give it a short and descriptive name. "
"Also, don't forget to add some text to your button."
msgstr ""
"Para un panel del editor, la raíz de la escena **debe ser** un :ref:`Control "
"<class_Control>` o una de sus clases derivadas. Para este tutorial, puedes "
"hacer un solo botón. El nombre del nodo raíz también será el nombre que "
"aparezca en la pestaña del panel, así que asegúrate de poner uno descriptivo "
"pero corto. No olvides añadir un texto a tu botón."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:305
msgid ""
"Save this scene as ``my_dock.tscn``. Now, we need to grab the scene we "
"created then add it as a dock in the editor. For this, you can rely on the "
"function :ref:`add_control_to_dock() "
"<class_EditorPlugin_method_add_control_to_dock>` from the :ref:`EditorPlugin "
"<class_EditorPlugin>` class."
msgstr ""
"Guarda la escena como ``my_dock.tscn``. Ahora necesitas seleccionar la "
"escena que creaste y añadirla como un panel en el editor. Para ello puedes "
"usar la función :ref:`add_control_to_dock() "
"<class_EditorPlugin_method_add_control_to_dock>` de la clase :ref:"
"`EditorPlugin <class_EditorPlugin>`."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:310
msgid ""
"You need to select a dock position and define the control to add (which is "
"the scene you just created). Don't forget to **remove the dock** when the "
"plugin is deactivated. The script could look like this:"
msgstr ""
"Necesitas seleccionar una posición de panel para añadirlo y tener un Control "
"para añadir (que es la escena que acabas de crear). No olvides **quitar el "
"panel** cuando el plugin es desactivado. El código debería verse así:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:371
msgid ""
"Note that, while the dock will initially appear at its specified position, "
"the user can freely change its position and save the resulting layout."
msgstr ""
"Tenga en cuenta que, si bien el muelle aparecerá inicialmente en su posición "
"especificada, el usuario puede cambiar libremente su posición y guardar el "
"diseño resultante."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:375
msgid "Checking the results"
msgstr "Comprobando los resultados"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:377
msgid ""
"It's now time to check the results of your work. Open the **Project "
"Settings** and click on the **Plugins** tab. Your plugin should be the only "
"one on the list. If it is not showing, click on the **Update** button in the "
"top-right corner."
msgstr ""
"Ha llegado el momento de comprobar los resultados de su trabajo. Abra ** "
"Configuración del proyecto ** y haga clic en la pestaña ** Complementos **. "
"Su complemento debería ser el único en la lista. Si no se muestra, haga clic "
"en el botón ** Actualizar ** en la esquina superior derecha."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:384
msgid ""
"You can see the plugin is inactive on the **Status** column; click on the "
"status to select **Active**. The dock should become visible before you even "
"close the settings window. You should now have a custom dock:"
msgstr ""
"En la columna *Estado*, puedes ver que el plugin está inactivo, debes hacer "
"clic en el estado para seleccionar *Activo*. El panel debe ser visible "
"inmediatamente, incluso antes de cerrar la ventana de configuración. Ahora "
"deberías tener un panel personalizado:"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:391
msgid "Going beyond"
msgstr "Ir más allá"

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:393
msgid ""
"Now that you've learned how to make basic plugins, you can extend the editor "
"in several ways. Lots of functionality can be added to the editor with "
"GDScript; it is a powerful way to create specialized editors without having "
"to delve into C++ modules."
msgstr ""
"Ahora que ha aprendido a como crear complementos básicos, puede ampliar el "
"editor de varias formas. Se pueden agregar muchas funciones al editor con "
"GDScript; es una forma poderosa de crear editores especializados sin tener "
"que profundizar en los módulos de C ++."

#: ../../docs/tutorials/plugins/editor/making_plugins.rst:398
msgid ""
"You can make your own plugins to help yourself and share them in the `Asset "
"Library <https://godotengine.org/asset-library/>`_ so that people can "
"benefit from your work."
msgstr ""
"Puede crear sus propios complementos para ayudarse a sí mismo y compartirlos "
"en la `Biblioteca de activos <https://godotengine.org/asset-library/>` _ "
"para que las personas puedan beneficiarse de su trabajo."
