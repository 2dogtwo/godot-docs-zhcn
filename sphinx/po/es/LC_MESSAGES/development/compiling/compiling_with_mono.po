# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-15 18:11+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_with_mono.rst:4
msgid "Compiling with Mono"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:9
msgid "Requirements"
msgstr "Requerimientos"

#: ../../docs/development/compiling/compiling_with_mono.rst:11
msgid "Mono 5.12.0 or greater"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:12
msgid "MSBuild"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:13
msgid "NuGet"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:14
msgid "pkg-config"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:16
msgid ""
"You may need to import necessary certificates for NuGet to perform HTTPS "
"requests. You can do this with the following command (on Windows, you can "
"run it from the Mono command line prompt):"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:24
msgid "Environment variables"
msgstr "Variables de entorno"

#: ../../docs/development/compiling/compiling_with_mono.rst:26
msgid ""
"By default, SCons will try to find Mono in the Windows Registry on Windows "
"or via ``pkg-config`` on other platforms. You can specify a different "
"installation directory by passing the ``mono_prefix`` command-line option to "
"SCons; e.g.: ``scons [...] mono_prefix=%ProgramFiles%/Mono``."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:30
msgid ""
"This is the directory that contains the subdirectories ``include`` and "
"``lib``."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:33
msgid "Enable the Mono module"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:35
msgid ""
"By default, the mono module is disabled for builds. To enable it you can "
"pass the option ``module_mono_enabled=yes`` to your SCons command."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:39
msgid "Generate the glue"
msgstr "Generar el pegamento"

#: ../../docs/development/compiling/compiling_with_mono.rst:41
msgid ""
"The glue sources are the wrapper functions that will be called by managed "
"methods. These source files must be generated before building your final "
"binaries. In order to generate them, first, you must build a temporary Godot "
"binary with the options ``tools=yes`` and ``mono_glue=no``:"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:49
msgid ""
"After the build finishes, you need to run the compiled executable with the "
"parameter ``--generate-mono-glue`` followed by the path to an output "
"directory. This path must be ``modules/mono/glue`` in the Godot directory."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:57
msgid ""
"This command will tell Godot to generate the file ``modules/mono/glue/"
"mono_glue.gen.cpp`` and the C# solution for the Godot API at ``modules/mono/"
"glue/Managed/Generated``. Once these files are generated, you can build "
"Godot for all the desired targets without the need to repeat this process."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:61
msgid ""
"``<godot_binary>`` refers to the tools binary you compiled above with the "
"Mono module enabled. Its exact name will differ based on your system and "
"configuration, but should be of the form ``bin/godot.<platform>.tools.<bits>."
"mono``, e.g. ``bin/godot.x11.tools.64.mono`` or ``bin/godot.windows.tools.64."
"exe``. Be especially aware of the **.mono** suffix! If you compiled Godot "
"without Mono support previously, you might have similarly named binaries "
"without this suffix which can't be used to generate the Mono glue."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:68
msgid "Notes"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:69
msgid ""
"**Do not** build your final binaries with ``mono_glue=no``. This disables C# "
"scripting. This option must be used only for the temporary binary that will "
"generate the glue. Godot will print a warning at startup if it was built "
"without the glue sources."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:72
msgid ""
"The glue sources must be regenerated every time the ClassDB registered API "
"changes. That is, for example, when a new method is registered to the "
"scripting API or one of the parameter of such a method changes. Godot will "
"print an error at startup if there is an API mismatch between ClassDB and "
"the glue sources."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:78
msgid "Rebuild with Mono glue"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:80
msgid ""
"Once you have generated the Mono glue, you can build the final binary with "
"``mono_glue=yes``. This is the default value for ``mono_glue`` so you can "
"also omit it. You can build the Mono-enabled editor:"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:87
msgid "And Mono-enabled export templates:"
msgstr "Y plantillas de exportación con soporte para Mono:"

#: ../../docs/development/compiling/compiling_with_mono.rst:93
msgid ""
"If everything went well, apart from the normal output SCons should have "
"created the following files in the ``bin`` directory:"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:95
msgid ""
"If you're not static linking the Mono runtime, the build script will place "
"the Mono runtime shared library (``monosgen-2.0``) next next to the Godot "
"binary in the output directory. Make sure to include this library when "
"distributing Godot. When targeting Android, no extra steps are required as "
"this library is automatically copied to ``#platform/android/java/libs`` and "
"gradle takes care of the rest."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:98
msgid ""
"Unlike \"classical\" Godot builds, when building with the mono module "
"enabled and depending of the target platform a data directory may be created "
"both for the editor and for export templates. This directory is important "
"for proper functioning and must be distributed together with Godot. More "
"details about this directory in :ref:`Data "
"directory<compiling_with_mono_data_directory>`."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:104
msgid "Examples"
msgstr "Ejemplos"

#: ../../docs/development/compiling/compiling_with_mono.rst:107
msgid "Example (Windows)"
msgstr "Ejemplo (Windows)"

#: ../../docs/development/compiling/compiling_with_mono.rst:123
msgid "Example (X11)"
msgstr "Ejemplo (X11)"

#: ../../docs/development/compiling/compiling_with_mono.rst:141
msgid "Data directory"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:143
msgid ""
"The data directory is a dependency for Godot binaries built with the mono "
"module enabled. It contains files that are important for the correct "
"functioning of Godot. It must be distributed together with the Godot "
"executable. This information does not apply for ``Android`` as there is no "
"data directory for that platform."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:148
msgid "Export templates"
msgstr "Plantillas de exportación"

#: ../../docs/development/compiling/compiling_with_mono.rst:150
msgid ""
"The name of the data directory for a export template differs based on the "
"configuration it was built with. The format is ``data.mono.<platform>.<bits>."
"<target>``, e.g. ``data.mono.x11.32.debug`` or ``data.mono.windows.64."
"release``."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:153
msgid ""
"This directory must be placed with its original name next to the Godot "
"export templates. When exporting a project, Godot will also copy this "
"directory with the game executable but the name will be changed to "
"``data_<APPNAME>``, where ``<APPNAME>`` is the application name as specified "
"in the project setting ``application/config/name``."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:158
msgid ""
"In the case of macOS, where the export template is compressed as a zip file, "
"the contents of the data directory can be placed in the following locations "
"inside the zip:"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:162
#: ../../docs/development/compiling/compiling_with_mono.rst:183
msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/lib``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:162
msgid "``/osx_template.app/Contents/Frameworks/GodotSharp/Mono/lib``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:164
#: ../../docs/development/compiling/compiling_with_mono.rst:185
msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/etc``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:164
msgid "``/osx_template.app/Contents/Resources/GodotSharp/Mono/etc``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:168
msgid "Editor"
msgstr "Editor"

#: ../../docs/development/compiling/compiling_with_mono.rst:170
msgid ""
"The name of the data directory for the Godot editor will always be "
"``GodotSharp``. The contents of this directory are the following:"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:173
msgid "``Api``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:174
msgid "``Mono`` (optional)"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:175
#, fuzzy
msgid "``Tools``"
msgstr "Herramientas"

#: ../../docs/development/compiling/compiling_with_mono.rst:177
msgid ""
"The ``Api`` subdirectory contains the Godot API assemblies. In the case of "
"macOS, if the Godot editor is distributed as a bundle, the contents of the "
"data directory may be placed in the following locations:"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:181
msgid "``bin/data.mono.<platform>.<bits>.<target>/Api``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:181
msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Api``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:183
msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Mono/lib``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:185
msgid "``<bundle_name>.app/Contents/Resources/GodotSharp/Mono/etc``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:187
msgid "``bin/data.mono.<platform>.<bits>.<target>/Tools``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:187
msgid "``<bundle_name>.app/Contents/Frameworks/GodotSharp/Tools``"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:190
msgid ""
"The ``Mono`` subdirectory is optional but will be needed when distributing "
"the editor, as some issues might arise when the installed Mono version in "
"the user's system is not be the same as the one the Godot editor was built "
"with. Pass ``copy_mono_root=yes`` to SCons when building the editor in order "
"to create this folder and its contents."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:194
msgid ""
"The ``Tools`` subdirectory contains tools required by the editor, like the "
"``GodotTools`` assemblies and its dependencies."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:197
#, fuzzy
msgid "Targeting Android"
msgstr "Exportación para Android"

#: ../../docs/development/compiling/compiling_with_mono.rst:199
msgid ""
"Compiling the Android export templates with Mono is a bit simpler than it is "
"for the desktop platforms, as there are no additional steps required after "
"building. There is no need to worry about any dependency like a data "
"directory or the runtime shared library (when dynamically linking) as those "
"are automatically added to the gradle project."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:204
msgid ""
"Before building Godot you do need to cross compile the Mono runtime for the "
"target architectures. We recommend using these `build scripts <https://"
"github.com/godotengine/godot-mono-builds>`_. They simplify this process but "
"also include some patches needed for proper functioning with Godot. Read the "
"README for instructions on how to use the scripts."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:209
msgid ""
"Once you've built Mono, you can proceed to build Godot with the instructions "
"described in this page and the :ref:`Compiling for "
"Android<doc_compiling_for_android>` page. Make sure to let SCons know about "
"the location of the Mono runtime you just built: ``scons [...] mono_prefix="
"$HOME/mono-installs/android-armeabi-v7a-release`` (This path may be "
"different on your system depending on the options you used to build Mono)."
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:216
msgid "Command-line options"
msgstr "Opciones de la línea de comandos"

#: ../../docs/development/compiling/compiling_with_mono.rst:218
msgid ""
"The following is the list of command-line options available when building "
"with the mono module:"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:220
msgid ""
"**module_mono_enabled**: Build Godot with the mono module enabled ( yes | "
"**no** )"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:222
msgid ""
"**mono_glue**: Whether to include the glue source files in the build and "
"define `MONO_GLUE_DISABLED` as a preprocessor macro ( **yes** | no )"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:224
msgid ""
"**mono_prefix**: Path to the Mono installation directory for the target "
"platform and architecture"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:226
msgid ""
"**xbuild_fallback**: Whether to fallback to xbuild if MSBuild is not "
"available ( yes | **no** )"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:228
msgid ""
"**mono_static**: Whether to link the mono runtime statically ( yes | **no** )"
msgstr ""

#: ../../docs/development/compiling/compiling_with_mono.rst:230
msgid ""
"**copy_mono_root**: Whether to copy the Mono framework assemblies and "
"configuration files required by the Godot editor ( yes | **no** )"
msgstr ""
