# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-08 12:36+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:4
msgid "Instancing (continued)"
msgstr "Vytváření instancí (pokračování)"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:7
msgid "Recap"
msgstr "Rekapitulace"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:9
msgid "Instancing has many handy uses. At a glance, with instancing you have:"
msgstr ""
"Vytváření instancí mám mnoho praktických využití. Stručně řečeno tvorba "
"instancí vám poskytuje:"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:11
msgid "The ability to subdivide scenes and make them easier to manage."
msgstr "Možnost rozdělit scény a zjednodušit tak práci s nimi."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:12
msgid "A tool to manage and edit multiple node instances at once."
msgstr "Nástroj pro správu a úpravy více instancí jednoho uzlu současně."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:13
msgid ""
"A way to organize and embed complex game flows or even UIs (in Godot, UI "
"Elements are nodes, too)."
msgstr ""
"Způsob, jak organizovat a vkládat složité herní mechanizmy nebo dokonce "
"uživatelská rozhraní UI (v Godotu jsou prvky UI také uzly)."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:17
msgid "Design language"
msgstr "Jazyk pro návrh hry"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:19
msgid ""
"But the greatest strength that comes with instancing scenes is that it works "
"as an excellent design language. This distinguishes Godot from all the other "
"engines out there. Godot was designed from the ground up around this concept."
msgstr ""
"Ale největší přínos tvorby instancí scén je to, že vše zároveň funguje jako "
"vynikající designový jazyk. Toto odlišuje Godota od všech ostatních enginů "
"tam venku za zdí. Godot byl navržen od prvopočátku kolem tohoto konceptu."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:24
msgid ""
"When making games with Godot, the recommended approach is to dismiss most "
"common design patterns, such as MVC or Entity-Relationship diagrams, and "
"instead think about your scenes in a more natural way. Start by imagining "
"the visible elements in your game, the ones that can be named not just by a "
"programmer, but by anyone."
msgstr ""
"Doporučený postup při vytváření hry v Godotu je zapomenout na většinu "
"běžných návrhových vzorů, jako jsou diagramy MVC nebo Entity-Relationship, a "
"místo toho přemýšlet o scénách přirozenějším způsobem. Začněte tím, že si "
"představíte viditelné prvky vaší hry, tedy těmi, které může pojmenovat "
"nejenom programátor, ale i libovolný hráč vašeho díla."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:30
msgid "For example, here's how a simple shooter game could be imagined:"
msgstr "Například takhle by se dala představit jednoduchá střílečka:"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:34
msgid ""
"You can come up with a diagram like this for almost any kind of game. Write "
"down the parts of the game that you can visualize, and then add arrows to "
"represent ownership of one component by another."
msgstr ""
"S takovým diagramem můžete přijít pro téměř jakoukoli hru. Zakreslete si ty "
"části hry, které si můžete vizualizovat, a poté přidejte šipky znázorňující "
"vlastnictví jedné komponenty druhou."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:38
msgid ""
"Once you have a diagram like this, the recommended process for making a game "
"is to create a scene for each element listed in the diagram. You'll use "
"instancing (either by code or directly in the editor) for the ownership "
"relationships."
msgstr ""
"Jakmile budete mít schéma, doporučeným postupem pro tvorbu hry je vytvoření "
"scény pro každý prvek uvedený v diagramu. Pro vlastnické vztahy použijete "
"vytváření instancí (buď kódem ve skriptu nebo přímo v editoru)."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:42
msgid ""
"A lot of time spent in programming games (or software in general) is on "
"designing an architecture and fitting game components to that architecture. "
"Designing based on scenes replaces that approach and makes development much "
"faster and more straightforward, allowing you to concentrate on the game "
"logic itself. Because most game components map directly to a scene, using a "
"design based on scene instantiation means little other architectural code is "
"needed."
msgstr ""
"Hodně času stráveného při programováním her (nebo softwaru obecně) je o "
"navrhování architektury a přizpůsobení herních komponent této architektuře. "
"Navrh založený na scénách nahrazuje tento přístup a dělá vývoj mnohem "
"rychlejším a přímočarějším, což vám umožňuje soustředit se na samotnou herní "
"logiku. Protože většina herních komponent je mapována přímo na scénu, "
"použití designu založeného na instancích scén znamená, že žádné další "
"rozšiřování architektury kódem není většinou potřeba."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:48
msgid ""
"Let's take a look at one more, somewhat more complex, example of an open-"
"world type game with lots of assets and nested elements:"
msgstr ""
"Podívejme se na další, poněkud složitější příklad hry typu open-world se "
"spoustou zdrojů a vnořených prvků:"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:53
msgid ""
"Take a look at the room element. Let's say we started there. We could make a "
"couple of different room scenes, with different arrangements of furniture "
"(also scenes) in them. Later, we could make a house scene, connecting rooms "
"to make up its interior."
msgstr ""
"Podívejte se na prvek Místnost. Řekněme, že jsme tam začali. Mohli bychom "
"vytvořit několik různých scén Místností s různým uspořádáním Nábytku (také "
"scén). Později bychom mohli vytvořit scénu Dům, propojit Místnosti a "
"vytvořit tak její interiér."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:58
msgid ""
"Then, we could make a citadel scene, which is made out of many instanced "
"houses. Then, we could start working on the world map terrain, adding the "
"citadel onto it."
msgstr ""
"Pak bychom mohli vytvořit scénu Citadely, která je vyrobena z mnoha instancí "
"Domů. Potom bychom mohli začít pracovat na Terénu mapy světa a přidat do něj "
"Citadelu."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:62
msgid ""
"Later, we could create scenes that represent guards (and other NPCs) and add "
"them to the citadel as well. As a result, they would be indirectly added to "
"the overall game world."
msgstr ""
"Později bychom mohli vytvořit scény, které představují Stráže (a další NPC) "
"a také je přidat do Citadely. V důsledku toho by byli nepřímo přidáni do "
"celého herního světa."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:66
msgid ""
"With Godot, it's easy to iterate on your game like this, as all you need to "
"do is create and instance more scenes. Furthermore, the editor UI is "
"designed to be user friendly for programmers and non-programmers alike. A "
"typical team development process can involve 2D or 3D artists, level "
"designers, game designers, and animators, all working with the editor "
"interface."
msgstr ""
"S Godotem je snadné takto postupně budovat vaši hru, protože vše, co musíte "
"udělat, je vytvořit další scény a následně jejich instance. Kromě toho je "
"uživatelské rozhraní editoru navrženo tak, aby bylo uživatelsky přívětivé "
"pro programátory i neprogramátory. Typický proces týmového vývoje může "
"vyžadovat 2D nebo 3D umělce, návrháře úrovní, herní návrháře a animátory, "
"všechny pracující s jedním editorem."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:73
msgid "Information overload!"
msgstr "Informační přetížení!"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:75
msgid ""
"This has been a lot of high level information dropped on you all at once. "
"However, the important part of this tutorial was to create an awareness of "
"how scenes and instancing are used in real projects."
msgstr ""
"Zavalili jsme vás spoustou obecných informací. Důležitou součástí tohoto "
"tutoriálu však bylo vytvořit povědomí o tom, jak jsou scény a jejich "
"instance používány ve skutečných projektech."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:79
msgid ""
"Everything discussed here will become second nature to you once you start "
"making games and putting these concepts into practice. For now, don't worry "
"about it too much, and go on to the next tutorial!"
msgstr ""
"Všechno to, o čem se zde diskutuje, se vám stane druhou přirozeností, "
"jakmile skutečně začnete dělat hry a tyto koncepty používat. Prozatím si z "
"toho nedělejte velkou hlavu a pokračujte dalším tutoriálem!"
