# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-02 13:32+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:4
msgid "Your first game"
msgstr "Vaše první hra"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:7
msgid "Overview"
msgstr "Přehled"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:9
msgid ""
"This tutorial will guide you through making your first Godot project. You "
"will learn how the Godot editor works, how to structure a project, and how "
"to build a 2D game."
msgstr ""
"Tento tutorialvás provede vytvořením vašeho prvního projektu v Godotu. "
"Dozvíte se, jak funguje editor Godotu, jak strukturovat projekt a jak "
"vytvořit 2D hru."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:13
msgid ""
"This project is an introduction to the Godot engine. It assumes that you "
"have some programming experience already. If you're new to programming "
"entirely, you should start here: :ref:`doc_scripting`."
msgstr ""
"Tento projekt je úvodem k enginu Godot. Předpokládá se, že už máte nějaké "
"zkušenosti s programováním. Pokud je pro vás programování \"španělská vesnice"
"\", měli byste začít zde: :ref:`doc_scripting`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:18
msgid ""
"The game is called \"Dodge the Creeps!\". Your character must move and avoid "
"the enemies for as long as possible. Here is a preview of the final result:"
msgstr ""
"Hra se jmenuje „Dodge the Creeps!“. Vaše postava se musí pohybovat a vyhýbat "
"se nepřátelům tak dlouho, jak je to možné. Zde je náhled konečného výsledku:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:24
msgid ""
"**Why 2D?** 3D games are much more complex than 2D ones. You should stick to "
"2D until you have a good understanding of the game development process and "
"how to use Godot."
msgstr ""
"**Proč 2D?** 3D hry jsou mnohem složitější než hry 2D. Měli byste se držet "
"2D, dokud nebudete dobře rozumět procesu vývoje hry a tomu jak používat "
"Godot."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:29
msgid "Project setup"
msgstr "Nastavení projektu"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:31
msgid ""
"Launch Godot and create a new project. Then, download :download:"
"`dodge_assets.zip <files/dodge_assets.zip>`. This contains the images and "
"sounds you'll be using to make the game. Unzip these files in your project "
"folder."
msgstr ""
"Spusťte Godota a vytvořte nový projekt. Pak stáhněte :download:`dodge_assets."
"zip <files / dodge_assets.zip>`. Obsahuje obrázky a zvuky, které budete "
"používat při tvorbě hry. Rozbalte tyto soubory ve složce projektu."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:36
msgid ""
"For this tutorial, we will assume you are familiar with the Godot editor. If "
"you haven't read :ref:`doc_scenes_and_nodes`, do so now for an explanation "
"of setting up a project and using the editor."
msgstr ""
"V tomto tutoriálu předpokládáme, že jste obeznámeni s editorem Godot. Pokud "
"jste nečetli :ref:`doc_scenes_and_nodes`, udělejte to nyní pro vysvětlení "
"nastavení projektu a použití editoru."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:40
msgid ""
"This game is designed for portrait mode, so we need to adjust the size of "
"the game window. Click on Project -> Project Settings -> Display -> Window "
"and set \"Width\" to ``480`` and \"Height\" to ``720``."
msgstr ""
"Tato hra je navržena pro režim na výšku, takže musíme upravit velikost okna "
"hry. Klikněte na Projekt -> Nastavení projektu -> Displej -> Okno a nastavte "
"\"Šířka\" na ``480`` a \"Výška\" na ``720``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:44
msgid ""
"Also in this section, under the \"Stretch\" options, set ``Mode`` to \"2d\" "
"and ``Aspect`` to \"keep\". This ensures that the game scales consistently "
"on different sized screens."
msgstr ""
"Dále zde nastavte v sekci \"Roztáhnout\" položku ``Režim`` na \"2d\" a "
"položku ``Aspekt`` na \"keep\". Tím je zajištěno, že hra nemění svoje "
"měřítko na obrazovkách různých velikostí."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:49
msgid "Organizing the project"
msgstr "Uspořádání projektu"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:51
msgid ""
"In this project, we will make 3 independent scenes: ``Player``, ``Mob``, and "
"``HUD``, which we will combine into the game's ``Main`` scene. In a larger "
"project, it might be useful to create folders to hold the various scenes and "
"their scripts, but for this relatively small game, you can save your scenes "
"and scripts in the project's root folder, identified by ``res://``.  You can "
"see your project folders in the FileSystem Dock in the lower left corner:"
msgstr ""
"V tomto projektu vytvoříme 3 nezávislé scény: ``Player``, ``Mob`` a ``HUD``, "
"které zkombinujeme do hlavní scény hry:``Main`` . Ve větším projektu může "
"být užitečné vytvořit složky, pro každkou scénu a její skript zvlášť, ale "
"pro tuto relativně malou hru můžete ukládat své scény a skripty do "
"kořenového adresáře projektu identifikovaného pomocí ``res: //``. Složky "
"projektu můžete vidět v doku Souborový systém v levém dolním rohu:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:62
msgid "Player scene"
msgstr "Scéna Player (Hráč)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:64
msgid ""
"The first scene will define the ``Player`` object. One of the benefits of "
"creating a separate Player scene is that we can test it separately, even "
"before we've created other parts of the game."
msgstr ""
"První scéna, kterou vytvoříme, definuje objekt ``Player``. Jednou z výhod "
"vytvoření samostatné hráčské scény je to, že ji můžeme testovat samostatně, "
"dokonce ještě předtím, než vytvoříme další části hry."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:69
msgid "Node structure"
msgstr "Struktura uzlu"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:71
msgid ""
"To begin, we need to choose a root node for the player object. As a general "
"rule, a scene's root node should reflect the object's desired functionality "
"- what the object *is*. Click the \"Other Node\" button and add an :ref:"
"`Area2D <class_Area2D>` node to the scene."
msgstr ""
"Nejprve musíme vybrat kořenový uzel pro objekt hráče. Obecně by kořen scény "
"měl odrážet požadovanou funkčnost objektu - to čím objekt *je*. Klikněte na "
"tlačítko \"Jiný uzel\" a do scény přidejte uzel :ref:`Area2D <class_Area2D>`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:78
msgid ""
"Godot will display a warning icon next to the node in the scene tree. You "
"can ignore it for now. We will address it later."
msgstr ""
"Godot zobrazí varovnou ikonu vedle uzlu ve stromu scény. Prozatím to můžete "
"ignorovat. Vyřešíme to později."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:81
msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change the node's name to ``Player`` by double-clicking on it. Now that "
"we've set the scene's root node, we can add additional nodes to give it more "
"functionality."
msgstr ""
"Pomocí ``Area2D`` můžeme detekovat objekty, které se překrývají nebo naráží "
"do hráče. Změňte název uzlu na ``Player`` poklepáním na něj. Nyní, když jsme "
"nastavili kořen scény hráče, můžeme do něho přidat další podřízené uzly, "
"abychom mu rozšířili funkčnost a poskytli více vlastností."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:86
msgid ""
"Before we add any children to the ``Player`` node, we want to make sure we "
"don't accidentally move or resize them by clicking on them. Select the node "
"and click the icon to the right of the lock; its tooltip says \"Makes sure "
"the object's children are not selectable.\""
msgstr ""
"Než přidáme děti do uzlu ''Player'', chceme si být jisti, že je omylem "
"nepřesuneme nebo nezměníme jejich velikost. Vyberte uzel a klepněte na ikonu "
"vpravo od zámku; jeho popis říká: \"Zajišťuje, že podřízené objektu nelze "
"vybrat.\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:93
msgid ""
"Save the scene. Click Scene -> Save, or press :kbd:`Ctrl + S` on Windows/"
"Linux or :kbd:`Cmd + S` on macOS."
msgstr ""
"Uložte scénu. Klikněte na Scéna -> Uložit nebo stiskněte :kbd:`Ctrl + S` v "
"systému Windows / Linux nebo :kbd:`Cmd + S` v systému MacOS."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:95
msgid "For this project, we will be following the Godot naming conventions."
msgstr ""
"V tomto projektu budeme dodržovat Godot pravidla pro názvy identifikátorů."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:97
msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: Třídy (uzly) používají PascalCase, proměnné a funkce používají "
"snake_case a konstanty používají ALL_CAPS (viz :ref:"
"`doc_gdscript_styleguide`)."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:101
msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`).  Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C #**: Třídy, exportované proměnné a metody používají PascalCase, soukromá "
"pole používají _camelCase, lokální proměnné a parametry používají camelCase "
"(viz :ref:`doc_c_sharp_styleguide`). Při připojování signálů buďte opatrní, "
"abyste přesně zadali názvy metod."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:108
msgid "Sprite animation"
msgstr "Animace spritu"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:110
msgid ""
"Click on the ``Player`` node and add an :ref:`AnimatedSprite "
"<class_AnimatedSprite>` node as a child. The ``AnimatedSprite`` will handle "
"the appearance and animations for our player. Notice that there is a warning "
"symbol next to the node. An ``AnimatedSprite`` requires a :ref:`SpriteFrames "
"<class_SpriteFrames>` resource, which is a list of the animations it can "
"display. To create one, find the ``Frames`` property in the Inspector and "
"click \"[empty]\" -> \"New SpriteFrames\". Click again to open the "
"\"SpriteFrames\" panel:"
msgstr ""
"Klikněte na uzel ``Player`` a jako podřízený uzel přidejte :ref:"
"`AnimatedSprite <class_AnimatedSprite>`. ``AnimatedSprite`` bude "
"zabezpečovat vzhled a animace našeho hráče. Všimněte si, že vedle uzlu je "
"varovný symbol. ``AnimatedSprite`` vyžaduje zdroj :ref:`SpriteFrames "
"<class_SpriteFrames>`, což je seznam animací, které je schopen zobrazit. "
"Chcete-li jej vytvořit, najděte v inspektoru vlastnost ``Frames`` a klikněte "
"na \"[empty]\" -> \"New SpriteFrames\". Opětovným kliknutím otevřete panel "
"„SpriteFrames“:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:121
msgid ""
"On the left is a list of animations. Click the \"default\" one and rename it "
"to \"walk\". Then click the \"New Animation\" button to create a second "
"animation named \"up\". Find the player images in the \"FileSystem\" tab - "
"they're in the ``art`` folder you unzipped earlier. Drag the two images for "
"each animation, named ``playerGrey_up[1/2]`` and ``playerGrey_walk[1/2]``, "
"into the \"Animation Frames\" side of the panel for the corresponding "
"animation:"
msgstr ""
"Vlevo je seznam animací. Klikněte na „výchozí“ a přejmenujte jej na \"walk"
"\". Poté klikněte na tlačítko „Nová animace“ a vytvořte druhou animaci s "
"názvem \"up\". Vyhledejte obrázky přehrávače na kartě \"Souborový systém\" - "
"jsou ve složce ``art`` kterou jste dříve rozbalili. Přetáhněte dva obrázky "
"pro každou animaci, pojmenované ``playerGrey_up [1/2]`` a ``playerGrey_walk "
"[1/2]``, na stranu \"Animation Frames\" na panelu pro příslušnou animaci:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:130
msgid ""
"The player images are a bit too large for the game window, so we need to "
"scale them down. Click on the ``AnimatedSprite`` node and set the ``Scale`` "
"property to ``(0.5, 0.5)``. You can find it in the Inspector under the "
"``Node2D`` heading."
msgstr ""
"Obrázky hráče jsou pro okno hry příliš velké, takže je musíme zmenšit. "
"Klikněte na uzel ``AnimatedSprite`` a nastavte vlastnost ``Scale`` na "
"``(0.5, 0.5)``. Najdete ji v Inspektoru pod hlavičkou ``Node2D``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:137
msgid ""
"Finally, add a :ref:`CollisionShape2D <class_CollisionShape2D>` as a child "
"of ``Player``. This will determine the player's \"hitbox\", or the bounds of "
"its collision area. For this character, a ``CapsuleShape2D`` node gives the "
"best fit, so next to \"Shape\" in the Inspector, click \"[empty]\"\" -> "
"\"New CapsuleShape2D\".  Using the two size handles, resize the shape to "
"cover the sprite:"
msgstr ""
"Nakonec přidejte :ref:`CollisionShape2D <class_CollisionShape2D>` jako "
"potomka ``Player``. Tím se určí hráčův \"hitbox\" neboli hranice jeho "
"kolizní oblasti. Pro tuto postavu je uzel ``CapsuleShape2D`` nejvhodnější, "
"takže v Inspektoru vedle \"Shape\" klikněte na „[empty]“ -> „New "
"CapsuleShape2D“. Pomocí dvou úchytů velikosti změňte tvar tak, aby pokryl "
"celý sprite:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:146
msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr "Až skončíte, měla by vaše ``Player`` scéna vypadat takto:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:150
msgid "Make sure to save the scene again after these changes."
msgstr "Po těchto změnách nezapomeňte scénu znovu uložit."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:153
msgid "Moving the player"
msgstr "Pohybování hráčem"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:155
msgid ""
"Now we need to add some functionality that we can't get from a built-in "
"node, so we'll add a script. Click the ``Player`` node and click the "
"\"Attach Script\" button:"
msgstr ""
"Nyní musíme přidat některé funkce, které nám připravený uzel neposkytuje, "
"proto je naprogramujeme pomocí skriptu. Klikněte na uzel ``Player`` a dále "
"na tlačítko \"Připojit skript\":"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:161
msgid ""
"In the script settings window, you can leave the default settings alone. "
"Just click \"Create\":"
msgstr ""
"V okně nastavení skriptu můžete ponechat výchozí nastavení. Stačí kliknout "
"na „Vytvořit“:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:164
msgid ""
"If you're creating a C# script or other languages, select the language from "
"the `language` drop down menu before hitting create."
msgstr ""
"Pokud vytváříte skript v C# nebo v jiném jazyku, vyberte požadovaný jazyk z "
"rozbalovací nabídky `jazyk` před tím, než kliknete vytvořit."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:169
msgid ""
"If this is your first time encountering GDScript, please read :ref:"
"`doc_scripting` before continuing."
msgstr ""
"Pokud se poprvé setkáváte s GDScriptem, přečtěte si prosím :ref:"
"`doc_scripting`, než budete pokračovat."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:172
msgid "Start by declaring the member variables this object will need:"
msgstr ""
"Začněte deklarováním členských proměnných, které bude tento objekt "
"potřebovat:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:193
msgid ""
"Using the ``export`` keyword on the first variable ``speed`` allows us to "
"set its value in the Inspector. This can be handy for values that you want "
"to be able to adjust just like a node's built-in properties. Click on the "
"``Player`` node and you'll see the property now appears in the \"Script "
"Variables\" section of the Inspector. Remember, if you change the value "
"here, it will override the value written in the script."
msgstr ""
"Pomocí klíčového slova „export“ pro první proměnnou „speed“ nám umožní "
"nastavit její hodnotu v Inspektoru. To může být šikovné pro hodnoty, které "
"chcete upravovat stejně jako vlastnosti věstavěných uzlu. Klikněte na uzel "
"``Player`` a uvidíte vlastnost, která se nyní bude objevovat v inspektoru v "
"sekci \"Proměnné skriptu\". Pamatujte, že pokud zde změníte hodnotu, "
"přepíšete tak hodnotu zapsanou ve skriptu."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:200
msgid ""
"If you're using C#, you need to (re)build the project assemblies whenever "
"you want to see new export variables or signals. This build can be manually "
"triggered by clicking the word \"Mono\" at the bottom of the editor window "
"to reveal the Mono Panel, then clicking the \"Build Project\" button."
msgstr ""
"Pokud používáte C#, musíte (znovu) sestavit projekt, kdykoli chcete vidět "
"nově exportované proměnné nebo signály. Toto sestavení lze spustit ručně "
"kliknutím na slovo „Mono“ v dolní části okna editoru, čímž se odhalí panel "
"Mono, a poté kliknutím na tlačítko „Build Project“."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:208
msgid ""
"The ``_ready()`` function is called when a node enters the scene tree, which "
"is a good time to find the size of the game window:"
msgstr ""
"Funkce ``_ready ()`` se volá, když uzel vstoupuje do stromu scény, a to je "
"dobrý čas k nalezení velikosti okna hry:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:224
msgid ""
"Now we can use the ``_process()`` function to define what the player will "
"do. ``_process()`` is called every frame, so we'll use it to update elements "
"of our game, which we expect will change often. For the player, we need to "
"do the following:"
msgstr ""
"Nyní můžeme pomocí funkce ``_process ()`` definovat, co bude hráč dělat. "
"``_process ()`` se volá v každém framu(snímku) takže tuto funkci použijeme k "
"aktualizaci takových prvků naší hry, které se často změní. Pro hráče musíme "
"udělat následující:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:229
msgid "Check for input."
msgstr "Zkontrolovat vstup."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:230
msgid "Move in the given direction."
msgstr "Pohnout se v požadovaném směru."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:231
msgid "Play the appropriate animation."
msgstr "Přehrát příslušnou animaci."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:233
msgid ""
"First, we need to check for input - is the player pressing a key? For this "
"game, we have 4 direction inputs to check. Input actions are defined in the "
"Project Settings under \"Input Map\". Here, you can define custom events and "
"assign different keys, mouse events, or other inputs to them. For this demo, "
"we will use the default events that are assigned to the arrow keys on the "
"keyboard."
msgstr ""
"Nejprve musíme zkontrolovat vstup - tiskne hráč klávesu? Pro tuto hru máme k "
"dispozici 4 vstupy pro směr. Vstupní akce jsou definovány v Nastavení "
"projektu v části „Mapa vstupů“. Zde můžete definovat vlastní události a "
"přiřadit jim různé klávesy, události myši nebo jiné vstupy. Pro toto demo "
"použijeme výchozí události, které jsou přiřazeny kurzorovým klávesám "
"klávesnice."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:240
msgid ""
"You can detect whether a key is pressed using ``Input.is_action_pressed()``, "
"which returns ``true`` if it's pressed or ``false`` if it isn't."
msgstr ""
"Zda je klávesa stisknuta můžete zjistit pomocí funkce ``Input."
"is_action_pressed()``, která vrací ``true``, pokud je stisknuta, nebo "
"``false``, pokud není."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:302
msgid ""
"We start by setting the ``velocity`` to ``(0, 0)`` - by default, the player "
"should not be moving. Then we check each input and add/subtract from the "
"``velocity`` to obtain a total direction. For example, if you hold ``right`` "
"and ``down`` at the same time, the resulting ``velocity`` vector will be "
"``(1, 1)``. In this case, since we're adding a horizontal and a vertical "
"movement, the player would move *faster* diagonally than if it just moved "
"horizontally."
msgstr ""
"Začneme nastavením ``velocity`` na ``(0, 0)`` - ve výchozím nastavení by se "
"hráč neměl pohybovat. Pak zkontrolujeme každý vstup a přidáme / odečteme z "
"``velocity``, abychom získali celkový směr. Například pokud podržíte "
"``right`` a ``down`` současně, bude výsledný vektor ``velocity`` ``(1, 1)``. "
"V tomto případě, protože přidáváme vodorovný a svislý pohyb, by se hráč "
"pohyboval *rychleji* diagonálně, než kdyby se pohyboval vodorovně."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:309
msgid ""
"We can prevent that if we *normalize* the velocity, which means we set its "
"*length* to ``1``, then multiply by the desired speed. This means no more "
"fast diagonal movement."
msgstr ""
"Můžeme tomu zabránit, pokud *normalizujeme* vektor rychlosti, což znamená, "
"že nastavíme jeho *velikost* na ``1``, a vynásobíme jej velikostí požadované "
"rychlostí. To znamená, už žádné rychlé diagonální pohyby."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:313
msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`. It's good to "
"know but won't be necessary for the rest of this tutorial."
msgstr ""
"Pokud jste nikdy předtím nepoužívali vektorovou matematiku, nebo potřebujete "
"málé opáčko, používání vektorů v Godotu najdete na :ref:`doc_vector_math`. "
"Je dobré vektory znát, ale po zbytek tohoto tutoriálu to nebude nutné."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:317
msgid ""
"We also check whether the player is moving so we can call ``play()`` or "
"``stop()`` on the AnimatedSprite."
msgstr ""
"Také ověříme zda se hráč pohybuje, takže na můžeme volat metody ``play ()`` "
"nebo ``stop ()`` uzlu AnimatedSprite."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:320
msgid ""
"``$`` is shorthand for ``get_node()``. So in the code above, ``"
"$AnimatedSprite.play()`` is the same as ``get_node(\"AnimatedSprite\")."
"play()``."
msgstr ""
"``$`` je zkratka pro ``get_node()``. Takže ve výše uvedeném kódu je ``"
"$AnimatedSprite.play()`` stejný jako ``get_node(\"AnimatedSprite\").Play()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:323
msgid ""
"In GDScript, ``$`` returns the node at the relative path from the current "
"node, or returns ``null`` if the node is not found. Since AnimatedSprite is "
"a child of the current node, we can use ``$AnimatedSprite``."
msgstr ""
"V GDScript, ``$`` vrací relativní cestu uzlu vzhledem k uzlu aktuálnímu, "
"anebo ``null``, pokud uzel nebyl nalezen. Protože AnimatedSprite je potomkem "
"aktuálního uzlu, můžeme použít ``$AnimatedSprite``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:326
msgid ""
"Now that we have a movement direction, we can update the player's position. "
"We can also use ``clamp()`` to prevent it from leaving the screen. "
"*Clamping* a value means restricting it to a given range. Add the following "
"to the bottom of the ``_process`` function (make sure it's not indented "
"under the `else`):"
msgstr ""
"Nyní, když máme směr pohybu, můžeme aktualizovat pozici hráče. Můžeme také "
"použít ``clamp()``, abychom zabránili opuštění obrazovky. *Clamp* hodnotu "
"znamená omezit ji na určitý rozsah. Na konec funkce ``_process`` přidejte "
"následující (ujistěte se, že není odsazeno jako pokračování větve `else`):"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:347
msgid ""
"The `delta` parameter in the `_process()` function refers to the *frame "
"length* - the amount of time that the previous frame took to complete. Using "
"this value ensures that your movement will remain consistent even if the "
"frame rate changes."
msgstr ""
"Parametr ``delta`` ve funkci ``_process()`` označuje délku *snímku* - dobu, "
"kterou předchozí snímek potřeboval k dokončení. Použitím této hodnoty "
"zajistíte, že pohyb zůstane konzistentní, i když se změní snímková frekvence."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:352
msgid ""
"Click \"Play Scene\" (``F6``) and confirm you can move the player around the "
"screen in all directions."
msgstr ""
"Klikněte na \"Přehrát scénu\" (``F6``) a ujistěte se, že můžete hráčem "
"posunovat po obrazovce ve všech směrech."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:355
msgid "If you get an error in the \"Debugger\" panel that says"
msgstr "Pokud se zobrazí následující chyba v panelu \"Debugger\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:357
msgid ""
"``Attempt to call function 'play' in base 'null instance' on a null "
"instance``"
msgstr ""
"``Pokus o volání funkce 'play' v základní 'null instance' na null instance``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:359
msgid ""
"this likely means you spelled the name of the AnimatedSprite node wrong. "
"Node names are case-sensitive and ``$NodeName`` must match the name you see "
"in the scene tree."
msgstr ""
"to pravděpodobně znamená, že jste špatně zadali název uzlu AnimatedSprite. "
"Názvy uzlů rozlišují velká a malá písmena a ``$NodeName`` musí odpovídat "
"jménu, které vidíte ve stromu scény."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:364
msgid "Choosing animations"
msgstr "Výběr animací"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:366
msgid ""
"Now that the player can move, we need to change which animation the "
"AnimatedSprite is playing based on its direction. We have the \"walk\" "
"animation, which shows the player walking to the right. This animation "
"should be flipped horizontally using the ``flip_h`` property for left "
"movement. We also have the \"up\" animation, which should be flipped "
"vertically with ``flip_v`` for downward movement. Let's place this code at "
"the end of the ``_process()`` function:"
msgstr ""
"Nyní, když se hráč může pohybovat, musíme změnit podle směru jeho pohybu "
"animaci, kterou AnimatedSprite přehrává. Máme animaci „chůze“, která ukazuje "
"pohyb hráče doprava, Tato animace by se měla vodorovně převrátit pomocí "
"vlastnosti ``flip_h`` pro pohyb doleva. Máme také animaci \"nahoru\", která "
"by měla být svisle převrácená s ``flip_v`` pro pohyb dolů. Umístíme tento "
"kód na konec funkce ``_process()``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:401
msgid ""
"The boolean assignments in the code above are a common shorthand for "
"programmers. Since we're doing a comparison test (boolean) and also "
"*assigning* a boolean value, we can do both at the same time. Consider this "
"code versus the one-line boolean assignment above:"
msgstr ""
"Booleovská přiřazení ve výše uvedeném kódu jsou běžnými zkratkami při "
"programování. Protože provádíme porovnání (booleovsky) a pak *přiřazujeme* "
"booleovskou hodnotu, můžeme oba kroky provést současně. Porovnejte tento kód "
"s jednořádkovým přiřazením výše:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:425
msgid ""
"Play the scene again and check that the animations are correct in each of "
"the directions."
msgstr ""
"Zahrajte si scénu znovu a zkontrolujte, zda jsou animace ve všech směrech "
"odpovídající."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:428
msgid ""
"A common mistake here is to type the names of the animations wrong. The "
"animation names in the SpriteFrames panel must match what you type in the "
"code. If you named the animation ``\"Walk\"``, you must also use a capital "
"\"W\" in the code."
msgstr ""
"Častou chybou je nesprávné zadání názvů animací. Názvy animací v panelu "
"SpriteFrames se musí shodovat s tím, co zadáte v kódu. Pokud jste animaci "
"pojmenovali ``\"Walk\"``, musíte v kódu také použít velké písmeno \"W\"."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:433
msgid ""
"When you're sure the movement is working correctly, add this line to "
"``_ready()``, so the player will be hidden when the game starts:"
msgstr ""
"Pokud jste si jisti, že pohyb funguje správně, přidejte tento řádek do "
"``_ready () ``, takže hráč bude při spuštění hry skrytý:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:446
msgid "Preparing for collisions"
msgstr "Příprava na kolize"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:448
msgid ""
"We want ``Player`` to detect when it's hit by an enemy, but we haven't made "
"any enemies yet! That's OK, because we're going to use Godot's *signal* "
"functionality to make it work."
msgstr ""
"Chceme, aby ``Player`` detekoval, když je zasažen nepřítelem, ale zatím jsme "
"žádného nepřítele nevytvořili! To je v pořádku, protože zde použijeme Gotovi "
"*signály*."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:452
msgid "Add the following at the top of the script, after ``extends Area2D``:"
msgstr "Po ``extends Area2D`` přidejte na začátek skriptu následující kód:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:466
msgid ""
"This defines a custom signal called \"hit\" that we will have our player "
"emit (send out) when it collides with an enemy. We will use ``Area2D`` to "
"detect the collision. Select the ``Player`` node and click the \"Node\" tab "
"next to the Inspector tab to see the list of signals the player can emit:"
msgstr ""
"Toto definuje vlastní signál zvaný \"hit\", který bude hráč vysílat při "
"srážce s nepřítelem. K detekci kolize použijeme ``Area2D``. Vyberte uzel "
"``Player`` a klikněte na záložku \"Uzel\" vedle záložky Inspektor, aby se "
"zobrazil seznam signálů, které může hráč vyslat:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:473
msgid ""
"Notice our custom \"hit\" signal is there as well! Since our enemies are "
"going to be ``RigidBody2D`` nodes, we want the ``body_entered(body: Node)`` "
"signal. This signal will be emitted when a body contacts the player. Click "
"\"Connect..\" and the \"Connect a Signal\" window appears. We don't need to "
"change any of these settings so click \"Connect\" again. Godot will "
"automatically create a function in your player's script."
msgstr ""
"Všimněte si, že je k dispozici i náš vlastní signál \"hit\"! Protože naši "
"nepřátelé budou uzly ``RigidBody2D``, chceme signál ``body_entered(body:"
"Node)``. Tento signál bude vydán, když se body dotkne hráče. Klikněte na "
"„Připojit ...“ a objeví se okno „Připojit signál“. Nemusíme měnit žádné z "
"těchto nastavení, takže znovu klikněte na Připojit. Godot automaticky "
"vytvoří funkci ve skriptu vašeho hráče."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:482
msgid ""
"Note the green icon indicating that a signal is connected to this function. "
"Add this code to the function:"
msgstr ""
"Všimněte si zelené ikony označující, že signál je připojen k této funkci. "
"Přidejte následující kód do funkce:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:502
msgid ""
"Each time an enemy hits the player, the signal is going to be emitted. We "
"need to disable the player's collision so that we don't trigger the ``hit`` "
"signal more than once."
msgstr ""
"Pokaždé, když hráče zasáhne nepřítel, bude vyslán signál. Musíme pak vypnout "
"kolizi hráče, abychom nespustili signál „hit“ více než jednou."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:506
msgid ""
"Disabling the area's collision shape can cause an error if it happens in the "
"middle of the engine's collision processing. Using ``set_deferred()`` tells "
"Godot to wait to disable the shape until it's safe to do so."
msgstr ""
"Zakázání kolizního tvaru uzlu může způsobit chybu, pokud k tomu dojde "
"uprostřed zpracovávání kolize enginem. Pomocí ``set_deferred()`` řekneme "
"Godotovi, aby počkal, s vypnutím kolizního tvaru, dokud to nebude bezpečné."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:510
msgid ""
"The last piece is to add a function we can call to reset the player when "
"starting a new game."
msgstr ""
"Posledním kusem je přidání funkce, kterou můžeme nazvat resetem hráče při "
"spuštění nové hry."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:531
msgid "Enemy scene"
msgstr "Scéna Nepřítel"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:533
msgid ""
"Now it's time to make the enemies our player will have to dodge. Their "
"behavior will not be very complex: mobs will spawn randomly at the edges of "
"the screen, choose a random direction, and move in a straight line."
msgstr ""
"Nyní je čas, vytvořit nepřátele, kterým se náš hráč bude muset vyhnout. "
"Jejich chování nebude příliš složité: náhodně se vynoří na okrajích "
"obrazovky, vyberou náhodný směr a budou se dál pohybovat po přímce."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:537
msgid ""
"We'll create a ``Mob`` scene, which we can then *instance* to create any "
"number of independent mobs in the game."
msgstr ""
"Vytvoříme scénu ``Mob``, pomocí jejích *instancí* pak stvoříme ve hře "
"libovolný počet nezávislých nepřátel."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:540
msgid "See :ref:`doc_instancing` to learn more about instancing."
msgstr "Další informace o vytváření instancí najdete na :ref:`doc_instancing`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:543
msgid "Node setup"
msgstr "Nastavení uzlu"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:545
msgid "Click Scene -> New Scene and add the following nodes:"
msgstr "Klikněte na Scéna -> Nová scéna a přidejte následující uzly:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:547
msgid ":ref:`RigidBody2D <class_RigidBody2D>` (named ``Mob``)"
msgstr ":ref:`RigidBody2D <class_RigidBody2D>` (pojmenovaný ``Mob``)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:549
msgid ":ref:`AnimatedSprite <class_AnimatedSprite>`"
msgstr ":ref:`AnimatedSprite <class_AnimatedSprite>`"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:550
msgid ":ref:`CollisionShape2D <class_CollisionShape2D>`"
msgstr ":ref:`CollisionShape2D <class_CollisionShape2D>`"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:551
msgid ":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>`"
msgstr ":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>`"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:553
msgid ""
"Don't forget to set the children so they can't be selected, like you did "
"with the Player scene."
msgstr ""
"Nezapomeňte nastavit podřízené uzly tak, aby nemohly být vybrány, jako jste "
"to udělali na scéně Player."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:556
msgid ""
"In the :ref:`RigidBody2D <class_RigidBody2D>` properties, set ``Gravity "
"Scale`` to ``0``, so the mob will not fall downward. In addition, under the "
"``PhysicsBody2D`` section, click the ``Mask`` property and uncheck the first "
"box. This will ensure the mobs do not collide with each other."
msgstr ""
"Ve vlastnostech :ref:`RigidBody2D <class_RigidBody2D>` nastavte ``Gravity "
"Scale`` na ``0``, takže nepřítel nebude klesat dolů. Kromě toho v sekci "
"``PhysicsBody2D`` klikněte na vlastnost ``Maska`` a zrušte zaškrtnutí "
"prvního políčka. Tím bude zajištěno, že nepřátelé nebudou navzájem kolidovat."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:563
msgid ""
"Set up the :ref:`AnimatedSprite <class_AnimatedSprite>` like you did for the "
"player. This time, we have 3 animations: ``fly``, ``swim``, and ``walk``. "
"There are two images for each animation in the art folder."
msgstr ""
"Nastavte :ref:`AnimatedSprite <class_AnimatedSprite>` tak jako pro hráče. "
"Tentokrát máme 3 animace: ``fly``, ``swim`` a ``walk``. Pro každou "
"animacijsou ve složce art dva obrázky."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:567
msgid "Adjust the \"Speed (FPS)\" to ``3`` for all animations."
msgstr "Nastavte \"Speed(FPS)\" na ``3`` pro všechny animace."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:571
msgid "Set the ``Playing`` property in the Inspector to “On”."
msgstr "V inspektoru nastavte vlastnost ``Playing`` na „On“."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:573
msgid ""
"We'll select one of these animations randomly so that the mobs will have "
"some variety."
msgstr ""
"Jednu z těchto animací vybereme náhodně, aby nepřátelé měly určitou "
"rozmanitost."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:575
msgid ""
"Like the player images, these mob images need to be scaled down. Set the "
"``AnimatedSprite``'s ``Scale`` property to ``(0.75, 0.75)``."
msgstr ""
"Stejně jako u obrázků hráčů musí být tyto obrázky zmenšeny. Nastavte "
"vlastnost ``Měřítko`` uzlu ``AnimatedSprite`` na ``(0.75, 0.75)``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:578
msgid ""
"As in the ``Player`` scene, add a ``CapsuleShape2D`` for the collision. To "
"align the shape with the image, you'll need to set the ``Rotation Degrees`` "
"property to ``90`` (under \"Transform\" in the Inspector)."
msgstr ""
"Stejně jako tak jako ve scéně ``Player`` přidejte pro kolizi "
"``CapsuleShape2D``. Chcete-li zarovnat tvar s obrázkem, musíte nastavit "
"vlastnost ``Rotation Degrees`` na ``90`` (v Inspektoru pod \"Transform\")."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:582
msgid "Save the scene."
msgstr "Ulož scénu."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:585
msgid "Enemy script"
msgstr "Skript nepřítele"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:587
msgid "Add a script to the ``Mob`` and add the following member variables:"
msgstr "Ke scéně ``Mob`` přidej skript a vytvoř následující členské proměnné:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:611
msgid ""
"When we spawn a mob, we'll pick a random value between ``min_speed`` and "
"``max_speed`` for how fast each mob will move (it would be boring if they "
"were all moving at the same speed)."
msgstr ""
"Když se narodí nepřítel, pro jeho rychlost pohybu vybereme náhodnou hodnotu "
"mezi ``min_speed`` and ``max_speed`` (byla by to nuda, kdyby se všichni "
"pohybovali stejné rychle)."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:615
msgid ""
"Now let's look at the rest of the script. In ``_ready()`` we randomly choose "
"one of the three animation types:"
msgstr ""
"Nyní se podívejme na zbytek skriptu. V ``_ready()`` náhodně vybereme jeden "
"ze tří typů animací:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:637
msgid ""
"First, we get the list of animation names from the AnimatedSprite's "
"``frames`` property. This returns an Array containing all three animation "
"names: ``[\"walk\", \"swim\", \"fly\"]``."
msgstr ""
"Zaprvé dostaneme seznam jmen animací z ``frames`` vlastnosti uzlu "
"AnimatedSprite. Ta vrací pole obsahující všechny tři názvy animací: ``[\"walk"
"\", \"swim\", \"fly\"]``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:641
msgid ""
"We then need to pick a random number between ``0`` and ``2`` to select one "
"of these names from the list (array indices start at ``0``). ``randi() % n`` "
"selects a random integer between ``0`` and ``n-1``."
msgstr ""
"Potom musíme vybrat náhodné číslo mezi ``0`` a ``2``, abychom vybrali jedno "
"z těchto jmen ze seznamu (indexy pole začínají ``0``). ``randi() % n`` "
"vybere náhodné celé číslo mezi ``0`` a ``n-1``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:645
msgid ""
"You must use ``randomize()`` if you want your sequence of \"random\" numbers "
"to be different every time you run the scene. We're going to use "
"``randomize()`` in our ``Main`` scene, so we won't need it here."
msgstr ""
"Musíte použít ``randomize()``, pokud chcete, aby se vaše sekvence \"náhodných"
"\" čísel lišila pokaždé, když spustíte scénu. Budeme používat "
"``randomize()`` v naší ``Main`` scéně, takže to zde nebudeme potřebovat."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:649
msgid ""
"The last piece is to make the mobs delete themselves when they leave the "
"screen. Connect the ``screen_exited()`` signal of the "
"``VisibilityNotifier2D`` node and add this code:"
msgstr ""
"Posledním kouskem kódu je,smazat nepřítele, když opustí obrazovku. Připojte "
"signál ``screen_exited()`` uzlu ``VisibilityNotifier2D`` a přidejte tento "
"kód:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:666
msgid "This completes the `Mob` scene."
msgstr "Tím je dokončena scéna `Mob`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:669
msgid "Main scene"
msgstr "Hlavní scéna"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:671
msgid ""
"Now it's time to bring it all together. Create a new scene and add a :ref:"
"`Node <class_Node>` named ``Main``. Ensure you create a Node, **not** a "
"Node2D. Click the \"Instance\" button and select your saved ``Player.tscn``."
msgstr ""
"Nyní je čas to všechno spojit. Vytvořte novou scénu a přidejte :ref:"
"`Node<class_Node>` s názvem ``Main``. Klikněte na tlačítko \"Instance\" a "
"vyberte uložený soubor ``Player.tscn``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:678
msgid ""
"Now, add the following nodes as children of ``Main``, and name them as shown "
"(values are in seconds):"
msgstr ""
"Nyní přidejte následující uzly jako potomky ``Main`` a pojmenujte je podle "
"obrázku (hodnoty jsou v sekundách):"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:681
msgid ""
":ref:`Timer <class_Timer>` (named ``MobTimer``) - to control how often mobs "
"spawn"
msgstr ""
":ref:`Timer <class_Timer>` (pojmenovaný ``MobTimer``) - pro ovládání času "
"generování nepřátel"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:682
msgid ""
":ref:`Timer <class_Timer>` (named ``ScoreTimer``) - to increment the score "
"every second"
msgstr ""
":ref:`Timer <class_Timer>` (pojmenovaný ``ScoreTimer``) - pro zvýšení skóre "
"za každou sekundu bez srážky"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:683
msgid ""
":ref:`Timer <class_Timer>` (named ``StartTimer``) - to give a delay before "
"starting"
msgstr ""
":ref:`Timer <class_Timer>` (pojmenovaný ``StartTimer``) - pro zpoždění před "
"spuštěním"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:684
msgid ""
":ref:`Position2D <class_Position2D>` (named ``StartPosition``) - to indicate "
"the player's start position"
msgstr ""
":ref:`Position2D <class_Position2D>` (pojmenovaný ``StartPosition``) - pro "
"označení počáteční pozice hráče"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:686
msgid ""
"Set the ``Wait Time`` property of each of the ``Timer`` nodes as follows:"
msgstr "Nastavte vlastnost ``Wait Time`` každého z uzlů ``Timer`` takto:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:689
msgid "``MobTimer``: ``0.5``"
msgstr "``MobTimer``: ``0.5``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:690
msgid "``ScoreTimer``: ``1``"
msgstr "``ScoreTimer``: ``1``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:691
msgid "``StartTimer``: ``2``"
msgstr "``StartTimer``: ``2``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:693
msgid ""
"In addition, set the ``One Shot`` property of ``StartTimer`` to \"On\" and "
"set ``Position`` of the ``StartPosition`` node to ``(240, 450)``."
msgstr ""
"Dále nastavte vlastnost ``One Shot`` uzlu ``StartTimer`` na \" On \"a "
"nastavte ``Position`` v uzlu ``StartPosition`` na ``(240, 450)``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:697
msgid "Spawning mobs"
msgstr "Zrození nepřátel"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:699
msgid ""
"The Main node will be spawning new mobs, and we want them to appear at a "
"random location on the edge of the screen. Add a :ref:`Path2D "
"<class_Path2D>` node named ``MobPath`` as a child of ``Main``. When you "
"select ``Path2D``, you will see some new buttons at the top of the editor:"
msgstr ""
"Main uzel bude vytvářet nové nepřátele a chceme, aby se objevili na náhodné "
"místě při okraji obrazovky. Přidejte a :ref:`Path2D <class_Path2D>` uzel s "
"názvem ``MobPath`` jako potomka ``Main``. Když vyberete ``Path2D``, uvidíte "
"v horní části editoru některá nová tlačítka:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:706
msgid ""
"Select the middle one (\"Add Point\") and draw the path by clicking to add "
"the points at the corners shown. To have the points snap to the grid, make "
"sure \"Use Grid Snap\" and \"Use Snap\" are both selected. These options can "
"be found to the left of the \"Lock\" button, appearing as a magnet next to "
"some dots and intersecting lines, respectively."
msgstr ""
"Vyberte prostřední (\"Add point\") a nakreslete křivku přidáním bodů "
"klepnutím v zobrazených rozích. Chcete-li, aby se body přichytíly k mřížce, "
"ujistěte se, že je vybraná možnost \"Use Grid Snap\" mřížky. Tuto možnost "
"lze nalézt nalevo od tlačítka \"Lock\", které se zobrazí jako magnet vedle "
"některých protínajících se čar."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:714
msgid ""
"Draw the path in *clockwise* order, or your mobs will spawn pointing "
"*outwards* instead of *inwards*!"
msgstr ""
"Nakreslete cestu *ve směru hodinových ručiček*, jinak budou vaši nepřátelé "
"natočení *směrem ven* místo *dovnitř*!"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:719
msgid ""
"After placing point ``4`` in the image, click the \"Close Curve\" button and "
"your curve will be complete."
msgstr ""
"Po umístění bodu ``4`` do obrázku klikněte na tlačítko „Zavřít křivku“ a "
"vaše cesta bude úplná."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:722
msgid ""
"Now that the path is defined, add a :ref:`PathFollow2D <class_PathFollow2D>` "
"node as a child of ``MobPath`` and name it ``MobSpawnLocation``. This node "
"will automatically rotate and follow the path as it moves, so we can use it "
"to select a random position and direction along the path."
msgstr ""
"Nyní, když je cesta definována, přidejte uzel :ref:`PathFollow2D "
"<class_PathFollow2D>` jako podřízený uzel ``MobPath`` a pojmenujte jej "
"``MobSpawnLocation``. Tento uzel se bude automaticky otáčet a sledovat "
"cestu, jak se pohybuje, takže ji můžeme použít k výběru náhodné polohy a "
"směru podél cesty."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:727
msgid "Your scene should look like this:"
msgstr "Vaše scéna by měla vypadat takto:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:732
msgid "Main script"
msgstr "Hlavní skript"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:734
msgid ""
"Add a script to ``Main``. At the top of the script, we use ``export "
"(PackedScene)`` to allow us to choose the Mob scene we want to instance."
msgstr ""
"Přidejte do ``Main`` skript. V horní části skriptu používáme ``export "
"(PackedScene)``, abychom nám mohli vybrat scénu Mob, pro kterou chceme "
"vytvořit instanci."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:774
msgid ""
"Click the ``Main`` node and you will see the ``Mob`` property in the "
"Inspector under \"Script Variables\"."
msgstr ""
"Klikněte na uzel ``Main`` a uvidíte vlastnost ``Mob`` v Inspektoru pod "
"\"Proměnné skriptu\"."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:777
msgid "You can assign this property's value in two ways:"
msgstr "Hodnotu této vlastnosti můžete přiřadit dvěma způsoby:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:779
msgid ""
"Drag ``Mob.tscn`` from the \"FileSystem\" panel and drop it in the ``Mob`` "
"property ."
msgstr "Přetáhněte ``Mob.tscn`` z panelu \"FileSystem\" do vlastnosti ``Mob``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:781
msgid ""
"Click the down arrow next to \"[empty]\" and choose \"Load\". Select ``Mob."
"tscn``."
msgstr ""
"Klikněte na šipku dolů vedle „[prázdné]“ a vyberte „Načíst“. Vyberte `` Mob."
"tscn``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:784
msgid ""
"Next, select the ``Player`` node in the Scene dock, and access the Node dock "
"on the sidebar. Make sure to have the Signals tab selected in the Node dock."
msgstr ""
"Vyberte uzel ``Player`` ve stromové struktuře scény a poté zvolte kartu "
"„Uzel“. Dále se ujistěte, že máte vybranou možnost „Signály“."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:787
msgid ""
"You should see a list of the signals for the ``Player`` node. Find and "
"double-click the ``hit`` signal in the list (or right-click it and select "
"\"Connect...\"). This will open the signal connection dialog. We want to "
"make a new function named ``game_over``, which will handle what needs to "
"happen when a game ends. Type \"game_over\" in the \"Receiver Method\" box "
"at the bottom of the signal connection dialog and click \"Connect\". Add the "
"following code to the new function, as well as a ``new_game`` function that "
"will set everything up for a new game:"
msgstr ""
"Měli byste vidět seznam signálů pro uzel ``Player``. Vyhledejte a poklepejte "
"na signál ``hit`` v seznamu (nebo na něj klikněte pravým tlačítkem a vyberte "
"\"Připojit ...\"). Otevře se dialogové okno pro připojení signálu. Chceme "
"vytvořit novou funkci s názvem ``game_over``, která se postará o to, co se "
"musí stát, až hra skončí. Do pole „Metoda příjemce“ ve spodní části "
"dialogového okna pro připojení signálu zadejte „game_over“ a klikněte na "
"„Připojit“. K nové funkci přidejte následující kód a také funkci "
"``new_game``, která nastaví vše pro novou hru:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:828
msgid ""
"Now connect the ``timeout()`` signal of each of the Timer nodes "
"(``StartTimer``, ``ScoreTimer`` , and ``MobTimer``) to the main script. "
"``StartTimer`` will start the other two timers. ``ScoreTimer`` will "
"increment the score by 1."
msgstr ""
"Nyní připojte signál ``timeout()`` každého z uzlů časovače ( ``StartTimer``, "
"``ScoreTimer`` a ``MobTimer``) do hlavního skriptu. ``StartTimer`` spustí "
"další dva časovače. ``ScoreTimer`` zvýší skóre o 1."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:855
msgid ""
"In ``_on_MobTimer_timeout()``, we will create a mob instance, pick a random "
"starting location along the ``Path2D``, and set the mob in motion. The "
"``PathFollow2D`` node will automatically rotate as it follows the path, so "
"we will use that to select the mob's direction as well as its position."
msgstr ""
"V ``_on_MobTimer_timeout ()`` vytvoříme instanci nepřítele, vybereme náhodné "
"počáteční místo podél ``Path2D`` a dáme nepřítele do pohybu. Uzel "
"``PathFollow2D`` se bude automaticky otáčet, jak následuje cestu, takže ji "
"použijeme k výběru směru a polohy nepřátel."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:861
msgid ""
"Note that a new instance must be added to the scene using ``add_child()``."
msgstr ""
"Všimněte si, že do scény musí být přidána nová instance pomocí "
"``add_child()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:909
msgid ""
"Why ``PI``? In functions requiring angles, GDScript uses *radians*, not "
"degrees. If you're more comfortable working with degrees, you'll need to use "
"the ``deg2rad()`` and ``rad2deg()`` functions to convert between the two."
msgstr ""
"Proč ``PI``? Ve funkcích vyžadujících úhly používá GDScript *radiany*, "
"nikoli stupně. Pokud se vám pracuje pohodlněji se stupni, budete muset "
"použít převodní funkce ``deg2rad()`` a ``rad2deg()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:915
msgid "Testing the scene"
msgstr "Testování scény"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:917
msgid ""
"Let's test the scene to make sure everything is working. Add this to "
"``_ready()``:"
msgstr ""
"Vyzkoušejte scénu, abychom se ujistili, že vše funguje. Přidejte toto do "
"``_ready()``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:934
msgid ""
"Let's also assign ``Main`` as our \"Main Scene\" - the one that runs "
"automatically when the game launches. Press the \"Play\" button and select "
"``Main.tscn`` when prompted."
msgstr ""
"Pojďme také přiřadit ``Main`` jako „Hlavní scénu“ - ta, která se spustí "
"automaticky při spuštění hry. Stiskněte tlačítko \"Play\" a po zobrazení "
"výzvy vyberte ``Main.tscn``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:938
msgid ""
"You should be able to move the player around, see mobs spawning, and see the "
"player disappear when hit by a mob."
msgstr ""
"Měli byste být schopni pohybovat hráčem do všech směrů, vidět rozmnožování "
"nepřátek a sledovat, jak hráč zmizí, když je zasažen nepřítelem."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:941
msgid ""
"When you're sure everything is working, remove the call to ``new_game()`` "
"from ``_ready()``."
msgstr ""
"Pokud jste si jisti, že vše funguje, odeberte volání ``new_game()`` z "
"``_ready()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:945
msgid "HUD"
msgstr "HUD"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:947
msgid ""
"The final piece our game needs is a UI: an interface to display things like "
"score, a \"game over\" message, and a restart button. Create a new scene, "
"and add a :ref:`CanvasLayer <class_CanvasLayer>` node named ``HUD``. \"HUD\" "
"stands for \"heads-up display\", an informational display that appears as an "
"overlay on top of the game view."
msgstr ""
"Posledním kouskem, který naše hra potřebuje, je UI: rozhraní pro zobrazování "
"věcí, jako je skóre, zpráva „konec hry“ a tlačítko restartu. Vytvořte novou "
"scénu a přidejte uzel s názvem ``HUD`` :ref:`CanvasLayer "
"<class_CanvasLayer>`. „HUD“ znamená „heads-up display“, informační displej, "
"který se zobrazuje jako překryv v horní části herní obrazovky."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:953
msgid ""
"The :ref:`CanvasLayer <class_CanvasLayer>` node lets us draw our UI elements "
"on a layer above the rest of the game, so that the information it displays "
"isn't covered up by any game elements like the player or mobs."
msgstr ""
"Uzel :ref:`CanvasLayer <class_CanvasLayer>` umožňuje nakreslit naše prvky "
"uživatelského rozhraní do vrstvy nad zbytkem hry, takže informace, které "
"zobrazuje, nejsou zakryty žádnými herními prvky, jako je hráč nebo nepřátelé."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:957
msgid "The HUD needs to display the following information:"
msgstr "HUD musí zobrazit následující informace:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:959
msgid "Score, changed by ``ScoreTimer``."
msgstr "Skóre, změněno uzlem ``ScoreTimer``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:960
msgid "A message, such as \"Game Over\" or \"Get Ready!\""
msgstr "Zprávu, například „Game Over“ nebo „Připravte se!“"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:961
msgid "A \"Start\" button to begin the game."
msgstr "Tlačítko \"Start\" pro zahájení hry."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:963
msgid ""
"The basic node for UI elements is :ref:`Control <class_Control>`. To create "
"our UI, we'll use two types of :ref:`Control <class_Control>` nodes: :ref:"
"`Label <class_Label>` and :ref:`Button <class_Button>`."
msgstr ""
"Základní uzel pro prvky uživatelského rozhraní je :ref:`Control "
"<class_Control>`. K vytvoření našeho uživatelského rozhraní použijeme dva "
"typy :ref:`Control <class_Control>` nodes: :ref:`Label <class_Label>` a :ref:"
"`Button <class_Button>`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:967
msgid "Create the following as children of the ``HUD`` node:"
msgstr "Jako podřízené uzlu ``HUD`` vytvořte následující:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:969
msgid ":ref:`Label <class_Label>` named ``ScoreLabel``."
msgstr ":ref:`Label <class_Label>` s názvem ``ScoreLabel``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:970
msgid ":ref:`Label <class_Label>` named ``Message``."
msgstr ":ref:`Label <class_Label>` pojmenovaný ``Message``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:971
msgid ":ref:`Button <class_Button>` named ``StartButton``."
msgstr ":ref:`Button <class_Button>` s názvem ``StartButton``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:972
msgid ":ref:`Timer <class_Timer>` named ``MessageTimer``."
msgstr ":ref:`Timer <class_Timer>` s názvem ``MessageTimer``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:974
msgid ""
"Click on the ``ScoreLabel`` and type a number into the ``Text`` field in the "
"Inspector. The default font for ``Control`` nodes is small and doesn't scale "
"well. There is a font file included in the game assets called \"Xolonium-"
"Regular.ttf\". To use this font, do the following:"
msgstr ""
"Klikněte na ``ScoreLabel`` a zadejte číslo do pole ``Text`` v Inspektoru. "
"Výchozí písmo pro uzly ``Control`` je malé a neškáluje se dobře. Ve "
"herníchzdrojích je obsažen soubor s názvem „Xolonium-Regular.ttf“. Chcete-li "
"použít toto písmo, proveďte následující:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:979
msgid "Under \"Custom Fonts\", choose \"New DynamicFont\""
msgstr "V části „Vlastní písma“ vyberte „Nový DynamicFont“"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:983
msgid ""
"Click on the \"DynamicFont\" you added, and under \"Font/Font Data\", choose "
"\"Load\" and select the \"Xolonium-Regular.ttf\" file. You must also set the "
"font's ``Size``. A setting of ``64`` works well."
msgstr ""
"Klikněte na \"DynamicFont\", který jste přidali, a pod \"Font / Font Data\", "
"zvolte \"Načíst\" a vyberte soubor \"Xolonium-Regular.ttf\". Musíte také "
"nastavit písmo ``Velikost``. Nastavení ``64`` funguje dobře."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:989
msgid ""
"Once you've done this on the ``ScoreLabel``, you can click the down arrow "
"next to the DynamicFont property and choose \"Copy\", then \"Paste\" it in "
"the same place on the other two Control nodes."
msgstr ""
"Jakmile to uděláte v ``ScoreLabel``, můžete kliknout na šipku dolů vedle "
"vlastnosti DynamicFont a zvolit \"Kopírovat\", pak \"Vložit\" na stejné "
"místo na ostatních dvou řídících uzlech."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:993
msgid ""
"**Anchors and Margins:** ``Control`` nodes have a position and size, but "
"they also have anchors and margins. Anchors define the origin - the "
"reference point for the edges of the node. Margins update automatically when "
"you move or resize a control node. They represent the distance from the "
"control node's edges to its anchor. See :ref:"
"`doc_design_interfaces_with_the_control_nodes` for more details."
msgstr ""
"**Kotvy (Anchors) a okraje(Margins):** Uzly ``Control`` mají polohu a "
"velikost, ale mají také kotvy a okraje. Kotvy definují počátek - referenční "
"bod pro okraje uzlu. Okraje se aktualizují automaticky, když přesunete nebo "
"změníte velikost řídicího uzlu. Představují vzdálenost od okrajů řídicího "
"uzlu k jeho kotvě. Viz :ref:`doc_design_interfaces_with_the_control_nodes` "
"pro více informací."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1000
msgid ""
"Arrange the nodes as shown below. Click the \"Layout\" button to set a "
"Control node's layout:"
msgstr ""
"Uspořádejte uzly podle obrázku níže. Kliknutím na tlačítko \"Rozložení\" "
"nastavíte rozvržení řídicího uzlu:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1005
msgid ""
"You can drag the nodes to place them manually, or for more precise "
"placement, use the following settings:"
msgstr ""
"Uzly můžete přetáhnout a umístit je ručně, nebo pro přesnější umístění "
"použijte následující nastavení:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1009
msgid "ScoreLabel"
msgstr "ScoreLabel"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1011
msgid "*Layout* : \"Top Wide\""
msgstr "*Layout*: \"Top Wide\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1012
msgid "*Text* : ``0``"
msgstr "*Text*: ``0``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1013
#: ../../docs/getting_started/step_by_step/your_first_game.rst:1020
msgid "*Align* : \"Center\""
msgstr "*Align* : \"Center\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1016
msgid "Message"
msgstr "Zpráva"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1018
msgid "*Layout* : \"HCenter Wide\""
msgstr "*Rozložení*: \"HCenter Wide\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1019
msgid "*Text* : ``Dodge the Creeps!``"
msgstr "*Text*: ``Dodge the Creeps!``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1021
msgid "*Autowrap* : \"On\""
msgstr "*Autowrap* : \"On\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1024
msgid "StartButton"
msgstr "StartButton"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1026
msgid "*Text* : ``Start``"
msgstr "*Text*: ``Start``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1027
msgid "*Layout* : \"Center Bottom\""
msgstr "*Layout*: \"Center Bottom\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1028
msgid "*Margin* :"
msgstr "*Margin* :"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1030
msgid "Top: ``-200``"
msgstr "Top: ``-200``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1031
msgid "Bottom: ``-100``"
msgstr "Bottom: ``-100``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1033
msgid ""
"On the ``MessageTimer``, set the ``Wait Time`` to ``2`` and set the ``One "
"Shot`` property to \"On\"."
msgstr ""
"V ``MessageTimer`` nastavte ``Wait Time`` na ``2`` a nastavte vlastnost "
"``One Shot`` na ``On``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1036
msgid "Now add this script to ``HUD``:"
msgstr "Nyní přidejte tento skript do ``HUD``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1055
msgid ""
"The ``start_game`` signal tells the ``Main`` node that the button has been "
"pressed."
msgstr ""
"Signál ``start_game`` oznamuje uzlu ``Main``, že bylo tlačítko stisknuto."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1077
msgid ""
"This function is called when we want to display a message temporarily, such "
"as \"Get Ready\"."
msgstr ""
"Tato funkce se volá, když chceme dočasně zobrazit zprávu, například "
"„Připravte se“."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1111
msgid ""
"This function is called when the player loses. It will show \"Game Over\" "
"for 2 seconds, then return to the title screen and, after a brief pause, "
"show the \"Start\" button."
msgstr ""
"Tato funkce se volá, když hráč prohraje. Na 2 sekundy se zobrazí „Game "
"Over“, poté se vratíme na titulní obrazovku a po krátké pauze se zobrazí "
"tlačítko „Start“."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1115
msgid ""
"When you need to pause for a brief time, an alternative to using a Timer "
"node is to use the SceneTree's ``create_timer()`` function. This can be very "
"useful to add delays such as in the above code, where we want to wait some "
"time before showing the \"Start\" button."
msgstr ""
"Pokud potřebujete pozastavit na krátkou dobu, alternativou k použití uzlu "
"Timer je použití funkce ``create_timer()`` třídy SceneTree. To může být "
"velmi užitečné pro přidání zpoždění, jako například ve výše uvedeném kódu, "
"kdy chceme počkat, než se zobrazí tlačítko „Start“."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1133
msgid "This function is called by ``Main`` whenever the score changes."
msgstr "Tatu funkci volá uzel ``Main``, kdykoli se skóre změní."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1135
msgid ""
"Connect the ``timeout()`` signal of ``MessageTimer`` and the ``pressed()`` "
"signal of ``StartButton`` and add the following code to the new functions:"
msgstr ""
"Připojte signál ``timeout()`` uzlu ``MessageTimer`` a ``pressed()`` signál "
"uzlu ``StartButton`` a k novým funkcím přidejte následující kód:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1163
msgid "Connecting HUD to Main"
msgstr "Připojení HUD k Main"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1165
msgid ""
"Now that we're done creating the ``HUD`` scene, go back to ``Main``. "
"Instance the ``HUD`` scene in ``Main`` like you did the ``Player`` scene. "
"The scene tree should look like this, so make sure you didn't miss anything:"
msgstr ""
"Nyní, když jsme dokončili scénu ``HUD``, vraťte se ke scéně ``Main``. "
"Vytvořte instanci scény ``HUD`` ve ``Main``, jak jste to udělali se scénou "
"``Player``. Strom scény by měl vypadat takto, takže se ujistětě, že vám něco "
"neuniklo:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1171
msgid ""
"Now we need to connect the ``HUD`` functionality to our ``Main`` script. "
"This requires a few additions to the ``Main`` scene:"
msgstr ""
"Nyní musíme propojit funkcionalitu ``HUD`` se skriptem ``Main``. To vyžaduje "
"několik přídavků ke scéně ``Main``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1174
msgid ""
"In the Node tab, connect the HUD's ``start_game`` signal to the "
"``new_game()`` function of the Main node by typing \"new_game\" in the "
"\"Receiver Method\" in the \"Connect a Signal\" window. Verify that the "
"green connection icon now appears next to ``func new_game()`` in the script."
msgstr ""
"Na kartě Uzel připojte signál ``start_game`` scény HUD k funkci "
"``new_game()`` Main uzlu zadáním \"new_game\" v \"Metoda příjemce\" v okně "
"\"Připojit signál\". Ověřte, že zelená ikonka připojení se nyní objeví ve "
"skriptu vedle ``func new_game()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1179
msgid ""
"In ``new_game()``, update the score display and show the \"Get Ready\" "
"message:"
msgstr ""
"V ``new_game()`` aktualizujte zobrazení skóre a zobrazte zprávu „Připravte "
"se“:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1194
msgid "In ``game_over()`` we need to call the corresponding ``HUD`` function:"
msgstr "V ``game_over()`` musíme zavolat odpovídající `HUD`` funkci:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1205
msgid ""
"Finally, add this to ``_on_ScoreTimer_timeout()`` to keep the display in "
"sync with the changing score:"
msgstr ""
"Nakonec přidejte toto do ``_on_ScoreTimer_timeout()``, aby byl displej "
"synchronizován s měnícím se skóre:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1217
msgid ""
"Now you're ready to play! Click the \"Play the Project\" button. You will be "
"asked to select a main scene, so choose ``Main.tscn``."
msgstr ""
"Nyní jste připraveni hrát! Klikněte na tlačítko „Přehrát projekt“. Budete "
"vyzváni k výběru hlavní scény, takže zvolte ``Main.tscn``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1221
msgid "Removing old creeps"
msgstr "Odstranění starých nepřátel"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1223
msgid ""
"If you play until \"Game Over\" and then start a new game right away, the "
"creeps from the previous game may still be on the screen. It would be better "
"if they all disappeared at the start of a new game. We just need a way to "
"tell *all* the mobs to remove themselves. We can do this with the \"group\" "
"feature."
msgstr ""
"Pokud budete hrát až do „Game Over“ a ihned poté zahájíte novou hru, můžou "
"se na obrazovce stále zobrazovat nepřátelé z předchozí hry. Bylo by lepší, "
"kdyby všichni zmizeli na začátku hry nové. Potřebujeme jen způsob, jak říct "
"všem nepřátelům, aby zmizeli. Můžeme to udělat pomocí funkcionality "
"„skupina“."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1228
msgid ""
"In the ``Mob`` scene, select the root node and click the \"Node\" tab next "
"to the Inspector (the same place where you find the node's signals). Next to "
"\"Signals\", click \"Groups\" and you can type a new group name and click "
"\"Add\"."
msgstr ""
"Ve scéně ``Mob`` vyberte kořenový uzel a klikněte na kartu \"Uzel\" vedle "
"Inspektoru (na stejném místě, kde najdete signály uzlu). Vedle položky "
"\"Signály\" klikněte na \"Skupiny\" a můžete zadat nový název skupiny a "
"kliknout na tlačítko \"Přidat\"."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1234
msgid ""
"Now all mobs will be in the \"mobs\" group. We can then add the following "
"line to the ``game_over()`` function in ``Main``:"
msgstr ""
"Nyní budou všechny davy ve skupině „mobs“. K funkci ``game_over()`` v "
"``Main`` pak můžeme přidat následující řádek:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1247
msgid ""
"The ``call_group()`` function calls the named function on every node in a "
"group - in this case we are telling every mob to delete itself."
msgstr ""
"Funkce ``call_group()`` volá pojmenovanou funkci na každém uzlu ve skupině - "
"v tomto případě říkáme každému nepříteli, aby se sám odstranil."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1251
msgid "Finishing up"
msgstr "Dokončení"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1253
msgid ""
"We have now completed all the functionality for our game. Below are some "
"remaining steps to add a bit more \"juice\" to improve the game experience. "
"Feel free to expand the gameplay with your own ideas."
msgstr ""
"Nyní jsme dokončili všechny funkce pro naši hru. Níže uvádíme několik "
"zbývajících kroků pro přidání trochu více „šťávy“ pro zlepšení herního "
"zážitku. Nebojte se rozšířit hru o své vlastní nápady."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1258
msgid "Background"
msgstr "Pozadí"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1260
msgid ""
"The default gray background is not very appealing, so let's change its "
"color. One way to do this is to use a :ref:`ColorRect <class_ColorRect>` "
"node. Make it the first node under ``Main`` so that it will be drawn behind "
"the other nodes. ``ColorRect`` only has one property: ``Color``. Choose a "
"color you like and select \"Layout\" -> \"Full Rect\" so that it covers the "
"screen."
msgstr ""
"Výchozí šedé pozadí není příliš přitažlivé, změňte tedy jeho barvu. Jedním "
"ze způsobů, jak toho dosáhnout, je použít uzel :ref:`ColorRect "
"<class_ColorRect>`. Je to první uzel pod ``Main`` , takže bude nakreslen za "
"ostatními uzly. ``ColorRect`` má pouze jednu vlastnost: ``Color``. Vyberte "
"barvu, která se vám líbí, a vyberte \"Rozložení\" -> \"Úplný obdélník\" tak, "
"aby pokrýval celou obrazovku."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1266
msgid ""
"You could also add a background image, if you have one, by using a "
"``TextureRect`` node instead."
msgstr ""
"Můžete také, pokud jej máte, místo změny barvy přidat pomocí uzlu "
"``TextureRect`` na pozadí obrázek."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1270
msgid "Sound effects"
msgstr "Zvukové efekty"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1272
msgid ""
"Sound and music can be the single most effective way to add appeal to the "
"game experience. In your game assets folder, you have two sound files: "
"\"House In a Forest Loop.ogg\" for background music, and \"gameover.wav\" "
"for when the player loses."
msgstr ""
"Zvuk a hudba mohou být jediným efektivním způsobem, jak zvýšit přitažlivost "
"hry. Ve složce herních zdrojů máte dva zvukové soubory: „House in a Forest "
"Loop.ogg“ pro hudbu na pozadí a „gameover.wav“, kdy hráč prohraje."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1277
msgid ""
"Add two :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` nodes as children "
"of ``Main``. Name one of them ``Music`` and the other ``DeathSound``. On "
"each one, click on the ``Stream`` property, select \"Load\", and choose the "
"corresponding audio file."
msgstr ""
"Přidejte dva :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` uzly jako "
"podřízené uzlu ``Main``. Pojmenujte jednoho z nich ``Music`` a druhého "
"``DeathSound``. U každého z nich, klikněte na ``Stream`` vlastnost, vyberte "
"možnost \"Načíst\", a vyberte odpovídající zvukový soubor."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1282
msgid ""
"To play the music, add ``$Music.play()`` in the ``new_game()`` function and "
"``$Music.stop()`` in the ``game_over()`` function."
msgstr ""
"Chcete-li přehrát hudbu, přidejte ``$Music.play()`` do funkce ``new_game()`` "
"a ``$Music.stop()`` do funkce ``game_over()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1285
msgid "Finally, add ``$DeathSound.play()`` in the ``game_over()`` function."
msgstr "Nakonec přidejte do funkce ``game_over()`` ``$ DeathSound.play()``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1288
msgid "Keyboard shortcut"
msgstr "Klávesová zkratka"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1290
msgid ""
"Since the game is played with keyboard controls, it would be convenient if "
"we could also start the game by pressing a key on the keyboard. We can do "
"this with the \"Shortcut\" property of the ``Button`` node."
msgstr ""
"Protože se hra ovládá pomocí klávesnice, bylo by vhodné, kdybychom ji mohli "
"také spustit stisknutím klávesy na klávesnici. Můžeme to udělat pomocí "
"vlastnosti \"Shortcut\" v uzlu ``Button``."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1294
msgid ""
"In the ``HUD`` scene, select the ``StartButton`` and find its *Shortcut* "
"property in the Inspector. Select \"New Shortcut\" and click on the "
"\"Shortcut\" item. A second *Shortcut* property will appear. Select \"New "
"InputEventAction\" and click the new \"InputEventAction\". Finally, in the "
"*Action* property, type the name ``ui_select``. This is the default input "
"event associated with the spacebar."
msgstr ""
"Ve scéně ``HUD`` vyberte ``StartButton`` a najděte jeho vlastnost *Shortcut* "
"v Inspektoru. Vyberte „New shortcut“ a klikněte na položku „Shortcut“. "
"Zobrazí se druhá vlastnost *Shortcut*. Vyberte „Nový InputEventAction“ a "
"klikněte na nový „InputEventAction“. Nakonec do vlastnosti *Action* zadejte "
"název ``ui_select``. Toto je výchozí vstupní událost spojená s mezerníkem."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1302
msgid ""
"Now when the start button appears, you can either click it or press :kbd:"
"`Space` to start the game."
msgstr ""
"Nyní, když se objeví tlačítko Start, můžete na něj buď kliknout, nebo "
"stisknout :kbd:`Space` pro spuštění hry."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1306
msgid "Project files"
msgstr "Soubory projektu"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1311
msgid "You can find a completed version of this project at these locations:"
msgstr "Dokončenou verzi tohoto projektu naleznete na těchto místech:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1309
msgid "https://github.com/kidscancode/Godot3_dodge/releases"
msgstr "https://github.com/kidscancode/Godot3_dodge/releases"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1310
msgid "https://github.com/godotengine/godot-demo-projects"
msgstr "https://github.com/godotengine/godot-demo-projects"
