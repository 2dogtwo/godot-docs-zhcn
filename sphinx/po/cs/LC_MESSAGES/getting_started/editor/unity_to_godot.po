# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-04 16:27+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: cs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/editor/unity_to_godot.rst:8
msgid "From Unity to Godot Engine"
msgstr "Od Unity k Godot Enginu"

#: ../../docs/getting_started/editor/unity_to_godot.rst:10
msgid ""
"This guide provides an overview of Godot Engine from the viewpoint of a "
"Unity user, and aims to help you migrate your existing Unity experience into "
"the world of Godot."
msgstr ""
"Tento průvodce poskytuje přehled Godot Enginu z pohledu uživatele Unity a "
"jeho cílem je pomoci vám přenést vaše stávající zkušenosti s Unity do světa "
"Godotu."

#: ../../docs/getting_started/editor/unity_to_godot.rst:15
msgid ""
"This article talks about older versions of Unity. Nestable prefabs ('Nested "
"prefabs') were added to Unity 2018.3. Nestable prefabs are analogous to "
"Godot's scenes, and allow a more Godot-like approach to scene organization."
msgstr ""
"Tento článek pojednává o starších verzích Unity. Vnořitelné prefabrikáty "
"(\"Nested prefabs\") byly přidány do Unity 2018.3. Vnořitelné prefabs jsou "
"obdobou Godot scén a umožňují podobný přístup k organizaci scény jako v "
"Godot enginu."

#: ../../docs/getting_started/editor/unity_to_godot.rst:18
msgid "Differences"
msgstr "Rozdíly"

#: ../../docs/getting_started/editor/unity_to_godot.rst:21
msgid "Unity"
msgstr "Unity"

#: ../../docs/getting_started/editor/unity_to_godot.rst:21
msgid "Godot"
msgstr "Godot"

#: ../../docs/getting_started/editor/unity_to_godot.rst:23
msgid "License"
msgstr "Licence"

#: ../../docs/getting_started/editor/unity_to_godot.rst:23
msgid ""
"Proprietary, closed, free license with revenue caps and usage restrictions"
msgstr "Proprietární, uzavřená, bezplatná licence s omezením příjmů a použití"

#: ../../docs/getting_started/editor/unity_to_godot.rst:23
msgid "MIT license, free and fully open source without any restriction"
msgstr ""
"Licence MIT, svobodný a plně otevřený zdrojový kód bez jakýchkoli omezení"

#: ../../docs/getting_started/editor/unity_to_godot.rst:25
msgid "OS (editor)"
msgstr "OS (editor)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:25
msgid "Windows, macOS, Linux"
msgstr "Windows, macOS, Linux"

#: ../../docs/getting_started/editor/unity_to_godot.rst:25
msgid "Windows, macOS, X11 (Linux, \\*BSD)"
msgstr "Windows, macOS, X11 (Linux, \\*BSD)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:27
msgid "OS (export)"
msgstr "OS (export)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:27
msgid "**Desktop:** Windows, macOS, Linux"
msgstr "**Desktop:** Windows, macOS, Linux"

#: ../../docs/getting_started/editor/unity_to_godot.rst:28
msgid "**Mobile:** Android, iOS, Windows Phone, Tizen"
msgstr "**Mobilní zařízení:** Android, iOS, Windows Phone, Tizen"

#: ../../docs/getting_started/editor/unity_to_godot.rst:29
msgid "**Web:** WebAssembly or asm.js"
msgstr "** Web: ** WebAssembly nebo asm.js"

#: ../../docs/getting_started/editor/unity_to_godot.rst:30
msgid "**Consoles:** PS4, PS Vita, Xbox One, Xbox 360, Wii U, Nintendo 3DS"
msgstr "**Konzole:** PS4, PS Vita, Xbox One, Xbox 360, Wii U, Nintendo 3DS"

#: ../../docs/getting_started/editor/unity_to_godot.rst:31
msgid ""
"**VR:** Oculus Rift, SteamVR, Google Cardboard, PlayStation VR, Gear VR, "
"HoloLens"
msgstr ""
"**VR:** Oculus Rift, SteamVR, Google Cardboard, PlayStation VR, Gear VR, "
"HoloLens"

#: ../../docs/getting_started/editor/unity_to_godot.rst:32
msgid "**TV:** Android TV, Samsung SMART TV, tvOS"
msgstr "**TV:** Android TV, Samsung SMART TV, tvOS"

#: ../../docs/getting_started/editor/unity_to_godot.rst:27
msgid "**Desktop:** Windows, macOS, X11"
msgstr "**Desktop:** Windows, macOS, X11"

#: ../../docs/getting_started/editor/unity_to_godot.rst:28
msgid "**Mobile:** Android, iOS"
msgstr "**Mobilní zařízení:** Android, iOS"

#: ../../docs/getting_started/editor/unity_to_godot.rst:29
msgid "**Web:** WebAssembly"
msgstr "** Web: ** WebAssembly"

#: ../../docs/getting_started/editor/unity_to_godot.rst:30
msgid "**Console:** See :ref:`doc_consoles`"
msgstr "**Konzole:** Viz :ref:`doc_consoles`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:31
msgid "**VR:** Oculus Rift, SteamVR"
msgstr "**VR:** Oculus Rift, SteamVR"

#: ../../docs/getting_started/editor/unity_to_godot.rst:34
msgid "Scene system"
msgstr "Systém scény"

#: ../../docs/getting_started/editor/unity_to_godot.rst:34
msgid "Component/Scene (GameObject > Component)"
msgstr "Komponenta/scéna (GameObject > Komponenta)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:35
msgid "Prefabs"
msgstr "Prefabrikáty"

#: ../../docs/getting_started/editor/unity_to_godot.rst:34
msgid ""
":ref:`Scene tree and nodes <doc_scenes_and_nodes>`, allowing scenes to be "
"nested and/or inherit other scenes"
msgstr ""
":ref:`Strom scén a uzly <doc_scenes_and_nodes>`, umožňující vnořovat scény a/"
"nebo dědit jiné scény"

#: ../../docs/getting_started/editor/unity_to_godot.rst:37
msgid "Third-party tools"
msgstr "Nástroje třetích stran"

#: ../../docs/getting_started/editor/unity_to_godot.rst:37
msgid "Visual Studio or VS Code"
msgstr "Visual Studio nebo VS Code"

#: ../../docs/getting_started/editor/unity_to_godot.rst:37
msgid ":ref:`External editors are possible <doc_external_editor>`"
msgstr ":ref:`Externí editory jsou možné <doc_external_editor>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:38
msgid ":ref:`Android SDK for Android export <doc_exporting_for_android>`"
msgstr ":ref:`Android SDK pro Android export <doc_exporting_for_android>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:40
msgid "Notable advantages"
msgstr "Významné výhody"

#: ../../docs/getting_started/editor/unity_to_godot.rst:40
msgid "Huge community"
msgstr "Obrovská komunita"

#: ../../docs/getting_started/editor/unity_to_godot.rst:41
msgid "Large assets store"
msgstr "Velký obchod se zdroji"

#: ../../docs/getting_started/editor/unity_to_godot.rst:40
msgid "Scene System"
msgstr "Systém scény"

#: ../../docs/getting_started/editor/unity_to_godot.rst:41
msgid ":ref:`Animation Pipeline <doc_animations>`"
msgstr ":ref:`Animation Pipeline <doc_animations>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:42
msgid ":ref:`Easy to write Shaders <doc_shading_language>`"
msgstr ":ref:`Snadné psaní shaderů <doc_shading_language>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:43
msgid "Debug on Device"
msgstr "Ladění na zařízení"

#: ../../docs/getting_started/editor/unity_to_godot.rst:50
msgid "The editor"
msgstr "Editor"

#: ../../docs/getting_started/editor/unity_to_godot.rst:52
msgid ""
"Godot Engine provides a rich-featured editor that allows you to build your "
"games. The pictures below display the default layouts of both editors with "
"colored blocks to indicate common functionalities."
msgstr ""
"Godot Engine nabízí bohatě vybavený editor, který vám umožní vytvářet hry. "
"Níže uvedené obrázky zobrazují výchozí rozložení obou editorů s barevnými "
"bloky označujícími společné funkce."

#: ../../docs/getting_started/editor/unity_to_godot.rst:58
msgid ""
"While both editors may seem similar, there are many differences below the "
"surface. Both let you organize the project using the filesystem, but Godot's "
"approach is simpler with a single configuration file, minimalist text "
"format, and no metadata. This makes Godot more friendly to VCS systems, such "
"as Git, Subversion, or Mercurial."
msgstr ""
"Ačkoli se oba editory mohou zdát podobné, pod povrchem se skrývá mnoho "
"rozdílů. Oba umožňují organizovat projekt pomocí souborového systému, ale "
"Godotův přístup je jednodušší, má jediný konfigurační soubor, minimalistický "
"textový formát a žádná metadata. Díky tomu je Godot přátelštější k systémům "
"VCS, jako je Git, Subversion nebo Mercurial."

#: ../../docs/getting_started/editor/unity_to_godot.rst:63
msgid ""
"Godot's Scene panel is similar to Unity's Hierarchy panel but, as each node "
"has a specific function, the approach used by Godot is more visually "
"descriptive. It's easier to understand what a scene does at a glance."
msgstr ""
"Panel Scéna v Godotu je podobný panelu Hierarchie v Unity, ale vzhledem k "
"tomu, že každý uzel má specifickou funkci, je přístup použitý v Godotu "
"vizuálně popisnější. Je snazší na první pohled pochopit, co scéna dělá."

#: ../../docs/getting_started/editor/unity_to_godot.rst:67
msgid ""
"The Inspector in Godot is more minimal, it shows only properties. Thanks to "
"this, objects can expose more useful parameters to the user without having "
"to hide functionality in language APIs. As a plus, Godot allows animating "
"any of those properties visually. Changing colors, textures, enumerations, "
"or even links to resources in real-time is possible without needing to write "
"code."
msgstr ""
"Inspektor v Godotovi je více minimalistický, zobrazuje pouze vlastnosti. "
"Díky tomu mohou objekty uživateli odhalit více užitečných parametrů, aniž by "
"bylo nutné skrývat funkčnost v API jazyka. Jako plus Godot umožňuje vizuálně "
"animovat libovolnou z těchto vlastností. Měnit barvy, textury, výčty nebo "
"dokonce odkazy na zdroje v reálném čase je možné bez nutnosti psaní kódu."

#: ../../docs/getting_started/editor/unity_to_godot.rst:72
msgid ""
"The Toolbar at the top of the screen is similar in both editors, offering "
"control over project playback. Projects in Godot run in a separate window, "
"rather than inside the editor (but the tree and objects can still be "
"explored in the debugger window)."
msgstr ""
"Panel nástrojů v horní části obrazovky je v obou editorech podobný a nabízí "
"ovládání přehrávání projektu. Projekty v Godotu se spouštějí v samostatném "
"okně, nikoli uvnitř editoru (strom a objekty však lze stále zkoumat v okně "
"ladicího programu)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:76
msgid "This approach has several advantages:"
msgstr "Tento přístup má několik výhod:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:78
msgid ""
"Running the project and closing it is fast (Unity has to save, run the "
"project, close the project, and then reload the previous state)."
msgstr ""
"Spuštění projektu a jeho uzavření je rychlé (Unity musí projekt uložit, "
"spustit, zavřít a poté znovu načíst předchozí stav)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:79
msgid ""
"Live editing is a lot more useful because changes done to the editor take "
"effect immediately in the game and are not lost (nor have to be synced) when "
"the game is closed. This allows fantastic workflows, like creating levels "
"while you play them."
msgstr ""
"Živá editace je mnohem užitečnější, protože změny provedené v editoru se ve "
"hře projeví okamžitě a po zavření hry se neztratí (ani se nemusí "
"synchronizovat). To umožňuje fantastické pracovní postupy, například "
"vytváření úrovní během hraní."

#: ../../docs/getting_started/editor/unity_to_godot.rst:80
msgid "The editor is more stable because the game runs in a separate process."
msgstr "Editor je stabilnější, protože hra běží v samostatném procesu."

#: ../../docs/getting_started/editor/unity_to_godot.rst:81
msgid ""
"The running game can be explored from different angles by toggling the "
"\"Camera Override\" button in the editor viewport, which will switch between "
"using the editor view and the game camera view."
msgstr ""
"Probíhající hru lze prozkoumat z různých úhlů přepnutím tlačítka \"Camera "
"Override\" v okně editoru, které přepíná mezi pohledem editoru a pohledem "
"herní kamery."

#: ../../docs/getting_started/editor/unity_to_godot.rst:83
msgid ""
"Finally, Godot's top toolbar includes a menu for remote debugging. These "
"options allow deployment to a device (connected phone, tablet, or browser "
"via HTML5), and debugging/live editing on it after the game is exported."
msgstr ""
"A konečně, horní panel nástrojů Godotu obsahuje nabídku pro vzdálené ladění. "
"Tyto možnosti umožňují nasazení na zařízení (připojený telefon, tablet nebo "
"prohlížeč prostřednictvím HTML5) a ladění/živé úpravy přímo v něm po tom co "
"je hra exportována."

#: ../../docs/getting_started/editor/unity_to_godot.rst:88
msgid "The scene system"
msgstr "Systém scén"

#: ../../docs/getting_started/editor/unity_to_godot.rst:90
msgid ""
"This is the most important difference between Unity and Godot and the "
"favorite feature of most Godot users."
msgstr ""
"To je nejdůležitější rozdíl mezi Unity a Godotem a oblíbená funkce většiny "
"uživatelů Godotu."

#: ../../docs/getting_started/editor/unity_to_godot.rst:92
msgid ""
"Working on a 'level' in Unity usually means embedding all the required "
"assets in a scene and linking them together with components and scripts."
msgstr ""
"Práce na \"úrovni\" v Unity obvykle znamená vložení všech potřebných zdrojů "
"do scény a jejich propojení pomocí komponent a skriptů."

#: ../../docs/getting_started/editor/unity_to_godot.rst:95
msgid ""
"Godot's scene system is superficially similar to Unity. A 'level' consists "
"of a collection of nodes, each with its own purpose: Sprite, Mesh, Light, "
"etc. However, in Godot the nodes are arranged in a tree. Each node can have "
"multiple children, which makes each a subscene of the main scene. This means "
"you can compose a whole scene with different scenes stored in different "
"files."
msgstr ""
"Systém scén Godot je na první pohled podobný systému Unity. Úroveň se skládá "
"ze skupin uzlů, z nichž každý má svůj vlastní účel: Sprite, Mesh, Light atd. "
"V Godotu jsou však uzly uspořádány do stromu. Každý uzel může mít více "
"potomků, což z každého z nich dělá dílčí scénu hlavní scény. To znamená, že "
"celou scénu můžete složit z různých scén uložených v různých souborech."

#: ../../docs/getting_started/editor/unity_to_godot.rst:98
msgid ""
"For example, think of a platformer level. You would compose it with multiple "
"elements:"
msgstr ""
"Představte si například úroveň plošinovky. Sestavíte ji z několika prvků:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:100
msgid "Bricks"
msgstr "Cihly"

#: ../../docs/getting_started/editor/unity_to_godot.rst:101
msgid "Coins"
msgstr "Mince"

#: ../../docs/getting_started/editor/unity_to_godot.rst:102
msgid "The player"
msgstr "Hráč"

#: ../../docs/getting_started/editor/unity_to_godot.rst:103
msgid "The enemies"
msgstr "Nepřátelé"

#: ../../docs/getting_started/editor/unity_to_godot.rst:105
msgid ""
"In Unity, you would put all the GameObjects in the scene: the player, "
"multiple instances of enemies, bricks everywhere to form the ground of the "
"level and then multiple instances of coins all over the level. You would "
"then add various components to each element to link them and add logic in "
"the level: For example, you'd add a BoxCollider2D to all the elements of the "
"scene so that they can collide. This principle is different in Godot."
msgstr ""
"V Unity byste do scény umístili všechny herní objekty: hráče, několik "
"instancí nepřátel, všude cihly, které tvoří základ úrovně, a pak několik "
"instancí mincí po celé úrovni. Ke každému prvku byste pak přidali různé "
"komponenty, abyste je propojili a přidali logiku do úrovně: Například byste "
"ke všem prvkům scény přidali BoxCollider2D, aby se mohly srážet. V Godotu je "
"tento princip odlišný."

#: ../../docs/getting_started/editor/unity_to_godot.rst:110
msgid ""
"In Godot, you would split your whole scene into three separate, smaller "
"scenes, and instance them in the main scene."
msgstr ""
"V Godotu byste celou scénu rozdělili na tři samostatné, menší scény a v "
"hlavní scéně vytvořili jejich instance."

#: ../../docs/getting_started/editor/unity_to_godot.rst:112
msgid "**A scene for the Player alone.**"
msgstr "**Scéna pouze pro hráče.**"

#: ../../docs/getting_started/editor/unity_to_godot.rst:114
msgid ""
"Consider the player as an element we'd like to use in different parent "
"scenes (for instance 'level' scenes). In our case, the player element needs "
"at least an AnimatedSprite node. This node contains the sprite textures "
"necessary for various animations (for example, a walking animation)."
msgstr ""
"Uvažujte o hráči jako o prvku, který bychom chtěli používat v různých "
"nadřazených scénách (například ve scénách \"úrovní\"). V našem případě "
"potřebuje prvek hráč alespoň uzel AnimatedSprite. Tento uzel obsahuje sprite "
"textury potřebné pro různé animace (například animaci chůze)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:116
msgid "**A scene for the Enemy.**"
msgstr "** Scéna pro nepřítele. **"

#: ../../docs/getting_started/editor/unity_to_godot.rst:118
msgid ""
"An enemy is also an element we'd like to use in several scenes. It's almost "
"the same as the Player node. The only differences are the script (it needs "
"'AI' routines to generate the enemy's behavior) and the sprite textures used "
"by the AnimatedSprite node."
msgstr ""
"Nepřítel je také prvek, který bychom rádi použili v několika scénách. Je "
"téměř stejný jako uzel Hráč. Jediné rozdíly jsou ve skriptu (potřebuje "
"rutiny \"AI\" pro generování chování nepřítele) a sprite texturách, které "
"používá uzel AnimatedSprite."

#: ../../docs/getting_started/editor/unity_to_godot.rst:122
msgid "**A Level scene.**"
msgstr "**Scéna úrovně.**"

#: ../../docs/getting_started/editor/unity_to_godot.rst:124
msgid ""
"A Level scene is composed of Bricks (for platforms), Coins (for the player "
"to collect) and a number of instances of the Enemy scene. Each instance is a "
"node in the Level scene tree. These instances are separate enemies, which "
"initially have shared behavior and appearance as defined in the Enemy scene. "
"You can set different properties for each Enemy node (to change its color, "
"for example)."
msgstr ""
"Scéna úrovně se skládá z cihel (pro plošinky), mincí (které hráč sbírá) a "
"několika instancí scény nepřítele. Každá instance je uzlem ve stromu scény "
"Úroveň. Tyto instance jsou samostatní nepřátelé, kteří mají zpočátku "
"společné chování a vzhled definovaný ve scéně Nepřítel. Každému uzlu scény "
"Nepřítel můžete nastavit různé vlastnosti (například změnit jeho barvu)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:128
msgid ""
"4. **A Main scene.** The Main scene would be composed of one root node with "
"2 children: a Player instance node, and a Level instance node. The root node "
"can be anything, generally a \"root\" type such as \"Node\" which is the "
"most global type, or \"Node2D\" (root type of all 2D-related nodes), "
"\"Spatial\" (root type of all 3D-related nodes) or \"Control\" (root type of "
"all GUI-related nodes)."
msgstr ""
"4. **Hlavní scéna.** Hlavní scéna by se skládala z jednoho kořenového uzlu "
"se dvěma potomky: uzlem instance Hráč a uzlem instance Úroveň. Kořenovým "
"uzlem může být cokoli, obecně \"kořenový\" typ, například \"Node\", což je "
"nejglobálnější typ, nebo \"Node2D\" (kořenový typ všech uzlů souvisejících s "
"2D), \"Spatial\" (kořenový typ všech uzlů souvisejících s 3D) nebo \"Control"
"\" (kořenový typ všech uzlů souvisejících s grafickým uživatelským "
"rozhraním)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:134
msgid ""
"As you can see, every scene is organized as a tree. The same goes for nodes' "
"properties: you don't *add* a collision component to a node to make it "
"collidable like Unity does. Instead, you make this node a *child* of a new "
"specific node that has collision properties. Godot features various "
"collision types nodes, depending on the usage (see the :ref:`Physics "
"introduction <doc_physics_introduction>`)."
msgstr ""
"Jak vidíte, každá scéna je uspořádána jako strom. Totéž platí pro vlastnosti "
"uzlů: k uzlu nepřidáváte kolizní komponentu, aby byl kolizní, jako to dělá "
"Unity. Místo toho z tohoto uzlu uděláte *potomka* nového specifického uzlu, "
"který má kolizní vlastnosti. Godot obsahuje různé typy kolizních uzlů v "
"závislosti na použití (viz :ref:`Physics introduction "
"<doc_physics_introduction>`)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:139
msgid ""
"What are the advantages of this system? Wouldn't this system potentially "
"increase the depth of the scene tree? And doesn't Unity already allow you to "
"organize GameObjects by putting them inside empty GameObjects?"
msgstr ""
"Jaké jsou výhody tohoto systému? Nezvýšil by tento systém potenciálně "
"složitost stromu scény? A neumožňuje už Unity organizovat GameObjects tím, "
"že je umístí dovnitř prázdných GameObjects?"

#: ../../docs/getting_started/editor/unity_to_godot.rst:141
msgid ""
"Godot's system is closer to the well-known object-oriented paradigm: Godot "
"provides a number of nodes which are not clearly \"Game Objects\", but they "
"provide their children with their own capabilities: this is inheritance."
msgstr ""
"Godotův systém se blíží známému objektově orientovanému paradigmatu: Godot "
"poskytuje řadu uzlů, které nejsou jednoznačně \"herními objekty\", ale "
"poskytují svým potomkům vlastní unikátní schopnosti: jedná se o dědičnost."

#: ../../docs/getting_started/editor/unity_to_godot.rst:142
msgid ""
"Godot allows the extraction of a subtree of a scene to make it a scene of "
"its own. So if a scene tree gets too deep, it can be split into smaller "
"subtrees. This is better for reusability, as you can include any subtree as "
"a child of any node. Putting multiple GameObjects in an empty GameObject in "
"Unity does not provide the same functionality."
msgstr ""
"Godot umožňuje extrahovat podstrom scény a vytvořit z něj vlastní scénu. "
"Pokud je tedy strom scény příliš hluboký, lze jej rozdělit na menší "
"podstromy. To je lepší pro opakované využití, protože můžete zahrnout "
"libovolný podstrom jako potomka libovolného uzlu. Vložení více herních "
"objektů do prázdného herního objektu v Unity stejnou funkci neposkytuje."

#: ../../docs/getting_started/editor/unity_to_godot.rst:145
msgid "Project organization"
msgstr "Organizace projektu"

#: ../../docs/getting_started/editor/unity_to_godot.rst:149
msgid ""
"There is no perfect project architecture. Any architecture can be made to "
"work in either Unity and Godot."
msgstr ""
"Neexistuje dokonalá architektura projektu. Jakákoli architektura může "
"fungovat jak v Unity, tak v Godotu."

#: ../../docs/getting_started/editor/unity_to_godot.rst:152
msgid ""
"However, a common architecture for Unity projects is to have one Assets "
"folder in the root directory that contains various folders, one per type of "
"asset: Audio, Graphics, Models, Materials, Scripts, Scenes, and so on."
msgstr ""
"Běžná architektura projektů Unity však spočívá v tom, že v kořenovém "
"adresáři je jedna složka Assets, která obsahuje různé složky, jednu pro "
"každý typ zdroje: Audio, Grafika, Modely, Materiály, Skripty, Scény atd."

#: ../../docs/getting_started/editor/unity_to_godot.rst:155
msgid ""
"Since Godot allows splitting scenes into smaller scenes, each scene and "
"subscene existing as a file in the project, we recommend organizing your "
"project a bit differently. This wiki provides a page for this: :ref:"
"`doc_project_organization`."
msgstr ""
"Vzhledem k tomu, že Godot umožňuje rozdělit scény na menší scény, přičemž "
"každá scéna a dílčí scéna existuje v projektu jako samostatný soubor, "
"doporučujeme uspořádat projekt trochu jinak. Tato wiki k tomu poskytuje "
"stránku: :ref:`doc_project_organization`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:160
msgid "Where are my prefabs?"
msgstr "Kde jsou mé prefabrikáty?"

#: ../../docs/getting_started/editor/unity_to_godot.rst:162
msgid ""
"A prefab as provided by Unity is a 'template' element of the scene. It is "
"reusable, and each instance of the prefab that exists in the scene has an "
"existence of its own, but all of them have the same properties as defined by "
"the prefab."
msgstr ""
"Prefabrikát poskytovaný Unity je \"šablonový\" prvek scény. Je opakovaně "
"použitelný a každá instance prefabu, která existuje ve scéně, existuje "
"samostatně, ale všechny mají stejné vlastnosti definované prefabem."

#: ../../docs/getting_started/editor/unity_to_godot.rst:166
msgid ""
"Godot does not provide prefabs as such, but the same functionality is "
"provided by its scene system: The scene system is organized as a tree. Godot "
"allows you to save any subtree of a scene as a scene file. This new scene "
"can then be instanced as many times as you want, as a child of any node. Any "
"change you make to this new, separate scene will be applied to its "
"instances. However, any change you make to the instance will not have any "
"impact on the 'template' scene."
msgstr ""
"Godot neposkytuje prefabrikáty jako takové, ale stejnou funkci poskytuje "
"jeho systém scén: Systém scén je uspořádán jako strom. Godot umožňuje uložit "
"libovolný podstrom scény jako soubor scény. Tuto novou scénu pak můžete "
"libovolně mnohokrát instancovat jako potomka libovolného uzlu. Jakákoli "
"změna, kterou v této nové samostatné scéně provedete, se použije na její "
"instance. Jakákoli změna, kterou provedete v instanci, však nebude mít žádný "
"dopad na \"šablonovou\" scénu."

#: ../../docs/getting_started/editor/unity_to_godot.rst:173
msgid ""
"To be precise, you can modify the parameters of an instance in the Inspector "
"panel. The nodes that compose this instance are initially locked. You can "
"unlock them if you need to by right-clicking the instance in the Scene tree "
"and selecting \"Editable children\" in the menu. You don't need to do this "
"to add *new* child nodes to this node. Remember that any new children will "
"belong to the instance, not to the 'template' scene on disk. If you want to "
"add new children to every instance of your 'template' scene, then you should "
"add them in the 'template' scene."
msgstr ""
"Přesněji řečeno, parametry instance můžete upravit v panelu Inspector. Uzly, "
"které tuto instanci tvoří, jsou zpočátku uzamčeny. V případě potřeby je "
"můžete odemknout kliknutím pravým tlačítkem myši na instanci ve stromu scény "
"a výběrem možnosti \"Editovatelné děti\" v nabídce. Pro přidání *nových* "
"podřízených uzlů k tomuto uzlu to nemusíte dělat. Nezapomeňte, že všechny "
"nové děti budou patřit k instanci, nikoli k \"šabloně\" scény na disku. "
"Pokud chcete přidat nové děti do každé instance scény \"šablony\", pak byste "
"je měli přidat do scény \"šablony\"."

#: ../../docs/getting_started/editor/unity_to_godot.rst:183
msgid "Glossary correspondence"
msgstr "Glosář shod"

#: ../../docs/getting_started/editor/unity_to_godot.rst:185
msgid "GameObject -> Node"
msgstr "GameObject -> Uzel"

#: ../../docs/getting_started/editor/unity_to_godot.rst:186
msgid "Add a component -> Inheriting"
msgstr "Přidání komponenty -> Dědičnost"

#: ../../docs/getting_started/editor/unity_to_godot.rst:187
msgid "Prefab -> Reusable Scene file"
msgstr "Prefabrikát -> Soubor opakovaně použitelné scény"

#: ../../docs/getting_started/editor/unity_to_godot.rst:191
msgid "Scripting: GDScript, C# and Visual Script"
msgstr "Skriptování: GDScript, C# a Visual Script"

#: ../../docs/getting_started/editor/unity_to_godot.rst:194
msgid "Design"
msgstr "Design"

#: ../../docs/getting_started/editor/unity_to_godot.rst:196
msgid ""
"Unity supports C#. C# benefits from its integration with Visual Studio and "
"has desirable features such as static typing."
msgstr ""
"Unity podporuje jazyk C#. C# těží z integrace s Visual Studiem a má žádoucí "
"vlastnosti, jako je statické typování."

#: ../../docs/getting_started/editor/unity_to_godot.rst:198
msgid ""
"Godot provides its own scripting language, :ref:`GDScript <doc_scripting>` "
"as well as support for :ref:`Visual Script <toc-learn-scripting-"
"visual_script>` and :ref:`C# <doc_c_sharp>`. GDScript borrows its syntax "
"from Python, but is not related to it. If you wonder about the reasoning for "
"a custom scripting language, please read the :ref:`doc_gdscript` and :ref:"
"`doc_faq` pages. GDScript is strongly attached to the Godot API and doesn't "
"take long to learn: Between one evening for an experienced programmer and a "
"week for a complete beginner."
msgstr ""
"Godot poskytuje vlastní skriptovací jazyk :ref:`GDScript <doc_scripting>` a "
"také podporu pro :ref:`Visual Script <toc-learn-scripting-visual_script>` a :"
"ref:`C# <doc_c_sharp>`. GDScript si vypůjčuje syntaxi z jazyka Python, ale "
"není s ním nijak spřízněn. Pokud vás zajímají důvody pro vlastní skriptovací "
"jazyk, přečtěte si stránky :ref:`doc_gdscript` a :ref:`doc_faq`. GDScript je "
"pevně spjat s rozhraním API Godot a jeho naučení nezabere mnoho času: Pro "
"zkušeného programátora je to jeden večer, pro úplného začátečníka týden."

#: ../../docs/getting_started/editor/unity_to_godot.rst:204
msgid ""
"Unity allows you to attach as many scripts as you want to a GameObject. Each "
"script adds a behavior to the GameObject: For example, you can attach a "
"script so that it reacts to the player's controls, and another that controls "
"its specific game logic."
msgstr ""
"Unity umožňuje připojit k hernímu objektu libovolný počet skriptů. Každý "
"skript přidává k objektu GameObject určité chování: Můžete například "
"připojit skript, který bude reagovat na ovládání hráče, a další, který bude "
"ovládat jeho specifickou herní logiku."

#: ../../docs/getting_started/editor/unity_to_godot.rst:208
msgid ""
"In Godot, you can only attach one script per node. You can use either an "
"external GDScript file or include the script directly in the node. If you "
"need to attach more scripts to one node, then you may consider two "
"solutions, depending on your scene and on what you want to achieve:"
msgstr ""
"V systému Godot můžete k jednomu uzlu připojit pouze jeden skript. Můžete "
"použít buď externí soubor GDScript, nebo skript vložit přímo do uzlu. Pokud "
"potřebujete k jednomu uzlu připojit více skriptů, můžete zvážit dvě řešení v "
"závislosti na vaší scéně a na tom, čeho chcete dosáhnout:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:212
msgid ""
"either add a new node between your target node and its current parent, then "
"add a script to this new node."
msgstr ""
"buď přidejte nový uzel mezi cílový uzel a jeho současného rodiče, a pak do "
"tohoto nového uzlu přidejte skript."

#: ../../docs/getting_started/editor/unity_to_godot.rst:213
msgid ""
"or, you can split your target node into multiple children and attach one "
"script to each of them."
msgstr ""
"nebo můžete cílový uzel rozdělit na více podřízených uzlů a ke každému z "
"nich připojit jeden skript."

#: ../../docs/getting_started/editor/unity_to_godot.rst:215
msgid ""
"As you can see, it can be easy to turn a scene tree to a mess. Consider "
"splitting any complicated scene into multiple, smaller branches."
msgstr ""
"Jak vidíte, může se snadno stát, že se strom na scéně změní v nepořádek. "
"Zvažte rozdělení každé složité scény na více menších větví."

#: ../../docs/getting_started/editor/unity_to_godot.rst:218
msgid "Connections: groups and signals"
msgstr "Spojení: skupiny a signály"

#: ../../docs/getting_started/editor/unity_to_godot.rst:220
msgid ""
"You can control nodes by accessing them via script and calling built-in or "
"user-defined functions on them. You can also place nodes in a group and call "
"functions on all nodes in this group. See more in the :ref:`scripting "
"documentation <doc_scripting_continued>`."
msgstr ""
"Uzly můžete ovládat tak, že k nim přistupujete pomocí skriptu a voláte na "
"nich vestavěné nebo uživatelem definované funkce. Uzly můžete také umístit "
"do skupiny a volat funkce na všechny uzly v této skupině. Více informací "
"najdete v :ref:`dokumentaci skriptování <doc_scripting_continued>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:225
msgid ""
"Nodes can send a signal when a specified action occurs. A signal can be set "
"to call any function. You can define custom signals and specify when they "
"are triggered. See more in the :ref:`signals documentation "
"<doc_gdscript_signals>`."
msgstr ""
"Uzly mohou odeslat signál, když dojde k určité akci. Signál lze nastavit "
"tak, aby volal libovolnou funkci. Můžete definovat vlastní signály a určit, "
"kdy se spustí. Více informací najdete v :ref:`dokumentaci k signálům "
"<doc_gdscript_signals>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:230
msgid "Script serialization"
msgstr "Serializace skriptů"

#: ../../docs/getting_started/editor/unity_to_godot.rst:232
msgid "Unity can handle script serialization in two ways:"
msgstr "Unity může serializaci skriptů zpracovávat dvěma způsoby:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:234
msgid ""
"Implicit: All public fields in a class are automatically serialized if the "
"type is a serializable type (``Dictionary`` is not serializable)."
msgstr ""
"Implicitní: Všechna veřejná pole ve třídě jsou automaticky serializována, "
"pokud je typ serializovatelný typ (``Slovník`` není serializovatelný)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:235
msgid ""
"Explicit: Non-public fields can be serialized using the ``[SerializeField]`` "
"attribute."
msgstr ""
"Explicitní: Neveřejná pole lze serializovat pomocí atributu "
"``[SerializeField]``."

#: ../../docs/getting_started/editor/unity_to_godot.rst:237
msgid ""
"Godot also has a built-in script serialization system, but it works only "
"explicitly. You can serialize any serializable type (:ref:`built-in and "
"various engine types <doc_binary_serialization_api>`, including :ref:"
"`class_Array` and :ref:`class_Dictionary`) using the ``export`` keyword. See "
"the :ref:`exports documentation <doc_gdscript_exports>` for details."
msgstr ""
"Godot má také zabudovaný systém serializace skriptů, ale funguje pouze "
"explicitně. Pomocí klíčového slova ``exportovat`` můžete serializovat "
"libovolný serializovatelný typ (:ref:` vestavěný a různé typy enginu "
"<doc_binary_serialization_api>`, včetně :ref:`class_Array` a :ref:"
"`class_Dictionary``). Podrobnosti naleznete v dokumentaci :ref:`exports "
"<doc_gdscript_exports>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:242
msgid ""
"Unity also has a data type called ``ScriptableObject`` used to serialize "
"custom asset objects. Its equivalent in Godot is the base class for all "
"resources: :ref:`class_Resource`. Creating a script that inherits :ref:"
"`class_Resource` will allow you to create custom serializable objects. More "
"information about resources can be found :ref:`here <doc_resources>`."
msgstr ""
"Unity má také datový typ ``ScriptableObject``, který slouží k serializaci "
"vlastních objektů zdrojů. Jeho ekvivalent v Godotu je základní třídou pro "
"všechny prostředky: :ref:`class_Resource`. Vytvoření skriptu, který dědí :"
"ref:`class_Resource`, vám umožní vytvářet vlastní serializovatelné objekty. "
"Více informací o zdrojích naleznete :ref:`zde <doc_resources>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:247
msgid "Using Godot in C++"
msgstr "Použití Godota v jazyce C++"

#: ../../docs/getting_started/editor/unity_to_godot.rst:249
msgid ""
"Godot allows you to develop your project directly in C++ by using its API, "
"which is not possible with Unity at the moment. As an example, you can "
"consider Godot Engine's editor as a \"game\" written in C++ using the Godot "
"API."
msgstr ""
"Godot umožňuje vyvíjet projekt přímo v jazyce C++ pomocí svého rozhraní API, "
"což Unity v současné době nedovoluje. Například můžete považovat editor "
"Godot Engine za \"hru\" napsanou v C++ pomocí Godot API."

#: ../../docs/getting_started/editor/unity_to_godot.rst:252
msgid ""
"If you are interested in using Godot in C++, you may want to start reading "
"the :ref:`Developing in C++ <doc_introduction_to_godot_development>` page."
msgstr ""
"Pokud máte zájem o používání Godotu v C++, můžete začít čtením :ref:`Vývoj v "
"C++ <doc_introduction_to_godot_development>`."
