# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-15 18:11+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/audio/audio_streams.rst:4
msgid "Audio streams"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:7
msgid "Introduction"
msgstr "Introduzione"

#: ../../docs/tutorials/audio/audio_streams.rst:9
msgid ""
"As you might have already read in the :ref:`Audio Buses Tutorial<doc_audio-"
"buses>`, sound is sent to each bus via an AudioStreamPlayer."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:12
msgid ""
"There are different kinds of AudioStreamPlayer. Each one loads an "
"AudioStream and plays it back."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:16
msgid "AudioStream"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:18
msgid ""
"An audio stream is an abstract object that emits sound. The sound can come "
"from many places, but most commonly from the filesystem. Audio files, such "
"as .wav or .ogg, can be loaded as AudioStreams and placed inside an "
"AudioStreamPlayer."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:22
msgid ""
"Here is a comparison of the two types of file to help you choose the one "
"that fits your use case best:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:24
msgid ""
"Audio files of type *.wav* are quite large, but use little CPU power to play "
"back. Hundreds of them can be played simultaneously with little impact to "
"performance. This format is usually best for short sound effects."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:25
msgid ""
"Audio files of type *.ogg* are much smaller, but use considerably more CPU "
"power to play back, so only a few can be played back (especially on "
"mobile!). This format works well for music, long sound effect sequences, and "
"voice at relatively low bitrates."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:27
msgid ""
"Keep in mind neither .wav nor .ogg usually contains looping information. If "
"looping is desired it must be set up using the import options of each file "
"type:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:31
msgid ""
"There are other types of AudioStreamPlayer, such as AudioStreamRandomPitch. "
"This one makes a random adjustment to the sound's pitch every time it's "
"played back. This can be helpful for adding interest to sounds that are "
"played back often."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:34
msgid "AudioStreamPlayer"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:36
msgid ""
"This is the standard stream player; it can play to any bus. In 5.1 sound, it "
"can send to stereo mix or front speakers."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:39
msgid "AudioStreamPlayer2D"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:41
msgid ""
"This is a variant of AudioStreamPlayer, but emits sound in a 2D positional "
"environment. When close to the left of the screen, the panning will go left. "
"When close to the right side, it will go right."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:43
msgid ""
"Area2Ds can be used to divert sound from any AudioStreamPlayer2Ds they "
"contain to specific buses. This makes it possible to create buses with "
"different reverb or sound qualities to handle action happening in a "
"particular parts of your game world."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:48
msgid "AudioStreamPlayer3D"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:50
msgid ""
"This is a variant of AudioStreamPlayer, but emits sound in a 3D positional "
"environment. Depending on the location of the player relative to the screen, "
"it can position sound in Stereo, 5.1 or 7.1 depending on the chosen audio "
"setup."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:53
msgid ""
"Similar to AudioStreamPlayer2D, an Area can divert the sound to an audio bus."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:57
msgid ""
"Unlike for 2D, the 3D version of AudioStreamPlayer has a few more advanced "
"options:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:60
msgid "Reverb buses"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:62
msgid ""
"Godot allows 3D Audio Streams that enter a specific *Area* to send dry and "
"wet audio to separate buses. This is useful when you have several reverb "
"configurations for different types of rooms. This is done by enabling this "
"type of reverb in the *Reverb Bus* section of *Area* properties:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:67
msgid ""
"At the same time, a special bus layout is created where each area receives "
"the reverb info from each area. A Reverb effect needs to be created and "
"configured in each reverb bus to complete the setup for the desired effect:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:71
msgid ""
"The Area Reverb Bus section also has a parameter named \"Uniformity\". Some "
"types of rooms bounce sounds more than others (like a warehouse), so "
"reverberation can be heard almost uniformly across the room even though the "
"source may be far away. Playing around with this parameter can simulate that "
"effect."
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:75
msgid "Doppler"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:77
msgid ""
"When the relative velocity between an emitter and listener changes, this is "
"perceived as an increase or decrease in the pitch of the emitted sound. "
"Godot can track changes in velocities of *AudioStreamPlayer3D* or *Camera*. "
"Both have this property, which must be enabled manually:"
msgstr ""

#: ../../docs/tutorials/audio/audio_streams.rst:82
msgid ""
"Enable it by setting it depending on how objects will be moved (whether on "
"regular *process* or *physics_process* step) and the tracking will happen "
"automatically."
msgstr ""
