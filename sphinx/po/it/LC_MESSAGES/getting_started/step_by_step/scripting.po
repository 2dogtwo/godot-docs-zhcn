# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-07-25 10:21+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/scripting.rst:4
msgid "Scripting"
msgstr "Scripting"

#: ../../docs/getting_started/step_by_step/scripting.rst:7
msgid "Introduction"
msgstr "Introduzione"

#: ../../docs/getting_started/step_by_step/scripting.rst:9
msgid ""
"Before Godot 3.0, the only choice for scripting a game was to use :ref:"
"`GDScript<doc_gdscript>`. Nowadays, Godot has four (yes, four!) official "
"languages and the ability to add extra scripting languages dynamically!"
msgstr ""
"Prima di Godot 3.0, l'unico modo per scriptare un gioco era usare il  :ref:"
"`GDScript<doc_gdscript>`. Oggi, Godot ha quattro (esatto, quattro!) "
"linguaggi di programmazione ufficiali, e la possibilità di aggiungerne altri "
"dinamicamente!"

#: ../../docs/getting_started/step_by_step/scripting.rst:13
msgid ""
"This is great, mostly due to the large amount of flexibility provided, but "
"it also makes our work supporting languages more difficult."
msgstr ""
"Questo è fantastico, soprattutto a causa della grande flessibilità fornita, "
"ma rende anche il nostro lavoro per supportare i linguaggi più complicato."

#: ../../docs/getting_started/step_by_step/scripting.rst:16
msgid ""
"The \"main\" languages in Godot, though, are GDScript and VisualScript. The "
"main reason to choose them is their level of integration with Godot, as this "
"makes the experience smoother; both have slick editor integration, while C# "
"and C++ need to be edited in a separate IDE. If you are a big fan of "
"statically typed languages, go with C# and C++ instead."
msgstr ""
"I linguaggi \"principali\" in Godot, comunque, sono GDScript e VisualScript. "
"Il motivo principale per sceglierli è il loro livello di integrazione con "
"Godot, in quanto ciò rende l'esperienza più fluida: entrambi hanno una "
"brillante integrazione con l'editor, mentre C# e C++ hanno bisogno di un IDE "
"esterno. Se sei un sostenitore dei linguaggi staticamente tipati, prosegui "
"con C# e C++."

#: ../../docs/getting_started/step_by_step/scripting.rst:22
msgid "GDScript"
msgstr "GDScript"

#: ../../docs/getting_started/step_by_step/scripting.rst:24
msgid ""
":ref:`GDScript<doc_gdscript>` is, as mentioned above, the main language used "
"in Godot. Using it has some positive points compared to other languages due "
"to its high integration with Godot:"
msgstr ""
"Il :ref:`GDScript<doc_gdscript>` è, come menzionato sopra, il linguaggio "
"principalmente usato in Godot. Utilizzarlo ha alcuni vantaggi rispetto ad "
"altri linguaggi, data la sua forte integrazione con Godot:"

#: ../../docs/getting_started/step_by_step/scripting.rst:28
msgid ""
"It's simple, elegant, and designed to be familiar for users of other "
"languages such as Lua, Python, Squirrel, etc."
msgstr ""
"È semplice, elegante, e studiato per essere familiare agli utilizzatori di "
"altri linguaggi come Lua, Python, Squirrel, ecc."

#: ../../docs/getting_started/step_by_step/scripting.rst:29
msgid "Loads and compiles blazingly fast."
msgstr "Viene caricato e compilato alla velocità della luce."

#: ../../docs/getting_started/step_by_step/scripting.rst:30
msgid ""
"The editor integration is a pleasure to work with, with code completion for "
"nodes, signals, and many other items pertaining to the scene being edited."
msgstr ""
"È un piacere lavorare con la sua integrazione nell'editor, con completazione "
"del codice per i nodi, segnali, e molti altri elementi appartenenti alla "
"scena che sta venendo editata."

#: ../../docs/getting_started/step_by_step/scripting.rst:31
msgid ""
"Has vector types built-in (such as Vectors, transforms, etc.), making it "
"efficient for heavy use of linear algebra."
msgstr ""
"Ha i tipi per i vettori integrati (come i Vector, Transform, ecc), in modo "
"da rendere efficiente l'uso intensivo dell'algebra lineare."

#: ../../docs/getting_started/step_by_step/scripting.rst:32
msgid ""
"Supports multiple threads as efficiently as statically typed languages - one "
"of the limitations that made us avoid VMs such as Lua, Squirrel, etc."
msgstr ""
"Supporta thread multipli efficientemente quanto i linguaggi staticamente "
"tipati - una delle limitazioni che ci ha fatto evitare l'uso di VM come Lua, "
"Squirrel, ecc."

#: ../../docs/getting_started/step_by_step/scripting.rst:33
msgid ""
"Uses no garbage collector, so it trades a small bit of automation (most "
"objects are reference counted anyway), by determinism."
msgstr ""
"Non utilizza un gargabe collector, quindi baratta una piccola parte di "
"automazione (la maggior parte degli oggetti sono a riferimenti contati in "
"ogni caso), per il determinismo."

#: ../../docs/getting_started/step_by_step/scripting.rst:34
msgid ""
"Its dynamic nature makes it easy to optimize sections of code in C++ (via "
"GDNative) if more performance is required, all without recompiling the "
"engine."
msgstr ""
"La sua natura dinamica rende semplice ottimizzare sezioni di codice in C++ "
"(attraverso GDNative) se sono richieste performance più elevate, il tutto "
"senza ricompilare il motore di gioco."

#: ../../docs/getting_started/step_by_step/scripting.rst:36
msgid ""
"If you're undecided and have experience with programming, especially "
"dynamically typed languages, go for GDScript!"
msgstr ""
"Se sei incerto e hai esperienza nella programmazione, specialmente con i "
"linguaggi dinamici, GDScript è la scelta giusta!"

#: ../../docs/getting_started/step_by_step/scripting.rst:40
msgid "VisualScript"
msgstr "VisualScript"

#: ../../docs/getting_started/step_by_step/scripting.rst:42
msgid ""
"Beginning with 3.0, Godot offers :ref:`Visual "
"Scripting<doc_what_is_visual_script>`. This is a typical implementation of a "
"\"blocks and connections\" language, but adapted to how Godot works."
msgstr ""
"A partire dalla versione 3.0, Godot offre il :ref:`Visual "
"Scripting<doc_what_is_visual_script>`. È una tipica implementazione di un "
"linguaggio a \"blocchi e connessioni\", ma adattato a come funziona Godot."

#: ../../docs/getting_started/step_by_step/scripting.rst:46
msgid ""
"Visual scripting is a great tool for non-programmers, or even for "
"experienced developers who want to make parts of the code more accessible to "
"others, like game designers or artists."
msgstr ""
"Lo scripting visuale è un grande strumento per chi non è un programmatore, o "
"anche per programmatori con esperienza che vogliono rendere alcune parti di "
"codice più accessibilli agli altri, come a game designer o a artisti."

#: ../../docs/getting_started/step_by_step/scripting.rst:50
msgid ""
"It can also be used by programmers to build state machines or custom visual "
"node workflows - for example, a dialogue system."
msgstr ""
"Può anche essere usato dai programmatori per creare macchine di stato o "
"diagrammi di nodi personalizzati - un sistema per i dialoghi, ad esempio."

#: ../../docs/getting_started/step_by_step/scripting.rst:55
msgid ".NET / C#"
msgstr ".NET / C#"

#: ../../docs/getting_started/step_by_step/scripting.rst:57
msgid ""
"As Microsoft's C# is a favorite amongst game developers, we have added "
"official support for it. C# is a mature language with tons of code written "
"for it, and support was added thanks to a generous donation from Microsoft."
msgstr ""
"Dato che il C# di Microsoft è una preferenza per molti sviluppatori di "
"videogiochi, abbiamo aggiunto il suo supporto ufficiale. Il C# è un "
"linguaggio maturo con un'enorme quantità di codice già scritto, e il suo "
"supporto è stato aggiunto grazie a una generosa donazione da Microsoft."

#: ../../docs/getting_started/step_by_step/scripting.rst:62
msgid ""
"It has an excellent tradeoff between performance and ease of use, although "
"one must be aware of its garbage collector."
msgstr ""
"Fornisce un eccellente bilanciamento tra performance e semplicità "
"d'utilizzo, sebbene sia necessario essere consapevoli della presenza di un "
"garbage collector."

#: ../../docs/getting_started/step_by_step/scripting.rst:65
msgid ""
"Since Godot uses the `Mono <https://mono-project.com>`_ .NET runtime, in "
"theory any third-party .NET library or framework can be used for scripting "
"in Godot, as well as any Common Language Infrastructure-compliant "
"programming language, such as F#, Boo or ClojureCLR. In practice however, C# "
"is the only officially supported .NET option."
msgstr ""
"Dato che Godot utilizza il runtime `Mono <https://mono-project.com>`_ .NET, "
"teoricamente ogni libreria o framework .NET di terze parti può essere usata "
"per scriptare in Godot, così come ogni altro linguaggio conforme "
"infrastruttura del linguaggio comune, come F#, Boo o ClojureCLR. In pratica, "
"però, il C# è l'unica opzione .NET supportata ufficialmente."

#: ../../docs/getting_started/step_by_step/scripting.rst:71
msgid "GDNative / C++"
msgstr "GDNative / C++"

#: ../../docs/getting_started/step_by_step/scripting.rst:73
msgid ""
"Finally, one of our brightest additions for the 3.0 release: GDNative allows "
"scripting in C++ without needing to recompile (or even restart) Godot."
msgstr ""
"Infine, una delle nostre aggiunte più brillanti per la versione 3.0: "
"GDNative permette di scriptare in C++ senza il bisogno di ricompilare (o "
"anche solo di riavviare) Godot."

#: ../../docs/getting_started/step_by_step/scripting.rst:77
msgid ""
"Any C++ version can be used, and mixing compiler brands and versions for the "
"generated shared libraries works perfectly, thanks to our use of an internal "
"C API Bridge."
msgstr ""
"Qualsiasi versione di C++ può essere usata, e mescolare diversi compilatori "
"e versioni di questi per le librerie generate funziona perfettamente, grazie "
"all'utilizzo interno di un API bridge in C."

#: ../../docs/getting_started/step_by_step/scripting.rst:81
msgid ""
"This language is the best choice for performance and does not need to be "
"used throughout an entire game, as other parts can be written in GDScript or "
"Visual Script. However the API is clear and easy to use as it resembles, "
"mostly, Godot's actual C++ API."
msgstr ""
"Questo linguaggio è il migliore in quanto a performance e non deve essere "
"per forza utilizzato in tutto il gioco, in quanto altre parti possono essere "
"scritte in GDScript o Visual Script. In ogni caso l'API è chiara e semplice "
"da usare in quanto somiglia, per lo più, all'effettiva API C++ di Godot."

#: ../../docs/getting_started/step_by_step/scripting.rst:86
msgid ""
"More languages can be made available through the GDNative interface, but "
"keep in mind we don't have official support for them."
msgstr ""
"Altri linguaggi possono essere resi disponibili attraverso l'interfaccia di "
"GDNative, ma tieni a mente che non avranno supporto ufficiale."

#: ../../docs/getting_started/step_by_step/scripting.rst:90
msgid "Scripting a scene"
msgstr "Scripting di una scena"

#: ../../docs/getting_started/step_by_step/scripting.rst:92
msgid ""
"For the rest of this tutorial we'll set up a GUI scene consisting of a "
"button and a label, where pressing the button will update the label. This "
"will demonstrate:"
msgstr ""
"Per il resto di questo tutorial, creeremo un'interfaccia grafica (GUI), "
"costituita da un pulsante e da un'etichetta, dove premendo il primo si "
"aggiornerà il contenuto della seconda. Questo dimostrerà:"

#: ../../docs/getting_started/step_by_step/scripting.rst:96
msgid "Writing a script and attaching it to a node."
msgstr "Scrivere uno script e allegarlo a un nodo."

#: ../../docs/getting_started/step_by_step/scripting.rst:97
msgid "Hooking up UI elements via signals."
msgstr ""
"Connettere gli elementi dell'interfaccia utente (UI) attraverso i segnali."

#: ../../docs/getting_started/step_by_step/scripting.rst:98
msgid "Writing a script that can access other nodes in the scene."
msgstr "Scrivere uno script che può accedere agli altri nodi della scena."

#: ../../docs/getting_started/step_by_step/scripting.rst:100
msgid ""
"Before continuing, please make sure to read the :ref:"
"`GDScript<doc_gdscript>` reference. It's a language designed to be simple, "
"and the reference is short, so it will not take more than a few minutes to "
"get an overview of the concepts."
msgstr ""
"Prima di continuare, assicurati di aver letto il riferimento sul manuale "
"del :ref:'GDScript<doc_gdscript>'. Si tratta di un linguaggio progettato per "
"essere semplice, ed il riferimento è breve, quindi non ci vorranno più di "
"pochi minuti per ottenere una panoramica dei concetti."

#: ../../docs/getting_started/step_by_step/scripting.rst:105
msgid "Scene setup"
msgstr "Impostazione della scena"

#: ../../docs/getting_started/step_by_step/scripting.rst:107
msgid ""
"Use the \"Add Child Node\" dialogue accessed from the Scene tab (or by "
"pressing ``Ctrl+A``) to create a hierarchy with the following nodes:"
msgstr ""
"Clicca su \"Aggiungi Nodo Figlio\" accedendo dal menu Scena (o premendo "
"``Ctrl+A``) per creare una gerarchia con i seguenti nodi:"

#: ../../docs/getting_started/step_by_step/scripting.rst:110
msgid "Panel"
msgstr "Pannello"

#: ../../docs/getting_started/step_by_step/scripting.rst:112
msgid "Label"
msgstr "Etichetta"

#: ../../docs/getting_started/step_by_step/scripting.rst:113
msgid "Button"
msgstr "Pulsante"

#: ../../docs/getting_started/step_by_step/scripting.rst:115
msgid "The scene tree should look like this:"
msgstr "L'albero della scena dovrebbe essere simile a questo:"

#: ../../docs/getting_started/step_by_step/scripting.rst:119
msgid ""
"Use the 2D editor to position and resize the Button and Label so that they "
"look like the image below. You can set the text from the Inspector tab."
msgstr ""
"Usa l'editor 2d per posizionare e ridimensionare il Pulsante e l'Etichetta "
"così che possano assomigliare all'immagine qui sotto. Puoi impostare il "
"testo dalla tab Inspector."

#: ../../docs/getting_started/step_by_step/scripting.rst:124
msgid "Finally, save the scene with a name such as ``sayhello.tscn``."
msgstr "Infine, salva la scena con un nome come ``sayhello.tscn``."

#: ../../docs/getting_started/step_by_step/scripting.rst:129
msgid "Adding a script"
msgstr "Aggiungi uno script"

#: ../../docs/getting_started/step_by_step/scripting.rst:131
msgid ""
"Right click on the Panel node, then select \"Attach Script\" from the "
"context menu:"
msgstr ""
"Clicca con il tasto destro sul nodo Pannello, quindi seleziona \"Attacca "
"Script\" dal menù contestuale:"

#: ../../docs/getting_started/step_by_step/scripting.rst:136
msgid ""
"The script creation dialog will pop up. This dialog allows you to set the "
"script's language, class name, and other relevant options."
msgstr ""
"Apparirà la finestra di creazione dello script. Questa finestra ti "
"permetterà di impostare il linguaggio dello script, il nome della classe e "
"altre opzioni pertinenti."

#: ../../docs/getting_started/step_by_step/scripting.rst:139
msgid ""
"In GDScript, the file itself represents the class, so the class name field "
"is not editable."
msgstr ""
"Usando GDScript, il file stesso rappresenta la classe, quindi il campo del "
"nome della classe non è modificabile."

#: ../../docs/getting_started/step_by_step/scripting.rst:142
msgid ""
"The node we're attaching the script to is a panel, so the Inherits field "
"will automatically be filled in with \"Panel\". This is what we want, as the "
"script's goal is to extend the functionality of our panel node."
msgstr ""
"Il nodo al quale stiamo attaccando lo script è un pannello, quindi il campo "
"Eredita si riempirà automaticamente con \"Pannello\". Questo è quello che "
"vogliamo, dato che l'obiettivo dello script è quello di estendere le "
"funzionalità del nostro nodo."

#: ../../docs/getting_started/step_by_step/scripting.rst:146
msgid "Finally, enter a path name for the script and select Create:"
msgstr "Infine, inserisci un percorso per lo script e seleziona Crea:"

#: ../../docs/getting_started/step_by_step/scripting.rst:150
msgid ""
"The script will then be created and added to the node. You can see this as "
"an \"Open script\" icon next to the node in the Scene tab, as well as in the "
"script property under Inspector:"
msgstr ""
"Lo script verrà quindi creato e aggiunto al nodo. Puoi vederlo rappresentato "
"come un'icona \"Apri Script\" affianco al nodo nella tab \"Scene\", così "
"come nelle proprietà dello script in Inspector:"

#: ../../docs/getting_started/step_by_step/scripting.rst:156
msgid ""
"To edit the script, select either of these buttons, both of which are "
"highlighted in the above image. This will bring you to the script editor, "
"where a default template will be included:"
msgstr ""
"Per modificare lo script, seleziona uno dei pulsanti evidenziati "
"nell'immagine qua sopra. Questo ti porterà all'Editor dello Script, che "
"includerà un modello predefinito:"

#: ../../docs/getting_started/step_by_step/scripting.rst:161
msgid ""
"There's not much there. The ``_ready()`` function is called when the node, "
"and all its children, enters the active scene. **Note:** ``_ready()`` is not "
"the constructor; the constructor is instead ``_init()``."
msgstr ""
"Non c'è molto qui. La funzione ``_ready()`` è chiamata quando il nodo, e "
"tutti i suoi figli, entrano nella scena attiva. **Nota:** ``_ready()`` non è "
"il costruttore; il costruttore è invece ``_init()``."

#: ../../docs/getting_started/step_by_step/scripting.rst:166
msgid "The role of the script"
msgstr "Il ruolo dello script"

#: ../../docs/getting_started/step_by_step/scripting.rst:168
msgid ""
"A script adds behavior to a node. It is used to control how the node "
"functions as well as how it interacts with other nodes: children, parent, "
"siblings, and so on. The local scope of the script is the node. In other "
"words, the script inherits the functions provided by that node."
msgstr ""
"Uno script aggiunge un comportamento ad un nodo. E' usato per controllare "
"come il nodo funziona e anche come interagisce con gli altri nodi: figli, "
"genitore, fratelli, e così via. Il campo di azione (scope) locale dello "
"script è il nodo. In altre parole, lo script eredita le funzioni fornite da "
"quel nodo."

#: ../../docs/getting_started/step_by_step/scripting.rst:179
msgid "Handling a signal"
msgstr "Gestire un segnale"

#: ../../docs/getting_started/step_by_step/scripting.rst:181
msgid ""
"Signals are \"emitted\" when some specific kind of action happens, and they "
"can be connected to any function of any script instance. Signals are used "
"mostly in GUI nodes, although other nodes have them too, and you can even "
"define custom signals in your own scripts."
msgstr ""
"I segnali sono \"emessi\" quando avviene qualche tipo specifico di azione, e "
"possono essere associati ad ogni funzione di ogni script istanziato. I "
"segnali sono usati per lo più per i nodi di interfaccia utente (GUI), "
"sebbene possano essere usati anche per altri nodi e potete persino definire "
"dei segnali personalizzati nei vostri script."

#: ../../docs/getting_started/step_by_step/scripting.rst:186
msgid ""
"In this step, we'll connect the \"pressed\" signal to a custom function. "
"Forming connections is the first part and defining the custom function is "
"the second part. For the first part, Godot provides two ways to create "
"connections: through a visual interface the editor provides or through code."
msgstr ""
"In questo pass, connettiamo il segnale \"pressed\" a una funzione "
"personalizzati. Formare connessioni è la prima parte e la definizione della "
"funzione personalizzata è la seconda parte. Per la prima parte, Godot "
"fornisce due modi per creare connessioni: attraverso una interfaccia visuale "
"fornita dall'editor o attraverso il codice."

#: ../../docs/getting_started/step_by_step/scripting.rst:191
msgid ""
"While we will use the code method for the remainder of this tutorial series, "
"let's cover how the editor interface works for future reference."
msgstr ""
"Mentre useremo il metodo del codice per il resto di questa serie di "
"tutorial, parliamo di come funziona l'interfaccia dell'editor per "
"riferimenti futuri."

#: ../../docs/getting_started/step_by_step/scripting.rst:194
msgid ""
"Select the Button node in the scene tree and then select the \"Node\" tab. "
"Next, make sure that you have \"Signals\" selected."
msgstr ""
"Seleziona il nodo Button nella Scene Tree e seleziona a quel punto "
"l'etichetta \"Node\". Successivamente assicurati di aver selezionato "
"\"Signals\"."

#: ../../docs/getting_started/step_by_step/scripting.rst:199
msgid ""
"If you then select \"pressed()\" under \"BaseButton\" and click the "
"\"Connect...\" button in the bottom right, you'll open up the connection "
"creation dialogue."
msgstr ""
"Se poi selezioni \"pressed()\" sotto \"BaseButton\" e premi il bottone "
"\"Connect...\" in basso a destra, aprirai la finestra per la creazione delle "
"connessioni."

#: ../../docs/getting_started/step_by_step/scripting.rst:204
msgid ""
"In the bottom-left are the key things you need to create a connection: a "
"node which implements the method you want to trigger (represented here as a "
"NodePath) and the name of the method to trigger."
msgstr ""
"In basso a sinistra ci sono gli elementi chiave necessari per creare una "
"connessione: un nodo che implementa il metodo che vuoi attivare (qui "
"rappresentato con un NodePath) e il nome del metodo da attivare."

#: ../../docs/getting_started/step_by_step/scripting.rst:208
msgid ""
"The top-left section displays a list of your scene's nodes with the emitting "
"node's name highlighted in red. Select the \"Panel\" node here. When you "
"select a node, the NodePath at the bottom will automatically update to point "
"to a relative path from the emitting node to the selected node."
msgstr ""
"La sezione in alto a sinistra ci mostra una lista di tutti i nodi della "
"scena con il nome del nodo emittente evidenziato in rosso. Seleziona il nodo "
"\"Panel\" da qui. Quando selezioni un nodo, la sezione NodePath sul fondo "
"della schermata si aggiornerà automaticamente per puntare una path relativa "
"dal nodo emittente al nodo selezionato."

#: ../../docs/getting_started/step_by_step/scripting.rst:213
msgid ""
"By default, the method name will contain the emitting node's name (\"Button"
"\" in this case), resulting in \"_on_[EmitterNode]_[signal_name]\". If you "
"do have the \"Make Function\" check button checked, then the editor will "
"generate the function for you before setting up the connection."
msgstr ""
"Per default, il nome del metodo conterrà il nome del nodo emittente (\"Button"
"\", in questo caso), risultando in \"_on_[EmitterNode]_[signal_name]\". Se "
"hai il tasto a due vie \"Make function\" su attivato, allora l'editor "
"genererà la funzione per te, prima di impostare la connessione col nodo "
"selezionato."

#: ../../docs/getting_started/step_by_step/scripting.rst:218
msgid ""
"And that concludes the guide on how to use the visual interface. However, "
"this is a scripting tutorial, so for the sake of learning, let's dive into "
"the manual process!"
msgstr ""
"E questo conclude la guida su come usare l'interfaccia grafica. Comunque, "
"questo è un tutorial sulla codifica, quindi, per l'amore dell'imparare, "
"approfondiamo il processo manuale!"

#: ../../docs/getting_started/step_by_step/scripting.rst:222
msgid ""
"To accomplish this, we will introduce a function that is probably the most "
"used by Godot programmers: :ref:`Node.get_node() "
"<class_Node_method_get_node>`. This function uses paths to fetch nodes "
"anywhere in the scene, relative to the node that owns the script."
msgstr ""
"Per fare questo, introdurremo una funzione, probabilmente la più utilizzata "
"dai programmatori di Godot: :ref:`Node.get_node() "
"<class_Node_method_get_node>`. Questa funzione utilizza i percorsi per "
"prendere nodi da qualsiasi posto nella scena, relativa al nodo proprietario "
"dello script."

#: ../../docs/getting_started/step_by_step/scripting.rst:227
msgid ""
"For the sake of convenience, delete everything underneath ``extends Panel``. "
"You will fill out the rest of the script manually."
msgstr ""
"Per convenienza, cancella tutto quanto sotto ``extends Panel``. Riepirai il "
"resto dello script manualmente."

#: ../../docs/getting_started/step_by_step/scripting.rst:230
msgid ""
"Because the Button and Label are siblings under the Panel where the script "
"is attached, you can fetch the Button by typing the following underneath the "
"``_ready()`` function:"
msgstr ""
"Perché il Button e Label sono entrambi figli di Panel, dove lo script si "
"trova, puoi prendere il Button scrivendo il seguente sotto la funzione "
"``_ready()``:"

#: ../../docs/getting_started/step_by_step/scripting.rst:247
msgid "Next, write a function which will be called when the button is pressed:"
msgstr ""
"Poi, scrivi una funzione che sarà chiamata quando il bottone sarà premuto:"

#: ../../docs/getting_started/step_by_step/scripting.rst:262
msgid ""
"Finally, connect the button's \"pressed\" signal to ``_ready()`` by using :"
"ref:`Object.connect() <class_Object_method_connect>`."
msgstr ""
"Finalmente, connetti il segnale \"pressed\" del bottone a ``_ready()``, "
"usando :ref:`Object.connect() <class_Object_method_connect>`."

#: ../../docs/getting_started/step_by_step/scripting.rst:278
msgid "The final script should look like this:"
msgstr "Lo script finito dovrebbe essere così:"

#: ../../docs/getting_started/step_by_step/scripting.rst:311
msgid ""
"Run the scene and press the button. You should get the following result:"
msgstr ""
"Esegui la scena e premi il pulsante. Dovresti avere il seguente risultato:"

#: ../../docs/getting_started/step_by_step/scripting.rst:315
msgid "Why, hello there! Congratulations on scripting your first scene."
msgstr "Hey! Congratulazioni nel codificare la tua prima scena."

#: ../../docs/getting_started/step_by_step/scripting.rst:319
msgid ""
"A common misunderstanding regarding this tutorial is how ``get_node(path)`` "
"works. For a given node, ``get_node(path)`` searches its immediate children. "
"In the above code, this means that Button must be a child of Panel. If "
"Button were instead a child of Label, the code to obtain it would be:"
msgstr ""
"Una comune incomprensione riguardante questo tutorial è come "
"``get_node(path)`` funzioni. Per un nodo dato, ``get_node(path)`` ricerca il "
"proprio figlio immediato. Nel codice soprastante, questo significa che "
"Button deve essere un figlio di Panel. Se Button invece fosse stato figlio "
"di Label, il codice ottenuto sarebbe stato così:"

#: ../../docs/getting_started/step_by_step/scripting.rst:337
msgid "Also, remember that nodes are referenced by name, not by type."
msgstr ""
"Inoltre, ricorda che i nodi sono ottenibili dal loro nome, non dal loro tipo."

#: ../../docs/getting_started/step_by_step/scripting.rst:341
msgid ""
"The right-hand panel of the connect dialogue is for binding specific values "
"to the connected function's parameters. You can add and remove values of "
"different types."
msgstr ""
"Il pannello di destra, nella finestra di connessione, serve per associare "
"valori specifici ai parametri della funzione collegata. È possibile "
"aggiungere e rimuovere valori di diversi tipi."

#: ../../docs/getting_started/step_by_step/scripting.rst:345
msgid ""
"The code approach also enables this with a 4th ``Array`` parameter that is "
"empty by default. Feel free to read up on the ``Object.connect`` method for "
"more information."
msgstr ""
"L'approccio attraverso il codice permette inoltre l'utilizzo di un quarto "
"parametro di tipo ``Array``che di default è vuoto.  Sentiti libero di "
"leggere il metodo `` Object.connect`` per maggiori informazioni."
