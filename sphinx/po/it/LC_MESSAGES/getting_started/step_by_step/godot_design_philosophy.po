# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-20 15:59+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:4
msgid "Godot’s design philosophy"
msgstr "La filosofia progettuale di Godot"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:6
msgid "Now that you've gotten your hands wet, let's talk about Godot's design."
msgstr "Ora che vi siete bagnati le mani, parliamo del progetto di Godot."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:8
msgid ""
"**Every game engine is different and fits different needs.** Not only do "
"they offer a range of features, but the design of each engine is unique. "
"This leads to different workflows and different ways to form your games’ "
"structures. This all stems from their respective design philosophies."
msgstr ""
"**Ogni motore di gioco è diverso e si adatta alle diverse esigenze.** Non "
"solo offrono una serie di caratteristiche, ma il design di ogni motore è "
"unico. Questo porta a diversi flussi di lavoro e modi diversi per formare le "
"strutture dei tuoi giochi. Tutto ciò deriva dalle rispettive filosofie "
"progettuali."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:13
msgid ""
"This page is here to help you understand how Godot works, starting with some "
"of its core pillars. It is not a list of available features, nor is it an "
"engine comparison. To know if any engine can be a good fit for your project, "
"you need to try it out for yourself and understand its design and "
"limitations."
msgstr ""
"Questa pagina è qui per aiutarvi a capire come funziona Godot, a partire da "
"alcuni dei suoi pilastri fondamentali. Non si tratta di un elenco delle "
"caratteristiche disponibili, né di un confronto tra motori. Per sapere se un "
"motore può essere adatto al tuo progetto, devi provarlo tu stesso e "
"comprenderne il design e i limiti."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:19
msgid ""
"Please watch `Discover Godot 3, the Free game engine <https://youtu."
"be/4v3qge-3CqQ>`_ if you're looking for an overview of the engine's features."
msgstr ""
"Guarda 'Scoprire Godot 3, il motore di gioco gratuito <https://youtu."
"be/4v3qge-3CqQ> se stai cercando una panoramica delle funzionalità del "
"motore."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:23
msgid "Object-oriented design and composition"
msgstr "Progettazione e composizione orientata all'oggetto"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:25
msgid ""
"Godot embraces object-oriented design at its core with its flexible scene "
"system and Node hierarchy. It tries to stay away from strict programming "
"patterns to offer an intuitive way to structure your game."
msgstr ""
"Godot abbraccia il design orientato agli oggetti al suo interno con il suo "
"sistema flessibile di scene e la gerarchia dei Nodi, e cerca di stare "
"lontano da rigidi schemi di programmazione per offrire un modo intuitivo per "
"strutturare il tuo gioco."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:29
msgid ""
"For one, Godot lets you **compose or aggregate** scenes. It's like nested "
"prefabs: you can create a BlinkingLight scene and a BrokenLantern scene that "
"uses the BlinkingLight. Then, create a city filled with BrokenLanterns. "
"Change the BlinkingLight's color, save, and all the BrokenLanterns in the "
"city will update instantly."
msgstr ""
"Per prima cosa, Godot consente di **comporre o aggregare** scene. È come un "
"prefabbricato annidato: è possibile creare una scena LuceAccesa una scena "
"LanternaRotta che utilizza LuceAccesa. Poi, creare una città piena di "
"LanterneRotte. Cambia il colore di LuceAccesa, salva, e tutte le "
"LanterneRotte della città si aggiornano istantaneamente."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:36
msgid "On top of that, you can **inherit** from any scene."
msgstr "Inoltre, puoi **ereditare** da qualsiasi scena."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:38
msgid ""
"A Godot scene could be a Weapon, a Character, an Item, a Door, a Level, part "
"of a level… anything you’d like. It works like a class in pure code, except "
"you’re free to design it by using the editor, using only the code, or mixing "
"and matching the two."
msgstr ""
"Una scena di Godot può essere un'arma, un personaggio, un oggetto, una "
"porta, un livello, una parte di un livello.... tutto quello che vuoi. "
"Funziona come una classe in codice puro, tranne per il fatto che si è liberi "
"di progettarlo usando l'editor, usando solo il codice, o mescolando e "
"abbinando i due."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:43
msgid ""
"It’s different from prefabs you find in several 3D engines, as you can then "
"inherit from and extend those scenes. You may create a Magician that extends "
"your Character. Modify the Character in the editor and the Magician will "
"update as well. It helps you build your projects so that their structure "
"matches the game’s design."
msgstr ""
"È diverso dai prefabbricati che si trovano in vari motori 3D, in quanto è "
"possibile ereditare ed estendere quelle scene. Puoi creare un Mago che "
"estende il tuo Personaggio. Modificare il Personaggio nell'editor e anche il "
"Mago si aggiornerà. Ti aiuta a costruire i tuoi progetti in modo che la loro "
"struttura corrisponda al design del gioco."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:49
msgid "|image0|"
msgstr "|image0|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:51
msgid ""
"Also note that Godot offers many different types of objects called nodes, "
"each with a specific purpose. Nodes are part of a tree and always inherit "
"from their parents up to the Node class. Although the engine does feature "
"components like collision shapes, they’re the exception, not the norm."
msgstr ""
"Inoltre, nota che Godot offre tanti tipi di oggetti diversi chiamati nodi, "
"ognuno con un suo scopo. Tutti i nodi sono parte di un albero ed ereditano "
"dai loro padri, fino alla classe Nodo. Anche se l'engine ha alcuni "
"componenti, per esempio le forme di collisione, che eccezionalmente non "
"rispettano questa regola."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:57
msgid "|image1|"
msgstr "|image1|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:59
msgid ""
"Sprite is a Node2D, a CanvasItem and a Node. It has all the properties and "
"features of its three parent classes, like transforms or the ability to draw "
"custom shapes and render with a custom shader."
msgstr ""
"Lo sprite è un Node2D, un CanvasItem e un Node. Ha tutte le proprietà e le "
"caratteristiche delle sue tre classi madri, come le trasformazioni o la "
"possibilità di disegnare forme personalizzate e renderizzare con uno shader "
"personalizzato."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:64
msgid "All-inclusive package"
msgstr "Pacchetto all-inclusive"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:66
msgid ""
"Godot tries to provide its own tools to answer most common needs. It has a "
"dedicated scripting workspace, an animation editor, a tilemap editor, a "
"shader editor, a debugger, a profiler, the ability to hot-reload locally and "
"on remote devices, etc."
msgstr ""
"Godot cerca di fornire i propri strumenti per rispondere ai bisogni più "
"comuni. Ha uno spazio di lavoro dedicato allo scripting, un editor di "
"animazione, un editor di tilemap, un editor di shader, un debugger, un "
"profiler, la possibilità di caricare a caldo localmente e su dispositivi "
"remoti, ecc."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:71
msgid "|image2|"
msgstr "|image2|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:73
msgid ""
"The goal is to offer a full package to create games and a continuous user "
"experience. You can still work with external programs as long as there is an "
"import plugin for it. Or you can create one, like the `Tiled Map Importer "
"<https://github.com/vnen/godot-tiled-importer>`__."
msgstr ""
"L'obiettivo è quello di offrire un pacchetto completo per creare giochi e "
"un'esperienza utente continuativa. È ancora possibile lavorare con programmi "
"esterni, purché ci sia un plugin per l'importazione. Oppure è possibile "
"crearne uno, come l'importatore di mappe piastrellate <https://github.com/"
"vnen/godot-tiled-importer>"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:78
msgid ""
"That is also partly why Godot offers its own programming languages GDscript "
"and VisualScript, along with C#. They’re designed for the needs of game "
"developers and game designers, and they’re tightly integrated in the engine "
"and the editor."
msgstr ""
"Questo è anche in parte il motivo per cui Godot offre i propri linguaggi di "
"programmazione GDscript e VisualScript, insieme a C#. Sono progettati per le "
"esigenze degli sviluppatori di giochi e game designer, e sono strettamente "
"integrati nel motore e nell'editor."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:83
msgid ""
"GDscript lets you write simple code using Python-like syntax, yet it detects "
"types and offers a static language's quality of auto-completion. It is also "
"optimized for gameplay code with built-in types like Vectors and Colors."
msgstr ""
"GDscript permette di scrivere codice semplice usando una sintassi simile a "
"Python, ma rileva i tipi e offre un auto-completamento statico a livello di "
"linguaggio di programmazione. È anche ottimizzato programmare giochi con "
"tipi integrati quali Vettori e Colori."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:87
msgid ""
"Note that with GDNative, you can write high-performance code using compiled "
"languages like C, C++, Rust, or Python (using the Cython compiler) without "
"recompiling the engine."
msgstr ""
"Nota che con GDNative, puoi scrivere codice ad alte prestazioni usando "
"linguaggi compilati come C, C++, Rust, o Python (usando il compilatore "
"Cython) senza ricompilare il motore."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:91
msgid "|image3|"
msgstr "|image3|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:93
msgid ""
"*VisualScript is a node-based programming language that integrates well in "
"the editor. You can drag and drop nodes or resources into the graph to "
"create new code blocks.*"
msgstr ""
"*VisualScript è un linguaggio di programmazione basato su nodi che si "
"integra bene nell'editor. È possibile trascinare e rilasciare nodi o risorse "
"nel grafico per creare nuovi blocchi di codice*."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:97
msgid ""
"Note that the 3D workspace doesn’t feature as many tools as the 2D "
"workspace. You’ll need external programs or add-ons to edit terrains, "
"animate complex characters, and so on. Godot provides a complete API to "
"extend the editor’s functionality using game code. See `The Godot editor is "
"a Godot game`_ below."
msgstr ""
"Tieni presente che l'area di lavoro 3D non presenta tanti strumenti come "
"l'area di lavoro 2D. Avrai bisogno di programmi esterni o componenti "
"aggiuntivi per modificare i terreni, animare personaggi complessi e così "
"via. Godot fornisce un'API completa per estendere le funzionalità "
"dell'editor usando il codice di gioco. Vedi 'L'editor Godot è un gioco "
"Godot' sotto."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:102
msgid "|image4|"
msgstr "|image4|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:104
msgid ""
"*A State Machine editor plugin in Godot 2 by kubecz3k. It lets you manage "
"states and transitions visually.*"
msgstr ""
"Un plugin dell'editor di Godot 2 per le Macchine a Stati fatto da kubecz3k. "
"Permette di gestire stati e transizioni in maniera visuale."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:108
msgid "Open source"
msgstr "Open source"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:110
msgid ""
"Godot offers a fully open source codebase under the **MIT license**. This "
"means all the technologies that ship with it have to be Free (as in freedom) "
"as well. For the most part, they’re developed from the ground up by "
"contributors."
msgstr ""
"Godot offre una base di codice completamente open source sotto la **licenza "
"MIT**. Ciò significa che anche tutte le tecnologie fornite devono essere "
"gratuite (come in libertà). Per la maggior parte, sono sviluppati da zero "
"dai collaboratori."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:115
msgid ""
"Anyone can plug in proprietary tools for the needs of their projects — they "
"just won’t ship with the engine. This may include Google AdMob, or FMOD. Any "
"of these can come as third-party plugins instead."
msgstr ""
"Chiunque può collegare strumenti proprietari per le esigenze dei loro "
"progetti - semplicemente non saranno inclusi nell'engine. Questo può "
"includere Google AdMob, o FMOD. Ognuno di questi può essere invece "
"implementato comeplugin di terze parti."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:120
msgid ""
"On the other hand, an open codebase means you can **learn from and extend "
"the engine** to your heart’s content. You can also debug games easily, as "
"Godot will print errors with a stack trace, even if they come from the "
"engine itself."
msgstr ""
"D'altra parte, un sorgente aperto significa che puoi **imparare dall'engine "
"ed estenderne le funzionalità** come piú ti aggrada. Puoi anche fare debug "
"dei giochi in maniera semplice, poiché Godot stamperà gli errori con una "
"stack trace, anche se arrivano dall'engine stesso."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:126
msgid ""
"This **does not affect the work you do with Godot** in any way: there’s no "
"strings attached to the engine or anything you make with it."
msgstr ""
"Questo **non impatta il lavoro che fai con Godot** in nessuna maniera: non "
"ci sono lacci che ti legano all'engine o a qualsiasi cosa tu faccia con esso."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:130
msgid "Community-driven"
msgstr "gestito dalla comunità"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:132
msgid ""
"**Godot is made by its community, for the community, and for all game "
"creators out there.** It’s the needs of the users and open discussions that "
"drive the core updates. New features from the core developers often focus on "
"what will benefit the most users first."
msgstr ""
"**Godot é fatto dalla sua comunità, per la sua comunità, e per tutti i "
"creatori di giochi là fuori.** Sono le necessità degli utenti e le "
"discussioni aperte che guidano le update principali. Le nuove funzionalità "
"dagli sviluppatori principali spesso si focalizzano per prima cosa su ció "
"che beneficierá la maggior parte degli utenti."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:137
msgid ""
"That said, although a handful of core developers work on it full-time, the "
"project has over 600 contributors at the time of writing. Benevolent "
"programmers work on features they may need themselves, so you’ll see "
"improvements in all corners of the engine at the same time in every major "
"release."
msgstr ""
"Ció detto, anche se una maciata di sviluppatori principali lavora sul core a "
"tempo pieno, il progetto ha oltre 600 contributori al momento. Programmatori "
"volenterosi lavorano su funzionalità di cui potrebbero aver bisogno loro "
"stessi, perció vedrai miglioramenti in tutti gli aspetti dell'engine allo "
"stesso tempo ad ogni major release."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:144
msgid "The Godot editor is a Godot game"
msgstr "L'editor di Godot è un gioco sviluppato in Godot"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:146
msgid ""
"The Godot editor runs on the game engine. It uses the engine’s own UI "
"system, it can hot-reload code and scenes when you test your projects, or "
"run game code in the editor. This means you can **use the same code** and "
"scenes for your games, or **build plugins and extend the editor.**"
msgstr ""
"L'editor di Godot gira sul motore di gioco. Esso utilizza l'interfaccia "
"propria del motore, può ricaricare codice e scene in maniera veloce quando "
"esegui i test dei tuoi progetti, oppure eseguire codice di gioco "
"nell'editor. Questo significa che tu puoi **usare lo stesso codice** e scene "
"per i tuoi giochi, o **costruire plugin e estendere l'editor.**"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:151
msgid ""
"This leads to a reliable and flexible UI system, as it powers the editor "
"itself. With the ``tool`` keyword, you can run any game code in the editor."
msgstr ""
"Questo conduce a un sistema d'interfaccia affidabile e flessibile, dato che "
"esso supporta l'editor stesso. Con lo ``strumento`` keyword, puoi eseguire "
"qualsiasi codice di gioco nell'editor."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:154
msgid "|image5|"
msgstr "|image5|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:156
msgid ""
"*RPG in a Box is a voxel RPG editor made with Godot 2. It uses Godot’s UI "
"tools for its node-based programming system and for the rest of the "
"interface.*"
msgstr ""
"*RPG in a Box é un editor di GDR voxel fatto con Godot 2. Usa gli strumenti "
"dell'interfaccia di Godot per il suo sistema di programmazione basato sui "
"nodi e per il resto dell'interfaccia.*"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:160
msgid ""
"Put the ``tool`` keyword at the top of any GDScript file and it will run in "
"the editor. This lets you import and export plugins, create plugins like "
"custom level editors, or create scripts with the same nodes and API you use "
"in your projects."
msgstr ""
"Metti la parola chiave ``tool`` in cima a qualsiasi file GDScript e verrá "
"eseguto nell'editor. Questo ti consente di importare ed esportare plugin, "
"creare plugin come editor di livello personalizzati, o creare script con gli "
"stessi nodi e API che usi nei tuoi progetti."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:166
msgid "Separate 2D and 3D engines"
msgstr "Motori 2D e 3D separati"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:168
msgid ""
"Godot offers dedicated 2D and 3D rendering engines. As a result, **the base "
"unit for 2D scenes is pixels.** Even though the engines are separate, you "
"can render 2D in 3D, 3D in 2D, and overlay 2D sprites and interfaces over "
"your 3D world."
msgstr ""
"Godot offre motori di rendering 2D e 3D dedicati. Di conseguenza, **l'unità "
"di base per le scene 2D è il pixel.** Anche se i motori sono separati, è "
"possibile renderizzare il 2D in 3D, il 3D in 2D, e sovrapporre gli sprite e "
"le interfacce 2D nel tuo mondo 3D."
