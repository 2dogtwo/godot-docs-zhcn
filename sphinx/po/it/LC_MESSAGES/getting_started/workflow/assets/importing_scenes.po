# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-05 17:37+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:4
msgid "Importing 3D scenes"
msgstr "Importare Scene 3D"

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:7
msgid "Godot scene importer"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:9
msgid ""
"When dealing with 3D assets, Godot has a flexible and configurable importer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:11
msgid ""
"Godot works with *scenes*. This means that the entire scene being worked on "
"in your favorite 3D DCC will be transferred as close as possible."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:14
msgid "Godot supports the following 3D *scene file formats*:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:16
msgid "glTF 2.0. Godot has full support for text and binary formats."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:17
msgid "DAE (COLLADA), an older format that is fully supported."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:18
msgid ""
"OBJ (Wavefront) formats. It is also fully supported, but pretty limited (no "
"support for pivots, skeletons, etc)."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:19
msgid "ESCN, a Godot specific format that Blender can export with a plugin."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:20
#, fuzzy
msgid ""
"FBX, supported via the Open Asset Import library. However, FBX is "
"proprietary, so we recommend using other formats listed above, if suitable "
"for your workflow."
msgstr ""
"FBX è supportato tramite l'Open Asset Import library. Tuttavia, FBX è "
"proprietario, dacché raccomandiamo l'uso di altri formati elencati sopra, se "
"adatti al vostro flusso di lavoro."

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:23
msgid ""
"Just copy the scene file together with the texture to the project "
"repository, and Godot will do a full import."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:25
msgid ""
"It is important that the mesh is not deformed by bones when exporting. Make "
"sure that the skeleton is reset to its T-pose or default rest pose before "
"exporting with your favorite 3D editor."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:29
msgid "Exporting DAE files from Maya and 3DS Max"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:31
msgid ""
"Autodesk added built-in COLLADA support to Maya and 3DS Max, but it's broken "
"by default and should not be used. The best way to export this format is by "
"using the `OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/"
"OpenCOLLADA-Tools>`__ plugins. They work well, although they are not always "
"up-to date with the latest version of the software."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:39
msgid "Exporting glTF 2.0 files from Blender"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:41
msgid ""
"There are three ways to export glTF files from Blender. As a glTF binary (``."
"glb`` file), glTF embedded (``.gltf`` file), and with textures (``gltf`` + "
"``.bin`` + textures)."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:44
msgid ""
"glTF binary files are the smallest of the three options. They include the "
"mesh and textures set up in Blender. When brought into Godot the textures "
"are part of the object's material file."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:47
msgid ""
"glTF embedded files function the same way as binary files. They don't "
"provide extra functionality in Godot, and shouldn't be used since they have "
"a larger file size."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:50
msgid ""
"There are two reasons to use glTF with the textures separate. One is to have "
"the scene description in a text based format and the binary data in a "
"separate binary file. This can be useful for version control if you want to "
"review changes in a text based format. The second is you need the texture "
"files separate from the material file. If you don't need either of those "
"glTF binary files are fine."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:55
msgid ""
"Blender does not export emissive textures with the glTF file. If your model "
"uses one it must be brought in separately."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:58
msgid "Exporting DAE files from Blender"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:60
msgid ""
"Blender has built-in COLLADA support, but it does not work properly for the "
"needs of game engines and should not be used as is."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:63
msgid ""
"Godot provides a `Blender plugin <https://github.com/godotengine/collada-"
"exporter>`_ that will correctly export COLLADA scenes for use in Godot."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:67
msgid "Exporting ESCN files from Blender"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:69
msgid ""
"The most powerful one, called `godot-blender-exporter <https://github.com/"
"godotengine/godot-blender-exporter>`__. It uses a .escn file, which is kind "
"of another name for a .tscn file (Godot scene file); it keeps as much "
"information as possible from a Blender scene."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:74
msgid ""
"The ESCN exporter has a detailed `document <escn_exporter/index.html>`__ "
"describing its functionality and usage."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:78
msgid "Import workflows"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:80
msgid ""
"Godot scene importer allows different workflows regarding how data is "
"imported. Depending on many options, it is possible to import a scene with:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:83
msgid ""
"External materials (default): Where each material is saved to a file "
"resource. Modifications to them are kept."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:84
msgid ""
"External meshes: Where each mesh is saved to a different file. Many users "
"prefer to deal with meshes directly."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:85
msgid ""
"External animations: Allowing saved animations to be modified and merged "
"when sources change."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:86
msgid ""
"External scenes: Save each of the root nodes of the imported scenes as a "
"separate scene."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:87
msgid "Single scene: A single scene file with everything built in."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:91
msgid ""
"As different developers have different needs, this import process is highly "
"customizable."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:94
msgid "Import options"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:96
msgid "The importer has several options, which will be discussed below:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:101
msgid "Nodes"
msgstr "Nodi"

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:104
msgid "Root Type"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:106
msgid ""
"By default, the type of the root node in imported scenes is \"Spatial\", but "
"this can be modified."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:109
msgid "Root Name"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:111
msgid "Allows setting a specific name to the generated root node."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:114
msgid "Root Scale"
msgstr "'Root Scale'"

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:116
msgid "The scale of the root node."
msgstr "La gerarchia del nodo root."

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:119
msgid "Custom Script"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:121
msgid ""
"A special script to process the whole scene after import can be provided. "
"This is great for post processing, changing materials, doing funny stuff "
"with the geometry etc."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:125
msgid "Create a script like this:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:137
msgid ""
"The ``post_import`` function takes the imported scene as argument (the "
"parameter is actually the root node of the scene). The scene that will "
"finally be used must be returned. It can be a different one."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:142
#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:161
#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:216
#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:308
msgid "Storage"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:144
msgid ""
"By default, Godot imports a single scene. This option allows specifying that "
"nodes below the root will each be a separate scene and instanced into the "
"imported one."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:148
msgid ""
"Of course, instancing such imported scenes in other places manually works, "
"too."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:152
msgid "Materials"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:155
msgid "Location"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:157
msgid ""
"Godot supports materials in meshes or nodes. By default, materials will be "
"put on each node."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:163
msgid ""
"Materials can be stored within the scene or in external files. By default, "
"they are stored in external files so editing them is possible. This is "
"because most 3D DCCs don't have the same material options as those present "
"in Godot."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:167
msgid ""
"When materials are built-in, they will be lost each time the source scene is "
"modified and re-imported."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:171
msgid "Keep On Reimport"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:173
msgid ""
"Once materials are edited to use Godot features, the importer will keep the "
"edited ones and ignore the ones coming from the source scene. This option is "
"only present if materials are saved as files."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:178
msgid "Meshes"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:181
msgid "Compress"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:183
msgid ""
"Makes meshes use less precise numbers for multiple aspects of the mesh in "
"order to save space."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:196
msgid "These are:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:187
msgid ""
"Transform Matrix (Location, rotation, and scale)             : 32-bit float "
"to 16-bit signed integer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:188
msgid ""
"Vertices                                                     : 32-bit float "
"to 16-bit signed integer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:189
msgid ""
"Normals                                                      : 32-bit float "
"to 32-bit unsigned integer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:190
msgid ""
"Tangents                                                     : 32-bit float "
"to 32-bit unsigned integer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:191
msgid ""
"Vertex Colors                                                : 32-bit float "
"to 32-bit unsigned integer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:192
msgid ""
"UV                                                           : 32-bit float "
"to 32-bit unsigned integer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:193
msgid ""
"UV2                                                          : 32-bit float "
"to 32-bit unsigned integer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:194
msgid ""
"Vertex weights                                               : 32-bit float "
"to 16-bit unsigned integer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:195
msgid ""
"Armature bones                                               : 32-bit float "
"to 16-bit unsigned integer."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:196
msgid ""
"Array index                                                  : 32-bit or 16-"
"bit unsigned integer based on how many elements there are."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:200
msgid "Additional info:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:199
msgid ""
"UV2 = The second UV channel for detail textures and baked lightmap textures."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:200
msgid ""
"Array index = An array of numbers that number each element of the arrays "
"above; i.e. they number the vertices and normals."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:202
msgid ""
"In some cases, this might lead to loss of precision, so disabling this "
"option may be needed. For instance, if a mesh is very big or there are "
"multiple meshes being imported that cover a large area, compressing the "
"import of this mesh(es) may lead to gaps in geometry or vertices not being "
"exactly where they should be."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:208
msgid "Ensure Tangents"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:210
msgid ""
"If textures with normal mapping are to be used, meshes need to have tangent "
"arrays. This option ensures that these are generated if not present in the "
"source scene. Godot uses Mikktspace for this, but it's always better to have "
"them generated in the exporter."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:218
msgid ""
"Meshes can be stored in separate files (resources) instead of built-in. This "
"does not have much practical use unless one wants to build objects with them "
"directly."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:221
msgid ""
"This option is provided to help those who prefer working directly with "
"meshes instead of scenes."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:225
msgid "Light Baking"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:227
msgid "Whether or not the mesh is used in baked lightmaps."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:229
msgid "**Disabled:** The mesh is not used in baked lightmaps."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:230
msgid "**Enable:** The mesh is used in baked lightmaps."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:231
msgid ""
"**Gen Lightmaps:** The mesh is used in baked lightmaps, and unwraps a second "
"UV layer for lightmaps."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:233
msgid "For more information on light baking see :ref:`doc_baked_lightmaps`."
msgstr ""
"Per ulteriori informazioni sulla cottura vedere :ref:"
"`doc_baked_baked_lightmaps`."

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:236
msgid "External Files"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:238
msgid ""
"Generated meshes and materials can be optionally stored in a subdirectory "
"with the name of the scene."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:242
msgid "Animation options"
msgstr "Opzioni di animazione"

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:244
msgid ""
"Godot provides many options regarding how animation data is dealt with. Some "
"exporters (such as Blender) can generate many animations in a single file. "
"Others, such as 3DS Max or Maya, need many animations put into the same "
"timeline or, at worst, put each animation in a separate file."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:251
msgid "Import of animations is enabled by default."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:254
msgid "FPS"
msgstr "FPS"

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:256
msgid ""
"Most 3D export formats store animation timeline in seconds instead of "
"frames. To ensure animations are imported as faithfully as possible, please "
"specify the frames per second used to edit them. Failing to do this may "
"result in shaky animations."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:261
msgid "Filter Script"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:263
msgid ""
"It is possible to specify a filter script in a special syntax to decide "
"which tracks from which animations should be kept."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:266
msgid ""
"The filter script is executed against each imported animation. The syntax "
"consists of two types of statements, the first for choosing which animations "
"to filter, and the second for filtering individual tracks within the matched "
"animation. All name patterns are performed using a case insensitive "
"expression match, using ``?`` and ``*`` wildcards (using ``String.matchn()`` "
"under the hood)."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:272
msgid ""
"The script must start with an animation filter statement (as denoted by the "
"line beginning with an ``@``). For example, if we would like to apply "
"filters to all imported animations which have a name ending in ``\"_Loop"
"\"``::"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:278
msgid ""
"Similarly, additional patterns can be added to the same line, separated by "
"commas. Here is a modified example to additionally *include* all animations "
"with names that begin with ``\"Arm_Left\"``, but also *exclude* all "
"animations which have names ending in ``\"Attack\"``::"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:284
msgid ""
"Following the animation selection filter statement, we add track filtering "
"patterns to indicate which animation tracks should be kept or discarded. If "
"no track filter patterns are specified, then all tracks within the matched "
"animations will be discarded!"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:288
msgid ""
"It's important to note that track filter statements are applied in order for "
"each track within the animation, this means that one line may include a "
"track, a later rule can still discard it. Similarly, a track excluded by an "
"early rule may then be re-included once again by a filter rule further down "
"in the filter script."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:293
msgid ""
"For example: include all tracks in animations with names ending in ``\"_Loop"
"\"``, but discard any tracks affecting a ``\"Skeleton\"`` which end in ``"
"\"Control\"``, unless they have ``\"Arm\"`` in their name::"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:302
msgid ""
"In the above example, tracks like ``\"Skeleton:Leg_Control\"`` would be "
"discarded, while tracks such as ``\"Skeleton:Head\"`` or ``\"Skeleton:"
"Arm_Left_Control\"`` would be retained."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:305
msgid ""
"Any track filter lines that do not begin with a ``+`` or ``-`` are ignored."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:310
msgid ""
"By default, animations are saved as built-in. It is possible to save them to "
"a file instead. This allows adding custom tracks to the animations and "
"keeping them after a reimport."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:314
msgid "Optimizer"
msgstr "Ottimizzatore"

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:316
msgid ""
"When animations are imported, an optimizer is run, which reduces the size of "
"the animation considerably. In general, this should always be turned on "
"unless you suspect that an animation might be broken due to it being enabled."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:320
msgid "Clips"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:322
msgid ""
"It is possible to specify multiple animations from a single timeline as "
"clips. For this to work, the model must have only one animation that is "
"named ``default``. To create clips, change the clip amount to something "
"greater than zero. You can then name a clip, specify which frames it starts "
"and stops on, and choose whether the animation loops or not."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:331
msgid "Scene inheritance"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:333
msgid ""
"In many cases, it may be desired to make modifications to the imported "
"scene. By default, this is not possible because if the source asset changes "
"(source ``.dae``, ``.gltf``, ``.obj`` file re-exported from 3D modelling "
"app), Godot will re-import the whole scene."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:336
msgid ""
"It is possible, however, to make local modifications by using *Scene "
"Inheritance*. Try to open the imported scene and the following dialog will "
"appear:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:341
msgid "In inherited scenes, the only limitations for modifications are:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:343
msgid "Nodes can't be removed (but can be added anywhere)."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:344
msgid ""
"Sub-Resources can't be edited (save them externally as described above for "
"this)"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:346
msgid "Other than that, everything is allowed!"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:349
msgid "Import hints"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:351
msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:353
msgid "Adding collision detection to objects"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:354
msgid "Setting objects as navigation meshes"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:355
msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modelling)"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:357
msgid ""
"To simplify this workflow, Godot offers a few suffixes that can be added to "
"the names of the objects in your 3D modelling software. When imported, Godot "
"will detect them and perform actions automatically:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:362
msgid "Remove nodes (-noimp)"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:364
msgid ""
"Node names that have this suffix will be removed at import time, no matter "
"what their type is. They will not appear in the imported scene."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:368
msgid "Create collisions (-col, -colonly, -convcolonly)"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:370
msgid ""
"Option \"-col\" will work only for Mesh nodes. If it is detected, a child "
"static collision node will be added, using the same geometry as the mesh."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:373
msgid ""
"However, it is often the case that the visual geometry is too complex or too "
"un-smooth for collisions, which ends up not working well."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:376
msgid ""
"To solve this, the \"-colonly\" modifier exists, which will remove the mesh "
"upon import and create a :ref:`class_staticbody` collision instead. This "
"helps the visual mesh and actual collision to be separated."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:380
msgid ""
"Option \"-convcolonly\" will create a :ref:`class_convexpolygonshape` "
"instead of a :ref:`class_concavepolygonshape`."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:382
msgid ""
"Option \"-colonly\" can also be used with Blender's empty objects. On "
"import, it will create a :ref:`class_staticbody` with a collision node as a "
"child. The collision node will have one of a number of predefined shapes, "
"depending on Blender's empty draw type:"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:389
msgid "Single arrow will create a :ref:`class_rayshape`"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:390
msgid "Cube will create a :ref:`class_boxshape`"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:391
msgid "Image will create a :ref:`class_planeshape`"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:392
msgid ""
"Sphere (and the others not listed) will create a :ref:`class_sphereshape`"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:394
msgid ""
"For better visibility in Blender's editor, the user can set \"X-Ray\" option "
"on collision empties and set some distinct color for them in User "
"Preferences / Themes / 3D View / Empty."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:398
msgid "Create navigation (-navmesh)"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:400
msgid ""
"A mesh node with this suffix will be converted to a navigation mesh. "
"Original Mesh node will be removed."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:404
msgid "Create a VehicleBody (-vehicle)"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:406
msgid ""
"A mesh node with this suffix will be imported as a child to a :ref:"
"`VehicleBody <class_VehicleBody>` node."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:409
msgid "Create a VehicleWheel (-wheel)"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:411
msgid ""
"A mesh node with this suffix will be imported as a child to a :ref:"
"`VehicleWheel <class_VehicleWheel>` node."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:414
msgid "Rigid Body (-rigid)"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:416
msgid "Creates a rigid body from this mesh."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:419
msgid "Animation loop (-loop, -cycle)"
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:421
msgid ""
"Animation clips in the COLLADA document that start or end with the token "
"\"loop\" or \"cycle\" will be imported as a Godot Animation with the loop "
"flag set. This is case-sensitive and does not require a hyphen."
msgstr ""

#: ../../docs/getting_started/workflow/assets/importing_scenes.rst:425
msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the \"loop\" or \"cycle\" prefix or suffix."
msgstr ""
