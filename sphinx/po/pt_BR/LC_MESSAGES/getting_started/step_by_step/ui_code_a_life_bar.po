# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-09 12:15+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:4
msgid "Control the game's UI with code"
msgstr "Controlar a interface do jogo com código"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:7
msgid "Intro"
msgstr "Introdução"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:9
msgid ""
"In this tutorial you will connect a character to a life bar and animate the "
"health loss."
msgstr ""
"Neste tutorial, você conectará um personagem a uma barra de vida e animará a "
"perda desta vida."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:14
msgid ""
"Here's what you'll create: the bar and the counter animate when the "
"character takes a hit. They fade when it dies."
msgstr ""
"Aqui está o que você vai criar: a barra e o contador que animara quando o "
"personagem recebe um hit. Eles desaparecem quando morre."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:18
msgid "You will learn:"
msgstr "Você vai aprender:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:20
msgid "How to **connect** a character to a GUI with signals"
msgstr "Como conectar um caractere a uma interface gráfica com sinais"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:21
msgid "How to **control** a GUI with GDscript"
msgstr "Como **controlar** uma GUI com GDscript"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:22
msgid "How to **animate** a life bar with the :ref:`Tween <class_Tween>` node"
msgstr "Como animar uma barra de vida com o nó: ref: `Tween <class_Tween>`"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:25
msgid ""
"If you want to learn how to set up the interface instead, check out the step-"
"by-step UI tutorials:"
msgstr ""
"Se você quiser aprender como configurar a interface, confira os tutoriais "
"passo a passo da interface do usuário:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:28
msgid "Create a main menu screen"
msgstr "Criar uma tela do menu principal"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:29
msgid "Create a game user interface"
msgstr "Crie uma interface de usuário do jogo"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:32
msgid ""
"When you code a game, you want to build the core gameplay first: the main "
"mechanics, player input, win and loss conditions. The UI comes a bit later. "
"You want to keep all the elements that make up your project separate if "
"possible. Each character should be in its own scene, with its own scripts, "
"and so should the UI elements. This prevents bugs, keeps your project "
"manageable, and allows different team members to work on different parts of "
"the game."
msgstr ""
"Quando você codifica um jogo, você quer construir a jogabilidade central "
"primeiro: a mecânica principal, a entrada do jogador, as condições de "
"vitória e derrota. A interface do usuário vem um pouco depois. Você quer "
"manter todos os elementos que compõem seu projeto separados, se possível. "
"Cada personagem deve estar em sua própria cena, com seus próprios scripts, "
"assim como os elementos da interface do usuário. Isso evita bugs, mantém seu "
"projeto gerenciável e permite que diferentes membros da equipe trabalhem em "
"diferentes partes do jogo."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:40
msgid ""
"Once the core gameplay and the UI are ready, you'll need to connect them "
"somehow. In our example, we have the Enemy who attacks the Player at "
"constant time intervals. We want the life bar to update when the Player "
"takes damage."
msgstr ""
"Quando a jogabilidade central e a interface do usuário estiverem prontas, "
"você precisará conectá-las de alguma forma. Em nosso exemplo, temos o "
"inimigo que ataca o jogador em intervalos de tempo constantes. Queremos que "
"a barra de vida seja atualizada quando o jogador sofrer dano."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:45
msgid "To do this, we will use **signals**."
msgstr "Para fazer isso, usaremos **sinais**."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:49
msgid ""
"Signals are Godot's version of the Observer pattern. They allow us to send "
"out some message. Other nodes can connect to the object that **emits** the "
"signal and receive the information. It's a powerful tool we use a lot for "
"User Interface and achievement systems. You don't want to use them "
"everywhere though. Connecting two nodes adds some coupling between them. "
"When there's a lot of connections, they become hard to manage. For more "
"information on check out the `signals video tutorial <https://youtu.be/"
"l0BkQxF7X3E>`_ on GDquest."
msgstr ""
"Sinais são a versão Godot do padrão Observador. Eles nos permitem enviar "
"algumas mensagens. Outros nós podem se conectar ao objeto que **emite** o "
"sinal e receber as informações. É uma ferramenta poderosa que usamos muito "
"para Interface de Usuário e sistemas de conquistas. Contudo, você não quer "
"usá-los em todos os lugares. Conectar dois nós adiciona algum acoplamento "
"entre eles. Quando há muitas conexões, elas se tornam difíceis de gerenciar. "
"Para mais informações, consulte o `tutorial em vídeo sobre sinais <https://"
"youtu.be/l0BkQxF7X3E>`_ no GDquest."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:53
msgid "Download and explore the start project"
msgstr "Baixe e explore o projeto inicial"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:55
msgid ""
"Download the Godot project: :download:`ui_code_life_bar.zip <files/"
"ui_code_life_bar.zip>`. It contains all the assets and scripts you need to "
"get started. Extract the .zip archive to get two folders: `start` and `end`."
msgstr ""
"Baixe o projeto Godot: :download:`ui_code_life_bar.zip <files/"
"ui_code_life_bar.zip>`. Ele contém todos os recursos e scripts de que você "
"precisa para começar. Extraia o arquivo .zip para obter duas pastas: `start` "
"e` end`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:58
msgid ""
"Load the ``start`` project in Godot. In the ``FileSystem`` dock double click "
"on LevelMockup.tscn to open it. It's an RPG game's mockup where 2 characters "
"face each other. The pink enemy attacks and damages the green square at "
"regular time intervals, until its death. Feel free to try out the game: the "
"basic combat mechanics already work. But as the character isn't connected to "
"the life bar the ``GUI`` doesn't do anything."
msgstr ""
"Carregue o projeto `` start`` na Godot. No dock `` FileSystem`` clique duas "
"vezes em LevelMockup.tscn para abri-lo. É uma maquete de um jogo de RPG onde "
"dois personagens se enfrentam. O inimigo rosa ataca e danifica o quadrado "
"verde em intervalos de tempo regulares, até a sua morte. Sinta-se livre para "
"experimentar o jogo: a mecânica básica de combate já funciona. Mas como o "
"personagem não está conectado à barra de vida, o `` GUI`` não faz nada."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:68
msgid ""
"This is typical of how you'd code a game: you implement the core gameplay "
"first, handle the player's death, and only then you'll add the interface. "
"That's because the UI listens to what's happening in the game. So it can't "
"work if other systems aren't in place yet. If you design the UI before you "
"prototype and test the gameplay, chances are it won't work well and you'll "
"have to re-create it from scratch."
msgstr ""
"Isso é típico de como você codificava um jogo: você primeiro implementa a "
"jogabilidade central, controla a morte do jogador e somente então você "
"adicionará a interface. Isso porque a interface do usuário ouve o que está "
"acontecendo no jogo. Portanto, não pode funcionar se outros sistemas ainda "
"não estiverem funcionando. Se você projetar a interface do usuário antes de "
"prototipar e testar a jogabilidade, é provável que ela não funcione bem e "
"você terá que recriá-la do zero."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:71
msgid "The scene contains a background sprite, a GUI, and two characters."
msgstr "A cena contém uma sprite de fundo, uma GUI e dois caracteres."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:75
msgid "The scene tree, with the GUI scene set to display its children"
msgstr "A árvore de cena, com a cena GUI configurada para exibir seus filhos"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:77
msgid ""
"The GUI scene encapsulates all of the Game User Interface. It comes with a "
"barebones script where we get the path to nodes that exist inside the scene:"
msgstr ""
"A cena GUI encapsula toda a interface do usuário do jogo. Ela vem com um "
"roteiro rascunhado, onde obtemos o caminho para os nós que existem dentro da "
"cena:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:105
msgid ""
"``number_label`` displays a life count as a number. It's a ``Label`` node"
msgstr ""
"`` number_label`` exibe uma contagem de vida como um número. É um nó `` "
"Label``"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:107
msgid "``bar`` is the life bar itself. It's a ``TextureProgress`` node"
msgstr "`` bar`` é a própria barra de vida. É um nó `` TextureProgress``"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:108
msgid ""
"``tween`` is a component-style node that can animate and control any value "
"or method from any other node"
msgstr ""
"`` tween`` é um nó de estilo de componente que pode animar e controlar "
"qualquer valor ou método de qualquer outro nó"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:113
msgid ""
"The project uses a simple organisation that works for game jams and tiny "
"games."
msgstr ""
"O projeto usa uma organização simples que funciona para competições de jogos "
"e pequenos jogos."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:115
msgid ""
"At the root of the project, in the `res://` folder, you will find the "
"`LevelMockup`. That's the main game scene and the one we will work with. All "
"the components that make up the game are in the `scenes/` folder. The "
"`assets/` folder contains the game sprites and the font for the HP counter. "
"In the `scripts/` folder you will find the enemy, the player, and the GUI "
"controller scripts."
msgstr ""
"Na raiz do projeto, na pasta `res: //`, você encontrará o `LevelMockup`. "
"Essa é a cena principal do jogo e a que vamos trabalhar. Todos os "
"componentes que compõem o jogo estão na pasta `scenes /`. A pasta `assets /` "
"contém os sprites do jogo e a fonte do contador de HP. Na pasta `scripts /`, "
"você encontrará o inimigo, o player e os scripts do controlador GUI."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:117
msgid ""
"Click the edit scene icon to the right of the node in the scene tree to open "
"the scene in the editor. You'll see the LifeBar and EnergyBar are sub-scenes "
"themselves."
msgstr ""
"Clique no ícone de edição de cena à direita do nó na árvore de cena para "
"abrir a cena no editor. Você verá o LifeBar e o EnergyBar como subcenas."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:121
msgid "The scene tree, with the Player scene set to display its children"
msgstr ""
"A árvore de cena, com a cena Player configurada para exibir seus filhos"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:124
msgid "Set up the Lifebar with the Player's max\\_health"
msgstr "Configurar a barra de vida com o máximo de segurança do jogador"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:126
msgid ""
"We have to tell the GUI somehow what the player's current health is, to "
"update the lifebar's texture, and to display the remaining health in the HP "
"counter in the top left corner of the screen. To do this we send the "
"player's health to the GUI every time they take damage. The GUI will then "
"update the ``Lifebar`` and ``Number`` nodes with this value."
msgstr ""
"Temos que dizer à GUI de alguma forma qual é a saúde atual do player, "
"atualizar a textura da barra de vida e exibir a integridade restante no "
"contador HP no canto superior esquerdo da tela. Para fazer isso, enviamos a "
"saúde do jogador para a GUI toda vez que receberem dano. A GUI irá então "
"atualizar os nós `` Lifebar`` e `` Number`` com este valor."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:132
msgid ""
"We could stop here to display the number, but we need to initialize the "
"bar's ``max_value`` for it to update in the right proportions. The first "
"step is thus to tell the ``GUI`` what the green character's ``max_health`` "
"is."
msgstr ""
"Nós poderíamos parar aqui para exibir o número, mas precisamos inicializar o "
"`` max_value`` para que ele seja atualizado nas proporções corretas. O "
"primeiro passo é dizer ao `` GUI`` qual é o `` max_health`` do personagem "
"verde."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:139
msgid ""
"The bar, a `TextureProgress`, has a `max_value` of `100` by default. If you "
"don't need to display the character's health with a number, you don't need "
"to change its `max_value` property. You send a percentage from the `Player` "
"to the `GUI` instead:  `health / max_health * 100`."
msgstr ""
"A barra, `TextureProgress`, tem um` max_value` de `100` por padrão. Se você "
"não precisa exibir a saúde do personagem com um número, não é necessário "
"alterar a propriedade `max_value`. Você envia uma porcentagem do `Player` "
"para o` GUI` em vez disso:`health / max_health * 100`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:143
msgid ""
"Click the script icon to the right of the ``GUI`` in the Scene dock to open "
"its script. In the ``_ready`` function, we're going to store the "
"``Player``'s ``max_health`` in a new variable and use it to set the "
"``bar``'s ``max_value``:"
msgstr ""
"Clique no ícone de roteiro à direita da `` GUI`` no painel Cena para abrir "
"seu roteiro. Na função ``_ready``, vamos armazenar ``max_health`` do "
"``Player`` em uma nova variável e usá-la para definir o ``max_value`` do "
"``bar``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:164
msgid ""
"Let's break it down. ``$\"../Characters/Player\"`` is a shorthand that goes "
"one node up in the scene tree, and retrieves the ``Characters/Player`` node "
"from there. It gives us access to the node. The second part of the "
"statement, ``.max_health``, accesses the ``max_health`` on the Player node."
msgstr ""
"Vamos acabar com isso. `` $ \"../ Characters / Player\" `` é uma abreviação "
"que sobe um nó na árvore de cena, e recupera o nó `` Characters / Player`` "
"de lá. Isso nos dá acesso ao nó. A segunda parte da instrução, `` ."
"max_health``, acessa o `` max_health`` no nó do Player."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:170
msgid ""
"The second line assigns this value to ``bar.max_value``. You could combine "
"the two lines into one, but we'll need to use ``player_max_health`` again "
"later in the tutorial."
msgstr ""
"A segunda linha atribui este valor a `` bar.max_value``. Você pode combinar "
"as duas linhas em uma, mas precisaremos usar `` player_max_health`` "
"novamente mais tarde no tutorial."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:174
msgid ""
"``Player.gd`` sets the ``health`` to ``max_health`` at the start of the "
"game, so we could work with this. Why do we still use ``max_health``? There "
"are two reasons:"
msgstr ""
"`` Player.gd`` define o `` health`` para `` max_health`` no início do jogo, "
"então podemos trabalhar com isso. Por que ainda usamos `` max_health``? "
"Existem dois motivos:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:178
msgid ""
"We don't have the guarantee that ``health`` will always equal "
"``max_health``: a future version of the game may load a level where the "
"player already lost some health."
msgstr ""
"Nós não temos a garantia de que `` health`` será sempre igual a `` "
"max_health``: uma versão futura do jogo pode carregar um nível em que o "
"jogador já perdeu alguma vida."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:184
msgid ""
"When you open a scene in the game, Godot creates nodes one by one, following "
"the order in your Scene dock, from top to bottom. `GUI` and `Player` are not "
"part of the same node branch. To make sure they both exist when we access "
"each other, we have to use the `_ready` function. Godot calls `_ready` right "
"after it loaded all nodes, before the game starts. It's the perfect function "
"to set everything up and prepare the game session. Learn more about _ready: :"
"doc:`scripting_continued`"
msgstr ""
"Quando você abre uma cena no jogo, Godot cria os nós um por um, seguindo a "
"ordem no seu painel Cena, de cima para baixo. `GUI` e `Player` não fazem "
"parte do mesmo ramo de nó. Para ter certeza de que ambos existem quando nós "
"os acessamos, temos que usar a função `_ready`. Godot chama `_ready` logo "
"após carregar todos os nós, antes do jogo começar. É a função perfeita para "
"configurar tudo e preparar a sessão do jogo. Saiba mais sobre _ready: :doc:"
"`scripting_continued`"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:188
msgid "Update health with a signal when the player takes a hit"
msgstr "Atualize a vida com um sinal quando o jogador leva um golpe"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:190
msgid ""
"Our GUI is ready to receive the ``health`` value updates from the "
"``Player``. To achieve this we're going to use **signals**."
msgstr ""
"Nossa GUI está pronta para receber as atualizações do valor `` health`` do "
"`` Player``. Para conseguir isso, vamos usar ** sinais **."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:195
msgid ""
"There are many useful built-in signals like `enter_tree` and `exit_tree`, "
"that all nodes emit when they are respectively created and destroyed. You "
"can also create your own using the `signal` keyword. On the `Player` node, "
"you'll find two signals we created for you: `died` and `health_changed`."
msgstr ""
"Existem muitos sinais internos úteis como `enter_tree` e` exit_tree`, que "
"todos os nós emitem quando são respectivamente criados e destruídos. Você "
"também pode criar seus próprios usando a palavra-chave `signal`. No nó "
"`Player`, você encontrará dois sinais que criamos para você:` died` e "
"`health_changed`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:197
msgid ""
"Why don't we directly get the ``Player`` node in the ``_process`` function "
"and look at the health value? Accessing nodes this way creates tight "
"coupling between them. If you did it sparingly it may work. As your game "
"grows bigger, you may have many more connections. If you get nodes this way "
"it gets complex quickly. Not only that: you need to listen to the state "
"change constantly in the ``_process`` function. This check happens 60 times "
"a second and you'll likely break the game because of the order in which the "
"code runs."
msgstr ""
"Por que nós não pegamos diretamente o nó ``Player`` na função ``_process`` e "
"olhamos o valor de saúde? Acessar nós dessa maneira cria um acoplamento "
"firme entre eles. Se você faz isso com moderação, pode funcionar. Conforme "
"seu jogo cresce, você pode ter muito mais conexões. Se você pegar nós dessa "
"maneira, as coisas ficam complexas rapidamente. Não só isso: você precisa "
"ouvir a mudança de estado constantemente na função ``_process``. Essa "
"verificação acontece 60 vezes por segundo e você provavelmente quebrará o "
"jogo por causa da ordem na qual o código é executado."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:206
msgid ""
"On a given frame you may look at another node's property *before* it was "
"updated: you get a value from the last frame. This leads to obscure bugs "
"that are hard to fix. On the other hand, a signal is emitted right after a "
"change happened. It **guarantees** you're getting a fresh piece of "
"information. And you will update the state of your connected node *right "
"after* the change happened."
msgstr ""
"Em um determinado quadro, você pode olhar para a propriedade de outro nó "
"*antes* de ele ser atualizado: você obtém um valor do último quadro. Isso "
"leva a erros obscuros que são difíceis de corrigir. Por outro lado, um sinal "
"é emitido logo após a ocorrência de uma mudança. Isso **garante** que você "
"está recebendo uma informação recente. E você irá atualizar o estado do seu "
"nó conectado *logo após* a mudança acontecer."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:215
msgid ""
"The Observer pattern, that signals derive from, still adds a bit of coupling "
"between node branches. But it's generally lighter and more secure than "
"accessing nodes directly to communicate between two separate classes. It can "
"be okay for a parent node to get values from its children. But you'll want "
"to favor signals if you're working with two separate branches. Read Game "
"Programming Patterns for more information on the `Observer pattern <http://"
"gameprogrammingpatterns.com/observer.html>`_. The `full book <http://"
"gameprogrammingpatterns.com/contents.html>`_ is available online for free."
msgstr ""
"O padrão Observador, de onde os sinais derivam, ainda adiciona um pouco de "
"acoplamento entre os ramos do nó. Mas geralmente é mais leve e mais seguro "
"do que acessar nós diretamente para se comunicar entre duas classes "
"separadas. Pode ser bom para um nó pai obter valores de seus filhos. Mas "
"você vai querer favorecer sinais se estiver trabalhando com dois ramos "
"separados. Leia os Padrões de Programação de Jogos para mais informações "
"sobre o 'Observer pattern <http://gameprogrammingpatterns.com/observer."
"html>' . O `livro completo <http://gameprogrammingpatterns.com/contents."
"html>` _ está disponível online gratuitamente."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:219
msgid ""
"With this in mind let's connect the ``GUI`` to the ``Player``. Click on the "
"``Player`` node in the scene dock to select it. Head down to the Inspector "
"and click on the Node tab. This is the place to connect nodes to listen the "
"one you selected."
msgstr ""
"Com isso em mente, vamos conectar a ``GUI`` ao ``Player``. Clique no nó "
"``Player`` no painel Cena para selecioná-lo. Vá até o Inspetor e clique na "
"guia Nó. Este é o lugar para conectar nós para escutar aquele que você "
"selecionou."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:224
msgid "The first section lists custom signals defined in ``Player.gd``:"
msgstr ""
"A primeira seção lista os sinais personalizados definidos em `` Player.gd``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:226
msgid ""
"``died`` is emitted when the character died. We will use it in a moment to "
"hide the UI."
msgstr ""
"``died`` (\"morreu\") é emitido quando o personagem morre. Vamos usá-lo em "
"um momento para esconder a interface do usuário."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:228
msgid "``health_changed`` is emitted when the character got hit."
msgstr "`` health_changed`` é emitido quando o personagem é atingido."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:232
msgid "We're connecting to the health\\_changed signal"
msgstr "Estamos nos conectando ao sinal health\\_changed"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:234
msgid ""
"Select ``health_changed`` and click on the Connect button in the bottom "
"right corner to open the Connect Signal window. On the left side you can "
"pick the node that will listen to this signal. Select the ``GUI`` node. The "
"right side of the screen lets you pack optional values with the signal. We "
"already took care of it in ``Player.gd``. In general I recommend not to add "
"too many arguments using this window as they're less convenient than doing "
"it from the code."
msgstr ""
"Selecione ``health_changed`` e clique no botão Conectar no canto inferior "
"direito para abrir a janela Conectar Sinal. No lado esquerdo, você pode "
"escolher o nó que escutará este sinal. Selecione o nó ``GUI``. O lado "
"direito da tela permite empacotar valores opcionais com o sinal. Nós já "
"cuidamos disso em ``Player.gd``. Em geral, eu recomendo não adicionar muitos "
"argumentos usando esta janela, já que eles são menos convenientes do que "
"fazer a partir do código."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:244
msgid "The Connect Signal window with the GUI node selected"
msgstr "A janela Conectar Sinal com o nó GUI selecionado"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:248
msgid ""
"You can optionally connect nodes from the code. However doing it from the "
"editor has two advantages:"
msgstr ""
"Opcionalmente você pode conectar nós do código. Mas fazê-lo do editor tem "
"duas vantagens:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:250
msgid "Godot can write new callback functions for you in the connected script"
msgstr ""
"Godot pode escrever novas funções de retorno de chamada para você no script "
"conectado"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:251
msgid ""
"An emitter icon appears next to the node that emits the signal in the Scene "
"dock"
msgstr ""
"Um ícone de emissor aparece próximo ao nó que emite o sinal no painel Cena"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:253
msgid ""
"At the bottom of the window you will find the path to the node you selected. "
"We're interested in the second row called \"Method in Node\". This is the "
"method on the ``GUI`` node that gets called when the signal is emitted. This "
"method receives the values sent with the signal and lets you process them. "
"If you look to the right, there is a \"Make Function\" radio button that is "
"on by default. Click the connect button at the bottom of the window. Godot "
"creates the method inside the ``GUI`` node. The script editor opens with the "
"cursor inside a new ``_on_Player_health_changed`` function."
msgstr ""
"Na parte inferior da janela, você encontrará o caminho para o nó "
"selecionado. Estamos interessados na segunda linha chamada \"Método no Nó\". "
"Este é o método no nó `` GUI`` que é chamado quando o sinal é emitido. Este "
"método recebe os valores enviados com o sinal e permite processá-los. Se "
"você olhar para a direita, há um botão de opção \"Make Function\" que está "
"ativado por padrão. Clique no botão de conexão na parte inferior da janela. "
"Godot cria o método dentro do nó `` GUI``. O editor de script é aberto com o "
"cursor dentro de uma nova função `` _on_player_health_changed``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:265
msgid ""
"When you connect nodes from the editor, Godot generates a method name with "
"the following pattern: ``_on_EmitterName_signal_name``. If you wrote the "
"method already, the \"Make Function\" option will keep it. You may replace "
"the name with anything you'd like."
msgstr ""
"Quando você conecta nós no editor, Godot gera um nome de método com o "
"seguinte padrão: `` _on_EmitterName_signal_name``. Se você já escreveu o "
"método, a opção \"Make Function\" irá mantê-lo. Você pode substituir o nome "
"com o que quiser."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:272
msgid "Godot writes the callback method for you and takes you to it"
msgstr "Godot escreve o método de callback para você e leva você até ele"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:274
msgid ""
"Inside the parens after the function name, add a ``player_health`` argument. "
"When the player emits the ``health_changed`` signal it will send its current "
"``health`` alongside it. Your code should look like:"
msgstr ""
"Dentro dos parênteses após o nome da função, adicione um argumento "
"``player_health``. Quando o jogador emite o sinal ``health_changed``, ele "
"enviará sua ``health`` atual juntamente. Seu código deve se parecer com:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:292
msgid ""
"The engine does not convert PascalCase to snake_case, for C# examples we'll "
"be using PascalCase for method names & camelCase for method parameters which "
"follows the official `C# naming conventions. <https://docs.microsoft.com/en-"
"us/dotnet/standard/design-guidelines/capitalization-conventions>`_"
msgstr ""
"A engine não converte PascalCase para snake_case, por exemplos em C # "
"estaremos usando PascalCase para nomes de métodos e camelCase para "
"parâmetros de métodos que seguem as convenções oficiais de nomenclatura `C "
"#. <https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/"
"capitalization-conventions> `_"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:299
msgid ""
"In Player.gd, when the Player emits the health\\_changed signal, it also "
"sends its health value"
msgstr ""
"No Player.gd, quando o Player emite o sinal health \\ _changed, ele também "
"envia seu valor de integridade"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:302
msgid ""
"Inside ``_on_Player_health_changed`` let's call a second function called "
"``update_health`` and pass it the ``player_health`` variable."
msgstr ""
"Dentro de `` _on_Player_health_changed`` vamos chamar uma segunda função "
"chamada `` update_health`` e passar a variável `` player_health``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:307
msgid ""
"We could directly update the health value on `LifeBar` and `Number`. There "
"are two reasons to use this method instead:"
msgstr ""
"Poderíamos atualizar diretamente o valor de saúde em `LifeBar` e` Number`. "
"Existem duas razões para usar este método:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:309
msgid ""
"The name makes it clear for our future selves and teammates that when the "
"player took damage, we update the health count on the GUI"
msgstr ""
"O nome deixa claro para os nossos futuros eus e companheiros de equipe que, "
"quando o jogador levou dano, nós atualizamos a contagem de saúde na GUI"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:310
msgid "We will reuse this method a bit later"
msgstr "Nós vamos reutilizar este método um pouco mais tarde"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:312
msgid ""
"Create a new ``update_health`` method below ``_on_Player_health_changed``. "
"It takes a new\\_value as its only argument:"
msgstr ""
"Crie um novo método `` update_health`` abaixo de `` "
"_on_Player_health_changed``. Leva um novo valor como seu único argumento:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:327
msgid "This method needs to:"
msgstr "Este método precisa:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:329
msgid ""
"set the ``Number`` node's ``text`` to ``new_value`` converted to a string"
msgstr ""
"setar o `` text`` do nó `` Number`` para `` new_value`` convertido para uma "
"string"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:331
msgid "set the ``TextureProgress``'s ``value`` to ``new_value``"
msgstr "setar `` value`` do `` TextureProgress`` para `` new_value``"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:350
msgid ""
"``str`` is a built-in function that converts about any value to text. "
"``Number``'s ``text`` property requires a string so we can't assign it to "
"``new_value`` directly"
msgstr ""
"`` str`` é uma função interna que converte qualquer valor em texto. A "
"propriedade `` text`` do `` Number`` requer uma string, então não podemos "
"atribuí-la ao `` new_value`` diretamente"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:354
msgid ""
"Also call ``update_health`` at the end of the ``_ready`` function to "
"initialize the ``Number`` node's ``text`` with the right value at the start "
"of the game. Press F5 to test the game: the life bar updates with every "
"attack!"
msgstr ""
"Também chame `` update_health`` no final da função `` _ready`` para "
"inicializar o `` text`` do nó `` Number`` com o valor correto no início do "
"jogo. Pressione F5 para testar o jogo: a barra de vida é atualizada a cada "
"ataque!"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:361
msgid ""
"Both the Number node and the TextureProgress update when the Player takes a "
"hit"
msgstr ""
"O nó Number e o TextureProgress são atualizados quando o Player recebe um hit"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:365
msgid "Animate the loss of life with the Tween node"
msgstr "Animar a perda de vida com o nó Tween"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:367
msgid ""
"Our interface is functional, but it could use some animation. That's a good "
"opportunity to introduce the ``Tween`` node, an essential tool to animate "
"properties. ``Tween`` animates anything you'd like from a start to an end "
"state over a certain duration. For example it can animate the health on the "
"``TextureProgress`` from its current level to the ``Player``'s new "
"``health`` when the character takes damage."
msgstr ""
"Nossa interface é funcional, mas pode usar alguma animação. Essa é uma boa "
"oportunidade para introduzir o nó `` Tween``, uma ferramenta essencial para "
"animar propriedades. `` Tween`` anima tudo o que você quiser desde o início "
"até o final de uma determinada duração. Por exemplo, ele pode animar a saúde "
"no `` TextureProgress`` do seu nível atual para o novo `` health`` do `` "
"Player`` quando o personagem recebe dano."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:374
msgid ""
"The ``GUI`` scene already contains a ``Tween`` child node stored in the "
"``tween`` variable. Let's now use it. We have to make some changes to "
"``update_health``."
msgstr ""
"A cena `` GUI`` já contém um nó filho `` Tween`` armazenado na variável `` "
"tween``. Vamos agora usá-lo. Nós temos que fazer algumas mudanças em `` "
"update_health``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:378
msgid ""
"We will use the ``Tween`` node's ``interpolate_property`` method. It takes "
"seven arguments:"
msgstr ""
"Nós usaremos o método `` interpolate_property`` do nó `` Tween``. São "
"necessários sete argumentos:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:381
msgid "A reference to the node who owns the property to animate"
msgstr "Uma referência ao nó que possui a propriedade para animar"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:382
msgid "The property's identifier as a string"
msgstr "O identificador da propriedade como uma string"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:383
msgid "The starting value"
msgstr "O valor inicial"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:384
msgid "The end value"
msgstr "O valor final"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:385
msgid "The animation's duration in seconds"
msgstr "A duração da animação em segundos"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:386
msgid "The type of the transition"
msgstr "O tipo da transição"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:387
msgid "The easing to use in combination with the equation."
msgstr "O alívio para usar em combinação com a equação."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:389
msgid ""
"The last two arguments combined correspond to an `easing equation <#>`__. "
"This controls how the value evolves from the start to the end point."
msgstr ""
"Os dois últimos argumentos combinados correspondem a uma equação de "
"atenuação <#> `__. Isso controla como o valor evolui do início ao ponto "
"final."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:393
msgid ""
"Click the script icon next to the ``GUI`` node to open it again. The "
"``Number`` node needs text to update itself, and the ``Bar`` needs a float "
"or an integer. We can use ``interpolate_property`` to animate a number, but "
"not to animate text directly. We're going to use it to animate a new ``GUI`` "
"variable named ``animated_health``."
msgstr ""
"Clique no ícone do script ao lado do nó `` GUI`` para abri-lo novamente. O "
"nó `` Number`` precisa de texto para se atualizar, e a `` Bar`` precisa de "
"um float ou um inteiro. Podemos usar `` interpolate_property`` para animar "
"um número, mas não para animar o texto diretamente. Vamos usá-lo para animar "
"uma nova variável `` GUI`` chamada `` animated_health``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:399
msgid ""
"At the top of the script, define a new variable, name it "
"``animated_health``, and set its value to 0. Navigate back to the "
"``update_health`` method and clear its content. Let's animate the "
"``animated_health`` value. Call the ``Tween`` node's "
"``interpolate_property`` method:"
msgstr ""
"No topo do script, defina uma nova variável, nomeie-a como `` "
"animated_health`` e defina seu valor como 0. Navegue de volta para o método "
"`` update_health`` e limpe seu conteúdo. Vamos animar o valor `` "
"animated_health``. Chame o método `` interpolate_property`` do nó `` Tween``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:421
msgid "Let's break down the call:"
msgstr "Vamos dividir a ligação:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:427
msgid ""
"We target ``animated_health`` on ``self``, that is to say the ``GUI`` node. "
"``Tween``'s interpolate\\_property takes the property's name as a string. "
"That's why we write it as ``\"animated_health\"``."
msgstr ""
"Nosso alvo é `` animated_health`` em `` self``, isto é, o nó `` GUI``. A "
"interpolação de `` Tween`` \\ _property toma o nome da propriedade como uma "
"string. É por isso que nós escrevemos como `` \"animated_health\" ``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:435
msgid ""
"The starting point is the current value the bar's at. We still have to code "
"this part, but it's going to be ``animated_health``. The end point of the "
"animation is the ``Player``'s ``health`` after the ``health_changed``: "
"that's ``new_value``. And ``0.6`` is the animation's duration in seconds."
msgstr ""
"O ponto de partida é o valor atual em que a barra está. Nós ainda temos que "
"codificar esta parte, mas ela será `` animated_health``. O ponto final da "
"animação é `` health`` do `` Player`` depois do `` health_changed``: é `` "
"new_value``. E `` 0.6`` é a duração da animação em segundos."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:445
msgid ""
"The last two arguments are constants from the ``Tween`` class. "
"``TRANS_LINEAR`` means the animation should be linear. ``EASE_IN`` doesn't "
"do anything with a linear transition, but we must provide this last argument "
"or we'll get an error."
msgstr ""
"Os dois últimos argumentos são constantes da classe `` Tween``. `` "
"TRANS_LINEAR`` significa que a animação deve ser linear. `` EASE_IN`` não "
"faz nada com uma transição linear, mas devemos fornecer este último "
"argumento ou obteremos um erro."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:450
msgid ""
"The animation will not play until we activated the ``Tween`` node with "
"``tween.start()``. We only have to do this once if the node is not active. "
"Add this code after the last line:"
msgstr ""
"A animação não será reproduzida até que ativemos o nó `` Tween`` com `` "
"tween.start () ``. Nós só temos que fazer isso uma vez se o nó não estiver "
"ativo. Adicione este código após a última linha:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:469
msgid ""
"Although we could animate the `health` property on the `Player`, we "
"shouldn't. Characters should lose life instantly when they get hit. It makes "
"it a lot easier to manage their state, like to know when one died. You "
"always want to store animations in a separate data container or node. The "
"`tween` node is perfect for code-controlled animations. For hand-made "
"animations, check out `AnimationPlayer`."
msgstr ""
"Embora possamos animar a propriedade `health` no` Player`, não devemos. "
"Personagens devem perder a vida instantaneamente quando são atingidos. Isso "
"torna muito mais fácil gerenciar seu estado, como saber quando um morreu. "
"Você sempre deseja armazenar animações em um contêiner de dados ou nó "
"separado. O nó `tween` é perfeito para animações controladas por código. "
"Para animações feitas à mão, confira `AnimationPlayer`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:472
msgid "Assign the animated\\_health to the LifeBar"
msgstr "Atribuir a \\ _health animada para o LifeBar"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:474
msgid ""
"Now the ``animated_health`` variable animates but we don't update the actual "
"``Bar`` and ``Number`` nodes anymore. Let's fix this."
msgstr ""
"Agora a variável `` animated_health`` anima, mas nós não atualizamos mais os "
"nós `` Bar`` e `` Number``. Vamos consertar isso."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:477
msgid "So far, the update\\_health method looks like this:"
msgstr "Até agora, o método update \\ _health se parece com isto:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:501
msgid ""
"In this specific case, because ``number_label`` takes text, we need to use "
"the ``_process`` method to animate it. Let's now update the ``Number`` and "
"``TextureProgress`` nodes like before, inside of ``_process``:"
msgstr ""
"Neste caso específico, porque `` number_label`` recebe texto, nós precisamos "
"usar o método `` _process`` para animá-lo. Vamos agora atualizar os nós `` "
"Number`` e `` TextureProgress`` como antes, dentro de `` _process``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:523
msgid ""
"`number_label` and `bar` are variables that store references to the `Number` "
"and `TextureProgress` nodes."
msgstr ""
"`number_label` e` bar` são variáveis que armazenam referências aos nós "
"`Number` e` TextureProgress`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:525
msgid ""
"Play the game to see the bar animate smoothly. But the text displays decimal "
"number and looks like a mess. And considering the style of the game, it'd be "
"nice for the life bar to animate in a choppier fashion."
msgstr ""
"Jogue o jogo para ver a barra animar suavemente. Mas o texto exibe o número "
"decimal e parece uma bagunça. E considerando o estilo do jogo, seria bom "
"para a barra de vida para animar de uma forma mais bonita."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:531
msgid "The animation is smooth but the number is broken"
msgstr "A animação é suave, mas o número está quebrado"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:533
msgid ""
"We can fix both problems by rounding out ``animated_health``. Use a local "
"variable named ``round_value`` to store the rounded ``animated_health``. "
"Then assign it to ``number_label.text`` and ``bar.value``:"
msgstr ""
"Podemos consertar ambos os problemas, completando `` animated_health``. Use "
"uma variável local chamada `` round_value`` para armazenar o `` "
"animated_health`` arredondado. Em seguida, atribua-o a `` number_label."
"text`` e `` bar.value``:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:555
msgid "Try the game again to see a nice blocky animation."
msgstr "Rode o jogo novamente para ver uma bela animação em blocos."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:559
msgid "By rounding out animated\\_health we hit two birds with one stone"
msgstr ""
"Ao arredondar animated\\_health, acertamos dois coelhos com uma só cajadada"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:563
msgid ""
"Every time the player takes a hit, the ``GUI`` calls "
"``_on_Player_health_changed``, which in turn calls ``update_health``. This "
"updates the animation and the ``number_label`` and ``bar`` follow in "
"``_process``. The animated life bar that shows the health going down "
"gradually is a trick. It makes the GUI feel alive. If the ``Player`` takes 3 "
"damage, it happens in an instant."
msgstr ""
"Toda vez que o jogador recebe um hit, o `` GUI`` chama `` "
"_on_Player_health_changed``, que por sua vez chama `` update_health``. Isso "
"atualiza a animação e o `` number_label`` e `` bar`` seguem em `` "
"_process``. A barra de vida animada que mostra a saúde diminuindo "
"gradualmente é um truque. Faz a GUI parecer viva. Se o `` Player`` receber 3 "
"de dano, isso acontece em um instante."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:571
msgid "Fade the bar when the Player dies"
msgstr "Clareia a barra quando o jogador morre"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:573
msgid ""
"When the green character dies, it plays a death animation and fades out. At "
"this point, we shouldn't show the interface anymore. Let's fade the bar as "
"well when the character died. We will reuse the same ``Tween`` node as it "
"manages multiple animations in parallel for us."
msgstr ""
"Quando o personagem verde morre, ele executa uma animação de morte e "
"desaparece. Neste ponto, não devemos mais mostrar a interface. Vamos "
"desaparecer também quando o personagem morrer. Vamos reutilizar o mesmo nó "
"`` Tween`` enquanto ele gerencia múltiplas animações em paralelo para nós."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:578
msgid ""
"First, the ``GUI`` needs to connect to the ``Player``'s ``died`` signal to "
"know when it died. Press :kbd:`F1` to jump back to the 2D Workspace. Select "
"the ``Player`` node in the Scene dock and click on the Node tab next to the "
"Inspector."
msgstr ""
"Primeiro, o `` GUI`` precisa se conectar ao sinal `` died`` do `` Player`` "
"para saber quando ele morreu. Pressione: kbd: `F1` para voltar ao espaço de "
"trabalho 2D. Selecione o nó `` Player`` na doca Scene e clique na aba Node "
"ao lado do Inspector."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:583
msgid "Find the ``died`` signal, select it, and click the Connect button."
msgstr "Encontre o sinal `` morreu``, selecione-o e clique no botão Conectar."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:587
msgid "The signal should already have the Enemy connected to it"
msgstr "O sinal já deve ter o inimigo conectado a ele"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:589
msgid ""
"In the Connecting Signal window, connect to the ``GUI`` node again. The Path "
"to Node should be ``../../GUI`` and the Method in Node should show "
"``_on_Player_died``. Leave the Make Function option on and click Connect at "
"the bottom of the window. This will take you to the ``GUI.gd`` file in the "
"Script Workspace."
msgstr ""
"Na janela Connecting Signal, conecte-se ao nó `` GUI`` novamente. O caminho "
"para o nó deve ser `` ../../ GUI`` e o método no nó deve mostrar `` "
"_on_Player_died``. Deixe a opção Make Function ativada e clique em Connect "
"na parte inferior da janela. Isso levará você ao arquivo `` GUI.gd`` no "
"espaço de trabalho do Script."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:597
msgid "You should get these values in the Connecting Signal window"
msgstr "Você deve obter esses valores na janela Conectando um sinal"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:601
msgid ""
"You should see a pattern by now: every time the GUI needs a new piece of "
"information, we emit a new signal. Use them wisely: the more connections you "
"add, the harder they are to track."
msgstr ""
"Você deve ver um padrão agora: toda vez que a GUI precisar de uma nova "
"informação, emitimos um novo sinal. Use-os com sabedoria: quanto mais "
"conexões você adicionar, mais difícil será rastrear."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:603
msgid ""
"To animate a fade on a UI element, we have to use its ``modulate`` property. "
"``modulate`` is a ``Color`` that multiplies the colors of our textures."
msgstr ""
"Para animar um fade em um elemento da interface do usuário, temos que usar "
"sua propriedade `` modulate``. `` modulate`` é uma `` Cor`` que multiplica "
"as cores de nossas texturas."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:609
msgid ""
"`modulate` comes from the `CanvasItem` class, All 2D and UI nodes inherit "
"from it. It lets you toggle the visibility of the node, assign a shader to "
"it, and modify it using a color with `modulate`."
msgstr ""
"`modulate` vem da classe` CanvasItem`, todos os nós 2D e UI são herdados. "
"Ele permite que você alterne a visibilidade do nó, atribua um sombreador a "
"ele e modifique-o usando uma cor com `modulate`."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:611
msgid ""
"``modulate`` takes a ``Color`` value with 4 channels: red, green, blue and "
"alpha. If we darken any of the first three channels it darkens the "
"interface. If we lower the alpha channel our interface fades out."
msgstr ""
"`` modulate`` recebe um valor `` Color`` com 4 canais: vermelho, verde, azul "
"e alfa. Se escurecermos qualquer um dos três primeiros canais, escurecerá a "
"interface. Se abaixarmos o canal alfa, nossa interface desaparece."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:615
msgid ""
"We're going to tween between two color values: from a white with an alpha of "
"``1``, that is to say at full opacity, to a pure white with an alpha value "
"of ``0``, completely transparent. Let's add two variables at the top of the "
"``_on_Player_died`` method and name them ``start_color`` and ``end_color``. "
"Use the ``Color()`` constructor to build two ``Color`` values."
msgstr ""
"Vamos interpor entre dois valores de cores: de um branco com um alfa de `` "
"1``, isto é, com opacidade total, a um branco puro com um valor alfa de `` "
"0``, completamente transparente. Vamos adicionar duas variáveis no topo do "
"método `` _on_Player_died`` e nomea-las `` start_color`` e `` end_color``. "
"Use o construtor `` Color () `` para construir dois valores `` Color``."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:637
msgid ""
"``Color(1.0, 1.0, 1.0)`` corresponds to white. The fourth argument, "
"respectively ``1.0`` and ``0.0`` in ``start_color`` and ``end_color``, is "
"the alpha channel."
msgstr ""
"`` Color (1.0, 1.0, 1.0) `` corresponde ao branco. O quarto argumento, "
"respectivamente `` 1.0`` e `` 0.0`` em `` start_color`` e `` end_color``, é "
"o canal alfa."

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:641
msgid ""
"We then have to call the ``interpolate_property`` method of the ``Tween`` "
"node again:"
msgstr ""
"Nós então temos que chamar o método `` interpolate_property`` do nó `` "
"Tween`` novamente:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:654
msgid ""
"This time we change the ``modulate`` property and have it animate from "
"``start_color`` to the ``end_color``. The duration is of one second, with a "
"linear transition. Here again, because the transition is linear, the easing "
"does not matter. Here's the complete ``_on_Player_died`` method:"
msgstr ""
"Desta vez nós mudamos a propriedade `` modulate`` e a animamos de `` "
"start_color`` para `` end_color``. A duração é de um segundo, com uma "
"transição linear. Aqui, novamente, porque a transição é linear, o alívio não "
"importa. Aqui está o método `` _on_Player_died`` completo:"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:679
msgid "And that is it. You may now play the game to see the final result!"
msgstr "E é isso. Agora você pode jogar o jogo para ver o resultado final!"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:683
msgid "The final result. Congratulations for getting there!"
msgstr "O resultado, final Parabéns por chegar lá!"

#: ../../docs/getting_started/step_by_step/ui_code_a_life_bar.rst:687
msgid ""
"Using the exact same techniques, you can change the color of the bar when "
"the Player gets poisoned, turn the bar red when its health drops low, shake "
"the UI when they take a critical hit... the principle is the same: emit a "
"signal to forward the information from the `Player` to the `GUI` and let the "
"`GUI` process it."
msgstr ""
"Usando exatamente as mesmas técnicas, você pode mudar a cor da barra quando "
"o jogador é envenenado, transformar a barra em vermelho quando a sua saúde "
"cai, sacudir a interface do usuário quando eles tomam um dano crítico ... o "
"princípio é o mesmo: emitir um sinal para encaminhar as informações do "
"`Player` para o` GUI` e deixar o `GUI` processá-lo."
