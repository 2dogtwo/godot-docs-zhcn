# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-20 16:21+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:4
#, fuzzy
msgid "Godot's design philosophy"
msgstr "Filosofia de Design do Godot"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:6
msgid "Now that you've gotten your hands wet, let's talk about Godot's design."
msgstr ""
"Agora que você está com as mãos molhadas, vamos falar sobre o design de "
"Godot."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:8
#, fuzzy
msgid ""
"**Every game engine is different and fits different needs.** Not only do "
"they offer a range of features, but the design of each engine is unique. "
"This leads to different workflows and different ways to form your games' "
"structures. This all stems from their respective design philosophies."
msgstr ""
"**Cada motor de jogo é diferente e atende a diferentes necessidades.** Não "
"apenas oferecem uma gama de recursos, mas o design de cada mecanismo é "
"único. Isso leva a diferentes fluxos de trabalho e diferentes maneiras de "
"formar as estruturas dos seus jogos. Tudo isso decorre de suas respectivas "
"filosofias de design."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:13
msgid ""
"This page is here to help you understand how Godot works, starting with some "
"of its core pillars. It is not a list of available features, nor is it an "
"engine comparison. To know if any engine can be a good fit for your project, "
"you need to try it out for yourself and understand its design and "
"limitations."
msgstr ""
"Esta página está aqui para ajudá-lo a entender como funciona o Godot, "
"começando com alguns de seus principais pilares. Não é uma lista de recursos "
"disponíveis, nem é uma comparação de mecanismo. Para saber se algum "
"mecanismo pode se encaixar ao seu projeto, você precisa experimentá-lo por "
"si mesmo e entender seu design e limitações."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:19
msgid ""
"Please watch `Discover Godot 3, the Free game engine <https://youtu."
"be/4v3qge-3CqQ>`_ if you're looking for an overview of the engine's features."
msgstr ""
"Por favor, observe `Discover Godot 3, Free game engine <https://youtu."
"be/4v3qge-3CqQ>`_ se você estiver procurando por uma visão geral dos "
"recursos do mecanismo."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:23
msgid "Object-oriented design and composition"
msgstr "Design e composição orientada a objetos"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:25
msgid ""
"Godot embraces object-oriented design at its core with its flexible scene "
"system and Node hierarchy. It tries to stay away from strict programming "
"patterns to offer an intuitive way to structure your game."
msgstr ""
"Godot adota o design orientado a objetos em seu núcleo, com seu sistema de "
"cena flexível e hierarquia de Nós. Ele tenta ficar longe de padrões estritos "
"de programação para oferecer uma maneira intuitiva de estruturar seu jogo."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:29
msgid ""
"For one, Godot lets you **compose or aggregate** scenes. It's like nested "
"prefabs: you can create a BlinkingLight scene and a BrokenLantern scene that "
"uses the BlinkingLight. Then, create a city filled with BrokenLanterns. "
"Change the BlinkingLight's color, save, and all the BrokenLanterns in the "
"city will update instantly."
msgstr ""
"Por um lado, Godot permite **compor ou agregar** cenas. É como prefabs "
"aninhados: você pode criar uma cena BlinkingLight e uma cena BrokenLantern "
"que usa o BlinkingLight. Em seguida, crie uma cidade repleta de "
"BrokenLanterns. Mude a cor do BlinkingLight, salve e todos os BrokenLanterns "
"na cidade serão atualizados instantaneamente."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:36
msgid "On top of that, you can **inherit** from any scene."
msgstr "Além disso, você pode **herdar** de qualquer cena."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:38
#, fuzzy
msgid ""
"A Godot scene could be a Weapon, a Character, an Item, a Door, a Level, part "
"of a level… anything you'd like. It works like a class in pure code, except "
"you're free to design it by using the editor, using only the code, or mixing "
"and matching the two."
msgstr ""
"Uma cena Godot poderia ser uma arma, um personagem, um item, uma porta, um "
"nível, parte de um nível... qualquer coisa que você quiser. Funciona como "
"uma classe em código puro, com a exceção de que você é livre para projetá-la "
"usando o editor, usando apenas o código ou misturando e combinando os dois."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:43
#, fuzzy
msgid ""
"It's different from prefabs you find in several 3D engines, as you can then "
"inherit from and extend those scenes. You may create a Magician that extends "
"your Character. Modify the Character in the editor and the Magician will "
"update as well. It helps you build your projects so that their structure "
"matches the game's design."
msgstr ""
"É diferente das prefabs que você encontra em vários mecanismos 3D, pois pode "
"herdar e estender essas cenas. Você pode criar um Mago que estenda seu "
"Personagem. Modifique o Personagem no editor e o Mago também atualizará. "
"Isso te ajuda a criar seus projetos de modo que sua estrutura corresponda ao "
"design do jogo."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:49
msgid "|image0|"
msgstr "|image0|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:51
#, fuzzy
msgid ""
"Also note that Godot offers many different types of objects called nodes, "
"each with a specific purpose. Nodes are part of a tree and always inherit "
"from their parents up to the Node class. Although the engine does feature "
"components like collision shapes, they're the exception, not the norm."
msgstr ""
"Observe também que o Godot oferece muitos tipos diferentes de objetos "
"chamados nós, cada um com um propósito específico. Os nós são parte de uma "
"árvore e sempre herdam de seus pais até a classe Node. Embora o mecanismo "
"tenha componentes como formas de colisão, eles são a exceção, não a regra."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:57
msgid "|image1|"
msgstr "|image1|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:59
msgid ""
"Sprite is a Node2D, a CanvasItem and a Node. It has all the properties and "
"features of its three parent classes, like transforms or the ability to draw "
"custom shapes and render with a custom shader."
msgstr ""
"Sprite é um Node2D, um CanvasItem e um Node. Ele tem todas as propriedades e "
"recursos de suas três classes principais, como transformações ou a "
"capacidade de desenhar formas personalizadas e renderizar com um sombreador "
"personalizado."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:64
msgid "All-inclusive package"
msgstr "Pacote com tudo incluído"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:66
msgid ""
"Godot tries to provide its own tools to answer most common needs. It has a "
"dedicated scripting workspace, an animation editor, a tilemap editor, a "
"shader editor, a debugger, a profiler, the ability to hot-reload locally and "
"on remote devices, etc."
msgstr ""
"O Godot tenta fornecer suas próprias ferramentas para responder às "
"necessidades mais comuns. Tem um editor de script dedicado, um editor de "
"animação, um editor de tilemaps, um editor de shaders, um depurador, um "
"profiler, a capacidade de hot-reload local e em dispositivos remotos, etc."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:71
msgid "|image2|"
msgstr "|image2|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:73
msgid ""
"The goal is to offer a full package to create games and a continuous user "
"experience. You can still work with external programs as long as there is an "
"import plugin for it. Or you can create one, like the `Tiled Map Importer "
"<https://github.com/vnen/godot-tiled-importer>`__."
msgstr ""
"O objetivo é oferecer um pacote completo para criar jogos e uma experiência "
"de usuário contínua. Você ainda pode trabalhar com programas externos desde "
"que exista um plugin de importação para ele. Ou você pode criar um, como o "
"`Tiled Map Importer <https://github.com/vnen/godot-tiled-importer>`__."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:78
#, fuzzy
msgid ""
"That is also partly why Godot offers its own programming languages GDscript "
"and VisualScript, along with C#. They're designed for the needs of game "
"developers and game designers, and they're tightly integrated in the engine "
"and the editor."
msgstr ""
"Isso também é em parte porque o Godot oferece suas próprias linguagens de "
"programação GDscript e VisualScript, junto com C #. Elas são projetadas para "
"as necessidades de desenvolvedores de jogos e designers de jogos, e estão "
"totalmente integradas à engine e ao editor."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:83
msgid ""
"GDscript lets you write simple code using Python-like syntax, yet it detects "
"types and offers a static language's quality of auto-completion. It is also "
"optimized for gameplay code with built-in types like Vectors and Colors."
msgstr ""
"O GDscript permite que você escreva um código simples usando uma sintaxe "
"parecida com o Python, porém ele detecta tipos e oferece a característica de "
"preenchimento automático de uma linguagem estática. Também é otimizado para "
"código de jogo com tipos embutidos como Vetores e Cores."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:87
msgid ""
"Note that with GDNative, you can write high-performance code using compiled "
"languages like C, C++, Rust, or Python (using the Cython compiler) without "
"recompiling the engine."
msgstr ""
"Observe que com o GDNative, você pode escrever código de alto desempenho "
"usando linguagens compiladas como C, C++, Rust ou Python (usando o "
"compilador Cython) sem recompilar a engine."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:91
msgid "|image3|"
msgstr "|image3|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:93
msgid ""
"*VisualScript is a node-based programming language that integrates well in "
"the editor. You can drag and drop nodes or resources into the graph to "
"create new code blocks.*"
msgstr ""
"*VisualScript é uma linguagem de programação baseada em nós que se integra "
"bem ao editor. Você pode arrastar e soltar nós ou recursos no gráfico para "
"criar novos blocos de código.*"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:97
#, fuzzy
msgid ""
"Note that the 3D workspace doesn't feature as many tools as the 2D "
"workspace. You'll need external programs or add-ons to edit terrains, "
"animate complex characters, and so on. Godot provides a complete API to "
"extend the editor's functionality using game code. See `The Godot editor is "
"a Godot game`_ below."
msgstr ""
"Observe que o espaço de trabalho 3D não possui tantas ferramentas quanto o "
"espaço de trabalho 2D. Você precisará de programas externos ou complementos "
"para editar terrenos, animar caracteres complexos e assim por diante. A "
"Godot fornece uma API completa para estender a funcionalidade do editor "
"usando o código do jogo. Veja `O editor Godot é um jogo Godot`_ abaixo."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:102
msgid "|image4|"
msgstr "|image4|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:104
msgid ""
"*A State Machine editor plugin in Godot 2 by kubecz3k. It lets you manage "
"states and transitions visually.*"
msgstr ""
"*Um plugin de editor de Máquina de Estados em Godot 2 por kubecz3k. Ele "
"permite gerenciar estados e transições visualmente*"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:108
msgid "Open source"
msgstr "Código aberto"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:110
#, fuzzy
msgid ""
"Godot offers a fully open source codebase under the **MIT license**. This "
"means all the technologies that ship with it have to be Free (as in freedom) "
"as well. For the most part, they're developed from the ground up by "
"contributors."
msgstr ""
"O Godot oferece uma base de código totalmente aberto sob a **licença MIT**. "
"Isso significa que todas as tecnologias que acompanham o produto têm que ser "
"Livres (como em liberdade) também. Na maior parte, eles são codificados do "
"zero pelos colaboradores."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:115
#, fuzzy
msgid ""
"Anyone can plug in proprietary tools for the needs of their projects — they "
"just won't ship with the engine. This may include Google AdMob, or FMOD. Any "
"of these can come as third-party plugins instead."
msgstr ""
"Qualquer um pode conectar ferramentas proprietárias em seus projetos - elas "
"apenas não estão disponíveis com a engine do Godot. Isso pode incluir NViDia "
"PhysX, o Google Admob ou um importador de arquivos FBX. Qualquer um destes "
"pode vir como plugins de terceiros."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:120
#, fuzzy
msgid ""
"On the other hand, an open codebase means you can **learn from and extend "
"the engine** to your heart's content. You can also debug games easily, as "
"Godot will print errors with a stack trace, even if they come from the "
"engine itself."
msgstr ""
"Por outro lado, uma base de código aberta significa que você pode **aprender "
"e estender a engine** como desejar. Você também pode depurar jogos "
"facilmente, pois o Godot irá mostrar erros com um rastreamento de pilha, "
"mesmo se eles vierem da própria engine."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:126
#, fuzzy
msgid ""
"This **does not affect the work you do with Godot** in any way: there's no "
"strings attached to the engine or anything you make with it."
msgstr ""
"Isso **não afeta o trabalho que você faz com a Godot** de maneira alguma: "
"não há strings anexadas à engine ou qualquer coisa que você faça com ela."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:130
msgid "Community-driven"
msgstr "Orientada pela comunidade"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:132
#, fuzzy
msgid ""
"**Godot is made by its community, for the community, and for all game "
"creators out there.** It's the needs of the users and open discussions that "
"drive the core updates. New features from the core developers often focus on "
"what will benefit the most users first."
msgstr ""
"**O Godot é feito por sua comunidade, para a comunidade e para todos os "
"criadores de jogos.** São as necessidades dos usuários e as discussões "
"abertas que geram as principais atualizações. Novas funcionalidades dos "
"principais desenvolvedores geralmente focam no que beneficiará a maioria dos "
"usuários em primeiro lugar."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:137
#, fuzzy
msgid ""
"That said, although a handful of core developers work on it full-time, the "
"project has over 600 contributors at the time of writing. Benevolent "
"programmers work on features they may need themselves, so you'll see "
"improvements in all corners of the engine at the same time in every major "
"release."
msgstr ""
"Dito isso, embora um punhado de desenvolvedores principais trabalhe em tempo "
"integral, o projeto tem mais de 500 colaboradores no momento desta redação. "
"Programadores benevolentes trabalham em recursos que necessitam, por isso "
"você verá melhorias em todos os cantos da engine ao mesmo tempo em todas as "
"principais versões."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:144
msgid "The Godot editor is a Godot game"
msgstr "O editor Godot é um jogo Godot"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:146
#, fuzzy
msgid ""
"The Godot editor runs on the game engine. It uses the engine's own UI "
"system, it can hot-reload code and scenes when you test your projects, or "
"run game code in the editor. This means you can **use the same code** and "
"scenes for your games, or **build plugins and extend the editor.**"
msgstr ""
"O editor Godot é executado na engine de jogo. Ele usa o próprio sistema de "
"interface do usuário da engine, pode recarregar códigos e cenas ao testar "
"seus projetos ou executar códigos de jogos no editor. Isso significa que "
"você pode **usar o mesmo código** e cenas para seus jogos ou **construir "
"plug-ins e estender o editor.**"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:151
msgid ""
"This leads to a reliable and flexible UI system, as it powers the editor "
"itself. With the ``tool`` keyword, you can run any game code in the editor."
msgstr ""
"Isso leva a um sistema de interface de usuário (UI) confiável e flexível, "
"pois aciona o próprio editor. Com a palavra-chave ``tool``, você pode "
"executar qualquer código de jogo no editor."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:154
msgid "|image5|"
msgstr "|image5|"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:156
#, fuzzy
msgid ""
"*RPG in a Box is a voxel RPG editor made with Godot 2. It uses Godot's UI "
"tools for its node-based programming system and for the rest of the "
"interface.*"
msgstr ""
"*RPG in a Box é um editor de RPG voxel feito no Godot 2. Ele usa as "
"ferramentas de Interface com Usuário do Godot para seu sistema de "
"programação baseada em nós e para o resto da interface.*"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:160
msgid ""
"Put the ``tool`` keyword at the top of any GDScript file and it will run in "
"the editor. This lets you import and export plugins, create plugins like "
"custom level editors, or create scripts with the same nodes and API you use "
"in your projects."
msgstr ""
"Coloque a palavra-chave ``tool`` na parte superior de qualquer arquivo "
"GDscript e ela será executada no editor. Isso permite importar e exportar "
"plug-ins, criar plug-ins como editores de nível personalizados ou criar "
"scripts com os mesmos nós e API que você usa em seus projetos."

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:166
msgid "Separate 2D and 3D engines"
msgstr "Engine 2D e 3D separados"

#: ../../docs/getting_started/step_by_step/godot_design_philosophy.rst:168
msgid ""
"Godot offers dedicated 2D and 3D rendering engines. As a result, **the base "
"unit for 2D scenes is pixels.** Even though the engines are separate, you "
"can render 2D in 3D, 3D in 2D, and overlay 2D sprites and interfaces over "
"your 3D world."
msgstr ""
"O Godot oferece mecanismos dedicados de renderização 2D e 3D. Como "
"resultado, **a unidade base para cenas 2D é pixels.** Mesmo que os "
"mecanismos sejam separados, você pode renderizar 2D em 3D, 3D em 2D e "
"sobrepor sprites 2D e fazer a interface em seu mundo 3D."
