# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2022, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-11 15:14+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Idle and Physics Processing"
msgstr ""

msgid ""
"Games run in a loop. Each frame, you need to update the state of your game "
"world before drawing it on screen. Godot provides two virtual methods in the "
"Node class to do so: :ref:`Node._process() <class_Node_method__process>` "
"and :ref:`Node._physics_process() <class_Node_method__physics_process>`. If "
"you define either or both in a script, the engine will call them "
"automatically."
msgstr ""

#, fuzzy
msgid "There are two types of processing available to you:"
msgstr "Há dois tipos de ícones requisitados pelo Godot:"

msgid ""
"**Idle processing** allows you to run code that updates a node every frame, "
"as often as possible."
msgstr ""

msgid ""
"**Physics processing** happens at a fixed rate, 60 times per second by "
"default. This is independent of your game's actual framerate, and keeps "
"physics running smoothly. You should use it for anything that involves the "
"physics engine, like moving a body that collides with the environment."
msgstr ""

#, fuzzy
msgid ""
"You can activate idle processing by defining the ``_process()`` method in a "
"script. You can turn it off and back on by calling :ref:`Node.set_process() "
"<class_Node_method_set_process>`."
msgstr ""
"Processamento ocioso é ativado quando o método :ref:`Node._process() "
"<class_Node_method__process>` é encontrado em um roteiro. Ele pode ser "
"desativado e reativado com a função :ref:`Node.set_process() "
"<class_Node_method_set_process>`."

msgid "The engine calls this method every time it draws a frame:"
msgstr ""

#, fuzzy
msgid ""
"Keep in mind that the frequency at which the engine calls ``_process()`` "
"depends on your application's framerate, which varies over time and across "
"devices."
msgstr ""
"É importante ter em mente que a frequência em que a função ``_process()`` "
"será chamada depende de quantos quadros por segundo (FPS) sua aplicação está "
"rodando. Essa taxa pode variar com o tempo e dispositivos."

msgid ""
"The function's ``delta`` parameter is the time elapsed in seconds since the "
"previous call to ``_process()``. Use this parameter to make calculations "
"independent of the framerate. For example, you should always multiply a "
"speed value by ``delta`` to animate a moving object."
msgstr ""

#, fuzzy
msgid ""
"Physics processing works with a similar virtual function: "
"``_physics_process()``. Use it for calculations that must happen before each "
"physics step, like moving a character that collides with the game world. As "
"mentioned above, ``_physics_process()`` runs at fixed time intervals as much "
"as possible to keep the physics interactions stable. You can change the "
"interval between physics steps in the Project Settings, under Physics -> "
"Common -> Physics Fps. By default, it's set to run 60 times per second."
msgstr ""
"Processamento físico usando ``_physics_process()`` funciona de forma "
"similar, mas deve ser usado para processos que tenham que acontecer antes de "
"cada passo da física, tais como controlar um personagem. Ele é sempre "
"executado antes de um passo da física e é chamado em intervalos fixos de "
"tempo: 60 vezes por segundo por padrão. Você pode alterar o intervalo nas "
"Configurações do Projeto, em Physics -> Common -> Physics Fps (Física -> "
"Comum -> Fps de Física)."

#, fuzzy
msgid ""
"The function ``_process()`` is not synchronized with physics. Its rate "
"depends on hardware and game optimization. It also runs after the physics "
"step in single-threaded games."
msgstr ""
"A função ``_process()``, contudo, não é sincronizado com a física. Sua taxa "
"de quadros não é constante e depende do hardware e da otimização do jogo. "
"Sua execução é feita depois do passo da física em jogos de thread única."

#, fuzzy
msgid ""
"You can see the ``_process()`` function at work by creating a scene with a "
"single Label node, with the following script attached to it:"
msgstr ""
"Uma maneira simples de ver a função ``_process()`` funcionando é criar uma "
"cena com um único nó Label, com o seguinte roteiro:"

#, fuzzy
msgid "When you run the scene, you should see a counter increasing each frame."
msgstr "Que vai mostrar um contador aumentando a cada quadro."

#, fuzzy
msgid "Translation status"
msgstr "Formato de tradução"
