# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2022, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-29 17:56+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "File paths in Godot projects"
msgstr "Preparando o projeto"

msgid ""
"This page explains how file paths work inside Godot projects. You will learn "
"how to access paths in your projects using the ``res://`` and ``user://`` "
"notations and where Godot stores user files on your hard-drive."
msgstr ""

msgid "Path separators"
msgstr ""

msgid ""
"To as many platforms as possible, Godot only accepts UNIX-style path "
"separators (``/``). These work on all platforms, including Windows."
msgstr ""

msgid ""
"Instead of writing paths like ``C:\\Projects``, in Godot, you should write "
"``C:/Projects``."
msgstr ""

#, fuzzy
msgid "Accessing files in the project folder"
msgstr "Adicionando arquivos ao projeto"

msgid ""
"Godot considers that a project exists in any folder that contains a "
"``project.godot`` text file, even if the file is empty. The folder that "
"contains this file is your project's root folder."
msgstr ""

msgid ""
"You can access any file relative to it by writing paths starting with "
"``res://``, which stands for resources. For example, you can access an image "
"file ``character.png`` located in the project's root folder in code with the "
"following path: ``res://some_texture.png``."
msgstr ""

#, fuzzy
msgid "Accessing persistent user data"
msgstr "Acessando os Nós de Cena"

msgid ""
"To store persistent data files, like the player's save or settings, you want "
"to use ``user://`` instead of ``res://`` as your path's prefix. This is "
"because when the game is running, the project's file system will likely be "
"read-only."
msgstr ""

msgid ""
"The ``user://`` prefix points to a different directory on the user's device. "
"On mobile and consoles, this path is unique to the project. On desktop, the "
"engine stores user files in ``~/.local/share/godot/app_userdata/"
"[project_name]`` on Linux, ``~/Library/Application Support/Godot/"
"app_userdata/[project_name]`` on macOS (since Catalina) and ``%APPDATA%"
"\\Godot\\app_userdata\\[project_name]`` on Windows. ``[project_name]`` is "
"based on the application name defined in the Project Settings, but you can "
"override it on a per-platform basis using :ref:`feature tags "
"<doc_feature_tags>`."
msgstr ""

msgid ""
"On HTML5 exports, ``user://`` will refer to a virtual filesystem stored on "
"the device via IndexedDB. (Interaction with the main filesystem can still be "
"performed through the :ref:`JavaScript <class_JavaScript>` singleton.)"
msgstr ""

#, fuzzy
msgid "Editor data paths"
msgstr "Manual do editor"

msgid ""
"The editor uses different paths for user data, user settings, and cache, "
"depending on the platform. By default, these paths are:"
msgstr ""

msgid "Type"
msgstr "Tipo"

msgid "Location"
msgstr "Localização"

#, fuzzy
msgid "User data"
msgstr "Caminho do usuário"

#, fuzzy
msgid "Windows: ``%APPDATA%\\Godot\\app_userdata\\[project_name]``"
msgstr "Windows: ``%APPDATA%\\Godot\\script_templates\\``"

#, fuzzy
msgid "macOS: ``~/Library/Application Support/Godot/[project_name]``"
msgstr "macOS: ``$HOME/Library/Application Support/Godot/script_templates/``"

msgid "Linux: ``~/.local/share/godot/[project_name]``"
msgstr ""

msgid "User data (when ``use_custom_user_dir`` project setting is ``true``)"
msgstr ""

#, fuzzy
msgid "Windows: ``%APPDATA%\\[project_name]``"
msgstr "Windows: ``%APPDATA%\\Godot\\script_templates\\``"

#, fuzzy
msgid "macOS: ``~/Library/Application Support/[project_name]``"
msgstr "macOS: ``$HOME/Library/Application Support/Godot/script_templates/``"

msgid "Linux: ``~/.local/share/[project_name]``"
msgstr ""

#, fuzzy
msgid "User settings"
msgstr "String com múltiplas linhas"

msgid "Windows: ``%APPDATA%\\Godot\\``"
msgstr ""

msgid "macOS: ``~/Library/Application Support/Godot/``"
msgstr ""

msgid "Linux: ``~/.config/godot/``"
msgstr ""

msgid "Cache"
msgstr ""

msgid "Windows: ``%TEMP%\\Godot\\``"
msgstr ""

msgid "macOS: ``~/Library/Caches/Godot/``"
msgstr ""

msgid "Linux: ``~/.cache/godot/``"
msgstr ""

msgid "**User data** contains export templates and project-specific data."
msgstr ""

msgid ""
"**User settings** contains editor settings, text editor themes, script "
"templates, etc."
msgstr ""

msgid ""
"**Cache** contains temporary data. It can safely be removed when Godot is "
"closed."
msgstr ""

msgid ""
"Godot complies with the `XDG Base Directory Specification <https://"
"specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html>`__ on "
"all platforms. You can override environment variables following the "
"specification to change the editor and project data paths."
msgstr ""

msgid ""
"If you use `Godot packaged as a Flatpak <https://flathub.org/apps/details/"
"org.godotengine.Godot>`__, the editor data paths will be located in "
"subfolders in ``~/.var/app/org.godotengine.Godot/``."
msgstr ""

msgid "Self-contained mode"
msgstr ""

msgid ""
"If you create a file called ``._sc_`` or ``_sc_`` in the same directory as "
"the editor binary, Godot will enable *self-contained mode*. This mode makes "
"Godot write all user data to a directory named ``editor_data/`` in the same "
"directory as the editor binary. You can use it to create a portable "
"installation of the editor."
msgstr ""

msgid ""
"The `Steam release of Godot <https://store.steampowered.com/app/404790/>`__ "
"uses self-contained mode by default."
msgstr ""

msgid "Translation status"
msgstr "Estado de tradução"
