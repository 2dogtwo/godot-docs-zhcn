# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-17 12:01+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/cpp/configuring_an_ide.rst:4
msgid "Configuring an IDE"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:6
msgid ""
"We assume that you have already `cloned <https://github.com/godotengine/"
"godot>`_ and :ref:`compiled <toc-devel-compiling>` Godot."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:9
msgid ""
"You can easily develop Godot with any text editor and by invoking ``scons`` "
"on the command line, but if you want to work with an IDE (Integrated "
"Development Environment), here are setup instructions for some popular ones:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:13
msgid ""
":ref:`Qt Creator <doc_configuring_an_ide_qtcreator>` (all desktop platforms)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:14
msgid ""
":ref:`Kdevelop <doc_configuring_an_ide_kdevelop>` (all desktop platforms)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:15
msgid ":ref:`Xcode <doc_configuring_an_ide_xcode>` (macOS)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:16
msgid ":ref:`Visual Studio <doc_compiling_for_windows_install_vs>` (Windows)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:17
msgid ""
":ref:`Visual Studio Code<doc_configuring_an_ide_vscode>` (all desktop "
"platforms)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:18
msgid ""
":ref:`Android Studio<doc_configuring_an_ide_android_studio>` (all desktop "
"platforms)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:20
msgid ""
"It is possible to use other IDEs, but their setup is not documented yet."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:25
msgid "Qt Creator"
msgstr "Qt Creator"

#: ../../docs/development/cpp/configuring_an_ide.rst:28
msgid "Importing the project"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:30
msgid "Choose *New Project* -> *Import Project* -> *Import Existing Project*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:34
msgid "Set the path to your Godot root directory and enter the project name."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:38
msgid ""
"Here you can choose which folders and files will be visible to the project. "
"C/C++ files are added automatically. Potentially useful additions: \\*.py "
"for buildsystem files, \\*.java for Android development, \\*.mm for macOS. "
"Click \"Next\"."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:44
msgid "Click *Finish*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:45
msgid ""
"Add a line containing ``.`` to *project_name.includes* to get working code "
"completion."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:50
msgid "Build and run"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:52
msgid "Build configuration:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:54
msgid "Click on *Projects* and open the *Build* tab."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:55
msgid "Delete the pre-defined ``make`` build step."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:59
msgid "Click *Add Build Step* -> *Custom Process Step*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:63
msgid ""
"Type ``scons`` in the *Command* field. If it fails with 'Could not start "
"process \"scons\"', it can mean that ``scons`` is not in your ``PATH`` "
"environment variable, so you may have to use the full path to the SCons "
"binary."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:66
msgid ""
"Fill the *Arguments* field with your compilation options. (e.g.: ``p=x11 "
"target=debug -j 4``)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:70
msgid "Run configuration:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:72
msgid "Open the *Run* tab."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:73
msgid ""
"Point the *Executable* to your compiled Godot binary (e.g: ``%{buildDir}/bin/"
"godot.x11.opt.tools.64``)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:74
msgid ""
"If you want to run a specific game or project, point *Working directory* to "
"the game directory."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:75
msgid ""
"If you want to run the editor, add ``-e`` to the *Command line arguments* "
"field."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:80
msgid "Updating sources after pulling latest commits"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:82
msgid ""
"As a developer you usually want to frequently pull the latest commits from "
"the upstream git repository or a specific fork etc. However this brings a "
"little problem with it: as the development continues, source files (and "
"folders) are added or removed. These changes needs to be reflected in your "
"project files for Qt Creator too, so you continue to have a nice experience "
"coding in it. A simple way to check is to right click at your root folder in "
"the \"Projects View\" and click on \"Edit files...\""
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:92
msgid ""
"Now a new dialog should appear that is similar in functionality to the one "
"in the third step of the \"Importing the project\" section. Here you can "
"check whether you want to add/remove specific files and/or folders. You can "
"chose by clicking with your mouse or just simply by clicking the \"Apply "
"Filter\" button. A simple click on \"Ok\" and you're ready to continue your "
"work."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:100
msgid "Code style configuration"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:102
msgid ""
"Developers must follow the project's :ref:`code style "
"<doc_code_style_guidelines>` and IDE should help them to do it. By default, "
"Qt Creator does use spaces for indentation which is incorrect for Godot "
"project. You can change this behavior by changing the \"Code Style\" in "
"*Options* -> *C++*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:109
msgid ""
"Click on *Edit* to change the current settings, then click on *Copy Built-in "
"Code Style* button to set a new code style. Set a name for it (e.g. Godot) "
"and change the Tab policy to be *Tabs Only*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:118
#, fuzzy
msgid "KDevelop"
msgstr "Desenvolvimento"

#: ../../docs/development/cpp/configuring_an_ide.rst:120
msgid ""
"`KDevelop <https://www.kdevelop.org>`_ is a free, open source IDE for all "
"desktop platforms."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:122
msgid ""
"You can find a video tutorial `here <https://www.youtube.com/watch?"
"v=yNVoWQi9TJA>`_. Or you may follow this text version tutorial."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:125
msgid "Start by opening KDevelop and choosing \"open project\"."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:129
msgid "Choose the directory where you cloned Godot."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:131
msgid ""
"On the next screen, choose \"Custom Build System\" for the *Project manager*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:135
msgid "Now that the project has been imported, open the project configuration."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:139
msgid "Add the following includes/imports:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:152
msgid "Apply the changes."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:154
msgid ""
"Switch to the \"Custom Build System\" tab. Add a build configuration and "
"keep the build directory blank. Enable build tools and add ``scons`` as the "
"executable then add ``platform=x11 target=debug`` (``platform=osx`` if "
"you're on macOS) as the arguments."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:161
msgid ""
"Next we need to tell KDevelop where to find the binary. From the \"Run\" "
"menu, choose \"Configure Launches\"."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:166
msgid ""
"Click \"Add\" if no launcher exists. Then add the path to your executable in "
"the executable section. Your executable should be located in the ``bin/`` "
"sub-directory and should be named something like ``godot.x11.tools.64`` (the "
"name could be different depending on your platform and depending on your "
"build options)."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:174
msgid "That's it! Now you should be good to go :)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:180
msgid "Xcode"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:183
#: ../../docs/development/cpp/configuring_an_ide.rst:310
msgid "Project setup"
msgstr "Configuração do projeto"

#: ../../docs/development/cpp/configuring_an_ide.rst:185
msgid "Create an Xcode external build project anywhere"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:189
msgid "Set the *Build tool* to the path to scons"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:191
msgid "Modify Build Target's Xcode Info Tab:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:193
msgid ""
"Set *Arguments* to something like: platform=osx tools=yes bits=64 "
"target=debug"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:194
msgid ""
"Set *Directory* to the path to Godot's source folder. Keep it blank if "
"project is already there."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:195
msgid "You may uncheck *Pass build settings in environment*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:199
msgid "Add a Command Line Target:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:201
msgid ""
"Go to Xcode File > New > Target... and add a new Xcode command line target"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:207
msgid "Name it something so you know not to compile with this target"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:208
msgid "e.g. ``GodotXcodeIndex``"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:209
msgid ""
"Goto the newly created target's *Build Settings* tab and search for *Header "
"Search Paths*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:210
msgid "Set *Header Search Paths* to an absolute path to Godot's source folder"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:211
msgid "Make it recursive by adding two \\*'s to the end of the path"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:212
msgid "e.g. ``/Users/me/repos/godot-source/\\**``"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:214
msgid "Add Godot Source to the Project:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:216
msgid "Drag and drop Godot source into project file browser."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:217
msgid "Uncheck *Create External Build System*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:221
msgid "Click Next"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:222
msgid "Select *create groups*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:226
msgid "Check off only your command line target in the *Add to targets* section"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:227
msgid "Click finish. Xcode will now index the files."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:228
msgid "Grab a cup of coffee... Maybe make something to eat, too"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:229
msgid ""
"You should have jump to definition, auto completion, and full syntax "
"highlighting when it is done."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:232
#, fuzzy
msgid "Scheme setup"
msgstr "Configuração da cena"

#: ../../docs/development/cpp/configuring_an_ide.rst:234
msgid "Edit Build Scheme of External Build Target:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:236
msgid "Open scheme editor of external build target"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:237
msgid "Expand the *Build* menu"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:238
msgid "Goto *Post Actions*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:239
msgid ""
"Add a new script run action, select your project in ``Provide build settings "
"from`` as this allows you to use ``${PROJECT_DIR}`` variable."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:243
msgid "Write a script that gives the binary a name that Xcode will recognize"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:244
msgid ""
"e.g. ``ln -f ${PROJECT_DIR}/godot/bin/godot.osx.tools.64 ${PROJECT_DIR}/"
"godot/bin/godot``"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:245
msgid "Build the external build target"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:247
msgid "Edit Run Scheme of External Build Target:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:249
msgid "Open the scheme editor again"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:250
msgid "Click Run"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:254
msgid ""
"Set the *Executable* to the file you linked in your post build action script"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:255
msgid "Check *Debug executable* if it isn't already"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:256
msgid ""
"You can go to *Arguments* tab and add an -e and a -path to a project to "
"debug the editor not the project selection screen"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:259
msgid "Test it:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:261
msgid "Set a breakpoint in platform/osx/godot_main_osx.mm"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:262
msgid "It should break at the point!"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:268
#, fuzzy
msgid "Visual Studio Code"
msgstr "Visual Studio ou VS Code"

#: ../../docs/development/cpp/configuring_an_ide.rst:270
msgid ""
"Ensure that C/C++ extension is installed. You can find instructions in `docs "
"<https://code.visualstudio.com/docs/languages/cpp>`_."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:272
msgid "Now open cloned godot folder in VS Code (File > Open Folder...)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:274
msgid ""
"In order to build the project, we need two configuration files: *launch."
"json* and *tasks.json*. To create them:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:277
msgid ""
"Open Debug view (Ctrl + Shift + D) and select cogwheel with an orange dot:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:281
msgid ""
"Select *C++ (GDB/LLDB)* (it might be named differently on macOS or Windows)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:283
msgid "Update *launch.json* to match:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:287
msgid ""
"(Note that *godot.x11.tools.64* in \"program\" value might be named "
"differently on macOS or Windows)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:289
msgid ""
"Create *tasks.json* by starting the Debug process (F5). VS Code will show a "
"dialog with a *Configure Task* button. Tap it and select *Create tasks.json "
"file from template*, then select *Others*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:291
msgid "Update *tasks.json* to match:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:295
msgid "(Note that *platform=x11* will be different for macOX and Windows)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:297
msgid ""
"You can now start the Debug process again to test that everything works."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:299
msgid ""
"If the build phase fails, check the console for hints. On Linux it's most "
"likely that some dependencies are missing. Check :ref:`Compiling for X11 "
"(Linux, \\*BSD) <doc_compiling_for_x11>`"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:305
#, fuzzy
msgid "Android Studio"
msgstr "Android"

#: ../../docs/development/cpp/configuring_an_ide.rst:307
msgid ""
"`Android Studio <https://developer.android.com/studio>`_ is a `Jetbrain "
"<https://www.jetbrains.com/>`_ IDE for Android development. It has a feature-"
"rich editor which supports Java and C/C++, so it can be used for development "
"of the Godot core engine, and Android platform codebases."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:312
msgid ""
"From the Android Studio *Welcome to Android Studio* window, select *Open an "
"existing Android Studio project*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:316
msgid ""
"Navigate to ``<godot root directory>/platform/android/java`` and select the "
"``settings.gradle`` gradle file."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:317
msgid "Android Studio will import and index the project."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:318
msgid ""
"To build the project, follow the :ref:`compiling instructions <toc-devel-"
"compiling>`."
msgstr ""
