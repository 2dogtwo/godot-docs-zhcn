# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-08 12:36+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:4
msgid "What are shaders?"
msgstr "Was sind Shader?"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:7
msgid "Introduction"
msgstr "Einführung"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:9
msgid ""
"So, you have decided to give shaders a try. You have likely heard that they "
"can be used to create interesting effects that run incredibly fast. You have "
"also likely heard that they are terrifying. Both are true."
msgstr ""
"Sie haben sich also entschlossen, Shader auszuprobieren. Sie haben "
"wahrscheinlich gehört, dass sie verwendet werden können, um interessante "
"Effekte zu erzielen, die unglaublich schnell laufen. Sie haben "
"wahrscheinlich auch gehört, dass sie erschreckend sind. Beides ist wahr."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:13
msgid ""
"Shaders can be used to create a wide range of effects (in fact everything "
"drawn in a modern rendering engine is done with shaders)."
msgstr ""
"Shader können verwendet werden, um eine Vielzahl von Effekten zu erzeugen "
"(tatsächlich wird alles, was in einer modernen Rendering-Engine gezeichnet "
"wird, mit Shadern ausgeführt)."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:16
msgid ""
"Writing shaders can also be very difficult for people unfamiliar with them. "
"Godot tries to make writing shaders a little easier by exposing many useful "
"built-in features and handling some of the lower-level initialization work "
"for you. However, GLSL (the OpenGL Shading Language, which Godot uses) is "
"still unintuitive and restricting, especially for users who are used to "
"GDScript."
msgstr ""
"Das Schreiben von Shadern kann auch für Personen, die mit ihnen nicht "
"vertraut sind, sehr schwierig sein. Godot versucht, das Schreiben von "
"Shadern ein wenig zu vereinfachen, indem es viele nützliche integrierte "
"Funktionen bereitstellt und einige der Initialisierungsarbeiten auf "
"unterster Ebene für Sie erledigt. GLSL (die von Godot verwendete OpenGL "
"Shading Language) ist jedoch immer noch einschränkend und nicht intuitiv, "
"insbesondere für Benutzer, die an GDScript gewöhnt sind."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:22
msgid "But what are they?"
msgstr "Aber was sind sie?"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:24
msgid ""
"Shaders are a special kind of program that runs on Graphics Processing Units "
"(GPUs). Most computers have some sort of GPU, either one integrated into "
"their CPU or discrete (meaning it is a separate hardware component, for "
"example, the typical graphics card). GPUs are especially useful for "
"rendering because they are optimized for running thousands of instructions "
"in parallel."
msgstr ""
"Shader sind eine spezielle Art von Programm, das auf Grafikprozessoren "
"(GPUs) ausgeführt wird. Die meisten Computer verfügen über eine GPU, "
"entweder eine in die CPU integrierte oder eine diskrete (also eine separate "
"Hardwarekomponente, z.B. die typische Grafikkarte). GPUs sind besonders "
"nützlich für das Rendern, da sie für die parallele Ausführung von Tausenden "
"von Anweisungen optimiert sind."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:29
msgid ""
"The output of the shader is typically the colored pixels of the object drawn "
"to the viewport. But some shaders allow for specialized outputs (this is "
"especially true for APIs like Vulkan). Shaders operate inside the shader "
"pipeline. The standard process is the vertex -> fragment shader pipeline. "
"The vertex shader is used to decided where each vertex (point in a 3D model, "
"or corner of a Sprite) goes and the fragment shader decides what color "
"individual pixels receive."
msgstr ""
"Die Ausgabe des Shaders sind normalerweise die farbigen Pixel des Objekts, "
"das in das Ansichtsfenster gezeichnet wird. Einige Shader ermöglichen jedoch "
"spezielle Ausgaben (dies gilt insbesondere für APIs wie Vulkan). Shader "
"arbeiten innerhalb der Shader-Pipeline. Der Standardprozess ist die Vertex -"
"> Fragment Shader Pipeline. Der Vertex-Shader wird verwendet, um zu "
"entscheiden, wohin jeder Vertex (Punkt in einem 3D-Modell oder Ecke eines "
"Sprites) geht, und der Fragment-Shader entscheidet, welche Farbe einzelne "
"Pixel erhalten."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:35
msgid ""
"Suppose you want to update all the pixels in a texture to a given color, on "
"the CPU you would write:"
msgstr ""
"Angenommen, Sie möchten alle Pixel in einer Textur einer bestimmten Farbe "
"zuweisen, so würde man dies auf der CPU so schreiben:"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:43
msgid ""
"In a shader you are given access only to the inside of the loop so what you "
"write looks like this:"
msgstr ""
"In einem Shader erhalten Sie nur Zugriff auf das Innere der Schleife. Das, "
"was Sie schreiben, sieht also folgendermaßen aus:"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:52
msgid ""
"You have no control over how this function is called. So you have to design "
"your shaders differently from how you would design programs on the CPU."
msgstr ""
"Sie haben keine Kontrolle darüber, wie diese Funktion aufgerufen wird. Sie "
"müssen Ihre Shader also anders gestalten als Programme auf der CPU."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:55
msgid ""
"A consequence of the shader pipeline is that you cannot access the results "
"from a previous run of the shader, you cannot access other pixels from the "
"pixel being drawn, and you cannot write outside of the current pixel being "
"drawn. This enables the GPU to execute the shader for different pixels in "
"parallel, as they do not depend on each other. This lack of flexibility is "
"designed to work with the GPU which allows shaders to be incredibly fast."
msgstr ""
"Eine Konsequenz der Shader-Pipeline ist, dass Sie nicht auf die Ergebnisse "
"eines vorherigen Shader-Laufs zugreifen können, nicht auf andere Pixel des "
"gezeichneten Pixels zugreifen können und nicht außerhalb des aktuell "
"gezeichneten Pixels schreiben können. Dadurch kann die GPU den Shader für "
"verschiedene Pixel parallel ausführen, da diese nicht voneinander abhängig "
"sind. Dieser Mangel an Flexibilität wurde für die Arbeit mit der GPU "
"entwickelt, wodurch Shader unglaublich schnell arbeiten können."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:62
msgid "What can they do"
msgstr "Was können Sie machen"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:64
msgid "position vertices very fast"
msgstr "Eckpunkte sehr schnell positionieren"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:65
msgid "compute color very fast"
msgstr "Farbe sehr schnell berechnen"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:66
msgid "compute lighting very fast"
msgstr "Beleuchtung sehr schnell berechnen"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:67
msgid "lots and lots of math"
msgstr "viel, viel Mathematik"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:70
msgid "What can't they do"
msgstr "Was sie nicht können"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:72
msgid "draw outside mesh"
msgstr "außerhalb des Mesh (Drahtgitters) zeichnen"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:73
msgid "access other pixels from current pixel (or vertices)"
msgstr "auf andere Pixel von aktuellen Pixeln aus (oder Eckpunkten) zugreifen"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:74
msgid "store previous iterations"
msgstr "frühere Iterationen speichern"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:75
msgid "update on the fly (they can, but they need to be compiled)"
msgstr ""
"Update während einer Berechnung (sie können, aber sie müssen kompiliert "
"werden)"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:78
msgid "Structure of a shader"
msgstr "Struktur eines Shaders"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:80
msgid ""
"In Godot, shaders are made up of 3 main functions: the ``vertex()`` "
"function, the ``fragment()`` function and the ``light()`` function."
msgstr ""

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:83
msgid ""
"The ``vertex()`` function runs over all the vertices in the mesh and sets "
"their positions as well as some other per-vertex variables."
msgstr ""

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:86
msgid ""
"The ``fragment()`` function runs for every pixel that is covered by the "
"mesh. It uses the variables from the ``vertex()`` function to run. The "
"variables from the ``vertex()`` function are interpolated between the "
"vertices to provide the values for the ``fragment()`` function."
msgstr ""

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:90
msgid ""
"The ``light()`` function runs for every pixel and for every light. It takes "
"variables from the ``fragment()`` function and from previous runs of itself."
msgstr ""

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:93
msgid ""
"For more information about how shaders operate specifically in Godot, see "
"the :ref:`Shaders <doc_shaders>` doc."
msgstr ""
"Weitere Informationen zur Funktionsweise von Shadern in Godot finden Sie im "
"Dokument :ref:`Shaders <doc_shaders>`."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:97
msgid ""
"The ``light()`` function won't be run if the ``vertex_lighting`` render mode "
"is enabled, or if **Rendering > Quality > Shading > Force Vertex Shading** "
"is enabled in the Project Settings. (It's enabled by default on mobile "
"platforms.)"
msgstr ""

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:103
msgid "Technical overview"
msgstr "Teilübersicht"

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:105
msgid ""
"GPUs are able to render graphics much faster than CPUs for a few reasons, "
"but most notably, because they are able to run calculations massively in "
"parallel. A CPU typically has 4 or 8 cores while a GPU typically has "
"thousands. That means a GPU can do hundreds of tasks at once. GPU architects "
"have exploited this in a way that allows for doing many calculations very "
"quickly, but only when many or all cores are doing the same calculation at "
"once, but with different data."
msgstr ""

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:111
msgid ""
"That is where shaders come in. The GPU will call the shader a bunch of times "
"simultaneously, and then operate on different bits of data (vertices, or "
"pixels). These bunches of data are often called wavefronts. A shader will "
"run the same for every thread in the wavefront. For example, if a given GPU "
"can handle 100 threads per wavefront, a wavefront will run on a 10×10 block "
"of pixels together. It will continue to run for all pixels in that wavefront "
"until they are complete. Accordingly, if you have one pixel slower than the "
"rest (due to excessive branching), the entire block will be slowed down, "
"resulting in massively slower render times."
msgstr ""
"Hier kommen Shader ins Spiel. Die GPU ruft den Shader einige Male "
"gleichzeitig auf und bearbeitet dann verschiedene Datenbits (Eckpunkte oder "
"Pixel). Diese Datenbündel werden oft als Wellenfronten bezeichnet. Ein "
"Shader wird für jeden Thread in der Wellenfront gleich ausgeführt. Wenn eine "
"bestimmte GPU beispielsweise 100 Threads pro Wellenfront verarbeiten kann, "
"wird eine Wellenfront auf einem 10 × 10-Pixelblock zusammen ausgeführt. Es "
"wird weiterhin für alle Pixel in dieser Wellenfront ausgeführt, bis sie "
"vollständig sind. Wenn Sie also ein Pixel langsamer als der Rest ist "
"(aufgrund übermäßiger Verzweigung), wird der gesamte Block verlangsamt, was "
"zu massiv langsameren Renderzeiten führt."

#: ../../docs/tutorials/shading/your_first_shader/what_are_shaders.rst:119
msgid ""
"This is different from CPU-based operations. On a CPU, if you can speed up "
"even one pixel, the entire rendering time will decrease. On a GPU, you have "
"to speed up the entire wavefront to speed up rendering."
msgstr ""
