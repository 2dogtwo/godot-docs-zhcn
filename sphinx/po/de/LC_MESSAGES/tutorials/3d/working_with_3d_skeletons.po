# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-08 11:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:4
msgid "Working with 3D skeletons"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:6
msgid ""
"Godot 3D skeleton support is currently quite rudimentary. The :ref:"
"`class_Skeleton` node and class were designed mainly to support importing "
"skeletal animations as a set of transformation matrices."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:11
msgid "Skeleton node"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:13
msgid ""
"The Skeleton node can be directly added anywhere you want on a scene. "
"Usually the target mesh is a child of Skeleton, as it is easier to "
"manipulate this way, since Transforms within a skeleton are relative to "
"where the Skeleton is. But you can specify a Skeleton node in every "
"MeshInstance."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:18
msgid ""
"Naturally, Skeleton is intended to deform meshes and consists of structures "
"called \"bones\". Each \"bone\" is represented as a Transform, which is "
"applied to a group of vertices within a mesh. You can directly control a "
"group of vertices from Godot. For that please reference the :ref:"
"`class_MeshDataTool` class and its method :ref:`set_vertex_bones() "
"<class_MeshDataTool_method_set_vertex_bones>`."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:24
msgid ""
"The \"bones\" are organized hierarchically. Every bone, except for the root "
"bone(s), has a parent. Every bone also has an associated name you can use to "
"refer to it (e.g. \"root\" or \"hand.L\", etc.). All bones are numbered, and "
"these numbers are bone IDs. Bone parents are referred to by their numbered "
"IDs."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:30
#, fuzzy
msgid "For the rest of the article, we will consider the following scene:"
msgstr "Die Mob-Szene verwendet die folgenden Nodes:"

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:38
msgid ""
"This scene is imported from Blender. It contains an arm mesh with 2 bones, "
"upperarm and lowerarm, with the lowerarm bone parented to the upperarm."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:42
msgid "Skeleton class"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:44
msgid ""
"You can view Godots internal help for descriptions of all functions. "
"Basically, all operations on bones are done using their numeric ID. You can "
"convert from a name to a numeric ID and vice versa."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:48
msgid ""
"**To find the number of bones in a skeleton we use the get_bone_count() "
"function:**"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:61
msgid "**To find the ID of a bone, use the find_bone() function:**"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:73
msgid ""
"Now, we want to do something interesting with the ID, not just print it. "
"Also, we might need additional information, finding bone parents to complete "
"chains, etc. This is done with the get/set_bone\\_\\* functions."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:77
msgid ""
"**To find the parent of a bone we use the get_bone_parent(id) function:**"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:91
msgid ""
"The bone transforms are what interests us here. There are 3 kinds of "
"transform: local, global, custom."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:94
msgid ""
"**To find the local Transform of a bone, we use get_bone_pose(id) function:**"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:110
msgid ""
"So we get a 3x4 matrix there, with the first column filled with 1s. What can "
"we do with this matrix? It is a Transform, so we can do everything we can do "
"with Transforms (basically translate, rotate and scale). We could also "
"multiply transforms to have more complex transforms. Remember, \"bones\" in "
"Godot are just Transforms over a group of vertices. We could also copy "
"Transforms of other objects there. So let's rotate our \"upperarm\" bone:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:138
msgid ""
"Now we can rotate individual bones. The same happens for scale and "
"translate. Try these on your own and check the results."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:141
msgid ""
"What we used here was the local pose. By default all bones are not modified. "
"But this Transform tells us nothing about the relationship between bones. "
"This information is needed for quite a number of tasks. How can we get it? "
"This is where the global transform comes into play:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:146
msgid ""
"**To find the bone global Transform we use get_bone_global_pose(id) function:"
"**"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:149
msgid "Let's find the global Transform for the lowerarm bone:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:165
msgid ""
"As you can see, this transform is not zeroed. While being called global, it "
"is actually relative to the Skeleton origin. For a root bone, the origin is "
"always at 0 if not modified. Let's print the origin for our lowerarm bone:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:183
msgid ""
"You will see a number. What does this number mean? It is a rotation point of "
"the Transform. So it is base part of the bone. In Blender, you can go to "
"Pose mode and try to rotate bones there. They will rotate around their "
"origin."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:188
msgid ""
"But what about the bone tip? We can't know things like the bone length, "
"which we need for many things, without knowing the tip location. For all "
"bones in a chain, except for the last one, we can calculate the tip "
"location. It is simply a child bone's origin. There are situations when this "
"is not true, such as for non-connected bones, but that is OK for us for now, "
"as it is not important regarding Transforms."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:195
msgid ""
"Notice that the leaf bone tip is nowhere to be found. A leaf bone is a bone "
"without children, so you don't have any information about its tip. But this "
"is not a showstopper. You can overcome this by either adding an extra bone "
"to the chain or just calculating the length of the leaf bone in Blender and "
"storing the value in your script."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:202
msgid "Using 3D \"bones\" for mesh control"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:204
msgid ""
"Now, as you know the basics, we can apply these to make full FK-control of "
"our arm (FK is forward-kinematics)."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:207
msgid "To fully control our arm, we need the following parameters:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:209
msgid "Upperarm angle x, y, z"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:210
msgid "Lowerarm angle x, y, z"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:212
msgid "All of these parameters can be set, incremented, and decremented."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:214
msgid "Create the following node tree:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:223
msgid ""
"Set up the Camera so that the arm is properly visible. Rotate DirectionLight "
"so that the arm is properly lit while in scene play mode."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:226
msgid "Now we need to create a new script under main:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:228
msgid "First we define the setup parameters:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:235
msgid "Now we need to set up a way to change them. Let us use keys for that."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:237
msgid "Please create 7 actions under project settings -> Input Map:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:239
msgid "**selext_x** - bind to X key"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:240
msgid "**selext_y** - bind to Y key"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:241
msgid "**selext_z** - bind to Z key"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:242
msgid "**select_upperarm** - bind to key 1"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:243
msgid "**select_lowerarm** - bind to key 2"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:244
msgid "**increment** - bind to key numpad +"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:245
msgid "**decrement** - bind to key numpad -"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:247
msgid ""
"So now we want to adjust the above parameters. Therefore, we create code "
"which does that:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:275
msgid "The full code for arm control is this:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:327
msgid ""
"Pressing keys 1/2 selects upperarm/lowerarm; select the axis by pressing x, "
"y, z, rotate using numpad \"+\"/\"-\"."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:330
msgid ""
"This way you fully control your arm in FK mode using 2 bones. You can add "
"additional bones and/or improve the \"feel\" of the interface by using "
"coefficients for the change. I recommend you play with this example a lot "
"before moving on to the next part."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:335
msgid "You can clone the demo code for this chapter using"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:342
msgid "Or you can browse it using the web-interface:"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:344
msgid "https://github.com/slapin/godot-skel3d"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:347
msgid "Using 3D \"bones\" to implement inverse kinematics"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:349
msgid "See :ref:`doc_inverse_kinematics`."
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:352
msgid "Using 3D \"bones\" to implement ragdoll-like physics"
msgstr ""

#: ../../docs/tutorials/3d/working_with_3d_skeletons.rst:354
msgid "TODO."
msgstr ""
