# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-08 12:36+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:4
msgid "Part 5"
msgstr "Teil 5"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:7
msgid "Part overview"
msgstr "Teilübersicht"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:9
msgid ""
"In this part, we're going to add grenades to the player, give the player the "
"ability to grab and throw objects, and add turrets!"
msgstr ""
"In diesem Teil fügen wir dem Spieler Granaten hinzu, geben ihm die "
"Möglichkeit, Objekte zu greifen und zu werfen, und fügen Geschütztürme hinzu!"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:13
msgid ""
"You are assumed to have finished :ref:`doc_fps_tutorial_part_four` before "
"moving on to this part of the tutorial. The finished project from :ref:"
"`doc_fps_tutorial_part_four` will be the starting project for part 5"
msgstr ""
"Es wird davon ausgegangen, dass Sie :ref:`doc_fps_tutorial_part_four` "
"beendet haben, bevor Sie mit diesem Teil der Anleitung fortfahren. Das "
"fertige Projekt aus :ref:`doc_fps_tutorial_part_four` wird das Startprojekt "
"für Teil 5 sein."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:16
msgid "Let's get started!"
msgstr "Lassen Sie uns anfangen!"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:19
msgid "Adding grenades"
msgstr "Hinzufügen von Granaten"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:21
msgid ""
"Firstly, let's give the player some grenades to play with. Open up ``Grenade."
"tscn``."
msgstr ""
"Zuerst geben wir dem Spieler ein paar Granaten zum Spielen. Öffnen Sie "
"``Grenade.tscn``."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:23
msgid ""
"There are a few things to note here, the first and foremost being that the "
"grenades are going to use :ref:`RigidBody <class_RigidBody>` nodes. We're "
"going to use :ref:`RigidBody <class_RigidBody>` nodes for our grenades so "
"they bounce around the world in a (somewhat) realistic manner."
msgstr ""
"Es gibt hier ein paar Dinge zu beachten, wobei das erste und wichtigste ist, "
"dass die Granaten :ref:`RigidBody <class_RigidBody>` Nodes verwenden werden. "
"Wir werden :ref:`RigidBody <class_RigidBody>` Nodes für unsere Granaten "
"verwenden, damit sie auf eine (etwas) realistische Art und Weise durch die "
"Welt hüpfen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:26
msgid ""
"The second thing to note is ``Blast_Area``. This is an :ref:`Area "
"<class_Area>` node that will represent the blast radius of the grenade."
msgstr ""
"Die zweite Sache, die man beachten muss, ist ``Blast_Area``. Dies ist ein :"
"ref:``Area <class_Area>` Node, der den Sprengradius der Granate darstellt."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:28
msgid ""
"Finally, the last thing to note is ``Explosion``. This is the :ref:"
"`Particles <class_Particles>` node that will emit an explosion effect when "
"the grenade explodes. One thing to note here is that we have ``One shot`` "
"enabled. This is so we emit all the particles at once. The particles are "
"also emitted using world coordinates instead of local coordinates, so we "
"have ``Local Coords`` unchecked as well."
msgstr ""
"Schließlich ist als letztes die ``Explosion`` zu erwähnen. Dies ist der :ref:"
"`Partikel <class_Particles>`-Node, der einen Explosionseffekt emittiert, "
"wenn die Granate explodiert. Eine Sache die man hier erwähnen sollte ist, "
"dass wir ``One shot`` aktiviert haben. Damit emittieren wir alle Partikel "
"auf einmal. Die Partikel werden auch unter Verwendung von Weltkoordinaten "
"anstelle von lokalen Koordinaten emittiert, daher haben wir die ``Local "
"Coords`` nicht angekreuzt."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:32
msgid ""
"If you want, you can see how the particles are set up by looking through the "
"particle's ``Process Material`` and ``Draw Passes``."
msgstr ""
"Wenn Sie wollen können Sie sich anschauen, wie die Partikel aufgebaut sind, "
"indem Sie durch die ``Process Material`` und ``Draw Passes`` des Partikels "
"schauen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:34
msgid ""
"Let's write the code needed for the grenade. Select ``Grenade`` and make a "
"new script called ``Grenade.gd``. Add the following:"
msgstr ""
"Lassen Sie uns den für die Granate benötigten Code schreiben. Wählen Sie "
"``Grenade`` aus und erstellen ein neues Skript namens ``Grenade.gd``. Fügen "
"Sie das Folgende hinzu:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:90
msgid "Let's go over what's happening, starting with the class variables:"
msgstr "Gehen wir das Geschehene durch, beginnend mit den Klassenvariablen:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:92
msgid ""
"``GRENADE_DAMAGE``: The amount of damage the grenade causes when it explodes."
msgstr ""
"``GRENADE_DAMAGE``: Die Höhe des Schadens, den die Granate verursacht, wenn "
"sie explodiert."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:93
msgid ""
"``GRENADE_TIME``: The amount of time the grenade takes (in seconds) to "
"explode once it's created/thrown."
msgstr ""
"``GRENADE_TIME``: Die Zeitspanne (in Sekunden), welche die Granate braucht, "
"um zu explodieren, sobald sie gespawned/geworfen wurde."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:94
msgid ""
"``grenade_timer``: A variable for tracking how long the grenade has been "
"created/thrown."
msgstr ""
"``grenade_timer``: Eine Variable zur Verfolgung, wie lange die Granate schon "
"erstellt bzw. geworfen wurde."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:95
msgid ""
"``EXPLOSION_WAIT_TIME``: The amount of time needed (in seconds) to wait "
"before we destroy the grenade scene after the explosion"
msgstr ""
"``EXPLOSION_WAIT_TIME``: Die Zeitspanne (in Sekunden), die wir warten "
"müssen, bevor wir die Granatenszene nach der Explosion zerstören"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:96
msgid ""
"``explosion_wait_timer``: A variable for tracking how much time has passed "
"since the grenade exploded."
msgstr ""
"``explosion_wait_timer``: Eine Variable zur Verfolgung, wie viel Zeit seit "
"der Explosion der Granate vergangen ist."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:97
msgid ""
"``rigid_shape``: The :ref:`CollisionShape <class_CollisionShape>` for the "
"grenade's :ref:`RigidBody <class_RigidBody>`."
msgstr ""
"``rigid_shape``: Die :ref:`CollisionShape <class_CollisionShape>` für den :"
"ref:`RigidBody <class_RigidBody>` der Granate."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:98
msgid ""
"``grenade_mesh``: The :ref:`MeshInstance <class_MeshInstance>` for the "
"grenade."
msgstr ""
"``grenade_mesh``: Die :ref:`MeshInstanz <class_MeshInstanz>` für die Granate."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:99
msgid ""
"``blast_area``: The blast :ref:`Area <class_Area>` used to damage things "
"when the grenade explodes."
msgstr ""
"``blast_area``: Die :ref:`Area <class_Area>`, also der genutzte Bereich um "
"Dinge zu beschädigen, wenn die Granate explodiert."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:100
msgid ""
"``explosion_particles``: The :ref:`Particles <class_Particles>` that come "
"out when the grenade explodes."
msgstr ""
"``explosion_particles``: Die :ref:``Particles <class_Particles>`, die "
"herauskommen, wenn die Granate explodiert."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:102
msgid ""
"Notice how ``EXPLOSION_WAIT_TIME`` is a rather strange number (``0.48``). "
"This is because we want ``EXPLOSION_WAIT_TIME`` to be equal to the length of "
"time the explosion particles are emitting, so when the particles are done we "
"destroy/free the grenade. We calculate ``EXPLOSION_WAIT_TIME`` by taking the "
"particle's life time and dividing it by the particle's speed scale. This "
"gets us the exact time the explosion particles will last."
msgstr ""
"Beachte, dass ``EXPLOSION_WAIT_TIME`` eine ziemlich seltsame Zahl ist "
"(``0.48``). Das liegt daran, dass wir wollen, dass ``EXPLOSION_WAIT_TIME`` "
"gleich der Zeitspanne ist, in der die Explosionspartikel emittiert werden, "
"so dass wir die Granate zerstören/befreien, wenn die Partikel fertig sind. "
"Wir berechnen die ``EXPLOSION_WAIT_TIME``, indem wir die Lebensdauer des "
"Partikels nehmen und sie durch die Geschwindigkeitsgröße des Partikels "
"teilen. Dadurch erhalten wir die genaue Zeit, die die Explosionspartikel "
"dauern werden."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:108
msgid "Now let's turn our attention to ``_ready``."
msgstr "Wenden wir nun unsere Aufmerksamkeit auf ``_ready``."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:110
msgid ""
"First we get all the nodes we'll need and assign them to the proper class "
"variables."
msgstr ""
"Zuerst besorgen wir uns alle Nodes, die wir benötigen, und weisen sie den "
"richtigen Klassenvariablen zu."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:112
msgid ""
"We need to get the :ref:`CollisionShape <class_CollisionShape>` and :ref:"
"`MeshInstance <class_MeshInstance>` because similarly to the target in :ref:"
"`doc_fps_tutorial_part_four`, we will be hiding the grenade's mesh and "
"disabling the collision shape when the grenade explodes."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:115
msgid ""
"The reason we need to get the blast :ref:`Area <class_Area>` is so we can "
"damage everything inside it when the grenade explodes. We'll be using code "
"similar to the knife code in the player. We need the :ref:`Particles "
"<class_Particles>` so we can emit particles when the grenade explodes."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:118
msgid ""
"After we get all the nodes and assign them to their class variables, we then "
"make sure the explosion particles are not emitting, and that they are set to "
"emit in one shot. This is to be extra sure the particles will behave the way "
"we expect them to."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:123
msgid "Now let's look at ``_process``."
msgstr "Lassen Sie uns jetzt ``_process`` anschauen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:125
msgid ""
"Firstly, we check to see if the ``grenade_timer`` is less than "
"``GRENADE_TIME``. If it is, we add ``delta`` and return. This is so the "
"grenade has to wait ``GRENADE_TIME`` seconds before exploding, allowing the :"
"ref:`RigidBody <class_RigidBody>` to move around."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:128
msgid ""
"If ``grenade_timer`` is at ``GRENADE_TIMER`` or higher, we then need to "
"check if the grenade has waited long enough and needs to explode. We do this "
"by checking to see if ``explosion_wait_timer`` is equal to ``0`` or less. "
"Since we will be adding ``delta`` to ``explosion_wait_timer`` right after, "
"whatever code under the check will only be called once, right when the "
"grenade has waited long enough and needs to explode."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:132
msgid ""
"If the grenade has waited long enough to explode, we first tell the "
"``explosion_particles`` to emit. Then we make ``grenade_mesh`` invisible, "
"and disable ``rigid_shape``, effectively hiding the grenade."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:135
msgid ""
"We then set the :ref:`RigidBody <class_RigidBody>`'s mode to ``MODE_STATIC`` "
"so the grenade does not move."
msgstr ""
"Dann setzen wir den Modus des :ref:`RigidBody <class_RigidBody>` auf "
"``MODE_STATIC``, damit sich die Granate nicht bewegt."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:137
msgid ""
"Then we get all the bodies in ``blast_area``, check to see if they have the "
"``bullet_hit`` method/function, and if they do, we call it and pass in "
"``GRENADE_DAMAGE`` and the transform from the body looking at the grenade. "
"This makes it where the bodies exploded by the grenade will explode outwards "
"from the grenade's position."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:140
msgid ""
"We then check to see if ``explosion_wait_timer`` is less than "
"``EXPLOSION_WAIT_TIME``. If it is, we add ``delta`` to "
"``explosion_wait_timer``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:142
msgid ""
"Next, we check to see if ``explosion_wait_timer`` is greater than or equal "
"to ``EXPLOSION_WAIT_TIME``. Because we added ``delta``, this will only be "
"called once. If ``explosion_wait_timer`` is greater or equal to "
"``EXPLOSION_WAIT_TIME``, the grenade has waited long enough to let the :ref:"
"`Particles <class_Particles>` play and we can free/destroy the grenade, as "
"we no longer need it."
msgstr ""
"Als nächstes prüfen wir, ob ``explosion_wait_timer`` größer oder gleich "
"``EXPLOSION_WAIT_TIME`` ist. Da wir ``delta`` hinzugefügt haben, wird dies "
"nur einmal aufgerufen. Wenn ``explosion_wait_timer`` größer oder gleich "
"``EXPLOSION_WAIT_TIME`` ist, hat die Granate lange genug gewartet, um die :"
"ref:`Particles <class_Particles>` abspielen zu lassen, und wir können die "
"Granate freigeben/zerstören, da wir sie nicht mehr brauchen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:148
msgid ""
"Let's quickly get the sticky grenade set up too. Open up ``Sticky_Grenade."
"tscn``."
msgstr ""
"Lassen Sie uns schnell auch die Haftgranate aufsetzen. Öffnen Sie "
"``Sticky_Granate.tscn``."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:150
msgid ""
"``Sticky_Grenade.tscn`` is almost identical to ``Grenade.tscn``, with one "
"small addition. We now have a second :ref:`Area <class_Area>`, called "
"``Sticky_Area``. We will be using ``Stick_Area`` to detect when the sticky "
"grenade has collided with the environment and needs to stick to something."
msgstr ""
"``Sticky_Grenade.tscn`` ist fast identisch zu ``Grenade.tscn``, mit einem "
"kleinen Zusatz. Wir haben jetzt eine zweite :ref:`Area <class_Area>`, "
"genannt ``Sticky_Area``. Wir werden ``Stick_Area`` benutzen, um "
"festzustellen, wann die Haftgranate mit der Umgebung kollidiert ist und an "
"etwas haften bleiben muss."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:154
msgid ""
"Select ``Sticky_Grenade`` and make a new script called ``Sticky_Grenade."
"gd``. Add the following:"
msgstr ""
"Wählen Sie ``Sticky_Grenade`` und erstellen Sie ein neues Skript namens "
"``Sticky_Grenade.gd``. Fügen Sie Folgendes hinzu:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:244
msgid ""
"The code above is almost identical to the code for ``Grenade.gd``, so let's "
"just go over what's changed."
msgstr ""
"Der obige Code ist fast identisch mit dem Code für ``Grenate.gd``, also "
"lassen Sie uns einfach durchgehen, was sich geändert hat."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:246
msgid "Firstly, we have a few more class variables:"
msgstr "Zunächst einmal haben wir einige weitere Klassenvariablen:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:248
msgid ""
"``attached``: A variable for tracking whether or not the sticky grenade has "
"attached to a :ref:`PhysicsBody <class_PhysicsBody>`."
msgstr ""
"``attached``: Eine Variable zum Verfolgen ob die Haftgranate an einem :ref:"
"`PhysicsBody <class_PhysicsBody>` angehängt wurde oder nicht."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:249
msgid ""
"``attach_point``: A variable to hold a :ref:`Spatial <class_Spatial>` that "
"will be at the position where the sticky grenade collided."
msgstr ""
"``attach_point``: Eine Variable, um einen :ref:`Spatial <class_Spatial>` zu "
"halten, der sich an der Stelle befindet, an der die Klebe-Granate "
"kollidierte."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:250
msgid ""
"``player_body``: The player's :ref:`KinematicBody <class_KinematicBody>`."
msgstr ""
"``player_body``: Der :ref:`KinematicBody <class_KinematicBody>` des Spielers."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:252
msgid ""
"They have been added to enable the sticky grenade to stick to any :ref:"
"`PhysicsBody <class_PhysicsBody>` it might hit. We also now need the "
"player's :ref:`KinematicBody <class_KinematicBody>` so the sticky grenade "
"does not stick to the player when the player throws it."
msgstr ""
"Sie wurden hinzugefügt, damit die Haftgranate an jedem :ref:`PhysicsBody "
"<class_PhysicsBody>` haften kann, den sie treffen könnte. Außerdem benötigen "
"wir jetzt den :ref:`KinematicBody <class_KinematicBody>` des Spielers, damit "
"die Haftgranate nicht am Spieler kleben bleibt, wenn der Spieler sie wirft."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:257
msgid ""
"Now let's look at the small change in ``_ready``. In ``_ready`` we've added "
"a line of code so when any body enters ``Stick_Area``, the "
"``collided_with_body`` function is called."
msgstr ""
"Schauen wir uns nun die kleine Änderung in ``_ready`` an. In ``_ready`` "
"haben wir eine Zeile Code hinzugefügt, so dass die Funktion "
"``collided_with_body`` aufgerufen wird, wenn ein Körper in die "
"``Stick_Area`` eintritt."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:262
msgid "Next let's take a look at ``collided_with_body``."
msgstr ""
"Lassen Sie uns als nächstes einen Blick auf ``collided_with_body`` werfen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:264
msgid ""
"Firstly, we make sure the sticky grenade is not colliding with itself. "
"Because the sticky :ref:`Area <class_Area>` does not know it's attached to "
"the grenade's :ref:`RigidBody <class_RigidBody>`, we need to make sure it's "
"not going to stick to itself by checking to make sure the body it has "
"collided with is not itself. If we have collided with ourself, we ignore it "
"by returning."
msgstr ""
"Erstens stellen wir sicher, dass die Haftgranate nicht mit sich selbst "
"kollidiert. Da die klebrige :ref:`Area <class_Area>` nicht weiß, dass sie "
"am :ref:`RigidBody <class_RigidBody>` der Granate befestigt ist, müssen wir "
"sicherstellen, dass sie nicht an sich selbst haftet, indem wir überprüfen, "
"ob der Körper, mit dem sie kollidiert ist, nicht sie selbst ist. Wenn wir "
"mit uns selbst kollidiert sind, ignorieren wir ihn, indem wir returnen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:269
msgid ""
"We then check to see if we have something assigned to ``player_body``, and "
"if the body the sticky grenade has collided with is the player that threw "
"it. If the body the sticky grenade has collided with is indeed "
"``player_body``, we ignore it by returning."
msgstr ""
"Dann prüfen wir, ob wir dem ``player_body`` etwas zugeordnet haben, und ob "
"der Körper, mit dem die Haftgranate zusammengestoßen ist, der Spieler ist, "
"der sie geworfen hat. Wenn der Körper, mit dem die Haftgranate kollidiert "
"ist, tatsächlich ein ``player_body`` ist, ignorieren wir ihn, indem wir "
"returnen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:272
msgid ""
"Next, we check if the sticky grenade has attached to something already or "
"not."
msgstr ""
"Als nächstes prüfen wir, ob die Haftgranate bereits an etwas befestigt ist "
"oder nicht."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:274
msgid ""
"If the sticky grenade is not attached, we then set ``attached`` to ``true`` "
"so we know the sticky grenade has attached to something."
msgstr ""
"Wenn die Haftgranate nicht befestigt ist, dann setzen wir ``attached`` auf "
"``true``, damit wir wissen, dass die Haftgranate an etwas befestigt ist."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:276
msgid ""
"We then make a new :ref:`Spatial <class_Spatial>` node, and make it a child "
"of the body the sticky grenade collided with. We then set the :ref:`Spatial "
"<class_Spatial>`'s position to the sticky grenade's current global position."
msgstr ""
"Dann machen wir eine neue Node :ref:`Spatial <class_Spatial>`, und machen "
"sie zu einem Kind des Körpers, mit dem die Haftgranate kollidierte. Dann "
"setzen wir die Position :ref:`Spatial <class_Spatial>` auf die aktuelle "
"globale Position der Haftgranate."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:279
msgid ""
"Because we've added the :ref:`Spatial <class_Spatial>` as a child of the "
"body the sticky grenade has collided with, it will follow along with said "
"body. We can then use this :ref:`Spatial <class_Spatial>` to set the sticky "
"grenade's position, so it is always at the same position relative to the "
"body it collided with."
msgstr ""
"Da wir das :ref:`Spatial <class_Spatial>` als Kind des Körpers hinzugefügt "
"haben, mit dem die Haftgranate kollidiert ist, wird sie zusammen mit dem "
"besagten Körper folgen. Wir können dann dieses :ref:`Spatial "
"<class_Spatial>` verwenden, um die Position der Haftgranate so festzulegen, "
"dass sie sich immer an der gleichen Position relativ zu dem Körper befindet, "
"mit dem sie kollidiert ist."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:282
msgid ""
"We then disable ``rigid_shape`` so the sticky grenade is not constantly "
"moving whatever body it has collided with. Finally, we set our mode to "
"``MODE_STATIC`` so the grenade does not move."
msgstr ""
"Dann schalten wir die ``rigid_shape`` aus, damit die Haftgranate sich nicht "
"ständig bewegt, mit welchem Körper sie auch immer kollidiert ist. "
"Schließlich stellen wir unseren Modus auf ``MODE_STATIC``, damit sich die "
"Granate nicht bewegt."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:287
msgid "Finally, lets go over the few changes in ``_process``."
msgstr ""
"Lassen Sie uns schließlich die wenigen Änderungen im ``_process`` durchgehen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:289
msgid ""
"Now we're checking to see if the sticky grenade is attached right at the top "
"of ``_process``."
msgstr ""
"Jetzt prüfen wir, ob die Haftgranate ganz oben auf dem ``_process`` "
"angebracht ist."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:291
msgid ""
"If the sticky grenade is attached, we then make sure the attached point is "
"not equal to ``null``. If the attached point is not equal to ``null``, we "
"set the sticky grenade's global position (using its global :ref:`Transform "
"<class_Transform>`'s origin) to the global position of the :ref:`Spatial "
"<class_Spatial>` assigned to ``attach_point`` (using its global :ref:"
"`Transform <class_Transform>`'s origin)."
msgstr ""
"Wenn die Haftgranate befestigt ist, stellen wir sicher, dass der "
"Befestigungspunkt nicht gleich ``null`` ist. Wenn der angehängte Punkt nicht "
"gleich ``null``` ist, setzen wir die globale Position der Haftgranate (unter "
"Verwendung ihres globalen :ref:`Transform <class_Transform>` Ursprungs) auf "
"die globale Position des :ref:`Spatial <class_Spatial>`, das dem "
"``attach_point`` zugeordnet ist (unter Verwendung ihres globalen :ref:"
"`Transform <class_Transform>` Ursprungs)."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:295
msgid ""
"The only other change is now before we free/destroy the sticky grenade is to "
"check to see if the sticky grenade has an attached point. If it does, we "
"also call ``queue_free`` on the attach point, so it's also freed/destroyed."
msgstr ""
"Die einzige andere Änderung ist nun, dass wir vor dem Freilassen/Zerstören "
"der Haftgranate prüfen müssen, ob die Haftgranate einen Befestigungspunkt "
"hat. Wenn das der Fall ist, rufen wir auch ``queue_free`` auf dem "
"Befestigungspunkt auf, so dass sie ebenfalls freigesetzt/zerstört wird."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:299
msgid "Adding grenades to the player"
msgstr "Dem Spieler Granaten hinzufügen"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:301
msgid ""
"Now we need to add some code to ``Player.gd`` so we can use the grenades."
msgstr ""
"Jetzt müssen wir etwas Code zu ``Player.gd`` hinzufügen, damit wir die "
"Granaten benutzen können."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:303
msgid ""
"Firstly, open up ``Player.tscn`` and expand the node tree until you get to "
"``Rotation_Helper``. Notice how in ``Rotation_Helper`` we have a node called "
"``Grenade_Toss_Pos``. This is where we will be spawning the grenades."
msgstr ""
"Öffnen Sie zunächst ``Player.tscn`` und erweitern Sie den Nodebaum, bis Sie "
"bei ``Rotation_Helper`` angelangt sind. Beachten Sie, dass wir in "
"``Rotation_Helper`` eine Node namens ``Granate_Toss_Pos`` haben. Hier werden "
"wir die Granaten spawnen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:306
msgid ""
"Also notice how it's slightly rotated on the ``X`` axis, so it's not "
"pointing straight, but rather slightly up. By changing the rotation of "
"``Grenade_Toss_Pos``, you can change the angle at which the grenades are "
"tossed."
msgstr ""
"Beachten Sie auch, wie es leicht um die ``X``-Achse gedreht ist, so dass es "
"nicht gerade, sondern eher leicht nach oben zeigt. Indem Sie die Drehung von "
"``Granate_Toss_Pos`` ändern, können Sie den Winkel ändern, in dem die "
"Granaten geworfen werden."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:309
msgid ""
"Okay, now let's start making the grenades work with the player. Add the "
"following class variables to ``Player.gd``:"
msgstr ""
"Okay, fangen wir nun an, die Granaten mit dem Spieler zum Funktionieren zu "
"bringen. Fügen Sie die folgenden Klassenvariablen zu ``Player.gd`` hinzu:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:319
msgid ""
"``grenade_amounts``: The amount of grenades the player is currently carrying "
"(for each type of grenade)."
msgstr ""
"``grenade_amounts``: Die Anzahl der Granaten, die der Spieler gerade trägt "
"(für jeden Granatentyp)."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:320
msgid ""
"``current_grenade``: The name of the grenade the player is currently using."
msgstr ""
"``current_grenade``: Der Name der Granate, die der Spieler gerade verwendet."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:321
msgid "``grenade_scene``: The grenade scene we worked on earlier."
msgstr ""
"``grenade_scene``: Die Granatenszene, an der wir früher gearbeitet haben."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:322
msgid ""
"``sticky_grenade_scene``: The sticky grenade scene we worked on earlier."
msgstr ""
"``sticky_grenade_scene``: Die Haftgranaten-Szene, an der wir früher "
"gearbeitet haben."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:323
msgid ""
"``GRENADE_THROW_FORCE``: The force at which the player will throw the "
"grenades."
msgstr ""
"``GRENADE_THROW_FORCE``: Die Kraft mit der der Spieler die Granaten wirft."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:325
msgid "Most of these variables are similar to how we have our weapons set up."
msgstr ""
"Die meisten dieser Variablen ähneln der Art und Weise, wie wir unsere Waffen "
"eingerichtet haben."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:327
msgid ""
"While it's possible to make a more modular grenade system, I found it was "
"not worth the additional complexity for just two grenades. If you were going "
"to make a more complex FPS with more grenades, you'd likely want to make a "
"system for grenades similar to how we have the weapons set up."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:332
msgid ""
"Now we need to add some code in ``_process_input`` Add the following to "
"``_process_input``:"
msgstr "Jetzt müssen wir etwas Code in ``_process_input`` hinzufügen:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:362
msgid "Let's go over what's happening here."
msgstr "Lassen Sie uns noch einmal durchgehen was hier passiert."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:364
msgid ""
"Firstly, we check to see if the ``change_grenade`` action has just been "
"pressed. If it has, we then check to see which grenade the player is "
"currently using. Based on the name of the grenade the player is currently "
"using, we change ``current_grenade`` to the opposite grenade name."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:367
msgid ""
"Next we check to see if the ``fire_grenade`` action has just been pressed. "
"If it has, we then check to see if the player has more than ``0`` grenades "
"for the current grenade type selected."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:370
msgid ""
"If the player has more than ``0`` grenades, we then remove one from the "
"grenade amounts for the current grenade. Then, based on the grenade the "
"player is currently using, we instance the proper grenade scene and assign "
"it to ``grenade_clone``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:373
msgid ""
"Next we add ``grenade_clone`` as a child of the node at the root and set its "
"global :ref:`Transform <class_Transform>` to ``Grenade_Toss_Pos``'s global :"
"ref:`Transform <class_Transform>`. Finally, we apply an impulse to the "
"grenade so that it is launched forward, relative to the ``Z`` directional "
"vector of ``grenade_clone``'s."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:379
msgid ""
"Now the player can use both types of grenades, but there are still a few "
"things we should probably add before we move on to adding the other things."
msgstr ""
"Jetzt kann der Spieler beide Arten von Granaten verwenden, aber es gibt noch "
"einige Dinge, die wir wahrscheinlich hinzufügen sollten, bevor wir mit dem "
"Hinzufügen der anderen Sachen fortfahren."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:381
msgid ""
"We still need a way to show the player how many grenades are left, and we "
"should probably add a way to get more grenades when the player picks up ammo."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:383
msgid ""
"Firstly, let's change some of the code in ``Player.gd`` to show how many "
"grenades are left. Change ``process_UI`` to the following:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:399
msgid "Now we'll show how many grenades the player has left in the UI."
msgstr ""
"Jetzt zeigen wir, wie viele Granaten der Spieler noch in der "
"Benutzeroberfläche hat."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:401
msgid ""
"While we're still in ``Player.gd``, let's add a function to add grenades to "
"the player. Add the following function to ``Player.gd``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:409
msgid ""
"Now we can add a grenade using ``add_grenade``, and it will automatically be "
"clamped to a maximum of ``4`` grenades."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:411
msgid ""
"You can change the ``4`` to a constant if you want. You'd need to make a new "
"global constant, something like ``MAX_GRENADES``, and then change the clamp "
"from ``clamp(grenade_amounts[current_grenade], 0, 4)`` to "
"``clamp(grenade_amounts[current_grenade], 0, MAX_GRENADES)``"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:414
msgid ""
"If you do not want to limit how many grenades the player can carry, remove "
"the line that clamps the grenades altogether!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:416
msgid ""
"Now we have a function to add grenades, let's open up ``AmmoPickup.gd`` and "
"use it!"
msgstr ""
"Jetzt haben wir eine Funktion zum Hinzufügen von Granaten, öffnen wir "
"``AmmoPickup.gd`` und benutzen sie!"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:418
msgid ""
"Open up ``AmmoPickup.gd`` and go to the ``trigger_body_entered`` function. "
"Change it to the following:"
msgstr ""
"Öffnen Sie ``AmmoPickup.gd`` und gehen Sie zur Funktion "
"``trigger_body_entered``. Ändern Sie es wie folgt:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:433
msgid ""
"Now we are also checking to see if the body has the ``add_grenade`` "
"function. If it does, we call it like we call ``add_ammo``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:435
msgid ""
"You may have noticed we are using a new constant we have not defined yet, "
"``GRENADE_AMOUNTS``. Let's add it! Add the following class variable to "
"``AmmoPickup.gd`` with the other class variables:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:442
msgid "``GRENADE_AMOUNTS``: The amount of grenades each pickup contains."
msgstr ""
"``GRENADE_AMOUNTS``: Die Anzahl der Granaten, die jeder Pickup enthält."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:444
msgid ""
"Notice how the second element in ``GRENADE_AMOUNTS`` is ``0``. This is so "
"the small ammo pickup does not give the player any additional grenades."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:449
msgid "Now you should be able to throw grenades! Go give it a try!"
msgstr ""
"Jetzt sollten Sie in der Lage sein, Granaten zu werfen! Versuchen Sie es "
"doch mal!"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:453
msgid "Adding the ability to grab and throw RigidBody nodes to the player"
msgstr ""
"Hinzufügen der Fähigkeit zum Greifen und Werfen von RigidBody-Nodes für den "
"Spieler"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:455
msgid ""
"Next, let's give the player the ability to pick up and throw :ref:`RigidBody "
"<class_RigidBody>` nodes."
msgstr ""
"Als nächstes geben wir dem Spieler die Möglichkeit, :ref:`RigidBody "
"<class_RigidBody>`-Nodes aufzunehmen und zu werfen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:457
msgid "Open up ``Player.gd`` and add the following class variables:"
msgstr ""
"Öffnen Sie ``Player.gd`` und fügen Sie die folgenden Klassenvariablen hinzu:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:466
msgid ""
"``grabbed_object``: A variable to hold the grabbed :ref:`RigidBody "
"<class_RigidBody>` node."
msgstr ""
"``grabbed_object``: Eine Variable zum Halten des ergriffenen :ref:`RigidBody "
"<class_RigidBody>` Nodes."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:467
msgid ""
"``OBJECT_THROW_FORCE``: The force with which the player throws the grabbed "
"object."
msgstr ""
"``OBJECT_THROW_FORCE``: Die Kraft mit der der Spieler das ergriffene Objekt "
"wirft."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:468
msgid ""
"``OBJECT_GRAB_DISTANCE``: The distance away from the camera at which the "
"player holds the grabbed object."
msgstr ""
"``OBJECT_GRAB_DISTANCE``: Der Abstand von der Kamera, in dem der Spieler das "
"ergriffene Objekt hält."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:469
msgid ""
"``OBJECT_GRAB_RAY_DISTANCE``: The distance the :ref:`Raycast "
"<class_Raycast>` goes. This is the player's grab distance."
msgstr ""
"``OBJECT_GRAB_RAY_DISTANCE``: Die Entfernung, die der :ref:`Raycast "
"<class_Raycast>` zurücklegt. Dies ist die Reichweite des Spielers."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:471
msgid ""
"With that done, all we need to do is add some code to ``process_input``:"
msgstr ""
"Wenn das erledigt ist, müssen wir nur noch etwas Code zu ``process_input`` "
"hinzufügen:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:509
msgid "Let's go over what's happening."
msgstr "Lassen Sie uns noch einmal durchgehen, was geschieht."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:511
msgid ""
"Firstly, we check to see if the action pressed is the ``fire`` action, and "
"that the player is using the ``UNARMED`` 'weapon'. This is because we only "
"want the player to be able to pick up and throw objects when the player is "
"not using any weapons. This is a design choice, but I feel it gives "
"``UNARMED`` a use."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:515
msgid "Next we check to see whether or not ``grabbed_object`` is ``null``."
msgstr "Als nächstes prüfen wir, ob ``Grabbed_object`` `Null`` ist oder nicht."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:519
msgid ""
"If ``grabbed_object`` is ``null``, we want to see if we can pick up a :ref:"
"`RigidBody <class_RigidBody>`."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:521
msgid ""
"We first get the direct space state from the current :ref:`World "
"<class_World>`. This is so we can cast a ray entirely from code, instead of "
"having to use a :ref:`Raycast <class_Raycast>` node."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:524
msgid ""
"See :ref:`Ray-casting <doc_ray-casting>` for more information on raycasting "
"in Godot."
msgstr ""
"Siehe :ref:`Raycasting <doc_ray-casting>` für weitere Informationen über "
"Raycasting in Godot."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:526
msgid ""
"Then we get the center of the screen by dividing the current :ref:`Viewport "
"<class_Viewport>` size in half. We then get the ray's origin point and end "
"point using ``project_ray_origin`` and ``project_ray_normal`` from the "
"camera. If you want to know more about how these functions work, see :ref:"
"`Ray-casting <doc_ray-casting>`."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:529
msgid ""
"Next we send the ray into the space state and see if it gets a result. We "
"add the player and the knife's :ref:`Area <class_Area>` as two exceptions so "
"the player cannot carry themselves or the knife's collision :ref:`Area "
"<class_Area>`."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:532
msgid ""
"Then we check to see if we got a result back from the ray. If no object has "
"collided with the ray, an empty Dictionary will be returned. If the "
"Dictionary is not empty (i.e. at least one object has collided), we then see "
"if the collider the ray collided with is a :ref:`RigidBody "
"<class_RigidBody>`."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:534
msgid ""
"If the ray collided with a :ref:`RigidBody <class_RigidBody>`, we set "
"``grabbed_object`` to the collider the ray collided with. We then set the "
"mode on the :ref:`RigidBody <class_RigidBody>` we collided with to "
"``MODE_STATIC`` so it doesn't move in our hands."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:537
msgid ""
"Finally, we set the grabbed :ref:`RigidBody <class_RigidBody>`'s collision "
"layer and collision mask to ``0``. This will make the grabbed :ref:"
"`RigidBody <class_RigidBody>` have no collision layer or mask, which means "
"it will not be able to collide with anything as long as we are holding it."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:542
msgid ""
"See :ref:`Physics introduction "
"<doc_physics_introduction_collision_layer_code_example>` for more "
"information on Godot collision masks."
msgstr ""
"Siehe :ref:`Physik-Einleitung "
"<doc_physics_introduction_collision_layer_collision_example>` für weitere "
"Informationen über Godots Kollisionsmasken."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:547
msgid ""
"If ``grabbed_object`` is not ``null``, then we need to throw the :ref:"
"`RigidBody <class_RigidBody>` the player is holding."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:549
msgid ""
"We first set the mode of the :ref:`RigidBody <class_RigidBody>` we are "
"holding to ``MODE_RIGID``."
msgstr ""
"Zuerst setzen wir den Modus des :ref:``RigidBody <class_RigidBody>`, den wir "
"auf ``MODE_RIGID`` halten."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:551
msgid ""
"This is making a rather large assumption that all the rigid bodies will be "
"using ``MODE_RIGID``. While that is the case for this tutorial series, that "
"may not be the case in other projects."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:554
msgid ""
"If you have rigid bodies with different modes, you may need to store the "
"mode of the :ref:`RigidBody <class_RigidBody>` you have picked up into a "
"class variable so you can change it back to the mode it was in before you "
"picked it up."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:557
msgid ""
"Then we apply an impulse to send it flying forward. We send it flying in the "
"direction the camera is facing, using the force we set in the "
"``OBJECT_THROW_FORCE`` variable."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:559
msgid ""
"We then set the grabbed :ref:`RigidBody <class_RigidBody>`'s collision layer "
"and mask to ``1``, so it can collide with anything on layer ``1`` again."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:561
msgid ""
"This is, once again, making a rather large assumption that all the rigid "
"bodies will be only on collision layer ``1``, and all collision masks will "
"be on layer ``1``. If you are using this script in other projects, you may "
"need to store the collision layer/mask of the :ref:`RigidBody "
"<class_RigidBody>` in a variable before you change them to ``0``, so you "
"would have the original collision layer/mask to set for them when you are "
"reversing the process."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:564
msgid ""
"Finally, we set ``grabbed_object`` to ``null`` since the player has "
"successfully thrown the held object."
msgstr ""
"Schließlich setzen wir ``grabbed_object`` auf ``null``, da der Spieler das "
"gehaltene Objekt erfolgreich geworfen hat."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:568
msgid ""
"The last thing we do is check to see whether or not ``grabbed_object`` is "
"equal to ``null``, outside all of the grabbing/throwing related code."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:570
msgid ""
"While technically not input related, it's easy enough to place the code "
"moving the grabbed object here because it's only two lines, and then all of "
"the grabbing/throwing code is in one place"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:573
msgid ""
"If the player is holding an object, we set its global position to the "
"camera's position plus ``OBJECT_GRAB_DISTANCE`` in the direction the camera "
"is facing."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:577
msgid ""
"Before we test this, we need to change something in ``_physics_process``. "
"While the player is holding an object, we do not want the player to be able "
"to change weapons or reload, so change ``_physics_process`` to the following:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:594
msgid "Now the player cannot change weapons or reload while holding an object."
msgstr ""
"Jetzt kann der Spieler die Waffe nicht mehr wechseln oder nachladen, während "
"er einen Gegenstand hält."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:596
msgid ""
"Now you can grab and throw RigidBody nodes while you're in the ``UNARMED`` "
"state! Go give it a try!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:599
msgid "Adding a turret"
msgstr "Einen Geschützturm hinzufügen"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:601
msgid "Next, let's make a turret to shoot the player!"
msgstr ""
"Als nächstes bauen wir einen Geschützturm, der auf den Spieler schießt!"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:603
msgid ""
"Open up ``Turret.tscn``. Expand ``Turret`` if it's not already expanded."
msgstr ""
"Öffnen Sie ``Turret.tscn``. Erweitern Sie ``Turret``, wenn es nicht bereits "
"erweitert ist."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:605
msgid ""
"Notice how the turret is broken up into several parts: ``Base``, ``Head``, "
"``Vision_Area``, and a ``Smoke`` :ref:`Particles <class_Particles>` node."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:607
msgid ""
"Open up ``Base`` and you'll find it's a :ref:`StaticBody <class_StaticBody>` "
"and a mesh. Open up ``Head`` and you'll find there are several meshes, a :"
"ref:`StaticBody <class_StaticBody>` and a :ref:`Raycast <class_Raycast>` "
"node."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:610
msgid ""
"One thing to note with the ``Head`` is that the raycast will be where the "
"turret's bullets will fire from if we are using raycasting. We also have two "
"meshes called ``Flash`` and ``Flash_2``. These will be the muzzle flash that "
"briefly shows when the turret fires."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:613
msgid ""
"``Vision_Area`` is an :ref:`Area <class_Area>` we'll use as the turret's "
"ability to see. When something enters ``Vision_Area``, we'll assume the "
"turret can see it."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:615
msgid ""
"``Smoke`` is a :ref:`Particles <class_Particles>` node that will play when "
"the turret is destroyed and repairing."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:619
msgid ""
"Now that we've looked at how the scene is set up, lets start writing the "
"code for the turret. Select ``Turret`` and create a new script called "
"``Turret.gd``. Add the following to ``Turret.gd``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:785
msgid ""
"This is quite a bit of code, so let's break it down function by function. "
"Let's first look at the class variables:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:787
msgid ""
"``use_raycast``: An exported boolean so we can change whether the turret "
"uses objects or raycasting for bullets."
msgstr ""
"``use_raycast``: Ein exportierter Boolescher Wert, mit dem wir ändern "
"können, ob der Geschützturm Objekte oder Raycasting für Geschosse verwendet."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:788
msgid ""
"``TURRET_DAMAGE_BULLET``: The amount of damage a single bullet scene does."
msgstr ""
"``TURRET_DAMAGE_BULLET``: Die Menge an Schaden, die eine einzelne Geschoss-"
"Szene anrichtet."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:789
msgid ""
"``TURRET_DAMAGE_RAYCAST``: The amount of damage a single :ref:`Raycast "
"<class_Raycast>` bullet does."
msgstr ""
"``TURRET_DAMAGE_RAYCAST``: Die Schadenshöhe, den ein einzelnes :ref:"
"``Raycast <class_Raycast>` Geschoss anrichtet."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:790
msgid ""
"``FLASH_TIME``: The amount of time (in seconds) the muzzle flash meshes are "
"visible."
msgstr ""
"``FLASH_TIME``: Die Zeitspanne (in Sekunden), in der die Mündungsblitze "
"sichtbar sind."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:791
msgid ""
"``flash_timer``: A variable for tracking how long the muzzle flash meshes "
"have been visible."
msgstr ""
"``flash_timer``: Eine Variable zum Verfolgen wie lange die Meshes der "
"Mündungsblitze sichtbar waren."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:792
msgid "``FIRE_TIME``: The amount of time (in seconds) needed to fire a bullet."
msgstr ""
"``FIRE_TIME``: Die Zeit (in Sekunden) die benötigt wird, um ein Geschoss "
"abzufeuern."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:793
msgid ""
"``fire_timer``: A variable for tracking how much time has passed since the "
"turret last fired."
msgstr ""
"``fire_timer``: Eine Variable zur Verfolgung, wie viel Zeit seit dem letzten "
"Schuss des Geschützturms vergangen ist."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:794
msgid "``node_turret_head``: A variable to hold the ``Head`` node."
msgstr "``node_turret_head``: Eine Variable, die den ``Head``-Node enthält."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:795
msgid ""
"``node_raycast``: A variable to hold the :ref:`Raycast <class_Raycast>` node "
"attached to the turret's head."
msgstr ""
"``node_raycast``: Eine Variable, die den Node :ref:``Raycast "
"<class_Raycast>` am Kopf des Geschützturms hält."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:796
msgid ""
"``node_flash_one``: A variable to hold the first muzzle flash :ref:"
"`MeshInstance <class_MeshInstance>`."
msgstr ""
"``node_flash_one``: Eine Variable, die den ersten Mündungsblitz enthält :ref:"
"`MeshInstance <class_MeshInstance>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:797
msgid ""
"``node_flash_two``: A variable to hold the second muzzle flash :ref:"
"`MeshInstance <class_MeshInstance>`."
msgstr ""
"``node_flash_two``: Eine Variable, die den zweiten Mündungsblitz enthält :"
"ref:`MeshInstance <class_MeshInstance>`."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:798
msgid "``ammo_in_turret``: The amount of ammo currently in the turret."
msgstr ""
"``ammo_in_turret``: Die Menge an Munition, die sich derzeit im Geschützturm "
"befindet."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:799
msgid "``AMMO_IN_FULL_TURRET``: The amount of ammo in a full turret."
msgstr ""
"``AMMO_IN_FULL_TURRET``: Die Menge an Munition in einem vollen Geschützturm."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:800
msgid "``AMMO_RELOAD_TIME``: The amount of time it takes the turret to reload."
msgstr ""
"``AMMO_RELOAD_TIME``: Die Zeit, die der Geschützturm zum Nachladen benötigt."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:801
msgid ""
"``ammo_reload_timer``: A variable for tracking how long the turret has been "
"reloading."
msgstr ""
"``ammo_reload_timer``: Eine Variable zum Verfolgen, wie lange der "
"Geschützturm neu geladen wurde."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:802
msgid "``current_target``: The turret's current target."
msgstr "``current_target``: Das aktuelle Ziel des Turms."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:803
msgid ""
"``is_active``: A variable for tracking whether the turret is able to fire at "
"the target."
msgstr ""
"``is_active``: Eine Variable zum Verfolgen, ob der Geschützturm auf das Ziel "
"schießen kann."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:804
msgid ""
"``PLAYER_HEIGHT``: The amount of height we're adding to the target so we're "
"not shooting at its feet."
msgstr ""
"``PLAYER_HEIGHT``: Die Höhe die wir dem Ziel hinzufügen, damit wir nicht auf "
"seine Füße schießen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:805
msgid "``smoke_particles``: A variable to hold the smoke particles node."
msgstr "``smoke_particles``: Eine Variable zum Halten des Rauchpartikel-Nodes."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:806
msgid "``turret_health``: The amount of health the turret currently has."
msgstr ""
"``turret_health``: Die Menge an Gesundheit, die der Geschützturm derzeit hat."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:807
msgid "``MAX_TURRET_HEALTH``: The amount of health a fully healed turret has."
msgstr ""
"``MAX_TURRET_HEALTH``: Die Menge an Gesundheit, die ein vollständig "
"geheilter Geschützturm hat."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:808
msgid ""
"``DESTROYED_TIME``: The amount of time (in seconds) it takes for a destroyed "
"turret to repair itself."
msgstr ""
"``DESTROYED_TIME``: Die Zeit (in Sekunden) die ein zerstörter Geschützturm "
"benötigt, um sich selbst zu reparieren."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:809
msgid ""
"``destroyed_timer``: A variable for tracking the amount of time a turret has "
"been destroyed."
msgstr ""
"``destroyed_timer``: Eine Variable zum Verfolgen der Zeit, in der ein "
"Geschützturm zerstört wurde."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:810
msgid ""
"``bullet_scene``: The bullet scene the turret fires (same scene as the "
"player's pistol)"
msgstr ""
"``bullet_scene``: Die Geschoss-Szene, die der Geschützturm abfeuert "
"(dieselbe Szene wie die Pistole des Spielers)"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:812
msgid "Whew, that's quite a few class variables!"
msgstr "Puh, das sind ganz schön viele Klassenvariablen!"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:816
msgid "Let's go through ``_ready`` next."
msgstr "Lassen Sie uns als nächstes ``_ready`` durchgehen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:818
msgid ""
"Firstly, we get the vision area and connect the ``body_entered`` and "
"``body_exited`` signals to ``body_entered_vision`` and "
"``body_exited_vision``, respectively."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:820
msgid ""
"We then get all the nodes and assign them to their respective variables."
msgstr ""
"Wir erhalten dann alle Nodes und ordnen sie ihren jeweiligen Variablen zu."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:822
msgid ""
"Next, we add some exceptions to the :ref:`Raycast <class_Raycast>` so the "
"turret cannot hurt itself."
msgstr ""
"Als nächstes fügen wir einige Ausnahmen zu :ref:`Raycast <class_Raycast>` "
"hinzu, damit sich der Turm nicht selbst verletzen kann."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:824
msgid ""
"Then we make both flash meshes invisible at start, since we are not going to "
"be firing during ``_ready``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:826
msgid ""
"We then get the smoke particles node and assign it to the "
"``smoke_particles`` variable. We also set ``emitting`` to ``false`` to "
"ensure the particles are not emitting until the turret is broken."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:829
msgid ""
"Finally, we set the turret's health to ``MAX_TURRET_HEALTH`` so it starts at "
"full health."
msgstr ""
"Schließlich stellen wir den Gesundheitszustand des Geschützturms auf "
"``MAX_TURRET_HEALTH`` ein, so dass er bei voller Gesundheit startet."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:833
msgid "Now let's go through ``_physics_process``."
msgstr "Lassen Sie uns nun ``_physics_process`` durchgehen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:835
msgid ""
"Firstly, we check whether the turret is active. If the turret is active, we "
"want to process the firing code."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:837
msgid ""
"Next, if ``flash_timer`` is greater than zero, meaning the flash meshes are "
"visible, we want to remove delta from ``flash_timer``. If ``flash_timer`` "
"gets to zero or less after we've subtracted ``delta``, we want to hide both "
"of the flash meshes."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:841
msgid ""
"Next, we check whether the turret has a target. If the turret has a target, "
"we make the turret head look at it, adding ``PLAYER_HEIGHT`` so it is not "
"aiming at the player's feet."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:844
msgid ""
"We then check whether the turret's health is greater than zero. If it is, we "
"then check whether there is ammo in the turret."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:846
msgid ""
"If there is, we then check whether ``fire_timer`` is greater than zero. If "
"it is, the turret cannot fire and we need to remove ``delta`` from "
"``fire_timer``. If ``fire_timer`` is less than or equal to zero, the turret "
"can fire a bullet, so we call the ``fire_bullet`` function."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:849
msgid ""
"If there isn't any ammo in the turret, we check whether "
"``ammo_reload_timer`` is greater than zero. If it is, we subtract ``delta`` "
"from ``ammo_reload_timer``. If ``ammo_reload_timer`` is less than or equal "
"to zero, we set ``ammo_in_turret`` to ``AMMO_IN_FULL_TURRET`` because the "
"turret has waited long enough to refill its ammo."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:853
msgid ""
"Next, we check whether the turret's health is less than or equal to ``0`` "
"outside of whether it is active or not. If the turret's health is zero or "
"less, we then check whether ``destroyed_timer`` is greater than zero. If it "
"is, we subtract ``delta`` from ``destroyed_timer``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:856
msgid ""
"If ``destroyed_timer`` is less than or equal to zero, we set "
"``turret_health`` to ``MAX_TURRET_HEALTH`` and stop emitting smoke particles "
"by setting ``smoke_particles.emitting`` to ``false``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:861
msgid "Next let's go through ``fire_bullet``."
msgstr "Lassen Sie uns als nächstes ``fire_bullet`` durchgehen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:863
msgid "Firstly, we check whether the turret is using a raycast."
msgstr "Zuerst prüfen wir, ob der Turm einen Ray-Cast verwendet."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:865
msgid ""
"The code for using a raycast is almost entirely the same as the code in the "
"rifle from :ref:`doc_fps_tutorial_part_two`, so I'm only going to go over it "
"briefly."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:868
msgid ""
"We first make the raycast look at the target, ensuring the raycast will hit "
"the target if nothing is in the way. We then force the raycast to update so "
"we get a frame perfect collision check. We then check whether the raycast "
"has collided with anything. If it has, we then check whether the collided "
"body has the ``bullet_hit`` method. If it does, we call it and pass in the "
"damage a single raycast bullet does along with the raycast's transform. We "
"then subtract ``1`` from ``ammo_in_turret``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:873
msgid ""
"If the turret is not using a raycast, we spawn a bullet object instead. This "
"code is almost entirely the same as the code in the pistol from :ref:"
"`doc_fps_tutorial_part_two`, so like with the raycast code, I'm only going "
"to go over it briefly."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:876
msgid ""
"We first make a bullet clone and assign it to ``clone``. We then add that as "
"a child of the root node. We set the bullet's global transform to the barrel "
"end, scale it up since it's too small, and set its damage and speed using "
"the turret's constant class variables. We then subtract ``1`` from "
"``ammo_in_turret``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:880
msgid ""
"Then, regardless of which bullet method we used, we make both of the muzzle "
"flash meshes visible. We set ``flash_timer`` and ``fire_timer`` to "
"``FLASH_TIME`` and ``FIRE_TIME``, respectively. We then check whether the "
"turret has used the last bullet in its ammo. If it has, we set "
"``ammo_reload_timer`` to ``AMMO_RELOAD_TIME`` so the turret reloads."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:886
msgid ""
"Let's look at ``body_entered_vision`` next, and thankfully it is rather "
"short."
msgstr ""
"Schauen wir uns als nächstes ``body_entered_vision`` an, und zum Glück ist "
"dies recht kurz."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:888
msgid ""
"We first check whether the turret currently has a target by checking if "
"``current_target`` is equal to ``null``. If the turret does not have a "
"target, we then check whether the body that has just entered the vision :ref:"
"`Area <class_Area>` is a :ref:`KinematicBody <class_KinematicBody>`."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:891
msgid ""
"We're assuming the turret should only fire at :ref:`KinematicBody "
"<class_KinematicBody>` nodes since that is what the player is using."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:893
msgid ""
"If the body that just entered the vision :ref:`Area <class_Area>` is a :ref:"
"`KinematicBody <class_KinematicBody>`, we set ``current_target`` to the "
"body, and set ``is_active`` to ``true``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:898
msgid "Now let's look at ``body_exited_vision``."
msgstr "Schauen wir uns nun ``body_exited_vision`` an."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:900
msgid ""
"Firstly, we check whether the turret has a target. If it does, we then check "
"whether the body that has just left the turret's vision :ref:`Area "
"<class_Area>` is the turret's target."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:903
msgid ""
"If the body that has just left the vision :ref:`Area <class_Area>` is the "
"turret's current target, we set ``current_target`` to ``null``, set "
"``is_active`` to ``false``, and reset all the variables related to firing "
"the turret since the turret no longer has a target to fire at."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:908
msgid "Finally, let's look at ``bullet_hit``."
msgstr "Lass uns zum Schluss einen Blick auf ``bullet_hit`` werfen."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:910
msgid ""
"We first subtract however much damage the bullet causes from the turret's "
"health."
msgstr ""
"Zuerst ziehen wir vom Gesundheitszustand des Turms den vom Geschoss "
"verursachten Schaden ab."

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:912
msgid ""
"Then, we check whether the turret has been destroyed (health being zero or "
"less). If the turret is destroyed, we start emitting the smoke particles and "
"set ``destroyed_timer`` to ``DESTROYED_TIME`` so the turret has to wait "
"before being repaired."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:917
msgid ""
"Whew, with all of that done and coded, we only have one last thing to do "
"before the turret is ready for use. Open up ``Turret.tscn`` if it's not "
"already open and select one of the :ref:`StaticBody <class_StaticBody>` "
"nodes from either ``Base`` or ``Head``. Create a new script called "
"``TurretBodies.gd`` and attach it to whichever :ref:`StaticBody "
"<class_StaticBody>` you have selected."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:921
msgid "Add the following code to ``TurretBodies.gd``:"
msgstr "Fügen Sie den folgenden Code zu ``TurretBodies.gd`` hinzu:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:936
msgid ""
"All this code does is call ``bullet_hit`` on whatever node to which "
"``path_to_turret_root`` leads. Go back to the editor and assign the :ref:"
"`NodePath <class_NodePath>` to the ``Turret`` node."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:939
msgid ""
"Now select the other :ref:`StaticBody <class_StaticBody>` node (either in "
"``Body`` or ``Head``) and assign ``TurretBodies.gd`` script to it. Once the "
"script is attached, assign again the :ref:`NodePath <class_NodePath>` to the "
"``Turret`` node."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:944
msgid ""
"The last thing we need to do is add a way for the player to be hurt. Since "
"all the bullets use the ``bullet_hit`` function, we need to add that "
"function to the player."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:946
msgid "Open ``Player.gd`` and add the following:"
msgstr "Öffnen Sie ``Player.gd`` und fügen Sie Folgendes hinzu:"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:953
msgid ""
"With all that done, you should have fully operational turrets! Go place a "
"few in one/both/all of the scenes and give them a try!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:956
msgid "Final notes"
msgstr "Schlussbemerkungen"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:960
msgid ""
"Now you can pick up :ref:`RigidBody <class_RigidBody>` nodes and throw "
"grenades. We now also have turrets to fire at the player."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:962
msgid ""
"In :ref:`doc_fps_tutorial_part_six`, we're going to add a main menu and a "
"pause menu, add a respawn system for the player, and change/move the sound "
"system so we can use it from any script."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:965
msgid "If you ever get lost, be sure to read over the code again!"
msgstr ""
"Wenn Sie jemals die Orientierung verlieren, lesen Sie den Code unbedingt "
"noch einmal durch!"

#: ../../docs/tutorials/3d/fps_tutorial/part_five.rst:967
msgid ""
"You can download the finished project for this part here: :download:"
"`Godot_FPS_Part_5.zip <files/Godot_FPS_Part_5.zip>`"
msgstr ""
"Sie können das fertige Projekt für diesen Teil hier herunterladen: :download:"
"`Godot_FPS_Teil_5.zip <files/Godot_FPS_Teil_5.zip>`"
