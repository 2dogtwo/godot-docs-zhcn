# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 15:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:4
msgid "Introduction to 3D"
msgstr "3D Einführung"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:6
msgid ""
"Creating a 3D game can be challenging. That extra Z coordinate makes many of "
"the common techniques that helped to make 2D games simple no longer work. To "
"aid in this transition, it is worth mentioning that Godot uses similar APIs "
"for 2D and 3D. Most nodes are the same and are present in both 2D and 3D "
"versions. In fact, it is worth checking the 3D platformer tutorial, or the "
"3D kinematic character tutorials, which are almost identical to their 2D "
"counterparts."
msgstr ""
"Das Erstellen eines 3D-Spiels kann eine Herausforderung sein. Durch diese "
"zusätzliche Z-Koordinate funktionieren viele der gängigen Techniken nicht "
"mehr, die dazu beigetragen haben, dass 2D-Spiele einfach zu erstellen sind. "
"Um diesen Übergang zu erleichtern, ist es erwähnenswert, dass Godot ähnliche "
"APIs für 2D und 3D verwendet. Die meisten Nodes sind gleich und stehen "
"sowohl in 2D- als auch in 3D-Versionen zur Verfügung. In der Tat lohnt es "
"sich, die 3D Plattformer Anleitung oder die 3D Anleitungen für kinematische "
"Charaktere zu lesen, die fast identisch mit ihren 2D Gegenstücken sind."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:14
msgid ""
"In 3D, math is a little more complex than in 2D, so also checking the :ref:"
"`doc_vector_math` entry in the wiki (which was especially created for game "
"developers, not mathematicians or engineers) will help pave the way for you "
"to develop 3D games efficiently."
msgstr ""
"In 3D ist Mathematik etwas komplexer als in 2D. Wenn Sie also den Eintrag :"
"ref:`doc_vector_math` im Wiki ansehen (der speziell für Spieleentwickler "
"erstellt wurde, nicht für Mathematiker oder Ingenieure), ebnen Sie sich den "
"Weg zur effizienten 3D-Spiele Entwicklung."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:20
msgid "Spatial node"
msgstr "Spatial-Node (Raum-Node)"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:22
msgid ""
":ref:`Node2D <class_Node2D>` is the base node for 2D. :ref:`Control "
"<class_Control>` is the base node for everything GUI. Following this "
"reasoning, the 3D engine uses the :ref:`Spatial <class_Spatial>` node for "
"everything 3D."
msgstr ""
":ref:`Node2D <class_Node2D>` ist der Basis-Node für 2D und :ref:`Control "
"<class_Control>` ist der Basis-Node für die gesamte grafische "
"Benutzeroberfläche. Nach dieser Überlegung verwendet die 3D-Engine für alles "
"in 3D den Node :ref:`Spatial <class_Spatial>`."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:29
msgid ""
"Spatial nodes have a local transform, which is relative to the parent node "
"(as long as the parent node is also of **or inherits from** the type "
"Spatial). This transform can be accessed as a 4×3 :ref:`Transform "
"<class_Transform>`, or as 3 :ref:`Vector3 <class_Vector3>` members "
"representing location, Euler rotation (X, Y and Z angles) and scale."
msgstr ""
"Spatial-Nodes haben eine lokale Transformation, die relativ zum "
"übergeordneten Node ist (solange der übergeordnete Node ebenfalls vom Typ "
"Spatial ist **oder von diesem erbt**). Auf diese Transformation kann als "
"4×3 :ref:`Transform <class_Transform>` oder als 3 :ref:`Vector3 "
"<class_Vector3>` Elemente zugegriffen werden, die für Position, Euler-"
"Rotation (X, Y und Z Winkel) und Skalierung stehen."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:39
msgid "3D content"
msgstr "3D Inhalt"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:41
msgid ""
"Unlike 2D, where loading image content and drawing is straightforward, 3D is "
"a little more difficult. The content needs to be created with special 3D "
"tools (usually referred to as DCCs) and exported to an exchange file format "
"in order to be imported in Godot (3D formats are not as standardized as "
"images)."
msgstr ""
"Im Gegensatz zu 2D wo das Laden von Bildinhalten und Zeichnen einfach ist, "
"ist 3D etwas schwieriger. Der Inhalt muss mit speziellen 3D-Werkzeugen "
"(normalerweise als DCCs bezeichnet) erstellt und in ein Austauschdateiformat "
"exportiert werden, um in Godot importiert zu werden (3D-Formate sind nicht "
"so standardisiert wie Bilder)."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:48
msgid "DCC-created models"
msgstr "DCC erzeugte Modelle"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:53
msgid ""
"There are two pipelines to import 3D models in Godot. The first and most "
"common one is by :ref:`doc_importing_3d_scenes`, which allows you to import "
"entire scenes (just as they look in the DCC), including animation, skeletal "
"rigs, blend shapes, etc."
msgstr ""
"Es gibt zwei Möglichkeiten zum Importieren von 3D-Modellen in Godot. Die "
"erste und häufigste ist :ref:`doc_importing_3d_scenes` mit der Sie ganze "
"Szenen (so wie sie im DCC aussehen) importieren können, einschließlich "
"Animationen, Skelett-Rigs, Mischformen usw."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:58
msgid ""
"The second pipeline is by importing simple .OBJ files as mesh resources, "
"which can be then put inside a :ref:`MeshInstance <class_MeshInstance>` node "
"for display."
msgstr ""
"Die zweite Möglichkeit besteht aus dem Importieren einfacher .OBJ-Dateien "
"als Mesh-Ressourcen, die dann zur Anzeige in einen :ref:`MeshInstance "
"<class_MeshInstance>` Node eingefügt werden können."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:63
msgid "Generated geometry"
msgstr "Generierte Geometrie"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:65
msgid ""
"It is possible to create custom geometry by using the :ref:`ArrayMesh "
"<class_ArrayMesh>` resource directly. Simply create your arrays and use the :"
"ref:`ArrayMesh.add_surface_from_arrays() "
"<class_ArrayMesh_method_add_surface_from_arrays>` function. A helper class "
"is also available, :ref:`SurfaceTool <class_SurfaceTool>`, which provides a "
"more straightforward API and helpers for indexing, generating normals, "
"tangents, etc."
msgstr ""
"Es ist möglich, benutzerdefinierte Geometrie mithilfe der Ressource :ref:"
"`ArrayMesh <class_ArrayMesh>` direkt zu erstellen. Erstellen Sie einfach "
"Ihre Arrays und verwenden Sie die Funktion :ref:`ArrayMesh."
"add_surface_from_arrays () "
"<class_ArrayMesh_method_add_surface_from_arrays>`. Es steht auch eine "
"Hilfsklasse zur Verfügung :ref:`SurfaceTool <class_SurfaceTool>`, die eine "
"einfachere API und Hilfen zum Indizieren, Generieren von Normalen, Tangenten "
"usw. bietet."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:72
msgid ""
"In any case, this method is meant for generating static geometry (models "
"that will not be updated often), as creating vertex arrays and submitting "
"them to the 3D API has a significant performance cost."
msgstr ""
"In jedem Fall ist diese Methode zum Generieren statischer Geometrie "
"(Modelle, die nicht häufig aktualisiert werden) gedacht, da das Erstellen "
"von Vertex-Arrays und deren Übermittlung an die 3D-API erhebliche "
"Leistungskosten verursacht."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:77
msgid "Immediate geometry"
msgstr "Unmittelbare Geometrie"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:79
msgid ""
"If, instead, there is a requirement to generate simple geometry that will be "
"updated often, Godot provides a special node, :ref:`ImmediateGeometry "
"<class_ImmediateGeometry>`, which provides an OpenGL 1.x style immediate-"
"mode API to create points, lines, triangles, etc."
msgstr ""
"Wenn stattdessen eine einfache Geometrie generiert werden muss, die häufig "
"aktualisiert wird, stellt Godot einen speziellen Node bereit :ref:"
"`ImmediateGeometry <class_ImmediateGeometry>`, der eine OpenGL 1.x-API im "
"Unmittelbar-Modus zum Erstellen von Punkten, Linien, Dreiecke usw. "
"bereitstellt."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:86
msgid "2D in 3D"
msgstr "2D in 3D"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:88
msgid ""
"While Godot packs a powerful 2D engine, many types of games use 2D in a 3D "
"environment. By using a fixed camera (either orthogonal or perspective) that "
"does not rotate, nodes such as :ref:`Sprite3D <class_Sprite3D>` and :ref:"
"`AnimatedSprite3D <class_AnimatedSprite3D>` can be used to create 2D games "
"that take advantage of mixing with 3D backgrounds, more realistic parallax, "
"lighting/shadow effects, etc."
msgstr ""
"Während Godot eine leistungsstarke 2D-Engine enthält, verwenden viele Arten "
"von Spielen 2D in einer 3D-Umgebung. Durch die Verwendung einer festen "
"Kamera (entweder orthogonal oder perspektivisch), die sich nicht dreht, "
"können Nodes wie :ref:`Sprite3D <class_Sprite3D>` und :ref:`AnimatedSprite3D "
"<class_AnimatedSprite3D>` verwendet werden, um 2D-Spiele zu erstellen, die "
"das Mischen mit 3D-Hintergründen, realistische Parallax-Effekte, Licht- / "
"Schatteneffekten usw. nutzen."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:96
msgid ""
"The disadvantage is, of course, that added complexity and reduced "
"performance in comparison to plain 2D, as well as the lack of reference of "
"working in pixels."
msgstr ""
"Der Nachteil ist natürlich, dass die Komplexität zunimmt und die Leistung im "
"Vergleich zu einfachem 2D, sowie die fehlenden Anhaltspunkte für die Arbeit "
"in Pixeln verringert wird."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:101
msgid "Environment"
msgstr "Umgebung"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:103
msgid ""
"Besides editing a scene, it is often common to edit the environment. Godot "
"provides a :ref:`WorldEnvironment <class_WorldEnvironment>` node that allows "
"changing the background color, mode (as in, put a skybox), and applying "
"several types of built-in post-processing effects. Environments can also be "
"overridden in the Camera."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:110
msgid "3D viewport"
msgstr "3D Ansichtsfenster"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:112
msgid ""
"Editing 3D scenes is done in the 3D tab. This tab can be selected manually, "
"but it will be automatically enabled when a Spatial node is selected."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:118
msgid ""
"Default 3D scene navigation controls are similar to Blender (aiming to have "
"some sort of consistency in the free software pipeline..), but options are "
"included to customize mouse buttons and behavior to be similar to other "
"tools in the Editor Settings:"
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:126
msgid "Coordinate system"
msgstr "Koordinatensystem"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:128
msgid ""
"Godot uses the `metric <https://en.wikipedia.org/wiki/Metric_system>`__ "
"system for everything. 3D Physics and other areas are tuned for this, so "
"attempting to use a different scale is usually a bad idea (unless you know "
"what you are doing)."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:133
msgid ""
"When working with 3D assets, it's always best to work in the correct scale "
"(set your DCC to metric). Godot allows scaling post-import and, while this "
"works in most cases, in rare situations it may introduce floating-point "
"precision issues (and thus, glitches or artifacts) in delicate areas, such "
"as rendering or physics, so make sure your artists always work in the right "
"scale!"
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:140
msgid ""
"The Y coordinate is used for \"up\", though for most objects that need "
"alignment (like lights, cameras, capsule collider, vehicle, etc.), the Z "
"axis is used as a \"pointing towards\" direction. This convention roughly "
"means that:"
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:145
msgid "**X** is sides"
msgstr "**X** ist seitlich"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:146
msgid "**Y** is up/down"
msgstr "**Y** ist hoch/runter"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:147
msgid "**Z** is front/back"
msgstr "**Z** ist vorne/hinten"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:150
msgid "Space and manipulation gizmos"
msgstr "Raum- und Manipulations-Gizmos"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:152
msgid ""
"Moving objects in the 3D view is done through the manipulator gizmos. Each "
"axis is represented by a color: Red, Green, Blue represent X, Y, Z "
"respectively. This convention applies to the grid and other gizmos too (and "
"also to the shader language, ordering of components for Vector3, Color, "
"etc.)."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:160
msgid "Some useful keybindings:"
msgstr "Einige nützliche Tastenkürzel:"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:162
msgid ""
"To snap placement or rotation, press :kbd:`Ctrl` while moving, scaling or "
"rotating."
msgstr ""
"Um die Platzierung oder Drehung einzurasten, drücken Sie :kbd:`Strg` während "
"des Verschiebens, Skalierens oder Drehens."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:164
msgid "To center the view on the selected object, press :kbd:`F`."
msgstr ""
"Zum Zentrieren der Ansicht auf das ausgewählte Objekt, drücken Sie :kbd:`F`."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:167
msgid "View menu"
msgstr "Ansicht-Menü"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:169
msgid ""
"The view options are controlled by the \"View\" menu in the viewport's "
"toolbar."
msgstr ""
"Die Ansichtsoptionen werden über das Menü \"Ansicht\" in der Symbolleiste "
"des Ansichtsfensters gesteuert."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:173
msgid "You can hide the gizmos in the 3D view of the editor through this menu:"
msgstr ""
"Sie können die Gizmos in der 3D-Ansicht des Editors über dieses Menü "
"ausblenden:"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:177
msgid ""
"To hide a specific type of gizmos, you can toggle them off in the \"View\" "
"menu."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:182
msgid "Default environment"
msgstr "Standard Umgebung"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:184
msgid ""
"When created from the Project Manager, the 3D environment has a default sky."
msgstr ""
"Beim Erstellen im Projektmanager hat die 3D-Umgebung einen Standardhimmel."

#: ../../docs/tutorials/3d/introduction_to_3d.rst:188
msgid ""
"Given how physically based rendering works, it is advised to always try to "
"work with a default environment in order to provide indirect and reflected "
"light to your objects."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:193
msgid "Cameras"
msgstr "Kameras"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:195
msgid ""
"No matter how many objects are placed in the 3D space, nothing will be "
"displayed unless a :ref:`Camera <class_Camera>` is also added to the scene. "
"Cameras can work in either orthogonal or perspective projections:"
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:202
msgid ""
"Cameras are associated with (and only display to) a parent or grandparent "
"viewport. Since the root of the scene tree is a viewport, cameras will "
"display on it by default, but if sub-viewports (either as render target or "
"picture-in-picture) are desired, they need their own children cameras to "
"display."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:210
msgid ""
"When dealing with multiple cameras, the following rules are enforced for "
"each viewport:"
msgstr ""
"Wenn man mit mehreren Kameras umgeht, werden folgende Regeln für jede "
"Ansicht angewendet:"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:213
msgid ""
"If no cameras are present in the scene tree, the first one that enters it "
"will become the active camera. Further cameras entering the scene will be "
"ignored (unless they are set as *current*)."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:216
msgid ""
"If a camera has the \"*current*\" property set, it will be used regardless "
"of any other camera in the scene. If the property is set, it will become "
"active, replacing the previous camera."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:219
msgid ""
"If an active camera leaves the scene tree, the first camera in tree-order "
"will take its place."
msgstr ""

#: ../../docs/tutorials/3d/introduction_to_3d.rst:223
msgid "Lights"
msgstr "Beleuchtung"

#: ../../docs/tutorials/3d/introduction_to_3d.rst:225
msgid ""
"Godot has a limit of up to 8 lights per mesh. Aside from that, there is no "
"limitation on the number of lights, nor of types of lights, in Godot. As "
"many as desired can be added, as long as performance allows, and no more "
"than 8 lights shine on a single mesh."
msgstr ""
