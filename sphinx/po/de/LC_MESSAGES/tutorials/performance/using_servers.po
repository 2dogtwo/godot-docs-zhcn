# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2022, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-29 17:56+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Optimization using Servers"
msgstr "Optimierung mit Servern"

msgid ""
"Engines like Godot provide increased ease of use thanks to their high level "
"constructs and features. Most of them are accessed and used via the :ref:"
"`Scene System<doc_scene_tree>`. Using nodes and resources simplifies project "
"organization and asset management in complex games."
msgstr ""
"Engines wie Godot bieten dank ihrer hochwertigen Konstruktionen und "
"Funktionen eine höhere Benutzerfreundlichkeit. Auf die meisten von ihnen "
"wird über das :ref:`Szenensystem <doc_scene_tree>` zugegriffen, bzw. "
"verwendet . Die Verwendung von Nodes und Ressourcen vereinfacht die "
"Projektorganisation und das Asset Management in komplexen Spielen."

msgid "There are, of course, always drawbacks:"
msgstr "Es gibt natürlich immer Nachteile:"

msgid "There is an extra layer of complexity"
msgstr "Es gibt eine zusätzliche Komplexitätsebene"

msgid "Performance is lower than using simple APIs directly"
msgstr ""
"Die Leistung ist geringer als bei der direkten Verwendung einfacher APIs"

msgid "It is not possible to use multiple threads to control them"
msgstr "Es ist nicht möglich, mehrere Threads zu verwenden, um sie zu steuern"

msgid "More memory is needed."
msgstr "Mehr Speicher wird benötigt."

msgid ""
"In many cases, this is not really a problem (Godot is very optimized, and "
"most operations are handled with signals, so no polling is required). Still, "
"sometimes it can be. For example, dealing with tens of thousands of "
"instances for something that needs to be processed every frame can be a "
"bottleneck."
msgstr ""
"In vielen Fällen ist dies kein wirkliches Problem (Godot ist sehr optimiert "
"und die meisten Vorgänge werden mit Signalen behandelt, sodass keine Abfrage "
"erforderlich ist). Trotzdem kann es manchmal dazu kommen: Der Umgang mit "
"Zehntausenden von Instanzen für etwas, das in jedem Frame verarbeitet werden "
"muss, kann beispielsweise einen Engpass darstellen."

msgid ""
"This type of situation makes programmers regret they are using a game engine "
"and wish they could go back to a more handcrafted, low level implementation "
"of game code."
msgstr ""
"In solche Situationen bereuen Programmierer, dass sie eine Spiel-Engine "
"verwenden und wünschten sich, sie könnten zu einer handwerklicheren "
"Implementierung von Spielcode auf niedriger Ebene zurückkehren."

msgid "Still, Godot is designed to work around this problem."
msgstr "Dennoch ist Godot darauf ausgelegt, dieses Problem zu umgehen."

msgid "Servers"
msgstr "Server"

#, fuzzy
msgid ""
"One of the most interesting design decisions for Godot is the fact that the "
"whole scene system is *optional*. While it is not currently possible to "
"compile it out, it can be completely bypassed."
msgstr ""
"Eine der interessantesten Designentscheidungen für Godot ist die Tatsache, "
"dass das gesamte Szenensystem *optional* ist. Während es derzeit nicht "
"möglich ist es heraus zu kompilieren, kann es vollständig umgangen werden."

#, fuzzy
msgid ""
"At the core, Godot uses the concept of Servers. They are very low-level APIs "
"to control rendering, physics, sound, etc. The scene system is built on top "
"of them and uses them directly. The most common servers are:"
msgstr ""
"Im Kern verwendet Godot das Konzept der Server. Es handelt sich um APIs auf "
"sehr niedriger Ebene zur Steuerung von Rendering, Physik, Sound usw. Das "
"Szenensystem ist darauf aufgebaut und verwendet sie direkt. Die häufigsten "
"Server sind:"

msgid ""
":ref:`VisualServer <class_VisualServer>`: handles everything related to "
"graphics."
msgstr ""
":ref:`VisualServer <class_VisualServer>`: kümmert sich um alles, was mit "
"Grafiken zu tun hat."

msgid ""
":ref:`PhysicsServer <class_PhysicsServer>`: handles everything related to 3D "
"physics."
msgstr ""
":ref:`PhysicsServer <class_PhysicsServer>`: kümmert sich um alles rund um "
"die 3D-Physik."

msgid ""
":ref:`Physics2DServer <class_Physics2DServer>`: handles everything related "
"to 2D physics."
msgstr ""
":ref:`Physics2DServer <class_Physics2DServer>`: kümmert sich um alles, was "
"mit 2D-Physik zu tun hat."

msgid ""
":ref:`AudioServer <class_AudioServer>`: handles everything related to audio."
msgstr ""
":ref:`AudioServer <class_AudioServer>`: kümmert sich um alles, was mit Audio "
"zu tun hat."

#, fuzzy
msgid ""
"Explore their APIs and you will realize that all the functions provided are "
"low-level implementations of everything Godot allows you to do."
msgstr ""
"Wenn Sie nur die APIs untersuchen werden Sie feststellen, dass alle "
"bereitgestellten Funktionen einfache Implementierungen von allem sind, was "
"Godot Ihnen ermöglicht."

msgid "RIDs"
msgstr "RIDs"

msgid ""
"The key to using servers is understanding Resource ID (:ref:`RID "
"<class_RID>`) objects. These are opaque handles to the server "
"implementation. They are allocated and freed manually. Almost every function "
"in the servers requires RIDs to access the actual resource."
msgstr ""

msgid ""
"Most Godot nodes and resources contain these RIDs from the servers "
"internally, and they can be obtained with different functions. In fact, "
"anything that inherits :ref:`Resource <class_Resource>` can be directly "
"casted to an RID. Not all resources contain an RID, though: in such cases, "
"the RID will be empty. The resource can then be passed to server APIs as an "
"RID."
msgstr ""

msgid ""
"Resources are reference-counted (see :ref:`Reference <class_Reference>`), "
"and references to a resource's RID are *not* counted when determining "
"whether the resource is still in use. Make sure to keep a reference to the "
"resource outside the server, or else both it and its RID will be erased."
msgstr ""

msgid "For nodes, there are many functions available:"
msgstr "Für Nodes stehen viele Funktionen zur Verfügung:"

msgid ""
"For CanvasItem, the :ref:`CanvasItem.get_canvas_item() "
"<class_CanvasItem_method_get_canvas_item>` method will return the canvas "
"item RID in the server."
msgstr ""

msgid ""
"For CanvasLayer, the :ref:`CanvasLayer.get_canvas() "
"<class_CanvasLayer_method_get_canvas>` method will return the canvas RID in "
"the server."
msgstr ""
"Für CanvasLayer gibt die Methode :ref:`CanvasLayer.get_canvas() "
"<class_CanvasLayer_method_get_canvas>` die Canvas-RID auf dem Server zurück."

msgid ""
"For Viewport, the :ref:`Viewport.get_viewport_rid() "
"<class_Viewport_method_get_viewport_rid>` method will return the viewport "
"RID in the server."
msgstr ""
"Bei Ansichtsfenstern gibt die Methode :ref:'Viewport.get_viewport_rid() "
"<class_Viewport_method_get_viewport_rid>' die RID des Ansichtsfensters auf "
"dem Server zurück."

msgid ""
"For 3D, the :ref:`World <class_World>` resource (obtainable in the :ref:"
"`Viewport <class_Viewport>` and :ref:`Spatial <class_Spatial>` nodes) "
"contains functions to get the *VisualServer Scenario*, and the "
"*PhysicsServer Space*. This allows creating 3D objects directly with the "
"server API and using them."
msgstr ""

msgid ""
"For 2D, the :ref:`World2D <class_World2D>` resource (obtainable in the :ref:"
"`Viewport <class_Viewport>` and :ref:`CanvasItem <class_CanvasItem>` nodes) "
"contains functions to get the *VisualServer Canvas*, and the "
"*Physics2DServer Space*. This allows creating 2D objects directly with the "
"server API and using them."
msgstr ""

msgid ""
"The :ref:`VisualInstance<class_VisualInstance>` class, allows getting the "
"scenario *instance* and *instance base* via the :ref:`VisualInstance."
"get_instance() <class_VisualInstance_method_get_instance>` and :ref:"
"`VisualInstance.get_base() <class_VisualInstance_method_get_base>` "
"respectively."
msgstr ""

#, fuzzy
msgid ""
"Try exploring the nodes and resources you are familiar with and find the "
"functions to obtain the server *RIDs*."
msgstr ""
"Erkunden Sie einfach die Nodes und Ressourcen mit denen Sie vertraut sind "
"und finden Sie die Funktionen zum Abrufen der Server *RIDs*."

msgid ""
"It is not advised to control RIDs from objects that already have a node "
"associated. Instead, server functions should always be used for creating and "
"controlling new ones and interacting with the existing ones."
msgstr ""

msgid "Creating a sprite"
msgstr "Ein Sprite erstellen"

msgid ""
"This is a simple example of how to create a sprite from code and move it "
"using the low-level :ref:`CanvasItem <class_CanvasItem>` API."
msgstr ""

msgid ""
"The Canvas Item API in the server allows you to add draw primitives to it. "
"Once added, they can't be modified. The Item needs to be cleared and the "
"primitives re-added (this is not the case for setting the transform, which "
"can be done as many times as desired)."
msgstr ""

msgid "Primitives are cleared this way:"
msgstr "Primitive werden folgendermaßen gelöscht:"

msgid "Instantiating a Mesh into 3D space"
msgstr "Instanziieren eines Mesh in den 3D-Raum"

msgid ""
"The 3D APIs are different from the 2D ones, so the instantiation API must be "
"used."
msgstr ""

msgid "Creating a 2D RigidBody and moving a sprite with it"
msgstr "Erstellen eines 2D-RigidBody und Verschieben eines Sprites damit"

msgid ""
"This creates a :ref:`RigidBody2D <class_RigidBody2D>` using the :ref:"
"`Physics2DServer <class_Physics2DServer>` API, and moves a :ref:`CanvasItem "
"<class_CanvasItem>` when the body moves."
msgstr ""

msgid ""
"The 3D version should be very similar, as 2D and 3D physics servers are "
"identical (using :ref:`RigidBody <class_RigidBody>` and :ref:`PhysicsServer "
"<class_PhysicsServer>` respectively)."
msgstr ""

msgid "Getting data from the servers"
msgstr "Daten bekommen von den Servern"

msgid ""
"Try to **never** request any information from ``VisualServer``, "
"``PhysicsServer`` or ``Physics2DServer`` by calling functions unless you "
"know what you are doing. These servers will often run asynchronously for "
"performance and calling any function that returns a value will stall them "
"and force them to process anything pending until the function is actually "
"called. This will severely decrease performance if you call them every frame "
"(and it won't be obvious why)."
msgstr ""

msgid ""
"Because of this, most APIs in such servers are designed so it's not even "
"possible to request information back, until it's actual data that can be "
"saved."
msgstr ""
"Aus diesem Grund sind die meisten APIs in solchen Servern so konzipiert, "
"dass es nicht einmal möglich ist, Informationen zurückzufordern, bis die "
"tatsächlichen Daten gespeichert werden können."

msgid "Translation status"
msgstr "Übersetzungsstatus"
