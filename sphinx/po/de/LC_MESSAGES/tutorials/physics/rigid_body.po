# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-09 13:27+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/physics/rigid_body.rst:4
msgid "RigidBody"
msgstr "RigidBody (Starre Körper)"

#: ../../docs/tutorials/physics/rigid_body.rst:7
msgid "What is a rigid body?"
msgstr "Was ist ein starrer Körper?"

#: ../../docs/tutorials/physics/rigid_body.rst:9
msgid ""
"A rigid body is one that is directly controlled by the physics engine in "
"order to simulate the behavior of physical objects. In order to define the "
"shape of the body, it must have one or more :ref:`Shape <class_Shape>` "
"objects assigned. Note that setting the position of these shapes will affect "
"the body's center of mass."
msgstr ""
"Ein starrer Körper wird direkt von der Physik-Engine gesteuert, um das "
"Verhalten physikalischer Objekte zu simulieren. Um die Form des Körpers zu "
"definieren, müssen ihm eines oder mehrere :ref:`Shape <class_Shape>` Objekte "
"zugewiesen sein. Beachten Sie, dass das Festlegen der Position dieser Formen "
"den Schwerpunkt des Körpers beeinflusst."

#: ../../docs/tutorials/physics/rigid_body.rst:13
msgid "How to control a rigid body"
msgstr "Wie man einen starren Körper kontrolliert"

#: ../../docs/tutorials/physics/rigid_body.rst:15
msgid ""
"A rigid body's behavior can be altered by setting its properties, such as "
"friction, mass, bounce, etc. These properties can be set in the Inspector or "
"via code. See :ref:`RigidBody <class_RigidBody>` for the full list of "
"properties and their effects."
msgstr ""
"Das Verhalten eines starren Körpers kann durch Festlegen seiner "
"Eigenschaften wie Reibung, Masse, Sprungkraft usw. geändert werden. Diese "
"Eigenschaften können im Inspektor oder über den Code festgelegt werden. Die "
"vollständige Liste der Eigenschaften und ihrer Auswirkungen finden Sie "
"unter :ref:`RigidBody <class_RigidBody>`."

#: ../../docs/tutorials/physics/rigid_body.rst:17
msgid ""
"There are several ways to control a rigid body's movement, depending on your "
"desired application."
msgstr ""
"Abhängig von Ihrer gewünschten Anwendung gibt es verschiedene Möglichkeiten, "
"die Bewegung eines starren Körpers zu steuern."

#: ../../docs/tutorials/physics/rigid_body.rst:19
msgid ""
"If you only need to place a rigid body once, for example to set its initial "
"location, you can use the methods provided by the :ref:`Spatial "
"<class_Spatial>` node, such as ``set_global_transform()`` or ``look_at()``. "
"However, these methods cannot be called every frame or the physics engine "
"will not be able to correctly simulate the body's state. As an example, "
"consider a rigid body that you want to rotate so that it points towards "
"another object. A common mistake when implementing this kind of behavior is "
"to use ``look_at()`` every frame, which breaks the physics simulation. "
"Below, we'll demonstrate how to implement this correctly."
msgstr ""
"Wenn Sie einen starren Körper nur einmal platzieren müssen, um "
"beispielsweise seine ursprüngliche Position festzulegen, können Sie die vom :"
"ref:`Spatial <class_Spatial>` Node bereitgestellten Methoden verwenden, z.B. "
"``set_global_transform ()`` oder ``look_at ()``. Diese Methoden können "
"jedoch nicht in jedem Frame aufgerufen werden, oder die Physik-Engine kann "
"den Zustand des Körpers nicht korrekt simulieren. Stellen Sie sich als "
"Beispiel einen starren Körper vor den Sie drehen möchten, damit er auf ein "
"anderes Objekt zeigt. Ein häufiger Fehler bei der Implementierung dieser Art "
"von Verhalten ist die Verwendung von ``look_at()`` für jeden Frame, wodurch "
"die Physiksimulation unterbrochen wird. Im Folgenden wird gezeigt, wie dies "
"korrekt implementiert wird."

#: ../../docs/tutorials/physics/rigid_body.rst:22
msgid ""
"The fact that you can't use ``set_global_transform()`` or ``look_at()`` "
"methods doesn't mean that you can't have full control of a rigid body. "
"Instead, you can control it by using the ``_integrate_forces()`` callback. "
"In this method, you can add *forces*, apply *impulses*, or set the "
"*velocity* in order to achieve any movement you desire."
msgstr ""
"Die Tatsache, dass Sie die Methoden ``set_global_transform()`` oder "
"``look_at()`` nicht verwenden können, bedeutet nicht, dass Sie nicht die "
"vollständige Kontrolle über einen starren Körper haben können, stattdessen "
"können Sie hierfür ``_integrate_forces ()`` nutzen. Bei dieser Methode "
"können Sie *Kräfte* hinzufügen, *Impulse* anwenden oder die "
"*Geschwindigkeit* einstellen, um jede gewünschte Bewegung zu erzielen."

#: ../../docs/tutorials/physics/rigid_body.rst:25
msgid "The \"look at\" method"
msgstr "Die \"look at\" -Methode"

#: ../../docs/tutorials/physics/rigid_body.rst:27
msgid ""
"As described above, using the Spatial node's ``look_at()`` method can't be "
"used each frame to follow a target. Here is a custom ``look_at()`` method "
"that will work reliably with rigid bodies:"
msgstr ""
"Wie oben beschrieben, kann die Verwendung der ``look_at () ``-Methode des "
"Spatial Nodes nicht für jeden Frame verwendet werden, um einem Ziel zu "
"folgen. Hier ist eine benutzerdefinierte ``look_at () ``-Methode, die "
"zuverlässig mit starren Körpern funktioniert:"

#: ../../docs/tutorials/physics/rigid_body.rst:69
msgid ""
"This method uses the rigid body's ``set_angular_velocity()`` method to "
"rotate the body. It first calculates the difference between the current and "
"desired angle and then adds the velocity needed to rotate by that amount in "
"one frame's time."
msgstr ""
"Diese Methode verwendet die Methode ``set_angular_velocity()`` des starren "
"Körpers, um ihn zu drehen. Es berechnet zuerst die Differenz zwischen dem "
"aktuellen und dem gewünschten Winkel und addiert dann die Geschwindigkeit, "
"die erforderlich ist, um sich in der Zeit eines Frames um diesen Betrag zu "
"drehen."

#: ../../docs/tutorials/physics/rigid_body.rst:71
msgid ""
"This script will not work with rigid bodies in *character mode* because "
"then, the body's rotation is locked. In that case, you would have to rotate "
"the attached mesh node instead using the standard Spatial methods."
msgstr ""
"Dieses Skript funktioniert nicht mit starren Körpern im *Character Modus*, "
"da dann die Drehung des Körpers gesperrt ist. In diesem Fall müssten Sie den "
"angehängten Mesh-Node stattdessen mit den Standardmethoden Spatial drehen."
