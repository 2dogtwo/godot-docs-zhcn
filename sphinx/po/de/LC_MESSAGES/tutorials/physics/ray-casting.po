# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 18:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Ray-casting"
msgstr "Raycasting"

msgid "Introduction"
msgstr "Einführung"

msgid ""
"One of the most common tasks in game development is casting a ray (or custom "
"shaped object) and checking what it hits. This enables complex behaviors, "
"AI, etc. to take place. This tutorial will explain how to do this in 2D and "
"3D."
msgstr ""
"Eine der häufigsten Aufgaben in der Spieleentwicklung besteht darin, einen "
"(Licht-) Strahl (oder ein benutzerdefiniertes Objekt) zu werfen und zu "
"überprüfen, was darauf trifft. Dies ermöglicht komplexe Verhaltensweisen, KI "
"usw. In dieser Anleitung wird erklärt, wie dies in 2D und 3D funktioniert."

#, fuzzy
msgid ""
"Godot stores all the low level game information in servers, while the scene "
"is only a frontend. As such, ray casting is generally a lower-level task. "
"For simple raycasts, nodes like :ref:`RayCast3D <class_RayCast3D>` and :ref:"
"`RayCast2D <class_RayCast2D>` will work, as they return every frame what the "
"result of a raycast is."
msgstr ""
"Godot speichert alle Low-Level-Spielinformationen auf Servern, während die "
"Szene nur ein Frontend ist. Daher ist das Raycasting (Strahlenwerfen) im "
"Allgemeinen eine untergeordnete Aufgabe. Bei einfachen Raycasts "
"funktionieren Nodes wie :ref:`RayCast <class_RayCast>` und :ref:`RayCast2D "
"<class_RayCast2D>`, da sie jedem Frame das Ergebnis eines Raycasts "
"zurückgeben."

msgid ""
"Many times, though, ray-casting needs to be a more interactive process so a "
"way to do this by code must exist."
msgstr ""
"In vielen Fällen muss Raycasting jedoch ein interaktiverer Prozess sein, "
"sodass eine Möglichkeit vorhanden sein muss, dies per Code zu tun."

msgid "Space"
msgstr "Leerzeichen"

#, fuzzy
msgid ""
"In the physics world, Godot stores all the low level collision and physics "
"information in a *space*. The current 2d space (for 2D Physics) can be "
"obtained by accessing :ref:`CanvasItem.get_world_2d().space "
"<class_CanvasItem_method_get_world_2d>`. For 3D, it's :ref:`Node3D."
"get_world_3d().space <class_Node3D_method_get_world_3d>`."
msgstr ""
"In der Physikwelt speichert Godot alle Kollisions- und Physikinformationen "
"auf niedriger Ebene in einem *Raum*. Der aktuelle 2D-Raum (für 2D-Physik) "
"kann durch Zugriff auf Folgendes abgerufen werden :ref:`CanvasItem."
"get_world_2d().space <class_CanvasItem_method_get_world_2d>`. Für 3D ist es :"
"ref:`Spatial.get_world().space <class_Spatial_method_get_world>`."

msgid ""
"The resulting space :ref:`RID <class_RID>` can be used in :ref:"
"`PhysicsServer3D <class_PhysicsServer3D>` and :ref:`PhysicsServer2D "
"<class_PhysicsServer2D>` respectively for 3D and 2D."
msgstr ""

msgid "Accessing space"
msgstr "Zugriff auf den Raum"

msgid ""
"Godot physics runs by default in the same thread as game logic, but may be "
"set to run on a separate thread to work more efficiently. Due to this, the "
"only time accessing space is safe is during the :ref:`Node."
"_physics_process() <class_Node_method__physics_process>` callback. Accessing "
"it from outside this function may result in an error due to space being "
"*locked*."
msgstr ""

#, fuzzy
msgid ""
"To perform queries into physics space, the :ref:`PhysicsDirectSpaceState2D "
"<class_PhysicsDirectSpaceState2D>` and :ref:`PhysicsDirectSpaceState3D "
"<class_PhysicsDirectSpaceState3D>` must be used."
msgstr ""
"Um Abfragen im physikalischen Raum durchzuführen, müssen :ref:"
"`Physics2DDirectSpaceState <class_Physics2DDirectSpaceState>` und :ref:"
"`PhysicsDirectSpaceState <class_PhysicsDirectSpaceState>` verwendet werden."

msgid "Use the following code in 2D:"
msgstr "Verwenden Sie den folgenden Code in 2D:"

msgid "Or more directly:"
msgstr "Oder direkter:"

msgid "And in 3D:"
msgstr "Und in 3D:"

msgid "Raycast query"
msgstr "Raycast-Abfrage"

#, fuzzy
msgid ""
"For performing a 2D raycast query, the method :ref:"
"`PhysicsDirectSpaceState2D.intersect_ray() "
"<class_PhysicsDirectSpaceState2D_method_intersect_ray>` may be used. For "
"example:"
msgstr ""
"Um eine 2D-Raycast-Abfrage durchzuführen, kann die Methode :ref:"
"`Physics2DDirectSpaceState.intersect_ray() "
"<class_Physics2DDirectSpaceState_method_intersect_ray>` verwendet werden. "
"Zum Beispiel:"

msgid ""
"The result is a dictionary. If the ray didn't hit anything, the dictionary "
"will be empty. If it did hit something, it will contain collision "
"information:"
msgstr ""
"Das Ergebnis ist ein Verzeichnis. Wenn der Strahl auf nichts trifft, wird "
"das Verzeichnis leer sein. Wenn er etwas trifft, wird das Verzeichnis die "
"Kollisionsinformationen enthalten:"

msgid ""
"The ``result`` dictionary when a collision occurs contains the following "
"data:"
msgstr ""
"Das ``Ergebnis``-Dictionary enthält bei einer Kollision die folgenden Daten:"

msgid ""
"The data is similar in 3D space, using Vector3 coordinates. Note that to "
"enable collisions with Area3D, the boolean parameter ``collide_with_areas`` "
"must be set to ``true``."
msgstr ""

msgid "Collision exceptions"
msgstr "Kollisionsausnahmen"

msgid ""
"A common use case for ray casting is to enable a character to gather data "
"about the world around it. One problem with this is that the same character "
"has a collider, so the ray will only detect its parent's collider, as shown "
"in the following image:"
msgstr ""
"Ein häufiger Anwendungsfall für das Raycasting besteht darin, einem "
"Charakter das Sammeln von Daten über die Welt um ihn herum zu ermöglichen. "
"Ein Problem dabei ist, dass dasselbe Zeichen einen Kollider hat, sodass der "
"Strahl nur den Kollider seines Elternteils erkennt, wie in der folgenden "
"Abbildung gezeigt:"

msgid ""
"To avoid self-intersection, the ``intersect_ray()`` parameters object can "
"take an array of exceptions via its ``exclude`` property. This is an example "
"of how to use it from a CharacterBody2D or any other collision object node:"
msgstr ""

msgid "The exceptions array can contain objects or RIDs."
msgstr "Das Ausnahme-Array kann Objekte oder RIDs enthalten."

msgid "Collision Mask"
msgstr "Kollisionsmaske"

msgid ""
"While the exceptions method works fine for excluding the parent body, it "
"becomes very inconvenient if you need a large and/or dynamic list of "
"exceptions. In this case, it is much more efficient to use the collision "
"layer/mask system."
msgstr ""
"Während die Ausnahmemethode zum Ausschließen des übergeordneten Körpers gut "
"funktioniert, ist es sehr unpraktisch, wenn Sie eine große oder dynamische "
"Liste von Ausnahmen benötigen. In diesem Fall ist es viel effizienter, das "
"Kollisionsschichten- bzw. Maskensystem zu verwenden."

msgid ""
"The ``intersect_ray()`` parameters object can also be supplied a collision "
"mask. For example, to use the same mask as the parent body, use the "
"``collision_mask`` member variable. The array of exceptions can be supplied "
"as the last argument as well:"
msgstr ""

msgid ""
"See :ref:`doc_physics_introduction_collision_layer_code_example` for details "
"on how to set the collision mask."
msgstr ""
"Siehe :ref:`doc_physics_introduction_collision_layer_code_example` für "
"Details zum Festlegen der Kollisionsmaske."

msgid "3D ray casting from screen"
msgstr "3D-Raycasting vom Bildschirm"

msgid ""
"Casting a ray from screen to 3D physics space is useful for object picking. "
"There is not much need to do this because :ref:`CollisionObject3D "
"<class_CollisionObject3D>` has an \"input_event\" signal that will let you "
"know when it was clicked, but in case there is any desire to do it manually, "
"here's how."
msgstr ""

msgid ""
"To cast a ray from the screen, you need a :ref:`Camera3D <class_Camera3D>` "
"node. A ``Camera3D`` can be in two projection modes: perspective and "
"orthogonal. Because of this, both the ray origin and direction must be "
"obtained. This is because ``origin`` changes in orthogonal mode, while "
"``normal`` changes in perspective mode:"
msgstr ""

msgid "To obtain it using a camera, the following code can be used:"
msgstr ""
"Um sie mit einer Kamera zu erhalten, kann der folgende Code verwendet werden:"

msgid ""
"Remember that during ``_input()``, the space may be locked, so in practice "
"this query should be run in ``_physics_process()``."
msgstr ""

msgid "Translation status"
msgstr "Übersetzungsstatus"
