# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-07 14:35+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:4
msgid "Multiple resolutions"
msgstr "Mehrere Auflösungen"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:7
msgid "The problem of multiple resolutions"
msgstr "Das Problem mit mehreren Auflösungen"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:9
msgid ""
"Developers often have trouble understanding how to best support multiple "
"resolutions in their games. For desktop and console games, this is more or "
"less straightforward, as most screen aspect ratios are 16:9 and resolutions "
"are standard (720p, 1080p, 1440p, 4K, …)."
msgstr ""
"Entwickler haben oft Probleme zu verstehen, wie sie mehrere Auflösungen in "
"ihren Spielen am besten unterstützen können. Bei Desktop- und "
"Konsolenspielen ist dies mehr oder weniger einfach, da die meisten "
"Seitenverhältnisse auf dem Bildschirm 16: 9 betragen und die Auflösungen "
"Standard sind (720p, 1080p, 1440p, 4K,…)."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:14
msgid ""
"For mobile games, at first, it was easy. For many years, the iPhone and iPad "
"used the same resolution. When *Retina* was implemented, they just doubled "
"the pixel density; most developers had to supply assets in default and "
"double resolutions."
msgstr ""
"Für Handyspiele war es zunächst einfach. Das iPhone und das iPad verwendeten "
"viele Jahre lang dieselbe Auflösung. Bei der Implementierung von *Retina* "
"wurde die Pixeldichte nur verdoppelt. Die meisten Entwickler mussten nun "
"Inhalte in Standard und doppelter Auflösung bereitstellen."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:19
msgid ""
"Nowadays, this is no longer the case, as there are plenty of different "
"screen sizes, densities, and aspect ratios. Non-conventional sizes are also "
"becoming increasingly popular, such as ultrawide displays."
msgstr ""
"Heutzutage ist dies nicht mehr der Fall, da es viele verschiedene "
"Bildschirmgrößen, Dichten und Seitenverhältnisse gibt. Auch unkonventionelle "
"Größen wie Ultrawide-Displays werden immer beliebter."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:23
msgid ""
"For 3D games, there is not much of a need to support multiple resolutions "
"(from the aesthetic point of view). The 3D geometry will just fill the "
"screen based on the field of view, disregarding the aspect ratio. The main "
"reason one may want to support this, in this case, is for *performance* "
"reasons (running in lower resolution to increase frames per second)."
msgstr ""
"Bei 3D Spielen besteht keine große Notwendigkeit, mehrere Auflösungen zu "
"unterstützen (aus ästhetischer Sicht). Die 3D-Geometrie füllt den Bildschirm "
"nur basierend auf dem Sichtfeld aus, ohne das Seitenverhältnis zu "
"berücksichtigen. Der Hauptgrund, warum dies unterstützt werden soll, ist in "
"diesem Fall aus *Leistungsgründen* (Ausführen mit niedrigerer Auflösung, um "
"die Anzahl der Bilder pro Sekunde zu erhöhen)."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:29
msgid ""
"For 2D and game UIs, this is a different matter, as art needs to be created "
"using specific pixel sizes in software such as Photoshop, GIMP or Krita."
msgstr ""
"Für 2D und Spiel-Benutzeroberflächen ist dies eine andere Sache, da Grafiken "
"mit bestimmten Pixelgrößen in Software wie Photoshop, GIMP oder Krita "
"erstellt werden muss."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:32
msgid ""
"Since layouts, aspect ratios, resolutions, and pixel densities can change so "
"much, it is no longer possible to design UIs for every specific screen. "
"Another method must be used."
msgstr ""
"Da sich Layouts, Seitenverhältnisse, Auflösungen und Pixeldichten so stark "
"ändern können, ist es nicht mehr möglich, Benutzeroberflächen für jeden "
"bestimmten Bildschirm zu entwerfen. Eine andere Methode muss verwendet "
"werden."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:37
msgid "One size fits all"
msgstr "Eine Größe für alle"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:39
msgid ""
"The most common approach is to use a single *base* resolution and then fit "
"it to everything else. This resolution is how most players are expected to "
"play the game (given their hardware). For mobile, Google has useful `stats "
"<https://developer.android.com/about/dashboards>`_ online, and for desktop, "
"Steam `also does <https://store.steampowered.com/hwsurvey/>`_."
msgstr ""
"Der gebräuchlichste Ansatz besteht darin, eine einzelne *Basis* -Auflösung "
"zu verwenden und diese dann an alles andere anzupassen. Mit dieser Auflösung "
"wird von den meisten Spielern erwartet, dass sie das Spiel spielen (aufgrund "
"ihrer Hardware). Für Handys hat Google nützliche `Statistiken <https://"
"developer.android.com/about/dashboards>`_ online, genauso bietet Steam dies "
"auch für Desktops <https://store.steampowered.com/hwsurvey/>_."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:45
msgid ""
"As an example, Steam shows that the most common *primary display resolution* "
"is 1920×1080, so a sensible approach is to develop a game for this "
"resolution, then handle scaling for different sizes and aspect ratios."
msgstr ""
"Steam zeigt beispielsweise, dass die häufigste *primäre Anzeigeauflösung* "
"1920 × 1080 ist. Daher ist es sinnvoll, ein Spiel für diese Auflösung zu "
"entwickeln und dann die Skalierung für verschiedene Größen und "
"Seitenverhältnisse durchzuführen."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:49
msgid "Godot provides several useful tools to do this easily."
msgstr ""
"Godot bietet verschiedene nützliche Werkzeuge, um dies einfach zu erledigen."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:52
msgid "Base size"
msgstr "Basisgröße"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:54
msgid ""
"A base size for the window can be specified in the Project Settings under "
"**Display → Window**."
msgstr ""
"Eine Basisgröße für das Fenster kann in den Projekteinstellungen unter "
"**Anzeige → Fenster** angegeben werden."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:59
msgid ""
"However, what it does is not completely obvious; the engine will *not* "
"attempt to switch the monitor to this resolution. Rather, think of this "
"setting as the \"design size\", i.e. the size of the area that you work with "
"in the editor. This setting corresponds directly to the size of the blue "
"rectangle in the 2D editor."
msgstr ""
"Was es tut, ist jedoch nicht ganz offensichtlich; Die Engine wird *nicht* "
"versuchen, den Monitor auf diese Auflösung umzuschalten. Stellen Sie sich "
"diese Einstellung vielmehr als \"Entwurfsgröße\" vor, d.h. als Größe des "
"Bereichs, mit dem Sie im Editor arbeiten. Diese Einstellung entspricht "
"direkt der Größe des blauen Rechtecks im 2D-Editor."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:65
msgid ""
"There is often a need to support devices with screen and window sizes that "
"are different from this base size. Godot offers many ways to control how the "
"viewport will be resized and stretched to different screen sizes."
msgstr ""
"Es besteht häufig die Notwendigkeit, Geräte mit Bildschirm- und "
"Fenstergrößen zu unterstützen, die sich von dieser Basisgröße unterscheiden. "
"Godot bietet viele Möglichkeiten wie die Größe des Ansichtsfensters geändert "
"und auf verschiedene Bildschirmgrößen ausgedehnt werden kann."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:72
msgid ""
"Godot follows a modern approach to multiple resolutions. The engine will "
"never change the monitor's resolution on its own. While changing the "
"monitor's resolution is the most efficient approach, it's also the least "
"reliable approach as it can leave the monitor stuck on a low resolution if "
"the game crashes. This is especially common on macOS or Linux which don't "
"handle resolution changes as well as Windows."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:79
msgid ""
"Changing the monitor's resolution also removes any control from the game "
"developer over filtering and aspect ratio stretching, which can be important "
"to ensure correct display for pixel art games."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:83
msgid ""
"On top of that, changing the monitor's resolution makes alt-tabbing in and "
"out of a game much slower since the monitor has to change resolutions every "
"time this is done."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:88
msgid "Resizing"
msgstr "Größenänderung"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:90
msgid ""
"There are several types of devices, with several types of screens, which in "
"turn have different pixel density and resolutions. Handling all of them can "
"be a lot of work, so Godot tries to make the developer's life a little "
"easier. The :ref:`Viewport <class_Viewport>` node has several functions to "
"handle resizing, and the root node of the scene tree is always a viewport "
"(scenes loaded are instanced as a child of it, and it can always be accessed "
"by calling ``get_tree().get_root()`` or ``get_node(\"/root\")``)."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:99
msgid ""
"In any case, while changing the root Viewport params is probably the most "
"flexible way to deal with the problem, it can be a lot of work, code and "
"guessing, so Godot provides a simple set of parameters in the project "
"settings to handle multiple resolutions."
msgstr ""
"In jedem Fall ist das Ändern der Wurzel-Viewport-Parameter wahrscheinlich "
"die flexibelste Methode um das Problem zu lösen. Es kann jedoch viel Arbeit, "
"Code und Raten bedeuten. Daher bietet Godot in den Projekteinstellungen "
"einen einfachen Parametersatz, um mehrere Auflösungen zu verarbeiten ."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:105
msgid "Stretch settings"
msgstr "Dehnungs-Einstellungen"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:107
msgid ""
"Stretch settings are located in the project settings and provide several "
"options:"
msgstr ""
"Die Dehnungseinstellungen befinden sich in den Projekteinstellungen und "
"bieten verschiedene Optionen:"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:112
msgid "Stretch Mode"
msgstr "Dehnungsmodus"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:114
msgid ""
"The **Stretch Mode** setting defines how the base size is stretched to fit "
"the resolution of the window or screen."
msgstr ""
"Die Einstellung **Dehnungsmodus** definiert, wie die Basisgröße gedehnt "
"wird, um der Auflösung des Fensters oder Bildschirms zu entsprechen."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:119
msgid ""
"The animations below use a \"base size\" of just 16×9 pixels to demonstrate "
"the effect of different stretch modes. A single sprite, also 16×9 pixels in "
"size, covers the entire viewport, and a diagonal :ref:`Line2D "
"<class_Line2D>` is added on top of it:"
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:129
msgid ""
"**Stretch Mode = Disabled** (default): No stretching happens. One unit in "
"the scene corresponds to one pixel on the screen. In this mode, the "
"**Stretch Aspect** setting has no effect."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:133
msgid ""
"This is a good option if you want full control over every screen pixel, and "
"is probably the best option for 3D games."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:138
msgid ""
"**Stretch Mode = 2D**: In this mode, the size specified in display/width and "
"display/height in the project settings is stretched to cover the whole "
"screen (taking the **Stretch Aspect** setting into account). This means that "
"everything is rendered directly at the target resolution. 3D is largely "
"unaffected, while in 2D, there is no longer a 1:1 correspondence between "
"sprite pixels and screen pixels, which may result in scaling artifacts."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:146
msgid ""
"This is a good option if your 2D artwork has a sufficiently high resolution "
"and does not require pixel-perfect rendering. Consider enabling texture "
"filtering and mipmapping on your 2D textures and fonts."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:153
msgid ""
"**Stretch Mode = Viewport**: Viewport scaling means that the size of the "
"root :ref:`Viewport <class_Viewport>` is set precisely to the base size "
"specified in the Project Settings' **Display** section. The scene is "
"rendered to this viewport first. Finally, this viewport is scaled to fit the "
"screen (taking the **Stretch Aspect** setting into account)."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:160
msgid ""
"This mode is useful when working with pixel-precise games, or for the sake "
"of rendering to a lower resolution to improve performance."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:166
msgid "Stretch Aspect"
msgstr "Dehnungsaspekt"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:168
msgid ""
"The second setting is the stretch aspect. Note that this only takes effect "
"if **Stretch Mode** is set to something other than **Disabled**."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:171
msgid ""
"In the animations below, you will notice gray and black areas. The black "
"areas are added by the engine and cannot be drawn into. The gray areas are "
"part of your scene, and can be drawn to. The gray areas correspond to the "
"region outside the blue frame you see in the 2D editor."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:176
msgid ""
"**Stretch Aspect = Ignore**: Ignore the aspect ratio when stretching the "
"screen. This means that the original resolution will be stretched to exactly "
"fill the screen, even if it's wider or narrower. This may result in "
"nonuniform stretching: things looking wider or taller than designed."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:184
msgid ""
"**Stretch Aspect = Keep**: Keep aspect ratio when stretching the screen. "
"This means that the viewport retains its original size regardless of the "
"screen resolution, and black bars will be added to the top/bottom of the "
"screen (\"letterboxing\") or the sides (\"pillarboxing\")."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:190
msgid ""
"This is a good option if you know the aspect ratio of your target devices in "
"advance, or if you don't want to handle different aspect ratios."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:196
msgid ""
"**Stretch Aspect = Keep Width**: Keep aspect ratio when stretching the "
"screen. If the screen is wider than the base size, black bars are added at "
"the left and right (pillarboxing). But if the screen is taller than the base "
"resolution, the viewport will be grown in the vertical direction (and more "
"content will be visible to the bottom). You can also think of this as "
"\"Expand Vertically\"."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:203
msgid ""
"This is usually the best option for creating GUIs or HUDs that scale, so "
"some controls can be anchored to the bottom (:ref:`doc_size_and_anchors`)."
msgstr ""
"Dies ist normalerweise die beste Option zum Erstellen von skalierbaren GUIs "
"oder HUDs, sodass einige Steuerelemente unten verankert werden können (:ref:"
"`doc_size_and_anchors`)."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:209
msgid ""
"**Stretch Aspect = Keep Height**: Keep aspect ratio when stretching the "
"screen. If the screen is taller than the base size, black bars are added at "
"the top and bottom (letterboxing). But if the screen is wider than the base "
"resolution, the viewport will be grown in the horizontal direction (and more "
"content will be visible to the right). You can also think of this as "
"\"Expand Horizontally\"."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:216
msgid ""
"This is usually the best option for 2D games that scroll horizontally (like "
"runners or platformers)."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:221
msgid ""
"**Stretch Aspect = Expand**: Keep aspect ratio when stretching the screen, "
"but keep neither the base width nor height. Depending on the screen aspect "
"ratio, the viewport will either be larger in the horizontal direction (if "
"the screen is wider than the base size) or in the vertical direction (if the "
"screen is taller than the original size)."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:231
msgid "Stretch Shrink"
msgstr "Dehnen Schrumpfen"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:233
msgid ""
"The **Shrink** setting allows you to add an extra scaling factor on top of "
"what the **Stretch** options above already provide. The default value of 1 "
"means that no scaling occurs."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:237
msgid ""
"If, for example, you set **Shrink** to 4 and leave **Stretch Mode** on "
"**Disabled**, each unit in your scene will correspond to 4×4 pixels on the "
"screen."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:241
msgid ""
"If **Stretch Mode** is set to something other than **Disabled**, the size of "
"the root viewport is scaled down by the **Shrink** factor, and pixels in the "
"output are scaled up by the same amount. This is rarely useful for 2D games, "
"but can be used to increase performance in 3D games by rendering them at a "
"lower resolution."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:248
msgid "From scripts"
msgstr "aus Skripten"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:250
msgid ""
"To configure stretching at runtime from a script, use the ``get_tree()."
"set_screen_stretch()`` method (see :ref:`SceneTree.set_screen_stretch() "
"<class_SceneTree_method_set_screen_stretch>`)."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:255
msgid "Reducing aliasing on downsampling"
msgstr "Aliasing beim Downsampling reduzieren"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:257
msgid ""
"If the game has a very high base resolution (e.g. 3840×2160), aliasing might "
"appear when downsampling to something considerably lower like 1280×720. "
"Aliasing can be made less visible by shrinking all images by a factor of 2 "
"upon loading. This can be done by calling the method below before the game "
"data is loaded::"
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:265
msgid ""
"Alternatively, you can also enable mipmaps on all your 2D textures. However, "
"enabling mipmaps will increase memory usage which may be problematic on low-"
"end mobile devices."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:270
msgid "Handling aspect ratios"
msgstr "Umgang mit Seitenverhältnissen"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:272
msgid ""
"Once scaling for different resolutions is accounted for, make sure that your "
"*user interface* also scales for different aspect ratios. This can be done "
"using :ref:`anchors <doc_size_and_anchors>` and/or :ref:`containers "
"<doc_gui_containers>`."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:278
msgid "Field of view scaling"
msgstr "Skalierung des Sichtfelds"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:280
msgid ""
"The 3D Camera node's **Keep Aspect** property defaults to the **Keep "
"Height** scaling mode (also called *Hor+*). This is usually the best value "
"for desktop games and mobile games in landscape mode, as widescreen displays "
"will automatically use a wider field of view."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:285
msgid ""
"However, if your 3D game is intended to be played in portrait mode, it may "
"make more sense to use **Keep Width** instead (also called *Vert-*). This "
"way, smartphones with an aspect ratio taller than 16:9 (e.g. 19:9) will use "
"a *taller* field of view, which is more logical here."
msgstr ""

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:291
msgid "Scaling 2D and 3D elements differently using Viewports"
msgstr "Skalieren von 2D und 3D Elementen in Ansichtsfenstern"

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:293
msgid ""
"Using multiple Viewport nodes, you can have different scales for various "
"elements. For instance, you can use this to render the 3D world at a low "
"resolution while keeping 2D elements at the native resolution. This can "
"improve performance significantly while keeping the HUD and other 2D "
"elements crisp."
msgstr ""
"Wenn Sie mehrere Ansichtsfenster-Nodes verwenden, können Sie für "
"verschiedene Elemente unterschiedliche Maßstäbe festlegen. Sie können dies "
"beispielsweise verwenden, um die 3D Welt mit einer niedrigen Auflösung zu "
"rendern und gleichzeitig die native Auflösung von 2D Elementen "
"beizubehalten. Dies kann die Leistung erheblich verbessern, während das HUD "
"und andere 2D Elemente scharf bleiben."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:298
msgid ""
"This is done by using the root Viewport node only for 2D elements, then "
"creating a Viewport node to display the 3D world and displaying it using a "
"ViewportContainer or TextureRect node. There will effectively be two "
"viewports in the final project. One upside of using TextureRect over "
"ViewportContainer is that it allows enable linear filtering. This makes "
"scaled 3D viewports look better in many cases."
msgstr ""
"Dazu wird der Wurzel-Viewport-Node nur für 2D-Elemente verwendet. "
"Anschließend wird ein Viewport-Node zum Anzeigen der 3D Welt erstellt und "
"mithilfe eines ViewportContainer oder TextureRect-Nodes angezeigt. Das "
"endgültige Projekt wird effektiv zwei Viewports enthalten. Ein Vorteil der "
"Verwendung von TextureRect über ViewportContainer besteht darin, dass die "
"lineare Filterung aktiviert werden kann. Dadurch sehen skalierte 3D "
"Ansichtsfenster in vielen Fällen besser aus."

#: ../../docs/tutorials/viewports/multiple_resolutions.rst:305
msgid ""
"See the `3D viewport scaling demo <https://github.com/godotengine/godot-demo-"
"projects/tree/master/viewport/3d_scaling>`__ for examples."
msgstr ""
"Beispiele finden Sie unter `3D-Ansichtsfenstern Skalierungs-Demo <https://"
"github.com/godotengine/godot-demo-projects/tree/master/"
"viewport/3d_scaling>`__."
