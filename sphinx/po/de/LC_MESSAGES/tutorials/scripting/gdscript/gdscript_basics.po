# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-21 12:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "GDScript reference"
msgstr "Dateneinstellungen"

#, fuzzy
msgid ""
":ref:`GDScript<doc_gdscript>` is a high-level, `object-oriented <https://en."
"wikipedia.org/wiki/Object-oriented_programming>`_, `imperative <https://en."
"wikipedia.org/wiki/Imperative_programming>`_, and `gradually typed <https://"
"en.wikipedia.org/wiki/Gradual_typing>`_ programming language built for "
"Godot. It uses an indentation-based syntax similar to languages like `Python "
"<https://en.wikipedia.org/wiki/Python_%28programming_language%29>`_. Its "
"goal is to be optimized for and tightly integrated with Godot Engine, "
"allowing great flexibility for content creation and integration."
msgstr ""
"*GDScript* ist eine high-level, dynamisch typisierte Programmiersprache zum "
"Erstellen von Inhalten. Es verwendet eine ähnliche Syntax wie `Python "
"<https://de.wikipedia.org/wiki/Python_%28Programmiersprache%29>`_ (Blöcke "
"basieren auf Einrückung und viele Schlüsselwörter sind ähnlich). Es zielt "
"auf eine Optimierung und enge Integration mit der Godot Engine ab, um große "
"Flexibilität bei der Erstellung von Inhalten und deren Integration zu "
"ermöglichen."

msgid "GDScript is entirely independent from Python and is not based on it."
msgstr ""

msgid "History"
msgstr "Verlauf"

msgid ""
"Documentation about GDScript's history has been moved to the :ref:"
"`Frequently Asked Questions <doc_faq_what_is_gdscript>`."
msgstr ""
"Ältere Artikel über GDScript wurden nach :ref:`Frequently Asked Questions "
"<doc_faq_what_is_gdscript>` verschoben."

msgid "Example of GDScript"
msgstr "Beispiel von GDScript"

#, fuzzy
msgid ""
"Some people can learn better by taking a look at the syntax, so here's an "
"example of how GDScript looks."
msgstr ""
"Manche Leute lernen besser, indem sie einfach die Syntax betrachten, deshalb "
"hier ein Beispiel wie GDScript aussieht."

msgid ""
"If you have previous experience with statically typed languages such as C, C+"
"+, or C# but never used a dynamically typed one before, it is advised you "
"read this tutorial: :ref:`doc_gdscript_more_efficiently`."
msgstr ""
"Wenn Sie bereits Erfahrung mit statisch typisierten Sprachen wie C, C++ oder "
"C# haben, aber bisher keine dynamisch typisierte verwendet haben, wird das "
"Lesen dieser Anleitung empfohlen: :ref:`doc_gdscript_more_efficiently`."

msgid "Language"
msgstr "Sprache"

msgid ""
"In the following, an overview is given to GDScript. Details, such as which "
"methods are available to arrays or other objects, should be looked up in the "
"linked class descriptions."
msgstr ""
"Im Folgenden sei ein Überblick über GDScript gegeben. Details, wie welche "
"Methoden es für Arrays oder andere Objekte gibt, sollten in den verlinkten "
"Klassenbeschreibungen nachgeschlagen werden."

msgid "Identifiers"
msgstr "Bezeichner"

msgid ""
"Any string that restricts itself to alphabetic characters (``a`` to ``z`` "
"and ``A`` to ``Z``), digits (``0`` to ``9``) and ``_`` qualifies as an "
"identifier. Additionally, identifiers must not begin with a digit. "
"Identifiers are case-sensitive (``foo`` is different from ``FOO``)."
msgstr ""
"Jede Zeichenkette, die beschränkt ist auf Zeichen des Alphabets (``a`` bis "
"``z`` und ``A`` bis ``Z``), Ziffern (``0`` bis ``9``) und ``_``, ist ein "
"gültiger Bezeichner. Zusätzlich dürfen Bezeichner nicht mit einer Ziffer "
"beginnen. Bei Bezeichner wird Groß- und Kleinschreibung beachtet (``foo`` "
"unterscheidet sich von ``FOO``)."

msgid ""
"Identifiers may also contain most Unicode characters part of `UAX#31 "
"<https://www.unicode.org/reports/tr31/>`__. This allows you to use "
"identifier names written in languages other than English. Unicode characters "
"that are considered \"confusable\" for ASCII characters and emoji are not "
"allowed in identifiers."
msgstr ""

msgid "Keywords"
msgstr "Schlüsselwörter"

msgid ""
"The following is the list of keywords supported by the language. Since "
"keywords are reserved words (tokens), they can't be used as identifiers. "
"Operators (like ``in``, ``not``, ``and`` or ``or``) and names of built-in "
"types as listed in the following sections are also reserved."
msgstr ""
"Das Folgende ist eine Auflistung Schlüsselwörter, die von der Sprache "
"unterstützt werden. Da Schlüsselwörter reservierte Begriffe (Tokens) sind, "
"können sie nicht als Bezeichner verwendet werden. Operatoren (wie ``in``, "
"``not``, ``and`` oder ``or``) und Namen eingebauter Typen, die in den "
"folgenden Abschnitten aufgelistet werden, sind ebenfalls reserviert."

msgid ""
"Keywords are defined in the `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ in "
"case you want to take a look under the hood."
msgstr ""
"Schlüsselwörter werden im `GDSkript Tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ "
"definiert, falls Sie einen Blick unter die Haube werfen möchten."

msgid "Keyword"
msgstr "Schlüsselwort"

msgid "Description"
msgstr "Beschreibung"

msgid "if"
msgstr "if"

msgid "See `if/else/elif`_."
msgstr "Siehe `if/else/elif`_."

msgid "elif"
msgstr "elif"

msgid "else"
msgstr "else"

msgid "for"
msgstr "for"

msgid "See for_."
msgstr "Siehe for_."

msgid "while"
msgstr "while"

msgid "See while_."
msgstr "Siehe while_."

msgid "match"
msgstr "match"

msgid "See match_."
msgstr "Siehe match_."

msgid "break"
msgstr "break"

msgid "Exits the execution of the current ``for`` or ``while`` loop."
msgstr "Beendet die Ausführung der aktuellen ``for`` oder ``while`` Schleife."

msgid "continue"
msgstr "continue"

msgid ""
"Immediately skips to the next iteration of the ``for`` or ``while`` loop."
msgstr ""
"Springt sofort zur nächsten Iteration der ``for`` oder ``while`` Schleife."

msgid "pass"
msgstr "pass"

msgid ""
"Used where a statement is required syntactically but execution of code is "
"undesired, e.g. in empty functions."
msgstr ""
"Benutzt man, wo eine Anweisung zwar syntaktisch benötigt wird, aber die "
"Ausführung von Code eigentlich ungewünscht ist, z.B. in leeren Funktionen."

msgid "return"
msgstr "zurückgeben"

msgid "Returns a value from a function."
msgstr "Gibt einen Wert aus einer Funktion zurück."

msgid "class"
msgstr "Klasse"

#, fuzzy
msgid "Defines an inner class. See `Inner classes`_."
msgstr "Eine lokale Klasse innerhalb einer anderen Klassendatei."

msgid "class_name"
msgstr "class_name"

msgid ""
"Defines the script as a globally accessible class with the specified name. "
"See `Registering named classes`_."
msgstr ""

msgid "extends"
msgstr "extends"

msgid "Defines what class to extend with the current class."
msgstr ""
"Definiert die Basisklasse, von welcher diese Klasse abgeleitet werden soll."

msgid "is"
msgstr "is"

msgid ""
"Tests whether a variable extends a given class, or is of a given built-in "
"type."
msgstr ""
"Testet, ob eine Variable von einer gegeben Klasse abgeleitet ist oder einem "
"gegebenen eingebauten Typen entspricht."

#, fuzzy
msgid "in"
msgstr "Finde"

msgid ""
"Tests whether a value is within a string, array, range, dictionary, or node. "
"When used with ``for``, it iterates through them instead of testing."
msgstr ""

msgid "as"
msgstr "as"

msgid "Cast the value to a given type if possible."
msgstr "Versucht den Wert einem vorgegebenen Type zuzuweisen falls möglich."

msgid "self"
msgstr "self"

msgid "Refers to current class instance."
msgstr "Bezieht sich auf die aktuelle Klassen Instanz."

msgid "signal"
msgstr "signal"

msgid "Defines a signal."
msgstr "Definiert ein Signal."

msgid "func"
msgstr "func"

msgid "Defines a function."
msgstr "Definiert eine Funktion."

msgid "static"
msgstr "static"

#, fuzzy
msgid "Defines a static function or a static member variable."
msgstr ""
"Definiert eine statische Funktion. Statische Member-Variablen sind nicht "
"erlaubt."

msgid "const"
msgstr "const"

msgid "Defines a constant."
msgstr "Definiert eine Konstante."

msgid "enum"
msgstr "enum"

msgid "Defines an enum."
msgstr "Definiert eine Aufzählung."

msgid "var"
msgstr "var"

msgid "Defines a variable."
msgstr "Definiert eine Variable."

msgid "breakpoint"
msgstr "breakpoint"

msgid ""
"Editor helper for debugger breakpoints. Unlike breakpoints created by "
"clicking in the gutter, ``breakpoint`` is stored in the script itself. This "
"makes it persistent across different machines when using version control."
msgstr ""

msgid "preload"
msgstr "preload"

msgid "Preloads a class or variable. See `Classes as resources`_."
msgstr ""
"Lädt eine Variable oder Klasse im Voraus, siehe `Classes as resources`_."

msgid "await"
msgstr ""

msgid ""
"Waits for a signal or a coroutine to finish. See `Awaiting for signals or "
"coroutines`_."
msgstr ""

msgid "yield"
msgstr "yield"

msgid "Previously used for coroutines. Kept as keyword for transition."
msgstr ""

msgid "assert"
msgstr "assert"

msgid ""
"Asserts a condition, logs error on failure. Ignored in non-debug builds. See "
"`Assert keyword`_."
msgstr ""
"Aktiviert eine Bedingung und protokolliert Fehler . Wird bei Nicht-Debug-"
"Builds ignoriert. Siehe `Assert keyword`_."

msgid "void"
msgstr "void"

msgid "Used to represent that a function does not return any value."
msgstr ""

msgid "PI"
msgstr "PI"

msgid "PI constant."
msgstr "Die π-Konstante."

msgid "TAU"
msgstr "TAU"

msgid "TAU constant."
msgstr "TAU-Konstante."

msgid "INF"
msgstr "INF"

#, fuzzy
msgid "Infinity constant. Used for comparisons and as result of calculations."
msgstr "Konstante \"Unendlichkeit\". Wird für Vergleiche genutzt."

msgid "NAN"
msgstr "NAN"

#, fuzzy
msgid ""
"NAN (not a number) constant. Used as impossible result from calculations."
msgstr ""
"Konstante \"NAN\" (not a number - Keine Zahl). Wird für Vergleiche genutzt."

msgid "Operators"
msgstr "Operatoren"

msgid "The following is the list of supported operators and their precedence."
msgstr ""
"Das folgende ist einer Liste der unterstützen Operatoren und ihrer "
"Auswertungsreihenfolge."

msgid "**Operator**"
msgstr "**Operator**"

msgid "**Description**"
msgstr "**Beschreibung**"

msgid "``(`` ``)``"
msgstr "``(`` ``)``"

#, fuzzy
msgid "Grouping (highest priority)"
msgstr "Indexierung (höchste Priorität)"

msgid ""
"Parentheses are not really an operator, but allow you to explicitly specify "
"the precedence of an operation."
msgstr ""

msgid "``x[index]``"
msgstr "``x[index]``"

#, fuzzy
msgid "Subscription"
msgstr "Abonnements"

msgid "``x.attribute``"
msgstr "``x.attribute``"

msgid "Attribute reference"
msgstr "Referenzierung eines Attributs"

msgid "``foo()``"
msgstr "``foo()``"

msgid "Function call"
msgstr "Funktionsaufruf"

msgid "``await x``"
msgstr ""

msgid "`Awaiting for signals or coroutines`_"
msgstr ""

#, fuzzy
msgid "``x is Node``"
msgstr "``node``"

#, fuzzy
msgid "Type checking"
msgstr "Typumwandlung"

msgid ""
"See also :ref:`is_instance_of() <class_@GDScript_method_is_instance_of>` "
"function."
msgstr ""

msgid "``x ** y``"
msgstr ""

msgid "Power"
msgstr "Energie"

msgid ""
"Multiplies ``x`` by itself ``y`` times, similar to calling :ref:`pow() "
"<class_@GlobalScope_method_pow>` function."
msgstr ""

msgid ""
"**Note:** In GDScript, the ``**`` operator is `left-associative <https://en."
"wikipedia.org/wiki/Operator_associativity>`_. See a detailed note after the "
"table."
msgstr ""

msgid "``~x``"
msgstr ""

msgid "Bitwise NOT"
msgstr "Bitweise Negation"

msgid "``+x``"
msgstr ""

msgid "``-x``"
msgstr "``-x``"

msgid "Identity / Negation"
msgstr "identische Abbildung / Negation"

msgid "``x * y``"
msgstr ""

msgid "``x / y``"
msgstr ""

msgid "``x % y``"
msgstr ""

msgid "Multiplication / Division / Remainder"
msgstr "Multiplikation / Division / Modulus (Restbetrag)"

msgid ""
"The ``%`` operator is additionally used for :ref:`format strings "
"<doc_gdscript_printf>`."
msgstr ""

msgid ""
"**Note:** These operators have the same behavior as C++, which may be "
"unexpected for users coming from Python, JavaScript, etc. See a detailed "
"note after the table."
msgstr ""

msgid "``x + y``"
msgstr ""

msgid "``x - y``"
msgstr ""

#, fuzzy
msgid "Addition (or Concatenation) / Subtraction"
msgstr "Addition / Verkettung von Arrays"

msgid "``x << y``"
msgstr ""

msgid "``x >> y``"
msgstr ""

msgid "Bit shifting"
msgstr "Bit-Schieben"

msgid "``x & y``"
msgstr ""

msgid "Bitwise AND"
msgstr "Bitweises UND"

msgid "``x ^ y``"
msgstr ""

msgid "Bitwise XOR"
msgstr "Bitweises exklusiv-ODER (XOR)"

msgid "``x | y``"
msgstr ""

msgid "Bitwise OR"
msgstr "Bitweises (inklusiv-) ODER"

msgid "``x == y``"
msgstr ""

msgid "``x != y``"
msgstr ""

msgid "``x < y``"
msgstr ""

msgid "``x > y``"
msgstr ""

msgid "``x <= y``"
msgstr ""

msgid "``x >= y``"
msgstr ""

#, fuzzy
msgid "Comparison"
msgstr "Vergleiche"

msgid "See a detailed note after the table."
msgstr ""

msgid "``x in y``"
msgstr ""

msgid "``x not in y``"
msgstr ""

#, fuzzy
msgid "Inclusion checking"
msgstr "Umgebungsverdeckung"

msgid "``in`` is also used with the for_ keyword as part of the syntax."
msgstr ""

#, fuzzy
msgid "``not x``"
msgstr "``node``"

msgid "``!x``"
msgstr ""

msgid "Boolean NOT and its :ref:`unrecommended <boolean_operators>` alias"
msgstr ""

msgid "``x and y``"
msgstr ""

msgid "``x && y``"
msgstr ""

msgid "Boolean AND and its :ref:`unrecommended <boolean_operators>` alias"
msgstr ""

msgid "``x or y``"
msgstr ""

msgid "``x || y``"
msgstr ""

msgid "Boolean OR and its :ref:`unrecommended <boolean_operators>` alias"
msgstr ""

msgid "``true_expr if cond else false_expr``"
msgstr ""

msgid "Ternary if/else"
msgstr "Bedingte (ternäre) if/else Anweisung"

#, fuzzy
msgid "``x as Node``"
msgstr "``node``"

#, fuzzy
msgid "`Type casting <casting_>`_"
msgstr "Typumwandlung und Casting"

msgid "``x = y``"
msgstr ""

msgid "``x += y``"
msgstr ""

msgid "``x -= y``"
msgstr ""

msgid "``x *= y``"
msgstr ""

msgid "``x /= y``"
msgstr ""

msgid "``x **= y``"
msgstr ""

msgid "``x %= y``"
msgstr ""

msgid "``x &= y``"
msgstr ""

msgid "``x |= y``"
msgstr ""

msgid "``x ^= y``"
msgstr ""

msgid "``x <<= y``"
msgstr ""

msgid "``x >>= y``"
msgstr ""

msgid "Assignment (lowest priority)"
msgstr "Zuweisung (niedrigste Priorität)"

msgid "You cannot use an assignment operator inside an expression."
msgstr ""

msgid "The behavior of some operators may differ from what you expect:"
msgstr ""

msgid ""
"If both operands of the ``/`` operator are :ref:`int <class_int>`, then "
"integer division is performed instead of fractional. For example ``5 / 2 == "
"2``, not ``2.5``. If this is not desired, use at least one :ref:`float "
"<class_float>` literal (``x / 2.0``), cast (``float(x) / y``), or multiply "
"by ``1.0`` (``x * 1.0 / y``)."
msgstr ""

msgid ""
"The ``%`` operator is only available for ints, for floats use the :ref:"
"`fmod() <class_@GlobalScope_method_fmod>` function."
msgstr ""

msgid ""
"For negative values, the ``%`` operator and ``fmod()`` use `truncation "
"<https://en.wikipedia.org/wiki/Truncation>`_ instead of rounding towards "
"negative infinity. This means that the remainder has a sign. If you need the "
"remainder in a mathematical sense, use the :ref:`posmod() "
"<class_@GlobalScope_method_posmod>` and :ref:`fposmod() "
"<class_@GlobalScope_method_fposmod>` functions instead."
msgstr ""

msgid ""
"The ``**`` operator is `left-associative <https://en.wikipedia.org/wiki/"
"Operator_associativity>`_. This means that ``2 ** 2 ** 3`` is equal to ``(2 "
"** 2) ** 3``. Use parentheses to explicitly specify precedence you need, for "
"example ``2 ** (2 ** 3)``."
msgstr ""

msgid ""
"The ``==`` and ``!=`` operators sometimes allow you to compare values of "
"different types (for example, ``1 == 1.0`` is true), but in other cases it "
"can cause a runtime error. If you're not sure about the types of the "
"operands, you can safely use the :ref:`is_same() "
"<class_@GlobalScope_method_is_same>` function (but note that it is more "
"strict about types and references). To compare floats, use the :ref:"
"`is_equal_approx() <class_@GlobalScope_method_is_equal_approx>` and :ref:"
"`is_zero_approx() <class_@GlobalScope_method_is_zero_approx>` functions "
"instead."
msgstr ""

msgid "Literals"
msgstr "Literale"

#, fuzzy
msgid "**Example(s)**"
msgstr "**Beispiel**"

msgid "``null``"
msgstr "``null``"

#, fuzzy
msgid "Null value"
msgstr "Aufzählungswert"

#, fuzzy
msgid "``false``, ``true``"
msgstr "``-e``, ``--editor``"

#, fuzzy
msgid "Boolean values"
msgstr "Aufzählungswert"

msgid "``45``"
msgstr "``45``"

msgid "Base 10 integer"
msgstr "Dezimale Ganzzahl (Basis 10)"

msgid "``0x8f51``"
msgstr "``0x8f51``"

msgid "Base 16 (hexadecimal) integer"
msgstr "Basis 16 (Hexadezimal) Ganzzahl"

msgid "``0b101010``"
msgstr "``0b101010``"

msgid "Base 2 (binary) integer"
msgstr "Basis 2 (Binär) Ganzzahl"

msgid "``3.14``, ``58.1e-10``"
msgstr "``3.14``, ``58.1e-10``"

msgid "Floating-point number (real)"
msgstr "Fließkommazahl (reell)"

#, fuzzy
msgid "``\"Hello\"``, ``'Hi'``"
msgstr "``\"Hallo\"``, ``\"Hey\"``"

#, fuzzy
msgid "Regular strings"
msgstr "Spiegelnde Beleuchtung"

#, fuzzy
msgid "``\"\"\"Hello\"\"\"``, ``'''Hi'''``"
msgstr "``\"Hallo\"``, ``\"Hey\"``"

msgid "Triple-quoted regular strings"
msgstr ""

#, fuzzy
msgid "``r\"Hello\"``, ``r'Hi'``"
msgstr "``\"Hallo\"``, ``\"Hey\"``"

#, fuzzy
msgid "Raw strings"
msgstr "Zeichenkette"

#, fuzzy
msgid "``r\"\"\"Hello\"\"\"``, ``r'''Hi'''``"
msgstr "``\"Hallo\"``, ``\"Hey\"``"

#, fuzzy
msgid "Triple-quoted raw strings"
msgstr "GDScript Zeichenketten formatieren"

#, fuzzy
msgid "``&\"name\"``"
msgstr "``name``"

msgid ":ref:`StringName <class_StringName>`"
msgstr ":ref:`StringName <class_StringName>`"

msgid "``^\"Node/Label\"``"
msgstr "``^\"Node/Label\"``"

msgid ":ref:`NodePath <class_NodePath>`"
msgstr ":ref:`NodePath <class_NodePath>`"

msgid ""
"There are also two constructs that look like literals, but actually are not:"
msgstr ""

msgid "**Example**"
msgstr "**Beispiel**"

msgid "``$NodePath``"
msgstr "``$NodeWeg``"

msgid "Shorthand for ``get_node(\"NodePath\")``"
msgstr "Kurzform für ``get_node(\"NodePath\")``"

msgid "``%UniqueNode``"
msgstr "``%UniqueNode``"

#, fuzzy
msgid "Shorthand for ``get_node(\"%UniqueNode\")``"
msgstr "Kurzform für ``get_node(\"NodePath\")``"

msgid ""
"Integers and floats can have their numbers separated with ``_`` to make them "
"more readable. The following ways to write numbers are all valid::"
msgstr ""
"Ganzzahlen und Gleitkommazahlen können durch ``_`` getrennt werden um die "
"Lesbarkeit zu verbessern. Die folgenden Möglichkeiten zum Schreiben von "
"Zahlen sind alle gültig:"

msgid "**Regular string literals** can contain the following escape sequences:"
msgstr ""

msgid "**Escape sequence**"
msgstr "**Escape Sequenz**"

msgid "**Expands to**"
msgstr "**wird zu**"

msgid "``\\n``"
msgstr "``\\n``"

msgid "Newline (line feed)"
msgstr "Zeilenumbruch (Line Feed)"

msgid "``\\t``"
msgstr "``\\t``"

msgid "Horizontal tab character"
msgstr "Horizontaler Tabulator"

msgid "``\\r``"
msgstr "``\\r``"

msgid "Carriage return"
msgstr "Wagenrücklauf (Carriage Return)"

msgid "``\\a``"
msgstr "``\\a``"

msgid "Alert (beep/bell)"
msgstr "Alarm (Piepton/Klingel)"

msgid "``\\b``"
msgstr "``\\b``"

msgid "Backspace"
msgstr "Rücktaste"

msgid "``\\f``"
msgstr "``\\f``"

msgid "Formfeed page break"
msgstr "neue Seite (Page Break)"

msgid "``\\v``"
msgstr "``\\v``"

msgid "Vertical tab character"
msgstr "Vertikaler Tabulator"

msgid "``\\\"``"
msgstr "``\\\"``"

msgid "Double quote"
msgstr "Doppelte Anführungszeichen"

msgid "``\\'``"
msgstr "``\\'``"

msgid "Single quote"
msgstr "Einfaches Anführungszeichen"

msgid "``\\\\``"
msgstr "``\\\\``"

msgid "Backslash"
msgstr "Backslash (Rückstrich oder umgekehrter Schrägstrich)"

msgid "``\\uXXXX``"
msgstr "``\\uXXXX``"

#, fuzzy
msgid "UTF-16 Unicode codepoint ``XXXX`` (hexadecimal, case-insensitive)"
msgstr ""
"Unicode Codepoint ``XXXX`` (Hexadezimal, Case-Insensitive = Groß/"
"Kleinschreibung ist egal)"

msgid "``\\UXXXXXX``"
msgstr "``\\UXXXXXX``"

#, fuzzy
msgid "UTF-32 Unicode codepoint ``XXXXXX`` (hexadecimal, case-insensitive)"
msgstr ""
"Unicode Codepoint ``XXXX`` (Hexadezimal, Case-Insensitive = Groß/"
"Kleinschreibung ist egal)"

#, fuzzy
msgid ""
"There are two ways to represent an escaped Unicode character above "
"``0xFFFF``:"
msgstr ""
"Es gibt zwei Möglichkeiten, ein Projekt für einen Server zu exportieren:"

msgid ""
"as a `UTF-16 surrogate pair <https://en.wikipedia.org/wiki/"
"UTF-16#Code_points_from_U+010000_to_U+10FFFF>`_ ``\\uXXXX\\uXXXX``."
msgstr ""

msgid "as a single UTF-32 codepoint ``\\UXXXXXX``."
msgstr ""

msgid ""
"Also, using ``\\`` followed by a newline inside a string will allow you to "
"continue it in the next line, without inserting a newline character in the "
"string itself."
msgstr ""

msgid ""
"A string enclosed in quotes of one type (for example ``\"``) can contain "
"quotes of another type (for example ``'``) without escaping. Triple-quoted "
"strings allow you to avoid escaping up to two consecutive quotes of the same "
"type (unless they are adjacent to the string edges)."
msgstr ""

msgid ""
"**Raw string literals** always encode the string as it appears in the source "
"code. This is especially useful for regular expressions. Raw strings do not "
"process escape sequences, but you can \"escape\" a quote or backslash (they "
"replace themselves)."
msgstr ""

#, fuzzy
msgid "GDScript also supports :ref:`format strings <doc_gdscript_printf>`."
msgstr "GDScript unterstützt auch :ref:`doc_gdscript_printf`."

msgid "Annotations"
msgstr "Anmerkungen"

msgid ""
"There are some special tokens in GDScript that act like keywords but are "
"not, they are *annotations* instead. Every annotation start with the ``@`` "
"character and is specified by a name. A detailed description and example for "
"each annotation can be found inside the :ref:`GDScript class reference "
"<class_@GDScript>`."
msgstr ""

msgid ""
"Annotations affect how the script is treated by external tools and usually "
"don't change the behavior."
msgstr ""

msgid "For instance, you can use it to export a value to the editor::"
msgstr ""

#, fuzzy
msgid ""
"For more information about exporting properties, read the :ref:`GDScript "
"exports <doc_gdscript_exports>` article."
msgstr ""
"Für mehr Informationen zur Arbeitsweise von ``Viewport``-Nodes, siehe dazu "
"die :ref:`Viewports<doc_viewports>`-Anleitung."

msgid ""
"Any constant expression compatible with the required argument type can be "
"passed as an annotation argument value::"
msgstr ""

msgid ""
"Annotations can be specified one per line or all in the same line. They "
"affect the next statement that isn't an annotation. Annotations can have "
"arguments sent between parentheses and separated by commas."
msgstr ""

msgid "Both of these are the same::"
msgstr ""

msgid "``@onready`` annotation"
msgstr ""

msgid ""
"When using nodes, it's common to desire to keep references to parts of the "
"scene in a variable. As scenes are only warranted to be configured when "
"entering the active scene tree, the sub-nodes can only be obtained when a "
"call to ``Node._ready()`` is made."
msgstr ""
"Bei der Verwendung von Nodes ist es üblich, Verweise auf Teile der Szene in "
"einer Variablen zu behalten. Da Szenen nur beim Aufrufen des aktiven "
"Szenenbaums konfiguriert werden müssen, können die Unterknoten nur abgerufen "
"werden, wenn ein Aufruf von \"Node._ready()\" erfolgt."

#, fuzzy
msgid ""
"This can get a little cumbersome, especially when nodes and external "
"references pile up. For this, GDScript has the ``@onready`` annotation, that "
"defers initialization of a member variable until ``_ready()`` is called. It "
"can replace the above code with a single line::"
msgstr ""
"Dies kann etwas umständlich werden, insbesondere wenn sich Nodes und externe "
"Referenzen häufen. Zu diesem Zweck hat GDScript das Schlüsselwort "
"\"onready\", das die Initialisierung einer Mitgliedsvariablen verzögert, bis "
"\"_ready()\" \"aufgerufen wird. Es kann den obigen Code durch eine einzelne "
"Zeile ersetzen :"

msgid ""
"Applying ``@onready`` and any ``@export`` annotation to the same variable "
"doesn't work as you might expect. The ``@onready`` annotation will cause the "
"default value to be set after the ``@export`` takes effect and will override "
"it::"
msgstr ""

msgid ""
"Therefore, the ``ONREADY_WITH_EXPORT`` warning is generated, which is "
"treated as an error by default. We do not recommend disabling or ignoring it."
msgstr ""

msgid "Comments"
msgstr "Kommentare"

msgid ""
"Anything from a ``#`` to the end of the line is ignored and is considered a "
"comment."
msgstr ""
"Alles ab einem ``#`` bis zum Ende der Zeile wird ignoriert und als Kommentar "
"aufgefasst."

msgid ""
"In the Godot script editor, special keywords are highlighted within comments "
"to bring the user's attention to specific comments:"
msgstr ""

msgid ""
"**Critical** *(appears in red)*: ``ALERT``, ``ATTENTION``, ``CAUTION``, "
"``CRITICAL``, ``DANGER``, ``SECURITY``"
msgstr ""

msgid ""
"**Warning** *(appears in yellow)*: ``BUG``, ``DEPRECATED``, ``FIXME``, "
"``HACK``, ``TASK``, ``TBD``, ``TODO``, ``WARNING``"
msgstr ""

msgid ""
"**Notice** *(appears in green)*: ``INFO``, ``NOTE``, ``NOTICE``, ``TEST``, "
"``TESTING``"
msgstr ""

msgid ""
"These keywords are case-sensitive, so they must be written in uppercase for "
"them to be recognized:"
msgstr ""

msgid ""
"The list of highlighted keywords and their colors can be changed in the "
"**Text Editor > Theme > Comment Markers** section of the Editor Settings."
msgstr ""

#, fuzzy
msgid "Code regions"
msgstr "Überlegungen"

msgid ""
"Code regions are special types of comments that the script editor "
"understands as *foldable regions*. This means that after writing code region "
"comments, you can collapse and expand the region by clicking the arrow that "
"appears at the left of the comment. This arrow appears within a purple "
"square to be distinguishable from standard code folding."
msgstr ""

#, fuzzy
msgid "The syntax is as follows:"
msgstr ""
"Dieser Text lautet wie folgt (eine sinngemäße Übersetzung finden Sie `hier "
"<https://de.wikipedia.org/wiki/MIT-Lizenz>`_):"

msgid ""
"To create a code region quickly, select several lines in the script editor, "
"right-click the selection then choose **Create Code Region**. The region "
"description will be selected automatically for editing."
msgstr ""

msgid "It is possible to nest code regions within other code regions."
msgstr ""

#, fuzzy
msgid "Here's a concrete usage example of code regions:"
msgstr "Hier sind einige Beispiele eigener Effekte:"

msgid ""
"This can be useful to organize large chunks of code into easier to "
"understand sections. However, remember that external editors generally don't "
"support this feature, so make sure your code is easy to follow even when not "
"relying on folding code regions."
msgstr ""

msgid ""
"Individual functions and indented sections (such as ``if`` and ``for``) can "
"*always* be collapsed in the script editor. This means you should avoid "
"using a code region to contain a single function or indented section, as it "
"won't bring much of a benefit. Code regions work best when they're used to "
"group multiple elements together."
msgstr ""

#, fuzzy
msgid "Line continuation"
msgstr "Konfiguration"

msgid ""
"A line of code in GDScript can be continued on the next line by using a "
"backslash (``\\``). Add one at the end of a line and the code on the next "
"line will act like it's where the backslash is. Here is an example:"
msgstr ""

msgid "A line can be continued multiple times like this:"
msgstr ""

msgid "Built-in types"
msgstr "Eingebaute Typen"

msgid ""
"Built-in types are stack-allocated. They are passed as values. This means a "
"copy is created on each assignment or when passing them as arguments to "
"functions. The exceptions are ``Object``, ``Array``, ``Dictionary``, and "
"packed arrays (such as ``PackedByteArray``), which are passed by reference "
"so they are shared. All arrays, ``Dictionary``, and some objects (``Node``, "
"``Resource``) have a ``duplicate()`` method that allows you to make a copy."
msgstr ""
"Eingebaute Typen werden auf dem Stapel (Stack) abgelegt. Sie werden als "
"Werte übergeben. Das bedeutet, dass bei jeder Zuweisung oder bei der "
"Übergabe als Argument an Funktionen eine Kopie erstellt wird. Die Ausnahmen "
"sind ``Object``, ``Array``, ``Dictionary`` und gepackte Arrays (wie "
"``PackedByteArray``), die per Referenz übergeben werden, so dass sie "
"gemeinsam genutzt werden können. Alle Arrays, ``Dictionary``, und einige "
"Objekte (``Node``, ``Resource``) haben eine ``duplicate()`` Methode, die es "
"erlaubt, eine Kopie zu erstellen."

msgid "Basic built-in types"
msgstr "Einfache eingebaute Typen"

msgid "A variable in GDScript can be assigned to several built-in types."
msgstr ""
"Eine Variable in GDScript kann mehreren eingebauten Typen zugewiesen werden."

msgid "null"
msgstr "null"

msgid ""
"``null`` is an empty data type that contains no information and can not be "
"assigned any other value."
msgstr ""
"``null`` ist ein leerer Datentyp, der keine Information enthält und dem kein "
"anderer Wert zugewiesen werden kann."

msgid ":ref:`bool <class_bool>`"
msgstr ":ref:`bool <class_bool>`"

msgid "Short for \"boolean\", it can only contain ``true`` or ``false``."
msgstr ""
"Kurzform für Boolean-Datentyp, der nur ``true`` oder ``false`` enthalten "
"kann."

msgid ":ref:`int <class_int>`"
msgstr ":ref:`int <class_int>`"

#, fuzzy
msgid ""
"Short for \"integer\", it stores whole numbers (positive and negative). It "
"is stored as a 64-bit value, equivalent to ``int64_t`` in C++."
msgstr ""
"Kurz für \"Integer\" (Ganzzahl): es kann eine Ganzzahl (positiv oder "
"negativ) als 64-Bit Wert gespeichert werden, gleichbedeutend mit \"int64_t\" "
"in C++."

msgid ":ref:`float <class_float>`"
msgstr ":ref:`float <class_float>`"

#, fuzzy
msgid ""
"Stores real numbers, including decimals, using floating-point values. It is "
"stored as a 64-bit value, equivalent to ``double`` in C++. Note: Currently, "
"data structures such as ``Vector2``, ``Vector3``, and ``PackedFloat32Array`` "
"store 32-bit single-precision ``float`` values."
msgstr ""
"Speichert eine reelle Zahl (Fließkommazahl) als 64-Bit Wert (doppelte "
"Genauigkeit), gleichbedeutend mit \"double\" in C++. Anmerkung: "
"Datenstrukturen wie Vector2, Vector3 und PoolRealArray speichern 32-Bit "
"Fließkommazahlen (einfache Genauigkeit)."

msgid ":ref:`String <class_String>`"
msgstr ":ref:`String <class_String>`"

#, fuzzy
msgid ""
"A sequence of characters in `Unicode format <https://en.wikipedia.org/wiki/"
"Unicode>`_."
msgstr ""
"Eine Folge von Zeichen im `Unicode-Format <https://en.wikipedia.org/wiki/"
"Unicode>`_. Zeichenketten können die folgenden Escape-Sequenzen enthalten:"

msgid ""
"An immutable string that allows only one instance of each name. They are "
"slower to create and may result in waiting for locks when multithreading. In "
"exchange, they're very fast to compare, which makes them good candidates for "
"dictionary keys."
msgstr ""

msgid ""
"A pre-parsed path to a node or a node property.  It can be easily assigned "
"to, and from, a String. They are useful to interact with the tree to get a "
"node, or affecting properties like with :ref:`Tweens <class_Tween>`."
msgstr ""

msgid "Vector built-in types"
msgstr "eingebaute Vektor-Typen"

msgid ":ref:`Vector2 <class_Vector2>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

msgid ""
"2D vector type containing ``x`` and ``y`` fields. Can also be accessed as an "
"array."
msgstr ""
"2D Vektor-Typ bestehend aus ``x`` und ``y``. Zugriff kann auch als Feld "
"erfolgen."

msgid ":ref:`Vector2i <class_Vector2i>`"
msgstr ":ref:`Vector2i <class_Vector2i>`"

msgid ""
"Same as a Vector2 but the components are integers. Useful for representing "
"items in a 2D grid."
msgstr ""

msgid ":ref:`Rect2 <class_Rect2>`"
msgstr ":ref:`Rect2 <class_Rect2>`"

msgid ""
"2D Rectangle type containing two vectors fields: ``position`` and ``size``. "
"Also contains an ``end`` field which is ``position + size``."
msgstr ""
"2D Rechteckstypen mit zwei Vektor Feldern: ``position`` und ``size``. "
"Besitzt alternativ ein ``end`` Feld, welches ``position+size`` entspricht."

msgid ":ref:`Vector3 <class_Vector3>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

msgid ""
"3D vector type containing ``x``, ``y`` and ``z`` fields. This can also be "
"accessed as an array."
msgstr ""
"3D Vektor Typ besitzt ``x``, ``y`` und ``z`` Felder. Diese können auch als "
"Array aufgerufen werden."

msgid ":ref:`Vector3i <class_Vector3i>`"
msgstr ":ref:`Vector3i <class_Vector3i>`"

msgid ""
"Same as Vector3 but the components are integers. Can be use for indexing "
"items in a 3D grid."
msgstr ""

msgid ":ref:`Transform2D <class_Transform2D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

msgid "3×2 matrix used for 2D transforms."
msgstr "Eine 3x2 Matrix, welche für 2D Transformationen verwendet wird."

msgid ":ref:`Plane <class_Plane>`"
msgstr ":ref:`Plane <class_Plane>`"

msgid ""
"3D Plane type in normalized form that contains a ``normal`` vector field and "
"a ``d`` scalar distance."
msgstr ""
"3D Ebenentyp in normalisierter Form, welcher ein ``normal`` Vektorfeld und "
"eine skalare Distanz ``d`` besitzt."

msgid ":ref:`Quaternion <class_Quaternion>`"
msgstr ":ref:`Quaternion <class_Quaternion>`"

msgid ""
"Quaternion is a datatype used for representing a 3D rotation. It's useful "
"for interpolating rotations."
msgstr ""
"Quaternion ist ein Datentyp, welcher für die Repräsentation von 3D-"
"Rotationen verwendet wird. Er ist sehr nützlich für das Interpolieren von "
"Rotationen."

msgid ":ref:`AABB <class_AABB>`"
msgstr ":ref:`AABB <class_AABB>`"

msgid ""
"Axis-aligned bounding box (or 3D box) contains 2 vectors fields: "
"``position`` and ``size``. Also contains an ``end`` field which is "
"``position + size``."
msgstr ""
"Entlang der Achse ausgerichtete Begrenzungs-Box (oder 3D Box) besitzt 2 "
"Vektorfelder: ``position`` und ``size``. Besitzt alternativ ein ``end``-"
"Feld, welches ``position+size`` entspricht."

msgid ":ref:`Basis <class_Basis>`"
msgstr ":ref:`Basis <class_Basis>`"

msgid ""
"3x3 matrix used for 3D rotation and scale. It contains 3 vector fields "
"(``x``, ``y`` and ``z``) and can also be accessed as an array of 3D vectors."
msgstr ""
"3x3 Matrix, welche für 3D Rotationen und Sklarierung verwendet wird. Es "
"besitzt drei Vektorfelder (``x``, ``y`` und ``z``) und kann auch als Array "
"von 3D Vektoren aufgerufen werden."

msgid ":ref:`Transform3D <class_Transform3D>`"
msgstr ":ref:`Transform3D <class_Transform3D>`"

msgid ""
"3D Transform contains a Basis field ``basis`` and a Vector3 field ``origin``."
msgstr ""
"3D Transform besitzen ein Basis Feld ``basis`` und ein Vector3 Feld "
"``origin``."

msgid "Engine built-in types"
msgstr "In die Engine eingebaute Typen"

msgid ":ref:`Color <class_Color>`"
msgstr ":ref:`Color <class_Color>`"

msgid ""
"Color data type contains ``r``, ``g``, ``b``, and ``a`` fields. It can also "
"be accessed as ``h``, ``s``, and ``v`` for hue/saturation/value."
msgstr ""
"Der Color Datentyp besitzt jeweils ein ``r``, ``g``, ``b`` und ``a`` Feld. "
"Der Zugriff kann auch über ``h``, ``s`` und ``v`` erfolgen, was für hue "
"(Farbwert)/saturation (Sättigung)/value (Dunkelstufe) steht."

msgid ":ref:`RID <class_RID>`"
msgstr ":ref:`RID <class_RID>`"

msgid "Resource ID (RID). Servers use generic RIDs to reference opaque data."
msgstr ""
"Ressourcen ID (RID). Server nutzen generische RIDs, um unklare Daten zu "
"referenzieren."

msgid ":ref:`Object <class_Object>`"
msgstr ":ref:`Object <class_Object>`"

msgid "Base class for anything that is not a built-in type."
msgstr "Basisklasse für alles, was kein eingebauter Typ ist."

msgid "Container built-in types"
msgstr "Container eingebaute Typen"

msgid ":ref:`Array <class_Array>`"
msgstr ":ref:`Array <class_Array>`"

msgid ""
"Generic sequence of arbitrary object types, including other arrays or "
"dictionaries (see below). The array can resize dynamically. Arrays are "
"indexed starting from index ``0``. Negative indices count from the end."
msgstr ""
"Generische Abfolge beliebiger Objekttypen, einschließlich anderer Arrays "
"oder Dictionaries (siehe unten). Die Größe des Arrays kann dynamisch "
"geändert werden. Arrays werden ausgehend vom Index ``0`` indiziert. Negative "
"Indizes zählen vom Ende an."

#, fuzzy
msgid "Typed arrays"
msgstr "real array"

msgid ""
"Godot 4.0 added support for typed arrays. On write operations, Godot checks "
"that element values match the specified type, so the array cannot contain "
"invalid values. The GDScript static analyzer takes typed arrays into "
"account, however array methods like ``front()`` and ``back()`` still have "
"the ``Variant`` return type."
msgstr ""

msgid ""
"Typed arrays have the syntax ``Array[Type]``, where ``Type`` can be any "
"``Variant`` type, native or user class, or enum. Nested array types (like "
"``Array[Array[int]]``) are not supported."
msgstr ""

msgid "``Array`` and ``Array[Variant]`` are the same thing."
msgstr ""

msgid ""
"Arrays are passed by reference, so the array element type is also an "
"attribute of the in-memory structure referenced by a variable in runtime. "
"The static type of a variable restricts the structures that it can reference "
"to. Therefore, you **cannot** assign an array with a different element type, "
"even if the type is a subtype of the required type."
msgstr ""

msgid ""
"If you want to *convert* a typed array, you can create a new array and use "
"the :ref:`Array.assign() <class_Array_method_assign>` method::"
msgstr ""

msgid ""
"The only exception was made for the ``Array`` (``Array[Variant]``) type, for "
"user convenience and compatibility with old code. However, operations on "
"untyped arrays are considered unsafe."
msgstr ""

#, fuzzy
msgid "Packed arrays"
msgstr "Oberflächen-Array"

msgid ""
"GDScript arrays are allocated linearly in memory for speed. Large arrays "
"(more than tens of thousands of elements) may however cause memory "
"fragmentation. If this is a concern, special types of arrays are available. "
"These only accept a single data type. They avoid memory fragmentation and "
"use less memory, but are atomic and tend to run slower than generic arrays. "
"They are therefore only recommended to use for large data sets:"
msgstr ""
"GDScript-Arrays werden aus Geschwindigkeitsgründen linear im Speicher "
"zugewiesen. Große Arrays (mehr als Zehntausende von Elementen) können jedoch "
"eine Speicherfragmentierung verursachen. Wenn dies ein Problem darstellt, "
"stehen spezielle Arten von Arrays zur Verfügung. Diese akzeptieren nur einen "
"einzigen Datentyp. Sie vermeiden Speicherfragmentierung und verbrauchen "
"weniger Speicher, sind jedoch atomar und laufen tendenziell langsamer als "
"generische Arrays. Sie werden daher nur für große Datenmengen empfohlen:"

#, fuzzy
msgid ""
":ref:`PackedByteArray <class_PackedByteArray>`: An array of bytes (integers "
"from 0 to 255)."
msgstr ""
":ref:`PoolByteArray <class_PoolByteArray>`: Ein Array aus Bytes (Integer von "
"0 bis 255)."

#, fuzzy
msgid ""
":ref:`PackedInt32Array <class_PackedInt32Array>`: An array of 32-bit "
"integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>`: Ein Array aus ganzen Zahlen."

#, fuzzy
msgid ""
":ref:`PackedInt64Array <class_PackedInt64Array>`: An array of 64-bit "
"integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>`: Ein Array aus ganzen Zahlen."

#, fuzzy
msgid ""
":ref:`PackedFloat32Array <class_PackedFloat32Array>`: An array of 32-bit "
"floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>`: Ein Array aus Fließkommazahlen."

#, fuzzy
msgid ""
":ref:`PackedFloat64Array <class_PackedFloat64Array>`: An array of 64-bit "
"floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>`: Ein Array aus Fließkommazahlen."

#, fuzzy
msgid ""
":ref:`PackedStringArray <class_PackedStringArray>`: An array of strings."
msgstr ""
":ref:`PoolStringArray <class_PoolStringArray>`: Ein Array aus Zeichenketten."

#, fuzzy
msgid ""
":ref:`PackedVector2Array <class_PackedVector2Array>`: An array of :ref:"
"`Vector2 <class_Vector2>` values."
msgstr ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: Ein Array aus :ref:"
"`Vector2 <class_Vector2>` Objekten."

#, fuzzy
msgid ""
":ref:`PackedVector3Array <class_PackedVector3Array>`: An array of :ref:"
"`Vector3 <class_Vector3>` values."
msgstr ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: Ein Array aus :ref:"
"`Vector3 <class_Vector3>` Objekten."

#, fuzzy
msgid ""
":ref:`PackedColorArray <class_PackedColorArray>`: An array of :ref:`Color "
"<class_Color>` values."
msgstr ""
":ref:`PoolColorArray <class_PoolColorArray>`: Ein Array aus :ref:`Color "
"<class_Color>` Objekten."

msgid ":ref:`Dictionary <class_Dictionary>`"
msgstr ":ref:`Dictionary <class_Dictionary>`"

msgid "Associative container which contains values referenced by unique keys."
msgstr ""
"Zugehöriger Container, der durch eindeutige Schlüssel referenzierte Werte "
"enthält."

#, fuzzy
msgid ""
"Lua-style table syntax is also supported. Lua-style uses ``=`` instead of ``:"
"`` and doesn't use quotes to mark string keys (making for slightly less to "
"write). However, keys written in this form can't start with a digit (like "
"any GDScript identifier), and must be string literals."
msgstr ""
"Eine Tabellensyntax im Lua-Stil wird ebenfalls unterstützt. Der Lua-Stil "
"verwendet ``=`` anstelle von ``:`` und benutzt keine Anführungszeichen, um "
"Zeichenketten-Schlüssel zu markieren (was etwas weniger Schreibarbeit "
"macht). Schlüssel, die in dieser Form geschrieben werden, können jedoch "
"nicht mit einer Ziffer beginnen (wie jeder GDScript-Bezeichner)."

msgid ""
"To add a key to an existing dictionary, access it like an existing key and "
"assign to it::"
msgstr ""
"Um einen Schlüssel zu einem bestehenden Dictionary hinzuzufügen, greifen Sie "
"wie ein vorhandener Schlüssel darauf zu und weisen Sie ihm einen zu:"

msgid ""
"The bracket syntax can be used to access properties of any :ref:"
"`class_Object`, not just Dictionaries. Keep in mind it will cause a script "
"error when attempting to index a non-existing property. To avoid this, use "
"the :ref:`Object.get() <class_Object_method_get>` and :ref:`Object.set() "
"<class_Object_method_set>` methods instead."
msgstr ""
"Die Klammer-Syntax kann verwendet werden, um auf die Eigenschaften von "
"jedem :ref:`class_Object` zuzugreifen, nicht nur aus Dictionaries. Beachten "
"Sie, dass beim Indizieren einer nicht vorhandenen Eigenschaft ein "
"Skriptfehler auftritt. Um dies zu vermeiden, verwenden Sie stattdessen die "
"Methoden :ref:`Object.get() <class_Object_method_get>` und :ref:`Object."
"set() <class_Object_method_set>`."

msgid ":ref:`Signal <class_Signal>`"
msgstr ":ref:`Signal <class_Signal>`"

msgid ""
"A signal is a message that can be emitted by an object to those who want to "
"listen to it. The Signal type can be used for passing the emitter around."
msgstr ""

msgid ""
"Signals are better used by getting them from actual objects, e.g. ``$Button."
"button_up``."
msgstr ""

msgid ":ref:`Callable <class_Callable>`"
msgstr ":ref:`Callable <class_Callable>`"

msgid ""
"Contains an object and a function, which is useful for passing functions as "
"values (e.g. when connecting to signals)."
msgstr ""

msgid ""
"Getting a method as a member returns a callable. ``var x = $Sprite2D."
"rotate`` will set the value of ``x`` to a callable with ``$Sprite2D`` as the "
"object and ``rotate`` as the method."
msgstr ""

msgid "You can call it using the ``call`` method: ``x.call(PI)``."
msgstr ""

msgid "Data"
msgstr "Daten"

msgid "Variables"
msgstr "Variablen"

msgid ""
"Variables can exist as class members or local to functions. They are created "
"with the ``var`` keyword and may, optionally, be assigned a value upon "
"initialization."
msgstr ""
"Variablen können als Klassen-Member oder lokal in Funktionen existieren. Sie "
"werden mit dem Schlüsselwort ``var`` erzeugt und können optional mit einem "
"Wert initialisiert werden."

msgid ""
"Variables can optionally have a type specification. When a type is "
"specified, the variable will be forced to have always that same type, and "
"trying to assign an incompatible value will raise an error."
msgstr ""
"Variablen können optional eine Typspezifikation haben. Wenn ein Typ "
"angegeben wird, muss die Variable immer denselben Typ haben, und der "
"Versuch, einen inkompatiblen Wert zuzuweisen, führt zu einem Fehler."

msgid ""
"Types are specified in the variable declaration using a ``:`` (colon) symbol "
"after the variable name, followed by the type."
msgstr ""
"Typen werden in der Variablendeklaration mit einem ``:`` (Doppelpunkt) nach "
"dem Variablennamen gefolgt vom Typ angegeben."

msgid ""
"If the variable is initialized within the declaration, the type can be "
"inferred, so it's possible to omit the type name::"
msgstr ""
"Wenn die Variable innerhalb der Deklaration initialisiert wird, kann der Typ "
"abgeleitet werden, sodass der Typname weggelassen werden kann:"

msgid ""
"Type inference is only possible if the assigned value has a defined type, "
"otherwise it will raise an error."
msgstr ""
"Ein Rückschluss auf den Typ ist nur möglich, wenn der zugewiesene Wert einen "
"definierten Typ hat, andernfalls wird ein Fehler ausgelöst."

msgid "Valid types are:"
msgstr "Gültige Typen sind:"

msgid "Built-in types (Array, Vector2, int, String, etc.)."
msgstr "eingebaute Typen (Array, Vector2, int, String, etc.)."

msgid "Engine classes (Node, Resource, Reference, etc.)."
msgstr "Engine-Klassen (Node, Ressource, Referenz, usw.)."

msgid ""
"Constant names if they contain a script resource (``MyScript`` if you "
"declared ``const MyScript = preload(\"res://my_script.gd\")``)."
msgstr ""
"Konstante Namen, wenn sie eine Skript-Ressource enthalten (``MyScript``, "
"wenn man ``const MyScript = preload(\"res://my_script.gd\")`` deklariert "
"hat)."

msgid ""
"Other classes in the same script, respecting scope (``InnerClass."
"NestedClass`` if you declared ``class NestedClass`` inside the ``class "
"InnerClass`` in the same scope)."
msgstr ""
"Andere Klassen im gleichen Skript, unter Berücksichtigung des "
"Geltungsbereichs (``InnerClass.NestedClass``, wenn man ``class NestedClass`` "
"innerhalb der ``class InnerClass`` im gleichen Geltungsbereich deklariert "
"hat)."

msgid "Script classes declared with the ``class_name`` keyword."
msgstr ""
"Skriptklassen, die mit dem Schlüsselwort ``class_name`` deklariert wurden."

msgid "Autoloads registered as singletons."
msgstr ""

msgid ""
"While ``Variant`` is a valid type specification, it's not an actual type. It "
"only means there's no set type and is equivalent to not having a static type "
"at all. Therefore, inference is not allowed by default for ``Variant``, "
"since it's likely a mistake."
msgstr ""

msgid ""
"You can turn off this check, or make it only a warning, by changing it in "
"the project settings. See :ref:`doc_gdscript_warning_system` for details."
msgstr ""

#, fuzzy
msgid "Static variables"
msgstr "Variablen bearbeiten"

msgid "A class member variable can be declared static::"
msgstr ""

msgid ""
"Static variables belong to the class, not instances. This means that static "
"variables share values between multiple instances, unlike regular member "
"variables."
msgstr ""

msgid ""
"From inside a class, you can access static variables from any function, both "
"static and non-static. From outside the class, you can access static "
"variables using the class or an instance (the second is not recommended as "
"it is less readable)."
msgstr ""

msgid ""
"The ``@export`` and ``@onready`` annotations cannot be applied to a static "
"variable. Local variables cannot be static."
msgstr ""

msgid ""
"The following example defines a ``Person`` class with a static variable "
"named ``max_id``. We increment the ``max_id`` in the ``_init()`` function. "
"This makes it easy to keep track of the number of ``Person`` instances in "
"our game."
msgstr ""

msgid ""
"In this code, we create two instances of our ``Person`` class and check that "
"the class and every instance have the same ``max_id`` value, because the "
"variable is static and accessible to every instance."
msgstr ""

msgid "Static variables can have type hints, setters and getters::"
msgstr ""

msgid "A base class static variable can also be accessed via a child class::"
msgstr ""

msgid "``@static_unload`` annotation"
msgstr ""

msgid ""
"Since GDScript classes are resources, having static variables in a script "
"prevents it from being unloaded even if there are no more instances of that "
"class and no other references left. This can be important if static "
"variables store large amounts of data or hold references to other project "
"resources, such as scenes. You should clean up this data manually, or use "
"the :ref:`@static_unload <class_@GDScript_annotation_@static_unload>` "
"annotation if static variables don't store important data and can be reset."
msgstr ""

msgid ""
"Currently, due to a bug, scripts are never freed, even if ``@static_unload`` "
"annotation is used."
msgstr ""

msgid ""
"Note that ``@static_unload`` applies to the entire script (including inner "
"classes) and must be placed at the top of the script, before ``class_name`` "
"and ``extends``::"
msgstr ""

msgid "See also `Static functions`_ and `Static constructor`_."
msgstr ""

msgid "Casting"
msgstr "Casting (Typumwandlung)"

msgid ""
"Values assigned to typed variables must have a compatible type. If it's "
"needed to coerce a value to be of a certain type, in particular for object "
"types, you can use the casting operator ``as``."
msgstr ""
"Werte, die typisierten Variablen zugewiesen werden, müssen einen kompatiblen "
"Typ haben. Wenn es erforderlich ist, einen Wert von einem bestimmten Typ zu "
"erzwingen, insbesondere für Objekttypen, können Sie den Casting-Operator "
"``as`` verwenden."

msgid ""
"Casting between object types results in the same object if the value is of "
"the same type or a subtype of the cast type."
msgstr ""
"Das Umwandeln zwischen Objekttypen führt zu demselben Objekt, wenn der Wert "
"vom selben Typ oder einem Untertyp des Umwandlungstyps ist."

msgid ""
"If the value is not a subtype, the casting operation will result in a "
"``null`` value."
msgstr ""
"Wenn der Wert kein Subtyp ist, führt die Casting-Operation zu einem ``null`` "
"-Wert."

msgid ""
"For built-in types, they will be forcibly converted if possible, otherwise "
"the engine will raise an error."
msgstr ""
"Bei eingebauten Typen werden sie nach Möglichkeit zwangsweise konvertiert, "
"da sonst die Engine einen Fehler auslöst."

msgid ""
"Casting is also useful to have better type-safe variables when interacting "
"with the scene tree::"
msgstr ""
"Casting ist auch nützlich, um bei der Interaktion mit dem Szenenbaum bessere "
"typsichere Variablen zu haben:"

msgid "Constants"
msgstr "Konstanten"

msgid ""
"Constants are values you cannot change when the game is running. Their value "
"must be known at compile-time. Using the ``const`` keyword allows you to "
"give a constant value a name. Trying to assign a value to a constant after "
"it's declared will give you an error."
msgstr ""
"Konstanten sind Werte, die Sie nicht ändern können während das Spiel läuft, "
"ihr Wert muss zur Kompilierungszeit bekannt sein. Mit dem Schlüsselwort "
"``const`` können Sie einem konstanten Wert einen Namen geben. Wenn Sie "
"versuchen, einer Konstanten nach ihrer Deklaration einen Wert zuzuweisen, "
"wird ein Fehler angezeigt."

msgid "We recommend using constants whenever a value is not meant to change."
msgstr ""
"Wir empfehlen die Verwendung von Konstanten, wenn sich ein Wert nicht ändern "
"soll."

msgid ""
"Although the type of constants is inferred from the assigned value, it's "
"also possible to add explicit type specification::"
msgstr ""
"Obwohl der Typ der Konstanten aus dem zugewiesenen Wert abgeleitet wird, ist "
"es auch möglich, eine explizite Typspezifikation hinzuzufügen:"

msgid "Assigning a value of an incompatible type will raise an error."
msgstr ""
"Das Zuweisen eines Werts eines inkompatiblen Typs führt zu einem Fehler."

msgid ""
"You can also create constants inside a function, which is useful to name "
"local magic values."
msgstr ""

#, fuzzy
msgid ""
"Since objects, arrays and dictionaries are passed by reference, constants "
"are \"flat\". This means that if you declare a constant array or dictionary, "
"it can still be modified afterwards. They can't be reassigned with another "
"value though."
msgstr ""
"Da Arrays und Dictionaries als Referenz übergeben werden, sind Konstanten "
"\"flach\". Das heißt, wenn Sie ein konstantes Array oder Dictionary "
"deklarieren, kann es danach noch geändert werden. Sie können jedoch keinem "
"anderen Wert zugewiesen werden."

msgid "Enums"
msgstr "Enumeratoren (Aufzählungen)"

msgid ""
"Enums are basically a shorthand for constants, and are pretty useful if you "
"want to assign consecutive integers to some constant."
msgstr ""
"Enumeratoren sind im Grunde ein Kürzel für Konstanten und sind nützlich, "
"wenn aufeinanderfolgende Ganzzahlen Kontanten zugeordnet werden sollen."

#, fuzzy
msgid ""
"If you pass a name to the enum, it will put all the keys inside a constant :"
"ref:`Dictionary <class_Dictionary>` of that name. This means all constant "
"methods of a dictionary can also be used with a named enum."
msgstr ""
"Wenn Sie der Aufzählung einen Namen übergeben, werden alle Schlüssel in ein "
"konstantes Dictionary dieses Namens aufgenommen."

#, fuzzy
msgid ""
"Keys in a named enum are not registered as global constants. They should be "
"accessed prefixed by the enum's name (``Name.KEY``)."
msgstr ""
"In Godot 3.1 und höher werden Schlüssel in einer benannten Aufzählung nicht "
"als globale Konstanten registriert. Auf sie sollte vor dem Namen der "
"Aufzählung (``Name.KEY``) zugegriffen werden. siehe ein Beispiel unten."

msgid "Functions"
msgstr "Funktionen"

msgid ""
"Functions always belong to a `class <Classes_>`_. The scope priority for "
"variable look-up is: local → class member → global. The ``self`` variable is "
"always available and is provided as an option for accessing class members, "
"but is not always required (and should *not* be sent as the function's first "
"argument, unlike Python)."
msgstr ""
"Funktionen gehören immer zu einer `Klasse <Klassen_>`_. Die Priorität für "
"die variable Suche ist: local → class member → global. Die Variable ``self`` "
"ist immer verfügbar und wird als Option für den Zugriff auf "
"Klassenmitglieder bereitgestellt, wird aber nicht immer benötigt (und sollte "
"im Gegensatz zu Python *nicht* als erstes Argument der Funktion gesendet "
"werden)."

msgid ""
"A function can ``return`` at any point. The default return value is ``null``."
msgstr ""
"Eine Funktion kann jederzeit ``zurückkehren``. Der Standard-Rückgabewert ist "
"``null``."

msgid ""
"If a function contains only one line of code, it can be written on one line::"
msgstr ""

msgid ""
"Functions can also have type specification for the arguments and for the "
"return value. Types for arguments can be added in a similar way to "
"variables::"
msgstr ""
"Funktionen können auch eine Typspezifikation für die Argumente und für den "
"Rückgabewert haben. Typen für Argumente können auf ähnliche Weise wie "
"Variablen hinzugefügt werden:"

msgid ""
"If a function argument has a default value, it's possible to infer the type::"
msgstr ""
"Wenn ein Funktionsargument einen Standardwert hat, kann auf den Typ "
"geschlossen werden:"

msgid ""
"The return type of the function can be specified after the arguments list "
"using the arrow token (``->``)::"
msgstr ""
"Der Rückgabetyp der Funktion kann nach der Argumentliste mit dem Pfeiltoken "
"(``->``) angegeben werden:"

msgid ""
"Functions that have a return type **must** return a proper value. Setting "
"the type as ``void`` means the function doesn't return anything. Void "
"functions can return early with the ``return`` keyword, but they can't "
"return any value."
msgstr ""
"Funktionen mit einem Rückgabetyp **müssen** einen richtigen Wert "
"zurückgeben. Wenn Sie den Typ auf ``void`` setzen, gibt die Funktion nichts "
"zurück. Void-Funktionen können mit dem Schlüsselwort ``return`` frühzeitig "
"beendet werden, sie können jedoch keinen Wert zurückgeben."

msgid ""
"Non-void functions must **always** return a value, so if your code has "
"branching statements (such as an ``if``/``else`` construct), all the "
"possible paths must have a return. E.g., if you have a ``return`` inside an "
"``if`` block but not after it, the editor will raise an error because if the "
"block is not executed, the function won't have a valid value to return."
msgstr ""
"Nicht-void-Funktionen müssen **immer** einen Wert zurückgeben. Wenn Ihr Code "
"also Verzweigungsanweisungen enthält (z.B. ein ``if``/``else``-Konstrukt), "
"müssen alle möglichen Pfade eine Rückgabe haben. Wenn Sie beispielsweise ein "
"``return`` in einem ``if``-Block haben, aber nicht danach, gibt der Editor "
"einen Fehler aus, da die Funktion keinen gültigen Wert für die Rückgabe hat, "
"wenn der Block nicht ausgeführt wird."

msgid "Referencing functions"
msgstr "Funktionen referenzieren"

msgid ""
"Functions are first-class items in terms of the :ref:`Callable "
"<class_Callable>` object. Referencing a function by name without calling it "
"will automatically generate the proper callable. This can be used to pass "
"functions as arguments."
msgstr ""

msgid ""
"Callables **must** be called with the ``call`` method. You cannot use the "
"``()`` operator directly. This behavior is implemented to avoid performance "
"issues on direct function calls."
msgstr ""

#, fuzzy
msgid "Lambda functions"
msgstr "Zufallsfunktionen"

msgid ""
"Lambda functions allow you to declare functions that do not belong to a "
"class. Instead a :ref:`Callable <class_Callable>` object is created and "
"assigned to a variable directly. This can be useful to create Callables to "
"pass around without polluting the class scope."
msgstr ""

msgid "Lambda functions can be named for debugging purposes::"
msgstr ""

msgid ""
"Lambda functions capture the local environment. Local variables are passed "
"by value, so they won't be updated in the lambda if changed in the local "
"function::"
msgstr ""

msgid ""
"The values of the outer scope behave like constants. Therefore, if you "
"declare an array or dictionary, it can still be modified afterwards."
msgstr ""

msgid "Static functions"
msgstr "Statische Funktionen"

#, fuzzy
msgid ""
"A function can be declared static. When a function is static, it has no "
"access to the instance member variables or ``self``. A static function has "
"access to static variables. Also static functions are useful to make "
"libraries of helper functions::"
msgstr ""
"Eine Funktion kann als statisch deklariert werden. Wenn eine Funktion "
"statisch ist, hat sie keinen Zugriff auf die Member der Instanz oder "
"``self``. Dies ist vor allem nützlich um Bibliotheken mit Hilfsfunktionen zu "
"erzeugen:"

msgid "Lambdas cannot be declared static."
msgstr ""

msgid "See also `Static variables`_ and `Static constructor`_."
msgstr ""

msgid "Statements and control flow"
msgstr "Anweisungen und Kontrollstrukturen"

msgid ""
"Statements are standard and can be assignments, function calls, control flow "
"structures, etc (see below). ``;`` as a statement separator is entirely "
"optional."
msgstr ""
"Ausdrücke sind Standard und können Zuweisungen sein, Funktionsaufrufe, "
"Flußkontrollstrukturen, usw. (siehe unten). ``;`` als Trennzeichen zwischen "
"Ausdrücken ist optional."

#, fuzzy
msgid "Expressions"
msgstr "Ausdrucks-Node"

msgid ""
"Expressions are sequences of operators and their operands in orderly "
"fashion. An expression by itself can be a statement too, though only calls "
"are reasonable to use as statements since other expressions don't have side "
"effects."
msgstr ""

msgid ""
"Expressions return values that can be assigned to valid targets. Operands to "
"some operator can be another expression. An assignment is not an expression "
"and thus does not return any value."
msgstr ""

#, fuzzy
msgid "Here are some examples of expressions::"
msgstr "Hier sind einige Beispiele eigener Effekte:"

msgid ""
"Identifiers, attributes, and subscripts are valid assignment targets. Other "
"expressions cannot be on the left side of an assignment."
msgstr ""

msgid "if/else/elif"
msgstr "if/else/elif"

msgid ""
"Simple conditions are created by using the ``if``/``else``/``elif`` syntax. "
"Parenthesis around conditions are allowed, but not required. Given the "
"nature of the tab-based indentation, ``elif`` can be used instead of "
"``else``/``if`` to maintain a level of indentation."
msgstr ""
"Einfache Verzweigungen werden mit dem ``if``/``else``/``elif`` Syntax "
"erstellt. Klammern um die Bedingungen zu setzten ist möglich, aber nicht "
"zwingend notwendig. Angesichts der Tabulator basierten Einrückung kann "
"``elif`` anstelle von ``else``/``if`` verwendet werden, um auf dem selben "
"Level der Einrückung zu bleiben."

msgid "Short statements can be written on the same line as the condition::"
msgstr ""
"Kurze Befehle können auf die selbe Zeile wie die Bedingung geschrieben "
"werden:"

msgid ""
"Sometimes, you might want to assign a different initial value based on a "
"boolean expression. In this case, ternary-if expressions come in handy::"
msgstr ""
"Manchmal möchte man vielleicht anfangs einen anderen Wert zuweisen, "
"basierend auf einem booleschen Ausdruck. Hierfür ist der ternäre IF-Ausdruck "
"nützlich:"

msgid ""
"Ternary-if expressions can be nested to handle more than 2 cases. When "
"nesting ternary-if expressions, it is recommended to wrap the complete "
"expression over multiple lines to preserve readability::"
msgstr ""
"Ternäre-if-Ausdrücke können verschachtelt werden, um mehr als 2 Fälle zu "
"behandeln. Bei der Verschachtelung von ternären if-Ausdrücken wird "
"empfohlen, den gesamten Ausdruck über mehrere Zeilen zu verteilen, um die "
"Lesbarkeit zu erhalten::"

msgid ""
"You may also wish to check if a value is contained within something. You can "
"use an ``if`` statement combined with the ``in`` operator to accomplish "
"this::"
msgstr ""

#, fuzzy
msgid ""
"Simple loops are created by using ``while`` syntax. Loops can be broken "
"using ``break`` or continued using ``continue`` (which skips to the next "
"iteration of the loop without executing any further code in the current "
"iteration):"
msgstr ""
"Einfache Schleifen werden mit dem ``while`` Syntax erstellt. Schleifen kann "
"man mit ``break`` abbrechen, oder mit ``continue`` in den nächsten Durchlauf "
"springen lassen:"

msgid ""
"To iterate through a range, such as an array or table, a *for* loop is used. "
"When iterating over an array, the current array element is stored in the "
"loop variable. When iterating over a dictionary, the *key* is stored in the "
"loop variable."
msgstr ""
"Um einen Bereich wie ein Array oder eine Tabelle zu durchlaufen, wird eine "
"*for* -Schleife verwendet. Beim Iterieren über ein Array wird das aktuelle "
"Array-Element in der Schleifenvariablen gespeichert. Beim Durchlaufen eines "
"Dictionary wird der *Schlüssel* in der Schleifenvariablen gespeichert."

msgid ""
"If you want to assign values on an array as it is being iterated through, it "
"is best to use ``for i in array.size()``."
msgstr ""

msgid ""
"The loop variable is local to the for-loop and assigning to it will not "
"change the value on the array. Objects passed by reference (such as nodes) "
"can still be manipulated by calling methods on the loop variable."
msgstr ""

msgid ""
"A ``match`` statement is used to branch execution of a program. It's the "
"equivalent of the ``switch`` statement found in many other languages, but "
"offers some additional features."
msgstr ""
"Eine ``match``-Anweisung benutzt man, um die Ausführung des Programms zu "
"verzweigen. Sie ist äquivalent zur ``switch``-Anweisung, wie sie aus vielen "
"anderen Sprachen bekannt ist, aber bietet darüberhinaus zusätzliche "
"Funktionalität."

msgid ""
"``match`` is more type strict than the ``==`` operator. For example ``1`` "
"will **not** match ``1.0``. The only exception is ``String`` vs "
"``StringName`` matching: for example, the String ``\"hello\"`` is considered "
"equal to the StringName ``&\"hello\"``."
msgstr ""

#, fuzzy
msgid "Basic syntax"
msgstr "Grundlegende Syntax:"

#, fuzzy
msgid "Crash-course for people who are familiar with switch statements"
msgstr "**Crashkurs für jene, die mit switch-Anweisungen vertraut sind**:"

msgid "Replace ``switch`` with ``match``."
msgstr "Ersetze ``switch`` mit ``match``."

msgid "Remove ``case``."
msgstr "Entferne ``case``."

#, fuzzy
msgid "Remove any ``break``\\ s."
msgstr "Entferne ``case``."

msgid "Change ``default`` to a single underscore."
msgstr "Ändere ``default`` zu einem einzelnen Unterstrich."

#, fuzzy
msgid "Control flow"
msgstr "**Kontrollfluss**:"

#, fuzzy
msgid ""
"The patterns are matched from top to bottom. If a pattern matches, the first "
"corresponding block will be executed. After that, the execution continues "
"below the ``match`` statement."
msgstr ""
"Die Muster werden von oben nach unten abgeglichen. Wenn ein Muster passt, "
"wird der entsprechende Block ausgeführt. Danach setzt die Ausführung unter "
"der ``match``-Anweisung fort. Wenn stattdessen ein Durchrutschen "
"(Fallthrough) gewünscht ist, kann ein ``continue`` benutzt werden, um die "
"Ausführung im aktuellen Block anzuhalten und in die Folgenden zu springen."

msgid ""
"The special ``continue`` behavior in ``match`` supported in 3.x was removed "
"in Godot 4.0."
msgstr ""

#, fuzzy
msgid "The following pattern types are available:"
msgstr "Folgende Methoden sind verfügbar und dokumentiert:"

#, fuzzy
msgid "Literal pattern"
msgstr "Array-Muster"

msgid "Matches a `literal <Literals_>`_::"
msgstr ""

#, fuzzy
msgid "Expression pattern"
msgstr "Expression-Node"

msgid ""
"Matches a constant expression, an identifier, or an attribute access (``A."
"B``)::"
msgstr ""

msgid "Wildcard pattern"
msgstr "Platzhalter-Muster"

msgid "This pattern matches everything. It's written as a single underscore."
msgstr ""
"Dieses Schema passt auf alles. Es wird als einzelner Unterstrich geschrieben."

msgid ""
"It can be used as the equivalent of the ``default`` in a ``switch`` "
"statement in other languages::"
msgstr ""
"Es kann als das Äquivalent genutzt werden von ``default`` in einer "
"``switch``-Anweisung in anderen Sprachen.:"

msgid "Binding pattern"
msgstr "Verbindungs-Muster"

msgid ""
"A binding pattern introduces a new variable. Like the wildcard pattern, it "
"matches everything - and also gives that value a name. It's especially "
"useful in array and dictionary patterns::"
msgstr ""
"Ein Verbindungs-Muster erzeugt eine neue Variable. Wie das Platzhalter-"
"Muster passt es auf alles und gibt diesem Wert einen Namen. Es ist besonders "
"hilfreich beim Feld- und Dictionary-Muster:"

msgid "Array pattern"
msgstr "Array-Muster"

msgid ""
"Matches an array. Every single element of the array pattern is a pattern "
"itself, so you can nest them."
msgstr ""
"Entspricht einem Array. Jedes einzelne Element des Array-Musters ist selbst "
"ein Muster, sodass Sie es verschachteln können."

msgid ""
"The length of the array is tested first, it has to be the same size as the "
"pattern, otherwise the pattern doesn't match."
msgstr ""
"Die Länge des Arrays wird zuerst getestet. Sie muss dieselbe Größe wie das "
"Muster haben, andernfalls stimmt das Muster nicht überein."

msgid ""
"**Open-ended array**: An array can be bigger than the pattern by making the "
"last subpattern ``..``."
msgstr ""
"**Array mit offenem Ende**: Ein Array kann größer als das Muster sein, indem "
"das letzte Untermuster mit ``..`` erstellt wird."

msgid "Every subpattern has to be comma-separated."
msgstr "Jedes Untermuster muss durch Kommas getrennt werden."

msgid "Dictionary pattern"
msgstr "Dictionary-Muster"

msgid ""
"Works in the same way as the array pattern. Every key has to be a constant "
"pattern."
msgstr ""
"Funktioniert auf die gleiche Weise wie das Feld-Muster, jeder Schlüssel muss "
"ein gleichbleibendes Muster haben."

msgid ""
"The size of the dictionary is tested first, it has to be the same size as "
"the pattern, otherwise the pattern doesn't match."
msgstr ""
"Die Größe des Dictionary wird zuerst getestet. Es muss dieselbe Größe wie "
"das Muster haben, andernfalls stimmt das Muster nicht überein."

msgid ""
"**Open-ended dictionary**: A dictionary can be bigger than the pattern by "
"making the last subpattern ``..``."
msgstr ""
"**Dictionary mit offenem Ende**: Ein Dictionary kann größer als das Muster "
"sein, indem das letzte Untermuster mit ``..`` erstellt wird."

msgid "Every subpattern has to be comma separated."
msgstr "Jede Untermuster muss durch ein Komma getrennt werden."

msgid ""
"If you don't specify a value, then only the existence of the key is checked."
msgstr ""
"Falls kein Wert angegeben wird, wird nur die Existenz des Schlüssels "
"überprüft."

msgid "A value pattern is separated from the key pattern with a ``:``."
msgstr "Ein Wertemuster wird durch ein ``:`` vom Schlüsselmuster getrennt."

msgid "Multiple patterns"
msgstr "Vielfach-Muster"

msgid ""
"You can also specify multiple patterns separated by a comma. These patterns "
"aren't allowed to have any bindings in them."
msgstr ""
"Sie können auch mehrere durch Komma getrennte Muster angeben. Diese Muster "
"dürfen keine Bindungen enthalten."

#, fuzzy
msgid "Pattern guards"
msgstr "Ostmari"

msgid ""
"Only one branch can be executed per ``match``. Once a branch is chosen, the "
"rest are not checked. If you want to use the same pattern for multiple "
"branches or to prevent choosing a branch with too general pattern, you can "
"specify a guard expression after the list of patterns with the ``when`` "
"keyword::"
msgstr ""

msgid ""
"If there is no matching pattern for the current branch, the guard expression "
"is **not** evaluated and the patterns of the next branch are checked."
msgstr ""

msgid "If a matching pattern is found, the guard expression is evaluated."
msgstr ""

msgid ""
"If it's true, then the body of the branch is executed and ``match`` ends."
msgstr ""

#, fuzzy
msgid "If it's false, then the patterns of the next branch are checked."
msgstr ""
"Falls kein Wert angegeben wird, wird nur die Existenz des Schlüssels "
"überprüft."

msgid "Classes"
msgstr "Klassen"

msgid ""
"By default, all script files are unnamed classes. In this case, you can only "
"reference them using the file's path, using either a relative or an absolute "
"path. For example, if you name a script file ``character.gd``::"
msgstr ""
"Standardmäßig sind alle Skriptdateien namenlose Klassen. In diesem Fall "
"können Sie sie nur über den Dateipfad referenzieren, entweder über einen "
"relativen oder einen absoluten Pfad. Wenn Sie beispielsweise eine "
"Skriptdatei ``character.gd`` benennen:"

#, fuzzy
msgid "Registering named classes"
msgstr "Skripte als Klassen registrieren"

#, fuzzy
msgid ""
"You can give your class a name to register it as a new type in Godot's "
"editor. For that, you use the ``class_name`` keyword. You can optionally use "
"the ``@icon`` annotation with a path to an image, to use it as an icon. Your "
"class will then appear with its new icon in the editor::"
msgstr ""
"Sie könne Ihrer Klasse einen Name geben, um sie als neuen Typ im Godot-"
"Editor zu registrieren. Dazu verwenden Sie das Schlüsselwort ``class_name``. "
"Optional können Sie ein Komma gefolgt von einem Pfad zu einem Bild "
"hinzufügen, um es als Icon zu verwenden. Ihre Klasse wird dann mit ihrem "
"neuen Icon im Editor erscheinen::"

msgid "Here's a class file example:"
msgstr "Hier ist ein Beispiel für eine Klassendatei:"

msgid ""
"If you want to use ``extends`` too, you can keep both on the same line::"
msgstr ""

#, fuzzy
msgid ""
"Godot initializes non-static variables every time you create an instance, "
"and this includes arrays and dictionaries. This is in the spirit of thread "
"safety, since scripts can be initialized in separate threads without the "
"user knowing."
msgstr ""
"Die Klassensyntax von Godot ist kompakt: Sie kann nur Mitgliedsvariablen "
"oder Funktionen enthalten. Sie können statische Funktionen verwenden, jedoch "
"keine statischen Mitgliedsvariablen. Auf die gleiche Weise initialisiert die "
"Engine jedes Mal Variablen wenn Sie eine Instanz erstellen, einschließlich "
"Arrays und Dictionaries. Dies dient der Thread-Sicherheit, da Skripte in "
"separaten Threads initialisiert werden können, ohne dass der Benutzer dies "
"weiß."

msgid "Inheritance"
msgstr "Vererbung"

msgid "A class (stored as a file) can inherit from:"
msgstr "Eine Klasse (gespeichert als Datei) kann erben von:"

msgid "A global class."
msgstr "Einer globalen Klasse."

msgid "Another class file."
msgstr "Einer anderen Klassendatei."

msgid "An inner class inside another class file."
msgstr "Eine lokale Klasse innerhalb einer anderen Klassendatei."

msgid "Multiple inheritance is not allowed."
msgstr "Mehrfache Vererbung ist nicht erlaubt."

msgid "Inheritance uses the ``extends`` keyword::"
msgstr "Vererbung benutzt das Schlüsselwort ``extends``:"

msgid ""
"If inheritance is not explicitly defined, the class will default to "
"inheriting :ref:`class_RefCounted`."
msgstr ""

msgid ""
"To check if a given instance inherits from a given class, the ``is`` keyword "
"can be used::"
msgstr ""
"Um zu prüfen, ob eine gegebene Instanz von einer gegebenen Klasse erbt, "
"verwendet man das Schlüsselwort ``is``:"

#, fuzzy
msgid ""
"To call a function in a *super class* (i.e. one ``extend``-ed in your "
"current class), use the ``super`` keyword::"
msgstr ""
"Um eine Funktion in einer *übergeordneten Klasse* aufzurufen (d.h. eine "
"``extend``-ed in Ihrer aktuellen Klasse), stellen Sie dem Funktionsnamen ein "
"``.`` vor:"

#, fuzzy
msgid ""
"This is especially useful because functions in extending classes replace "
"functions with the same name in their super classes. If you still want to "
"call them, you can use ``super``::"
msgstr ""
"Dies ist besonders nützlich, da Funktionen in erweiterten Klassen andere "
"Funktionen mit demselben Namen in ihren übergeordneten Klassen ersetzen. "
"Wenn Sie sie weiterhin aufrufen möchten, können Sie ihnen einen ``.`` "
"voranstellen (wie das Schlüsselwort ``super`` in anderen Sprachen):"

msgid ""
"If you need to call a different function from the super class, you can "
"specify the function name with the attribute operator::"
msgstr ""

msgid ""
"One of the common misconceptions is trying to override *non-virtual* engine "
"methods such as ``get_class()``, ``queue_free()``, etc. This is not "
"supported for technical reasons."
msgstr ""

msgid ""
"In Godot 3, you can *shadow* engine methods in GDScript, and it will work if "
"you call this method in GDScript. However, the engine will **not** execute "
"your code if the method is called inside the engine on some event."
msgstr ""

msgid ""
"In Godot 4, even shadowing may not always work, as GDScript optimizes native "
"method calls. Therefore, we added the ``NATIVE_METHOD_OVERRIDE`` warning, "
"which is treated as an error by default. We strongly advise against "
"disabling or ignoring the warning."
msgstr ""

msgid ""
"Note that this does not apply to virtual methods such as ``_ready()``, "
"``_process()`` and others (marked with the ``virtual`` qualifier in the "
"documentation and the names start with an underscore). These methods are "
"specifically for customizing engine behavior and can be overridden in "
"GDScript. Signals and notifications can also be useful for these purposes."
msgstr ""

msgid "Class constructor"
msgstr "Klassen-Konstruktor"

msgid ""
"The class constructor, called on class instantiation, is named ``_init``. If "
"you want to call the base class constructor, you can also use the ``super`` "
"syntax. Note that every class has an implicit constructor that it's always "
"called (defining the default values of class variables). ``super`` is used "
"to call the explicit constructor::"
msgstr ""

msgid "This is better explained through examples. Consider this scenario::"
msgstr ""
"Dies wird besser anhand von Beispielen erklärt. Betrachten Sie dieses "
"Szenario:"

msgid "There are a few things to keep in mind here:"
msgstr "Hier müssen ein paar Sachen berücksichtigt werden:"

#, fuzzy
msgid ""
"If the inherited class (``state.gd``) defines a ``_init`` constructor that "
"takes arguments (``e`` in this case), then the inheriting class (``idle."
"gd``) *must* define ``_init`` as well and pass appropriate parameters to "
"``_init`` from ``state.gd``."
msgstr ""
"Wenn die geerbte Klasse (``State.gd``) einen ``_init``-Konstruktor "
"definiert, der Argumente übernimmt (``e`` in diesem Fall), dann *muss* die "
"vererbende Klasse (``Idle.gd``) ebenfalls ``_init`` definieren und passende "
"Parameter an ``_init`` von ``State.gd`` übergeben."

#, fuzzy
msgid ""
"``idle.gd`` can have a different number of arguments than the base class "
"``state.gd``."
msgstr ""
"``Idle.gd`` kann eine andere Anzahl an Argumenten besitzen als die "
"Basisklasse ``State.gd``."

#, fuzzy
msgid ""
"In the example above, ``e`` passed to the ``state.gd`` constructor is the "
"same ``e`` passed in to ``idle.gd``."
msgstr ""
"Im obigen Beispiel ist das ``e`` im Konstruktor von ``State.gd`` das gleiche "
"wie das ``e`` in ``Idle.gd``."

#, fuzzy
msgid ""
"If ``idle.gd``'s ``_init`` constructor takes 0 arguments, it still needs to "
"pass some value to the ``state.gd`` base class, even if it does nothing. "
"This brings us to the fact that you can pass expressions to the base "
"constructor as well, not just variables, e.g.::"
msgstr ""
"Wenn der ``Idle.gd``'s ``_init`` Konstruktor 0 Argumente annimmt, muss er "
"immer noch irgendeinen Wert an die ```State.gd`` Elternklasse übergeben, "
"selbst wenn sie nichts tut. Das bringt uns zu der Tatsache, dass man auch im "
"Basiskonstruktor Literale übergeben kann, nicht nur Variablen. z.B.:"

#, fuzzy
msgid "Static constructor"
msgstr "Klassen-Konstruktor"

msgid ""
"A static constructor is a static function ``_static_init`` that is called "
"automatically when the class is loaded, after the static variables have been "
"initialized::"
msgstr ""

msgid ""
"A static constructor cannot take arguments and must not return any value."
msgstr ""

msgid "Inner classes"
msgstr "Innere Klassen"

msgid ""
"A class file can contain inner classes. Inner classes are defined using the "
"``class`` keyword. They are instanced using the ``ClassName.new()`` function."
msgstr ""
"Eine Klassendatei kann lokale Klassen beinhalten. Lokale Klassen werden "
"durch das ``class`` Schlüsselwort definiert. Sie werden mithilfe der "
"``Klassenname.new()``-Funktion instanziert."

msgid "Classes as resources"
msgstr "Klassen als Ressourcen"

msgid ""
"Classes stored as files are treated as :ref:`resources <class_GDScript>`. "
"They must be loaded from disk to access them in other classes. This is done "
"using either the ``load`` or ``preload`` functions (see below). Instancing "
"of a loaded class resource is done by calling the ``new`` function on the "
"class object::"
msgstr ""
"Klassen, die als Datei gespeichert sind, werden als :ref:`resources "
"<class_GDScript>` behandelt. Sie müssen von der Festplatte geladen werden, "
"um auf sie in anderen Klassen zuzugreifen. Dies macht man mit den Funktionen "
"``load`` oder ``preload`` (siehe weiter unten). Das Instanzieren einer "
"geladenen Klassenressource erledigt man durch Aufruf der ``new``-Funktion "
"auf dem Klassenobjekt:"

msgid "Exports"
msgstr "Exporte"

msgid ""
"Documentation about exports has been moved to :ref:`doc_gdscript_exports`."
msgstr ""
"Die Dokumentation über Exportieren wurde nach :ref:`doc_gdscript_exports` "
"verschoben."

#, fuzzy
msgid "Properties (setters and getters)"
msgstr "Eigenschaften (set/get)"

#, fuzzy
msgid ""
"Sometimes, you want a class' member variable to do more than just hold data "
"and actually perform some validation or computation whenever its value "
"changes. It may also be desired to encapsulate its access in some way."
msgstr ""
"Es ist oft hilfreich zu wissen, ob sich eine Variable einer Klasse "
"verändert, aus welchen Gründen auch immer. Es ist vielleicht auch "
"wünschenswert sie auf eine gewisse Art vor Zugriffen zu schützen."

msgid ""
"For this, GDScript provides a special syntax to define properties using the "
"``set`` and ``get`` keywords after a variable declaration. Then you can "
"define a code block that will be executed when the variable is accessed or "
"assigned."
msgstr ""

#, fuzzy
msgid "Example::"
msgstr "Beispiel:"

msgid ""
"Unlike ``setget`` in previous Godot versions, the properties setter and "
"getter are **always** called (except as noted below), even when accessed "
"inside the same class (with or without prefixing with ``self.``). This makes "
"the behavior consistent. If you need direct access to the value, use another "
"variable for direct access and make the property code use that name."
msgstr ""

#, fuzzy
msgid "Alternative syntax"
msgstr "Alternativer Ansatz"

msgid ""
"Also there is another notation to use existing class functions if you want "
"to split the code from the variable declaration or you need to reuse the "
"code across multiple properties (but you can't distinguish which property "
"the setter/getter is being called for)::"
msgstr ""

#, fuzzy
msgid "This can also be done in the same line::"
msgstr "Dies kann auch in der gleichen Zeile geschehen."

msgid ""
"The setter and getter must use the same notation, mixing styles for the same "
"variable is not allowed."
msgstr ""

msgid ""
"You cannot specify type hints for *inline* setters and getters. This is done "
"on purpose to reduce the boilerplate. If the variable is typed, then the "
"setter's argument is automatically of the same type, and the getter's return "
"value must match it. Separated setter/getter functions can have type hints, "
"and the type must match the variable's type or be a wider type."
msgstr ""

msgid "When setter/getter is not called"
msgstr ""

msgid ""
"When a variable is initialized, the value of the initializer will be written "
"directly to the variable. Including if the ``@onready`` annotation is "
"applied to the variable."
msgstr ""

msgid ""
"Using the variable's name to set it inside its own setter or to get it "
"inside its own getter will directly access the underlying member, so it "
"won't generate infinite recursion and saves you from explicitly declaring "
"another variable::"
msgstr ""

#, fuzzy
msgid "This also applies to the alternative syntax::"
msgstr "Dies ist jedoch die erforderliche Syntax:"

msgid ""
"The exception does **not** propagate to other functions called in the setter/"
"getter. For example, the following code **will** cause an infinite "
"recursion::"
msgstr ""

msgid "Tool mode"
msgstr "Werkzeug-Modus"

#, fuzzy
msgid ""
"By default, scripts don't run inside the editor and only the exported "
"properties can be changed. In some cases, it is desired that they do run "
"inside the editor (as long as they don't execute game code or manually avoid "
"doing so). For this, the ``@tool`` annotation exists and must be placed at "
"the top of the file::"
msgstr ""
"Standardmäßig werden Skripte nicht innerhalb des Editors ausgeführt und nur "
"die exportierten Eigenschaften können geändert werden. In einigen Fällen ist "
"es erwünscht, dass sie innerhalb des Editors ausgeführt werden (solange sie "
"keinen Spielcode ausführen oder dies manuell vermeiden). Hierfür existiert "
"das Schlüsselwort ``tool``, das an den Anfang der Datei gesetzt werden muss:"

msgid "See :ref:`doc_running_code_in_the_editor` for more information."
msgstr "Siehe :ref:`doc_running_code_in_the_editor` für weitere Informationen."

msgid ""
"Be cautious when freeing nodes with ``queue_free()`` or ``free()`` in a tool "
"script (especially the script's owner itself). As tool scripts run their "
"code in the editor, misusing them may lead to crashing the editor."
msgstr ""
"Seien Sie vorsichtig, wenn Sie Nodes mit ``queue_free()`` oder ``free()`` in "
"einem tool Skript freigeben (insbesondere der Eigentümer des Skripts "
"selbst). Da tool Skripte ihren Code im Editor ausführen, kann ihr Missbrauch "
"zum Absturz des Editors führen."

msgid "Memory management"
msgstr "Speicher-Management"

msgid ""
"Godot implements reference counting to free certain instances that are no "
"longer used, instead of a garbage collector, or requiring purely manual "
"management. Any instance of the :ref:`class_RefCounted` class (or any class "
"that inherits it, such as :ref:`class_Resource`) will be freed automatically "
"when no longer in use. For an instance of any class that is not a :ref:"
"`class_RefCounted` (such as :ref:`class_Node` or the base :ref:"
"`class_Object` type), it will remain in memory until it is deleted with "
"``free()`` (or ``queue_free()`` for Nodes)."
msgstr ""

msgid ""
"If a :ref:`class_Node` is deleted via ``free()`` or ``queue_free()``, all of "
"its children will also recursively be deleted."
msgstr ""

msgid ""
"To avoid reference cycles that can't be freed, a :ref:`class_WeakRef` "
"function is provided for creating weak references, which allow access to the "
"object without preventing a :ref:`class_RefCounted` from freeing. Here is an "
"example:"
msgstr ""

msgid ""
"Alternatively, when not using references, the "
"``is_instance_valid(instance)`` can be used to check if an object has been "
"freed."
msgstr ""
"Wenn keine Referenzen verwendet werden, kann alternativ mit "
"``is_instance_valid(instance)`` überprüft werden, ob ein Objekt freigegeben "
"wurde."

msgid "Signals"
msgstr "Signale"

msgid ""
"Signals are a tool to emit messages from an object that other objects can "
"react to. To create custom signals for a class, use the ``signal`` keyword."
msgstr ""
"Signale sind ein Werkzeug zum Senden von Nachrichten von einem Objekt, auf "
"die andere Objekte reagieren können. Verwenden Sie das Schlüsselwort "
"``signal``, um benutzerdefinierte Signale für eine Klasse zu erstellen."

msgid ""
"Signals are a `Callback <https://en.wikipedia.org/wiki/"
"Callback_(computer_programming)>`_ mechanism. They also fill the role of "
"Observers, a common programming pattern. For more information, read the "
"`Observer tutorial <https://gameprogrammingpatterns.com/observer.html>`_ in "
"the Game Programming Patterns ebook."
msgstr ""
"Signale sind eine `Rückruffunktion <https://de.wikipedia.org/wiki/"
"R%C3%BCckruffunktion>` _ Mechanismus. Sie übernehmen auch die Rolle der "
"Beobachter, ein gängiges Programmiermuster. Weitere Informationen finden Sie "
"im `Observer-Tutorial (in englischer Sprache)<https://"
"gameprogrammingpatterns.com/observer.html>` _ im E-Book Game Programming "
"Patterns."

#, fuzzy
msgid ""
"You can connect these signals to methods the same way you connect built-in "
"signals of nodes like :ref:`class_Button` or :ref:`class_RigidBody3D`."
msgstr ""
"Sie können diese Signale auf dieselbe Weise mit Methoden verbinden, wie Sie "
"integrierte Signale von Nodes wie :ref:`class_Button` oder :ref:` "
"class_RigidBody` verbinden."

#, fuzzy
msgid ""
"In the example below, we connect the ``health_depleted`` signal from a "
"``Character`` node to a ``Game`` node. When the ``Character`` node emits the "
"signal, the game node's ``_on_character_health_depleted`` is called::"
msgstr ""
"Im folgenden Beispiel verbinden wir das Signal \"health_depleted\" von einem "
"\"Character\" -Node mit einem \"Game\" -Node. Wenn der ``Character``-Node "
"das Signal aussendet, wird des Game "
"nodes``_on_Character_health_depleted``genannt :"

msgid "You can emit as many arguments as you want along with a signal."
msgstr ""
"Sie können so viele Argumente wie Sie möchten zusammen mit einem Signal "
"ausgeben."

msgid ""
"Here is an example where this is useful. Let's say we want a life bar on "
"screen to react to health changes with an animation, but we want to keep the "
"user interface separate from the player in our scene tree."
msgstr ""
"Hier ist ein Beispiel, wo dies nützlich ist. Angenommen, wir möchten, dass "
"eine Lebensleiste auf dem Bildschirm mit einer Animation auf "
"Gesundheitsänderungen reagiert, aber wir möchten in unserem Szenenbaum die "
"Benutzeroberfläche vom Spieler getrennt halten."

#, fuzzy
msgid ""
"In our ``character.gd`` script, we define a ``health_changed`` signal and "
"emit it with :ref:`Signal.emit() <class_Signal_method_emit>`, and from a "
"``Game`` node higher up our scene tree, we connect it to the ``Lifebar`` "
"using the :ref:`Signal.connect() <class_Signal_method_connect>` method::"
msgstr ""
"In unserem ``Character.gd`` -Skript definieren wir ein ``health_changed`` "
"Signal und senden es mit :ref:`Object.emit_signal() "
"<class_Object_method_emit_signal>` und von einem ``Game`` Node weiter oben "
"im Szenenbaum, wir verbinden ihn mit der ``Lebensleiste`` mit der :ref:"
"`Object.connect() <class_Object_method_connect>` Methode:"

msgid ""
"In the ``Game`` node, we get both the ``Character`` and ``Lifebar`` nodes, "
"then connect the character, that emits the signal, to the receiver, the "
"``Lifebar`` node in this case."
msgstr ""
"Im ``Game``-Node erhalten wir sowohl den ``Charakter`` als auch den "
"``Lebensleiste``-Node und verbinden dann den Charakter, der das Signal "
"aussendet, mit dem Empfänger, in diesem Fall dem ``Lebensleiste``-Node ."

msgid ""
"This allows the ``Lifebar`` to react to health changes without coupling it "
"to the ``Character`` node."
msgstr ""
"Dies ermöglicht es der ``Lifebar``, auf Gesundheitsänderungen zu reagieren, "
"ohne sie mit dem ``Character``-Knoten zu koppeln."

msgid ""
"You can write optional argument names in parentheses after the signal's "
"definition::"
msgstr ""
"Sie können optionale Argumentnamen in Klammern nach der Definition des "
"Signals schreiben:"

msgid ""
"These arguments show up in the editor's node dock, and Godot can use them to "
"generate callback functions for you. However, you can still emit any number "
"of arguments when you emit signals; it's up to you to emit the correct "
"values."
msgstr ""
"Diese Argumente werden im Node-Dock des Editors angezeigt und Godot kann sie "
"verwenden um Rückruffunktionen für Sie zu generieren. Sie können jedoch "
"immer noch eine beliebige Anzahl von Argumenten angeben, wenn Sie Signale "
"ausgeben. Es liegt an Ihnen die richtigen Werte auszugeben."

msgid ""
"GDScript can bind an array of values to connections between a signal and a "
"method. When the signal is emitted, the callback method receives the bound "
"values. These bound arguments are unique to each connection, and the values "
"will stay the same."
msgstr ""
"GDScript kann ein Array von Werten an Verbindungen zwischen einem Signal und "
"einer Methode binden. Wenn das Signal ausgegeben wird, empfängt die "
"Rückrufmethode die gebundenen Werte. Diese gebundenen Argumente sind für "
"jede Verbindung einzigartig aber die Werte bleiben gleich."

msgid ""
"You can use this array of values to add extra constant information to the "
"connection if the emitted signal itself doesn't give you access to all the "
"data that you need."
msgstr ""
"Mit diesem Wertearray können Sie der Verbindung zusätzliche konstante "
"Informationen hinzufügen, wenn das ausgegebene Signal selbst Ihnen keinen "
"Zugriff auf alle benötigten Daten bietet."

msgid ""
"Building on the example above, let's say we want to display a log of the "
"damage taken by each character on the screen, like ``Player1 took 22 damage."
"``. The ``health_changed`` signal doesn't give us the name of the character "
"that took damage. So when we connect the signal to the in-game console, we "
"can add the character's name in the binds array argument::"
msgstr ""
"Aufbauend auf dem obigen Beispiel möchten wir ein Protokoll des von jedem "
"Charakter erlittenen Schadens auf dem Bildschirm anzeigen, z.B. ``Spieler1 "
"hat 22 Schaden erlitten``. Das ``health_changed`` Signal gibt uns nicht den "
"Namen des Charakters, der Schaden genommen hat. Wenn wir also das Signal mit "
"der In-Game-Konsole verbinden, können wir den Namen des Charakters in das "
"Argument binds array einfügen:"

msgid ""
"Our ``BattleLog`` node receives each element in the binds array as an extra "
"argument::"
msgstr ""
"Unser ``BattleLog`` -Node empfängt jedes Element im Binds-Array als "
"zusätzliches Argument :"

#, fuzzy
msgid "Awaiting for signals or coroutines"
msgstr "Originalinhalt suchen"

msgid ""
"The ``await`` keyword can be used to create `coroutines <https://en."
"wikipedia.org/wiki/Coroutine>`_ which wait until a signal is emitted before "
"continuing execution. Using the ``await`` keyword with a signal or a call to "
"a function that is also a coroutine will immediately return the control to "
"the caller. When the signal is emitted (or the called coroutine finishes), "
"it will resume execution from the point on where it stopped."
msgstr ""

msgid ""
"For example, to stop execution until the user presses a button, you can do "
"something like this::"
msgstr ""

msgid ""
"In this case, the ``wait_confirmation`` becomes a coroutine, which means "
"that the caller also needs to await for it::"
msgstr ""

msgid ""
"Note that requesting a coroutine's return value without ``await`` will "
"trigger an error::"
msgstr ""

msgid ""
"However, if you don't depend on the result, you can just call it "
"asynchronously, which won't stop execution and won't make the current "
"function a coroutine::"
msgstr ""

msgid ""
"If you use await with an expression that isn't a signal nor a coroutine, the "
"value will be returned immediately and the function won't give the control "
"back to the caller::"
msgstr ""

msgid ""
"This also means that returning a signal from a function that isn't a "
"coroutine will make the caller await on that signal::"
msgstr ""

msgid ""
"Unlike ``yield`` in previous Godot versions, you cannot obtain the function "
"state object. This is done to ensure type safety. With this type safety in "
"place, a function cannot say that it returns an ``int`` while it actually "
"returns a function state object during runtime."
msgstr ""

msgid "Assert keyword"
msgstr "Assert Schlüsselwort"

msgid ""
"The ``assert`` keyword can be used to check conditions in debug builds. "
"These assertions are ignored in non-debug builds. This means that the "
"expression passed as argument won't be evaluated in a project exported in "
"release mode. Due to this, assertions must **not** contain expressions that "
"have side effects. Otherwise, the behavior of the script would vary "
"depending on whether the project is run in a debug build."
msgstr ""
"Das ``behaupten`` Schlüsselwort kann verwendet werden, um Bedingungen im "
"Debug-Builds zu überprüfen. Diese Behauptungen werden in Nicht-Debug-Builds "
"ignoriert. Dies bedeutet, dass der als Argument übergebene Ausdruck in einem "
"Release-Modus exportierten Projekt nicht ausgewertet wird. Aus diesem Grund "
"dürfen Behauptungen **keine** Ausdrücke enthalten, die Nebenwirkungen haben. "
"Andernfalls hängt das Verhalten des Skripts davon ab, ob das Projekt in "
"einem Debug-Build ausgeführt wird."

msgid ""
"When running a project from the editor, the project will be paused if an "
"assertion error occurs."
msgstr ""
"Wenn Sie ein Projekt über den Editor ausführen, wird das Projekt angehalten, "
"wenn ein Behauptung Fehler auftritt."

msgid ""
"You can optionally pass a custom error message to be shown if the assertion "
"fails::"
msgstr ""

msgid "Translation status"
msgstr "Übersetzungsstatus"
