# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 15:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/editor/unity_to_godot.rst:8
msgid "From Unity to Godot Engine"
msgstr "Von Unity zur Godot Engine"

#: ../../docs/getting_started/editor/unity_to_godot.rst:10
msgid ""
"This guide provides an overview of Godot Engine from the viewpoint of a "
"Unity user, and aims to help you migrate your existing Unity experience into "
"the world of Godot."
msgstr ""
"Dieses Handbuch bietet einen Überblick über die Godot Engine aus der Sicht "
"eines Unity-Benutzers und soll Ihnen helfen, Ihre vorhandene Unity-Erfahrung "
"in die Welt von Godot zu migrieren."

#: ../../docs/getting_started/editor/unity_to_godot.rst:15
msgid ""
"This article talks about older versions of Unity. Nestable prefabs ('Nested "
"prefabs') were added to Unity 2018.3. Nestable prefabs are analogous to "
"Godot's scenes, and allow a more Godot-like approach to scene organization."
msgstr ""
"Dieser Artikel geht auf ältere Versionen von Unity ein. Verschachtelte "
"Vorlagen ('Nested Prefabs') wurden in Unity 2018.3 hinzugefügt und sind "
"vergleichbar mit Szenen in Godot, sie erlauben somit eine Godot-ähnliche "
"Herangehensweise der Szenen-Organisation."

#: ../../docs/getting_started/editor/unity_to_godot.rst:18
msgid "Differences"
msgstr "Unterschiede"

#: ../../docs/getting_started/editor/unity_to_godot.rst:21
msgid "Unity"
msgstr "Unity"

#: ../../docs/getting_started/editor/unity_to_godot.rst:21
msgid "Godot"
msgstr "Godot"

#: ../../docs/getting_started/editor/unity_to_godot.rst:23
msgid "License"
msgstr "Lizenz"

#: ../../docs/getting_started/editor/unity_to_godot.rst:23
msgid ""
"Proprietary, closed, free license with revenue caps and usage restrictions"
msgstr ""
"Proprietäre, geschlossene, kostenlose Lizenz mit Umsatzobergrenzen und "
"Nutzungsbeschränkungen"

#: ../../docs/getting_started/editor/unity_to_godot.rst:23
msgid "MIT license, free and fully open source without any restriction"
msgstr ""
"MIT-Lizenz, kostenlos und gänzlich Open-Source ohne jegliche Beschränkungen"

#: ../../docs/getting_started/editor/unity_to_godot.rst:25
msgid "OS (editor)"
msgstr "Betriebsystem (Editor)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:25
msgid "Windows, macOS, Linux"
msgstr "Windows, MacOS, Linux"

#: ../../docs/getting_started/editor/unity_to_godot.rst:25
msgid "Windows, macOS, X11 (Linux, \\*BSD)"
msgstr "Windows, MacOS, X11 (Linux, \\*BSD)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:27
msgid "OS (export)"
msgstr "OS (export)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:27
msgid "**Desktop:** Windows, macOS, Linux"
msgstr "**Desktop:** Windows, MacOS, Linux"

#: ../../docs/getting_started/editor/unity_to_godot.rst:28
msgid "**Mobile:** Android, iOS, Windows Phone, Tizen"
msgstr "**Mobile:** Android, iOS, Windows Phone, Tizen"

#: ../../docs/getting_started/editor/unity_to_godot.rst:29
msgid "**Web:** WebAssembly or asm.js"
msgstr "**Web:** WebAssembly oder asm.js"

#: ../../docs/getting_started/editor/unity_to_godot.rst:30
msgid "**Consoles:** PS4, PS Vita, Xbox One, Xbox 360, Wii U, Nintendo 3DS"
msgstr "**Konsolen:** PS4, PS Vita, Xbox One, Xbox 360, Wii U, Nintendo 3DS"

#: ../../docs/getting_started/editor/unity_to_godot.rst:31
msgid ""
"**VR:** Oculus Rift, SteamVR, Google Cardboard, PlayStation VR, Gear VR, "
"HoloLens"
msgstr ""
"**VR:** Oculus Rift, SteamVR, Google Cardboard, Playstation VR, Gear VR, "
"HoloLens"

#: ../../docs/getting_started/editor/unity_to_godot.rst:32
msgid "**TV:** Android TV, Samsung SMART TV, tvOS"
msgstr "**TV:** Android TV, Samsung SMART TV, tvOS"

#: ../../docs/getting_started/editor/unity_to_godot.rst:27
msgid "**Desktop:** Windows, macOS, X11"
msgstr "**Desktop:** Windows, MacOS, X11"

#: ../../docs/getting_started/editor/unity_to_godot.rst:28
msgid "**Mobile:** Android, iOS"
msgstr "**Mobil:** Android, iOS"

#: ../../docs/getting_started/editor/unity_to_godot.rst:29
msgid "**Web:** WebAssembly"
msgstr "**Web:** WebAssembly"

#: ../../docs/getting_started/editor/unity_to_godot.rst:30
msgid "**Console:** See :ref:`doc_consoles`"
msgstr "**Konsolen:** Siehe :ref:`doc_consoles`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:31
msgid "**VR:** Oculus Rift, SteamVR"
msgstr "**VR:** Oculus Rift, SteamVR"

#: ../../docs/getting_started/editor/unity_to_godot.rst:34
msgid "Scene system"
msgstr "Szenensystem"

#: ../../docs/getting_started/editor/unity_to_godot.rst:34
msgid "Component/Scene (GameObject > Component)"
msgstr "Komponente/Szene (SpielObjekt > Komponente)"

#: ../../docs/getting_started/editor/unity_to_godot.rst:35
msgid "Prefabs"
msgstr "Vorgefertigtes"

#: ../../docs/getting_started/editor/unity_to_godot.rst:34
msgid ""
":ref:`Scene tree and nodes <doc_scenes_and_nodes>`, allowing scenes to be "
"nested and/or inherit other scenes"
msgstr ""
"Mittels:ref:`Szenenbaum und Nodes <doc_scenes_and_nodes>`können Szenen in "
"andere Szenen eingebettet und/oder vererbt werden"

#: ../../docs/getting_started/editor/unity_to_godot.rst:37
msgid "Third-party tools"
msgstr "Third-Party Werkzeuge"

#: ../../docs/getting_started/editor/unity_to_godot.rst:37
msgid "Visual Studio or VS Code"
msgstr "Visual Studio oder VS Code"

#: ../../docs/getting_started/editor/unity_to_godot.rst:37
msgid ":ref:`External editors are possible <doc_external_editor>`"
msgstr ":ref:`Externe Editoren sind möglich <doc_external_editor>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:38
msgid ":ref:`Android SDK for Android export <doc_exporting_for_android>`"
msgstr ":ref:`Android SDK für den Android export <doc_exporting_for_android>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:40
msgid "Notable advantages"
msgstr "Bemerkenswerte Vorteile"

#: ../../docs/getting_started/editor/unity_to_godot.rst:40
msgid "Huge community"
msgstr "Gigantische Gemeinschaft"

#: ../../docs/getting_started/editor/unity_to_godot.rst:41
msgid "Large assets store"
msgstr "Großer Assets-Laden"

#: ../../docs/getting_started/editor/unity_to_godot.rst:40
msgid "Scene System"
msgstr "Szenen-System"

#: ../../docs/getting_started/editor/unity_to_godot.rst:41
msgid ":ref:`Animation Pipeline <doc_animations>`"
msgstr ":ref:`Animations-Pipeline <doc_animations>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:42
msgid ":ref:`Easy to write Shaders <doc_shading_language>`"
msgstr ":ref:`Einfach zu schreibende Shader <doc_shading_language>`"

#: ../../docs/getting_started/editor/unity_to_godot.rst:43
msgid "Debug on Device"
msgstr "Auf Gerät debuggen"

#: ../../docs/getting_started/editor/unity_to_godot.rst:50
msgid "The editor"
msgstr "Der Editor"

#: ../../docs/getting_started/editor/unity_to_godot.rst:52
msgid ""
"Godot Engine provides a rich-featured editor that allows you to build your "
"games. The pictures below display the default layouts of both editors with "
"colored blocks to indicate common functionalities."
msgstr ""
"Die Godot-Engine stellt Ihnen einen funktionsreichen Editor zur Verfügung um "
"die Spiele von morgen zu schaffen. Die Bilder unten zeigen das Standard-"
"Layout beider Editoren mit farbigen Blöcken um die verbreiteten "
"Funktionalitäten anzuzeigen."

#: ../../docs/getting_started/editor/unity_to_godot.rst:58
msgid ""
"While both editors may seem similar, there are many differences below the "
"surface. Both let you organize the project using the filesystem, but Godot's "
"approach is simpler with a single configuration file, minimalist text "
"format, and no metadata. This makes Godot more friendly to VCS systems, such "
"as Git, Subversion, or Mercurial."
msgstr ""
"Während beide Editoren sich ziemlich ähneln, stecken unter der Oberfläche "
"viele Unterschiedlichkeiten. Beide ermöglichen es Ihnen, Ihr Projekt "
"geschickt durch das Dateisystem geordnet und aufgeräumt halten zu können. "
"Doch Godot's Ansatz ist wesentlich einfacher gestaltet mit einer einzigen "
"Konfigurationsdatei, minimalem Textformat, keine Metadaten. Dadurch ist "
"Godot handlicher zu VCS Systemen, wie zum Beispiel Git, Subversion, oder "
"Mercurial."

#: ../../docs/getting_started/editor/unity_to_godot.rst:63
msgid ""
"Godot's Scene panel is similar to Unity's Hierarchy panel but, as each node "
"has a specific function, the approach used by Godot is more visually "
"descriptive. It's easier to understand what a scene does at a glance."
msgstr ""
"Godot's Szenenpanel ist ähnlich zu dem Hierarchie-System Unitys. Doch jedes "
"Node verfügt über eine ganz bestimmte Funktion, dieser Ansatz seitens Godot "
"ist visuell mehr darstellend. Es ist einfacher gestaltet, den Überblick über "
"alles behalten zu können."

#: ../../docs/getting_started/editor/unity_to_godot.rst:67
msgid ""
"The Inspector in Godot is more minimal, it shows only properties. Thanks to "
"this, objects can expose more useful parameters to the user without having "
"to hide functionality in language APIs. As a plus, Godot allows animating "
"any of those properties visually. Changing colors, textures, enumerations, "
"or even links to resources in real-time is possible without needing to write "
"code."
msgstr ""
"Der Inspektor Godots ist minimalistisch aufgebaut, er zeigt lediglich "
"Eigenschaften an. Dank dieser Funktionsweise können Objekte dem Endbenutzer "
"mehr nützliche Parameter preisgeben, ohne Funktionalitäten in Sprach-APIs zu "
"verbergen. Zusätzlich erlaubt Godot es einem, jegliche jener Eigenschaften "
"visuell zu animieren. Sei es das Ändern der Farben, Texturen, Enumerationen, "
"oder selbst Links zu Ressourcen in Echtzeit sind möglich, ohne den Zwang "
"Code dafür schreiben zu müssen."

#: ../../docs/getting_started/editor/unity_to_godot.rst:72
msgid ""
"The Toolbar at the top of the screen is similar in both editors, offering "
"control over project playback. Projects in Godot run in a separate window, "
"rather than inside the editor (but the tree and objects can still be "
"explored in the debugger window)."
msgstr ""
"Die Toolbar oberhalb des Bildschirms ist ähnlich in beiden Editoren "
"vertreten, bieten die volle Kontrolle über die Projekt-Wiedergabe. Projekte "
"in Godot dagegen laufen in seperaten Fenstern, anstelle innerhalb des "
"Editors (der Tree und die Objekte können jedoch immer noch erkundigt werden "
"im Debugger-Fenster)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:76
msgid "This approach has several advantages:"
msgstr "Dieser Ansatz hat diverse Vorteile:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:78
msgid ""
"Running the project and closing it is fast (Unity has to save, run the "
"project, close the project, and then reload the previous state)."
msgstr ""
"Das Projekt abzuspielen und es zu schließen geht schnell (Unity muss dagegen "
"z.B. das Projekt abspeichern, abspielen, schließen, und dann den vorherigen "
"Stand neuladen)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:79
msgid ""
"Live editing is a lot more useful because changes done to the editor take "
"effect immediately in the game and are not lost (nor have to be synced) when "
"the game is closed. This allows fantastic workflows, like creating levels "
"while you play them."
msgstr ""
"Live-Bearbeitung ist um einiges nützlicher da Modifizierungen, getätigt im "
"Editor, im Spiel sofort Wirkung zeigen, und gehen dann nicht verloren (und "
"müssen nicht synchronisiert werden) sobald das Spiel geschlossen wird. Dies "
"erlaubt effiziente Arbeitsweisen, so in etwa wie Levels zu erstellen während "
"Sie sie spielen."

#: ../../docs/getting_started/editor/unity_to_godot.rst:80
msgid "The editor is more stable because the game runs in a separate process."
msgstr ""
"Der Editor ist stabiler da das Spiel als separater Prozess ausgeführt wird."

#: ../../docs/getting_started/editor/unity_to_godot.rst:81
msgid ""
"The running game can be explored from different angles by toggling the "
"\"Camera Override\" button in the editor viewport, which will switch between "
"using the editor view and the game camera view."
msgstr ""
"Das Rennspiel kann von verschiedenen Blickwinkeln aus beobachtet werden "
"durch das Umschalten des \"Camera Override\"-Knopfes im Editor-Viewport, "
"welcher zwischen der Ansicht der Editoransicht und der Spielkamera "
"umschaltet."

#: ../../docs/getting_started/editor/unity_to_godot.rst:83
msgid ""
"Finally, Godot's top toolbar includes a menu for remote debugging. These "
"options allow deployment to a device (connected phone, tablet, or browser "
"via HTML5), and debugging/live editing on it after the game is exported."
msgstr ""
"Godot's oberste Toolbar enthält ein Menü für fernes Debugging. Diese "
"Optionen erlauben die Ausführung auf einem anderen Gerät (ein verbundenes "
"Handy, ein Tablet, aber auch via Browser - HTML5), wie auch das Live-"
"Debugging nachdem das Spiel exportiert wurde."

#: ../../docs/getting_started/editor/unity_to_godot.rst:88
msgid "The scene system"
msgstr "Das Szenensystem"

#: ../../docs/getting_started/editor/unity_to_godot.rst:90
msgid ""
"This is the most important difference between Unity and Godot and the "
"favorite feature of most Godot users."
msgstr ""
"Hierbei handelt es sich um den wichtigsten Unterschied zwischen der Unity- "
"und Godotengine als auch um die meistgemochtesten Features der meisten Godot-"
"Benutzer."

#: ../../docs/getting_started/editor/unity_to_godot.rst:92
msgid ""
"Working on a 'level' in Unity usually means embedding all the required "
"assets in a scene and linking them together with components and scripts."
msgstr ""
"An einem 'Level' in Unity zu arbeiten bedeutet normalerweise all die "
"benötigten Assets in eine Szene einzubinden und sie mit Komponenten und "
"Skripten zu verbinden."

#: ../../docs/getting_started/editor/unity_to_godot.rst:95
msgid ""
"Godot's scene system is superficially similar to Unity. A 'level' consists "
"of a collection of nodes, each with its own purpose: Sprite, Mesh, Light, "
"etc. However, in Godot the nodes are arranged in a tree. Each node can have "
"multiple children, which makes each a subscene of the main scene. This means "
"you can compose a whole scene with different scenes stored in different "
"files."
msgstr ""
"Godot's Szenensystem ist von der Oberfläche her Unity sehr ähnlich. Ein "
"'Level' besteht aus einer Sammlung von Nodes, jedes mit seinem eigenen "
"Nutzen: Sprites, Meshes, Lights, usw. Wie dem auch sei, in Godot sind Nodes "
"in einer Baumstruktur aufgebaut. Jedes Node kann mehrere Unter-Nodes haben, "
"die dann eine Subszene aus der Hauptszene heraus bilden. Dies hat zur Folge "
"dass es durchaus möglich ist, eine ganze Szene mit verschiedenen Szenen "
"zusammenzusetzen, dabei können nämlich Szenen auch in einzelne Dateien "
"gespeichert werden."

#: ../../docs/getting_started/editor/unity_to_godot.rst:98
msgid ""
"For example, think of a platformer level. You would compose it with multiple "
"elements:"
msgstr ""
"Stellen Sie sich zum Beispiel ein Plattformer-Level vor. Sie würden es "
"mithilfe diverser Elemente zusammenstellen:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:100
msgid "Bricks"
msgstr "Bauklötze"

#: ../../docs/getting_started/editor/unity_to_godot.rst:101
msgid "Coins"
msgstr "Münzen"

#: ../../docs/getting_started/editor/unity_to_godot.rst:102
msgid "The player"
msgstr "Der Spieler"

#: ../../docs/getting_started/editor/unity_to_godot.rst:103
msgid "The enemies"
msgstr "Die Gegner"

#: ../../docs/getting_started/editor/unity_to_godot.rst:105
msgid ""
"In Unity, you would put all the GameObjects in the scene: the player, "
"multiple instances of enemies, bricks everywhere to form the ground of the "
"level and then multiple instances of coins all over the level. You would "
"then add various components to each element to link them and add logic in "
"the level: For example, you'd add a BoxCollider2D to all the elements of the "
"scene so that they can collide. This principle is different in Godot."
msgstr ""
"In Unity würden Sie alle SpielObjekte in eine Szene packen: Den Spieler, "
"mehrere Instanzen der Feinde, Bauklötze überfall um den Boden zu definieren, "
"und schlussendlich mehrere Instanzen der Münzen, verteilt auf das gesamte "
"Level. Danach würde man diverse Komponenten zu jedem Element verlinken und "
"Logik in das Level einbauen: Zum Beispiel könnten Sie eine 'BoxCollider2D' "
"zu allen Elementen der Szene hinzufügen, damit diese miteinander kollidieren "
"könnten. Dieses Prinzip ist so in dieser Form nicht in Godot vertreten."

#: ../../docs/getting_started/editor/unity_to_godot.rst:110
msgid ""
"In Godot, you would split your whole scene into three separate, smaller "
"scenes, and instance them in the main scene."
msgstr ""
"In Godot würden Sie Ihre gesamte Szene in drei kleineren, separaten Szenen "
"unterbringen, und sie in der Hauptszene instanziieren."

#: ../../docs/getting_started/editor/unity_to_godot.rst:112
msgid "**A scene for the Player alone.**"
msgstr "**Nur schon für den Spieler an sich eine eigene Szene**"

#: ../../docs/getting_started/editor/unity_to_godot.rst:114
msgid ""
"Consider the player as an element we'd like to use in different parent "
"scenes (for instance 'level' scenes). In our case, the player element needs "
"at least an AnimatedSprite node. This node contains the sprite textures "
"necessary for various animations (for example, a walking animation)."
msgstr ""
"Verstehe den Spieler als ein Element dieses wir gerne in verschiedenen "
"Eltern-Szenen (eigentlich 'Level'-Szenen) verwenden wollen. In unserem Fall "
"benötigt das Spielerelement wenigstens ein 'AnimatedSprite'-Node. Dieser "
"Node-Typ enthält die Sprite-Texturen die benötigt werden für diverse selbst "
"erstelle Animationen (wie zum Beispiel eine \"Stand-, \"Renn-\", \"Attacken-"
"\" Animation)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:116
msgid "**A scene for the Enemy.**"
msgstr "**Eine Szene für den Gegner.**"

#: ../../docs/getting_started/editor/unity_to_godot.rst:118
msgid ""
"An enemy is also an element we'd like to use in several scenes. It's almost "
"the same as the Player node. The only differences are the script (it needs "
"'AI' routines to generate the enemy's behavior) and the sprite textures used "
"by the AnimatedSprite node."
msgstr ""
"Ein Gegner ist ebenso ein Element welches wir gerne in verschiedenen Szenen "
"verwenden wollen. Es ist fast exakt das selbe wie beim 'Spieler-Node'. Die "
"einzig markanten Unterschiede sind Skripte und Sprite Texturen. Ein Gegner-"
"Element benötigt nämlich Pfade (KI-Vorgabenbasiert) um das Feindverhalten "
"abzubilden."

#: ../../docs/getting_started/editor/unity_to_godot.rst:122
msgid "**A Level scene.**"
msgstr "**Eine Level-Szene.**"

#: ../../docs/getting_started/editor/unity_to_godot.rst:124
msgid ""
"A Level scene is composed of Bricks (for platforms), Coins (for the player "
"to collect) and a number of instances of the Enemy scene. Each instance is a "
"node in the Level scene tree. These instances are separate enemies, which "
"initially have shared behavior and appearance as defined in the Enemy scene. "
"You can set different properties for each Enemy node (to change its color, "
"for example)."
msgstr ""
"Eine Level-Szene kann etwa mithilfe von Bauklötzen (für z.B. Plattformen), "
"Münzen (für den Spieler zum Einsammeln), und einer Anzahl von Instanzen "
"einer Gegner-Szene zusammengestellt werden. Jede Instanz ist ein Node in dem "
"Level-Szenenbaum. Diese Instanzen sind separate Gegner, welche ursprünglich "
"ein selbes Verhaltensmuster als auch Aussehen teilen (Gegner-Szene). Sie "
"können verschiedene Eigenschaften für jedes Feind-Node einstellen (um zum "
"Beispiel die Farbe zu ändern)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:128
msgid ""
"4. **A Main scene.** The Main scene would be composed of one root node with "
"2 children: a Player instance node, and a Level instance node. The root node "
"can be anything, generally a \"root\" type such as \"Node\" which is the "
"most global type, or \"Node2D\" (root type of all 2D-related nodes), "
"\"Spatial\" (root type of all 3D-related nodes) or \"Control\" (root type of "
"all GUI-related nodes)."
msgstr ""
"4. **Eine Hauptszene** Die Hauptszene würde zusammengestellt werden mit "
"einem 'Root' (Wurzel-) Node mit zwei Kindern: Einem Spieler-Instanz Node, "
"und einem Level-Instanz Node. Das Root-Node kann alles mögliche sein, "
"normalerweile stellen \"Node\", der globalste Typ, oder \"Node2D\" (Root "
"aller 2D-bezogenen Nodes), \"Spatial\" (Root aller 3D-bezogenen Nodes), oder "
"\"Control\" (Root Typ für alle GUI-verwandten Nodes) den Root dar."

#: ../../docs/getting_started/editor/unity_to_godot.rst:134
msgid ""
"As you can see, every scene is organized as a tree. The same goes for nodes' "
"properties: you don't *add* a collision component to a node to make it "
"collidable like Unity does. Instead, you make this node a *child* of a new "
"specific node that has collision properties. Godot features various "
"collision types nodes, depending on the usage (see the :ref:`Physics "
"introduction <doc_physics_introduction>`)."
msgstr ""
"Wie Sie bereits sehen können ist jede Szene wie ein Baum organisiert. "
"Dasselbe gilt für Node-Eigenschaften: Sie fügen *nicht* eine "
"Kollisionskomponente zu einem Node hinzu, wie Sie es bei Unity tun würden. "
"Anstelle dessen machen Sie jenen Node zum Unterobjekt. Godot stellt diverse "
"Kollisionstypen bereit, abhängig von der Verwendung (siehe :ref:`Einleitung "
"Physik<doc_physics_introduction>`)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:139
msgid ""
"What are the advantages of this system? Wouldn't this system potentially "
"increase the depth of the scene tree? And doesn't Unity already allow you to "
"organize GameObjects by putting them inside empty GameObjects?"
msgstr ""
"Welche Vorteile ergeben sich bei solch einem System? Würde dieses System "
"nicht möglicherweise die Tiefe des Szenenbaumes negativ beeinflussen durch "
"Erhöhung der Anzahl? Und erlaubt es Unity ohnehin nicht schon, SpielObjekte "
"zu organisieren und zwar dadurch, diese in leere SpielObjekte zu packen?"

#: ../../docs/getting_started/editor/unity_to_godot.rst:141
msgid ""
"Godot's system is closer to the well-known object-oriented paradigm: Godot "
"provides a number of nodes which are not clearly \"Game Objects\", but they "
"provide their children with their own capabilities: this is inheritance."
msgstr ""
"1) Das System ist stärker ausgerichtet am Paradigma der objektorientierten "
"Programmierung: Godot bringt eine Reihe an Nodes mit, die in dem Sinne zwar "
"keine \"Game Objects\" darstellen, allerdings erhalten davon abgeleitete "
"Unterobjekte die Eigenschaften und Methoden des Eltern-Nodes: Das ist das "
"Prinzip der Vererbung."

#: ../../docs/getting_started/editor/unity_to_godot.rst:142
msgid ""
"Godot allows the extraction of a subtree of a scene to make it a scene of "
"its own. So if a scene tree gets too deep, it can be split into smaller "
"subtrees. This is better for reusability, as you can include any subtree as "
"a child of any node. Putting multiple GameObjects in an empty GameObject in "
"Unity does not provide the same functionality."
msgstr ""
"Godot gestattet die Extrahierung eines Subbaumes einer Szene um das Ganze zu "
"einer eigenen Szene zu machen. Falls ein Szenenbaum zu tief gehen würde "
"könnte er also in kleinere Subbäume geteilt werden. Das ist eindeutig besser "
"und trägt zur Lesbarkeit bei, so kann man jeden Subbaum in ein Node "
"einbinden. Mehrere SpielObjekte in ein SpielObjekt zu stecken wäre so in der "
"Form in Unity nicht möglich."

#: ../../docs/getting_started/editor/unity_to_godot.rst:145
msgid "Project organization"
msgstr "Projekt Organisation"

#: ../../docs/getting_started/editor/unity_to_godot.rst:149
msgid ""
"There is no perfect project architecture. Any architecture can be made to "
"work in either Unity and Godot."
msgstr ""
"Es gibt keine perfekte Projekt-Architektur. Jede Architektur kann zum laufen "
"gebracht werden, sowohl in Unity als auch in Godot."

#: ../../docs/getting_started/editor/unity_to_godot.rst:152
msgid ""
"However, a common architecture for Unity projects is to have one Assets "
"folder in the root directory that contains various folders, one per type of "
"asset: Audio, Graphics, Models, Materials, Scripts, Scenes, and so on."
msgstr ""
"Wie auch immer, die gebräuchlichste Architektur für Unity Projekte ist es, "
"ein Assets Verzeichnis im Hauptverzeichnis zu haben, in dem alle weiteren "
"Verzeichnisse enthalten sind, jeweils getrennt nach Audio, Grafik, Modelle, "
"Materialen, Scripte, Szenen, usw."

#: ../../docs/getting_started/editor/unity_to_godot.rst:155
msgid ""
"Since Godot allows splitting scenes into smaller scenes, each scene and "
"subscene existing as a file in the project, we recommend organizing your "
"project a bit differently. This wiki provides a page for this: :ref:"
"`doc_project_organization`."
msgstr ""
"Da Godot das Aufteilen von Szenen in kleinere Szenen erlaubt, und jede Szene "
"und Unterszene als eigene Datei innerhalb des Projektes existiert, empfehlen "
"wir das Projekt etwas anders zu organisieren. Dieser Eintrag führt zu einer "
"entsprechende Seite: :ref:`doc_project_organization`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:160
msgid "Where are my prefabs?"
msgstr "Wo sind meine Vorlagen?"

#: ../../docs/getting_started/editor/unity_to_godot.rst:162
msgid ""
"A prefab as provided by Unity is a 'template' element of the scene. It is "
"reusable, and each instance of the prefab that exists in the scene has an "
"existence of its own, but all of them have the same properties as defined by "
"the prefab."
msgstr ""
"Als 'Prefrab' bezeichnet man, genau wie in Unity, eine Art 'Vorlage' der "
"Szene. Es ist wiederverwendbar und jedes dieser Templates, dass sich in der "
"Szene befindet, steht alleine, jedoch haben alle dieselben Eigenschaften wie "
"das Original."

#: ../../docs/getting_started/editor/unity_to_godot.rst:166
msgid ""
"Godot does not provide prefabs as such, but the same functionality is "
"provided by its scene system: The scene system is organized as a tree. Godot "
"allows you to save any subtree of a scene as a scene file. This new scene "
"can then be instanced as many times as you want, as a child of any node. Any "
"change you make to this new, separate scene will be applied to its "
"instances. However, any change you make to the instance will not have any "
"impact on the 'template' scene."
msgstr ""
"Godot bietet keine Vorlagen als solche, aber das Szenensystem bietet die "
"gleiche funktionalität und ist in einer Baumstruktur aufgebaut. Godot "
"erlaubt das speichern von einem Teil dieses Baums als Szenen-Datei. Diese "
"neue Szene kann dann als neues Unterobjekt eines Nodes so oft man möchte "
"eingefügt werden. Jede Änderung an dieser neuen, separaten Szenenvorlage "
"wird an allen genutzten Objekten vorgenommen. Im Gegensatz dazu hat eine "
"Änderung an solch einem Unterobjekt keine Auswirkung auf die VorlagenSzene."

#: ../../docs/getting_started/editor/unity_to_godot.rst:173
msgid ""
"To be precise, you can modify the parameters of an instance in the Inspector "
"panel. The nodes that compose this instance are initially locked. You can "
"unlock them if you need to by right-clicking the instance in the Scene tree "
"and selecting \"Editable children\" in the menu. You don't need to do this "
"to add *new* child nodes to this node. Remember that any new children will "
"belong to the instance, not to the 'template' scene on disk. If you want to "
"add new children to every instance of your 'template' scene, then you should "
"add them in the 'template' scene."
msgstr ""
"Um genau zu sein, können Sie die Parameter einer Instanz in der "
"Inspektorleiste ändern. Die Nodes, aus denen diese Instanz besteht, sind "
"zunächst gesperrt. Sie können sie bei Bedarf entsperren, indem Sie mit der "
"rechten Maustaste auf die Instanz im Szenenbaum klicken und im Menü "
"\"Bearbeitbare untergeordnete Elemente\" auswählen. Sie müssen dies nicht "
"tun, um diesem Node *neue* untergeordnete Nodes hinzuzufügen. Denken Sie "
"daran, dass alle neuen untergeordneten Elemente zur Instanz gehören und "
"nicht zur \"Vorlagenszene\" auf der Festplatte. Wenn Sie jeder Instanz Ihrer "
"\"Vorlagenszene\" neue untergeordnete Elemente hinzufügen möchten, sollten "
"Sie diese in der \"Vorlagenszene\" hinzufügen."

#: ../../docs/getting_started/editor/unity_to_godot.rst:183
msgid "Glossary correspondence"
msgstr "Glossar Korrespondenz"

#: ../../docs/getting_started/editor/unity_to_godot.rst:185
msgid "GameObject -> Node"
msgstr "SpielObject (GameObject) -> Node"

#: ../../docs/getting_started/editor/unity_to_godot.rst:186
msgid "Add a component -> Inheriting"
msgstr "Füge eine Komponente hinzu -> Vererbung"

#: ../../docs/getting_started/editor/unity_to_godot.rst:187
msgid "Prefab -> Reusable Scene file"
msgstr "Prefab -> Wiederverwendbare Szenendatei"

#: ../../docs/getting_started/editor/unity_to_godot.rst:191
msgid "Scripting: GDScript, C# and Visual Script"
msgstr "Skripting: GDScript, C# und VisualScript"

#: ../../docs/getting_started/editor/unity_to_godot.rst:194
msgid "Design"
msgstr "Gestaltung"

#: ../../docs/getting_started/editor/unity_to_godot.rst:196
msgid ""
"Unity supports C#. C# benefits from its integration with Visual Studio and "
"has desirable features such as static typing."
msgstr ""
"Unity unterstützt C#. C# profitiert von der Integration seitens Visual "
"Studios und bietet begehrenswerte Features wie Static Typing."

#: ../../docs/getting_started/editor/unity_to_godot.rst:198
msgid ""
"Godot provides its own scripting language, :ref:`GDScript <doc_scripting>` "
"as well as support for :ref:`Visual Script <toc-learn-scripting-"
"visual_script>` and :ref:`C# <doc_c_sharp>`. GDScript borrows its syntax "
"from Python, but is not related to it. If you wonder about the reasoning for "
"a custom scripting language, please read the :ref:`doc_gdscript` and :ref:"
"`doc_faq` pages. GDScript is strongly attached to the Godot API and doesn't "
"take long to learn: Between one evening for an experienced programmer and a "
"week for a complete beginner."
msgstr ""
"Godot bietet eine eigene Skriptsprache, :ref:`GDScript <doc_scripting>` "
"sowie auch Support für :ref:`VisualScript <toc-learn-scripting-"
"visual_script>` und :ref:`C# <doc_c_sharp>`. GDScript hat einen ähnlichen "
"Aufbau wie Python, beide sind aber nicht miteinander verwand.Falls Sie sich "
"wundern wieso eine eigene Skriptsprache verwendet wird, siehe hier :ref:"
"`doc_gdscript` and :ref:`doc_faq`. GDScript ist stark mit der Godot API "
"verknüpft und ist einfach zu erlernen: etwa einen Abend für einen erfahrenen "
"Programmierer und eine Woche für einen Anfänger."

#: ../../docs/getting_started/editor/unity_to_godot.rst:204
msgid ""
"Unity allows you to attach as many scripts as you want to a GameObject. Each "
"script adds a behavior to the GameObject: For example, you can attach a "
"script so that it reacts to the player's controls, and another that controls "
"its specific game logic."
msgstr ""
"Unity erlaubt es mehrere Skripte an ein GameObject anzufügen. Jedes Skript "
"ist für ein bestimmtes Verhalten des GameObjects zuständig: Zum Beispiel "
"kann ein Skript auf die Spielereingabe reagieren und ein anderes Skript "
"steuert die spezielle Spiellogik."

#: ../../docs/getting_started/editor/unity_to_godot.rst:208
msgid ""
"In Godot, you can only attach one script per node. You can use either an "
"external GDScript file or include the script directly in the node. If you "
"need to attach more scripts to one node, then you may consider two "
"solutions, depending on your scene and on what you want to achieve:"
msgstr ""
"In Godot kann nur ein Skript pro Node angehängt werden. Es kann entweder ein "
"externes GDSkript genutzt werden, oder dies wird direkt im entsprechendem "
"Node eingefügt. Falls es nötig sein sollte mehrere Skripte an einen einzigen "
"Node zu hängen, hat man zwei Möglichkeiten, abhängig von der Szene und was "
"man erreichen möchte:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:212
msgid ""
"either add a new node between your target node and its current parent, then "
"add a script to this new node."
msgstr ""
"füge ein neues Node zwischen Zielnode und aktuellem Parent-Node hinzu, dann "
"hefte ein Skript an dieses neue Node an."

#: ../../docs/getting_started/editor/unity_to_godot.rst:213
msgid ""
"or, you can split your target node into multiple children and attach one "
"script to each of them."
msgstr ""
"oder Sie teilen Ihr Ziel-Node in mehrere Unterobjekte und heften dann ein "
"Skript an jedes davon an."

#: ../../docs/getting_started/editor/unity_to_godot.rst:215
msgid ""
"As you can see, it can be easy to turn a scene tree to a mess. Consider "
"splitting any complicated scene into multiple, smaller branches."
msgstr ""
"Wie Sie sehen können, kann es einfach sein, einen Szenenbaum in ein Chaos zu "
"verwandeln. Teilen Sie eine komplizierte Szene in mehrere kleinere Zweige "
"auf."

#: ../../docs/getting_started/editor/unity_to_godot.rst:218
msgid "Connections: groups and signals"
msgstr "Verbindungen: Gruppen und Signale"

#: ../../docs/getting_started/editor/unity_to_godot.rst:220
msgid ""
"You can control nodes by accessing them via script and calling built-in or "
"user-defined functions on them. You can also place nodes in a group and call "
"functions on all nodes in this group. See more in the :ref:`scripting "
"documentation <doc_scripting_continued>`."
msgstr ""
"Sie können Nodes handhaben durch den Zugriff auf sie durch ein angehängtes "
"Skript, oder rufe die eingebauten benutzerdefinierten Funktionen in ihnen "
"auf. Sie können also Nodes in eine Gruppe platzieren und dann Funktionen in "
"allen Nodes dieser Gruppe aufrufen. Mehr dazu unter: :ref:`scripting "
"documentation <doc_scripting_continued>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:225
msgid ""
"Nodes can send a signal when a specified action occurs. A signal can be set "
"to call any function. You can define custom signals and specify when they "
"are triggered. See more in the :ref:`signals documentation "
"<doc_gdscript_signals>`."
msgstr ""
"Nodes können ein Signal senden falls bestimmte Aktionen ausgelöst werden. "
"Ein Signal kann eingerichtet werden jede Funktion aufzurufen. Sie können "
"auch eigene Signale definieren und spezifizieren wann diese ausgelöst werden "
"sollen. Siehe mehr unter :ref:`Signal-Dokumentation <doc_gdscript_signals>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:230
msgid "Script serialization"
msgstr "Skript-Serialisierung"

#: ../../docs/getting_started/editor/unity_to_godot.rst:232
msgid "Unity can handle script serialization in two ways:"
msgstr "Unity kann die Skript-Serialisierung auf zwei Wege leisten:"

#: ../../docs/getting_started/editor/unity_to_godot.rst:234
msgid ""
"Implicit: All public fields in a class are automatically serialized if the "
"type is a serializable type (``Dictionary`` is not serializable)."
msgstr ""
"Implizit: Alle öffentlichen Felder einer Klasse werden automatisch "
"serialisiert falls der Typ auch wirklich serialisierbar ist. (``Ein "
"Dictionary`` ist z.B. nicht serialisierbar)."

#: ../../docs/getting_started/editor/unity_to_godot.rst:235
msgid ""
"Explicit: Non-public fields can be serialized using the ``[SerializeField]`` "
"attribute."
msgstr ""
"Explizit: Nicht-öffentliche Felder können serialisiert werden durch der "
"Benützung des ``[SerializeField]`` Attribute."

#: ../../docs/getting_started/editor/unity_to_godot.rst:237
msgid ""
"Godot also has a built-in script serialization system, but it works only "
"explicitly. You can serialize any serializable type (:ref:`built-in and "
"various engine types <doc_binary_serialization_api>`, including :ref:"
"`class_Array` and :ref:`class_Dictionary`) using the ``export`` keyword. See "
"the :ref:`exports documentation <doc_gdscript_exports>` for details."
msgstr ""
"Godot liefert ebenfalls ein eingebautes Skript-Serialisations-System, aber "
"das funktioniert nur explizit. Jeder serialisierbare Typ (:ref:`built-in and "
"various engine types <doc_binary_serialization_api>`, unter anderem :ref:"
"`class_Array` und :ref:`class_Dictionary`) kann uter Benutzung des Keywords "
"``export`` serialisiert werden. Mehr Details stehen in der :ref:`exports "
"documentation <doc_gdscript_exports>`."

#: ../../docs/getting_started/editor/unity_to_godot.rst:242
msgid ""
"Unity also has a data type called ``ScriptableObject`` used to serialize "
"custom asset objects. Its equivalent in Godot is the base class for all "
"resources: :ref:`class_Resource`. Creating a script that inherits :ref:"
"`class_Resource` will allow you to create custom serializable objects. More "
"information about resources can be found :ref:`here <doc_resources>`."
msgstr ""
"Unity besitzt ebenfalls einen Datentyp namens ``ScriptableObject``, welcher "
"zur Serialisierung von benutzerdefinierten Asset-Objekten dient. Das "
"Äquivalent in Godot ist die Basisklasse für alle Ressourcen: :ref:"
"`class_Resource`. Das Erzeugen eines Skripts, dass von :ref:`class_Resource` "
"erbt, erlaubt das Erstellen von benutzerdefinierten, serialisierbaren "
"Objekte. Weitere Informationen über Ressourcen können :ref:`hier "
"<doc_resources>` gefunden werden."

#: ../../docs/getting_started/editor/unity_to_godot.rst:247
msgid "Using Godot in C++"
msgstr "Verwenden von Godot mit C++"

#: ../../docs/getting_started/editor/unity_to_godot.rst:249
msgid ""
"Godot allows you to develop your project directly in C++ by using its API, "
"which is not possible with Unity at the moment. As an example, you can "
"consider Godot Engine's editor as a \"game\" written in C++ using the Godot "
"API."
msgstr ""
"Godot ermöglicht es Ihnen, Ihre Projekte direkt in C++ durch API zu "
"entwickeln, was in Unity z.B. nicht möglich ist. Z.B. könnte man den Editor "
"der Godot-Engine als ein \"Spiel\", geschrieben in C++ mithilfe der Nutzung "
"der Godot API betrachten."

#: ../../docs/getting_started/editor/unity_to_godot.rst:252
msgid ""
"If you are interested in using Godot in C++, you may want to start reading "
"the :ref:`Developing in C++ <doc_introduction_to_godot_development>` page."
msgstr ""
"Falls Sie interessiert daran sind, C++ mit Godot zusammen zu verwenden, "
"schauen Sie hier vorbei: :ref:`Entwickeln in C++ "
"<doc_introduction_to_godot_development>`."
