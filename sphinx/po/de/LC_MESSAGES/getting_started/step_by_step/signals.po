# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 10:56+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/signals.rst:4
msgid "Signals"
msgstr "Signale"

#: ../../docs/getting_started/step_by_step/signals.rst:7
msgid "Introduction"
msgstr "Einführung"

#: ../../docs/getting_started/step_by_step/signals.rst:9
msgid ""
"Signals are Godot's version of the *observer* pattern. They allow a node to "
"send out a message that other nodes can listen for and respond to. For "
"example, rather than continuously checking a button to see if it's being "
"pressed, the button can emit a signal when it's pressed."
msgstr ""
"Signale sind Godot's-Version des Beobachtungsmusters. Dies erlaubt es der "
"Node eine Nachricht zu senden, auf diese Nachricht können andere Nodes hören "
"und diese beantworten. Als Beispiel, anstatt dass man die ganze Zeit prüft "
"ob eine Taste gedrückt wurde, könnte diese auch einfach eine Nachricht "
"schicken, wenn Sie gedrückt wurde."

#: ../../docs/getting_started/step_by_step/signals.rst:14
msgid ""
"You can read more about the observer pattern here: http://"
"gameprogrammingpatterns.com/observer.html"
msgstr ""
"Du kannst mehr zum Beobachter-Entwurfsmuster hier lesen: http://"
"gameprogrammingpatterns.com/observer.html"

#: ../../docs/getting_started/step_by_step/signals.rst:16
msgid ""
"Signals are a way to *decouple* your game objects, which leads to better "
"organized and more manageable code. Instead of forcing game objects to "
"expect other objects to always be present, they can instead emit signals "
"that any interested objects can subscribe to and respond."
msgstr ""
"Signale sind eine Möglichkeit deine Spielobjekte von anderen Objekten *zu "
"lösen*, diese führt zu aufgeräumten und besser organisierten Code. Anstatt "
"dass du Spielobjekte dazu zwingst ständig jedes andere Objekt zu kennen, "
"erstellst du Signale an die sich jedes interessierte Objekt anmelden und "
"darauf antworten kann."

#: ../../docs/getting_started/step_by_step/signals.rst:21
msgid ""
"Below you can see some examples of how you can use signals in your own "
"projects."
msgstr ""
"Nachfolgend sehen Sie einige Beispiele, wie Sie Signale in Ihren eigenen "
"Projekten verwenden können."

#: ../../docs/getting_started/step_by_step/signals.rst:24
msgid "Timer example"
msgstr "Timer Beispiel"

#: ../../docs/getting_started/step_by_step/signals.rst:26
msgid ""
"To see how signals work, let's try using a :ref:`Timer <class_Timer>` node. "
"Create a new scene with a Node and two children: a Timer and a :ref:`Sprite "
"<class_Sprite>`. You can use the Godot icon for the Sprite's texture, or any "
"other image you like. Attach a script to the root node, but don't add any "
"code to it yet."
msgstr ""
"Damit wir einmal sehen wie Signale funktionieren, benutzen wir eine :ref:"
"`Timer <class_Timer>` Knoten. Erstellt eine neue Szene mit einem Knoten und "
"zwei Kindern: einem \"Timer\" und einer :ref:`Sprite <class_Sprite>`. Du "
"kannst das Godot-Icon für die Sprite-Texture benutzen oder ein anderes Bild, "
"dass dir gefällt."

#: ../../docs/getting_started/step_by_step/signals.rst:31
#, fuzzy
msgid "Your scene tree should look like this:"
msgstr "Der Szenenbaum sollte so aussehen:"

#: ../../docs/getting_started/step_by_step/signals.rst:35
msgid ""
"In the Timer node's properties, check the \"On\" box next to *Autostart*. "
"This will cause the timer to start automatically when you run the scene. You "
"can leave the *Wait Time* at 1 second."
msgstr ""
"In den Eigenschaften des Timers, setze ein Häkchen in der \"An\" Box neben "
"*Autostart*. Dies wird den Timer automatisch starten, wenn du die Szene "
"startest. Die *Wait Time* solltest du bei 1 Sekunde lassen."

#: ../../docs/getting_started/step_by_step/signals.rst:39
msgid ""
"Next to the \"Inspector\" tab is a tab labeled \"Node\". Click on this tab "
"and you'll see all of the signals that the selected node can emit. In the "
"case of the Timer node, the one we're concerned with is \"timeout\". This "
"signal is emitted whenever the Timer reaches ``0``."
msgstr ""
"Neben dem \"Inspektor\" Tab ist der \"Node\" Tab, wenn du auf diesen klickst "
"siehst du alle Signale die der ausgewählte Node aktivieren kann. Im Fall der "
"Timer Node interessiert uns gerade das \"timeout\" Signal, dies wird "
"aktiviert sobald der Timer ``0`` erreicht."

#: ../../docs/getting_started/step_by_step/signals.rst:46
msgid ""
"Click on the \"timeout()\" signal and click \"Connect...\". You'll see the "
"following window, where you can define how you want to connect the signal:"
msgstr ""
"Klick auf das \"timeout()\" Signal und danach auf \"Verbinden...\". Auf dem "
"folgenden Fenster kannst du definieren wie das Signal verbunden werden soll:"

#: ../../docs/getting_started/step_by_step/signals.rst:51
msgid ""
"On the left side, you'll see the nodes in your scene and can select the node "
"that you want to \"listen\" for the signal. Note that the Timer node is red "
"- this is *not* an error, but is a visual indication that it's the node that "
"is emitting the signal. Select the root node."
msgstr ""
"Auf der linken Seite sehen Sie die Knoten in Ihrer Szene und können den "
"Knoten auswählen, den Sie auf das Signal \"hören\" möchten. Beachten Sie, "
"dass der Timer-Knoten rot ist - dies ist *kein Fehler*, sondern ist eine "
"visuelle Anzeige, dass es der Knoten ist, der das Signal aussendet. Wählen "
"Sie den Wurzelknoten aus."

#: ../../docs/getting_started/step_by_step/signals.rst:56
msgid ""
"The target node *must* have a script attached or you'll receive an error "
"message."
msgstr ""
"Der Zielknoten *muss* mit einem Skript verbunden sein oder es wird eine "
"Fehlermeldung angezeigt."

#: ../../docs/getting_started/step_by_step/signals.rst:59
msgid ""
"On the bottom of the window is a field labeled \"Method In Node\". This is "
"the name of the function in the target node's script that you want to use. "
"By default, Godot will create this function using the naming convention "
"``_on_<node_name>_<signal_name>`` but you can change it if you wish."
msgstr ""
"Am unteren Rand des Fensters befindet sich ein Feld mit der Bezeichnung "
"\"Methode im Knoten\". Dies ist der Name der Funktion im Skript des "
"Zielknotens, die Sie verwenden möchten. Standardmäßig erstellt Godot diese "
"Funktion mit der Namenskonvention ``_on_<node_name>_<signal_name>``, aber "
"Sie können sie ändern, wenn Sie möchten."

#: ../../docs/getting_started/step_by_step/signals.rst:64
msgid ""
"Click \"Connect\" and you'll see that the function has been created in the "
"script:"
msgstr ""
"Klicke auf \"Verbinden\" und du siehst, dass die Funktion im Skript erstellt "
"wurde:"

#: ../../docs/getting_started/step_by_step/signals.rst:84
msgid ""
"Now we can replace the placeholder code with whatever code we want to run "
"when the signal is received. Let's make the Sprite blink:"
msgstr ""
"Jetzt können wir den Platzhalter Code mit beliebigem Code ersetzen, den wir "
"beim Empfangen des Signals ausführen möchten. Lasst uns die Sprite zum "
"Blinzeln bringen:"

#: ../../docs/getting_started/step_by_step/signals.rst:106
msgid ""
"Run the scene and you'll see the Sprite blinking on and off every second. "
"You can change the Timer's *Wait Time* property to alter this."
msgstr ""
"Führen Sie die Szene aus und Sie werden sehen, wie das Sprite jede Sekunde "
"blinkt. Sie können die Eigenschaft *Wartezeit* des Timers ändern, um dies zu "
"verändern."

#: ../../docs/getting_started/step_by_step/signals.rst:110
msgid "Connecting signals in code"
msgstr "Signale im Code verbinden"

#: ../../docs/getting_started/step_by_step/signals.rst:112
msgid ""
"You can also make the signal connection in code rather than with the editor. "
"This is usually necessary when you're instancing nodes via code and so you "
"can't use the editor to make the connection."
msgstr ""
"Sie können die Signalverbindung auch im Code und nicht mit dem Editor "
"herstellen. Dies ist normalerweise notwendig, wenn Sie Knoten über Code "
"instanziieren und daher nicht den Editor verwenden können, um die Verbindung "
"herzustellen."

#: ../../docs/getting_started/step_by_step/signals.rst:116
msgid ""
"First, disconnect the signal by selecting the connection in the Timer's "
"\"Node\" tab and clicking disconnect."
msgstr ""
"Trennen Sie zunächst das Signal, indem Sie die Verbindung auf der "
"Registerkarte \"Knoten\" des Timers auswählen und auf Trennen klicken."

#: ../../docs/getting_started/step_by_step/signals.rst:121
msgid ""
"To make the connection in code, we can use the ``connect`` function. We'll "
"put it in ``_ready()`` so that the connection will be made on run. The "
"syntax of the function is ``<source_node>.connect(<signal_name>, "
"<target_node>, <target_function_name>)``. Here is the code for our Timer "
"connection:"
msgstr ""

#: ../../docs/getting_started/step_by_step/signals.rst:154
msgid "Custom signals"
msgstr "Benutzerdefinierte Signale"

#: ../../docs/getting_started/step_by_step/signals.rst:156
msgid "You can also declare your own custom signals in Godot:"
msgstr ""
"Sie können auch Ihre eigenen benutzerdefinierten Signale in Godot erzeugen:"

#: ../../docs/getting_started/step_by_step/signals.rst:174
msgid ""
"Once declared, your custom signals will appear in the Inspector and can be "
"connected in the same way as a node's built-in signals."
msgstr ""
"Nach der Deklaration erscheinen Ihre benutzerdefinierten Signale im "
"Inspektor und können wie die eingebauten Signale eines Knotens verbunden "
"werden."

#: ../../docs/getting_started/step_by_step/signals.rst:177
msgid "To emit a signal via code, use the ``emit`` function:"
msgstr ""
"Um ein Signal per Code auszusenden, verwenden Sie die Funktion ``emit``:"

#: ../../docs/getting_started/step_by_step/signals.rst:203
#, fuzzy
msgid "Shooting example"
msgstr "Einige Beispiele:"

#: ../../docs/getting_started/step_by_step/signals.rst:205
msgid ""
"As another example of signal usage, let's consider a player character that "
"can rotate and shoot towards the mouse. Every time the mouse button is "
"clicked, we create an instance of the bullet at the player's location. See :"
"ref:`doc_instancing` for details."
msgstr ""
"Als ein weiteres Beispiel für die Signalverwendung betrachten wir einen "
"Spielercharakter, der sich drehen und auf die Maus schießen kann. Jedes Mal, "
"wenn die Maustaste gedrückt wird, erstellen wir eine Instanz der Kugel am "
"Standort des Spielers. Siehe :ref:`doc_instancing` für Details."

#: ../../docs/getting_started/step_by_step/signals.rst:210
msgid ""
"However, if the bullets are added as children of the player, then they will "
"remain \"attached\" to the player as it rotates:"
msgstr ""
"Wenn die Kugeln jedoch als Kinder des Spielers hinzugefügt werden, bleiben "
"sie an den Spieler \"gebunden\", während er sich dreht:"

#: ../../docs/getting_started/step_by_step/signals.rst:215
msgid ""
"Instead, we need the bullets to be independent of the player's movement - "
"once fired, they should continue traveling in a straight line and the player "
"can no longer affect them. Instead of being added to the scene tree as a "
"child of the player, it makes more sense to add the bullet as a child of the "
"\"main\" game scene, which may be the player's parent or even further up the "
"tree."
msgstr ""
"Stattdessen müssen die Kugeln unabhängig von der Bewegung des Spielers sein "
"- einmal abgefeuert, sollten sie sich weiterhin in einer geraden Linie "
"bewegen und der Spieler kann sie nicht mehr beeinflussen. Anstatt als Kind "
"des Spielers in den Szenenbaum aufgenommen zu werden, ist es sinnvoller, die "
"Kugel als Kind der \"Haupt\"-Spielszene hinzuzufügen, die entweder der "
"Elternteil des Spielers oder sogar weiter oben im Baum sein kann."

#: ../../docs/getting_started/step_by_step/signals.rst:221
msgid "You could do this by adding the bullet directly:"
msgstr "Sie können dies tun, indem Sie die Kugel direkt hinzufügen:"

#: ../../docs/getting_started/step_by_step/signals.rst:234
msgid ""
"However, this will lead to a different problem. Now if you try and test your "
"\"Player\" scene independently, it will crash on shooting, because there is "
"no parent node to access. This makes it a lot harder to test your player "
"code independently and also means that if you decide to change your main "
"scene's node structure, the player's parent may no longer be the appropriate "
"node to receive the bullets."
msgstr ""
"Dies führt jedoch zu einem anderen Problem. Wenn Sie nun versuchen, Ihre "
"\"Spieler\"-Szene unabhängig voneinander zu testen, stürzt sie beim Schießen "
"ab, da kein übergeordneter Knoten zum Zugriff vorhanden ist. Dies macht es "
"viel schwieriger, Ihren Spieler-Code unabhängig zu testen und bedeutet auch, "
"dass, wenn Sie sich entscheiden, die Knotenstruktur Ihrer Hauptszene zu "
"ändern, das übergeordnete Element des Spielers möglicherweise nicht mehr der "
"geeignete Knoten ist, um die Kugeln zu erhalten."

#: ../../docs/getting_started/step_by_step/signals.rst:241
msgid ""
"The solution to this is to use a signal to \"emit\" the bullets from the "
"player. The player then has no need to \"know\" what happens to the bullets "
"after that - whatever node is connected to the signal can \"receive\" the "
"bullets and take the appropriate action to spawn them."
msgstr ""

#: ../../docs/getting_started/step_by_step/signals.rst:247
msgid "Here is the code for the player using signals to emit the bullet:"
msgstr ""

#: ../../docs/getting_started/step_by_step/signals.rst:290
msgid ""
"In the main scene, we then connect the player's signal (it will appear in "
"the \"Node\" tab)."
msgstr ""

#: ../../docs/getting_started/step_by_step/signals.rst:314
msgid ""
"Now the bullets will maintain their own movement independent of the player's "
"rotation:"
msgstr ""

#: ../../docs/getting_started/step_by_step/signals.rst:320
msgid "Conclusion"
msgstr "Fazit"

#: ../../docs/getting_started/step_by_step/signals.rst:322
msgid ""
"Many of Godot's built-in node types provide signals you can use to detect "
"events. For example, an :ref:`Area2D <class_Area2D>` representing a coin "
"emits a ``body_entered`` signal whenever the player's physics body enters "
"its collision shape, allowing you to know when the player collected it."
msgstr ""

#: ../../docs/getting_started/step_by_step/signals.rst:327
msgid ""
"In the next section, :ref:`doc_your_first_game`, you'll build a complete "
"game including several uses of signals to connect different game components."
msgstr ""
