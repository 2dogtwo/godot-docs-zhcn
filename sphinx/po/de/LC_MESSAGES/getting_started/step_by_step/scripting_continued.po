# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-07 14:35+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:4
msgid "Scripting (continued)"
msgstr "Skripten (Fortsetzung)"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:7
msgid "Processing"
msgstr "Prozessverarbeitung"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:9
msgid ""
"Several actions in Godot are triggered by callbacks or virtual functions, so "
"there is no need to write code that runs all the time."
msgstr ""
"Mehrere Aktionen in Godot werden durch Rückrufe (Callbacks) oder virtuelle "
"Funktionen ausgelöst, sodass kein Code geschrieben werden muss, der ständig "
"ausgeführt wird."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:12
msgid ""
"However, it is still common to need a script to be processed on every frame. "
"There are two types of processing: idle processing and physics processing."
msgstr ""
"Es ist jedoch immer noch üblich, dass für jeden Frame ein Skript verarbeitet "
"werden muss. Es gibt zwei Arten der Verarbeitung: Leerlaufverarbeitung und "
"Physikverarbeitung."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:16
msgid ""
"Idle processing is activated when the method :ref:`Node._process() "
"<class_Node_method__process>` is found in a script. It can be turned off and "
"on with the :ref:`Node.set_process() <class_Node_method_set_process>` "
"function."
msgstr ""
"Die Leerlaufverarbeitung wird aktiviert, wenn die Methode :ref:`Node."
"_process() <class_Node_method__process>` in einem Skript gefunden wird. Sie "
"kann mit der Funktion :ref:`Node.set_process() "
"<class_Node_method_set_process>` ein- und ausgeschaltet werden."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:20
msgid "This method will be called every time a frame is drawn:"
msgstr ""
"Diese Methode wird jedesmal aufgerufen, wenn ein Bild gezeichnet wurde:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:36
msgid ""
"It's important to bear in mind that the frequency with which ``_process()`` "
"will be called depends on how many frames per second (FPS) your application "
"is running at. This rate can vary over time and devices."
msgstr ""
"Es ist wichtig im Hinterkopf zu behalten, dass die Häufigkeit in der die "
"``_process()`` Methode aufgerufen wird, davon abhängt, mit wie vielen "
"Bildern pro Sekunde (FPS) die Anwendung läuft. Diese Rate kann auf "
"verschiedenen Geräten oder auch über Zeit variieren."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:40
msgid ""
"To help manage this variability, the ``delta`` parameter contains the time "
"elapsed in seconds as a floating-point number since the previous call to "
"``_process()``."
msgstr ""
"Zur Berücksichtigung dieser Variabilität, enthält der ``delta`` Parameter "
"die vergangene Zeit in Sekunden als Fließkommazahl (float) seit dem letzten "
"Aufruf von ``_process()``."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:43
msgid ""
"This parameter can be used to make sure things always take the same amount "
"of time, regardless of the game's FPS."
msgstr ""
"Dieser Parameter kann verwendet werden, um sicherzustellen, dass Dinge "
"unabhängig von den FPS des Spiels immer dieselbe Zeit in Anspruch nehmen."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:46
msgid ""
"For example, movement is often multiplied with a time delta to make movement "
"speed both constant and independent of the frame rate."
msgstr ""
"Zum Beispiel wird die Bewegung oft mit einem Zeit-Delta multipliziert, um "
"die Bewegungsgeschwindigkeit sowohl konstant als auch unabhängig von der "
"Bildrate zu halten."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:49
msgid ""
"Physics processing with ``_physics_process()`` is similar, but it should be "
"used for processes that must happen before each physics step, such as "
"controlling a character. It always runs before a physics step and it is "
"called at fixed time intervals: 60 times per second by default. You can "
"change the interval from the Project Settings, under Physics -> Common -> "
"Physics Fps."
msgstr ""
"Die Physikverarbeitung mit ``_physics_process()`` ist ähnlich, sollte jedoch "
"für Prozesse verwendet werden, die vor jedem physikalischen Schritt "
"ausgeführt werden müssen, z.B. zum Steuern eines Charakters. Sie läuft immer "
"vor einem physikalischen Schritt ab und wird in festen Zeitabständen "
"aufgerufen: standardmäßig 60-mal pro Sekunde. Sie können das Intervall in "
"den Projekteinstellungen unter Physik -> Allgemein -> Physik Fps ändern."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:55
msgid ""
"The function ``_process()``, however, is not synced with physics. Its frame "
"rate is not constant and is dependent on hardware and game optimization. Its "
"execution is done after the physics step on single-threaded games."
msgstr ""
"Die Funktion ``_process()`` ist jedoch nicht mit der Physik synchronisiert. "
"Die Bildrate ist nicht konstant und hängt von der Hardware- und "
"Spieloptimierung ab. Die Ausführung erfolgt nach dem physikalischen Schritt "
"bei Single-Threaded-Spielen."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:58
msgid ""
"A simple way to see the ``_process()`` function at work is to create a scene "
"with a single Label node, with the following script:"
msgstr ""
"Eine einfache Möglichkeit die ``_process()``-Funktion bei der Arbeit zu "
"sehen besteht darin, eine Szene mit einem einzelnen Label-Node zu erstellen. "
"Sie können dies mit dem folgendem Skript erledigen:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:85
msgid "Which will show a counter increasing each frame."
msgstr "Es zeigt einen Zähler, der die Frameanzahl erhöht."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:88
msgid "Groups"
msgstr "Gruppen"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:90
msgid ""
"Groups in Godot work like tags you might have come across in other software. "
"A node can be added to as many groups as desired. This is a useful feature "
"for organizing large scenes. There are two ways to add nodes to groups. The "
"first is from the UI, using the Groups button under the Node panel:"
msgstr ""
"Gruppen in Godot funktionieren wie Tags, auf die Sie in anderen Softwares "
"gestoßen sein könnten. Ein Node kann beliebig vielen Gruppen hinzugefügt "
"werden. Dies ist eine nützliche Funktion zum Organisieren großer Szenen. Es "
"gibt zwei Möglichkeiten, Nodes zu Gruppen hinzuzufügen. Die erste ist über "
"die Benutzeroberfläche über den Gruppenknopf unter dem Node-Panel:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:97
msgid ""
"And the second way is from code. The following script would add the current "
"node to the ``enemies`` group as soon as it appeared in the scene tree."
msgstr ""
"Die zweite Möglichkeit erfolgt via Code. Das folgende Script fügt die "
"aktuelle Node zur Gruppe \"enemies\" wenn sie im Scenetree erstellt wurden."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:115
msgid ""
"This way, if the player is discovered sneaking into a secret base, all "
"enemies can be notified about its alarm sounding by using :ref:`SceneTree."
"call_group() <class_SceneTree_method_call_group>`:"
msgstr ""
"Wird der Spieler dabei entdeckt, wie er sich in eine Geheimbasis schleicht, "
"können alle Gegner über einen Alarmton informiert werden indem :ref:"
"`SceneTree.call_group() <class_SceneTree_method_call_group>` benutzt wird:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:132
msgid ""
"The above code calls the function ``player_was_discovered`` on every member "
"of the group ``enemies``."
msgstr ""
"Der Code oben ruft die Funktion ``player_was_discovered`` bei jedem Mitglied "
"der Gruppe ``enemies`` auf."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:135
msgid ""
"It is also possible to get the full list of ``enemies`` nodes by calling :"
"ref:`SceneTree.get_nodes_in_group() "
"<class_SceneTree_method_get_nodes_in_group>`:"
msgstr ""
"Es ist auch möglich, die vollständige Liste der ``Feinde``-Nodes durch "
"Aufrufen von :ref:`SceneTree.get_nodes_in_group() "
"<class_SceneTree_method_get_nodes_in_group>` zu erhalten:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:148
msgid ""
"The :ref:`SceneTree <class_SceneTree>` class provides many useful methods, "
"like interacting with scenes, their node hierarchy and groups of nodes. It "
"allows you to easily switch scenes or reload them, to quit the game or pause "
"and unpause it. It even comes with interesting signals. So check it out if "
"you have some time!"
msgstr ""
"Die :ref:`SceneTree <class_SceneTree>` -Klasse stellt viele nützliche "
"Methoden bereit, z.B. die Interaktion mit Szenen, deren Node-Hierarchie und "
"Node-Gruppen. Sie können Szenen einfach wechseln oder neu laden, das Spiel "
"beenden, pausieren und fortsetzen. Sie kommt sogar mit interessanten "
"Signalen. Also schauen Sie sich dies an wenn Sie Zeit haben!"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:156
msgid "Notifications"
msgstr "Benachrichtigungen"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:158
msgid ""
"Godot has a system of notifications. These are usually not needed for "
"scripting, as it's too low-level and virtual functions are provided for most "
"of them. It's just good to know they exist. For example, you may add an :ref:"
"`Object._notification() <class_Object_method__notification>` function in "
"your script:"
msgstr ""
"Godot verfügt über ein Benachrichtigungssystem. Diese wird in der Regel "
"nicht für das Schreiben von Skipten benötigt, da auf einem niedrigen Niveau "
"ist und für die meisten Funktionen virtuelle Funktionen zur Verfügung "
"stehen. Trotzdem ist es gut zu wissen, dass dieses Benachrichtigungssystem "
"existiert. Sie können beispielsweise die Funktion :ref:`Object."
"_notification() <class_Object_method__notification>` in Ihrem Skript "
"einfügen:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:193
msgid ""
"The documentation of each class in the :ref:`Class Reference <toc-class-"
"ref>` shows the notifications it can receive. However, in most cases "
"GDScript provides simpler overridable functions."
msgstr ""
"Die Dokumentation jeder Klasse in der :ref:`Class Reference <toc-class-ref>` "
"zeigt die Benachrichtigungen an, die sie erhalten kann. In den meisten "
"Fällen bietet GDScript jedoch einfachere überschreibbare Funktionen."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:198
msgid "Overridable functions"
msgstr "Überschreibbare Funktionen"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:200
msgid ""
"Such overridable functions, which are described as follows, can be applied "
"to nodes:"
msgstr ""
"Solche überschreibbaren Funktionen, welche im Folgenden beschrieben werden, "
"können auf Nodes angewendet werden:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:272
msgid ""
"As mentioned before, it's better to use these functions instead of the "
"notification system."
msgstr ""
"Wie bereits erwähnt ist es besser, diese Funktionen anstatt des "
"Benachrichtigungssystems zu verwenden."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:276
msgid "Creating nodes"
msgstr "Nodes erstellen"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:278
msgid ""
"To create a node from code, call the ``.new()`` method, like for any other "
"class-based datatype. For example:"
msgstr ""
"Um einen Node im Code zu erstellen, rufe die Methode ``.new()`` auf, genau "
"wie für jeden anderen klassenbasierten Datentyp auch. Zum Beispiel:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:302
msgid ""
"To delete a node, be it inside or outside the scene, ``free()`` must be used:"
msgstr ""
"Um ein Node zu löschen, egal ob innerhalb oder außerhalb der Scene, muss "
"``free()`` verwendet werden:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:318
msgid ""
"When a node is freed, it also frees all its child nodes. Because of this, "
"manually deleting nodes is much simpler than it appears. Free the base node "
"and everything else in the subtree goes away with it."
msgstr ""
"Wird ein Node freigegeben, so werden auch all seine untergeordneten Nodes "
"freigegeben. Aus diesem Grund ist das manuelle Löschen von Nodes viel "
"einfacher als es scheint. Geben Sie den Basis-Node frei und alles andere im "
"Teilbaum verschwindet damit."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:322
msgid ""
"A situation might occur where we want to delete a node that is currently "
"\"blocked\", because it is emitting a signal or calling a function. This "
"will crash the game. Running Godot with the debugger will often catch this "
"case and warn you about it."
msgstr ""
"Es kann vorkommen, dass wir einen Node löschen möchten, der gerade "
"\"blockiert\" ist, weil er ein Signal sendet oder eine Funktion aufruft. "
"Dies führt zum Absturz des Spiels. Wenn Sie Godot mit dem Debugger ausführen "
"wird dieser Fall häufig erkannt und Sie werden gewarnt."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:327
msgid ""
"The safest way to delete a node is by using :ref:`Node.queue_free() "
"<class_Node_method_queue_free>`. This erases the node safely during idle."
msgstr ""
"Die sicherste Methode zum Löschen eines Nodes ist die Verwendung von :ref:"
"`Node.queue_free() <class_Node_method_queue_free>`. Dadurch wird der Node im "
"Ruhezustand des Spiels sicher gelöscht."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:345
msgid "Instancing scenes"
msgstr "Szenen in­s­tan­zi­ie­ren"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:347
msgid ""
"Instancing a scene from code is done in two steps. The first one is to load "
"the scene from your hard drive:"
msgstr ""
"Szenen werden in zwei Schritten in­s­tan­zi­ie­rt. Zuerst muss die Szene von der "
"Festplatte geladen werden:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:360
msgid ""
"Preloading it can be more convenient, as it happens at parse time (GDScript "
"only):"
msgstr ""
"Das Vorladen kann bequemer sein, da dies zur Analysezeit geschieht (gilt nur "
"für GDScript):"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:368
msgid ""
"But ``scene`` is not yet a node. It's packed in a special resource called :"
"ref:`PackedScene <class_PackedScene>`. To create the actual node, the "
"function :ref:`PackedScene.instance() <class_PackedScene_method_instance>` "
"must be called. This will return the tree of nodes that can be added to the "
"active scene:"
msgstr ""
"``scene`` ist noch kein Node. Er ist in einer speziellen Ressource verpackt :"
"ref:`PackedScene <class_PackedScene>`. Um den tatsächlichen Node zu "
"erstellen, muss die Funktion :ref:`PackedScene.instance() "
"<class_PackedScene_method_instance>` aufgerufen werden. Dies gibt die "
"Struktur der Nodes zurück, die der aktiven Szene hinzugefügt werden können:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:386
msgid ""
"The advantage of this two-step process is that a packed scene may be kept "
"loaded and ready to use so that you can create as many instances as desired. "
"This is especially useful to quickly instance several enemies, bullets, and "
"other entities in the active scene."
msgstr ""
"Der Vorteil dieses zweistufigen Prozesses besteht darin, dass eine gepackte "
"Szene geladen bleibt und verwendet werden kann, sodass Sie beliebig viele "
"Instanzen erstellen können. Dies ist besonders nützlich um schnell mehrere "
"Feinde, Geschosse und andere Objekte in der aktiven Szene zu instanziieren."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:394
msgid "Register scripts as classes"
msgstr "Skripte als Klassen registrieren"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:396
msgid ""
"Godot has a \"Script Class\" feature to register individual scripts with the "
"Editor. By default, you can only access unnamed scripts by loading the file "
"directly."
msgstr ""
"Godot verfügt über eine \"Skript-Klassen\" -Funktion, um einzelne Skripte im "
"Editor zu registrieren. Standardmäßig können Sie nur auf unbenannte Skripte "
"zugreifen, indem Sie die Datei direkt laden."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:400
msgid ""
"You can name a script and register it as a type in the editor with the "
"``class_name`` keyword followed by the class's name. You may add a comma and "
"an optional path to an image to use as an icon. You will then find your new "
"type in the Node or Resource creation dialog."
msgstr ""
"Sie können ein Skript benennen und als Typ im Editor mit dem Schlüsselwort "
"``class_name``, gefolgt von dem Namen der Klasse, registrieren. Gefolgt von "
"einem Komma können Sie optional einen Pfad zu einer Bilddatei hinzufügen. "
"Sie finden Ihren neuen Typen dann im Dialogfeld \"Nodes- oder "
"Ressourcenerstellung\"."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:422
msgid "In Godot 3.1:"
msgstr "In Godot 3.1:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:424
msgid ""
"Only GDScript and NativeScript, i.e., C++ and other GDNative-powered "
"languages, can register scripts."
msgstr ""
"Nur GDScript und Sprachen die NativeScript-fähig sind(z.B. C++) können "
"Skripte registrieren."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:425
msgid "Only GDScript creates global variables for each named script."
msgstr ""
"Ausschließlich GDScript erstellt globale Variablen für jedes benannte Skript."
