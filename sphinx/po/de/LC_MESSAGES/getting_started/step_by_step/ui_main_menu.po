# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-03 10:51+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:4
msgid "Design a title screen"
msgstr "Erstelle einen Titelbildschirm"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:6
msgid ""
"In the next two tutorials, you will build two responsive UI (user interface) "
"scenes step-by-step using the engine's UI system:"
msgstr ""
"In den nächsten zwei Tutorials, wirst du mithilfe des Benutzeroberflächen "
"Systems der Engine, Schritt für Schritt eine zugängliche Benutzeroberfläche "
"erstellen:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:9
#, fuzzy
msgid "A main menu."
msgstr "Ein Hauptmenü"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:10
#, fuzzy
msgid "A game UI with a health bar, energy bar, bomb and money counters."
msgstr ""
"Die Benutzeroberfläche eines Spiels, mit Lebensbalken, Energiebalken, "
"Bomben- und Geldzähler"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:12
#, fuzzy
msgid ""
"You will learn how to design game UIs efficiently, and how to use Godot's "
"Control nodes. This page focuses on the visual part: everything you do from "
"the editor. To learn how to code a life bar, read :doc:`ui_code_a_life_bar`."
msgstr ""
"Du wirst lernen wie man die Benutzeroberfläche eines Spiels effizient "
"gestaltet, und wie man Godots Control Nodes verwendet. Diese Seite "
"fokussiert sich auf den sichtbaren Teil: alles was du vom Editor aus machen "
"kannst. Um zu lernen wie man einen Lebensbalken programmiert, ließ :doc:"
"`ui_code_a_life_bar`"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:20
#, fuzzy
msgid "The GUI you're going to create."
msgstr "Die graphische Benutzeroberfläche die du erstellen wirst"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:22
msgid ""
"Download the project files: :download:`ui_main_menu_design.zip <files/"
"ui_main_menu_design.zip>` and extract the archive. Import the ``start/`` "
"project in Godot to follow this tutorial. The ``end/`` folder contains the "
"final result. You'll find all the sprites in the ``start/assets/main_menu`` "
"folder."
msgstr ""
"Lade die Projekt Dateien herunter: :download:`ui_main_menu_design.zip <files/"
"ui_main_menu_design.zip>` und extrahiere das Archiv. Importiere das ``start/"
"`` Projekt nach Godot um dem Tutorial zu folgen. Der ``end\\`` Ordner "
"enthält das finale Ergebnis. Du findest alle Sprites im ``start/assets/"
"main_menu``` Ordner."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:30
#, fuzzy
msgid ""
"Read the :doc:`ui_introduction_to_the_ui_system` first to learn how Godot’s "
"UI system works."
msgstr ""
"Lesen Sie zuerst das :doc:`ui_introduction_to_the_ui_system`, um zu "
"erfahren, wie das UI-System von Godot funktioniert"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:34
msgid "How to design your game UI"
msgstr "Wie du die Benutzeroberfläche deines Spiels gestaltest"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:36
msgid ""
"To design a good UI, you want to come up with a rough mockup first: a plain "
"drawing version that focuses on the placement of your UI components, their "
"size, and user interaction. Pen and paper is all you need. You shouldn't use "
"fancy and final graphics at this stage. Then, you only need simple "
"placeholder sprites and you're good to jump into Godot. You want to make "
"sure the players can find their way around the interface using those "
"placeholders."
msgstr ""
"Um eine gute Benutzeroberfläche zu gestalten, möchtest du zunächst eine "
"grobe Skizze haben: eine flache gemalte Version die sich auf die "
"Positionierung deiner Komponente, ihre Größe, und die Benutzer Interaktion "
"fokussiert. Stift und Papier ist alles was du brauchst. Du solltest in "
"dieser Phase keine spektakulären und finalen Graphiken verwenden. Dann "
"benötigst du simple Platzhalter Sprites und kannst in Godot loslegen. Du "
"möchtest sicherstellen das die Spieler sich mit den Platzhaltern in der "
"Oberfläche zurecht finden."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:46
msgid "The UI's rough plan or mockup"
msgstr "Das grobe Modell oder der Plan für die Benutzeroberfläche"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:48
msgid ""
"Placeholder doesn't have to mean ugly, but you should keep the graphics "
"simple and clean. Avoid special effects, animation, and detailed "
"illustration before you have players playtest your UI. Otherwise:"
msgstr ""
"Platzhalter muss nicht hässlich bedeuten, aber du solltest die Graphik "
"einfach und sauber halten. Vermeide spezial Effekte, Animationen und "
"detaillierte Illustrationen bevor Spieler deine Benutzeroberfläche getestet "
"haben. Ansonsten:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:52
#, fuzzy
msgid ""
"The graphics might skew the players' perception of the experience and you'll "
"miss out on valuable feedback."
msgstr ""
"Die Graphik könnte die Wahrnehmung des Spielers verzerren und du verpasst "
"wertvolle Rückmeldungen"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:54
#, fuzzy
msgid "If the User Experience doesn't work, you'll have to redo some sprites."
msgstr ""
"Wenn die Benutzer Erfahrung nicht funktioniert, musst du einige Sprites neu "
"anfertigen"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:58
msgid ""
"Always try to make the interface work with simple text and boxes first. It's "
"easy to replace the textures later. Professional UX designers often work "
"with plain outlines and boxes in greyscale. When you take colors and fancy "
"visuals away, it's a lot easier to size and place UI elements properly. It "
"helps you refine the design foundation you'll build upon."
msgstr ""
"Versuche immer die Oberfläche mit einfachem Text und Boxen zum laufen zu "
"bekommen. Es ist einfach die Texturen später zu ersetzen. Professionelle UX-"
"Designer arbeiten häufig mit einfarbigen Umrissen und Boxen in Grau-stufe. "
"Wenn du Farbe und spektakuläre visuelle Effekte weg lässt, ist es viel "
"einfach die Benutzeroberflächen Elemente richtig zu positionieren. Es hilft "
"dir die Gestaltungsbasis zu verbessern, auf der du aufbaust."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:65
msgid "There are two ways to design your UI in Godot. You can:"
msgstr ""
"Es gibt zwei Wege deine Benutzeroberfläche in Godot zu gestalten. Du kannst:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:67
#, fuzzy
msgid ""
"Build it all in a single scene, and eventually save some branches as "
"reusable scenes."
msgstr ""
"Alles in einer einzigen Szene erstellen, und möglicherweise einige Zweige "
"als wiederverwendbare Szenen speichern"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:69
#, fuzzy
msgid ""
"Build template scenes for reusable components and create specific components "
"that inherit from your base scenes."
msgstr ""
"Vorlagen Szenen für wiederverwendbare Komponente gestalten und spezifische "
"Komponente erstellen die von diesen Vorlagen abstammen"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:72
msgid ""
"We will use the first approach, because the first version of your UI may not "
"work as well as you’d like. You’re likely to throw parts away and redesign "
"components as you go. When you're sure everything works, it's easy to make "
"some parts reusable, as you'll see below."
msgstr ""
"Wir werden den ersten Ansatz verwenden, weil die erste Version deiner UI "
"möglcherweise nicht so gut klappen wird wie du es gerne hättest. Du wirst "
"wahrscheinlich Teile wieder verwerfen und Komponenten mit der Zeit "
"überarbeiten. Wenn du dir sicher bist, dass alles funktioniert, kannst du "
"sie ganz einfach wiederverwendbar machen, wie unten gezeigt."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:79
#, fuzzy
msgid ""
"The files you'll find in Godot. The graphics look cleaner than on the rough "
"design, but they're still placeholders."
msgstr ""
"Die Dateien findest du in Godot. Die Graphik sieht sauberer als beim groben "
"Entwurf aus, aber sie ist immernoch lediglich ein Platzhalter"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:83
msgid "Design the main menu"
msgstr "Entwerfe das Hauptmenü"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:85
msgid ""
"Before we jump into the editor, we want to plan how we'll nest containers "
"based on our mockup image."
msgstr ""
"Bevor wir in den Editor einsteigen, wollen wir planen, wie wir Container "
"nach unserer Vorlage verschachteln werden."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:89
#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:282
msgid "Break down the UI mockup"
msgstr "Aufgliederung des UI-Entwurfs"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:91
msgid "Here are my three rules of thumb to find the right containers:"
msgstr ""
"Hier sind meine drei Faustregeln, wie man die richtigen Behälter findet:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:93
#, fuzzy
msgid ""
"Break down the UI into nested boxes, from the largest that contains "
"everything, to the smallest ones, that encompass one widget, like a bar with "
"its label, a panel or a button."
msgstr ""
"Unterteile die Benutzeroberfläche in verschachtelte Kästen, vom Größten, der "
"alles umfasst, bis zum Kleinsten, der ein einzelnes Element beinhaltet, wie "
"eine Leiste mit ihrer Beschriftung, ein Panel oder eine Schaltfläche"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:96
#, fuzzy
msgid "If there's some padding around an area, use a ``MarginContainer``."
msgstr ""
"Wenn Abstand um eine Fläche eingehalten werden soll, verwende einen "
"``MarginContainer``"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:97
#, fuzzy
msgid ""
"If the elements are arranged in rows or columns, use an ``HBoxContainer`` or "
"``VBoxContainer``."
msgstr ""
"Wenn die Elemente in Zeilen oder Spalten angeordnet sind, verwende einen "
"``HBoxContainer`` oder ``VBoxContainer``"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:100
msgid ""
"These rules are enough to get us started, and work well for simple "
"interfaces."
msgstr ""
"Diese Regeln reichen für den Anfang aus und klappen bei einfachen "
"Oberflächen recht gut."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:103
msgid ""
"For the main menu, the largest box is the entire game window. There's "
"padding between the edges of the window and the first components: this "
"should be a ``MarginContainer``. Then, the screen is split into two columns, "
"so we'll use an ``HBoxContainer``. In the left column, we'll manage the rows "
"with a ``VBoxContainer``. And in the right column, we'll center the "
"illustration with a ``CenterContainer``."
msgstr ""
"Beim Hauptmenü ist der größte Kasten das gesamte Spielefenster. Zwischen den "
"Rändern des Fensters und den ersten Komponenten ist ein Abstand: das sollte "
"ein ``MarginContainer`` sein. Dann wird der Bildschirm in zwei Spalten "
"unterteilt, also verwenden wir einen ``HBoxContainer``. Die Reihen in der "
"linken Spalte werden mit einem ``VBoxContainer`` angeordnet. Und in der "
"rechten Spalte richten wir die Illustration mithilfe eines "
"``CenterContainer``s mittig aus."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:112
#, fuzzy
msgid "Interface building blocks, broken down using the three rules of thumb."
msgstr ""
"Bausteine der Benutzeroberfläche, aufgebrochen mithilfe der drei Faustregeln"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:116
msgid ""
"Containers adapt to the window's resolution and width-to-height ratio. "
"Although we could place UI elements by hand, containers are faster, more "
"precise, and **responsive**."
msgstr ""
"Behälter passen sich an die Auflösung  und das Seitenverhältnis des "
"Bildschirms an. Obwohl wir UI-Elemente händisch platzieren könnten, sind "
"Behälter schneller, genauer und **responsiv**."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:121
msgid "Prepare the Main Menu scene"
msgstr "Vorbereitung der Hauptmenü-Szene"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:123
#, fuzzy
msgid ""
"Let's create the main menu. We'll build it in a single scene. To create an "
"empty scene, click on **Scene > New Scene**."
msgstr ""
"Erstellen wir das Hauptmenü. Wir bauen es in einer einzigen Szene. Um eine "
"leere Szene zu erstellen, klicke auf das Menü Szene -> Neue Szene."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:126
msgid ""
"We have to add a root node before we can save the scene. Your UI's root "
"should be the outermost container or element. In this case it's a "
"``MarginContainer``. ``MarginContainer`` is a good starting point for most "
"interfaces, as you often need padding around the UI. Press ``Meta+S`` to "
"save the scene to the disk. Name it *MainMenu*."
msgstr ""
"Wir müssen einen Wurzel-Node hinzufügen, bevor wir die Szene speichern "
"können. Die Wurzel deiner UI sollte der alleräußerste Container oder das "
"Element sein. In diesem Fall ist es ein ``MarginContainer``. "
"``MarginContainer`` ist für die meisten Oberflächen ein guter Ausgangspunkt, "
"da man oft einen Rand um sie herum braucht. Drücke ``Meta+S``, um die Szene "
"auf dem Datenträger zu speichern. Nenne sie *MainMenu*."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:132
msgid ""
"Select the ``MarginContainer`` again, and head to the inspector to define "
"the margins' size. Scroll down the ``Control`` class, to the ``Custom "
"Constants`` section. Unfold it. Set the margins as such:"
msgstr ""
"Wähle den ``MarginContainer`` wieder aus und gehe zum Inspektor, um die "
"Größe des Randes einzustellen. Gehe zum Bereich ``Custom Constants`` der "
"``Control``-Klasse. Klappe das Menü auf. Stelle die Ränder wie folgt ein:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:136
msgid "Margin Right: *120*"
msgstr "Margin Right: *120*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:137
msgid "Margin Top: *80*"
msgstr "Margin Top: *80*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:138
msgid "Margin Left: *120*"
msgstr "Margin Left: *120*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:139
msgid "Margin Bottom: *80*"
msgstr "Margin Bottom: *80*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:141
#, fuzzy
msgid ""
"We want the container to fit the window. In the toolbar above the Viewport, "
"open the **Layout** menu and select the last option, **Full Rect**."
msgstr ""
"Wir wollen, dass der Container das ganze Fenster einnimmt. Öffne das Menü "
"``Layout`` im Ansichtsfenster und wähle die letzte Option aus, ``Full Rect``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:145
msgid "Add the UI sprites"
msgstr "Hinzufügen der UI-Sprites"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:147
msgid ""
"Select the ``MarginContainer``, and create the UI elements as "
"``TextureRect`` nodes. We need:"
msgstr ""
"Wähle den ``MarginContainer`` aus und erzeuge die Oberflächenelemente als "
"``TextureRect``-Nodes. Wir brauchen:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:150
#, fuzzy
msgid "the title or logo,"
msgstr "Den Titel oder das Logo"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:151
#, fuzzy
msgid "the three text options as individual nodes,"
msgstr "Die drei Textoptionen als einzelne Nodes"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:152
#, fuzzy
msgid "the version note,"
msgstr "Die Versionsangabe"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:153
#, fuzzy
msgid "and the main menu’s illustration."
msgstr "Und die Illustration des Hauptmenüs"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:155
#, fuzzy
msgid ""
"Click the **Add Node** button or press ``Meta+A`` on your keyboard. Start to "
"type ``TextureRect`` to find the corresponding node and press enter. With "
"the new node selected, press ``Meta+D`` five times to create five extra "
"``TextureRect`` instances."
msgstr ""
"Drücke auf die Schaltfläche ``Add Node`` oder drücke ``Meta+A`` auf der "
"Tastatur. Gib ``TextureRect`` ein, um den entsprechenden Node zu finden und "
"drücke Eingabe. Wähle den neuen Node aus und drücke fünf Mal ``Meta+D``, um "
"fünf zusätzliche Instanzen zu erzeugen."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:160
#, fuzzy
msgid ""
"Click each of the nodes to select it. In the inspector, find the **Texture** "
"property and click **[empty] > Load**. A file browser opens and lets you "
"pick a sprite to load into the texture slot."
msgstr ""
"Wähle jeden der Nodes mit einem Klick darauf aus. Finde die ``Texture`` "
"Eigenschaft im im Inspektor und klicke auf ``[leer]`` -> ``Lade``. Eine "
"Dateiauswahl öffnet sich und lässt dich ein Sprite auswählen, das in den "
"Texture-Slot geladen wird."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:166
#, fuzzy
msgid "The file browser lets you find and load textures."
msgstr "Die Dateiauswahl lässt dich Texturen finden und laden"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:168
msgid ""
"Repeat the operation for all ``TextureRect`` nodes. You should have the "
"logo, the illustration, the three menu options and the version note, each as "
"a separate node. Then, double click on each of the nodes in the Scene tab to "
"rename them. Nothing has been placed in containers yet so this should look "
"messy."
msgstr ""
"Wende die Operation auf alle ``TextureRect``-Nodes an. Das Logo, die "
"Illustration, die drei Menüpunkte und die Versionsangabe sollten jeweils "
"eigenen Knoten sein. Benenne die Knoten dann im Szenenfenster durch einen "
"Doppelklick um. Da noch nichts im Behälter plaziert wurde, sieht er noch "
"etwas unordenlich aus."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:176
#, fuzzy
msgid "The six nodes with textures loaded."
msgstr "Die sechs Nodes, mit geladenen Texturen"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:180
msgid ""
"If you want to support localization in your game, use ``Labels`` for menu "
"options instead of ``TextureRect``."
msgstr ""
"Wenn dein Spiel Übersetzungen unterstützen soll, dann benutze ``Labels`` "
"anstelle von ``TextureRect``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:184
msgid "Add containers to place UI elements automatically"
msgstr "Füge Container ein, um UI-Elemente automatisch zu platzieren"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:186
msgid ""
"Our main menu has some margin around the edges of the screen. It is split in "
"two parts: on the left, you have the logo and the menu options. On the "
"right, you have the characters. We can use one of two containers to achieve "
"this: ``HSplitContainer`` or ``HBoxContainer``. Split containers split the "
"area into two: a left and a right side or a top and a bottom side. They also "
"allow the user to resize the left and right areas using an interactive bar. "
"On the other hand, ``HBoxContainer`` just splits itself into as many columns "
"as it has children. Although you can deactivate the split container's resize "
"behaviour, I recommend to favour box containers."
msgstr ""
"Unser Hauptmenü hat einen gewissen Abstand zum Bildschirmrand. Es unterteilt "
"sich in zwei Bereiche: links das Logo und die Menüpunkte. Rechts die "
"Charaktere. Wir können einen der beiden Container benutzen, um das zu "
"erreichen: ``HSplitContainer`` oder ``HBoxContainer``. Split Container "
"unterteilen den Bereich entzwei: eine linke und eine rechte Seite oder eine "
"obere und eine untere Seite. Sie erlauben es dem Benutzer auch, die Größen "
"der linken und rechten Bereiche über eine interaktive Leiste einzustellen. "
"Andererseits spaltet sich ein ``HBoxContainer``einfach in so viele Spalten "
"wie er Kinder hat. Obwohl die Variable Größe des Split Containers "
"abgeschaltet werden kann, empfehle ich den Gebrauch der Box Containers."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:197
msgid ""
"Select the ``MarginContainer`` and add an ``HBoxContainer``. Then, we need "
"two containers as children of our ``HBoxContainer``: a ``VBoxContainer`` for "
"the menu options on the left, and a ``CenterContainer`` for the illustration "
"on the right."
msgstr ""
"Wähle den ``MarginContainer`` aus und füge einen ``HBoxContainer`` hinzu. "
"Dann brauchen wir zwei untergeordnete Container als Kinder unseres "
"``HBoxContainer``: einen ``VBoxContainer`` für die Menüpunkte zur Linken und "
"einen ``CenterContainer`` für die Illustration zur Rechten."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:204
#, fuzzy
msgid ""
"You should have four nested containers and the TextureRect nodes sitting "
"aside from it."
msgstr ""
"Du solltest vier verschachtelte Container haben und den TextureRect-Node "
"nebendran"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:207
#, fuzzy
msgid ""
"In the node tree, select all the ``TextureRect`` nodes that should go on the "
"left side: the logo, the menu options (Continue, NewGame, Options), and the "
"version note. Drag and drop them into the ``VBoxContainer``. The nodes "
"should position automatically."
msgstr ""
"Wähle im Node-Baum alle ``TextureRect``-Nodes, die auf die linke Seite "
"gehören: das Logo, die Menüpunkte und die Versionsangabe. Ziehe sie per Drag-"
"and-Drop in den ``VBoxContainer``. Die Nodes sollten sich selbstständig "
"positionieren."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:214
msgid "Containers automatically place and resize textures"
msgstr "Container platzieren Texturen automatisch und passen deren Größe an"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:216
msgid "We're left with two problems to solve:"
msgstr "Wir müssen noch zwei Probleme lösen:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:218
#, fuzzy
msgid "The characters on the right aren't centered."
msgstr "Die Charaktere rechts sind nicht mittig"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:219
#, fuzzy
msgid "There's no space between the logo and the other UI elements."
msgstr "Zwischen dem Logo und den anderen Oberflächenelementen ist kein Platz"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:221
#, fuzzy
msgid ""
"To center the characters on the right, first select the ``CenterContainer``. "
"Then in the Inspector, scroll down to the **Size Flags** category and click "
"on the field to the right of the **Vertical** property, and check **Expand** "
"in addition to **Fill**. Do the same for the **Horizontal** property. This "
"makes the ``CenterContainer`` expand into all available space while "
"respecting its neighbour ``VBoxContainer``. Finally, drag and drop the "
"Characters node into the ``CenterContainer``. The Characters element will "
"center automatically."
msgstr ""
"Um die Figuren rechts mittig auszurichten, verwenden wir einen "
"``CenterContainer``. Füge einen ``CenterContainer`` als Kindknoten des "
"``HBoxContainer`` hinzu. Scrolle dann im Inspektor zur Kategorie ``Size "
"Flags`` und klicke auf das Feld rechts von der Eigenschaft ``Vertical`` und "
"kreuze ``Expand`` sowie ``Fill`` an. Ebenso für die Eigenschaft "
"``Horizontal``. Ziehe schließlich die Figuren in den ``CenterContainer``. "
"Das Element wird automatisch zentriert."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:232
#, fuzzy
msgid ""
"The character node centers inside the right half of the screen as soon as "
"you place it inside the CenterContainer."
msgstr ""
"Der Charakter-Node richtet sich mittig in der rechten Bildschirmhälft aus "
"sobald du ihn in dem CenterContainer platzierst"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:235
#, fuzzy
msgid ""
"To space out the menu options and the logo on the left, we'll use one final "
"container and its size flags. Select the ``VBoxContainer`` and press ``Meta"
"+A`` to add a new node inside it. Add a second ``VBoxContainer`` and name it "
"*MenuOptions*. Select all three menu options, ``Continue``, ``NewGame`` and "
"``Options``, and drag and drop them inside the new ``VBoxContainer``. The "
"UI's layout should barely change, if at all."
msgstr ""
"Um die Menüpunkte und das Logo links auseinanderzuziehen, werden wir einen "
"letzten Container mit seinen size flags verwenden. Wähle den "
"``VBoxContainer`` und drücke ``Meta+A``, um einen neuen Node darin "
"einzufügen. Füge einen zweiten ``VBoxContainer`` hinzu und nenne ihn "
"\"MenuOptions\". Wähle alle drei Menüpunkte,  ``Continue``, ``NewGame`` und "
"``Options``, und ziehe sie in den neuen ``VBoxContainer``. Das Layout der UI "
"sollte sich, wenn überhaupt, kaum ändern."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:245
#, fuzzy
msgid ""
"Place the new container between the other two nodes to retain the UI's "
"layout."
msgstr ""
"Platziere den neuen Container zwischen die anderen beiden Nodes, um das "
"Layout der UI zu erhalten"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:248
#, fuzzy
msgid ""
"Now we grouped the menu options together, we can tell their container to "
"expand to take as much vertical space as possible. Select the "
"``MenuOptions`` node. In the Inspector, scroll down to the **Size Flags** "
"category. Click on the field to the right of the **Vertical** property, and "
"check **Expand** in addition to **Fill**. The container expands to take all "
"the available vertical space while respecting its neighbors, the ``Logo`` "
"and ``Version`` elements."
msgstr ""
"Nachdem wir die Menüpunkte zusammengefasst haben, können wir ihren Container "
"anweisen, so viel senkrechten Raum wie möglich einzunehmen. Wähle den Node "
"``MenuOptions``.  Gehe im Inspektor herunter zu der Kategorie ``Size "
"Flags``. Klicke auf das Feld rechts neben der Eigenschaft ``Vertical`` und "
"kreuze ``Expand`` sowie ``Fill`` an. Der Container dehnt sich aus und nimmt "
"den ganzen verfügbaren senkrechten Raum ein. Aber er berücksichtigt seine "
"Nachbarn, die Elemente ``Logo`` und ``Version``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:256
#, fuzzy
msgid ""
"To center the nodes in the ``VBoxContainer``, scroll to the top of the "
"Inspector and change the **Alignment** property to **Center**."
msgstr ""
"Um die Nodes im ``VBoxContainer`` zu zentrieren, gehe ganz nach oben im "
"Inspektor und stelle die Eigenschaft ``Alignment`` auf ``Center``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:261
#, fuzzy
msgid "The menu options should center vertically in the UI's left column."
msgstr ""
"Die Menüpunkte sollten in sich in der linken Spalte der Oberfläche sekrecht "
"mittig ausrichten"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:263
#, fuzzy
msgid ""
"To wrap things up, let's add some separation between the menu options. "
"Expand the **Custom Constants** category below **Size Flags**, and click the "
"field next to the **Separation** parameter. Set it to 30. Once you press "
"enter, the **Separation** property becomes active and Godot adds 30 pixels "
"between menu options."
msgstr ""
"Zum Abschluss fügen wir Abstandshalter zwischen den Menüpunkten hinzu. "
"Klappe die Kategorie ``Custom Constants``  unter ``Size Flags`` auf klick "
"auf das Feld neben dem Parameter ``Separation``. Setze es auf 30. Sobald du "
"Eingabe drückst, wird die Eigenschaft ``Separation`` wirksam und Godot fügt "
"30 Pixel zwischen den Menüpunkten ein."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:271
#, fuzzy
msgid "The final interface."
msgstr "Die fertige Oberfläche"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:273
msgid ""
"Without a single line of code, we have a precise and responsive main menu."
msgstr ""
"Ohne eine einzige Zeile Code haben wir ein ordentliches und dynamisches Menü."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:276
msgid ""
"Congratulations for getting there! You can download the final menu :download:"
"`ui_main_menu_design.zip <files/ui_main_menu_design.zip>` to compare with "
"your own. In the next tutorial, you'll create a Game User Interface with "
"bars and item counters."
msgstr ""
"Glückwunsch, dass du es so weit geschafft hast! Du kannst das fertige Menü "
"herunterladen und mit deinem vergleichen:  :download:`ui_main_menu_design."
"zip <files/ui_main_menu_design.zip>`. In der nächsten Anleitung wirst du ein "
"eine Spieleoberfläche mit Leisten und Gegenstandszählern erstellen."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:284
msgid ""
"A responsive User Interface is all about making sure our UIs scale well on "
"all screen types. TV screens and computer displays have different sizes and "
"ratios. In Godot, we use containers to control the position and the size of "
"UI elements."
msgstr ""
"Bei einer responsiven Benutzeroberfläche ist es wichtig dafür zu sorgen, "
"dass die UI auf allen Bildschirmarten vernünftig skaliert wird. "
"Fernsehbildschirme und Monitore haben unterschiedliche Größen und "
"Seitenverhältnisse. In Godot benutzen wir Container, um die Position und "
"Größe der UI-Elemente zu steuern."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:289
msgid ""
"The order in which you nest matters. To see if your UI adapts nicely to "
"different screen ratios, select the root node, press the Q key to activate "
"the Select Mode, select the container and click and drag on one of the "
"container's corners to resize it. The UI components should flow inside of it."
msgstr ""
"Die Reihenfolge der Verschachtelung ist entscheidend. Um zu sehen, ob sich "
"deine UI ordentilch an verschiedene Seitenverhältnisse anpasst, wähle den "
"Wurzelknoten, drücke die Taste Q, um den Auswahlmodus zu aktivieren, wähle "
"den Container aus und ziehe an einer seiner Ecken, um die Größe zu ändern. "
"Die UI-Komponenten darin sollten sich dynamisch anpassen."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:295
msgid ""
"You'll notice that although containers move sprites around, they don't scale "
"them. This is normal. We want the UI system to handle different screen "
"ratios, but we also need the entire game to adapt to different screen "
"resolutions. To do this, Godot scales the entire window up and down."
msgstr ""
"Dir wird auffallen, dass Sprites zwar von Containern verschoben, aber nicht "
"in ihrer Größe geändert werden. Das ist normal. Wir wollen, dass das UI-"
"System mit unterschiedliche Bildschirmgrößen umgehen kann, aber wir müssen "
"auch das ganze Spiel an verschiedene Bildschirmauflösungen anpassen. Zu "
"diesem Zweck vergrößert und verkleinert Godot das gesamte Fenster."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:301
#, fuzzy
msgid ""
"You can change the scale mode in the project settings: click **Project > "
"Project Settings** in the top menu. In the window's left column, look for "
"the **Display** category. Click on the **Window** sub-category. On the right "
"side of the window, you'll find a **Stretch** section. The three settings, "
"**Mode**, **Aspect**, and **Shrink**, control the screen size. For more "
"information, see :ref:`doc_multiple_resolutions`."
msgstr ""
"Du kannst den Skalierungsmodus in den Projekteinstellungen ändern: klicke "
"auf Projekt -> Projekteinstellungen.  Suche in der linken Fensterspalte nach "
"der Kategorie Display. Klicke auf das Untermenü Window. Auf der rechten "
"Fensterseite findest du einen Punkt namens Stretch. Die drei Einstellungen "
"Mode, Aspect und Shrink steuern die Bildschirmgröße. Siehe :ref:"
"`doc_multiple_resolutions` für weitere Informationen."
