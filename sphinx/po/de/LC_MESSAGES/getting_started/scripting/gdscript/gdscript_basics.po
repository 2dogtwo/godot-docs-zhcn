# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-25 15:59+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:4
msgid "GDScript"
msgstr "GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:7
msgid "Introduction"
msgstr "Einführung"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:9
msgid ""
"*GDScript* is a high level, dynamically typed programming language used to "
"create content. It uses a syntax similar to `Python <https://en.wikipedia."
"org/wiki/Python_%28programming_language%29>`_ (blocks are indent-based and "
"many keywords are similar). Its goal is to be optimized for and tightly "
"integrated with Godot Engine, allowing great flexibility for content "
"creation and integration."
msgstr ""
"*GDScript* ist eine high-level, dynamisch typisierte Programmiersprache zum "
"Erstellen von Inhalten. Es verwendet eine ähnliche Syntax wie `Python "
"<https://de.wikipedia.org/wiki/Python_%28Programmiersprache%29>`_ (Blöcke "
"basieren auf Einrückung und viele Schlüsselwörter sind ähnlich). Es zielt "
"auf eine Optimierung für und eine enge Integration mit der Godot Engine ab, "
"um große Flexibilität bei der Erstellung von Inhalten und deren Integration "
"zu ermöglichen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:17
msgid "History"
msgstr "Geschichte"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:19
#, fuzzy
msgid ""
"In the early days, the engine used the `Lua <http://www.lua.org>`__ "
"scripting language. Lua is fast, but creating bindings to an object oriented "
"system (by using fallbacks) was complex and slow and took an enormous amount "
"of code. After some experiments with `Python <https://www.python.org>`__, it "
"also proved difficult to embed."
msgstr ""
"In den Anfängen nutzte die Engine noch `Lua <http://www.lua.org>`__ als "
"Skriptsprache. Lua ist schnell, aber die Sprachanbindung an ein "
"objektorientiertes System zu erstellen (durch Verwendung von Fallbacks) war "
"komplex, langsam und beanspruchte enorm viel Code. Nach einigen Experimenten "
"mit `Python <http://www.python.org>`__ stellte sie sich auch als schwierig "
"einzubetten heraus."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:25
msgid ""
"The last third party scripting language that was used for shipped games was "
"`Squirrel <http://squirrel-lang.org>`__, but it was dropped as well. At that "
"point, it became evident that a custom scripting language could more "
"optimally make use of Godot's particular architecture:"
msgstr ""
"Die letzte Skriptsprache von Dritten, die mit ausgelieferten Spielen "
"verwendet wurde, war `Squirrel <http://squirrel-lang.org>`__, aber diese "
"wurde ebenfalls fallen gelassen. An diesem Punkt wurde klar, dass eine "
"eigene Skriptsprache viel besser Nutzen aus Godots Architektur schlagen "
"konnte:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:30
msgid ""
"Godot embeds scripts in nodes. Most languages are not designed with this in "
"mind."
msgstr ""
"Godot bettet nämlich Skripte in Nodes ein. Die meisten Sprachen sind nicht "
"in diesem Sinne entworfen worden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:32
msgid ""
"Godot uses several built-in data types for 2D and 3D math. Script languages "
"do not provide this, and binding them is inefficient."
msgstr ""
"Godot nutzt mehrere eingebaute Datentypen für 2D- und 3D-Mathematik. "
"Skriptsprachen bieten dies jedoch nicht an, und sie aus anderen Sprachen "
"anzubinden ist ineffizient."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:34
msgid ""
"Godot uses threads heavily for lifting and initializing data from the net or "
"disk. Script interpreters for common languages are not friendly to this."
msgstr ""
"Godot benutzt Threads in großem Maße, um Daten vom Netzwerk oder der "
"Festplatte zu holen und zu initialisieren. Skriptinterpreter für übliche "
"Sprachen taugen dafür nicht."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:37
msgid ""
"Godot already has a memory management model for resources, most script "
"languages provide their own, which results in duplicate effort and bugs."
msgstr ""
"Godot hat bereits ein Speichermanagement-Modell für Ressourcen; die meisten "
"Skriptsprachen bieten eigene an, was zu doppeltem Aufwand und Bugs führt."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:40
msgid ""
"Binding code is always messy and results in several failure points, "
"unexpected bugs and generally low maintainability."
msgstr ""
"Code für Sprachanbindungen ist immer unordentlich und führt zu mehreren "
"Schwachstellen, unerwarteten Bugs und allgemein schlechter Wartbarkeit."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:43
msgid ""
"The result of these considerations is *GDScript*. The language and "
"interpreter for GDScript ended up being smaller than the binding code itself "
"for Lua and Squirrel, while having equal functionality. With time, having a "
"built-in language has proven to be a huge advantage."
msgstr ""
"Das Ergebnis dieser Überlegungen ist *GDScript*. Die Sprache und der "
"Interpreter für GDScript waren am Ende kleiner als der Sprachanbindungs-Code "
"für Lua und Squirrel, trotz gleicher Funktionalität. Einge eingebaute "
"Sprache zu haben stellte sich mit der Zeit als riesiger Vorteil heraus."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:49
msgid "Example of GDScript"
msgstr "Beispiel von GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:51
#, fuzzy
msgid ""
"Some people can learn better by taking a look at the syntax, so here's a "
"simple example of how GDScript looks."
msgstr ""
"Manche Leute lernen besser, indem sie einfach die Syntax betrachten, deshalb "
"hier ein Beispiel wie GDScript aussieht."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:129
msgid ""
"If you have previous experience with statically typed languages such as C, C+"
"+, or C# but never used a dynamically typed one before, it is advised you "
"read this tutorial: :ref:`doc_gdscript_more_efficiently`."
msgstr ""
"Wenn du bereits Erfahrung mit statisch typisierten Sprachen wie C, C++ oder "
"C# hast, aber bisher keine dynamisch typisierte verwendet hast, wird das "
"Lesen dieses Tutorials empfohlen: :ref:`doc_gdscript_more_efficiently`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:134
msgid "Language"
msgstr "Sprache"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:136
msgid ""
"In the following, an overview is given to GDScript. Details, such as which "
"methods are available to arrays or other objects, should be looked up in the "
"linked class descriptions."
msgstr ""
"Im Folgenden sei ein Überblick über GDScript gegeben. Details, wie welche "
"Methoden es für Arrays oder andere Objekte gibt, sollten in den verlinkten "
"Klassenbeschreibungen nachgeschlagen werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:141
msgid "Identifiers"
msgstr "Identifizierer"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:143
msgid ""
"Any string that restricts itself to alphabetic characters (``a`` to ``z`` "
"and ``A`` to ``Z``), digits (``0`` to ``9``) and ``_`` qualifies as an "
"identifier. Additionally, identifiers must not begin with a digit. "
"Identifiers are case-sensitive (``foo`` is different from ``FOO``)."
msgstr ""
"Jede Zeichenkette, die beschränkt ist auf Zeichen des Alphabets (``a`` bis "
"``z`` und ``A`` bis ``Z``), Ziffern (``0`` bis ``9``) und ``_``, ist ein "
"gültiger Indentifizierer. Zusätzlich dürfen Identifizierer nicht mit einer "
"Ziffer beginnen. Bei Identifizierern wird Groß- und Kleinschreibung beachtet "
"(``foo`` unterscheidet sich von ``FOO``)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:149
msgid "Keywords"
msgstr "Schlüsselwörter"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:151
#, fuzzy
msgid ""
"The following is the list of keywords supported by the language. Since "
"keywords are reserved words (tokens), they can't be used as identifiers. "
"Operators (like ``in``, ``not``, ``and`` or ``or``) and names of built-in "
"types as listed in the following sections are also reserved."
msgstr ""
"Das Folgende ist eine Auflistung von der Sprache unterstützter "
"Schlüsselwörter. Weil Schlüsselwörter reservierte Begriffe sind, können sie "
"nicht als Bezeichner verwendet werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:156
msgid ""
"Keywords are defined in the `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ in "
"case you want to take a look under the hood."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:160
msgid "Keyword"
msgstr "Schlüsselwort"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:160
msgid "Description"
msgstr "Beschreibung"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:162
msgid "if"
msgstr "if"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:162
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:164
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:166
msgid "See `if/else/elif`_."
msgstr "Siehe `if/else/elif`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:164
msgid "elif"
msgstr "elif"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:166
msgid "else"
msgstr "else"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:168
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:823
msgid "for"
msgstr "for"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:168
msgid "See for_."
msgstr "Siehe for_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:170
msgid "do"
msgstr "do"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:170
msgid "Reserved for future implementation of do...while loops."
msgstr "Reserviert für zukünftige Implementationen von do...while Schleifen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:172
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:812
msgid "while"
msgstr "while"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:172
msgid "See while_."
msgstr "Siehe while_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:174
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:852
msgid "match"
msgstr "match"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:174
msgid "See match_."
msgstr "Siehe match_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:176
msgid "switch"
msgstr "switch"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:176
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:178
msgid "Reserved for future implementation."
msgstr "Reserviert für zukünftige Implementationen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:178
msgid "case"
msgstr "case"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:180
msgid "break"
msgstr "break"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:180
msgid "Exits the execution of the current ``for`` or ``while`` loop."
msgstr "Beendet die Ausführung der aktuellen ``for`` oder ``while`` Schleife."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:182
msgid "continue"
msgstr "continue"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:182
msgid ""
"Immediately skips to the next iteration of the ``for`` or ``while`` loop."
msgstr ""
"Springt sofort zur nächsten Iteration der ``for`` oder ``while`` Schleife."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:184
msgid "pass"
msgstr "pass"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:184
msgid ""
"Used where a statement is required syntactically but execution of code is "
"undesired, e.g. in empty functions."
msgstr ""
"Benutzt man, wo eine Anweisung zwar syntaktisch benötigt wird, aber die "
"Ausführung von Code eigentlich ungewünscht ist, z.B. in leeren Funktionen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:186
msgid "return"
msgstr "return"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:186
msgid "Returns a value from a function."
msgstr "Gibt einen Wert aus einer Funktion zurück."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:188
msgid "class"
msgstr "class"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:188
msgid "Defines a class."
msgstr "Definiert eine Klasse."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:190
msgid "extends"
msgstr "extends"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:190
msgid "Defines what class to extend with the current class."
msgstr ""
"Definiert die Basisklasse, von welcher diese Klasse abgeleitet werden soll."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:192
msgid "is"
msgstr "is"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:192
#, fuzzy
msgid ""
"Tests whether a variable extends a given class, or is of a given built-in "
"type."
msgstr "Testet, ob eine Variable von einer gegeben Klasse abgeleitet ist."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:194
#, fuzzy
msgid "as"
msgstr "case"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:194
msgid "Cast the value to a given type if possible."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:196
msgid "self"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:196
msgid "Refers to current class instance."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:198
msgid "tool"
msgstr "tool"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:198
msgid "Executes the script in the editor."
msgstr "Führt ein Skript im Editor aus."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:200
msgid "signal"
msgstr "signal"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:200
msgid "Defines a signal."
msgstr "Definiert ein Signal."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:202
msgid "func"
msgstr "func"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:202
msgid "Defines a function."
msgstr "Definiert eine Funktion."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:204
msgid "static"
msgstr "static"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:204
msgid "Defines a static function. Static member variables are not allowed."
msgstr ""
"Definiert eine statische Funktion. Statische Member-Variablen sind nicht "
"erlaubt."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:206
msgid "const"
msgstr "const"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:206
msgid "Defines a constant."
msgstr "Definiert eine Konstante."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:208
msgid "enum"
msgstr "enum"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:208
msgid "Defines an enum."
msgstr "Definiert eine Aufzählung."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:210
msgid "var"
msgstr "var"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:210
msgid "Defines a variable."
msgstr "Definiert eine Variable."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:212
msgid "onready"
msgstr "onready"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:212
msgid ""
"Initializes a variable once the Node the script is attached to and its "
"children are part of the scene tree."
msgstr ""
"Initialisiert eine Variable sobald das Node, an dem das Skript angehängt "
"wurde, und ihre Unterobjekte Teil des Szenenbaums sind."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:214
msgid "export"
msgstr "export"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:214
msgid ""
"Saves a variable along with the resource it's attached to and makes it "
"visible and modifiable in the editor."
msgstr ""
"Speichert eine Variable zusammen mit der Ressource, an der sie hängt, und "
"macht sie im Editor sicht- und modifizierbar."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:216
msgid "setget"
msgstr "setget"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:216
msgid "Defines setter and getter functions for a variable."
msgstr "Definiert setter und getter Funktionen für eine Variable."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:218
msgid "breakpoint"
msgstr "breakpoint"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:218
msgid "Editor helper for debugger breakpoints."
msgstr "Helfer für den Editor für Haltepunkte des Debuggers."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:220
msgid "preload"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:220
msgid "Preloads a class or variable. See `Classes as resources`_."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:222
msgid "yield"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:222
msgid "Coroutine support. See `Coroutines with yield`_."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:224
#, fuzzy
msgid "assert"
msgstr "Klassen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:224
msgid ""
"Asserts a condition, logs error on failure. Ignored in non-debug builds. See "
"`Assert keyword`_."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:226
msgid "remote"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:226
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:228
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:230
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:232
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:234
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:236
msgid ""
"Networking RPC annotation. See :ref:`high-level multiplayer docs "
"<doc_high_level_multiplayer>`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:228
msgid "master"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:230
msgid "puppet"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:232
msgid "remotesync"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:234
msgid "mastersync"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:236
msgid "puppetsync"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:238
msgid "PI"
msgstr "PI"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:238
msgid "PI constant."
msgstr "Die π-Konstante."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:240
msgid "TAU"
msgstr "TAU"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:240
msgid "TAU constant."
msgstr "TAU-Konstante."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:242
#, fuzzy
msgid "INF"
msgstr "INF"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:242
msgid "Infinity constant. Used for comparisons."
msgstr "Konstante \"Unendlichkeit\". Wird für Vergleiche genutzt."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:244
msgid "NAN"
msgstr "NAN"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:244
msgid "NAN (not a number) constant. Used for comparisons."
msgstr ""
"Konstante \"NAN\" (not a number - Keine Zahl). Wird für Vergleiche genutzt."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:248
msgid "Operators"
msgstr "Operatoren"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:250
#, fuzzy
msgid "The following is the list of supported operators and their precedence."
msgstr ""
"Das folgende ist einer Liste der unterstützen Operatoren in ihre "
"Auswertungsreihenfolge"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:253
msgid "**Operator**"
msgstr "**Operator**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:253
msgid "**Description**"
msgstr "**Beschreibung**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:255
msgid "``x[index]``"
msgstr "``x[index]``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:255
msgid "Subscription, Highest Priority"
msgstr "Indexierung, höchste Priorität"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:257
msgid "``x.attribute``"
msgstr "``x.attribute``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:257
msgid "Attribute Reference"
msgstr "Referenzierung eines Attributs"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:259
msgid "``is``"
msgstr "``is``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:259
msgid "Instance Type Checker"
msgstr "Prüfung des Instanztyps"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:261
msgid "``~``"
msgstr "``~``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:261
msgid "Bitwise NOT"
msgstr "Bitweise Negation"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:263
msgid "``-x``"
msgstr "``-x``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:263
msgid "Negative / Unary Negation"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:265
msgid "``*`` ``/`` ``%``"
msgstr "``*`` ``/`` ``%``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:265
msgid "Multiplication / Division / Remainder"
msgstr "Multiplikation / Division / Modulus (Restbetrag)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:267
#, fuzzy
msgid ""
"NOTE: The result of these operations depends on the operands types. If both "
"are Integers, then the result will be an Integer. That means 1/10 returns 0 "
"instead of 0.1. If at least one of the operands is a float, then the result "
"is a float: float(1)/10 or 1.0/10 return both 0.1. NOTE2: Remainder/Modulo "
"only works on int. For floats use built in fmod()"
msgstr ""
"BEACHTE: Das Ergebnis dieser Operation hängt von den Operandentypen ab. Wenn "
"beide Ganzzahlen sind, ist das Ergebnis auch eine Ganzzahl. Das heißt, 1/10 "
"liefert 0 statt 0.1. Wenn mindestens einer der Operanden eine Fließkommazahl "
"ist, ist es das Ergebnis ebenfalls: float(1)/10 oder 1.0/10 liefern beide "
"0.1."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:278
msgid "``+``"
msgstr "``+``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:278
#, fuzzy
msgid "Addition / Concatenation of Arrays"
msgstr "Addition / Subtraktion"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:280
msgid "``-``"
msgstr "``-``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:280
#, fuzzy
msgid "Subtraction"
msgstr "Addition / Subtraktion"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:282
msgid "``<<`` ``>>``"
msgstr "``<<`` ``>>``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:282
msgid "Bit Shifting"
msgstr "Bit-Schieben"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:284
msgid "``&``"
msgstr "``&``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:284
msgid "Bitwise AND"
msgstr "Bitweises UND"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:286
msgid "``^``"
msgstr "``^``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:286
msgid "Bitwise XOR"
msgstr "Bitweises exklusiv-ODER (XOR)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:288
msgid "``|``"
msgstr "``|``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:288
msgid "Bitwise OR"
msgstr "Bitweises (inklusiv-) ODER"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:290
msgid "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"
msgstr "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:290
msgid "Comparisons"
msgstr "Vergleiche"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:292
msgid "``in``"
msgstr "``in``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:292
msgid "Content Test"
msgstr "Prüfung auf „enthält“"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:294
msgid "``!`` ``not``"
msgstr "``!`` ``not``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:294
msgid "Boolean NOT"
msgstr "Boolsches NICHT"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:296
msgid "``and`` ``&&``"
msgstr "``and`` ``&&``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:296
msgid "Boolean AND"
msgstr "Boolsches UND"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:298
msgid "``or`` ``||``"
msgstr "``or`` ``||``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:298
msgid "Boolean OR"
msgstr "Boolsches ODER"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:300
msgid "``if x else``"
msgstr "``if x else``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:300
#, fuzzy
msgid "Ternary if/else"
msgstr "Bedingte (ternäre) if/else Anweisung"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:302
msgid "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=``"
msgstr "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:302
msgid "Assignment, Lowest Priority"
msgstr "Zuweisung, niedrigste Priorität"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:306
msgid "Literals"
msgstr "Literale"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:309
msgid "**Literal**"
msgstr "**Literal**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:309
msgid "**Type**"
msgstr "**Typ**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:311
msgid "``45``"
msgstr "``45``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:311
msgid "Base 10 integer"
msgstr "Dezimale Ganzzahl (Basis 10)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:313
msgid "``0x8F51``"
msgstr "``0x8F51``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:313
msgid "Base 16 (hex) integer"
msgstr "Hexadezimale Ganzzahl (Basis 16)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:315
msgid "``3.14``, ``58.1e-10``"
msgstr "``3.14``, ``58.1e-10``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:315
msgid "Floating point number (real)"
msgstr "Fließkommazahl (reell)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:317
msgid "``\"Hello\"``, ``\"Hi\"``"
msgstr "``\"Hallo\"``, ``\"Hey\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:317
msgid "Strings"
msgstr "Zeichenketten"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:319
#, fuzzy
msgid "``\"\"\"Hello\"\"\"``"
msgstr "``\"\"\"Hey, Kumpel\"\"\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:319
msgid "Multiline string"
msgstr "Mehrzeilige Zeichenkette"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:321
msgid "``@\"Node/Label\"``"
msgstr "``@\"Node/Label\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:321
msgid "NodePath or StringName"
msgstr "NodePath oder StringName"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:323
#, fuzzy
msgid "``$NodePath``"
msgstr "Ressourcenpfad"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:323
msgid "Shorthand for ``get_node(\"NodePath\")``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:327
msgid "Comments"
msgstr "Kommentare"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:329
msgid ""
"Anything from a ``#`` to the end of the line is ignored and is considered a "
"comment."
msgstr ""
"Alles von einem ``#`` bis zum Ende der Zeile wird ignoriert und als "
"Kommentar aufgefasst."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:337
msgid ""
"Multi-line comments can be created using \"\"\" (three quotes in a row) at "
"the beginning and end of a block of text. Note that this creates a string, "
"therefore, it will not be stripped away when the script is compiled."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:348
msgid "Built-in types"
msgstr "Eingebaute Typen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:350
msgid ""
"Built-in types are stack-allocated. They are passed as values. This means a "
"copy is created on each assignment or when passing them as arguments to "
"functions. The only exceptions are ``Array``\\ s and ``Dictionaries``, which "
"are passed by reference so they are shared. (Not ``PoolArray``\\ s like "
"``PoolByteArray`` though, those are passed as values too, so consider this "
"when deciding which to use!)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:357
msgid "Basic built-in types"
msgstr "Einfache eingebaute Typen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:359
msgid "A variable in GDScript can be assigned to several built-in types."
msgstr ""
"Eine Variable in GDScript kann mehreren eingebauten Typen zugewiesen werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:362
msgid "null"
msgstr "null"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:364
msgid ""
"``null`` is an empty data type that contains no information and can not be "
"assigned any other value."
msgstr ""
"``null`` ist ein leerer Datentyp, der keine Information enthält und dem kein "
"anderer Wert zugewiesen werden kann."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:368
msgid "bool"
msgstr "bool"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:370
msgid "The Boolean data type can only contain ``true`` or ``false``."
msgstr "Der Boolean-Datentyp kann nur ``true`` oder ``false`` enthalten."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:373
msgid "int"
msgstr "int"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:375
msgid ""
"The integer data type can only contain integer numbers, (both negative and "
"positive)."
msgstr ""
"Der Ganzzahl-Datentyp int kann nur ganzzahlige Zahlen enthalten (positiv und "
"negativ)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:379
msgid "float"
msgstr "float"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:381
msgid "Used to contain a floating point value (real numbers)."
msgstr "Enthält eine Fließkommazahl (reelle Zahlen)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:384
msgid ":ref:`String <class_String>`"
msgstr ":ref:`String <class_String>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:386
msgid ""
"A sequence of characters in `Unicode format <https://en.wikipedia.org/wiki/"
"Unicode>`_. Strings can contain the `standard C escape sequences <https://en."
"wikipedia.org/wiki/Escape_sequences_in_C>`_. GDScript supports :ref:`format "
"strings aka printf functionality <doc_gdscript_printf>`."
msgstr ""
"Eine Sequenz von Zeichen im `Unicode-Format <https://de.wikipedia.org/wiki/"
"Unicode>`_. Zeichenketten können die `Standard C Escape-Sequenzen <https://"
"de.wikipedia.org/wiki/Escape-"
"Sequenz#In_C_und_verwandten_Programmiersprachen>`_ enthalten. GDScript "
"unterstützt :ref:`Format-Zeichenketten alias printf Funktionalität "
"<doc_gdscript_printf>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:392
msgid "Vector built-in types"
msgstr "eingebaute Vektor-Typen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:395
msgid ":ref:`Vector2 <class_Vector2>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:397
msgid ""
"2D vector type containing ``x`` and ``y`` fields. Can also be accessed as "
"array."
msgstr ""
"2D-Vektortyp, der ``x`` und ``y`` Felder enthält. Kann auch als Array "
"angesprochen werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:401
msgid ":ref:`Rect2 <class_Rect2>`"
msgstr ":ref:`Rect2 <class_Rect2>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:403
msgid ""
"2D Rectangle type containing two vectors fields: ``position`` and ``size``. "
"Alternatively contains an ``end`` field which is ``position+size``."
msgstr ""
"2D-Rechtecktyp, der zwei Vektorenfelder enthält: ``Position`` und ``Größe``. "
"Alternativ kann auch ein ``Ende``-Feld enthalten sein, welches ``Position"
"+Größe`` ist."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:407
msgid ":ref:`Vector3 <class_Vector3>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:409
msgid ""
"3D vector type containing ``x``, ``y`` and ``z`` fields. This can also be "
"accessed as an array."
msgstr ""
"3D-Vektortyp, der die Felder ``x``, ``y`` und ``z`` enthält. Auf diese kann "
"auch als Array zugegriffen werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:413
msgid ":ref:`Transform2D <class_Transform2D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:415
msgid "3x2 matrix used for 2D transforms."
msgstr "Eine 3x2 Matrix, welche für 2D Transformationen verwendet wird."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:418
msgid ":ref:`Plane <class_Plane>`"
msgstr ":ref:`Plane <class_Plane>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:420
#, fuzzy
msgid ""
"3D Plane type in normalized form that contains a ``normal`` vector field and "
"a ``d`` scalar distance."
msgstr ""
"3D Ebenentyp in Einheitsform, welcher ein ``normal`` Vektor Feld und ein "
"``d`` Skalardistanz Feld besitzt."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:424
msgid ":ref:`Quat <class_Quat>`"
msgstr ":ref:`Quat <class_Quat>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:426
#, fuzzy
msgid ""
"Quaternion is a datatype used for representing a 3D rotation. It's useful "
"for interpolating rotations."
msgstr ""
"Quaternion ist ein Datentyp, welcher für die Repräsentation von 3D "
"Rotationen verwendet wird. Er ist sehr nützlich für das Interpolieren von "
"Rotationen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:430
msgid ":ref:`AABB <class_AABB>`"
msgstr ":ref:`AABB <class_AABB>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:432
#, fuzzy
msgid ""
"Axis-aligned bounding box (or 3D box) contains 2 vectors fields: "
"``position`` and ``size``. Alternatively contains an ``end`` field which is "
"``position+size``."
msgstr ""
"Axis-aligned bounding box (oder 3D Box) besitzen 2 Vektorfelder: "
"``position`` und ``size``. Besitzt alternativ ein ``end`` Feld, welches "
"``position+size`` entspricht."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:437
msgid ":ref:`Basis <class_Basis>`"
msgstr ":ref:`Basis <class_Basis>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:439
msgid ""
"3x3 matrix used for 3D rotation and scale. It contains 3 vector fields "
"(``x``, ``y`` and ``z``) and can also be accessed as an array of 3D vectors."
msgstr ""
"3x3-Matrix für 3D-Rotation und Skalierung. Es enthält 3 Vektorfelder "
"(``x```, ``y`` und ``z``) und kann auch als Array von 3D-Vektoren "
"angesprochen werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:444
msgid ":ref:`Transform <class_Transform>`"
msgstr ":ref:`Transform <class_Transform>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:446
msgid ""
"3D Transform contains a Basis field ``basis`` and a Vector3 field ``origin``."
msgstr ""
"3D Transform enthält ein Basisfeld ```basis`` und ein Vector3-Feld "
"``origin``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:450
msgid "Engine built-in types"
msgstr "In die Engine eingebaute Typen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:453
msgid ":ref:`Color <class_Color>`"
msgstr ":ref:`Color <class_Color>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:455
#, fuzzy
msgid ""
"Color data type contains ``r``, ``g``, ``b``, and ``a`` fields. It can also "
"be accessed as ``h``, ``s``, and ``v`` for hue/saturation/value."
msgstr ""
"Der Color Datentyp besitzt jeweils ein ``r``, ein ``g``, ein ``b`` und ein "
"``a`` Feld. Es kann auch mit ``h``, ``s`` und ``v``, welche für Farbwert/"
"Farbsättigung/Dunkelstufe stehen, aufgerufen werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:459
msgid ":ref:`NodePath <class_NodePath>`"
msgstr ":ref:`NodePath <class_NodePath>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:461
msgid ""
"Compiled path to a node used mainly in the scene system. It can be easily "
"assigned to, and from, a String."
msgstr ""
"Hauptsächlich im Szenen-System genutzter kompilierter Pfad zu einem Knoten. "
"Zuweisung kann einfach zu und von einer Zeichenkette erfolgen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:465
msgid ":ref:`RID <class_RID>`"
msgstr ":ref:`RID <class_RID>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:467
msgid "Resource ID (RID). Servers use generic RIDs to reference opaque data."
msgstr ""
"Ressourcen-ID (RID). Server verwenden generische RIDs, um opake Daten zu "
"referenzieren."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:470
msgid ":ref:`Object <class_Object>`"
msgstr ":ref:`Object <class_Object>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:472
#, fuzzy
msgid "Base class for anything that is not a built-in type."
msgstr "Basisklasse für alles, was kein eingebauter Typ ist."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:475
msgid "Container built-in types"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:478
msgid ":ref:`Array <class_Array>`"
msgstr ":ref:`Array <class_Array>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:480
msgid ""
"Generic sequence of arbitrary object types, including other arrays or "
"dictionaries (see below). The array can resize dynamically. Arrays are "
"indexed starting from index ``0``. Starting with Godot 2.1, indices may be "
"negative like in Python, to count from the end."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:494
msgid ""
"GDScript arrays are allocated linearly in memory for speed. Large arrays "
"(more than tens of thousands of elements) may however cause memory "
"fragmentation. If this is a concern special types of arrays are available. "
"These only accept a single data type. They avoid memory fragmentation and "
"also use less memory but are atomic and tend to run slower than generic "
"arrays. They are therefore only recommended to use for large data sets:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:501
msgid ""
":ref:`PoolByteArray <class_PoolByteArray>`: An array of bytes (integers from "
"0 to 255)."
msgstr ""
":ref:`PoolByteArray <class_PoolByteArray>`: Ein Array aus Bytes (Integer von "
"0 bis 255)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:502
msgid ":ref:`PoolIntArray <class_PoolIntArray>`: An array of integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>`: Ein Array aus ganzen Zahlen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:503
msgid ":ref:`PoolRealArray <class_PoolRealArray>`: An array of floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>`: Ein Array aus Fließkommazahlen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:504
msgid ":ref:`PoolStringArray <class_PoolStringArray>`: An array of strings."
msgstr ""
":ref:`PoolStringArray <class_PoolStringArray>`: Ein Array aus Zeichenketten."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:505
msgid ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: An array of :ref:`Vector2 "
"<class_Vector2>` objects."
msgstr ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: Ein Array aus :ref:"
"`Vector2 <class_Vector2>` Objekten."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:506
msgid ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: An array of :ref:`Vector3 "
"<class_Vector3>` objects."
msgstr ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: Ein Array aus :ref:"
"`Vector3 <class_Vector3>` Objekten."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:507
msgid ""
":ref:`PoolColorArray <class_PoolColorArray>`: An array of :ref:`Color "
"<class_Color>` objects."
msgstr ""
":ref:`PoolColorArray <class_PoolColorArray>`: Ein Array aus :ref:`Color "
"<class_Color>` Objekten."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:510
msgid ":ref:`Dictionary <class_Dictionary>`"
msgstr ":ref:`Dictionary <class_Dictionary>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:512
msgid "Associative container which contains values referenced by unique keys."
msgstr ""
"Zugehöriger Container, der durch eindeutige Schlüssel referenzierte Werte "
"enthält."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:525
msgid ""
"Lua-style table syntax is also supported. Lua-style uses ``=`` instead of ``:"
"`` and doesn't use quotes to mark string keys (making for slightly less to "
"write). Note however that like any GDScript identifier, keys written in this "
"form cannot start with a digit."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:539
msgid ""
"To add a key to an existing dictionary, access it like an existing key and "
"assign to it::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:548
msgid "Data"
msgstr "Daten"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:551
msgid "Variables"
msgstr "Variablen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:553
msgid ""
"Variables can exist as class members or local to functions. They are created "
"with the ``var`` keyword and may, optionally, be assigned a value upon "
"initialization."
msgstr ""
"Variablen können als Klassen-Member oder lokal in Funktionen existieren. Sie "
"werden mit dem Schlüsselwort ``var`` erzeugt und können optional mit einem "
"Wert initialisiert werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:564
msgid ""
"Variables can optionally have a type specification. When a type is "
"specified, the variable will be forced to have always that same type, and "
"trying to assign an incompatible value will raise an error."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:568
msgid ""
"Types are specified in the variable declaration using a ``:`` (colon) symbol "
"after the variable name, followed by the type."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:576
msgid ""
"If the variable is initialized within the declaration the type can be "
"inferred, so it's possible to omit the type name::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:582
msgid ""
"Type inference is only possible if the assigned value has a defined type, "
"otherwise it will raise an error."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:585
msgid "Valid types are:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:587
msgid "Built-in types (Array, Vector2, int, String, etc.)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:588
msgid "Engine classes (Node, Resource, Reference, etc.)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:589
msgid ""
"Constant names if they contain a script resource (``MyScript`` if you "
"declared ``const MyScript = preload(\"res://my_script.gd\")``)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:590
msgid ""
"Other classes in the same script, respecting scope (``InnerClass."
"NestedClass`` if you declared ``class NestedClass`` inside the ``class "
"InnerClass`` in the same scope)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:591
msgid "Script classes declared with the ``class_name`` keyword."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:594
msgid "Casting"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:596
msgid ""
"Values assigned to typed variables must have a compatible type. If it's "
"needed to coerce a value to be of a certain type, in particular for object "
"types, you can use the casting operator ``as``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:600
msgid ""
"Casting between object types results on the same object if the value is of "
"the same type or a subtype of the casted type."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:608
msgid ""
"If the value is not a subtype, the casting operation will result in a "
"``null`` value."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:615
msgid ""
"For built-in types, they will be forcibly converted if possible, otherwise "
"the engine will raise an error."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:624
msgid ""
"Casting is also useful to have better type-safe variables when interacting "
"with tree::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:634
msgid "Constants"
msgstr "Konstanten"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:636
msgid ""
"Constants are similar to variables, but must be constants or constant "
"expressions and must be assigned on initialization."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:649
msgid ""
"Although the type of constants are inferred from the assigned value, it's "
"also possible to add explicit type specification::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:655
msgid "Assigning a value of an incompatible type will raise an error."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:658
msgid "Enums"
msgstr "Enumeratoren (Aufzählungen)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:660
msgid ""
"Enums are basically a shorthand for constants, and are pretty useful if you "
"want to assign consecutive integers to some constant."
msgstr ""
"Enumeratoren sind im Grunde ein Kürzel für Konstanten und sind nützlich, "
"wenn aufeinanderfolgende Ganzzahlen Kontanten zugeordnet werden sollen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:663
msgid ""
"If you pass a name to the enum, it would also put all the values inside a "
"constant dictionary of that name."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:684
msgid "Functions"
msgstr "Funktionen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:686
msgid ""
"Functions always belong to a `class <Classes_>`_. The scope priority for "
"variable look-up is: local → class member → global. The ``self`` variable is "
"always available and is provided as an option for accessing class members, "
"but is not always required (and should *not* be sent as the function's first "
"argument, unlike Python)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:699
msgid ""
"A function can ``return`` at any point. The default return value is ``null``."
msgstr ""
"Eine Funktion kann jederzeit ``zurückkehren``. Der Standard-Rückgabewert ist "
"``null``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:701
msgid ""
"Functions can also have type specification for the arguments and for the "
"return value. Types for arguments can be added in a similar way to "
"variables::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:707
msgid ""
"If a function argument has a default value, it's possible to infer the type::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:712
msgid ""
"The return type of the function can be specified after the arguments list "
"using the arrow token (``->``)::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:718
msgid ""
"Functions that have a return type **must** return a proper value. Setting "
"the type as ``void`` means the function doesn't return anything. Void "
"functions can return early with the ``return`` keyword, but they can't "
"return any value."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:727
msgid ""
"Non-void functions must **always** return a value, so if your code have "
"branching statements (such as ``if``/``else`` construct), all the possible "
"paths must have a return. E.g., if you have a ``return`` inside an ``if`` "
"block but not after it, the editor will raise an error because if the block "
"is not executed the function won't have a valid value to return."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:735
msgid "Referencing Functions"
msgstr "Funktionen referenzieren"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:737
msgid ""
"Contrary to Python, functions are *not* first class objects in GDScript. "
"This means they cannot be stored in variables, passed as an argument to "
"another function or be returned from other functions. This is for "
"performance reasons."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:741
msgid ""
"To reference a function by name at runtime, (e.g. to store it in a variable, "
"or pass it to another function as an argument) one must use the ``call`` or "
"``funcref`` helpers::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:754
msgid ""
"Remember that default functions like  ``_init``, and most notifications such "
"as ``_enter_tree``, ``_exit_tree``, ``_process``, ``_physics_process``, etc. "
"are called in all base classes automatically. So there is only a need to "
"call the function explicitly when overloading them in some way."
msgstr ""
"Beachte, dass Standard-Funktionen wie ``_init`` und die meisten "
"Benachrichtigungen wie ``_enter_tree``, ``_exit_tree``, ``_process``, "
"``_physics_process``, usw. in allen Basisklassen automatisch aufgerufen "
"werden. Die Funktionen explizit aufzurufen ist also nur dann notwendig, wenn "
"sie in irgendeiner Weise überladen werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:762
msgid "Static functions"
msgstr "Statische Funktionen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:764
msgid ""
"A function can be declared static. When a function is static it has no "
"access to the instance member variables or ``self``. This is mainly useful "
"to make libraries of helper functions:"
msgstr ""
"Eine Funktion kann als statisch deklariert werden. Wenn eine Funktion "
"statisch ist, hat sie keinen Zugriff auf die Member der Instanz oder "
"``self``. Dies ist hauptsächlich für Bibliotheken und Hilfsfunktionen "
"nützlich:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:775
msgid "Statements and control flow"
msgstr "Anweisungen und Kontrollstrukturen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:777
msgid ""
"Statements are standard and can be assignments, function calls, control flow "
"structures, etc (see below). ``;`` as a statement separator is entirely "
"optional."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:782
msgid "if/else/elif"
msgstr "if/else/elif"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:784
msgid ""
"Simple conditions are created by using the ``if``/``else``/``elif`` syntax. "
"Parenthesis around conditions are allowed, but not required. Given the "
"nature of the tab-based indentation, ``elif`` can be used instead of "
"``else``/``if`` to maintain a level of indentation."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:798
msgid "Short statements can be written on the same line as the condition::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:805
msgid ""
"Sometimes you might want to assign a different initial value based on a "
"boolean expression. In this case ternary-if expressions come in handy::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:814
msgid ""
"Simple loops are created by using ``while`` syntax. Loops can be broken "
"using ``break`` or continued using ``continue``:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:825
msgid ""
"To iterate through a range, such as an array or table, a *for* loop is used. "
"When iterating over an array, the current array element is stored in the "
"loop variable. When iterating over a dictionary, the *index* is stored in "
"the loop variable."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:854
msgid ""
"A ``match`` statement is used to branch execution of a program. It's the "
"equivalent of the ``switch`` statement found in many other languages but "
"offers some additional features."
msgstr ""
"Eine ``match``-Anweisung benutzt man, um die Ausführung des Programms zu "
"verzweigen. Sie ist äquivalent zur ``switch``-Anweisung, wie sie aus vielen "
"anderen Sprachen bekannt ist, aber bietet so manche zusätzliche "
"Funktionalität."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:857
msgid "Basic syntax:"
msgstr "Grundlegende Syntax:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:870
msgid "**Crash-course for people who are familiar to switch statements**:"
msgstr "**Crashkurs für jene, die mit switch-Anweisungen vertraut sind**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:872
msgid "Replace ``switch`` with ``match``"
msgstr "Ersetze ``switch`` mit ``match``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:873
msgid "Remove ``case``"
msgstr "Entferne ``case``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:874
msgid ""
"Remove any ``break``'s. If you don't want to ``break`` by default you can "
"use ``continue`` for a fallthrough."
msgstr ""
"Entfernt jedes ``break``. Sollte das standardmäßige ``break`` ungewünscht "
"sein, so kann durch ein ``continue`` ein Fortfahren erzielt werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:875
msgid "Change ``default`` to a single underscore."
msgstr "Ändere ``default`` zu einem einzelnen Unterstrich."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:878
msgid "**Control flow**:"
msgstr "**Kontrollfluss**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:880
msgid ""
"The patterns are matched from top to bottom. If a pattern matches, the "
"corresponding block will be executed. After that, the execution continues "
"below the ``match`` statement. If you want to have a fallthrough you can use "
"``continue`` to stop execution in the current block and check the ones below "
"it."
msgstr ""
"Die Schemas werden von oben nach unten abgeglichen. Wenn ein Schema passt, "
"wird der entsprechende Block ausgeführt. Danach setzt die Ausführung unter "
"der ``match``-Anweisung fort. Wenn stattdessen ein Durchrutschen "
"(Fallthrough) gewünscht ist, kann durch ein ``continue`` innerhalb eines "
"Blocks die Ausführung angehalten und in den folgenden gesprungen werden."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:884
msgid "There are 6 pattern types:"
msgstr "Es gibt 6 Schematypen:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:896
msgid "constant pattern"
msgstr "Konstantes Schema"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:887
msgid "constant primitives, like numbers and strings ::"
msgstr "Konstante Primitivtypen, wie Zahlen und Zeichenketten ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:908
msgid "variable pattern"
msgstr "Variablen-Schema"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:899
msgid "matches the contents of a variable/enum ::"
msgstr "gleicht mit dem Inhalt einer Variable oder Aufzählung ab ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:922
msgid "wildcard pattern"
msgstr "Platzhalter-Schema"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:911
msgid "This pattern matches everything. It's written as a single underscore."
msgstr ""
"Dieses Schema passt auf alles. Es wird als einzelner Unterstrich geschrieben."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:913
msgid ""
"It can be used as the equivalent of the ``default`` in a ``switch`` "
"statement in other languages. ::"
msgstr ""
"Es kann als das Äquivalent von ``default`` in einer ``switch``-Anweisung "
"anderer Sprachen gesehen werden. ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:935
msgid "binding pattern"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:925
msgid ""
"A binding pattern introduces a new variable. Like the wildcard pattern, it "
"matches everything - and also gives that value a name. It's especially "
"useful in array and dictionary patterns. ::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:954
msgid "array pattern"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:938
msgid ""
"matches an array. Every single element of the array pattern is a pattern "
"itself so you can nest them."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:940
msgid ""
"The length of the array is tested first, it has to be the same size as the "
"pattern, otherwise the pattern don't match."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:942
msgid ""
"**Open-ended array**: An array can be bigger than the pattern by making the "
"last subpattern ``..``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:944
msgid "Every subpattern has to be comma separated. ::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:979
msgid "dictionary pattern"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:957
msgid ""
"Works in the same way as the array pattern. Every key has to be a constant "
"pattern."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:959
msgid ""
"The size of the dictionary is tested first, it has to be the same size as "
"the pattern, otherwise the pattern don't match."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:961
msgid ""
"**Open-ended dictionary**: A dictionary can be bigger than the pattern by "
"making the last subpattern ``..``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:963
msgid "Every subpattern has to be comma separated."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:965
msgid ""
"If you don't specify a value, then only the existence of the key is checked."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:967
msgid "A value pattern is separated from the key pattern with a ``:`` ::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:990
msgid "Multipatterns:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:982
msgid ""
"You can also specify multiple patterns separated by a comma. These patterns "
"aren't allowed to have any bindings in them. ::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:993
msgid "Classes"
msgstr "Klassen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:995
msgid ""
"By default, all script files are unnamed classes. In this case, you can only "
"reference them using the file's path, using either a relative or an absolute "
"path. For example, if you name a script file ``character.gd``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1010
msgid ""
"Instead, you can give your class a name to register it as a new type in "
"Godot's editor. For that, you use the 'class_name' keyword. You can add an "
"optional comma followed by a path to an image, to use it as an icon. Your "
"class will then appear with its new icon in the editor:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1025
msgid "Here's a class file example:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1044
msgid ""
"Godot's class syntax is compact: it can only contain member variables or "
"functions. You can use static functions, but not static member variables. In "
"the same way, the engine initializes variables every time you create an "
"instance, and this includes arrays and dictionaries. This is in the spirit "
"of thread safety, since scripts can be initialized in separate threads "
"without the user knowing."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1052
msgid "Inheritance"
msgstr "Vererbung"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1054
msgid "A class (stored as a file) can inherit from"
msgstr "Eine Klasse (gespeichert als Datei) kann erben von"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1056
msgid "A global class"
msgstr "Einer globalen Klasse"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1057
msgid "Another class file"
msgstr "Einer anderen Klassendatei"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1058
msgid "An inner class inside another class file."
msgstr "Eine lokale Klasse innerhalb einer anderen Klassendatei."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1060
msgid "Multiple inheritance is not allowed."
msgstr "Mehrfache Vererbung ist nicht erlaubt."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1062
msgid "Inheritance uses the ``extends`` keyword:"
msgstr "Vererbung benutzt das Schlüsselwort ``extends``:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1076
msgid ""
"To check if a given instance inherits from a given class the ``is`` keyword "
"can be used:"
msgstr ""
"Um zu prüfen, ob eine gegebene Instanz von einer gegebenen Klasse erbt, "
"verwendet man das ``is`` Schlüsselwort:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1090
msgid ""
"To call a function in a *base class* (i.e. one ``extend``-ed in your current "
"class), prepend ``.`` to the function name:"
msgstr ""
"Um eine Funktion einer *Basisklasse* (d.h. die aktuelle Klasse erweitert "
"eine Basisklasse mit ``extend``), muss ``.`` dem Funktionsnamen "
"vorangestellt werden:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1097
msgid ""
"This is especially useful because functions in extending classes replace "
"functions with the same name in their base classes. So if you still want to "
"call them, you can use ``.`` like the ``super`` keyword in other languages:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1107
msgid "Class Constructor"
msgstr "Klassen-Konstruktor"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1109
msgid ""
"The class constructor, called on class instantiation, is named ``_init``. As "
"mentioned earlier, the constructors of parent classes are called "
"automatically when inheriting a class. So there is usually no need to call "
"``._init()`` explicitly."
msgstr ""
"Der Konstruktor einer Klasse heißt ``_init`` und wird beim Instanzieren "
"einer Klasse aufgerufen. Wie vorher erwähnt, werden die Konstruktoren der "
"Elternklassen automatisch aufgerufen, wenn man von ihnen erbt. Daher muss "
"man normalerweise ``._init()`` nicht explizit aufrufen."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1113
msgid ""
"Unlike the call of a regular function like in the above example with ``."
"some_func``, if the constructor from the inherited class takes arguments, "
"they are passed like this:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1121
msgid "This is better explained through examples. Say we have this scenario:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1143
#, fuzzy
msgid "There are a few things to keep in mind here:"
msgstr "Es gibt keine Nutzungsbeschränkung für Godot"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1145
msgid ""
"if the inherited class (``State.gd``) defines a ``_init`` constructor that "
"takes arguments (``e`` in this case) then the inheriting class (``Idle.gd``) "
"*has* to define ``_init`` as well and pass appropriate parameters to "
"``_init`` from ``State.gd``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1148
msgid ""
"``Idle.gd`` can have a different number of arguments than the base class "
"``State.gd``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1149
msgid ""
"in the example above ``e`` passed to the ``State.gd`` constructor is the "
"same ``e`` passed in to ``Idle.gd``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1151
msgid ""
"if ``Idle.gd``'s ``_init`` constructor takes 0 arguments it still needs to "
"pass some value to the ``State.gd`` base class even if it does nothing. "
"Which brings us to the fact that you can pass literals in the base "
"constructor as well, not just variables. Eg.:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1163
msgid "Inner classes"
msgstr "Innere Klassen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1165
msgid ""
"A class file can contain inner classes. Inner classes are defined using the "
"``class`` keyword. They are instanced using the ``ClassName.new()`` function."
msgstr ""
"Eine Klassendatei kann lokale Klassen beinhalten. Lokale Klassen werden "
"durch das ``class`` Schlüsselwort definiert. Sie werden mithilfe der "
"``Klassenname.new()``-Funktion instanziert."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1185
msgid "Classes as resources"
msgstr "Klassen als Ressourcen"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1187
msgid ""
"Classes stored as files are treated as :ref:`resources <class_GDScript>`. "
"They must be loaded from disk to access them in other classes. This is done "
"using either the ``load`` or ``preload`` functions (see below). Instancing "
"of a loaded class resource is done by calling the ``new`` function on the "
"class object::"
msgstr ""
"Klassen, die als Datei gespeichert sind, werden als :ref:`resources "
"<class_GDScript>` behandelt. Sie müssen von der Festplatte geladen werden, "
"um auf sie in anderen Klassen zuzugreifen. Dies macht man mit den Funktionen "
"``load`` oder ``preload`` (siehe weiter unten). Das Instanzieren einer "
"geladenen Klassenressource erledigt man durch Aufruf der ``new``-Funktion "
"auf dem Klassenobjekt::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1203
msgid "Exports"
msgstr "Exporte"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1205
msgid ""
"Class members can be exported. This means their value gets saved along with "
"the resource (e.g. the :ref:`scene <class_PackedScene>`) they're attached "
"to. They will also be available for editing in the property editor. "
"Exporting is done by using the ``export`` keyword::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1214
msgid ""
"An exported variable must be initialized to a constant expression or have an "
"export hint in the form of an argument to the export keyword (see below)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1217
msgid ""
"One of the fundamental benefits of exporting member variables is to have "
"them visible and editable in the editor. This way artists and game designers "
"can modify values that later influence how the program runs. For this, a "
"special export syntax is provided."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1303
msgid ""
"It must be noted that even if the script is not being run while at the "
"editor, the exported properties are still editable (see below for \"tool\")."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1308
msgid "Exporting bit flags"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1310
msgid ""
"Integers used as bit flags can store multiple ``true``/``false`` (boolean) "
"values in one property. By using the export hint ``int, FLAGS``, they can be "
"set from the editor:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1319
msgid ""
"Restricting the flags to a certain number of named flags is also possible. "
"The syntax is similar to the enumeration syntax:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1327
msgid ""
"In this example, ``Fire`` has value 1, ``Water`` has value 2, ``Earth`` has "
"value 4 and ``Wind`` corresponds to value 8. Usually, constants should be "
"defined accordingly (e.g. ``const ELEMENT_WIND = 8`` and so on)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1332
msgid ""
"Using bit flags requires some understanding of bitwise operations. If in "
"doubt, boolean variables should be exported instead."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1336
msgid "Exporting arrays"
msgstr "Arrays exportieren"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1338
msgid ""
"Exporting arrays works but with an important caveat: While regular arrays "
"are created local to every class instance, exported arrays are *shared* "
"between all instances. This means that editing them in one instance will "
"cause them to change in all other instances. Exported arrays can have "
"initializers, but they must be constant expressions."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1375
msgid "Setters/getters"
msgstr "Setter/Getter"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1377
msgid ""
"It is often useful to know when a class' member variable changes for "
"whatever reason. It may also be desired to encapsulate its access in some "
"way."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1380
msgid ""
"For this, GDScript provides a *setter/getter* syntax using the ``setget`` "
"keyword. It is used directly after a variable definition:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1387
msgid ""
"Whenever the value of ``variable`` is modified by an *external* source (i.e. "
"not from local usage in the class), the *setter* function (``setterfunc`` "
"above) will be called. This happens *before* the value is changed. The "
"*setter* must decide what to do with the new value. Vice-versa, when "
"``variable`` is accessed, the *getter* function (``getterfunc`` above) must "
"``return`` the desired value. Below is an example:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1404
msgid "Either of the *setter* or *getter* functions can be omitted:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1413
msgid ""
"Get/Setters are especially useful when exporting variables to editor in tool "
"scripts or plugins, for validating input."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1416
msgid ""
"As said *local* access will *not* trigger the setter and getter. Here is an "
"illustration of this:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1431
msgid "Tool mode"
msgstr "Werkzeug-Modus"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1433
msgid ""
"Scripts, by default, don't run inside the editor and only the exported "
"properties can be changed. In some cases it is desired that they do run "
"inside the editor (as long as they don't execute game code or manually avoid "
"doing so). For this, the ``tool`` keyword exists and must be placed at the "
"top of the file:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1448
msgid "Memory management"
msgstr "Speicher-Management"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1450
msgid ""
"If a class inherits from :ref:`class_Reference`, then instances will be "
"freed when no longer in use. No garbage collector exists, just reference "
"counting. By default, all classes that don't define inheritance extend "
"**Reference**. If this is not desired, then a class must inherit :ref:"
"`class_Object` manually and must call instance.free(). To avoid reference "
"cycles that can't be freed, a ``weakref`` function is provided for creating "
"weak references."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1458
msgid ""
"Alternatively, when not using references, the "
"``is_instance_valid(instance)`` can be used to check if an object has been "
"freed."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1463
msgid "Signals"
msgstr "Signale"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1465
msgid ""
"It is often desired to send a notification that something happened in an "
"instance. GDScript supports creation of built-in Godot signals. Declaring a "
"signal in GDScript is easy using the `signal` keyword."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1476
msgid ""
"These signals can be connected in the editor or from code like regular "
"signals. Take the instance of a class where the signal was declared and "
"connect it to the method of another instance:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1492
msgid ""
"It is also possible to bind arguments to a signal that lacks them with your "
"custom values:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1500
msgid ""
"This is useful when a signal from many objects is connected to a single "
"callback and the sender must be identified:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1512
msgid ""
"Finally, emitting a custom signal is done by using the Object.emit_signal "
"method:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1523
#, fuzzy
msgid "Coroutines with yield"
msgstr "Co-Routinen & Signale"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1525
msgid ""
"GDScript offers support for `coroutines <https://en.wikipedia.org/wiki/"
"Coroutine>`_ via the ``yield`` built-in function. Calling ``yield()`` will "
"immediately return from the current function, with the current frozen state "
"of the same function as the return value. Calling ``resume`` on this "
"resulting object will continue execution and return whatever the function "
"returns. Once resumed the state object becomes invalid. Here is an example:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1547
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1571
msgid "Will print:"
msgstr "Ausgabe:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1555
msgid ""
"It is also possible to pass values between yield() and resume(), for example:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1580
msgid "Coroutines & signals"
msgstr "Co-Routinen & Signale"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1582
msgid ""
"The real strength of using ``yield`` is when combined with signals. "
"``yield`` can accept two parameters, an object and a signal. When the signal "
"is received, execution will recommence. Here are some examples:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1597
msgid ""
"Coroutines themselves use the ``completed`` signal when they transition into "
"an invalid state, for example:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1610
msgid ""
"``my_func`` will only continue execution once both the buttons are pressed."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1613
msgid "Onready keyword"
msgstr "Onready Schlüsselwort"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1615
msgid ""
"When using nodes, it's common to desire to keep references to parts of the "
"scene in a variable. As scenes are only warranted to be configured when "
"entering the active scene tree, the sub-nodes can only be obtained when a "
"call to Node._ready() is made."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1627
msgid ""
"This can get a little cumbersome, especially when nodes and external "
"references pile up. For this, GDScript has the ``onready`` keyword, that "
"defers initialization of a member variable until _ready is called. It can "
"replace the above code with a single line:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1637
#, fuzzy
msgid "Assert keyword"
msgstr "Onready Schlüsselwort"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1639
msgid ""
"The ``assert`` keyword can be used to check conditions in debug builds. "
"These assertions are ignored in non-debug builds."
msgstr ""
