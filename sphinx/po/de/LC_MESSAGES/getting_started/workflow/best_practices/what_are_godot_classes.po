# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-08 12:36+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:4
msgid "Applying object-oriented principles in Godot"
msgstr "Anwendung objektorientierter Prinzipien in Godot"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:6
msgid ""
"The engine offers two main ways to create reusable objects: scripts and "
"scenes. Neither of these technically define classes under the hood."
msgstr ""
"Die Engine bietet zwei Hauptmöglichkeiten zum Erstellen wiederverwendbarer "
"Objekte: Skripte und Szenen. Beide definieren technisch gesehen keine "
"Klassen unter der Haube."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:9
msgid ""
"Still, many best practices using Godot involve applying object-oriented "
"programming principles to the scripts and scenes that compose your game. "
"That is why it's useful to understand how we can think of them as classes."
msgstr ""
"Bei vielen empfohlenen Vorgehensweisen mit Godot werden jedoch "
"objektorientierte Programmierprinzipien auf die Skripte und Szenen "
"angewendet, aus denen Ihr Spiel besteht. Deshalb ist es nützlich zu "
"verstehen, wie wir sie als Klassen betrachten können."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:13
msgid ""
"This guide briefly explains how scripts and scenes work in the engine's core "
"to help you understand how they work under the hood."
msgstr ""
"In diesem Handbuch wird kurz erläutert wie Skripte und Szenen im Kern der "
"Engine funktionieren, damit Sie ein besseres Verständnis für deren "
"funktionsweise erhalten."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:17
msgid "How scripts work in the engine"
msgstr "Wie Skripte in der Engine funktionieren"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:19
msgid ""
"The engine provides built-in classes like :ref:`Node <class_Node>`. You can "
"extend those to create derived types using a script."
msgstr ""
"Die Engine bietet integrierte Klassen wie :ref:`Node <class_Node>`. Sie "
"können diese erweitern um mithilfe eines Skripts abgeleitete Typen zu "
"erstellen."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:22
msgid ""
"These scripts are not technically classes. Instead, they are resources that "
"tell the engine a sequence of initializations to perform on one of the "
"engine's built-in classes."
msgstr ""
"Diese Skripte sind technisch gesehen keine Klassen. Stattdessen handelt es "
"sich um Ressourcen, die der Engine eine Folge von Initialisierungen "
"mitteilen, die für eine der integrierten Klassen der Engine ausgeführt "
"werden sollen."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:25
msgid ""
"Godot's internal classes have methods that register a class's data with a :"
"ref:`ClassDB <class_ClassDB>`. This database provides runtime access to "
"class information. ``ClassDB`` contains information about classes like:"
msgstr ""
"Die internen Klassen von Godot verfügen über Methoden, die die Daten einer "
"Klasse mit einem :ref:`ClassDB <class_ClassDB>` registrieren. Diese "
"Datenbank bietet Laufzeitzugriff auf Klasseninformationen. ``ClassDB`` "
"enthält Informationen zu Klassen wie:"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:29
msgid "Properties."
msgstr "Eigenschaften"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:30
msgid "Methods."
msgstr "Methoden"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:31
msgid "Constants."
msgstr "Konstanten"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:32
msgid "Signals."
msgstr "Signale"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:34
msgid ""
"This ``ClassDB`` is what objects check against when performing an operation "
"like accessing a property or calling a method. It checks the database's "
"records and the object's base types' records to see if the object supports "
"the operation."
msgstr ""
"Diese ``ClassDB`` ist das, was Objekte überprüfen, wenn sie eine Operation "
"wie den Zugriff auf eine Eigenschaft oder den Aufruf einer Methode "
"durchführen. Es prüft die Datensätze der Datenbank und die Datensätze der "
"Basistypen des Objekts, um zu sehen, ob das Objekt die Operation unterstützt."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:38
msgid ""
"Attaching a :ref:`Script <class_Script>` to your object extends the methods, "
"properties, and signals available from the ``ClassDB``."
msgstr ""
"Das Anhängen eines :ref:`Script <class_Script>` an Ihr Objekt erweitert die "
"Methoden, Eigenschaften und Signale, die von der ``ClassDB`` zur Verfügung "
"stehen."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:43
msgid ""
"Even scripts that don't use the ``extends`` keyword implicitly inherit from "
"the engine's base :ref:`Reference <class_Reference>` class. As a result, you "
"can instantiate scripts without the ``extends`` keyword from code. Since "
"they extend ``Reference`` though, you cannot attach them to a :ref:`Node "
"<class_Node>`."
msgstr ""
"Auch Skripte, die das Schlüsselwort ``extends`` nicht verwenden, erben "
"implizit von der Basisklasse der Engine :ref:`Reference <class_Reference>`. "
"Folglich können Sie Skripte ohne das Schlüsselwort ``extends`` aus dem Code "
"instanziieren. Da sie jedoch ``Referenz`` erweitern, können Sie sie nicht an "
"einen :ref:`Node <class_Node>` anhängen."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:49
msgid "Scenes"
msgstr "Szenen"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:51
msgid ""
"The behavior of scenes has many similarities to classes, so it can make "
"sense to think of a scene as a class. Scenes are reusable, instantiable, and "
"inheritable groups of nodes. Creating a scene is similar to having a script "
"that creates nodes and adds them as children using ``add_child()``."
msgstr ""
"ElementeDas Verhalten von Szenen hat viele Ähnlichkeiten mit Klassen, so "
"dass es sinnvoll sein kann, sich eine Szene als Klasse vorzustellen. Szenen "
"sind wiederverwendbare, instanzierbare und vererbbare Gruppen von Nodes. Das "
"Erzeugen einer Szene ist vergleichbar mit einem Skript, das Nodes erzeugt "
"und sie mit ``add_child()`` als Unterobjekt hinzufügt."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:55
msgid ""
"We often pair a scene with a scripted root node that makes use of the "
"scene's nodes. As such, the scene is often an extension of the script's "
"declarative code."
msgstr ""
"Wir koppeln häufig eine Szene mit einem geskripteten Wurzel-Node, der die "
"Nodes der Szene verwendet. Daher ist die Szene häufig eine Erweiterung des "
"deklarativen Codes des Skripts."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:58
msgid "The content of a scene helps to define:"
msgstr "Der Inhalt einer Szene hilft bei der Definition von:"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:60
msgid "What nodes are available to the script"
msgstr "Welche Nodes in dem Skript verfügbar sind"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:61
msgid "How they are organized"
msgstr "Wie sie organisiert sind"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:62
msgid "How they are initialized"
msgstr "Wie sie initialisiert werden"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:63
msgid "What signal connections they have with each other"
msgstr "Welche Signalverbindungen sie miteinander haben"

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:65
msgid ""
"Why is any of this important to scene organization? Because instances of "
"scenes *are* objects. As a result, many object-oriented principles that "
"apply to written code also apply to scenes: single responsibility, "
"encapsulation, and others."
msgstr ""
"Warum ist irgendetwas davon für die Organisation der Szene wichtig? Weil "
"Instanzen von Szenen *Objekte* sind. Infolgedessen gelten viele "
"objektorientierte Prinzipien, die für geschriebenen Code gelten, auch für "
"Szenen: Einzelverantwortung, Kapselung und andere."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:69
msgid ""
"The scene is *always an extension of the script attached to its root node*, "
"so you can interpret it as part of a class."
msgstr ""
"Die Szene ist *immer eine Erweiterung des Skripts, das dem Wurzel-Node "
"angehängt ist*, sodass Sie sie als Teil einer Klasse interpretieren können."

#: ../../docs/getting_started/workflow/best_practices/what_are_godot_classes.rst:72
msgid ""
"Most of the techniques explained in this best practices series build on this "
"point."
msgstr ""
"Die meisten der in dieser Best Practices-Reihe erläuterten Techniken bauen "
"auf diesem Punkt auf."
