# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-04 09:58+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/cpp/configuring_an_ide.rst:4
msgid "Configuring an IDE"
msgstr "IDE konfigurieren"

#: ../../docs/development/cpp/configuring_an_ide.rst:6
#, fuzzy
msgid ""
"We assume that you have already `cloned <https://github.com/godotengine/"
"godot>`_ and :ref:`compiled <toc-devel-compiling>` Godot."
msgstr ""
"Wir nehmen an, dass du bereits Godot `geklont <https://github.com/"
"godotengine/godot>`_ und :ref:`kompiliert <toc-devel-compiling>` hast."

#: ../../docs/development/cpp/configuring_an_ide.rst:9
msgid ""
"You can easily develop Godot with any text editor and by invoking ``scons`` "
"on the command line, but if you want to work with an IDE (Integrated "
"Development Environment), here are setup instructions for some popular ones:"
msgstr ""
"Du kannst an Godot einfach mit beliebigem Texteditor und dem Aufruf von "
"``scons`` auf der Kommandozeile entwickeln, aber falls du mit einer IDE "
"(Integrierte Entwicklungsumgebung) arbeiten möchtest, sind hier Anleitungen "
"zur Einrichtung für einige populäre IDEs:"

#: ../../docs/development/cpp/configuring_an_ide.rst:13
msgid ""
":ref:`Qt Creator <doc_configuring_an_ide_qtcreator>` (all desktop platforms)"
msgstr ""
":ref:`Qt Creator <doc_configuring_an_ide_qtcreator>` (alle Desktop "
"Platformen)"

#: ../../docs/development/cpp/configuring_an_ide.rst:14
msgid ""
":ref:`Kdevelop <doc_configuring_an_ide_kdevelop>` (all desktop platforms)"
msgstr ""
":ref:`Kdevelop <doc_configuring_an_ide_kdevelop>` (alle Desktop Platformen)"

#: ../../docs/development/cpp/configuring_an_ide.rst:15
msgid ":ref:`Xcode <doc_configuring_an_ide_xcode>` (macOS)"
msgstr ":ref:`Xcode <doc_configuring_an_ide_xcode>` (macOS -  Apple)"

#: ../../docs/development/cpp/configuring_an_ide.rst:16
#, fuzzy
msgid ":ref:`Visual Studio <doc_configuring_an_ide_vs>` (Windows)"
msgstr ""
":ref:`Visual Studio <doc_compiling_for_windows_install_vs>` (Windows - "
"Microsoft)"

#: ../../docs/development/cpp/configuring_an_ide.rst:17
msgid ""
":ref:`Visual Studio Code<doc_configuring_an_ide_vscode>` (all desktop "
"platforms)"
msgstr ""
":ref:`Visual Studio Code<doc_configuring_an_ide_vscode>` (alle Desktop-"
"Plattformen)"

#: ../../docs/development/cpp/configuring_an_ide.rst:18
#, fuzzy
msgid ""
":ref:`Android Studio<doc_configuring_an_ide_android_studio>` (all desktop "
"platforms)"
msgstr ""
":ref:`Visual Studio Code<doc_configuring_an_ide_vscode>` (alle Desktop-"
"Plattformen)"

#: ../../docs/development/cpp/configuring_an_ide.rst:19
#, fuzzy
msgid ":ref:`CLion<doc_configuring_an_ide_clion>` (all desktop platforms)"
msgstr ""
":ref:`Kdevelop <doc_configuring_an_ide_kdevelop>` (alle Desktop Platformen)"

#: ../../docs/development/cpp/configuring_an_ide.rst:21
msgid ""
"It is possible to use other IDEs, but their setup is not documented yet."
msgstr ""
"Es ist möglich andere IDEs zu verwenden, aber die Einrichtung ist noch nicht "
"dokumentiert."

#: ../../docs/development/cpp/configuring_an_ide.rst:26
msgid "Qt Creator"
msgstr "QT Creator"

#: ../../docs/development/cpp/configuring_an_ide.rst:29
msgid "Importing the project"
msgstr "Projekt importieren"

#: ../../docs/development/cpp/configuring_an_ide.rst:31
msgid "Choose *New Project* -> *Import Project* -> *Import Existing Project*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:35
msgid "Set the path to your Godot root directory and enter the project name."
msgstr ""
"Setze den Pfad zu deinem Godot Stammverzeichnis und gib den Projektnamen ein."

#: ../../docs/development/cpp/configuring_an_ide.rst:39
msgid ""
"Here you can choose which folders and files will be visible to the project. "
"C/C++ files are added automatically. Potentially useful additions: \\*.py "
"for buildsystem files, \\*.java for Android development, \\*.mm for macOS. "
"Click \"Next\"."
msgstr ""
"Hier kannst du wählen welche Verzeichnisse und Dateien für das Projekt "
"sichtbar sind. C/C++ Dateien werden automatisch hinzugefügt. Potentiell "
"nützliche Ergänzungen: \\*.py für buildsystem Dateien, \\*.java für Android "
"Entwicklung, \\*.mm für macOS. Klicke \"Next\"."

#: ../../docs/development/cpp/configuring_an_ide.rst:45
msgid "Click *Finish*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:46
msgid ""
"Add a line containing ``.`` to *project_name.includes* to get working code "
"completion."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:51
msgid "Build and run"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:53
msgid "Build configuration:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:55
msgid "Click on *Projects* and open the *Build* tab."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:56
msgid "Delete the pre-defined ``make`` build step."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:60
msgid "Click *Add Build Step* -> *Custom Process Step*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:64
msgid ""
"Type ``scons`` in the *Command* field. If it fails with 'Could not start "
"process \"scons\"', it can mean that ``scons`` is not in your ``PATH`` "
"environment variable, so you may have to use the full path to the SCons "
"binary."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:67
msgid ""
"Fill the *Arguments* field with your compilation options. (e.g.: ``p=x11 "
"target=debug -j 4``)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:71
msgid "Run configuration:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:73
msgid "Open the *Run* tab."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:74
msgid ""
"Point the *Executable* to your compiled Godot binary (e.g: ``%{buildDir}/bin/"
"godot.x11.opt.tools.64``)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:75
msgid ""
"If you want to run a specific game or project, point *Working directory* to "
"the game directory."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:76
msgid ""
"If you want to run the editor, add ``-e`` to the *Command line arguments* "
"field."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:81
msgid "Updating sources after pulling latest commits"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:83
msgid ""
"As a developer you usually want to frequently pull the latest commits from "
"the upstream git repository or a specific fork etc. However, this brings a "
"little problem with it: as the development continues, source files (and "
"folders) are added or removed. These changes need to be reflected in your "
"project files for Qt Creator too, so you continue to have a nice experience "
"coding in it. A simple way to check is to right click at your root folder in "
"the \"Projects View\" and click on \"Edit files...\""
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:93
msgid ""
"Now a new dialog should appear that is similar in functionality to the one "
"in the third step of the \"Importing the project\" section. Here you can "
"check whether you want to add/remove specific files and/or folders. You can "
"choose by clicking with your mouse or just simply by clicking the \"Apply "
"Filter\" button. A simple click on \"Ok\" and you're ready to continue your "
"work."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:101
msgid "Code style configuration"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:103
msgid ""
"Developers must follow the project's :ref:`code style "
"<doc_code_style_guidelines>` and IDE should help them to do it. By default, "
"Qt Creator does use spaces for indentation which is incorrect for Godot "
"project. You can change this behavior by changing the \"Code Style\" in "
"*Options* -> *C++*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:110
msgid ""
"Click on *Edit* to change the current settings, then click on *Copy Built-in "
"Code Style* button to set a new code style. Set a name for it (e.g. Godot) "
"and change the Tab policy to be *Tabs Only*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:119
msgid "KDevelop"
msgstr "K-Develop"

#: ../../docs/development/cpp/configuring_an_ide.rst:121
msgid ""
"`KDevelop <https://www.kdevelop.org>`_ is a free, open source IDE for all "
"desktop platforms."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:123
msgid ""
"You can find a video tutorial `here <https://www.youtube.com/watch?"
"v=yNVoWQi9TJA>`_. Or you may follow this text version tutorial."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:126
msgid "Start by opening KDevelop and choosing \"open project\"."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:130
msgid "Choose the directory where you cloned Godot."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:132
msgid ""
"On the next screen, choose \"Custom Build System\" for the *Project manager*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:136
msgid "Now that the project has been imported, open the project configuration."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:140
msgid "Add the following includes/imports:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:153
msgid "Apply the changes."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:155
msgid ""
"Switch to the \"Custom Build System\" tab. Add a build configuration and "
"keep the build directory blank. Enable build tools and add ``scons`` as the "
"executable then add ``platform=x11 target=debug`` (``platform=osx`` if "
"you're on macOS) as the arguments."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:162
msgid ""
"Next we need to tell KDevelop where to find the binary. From the \"Run\" "
"menu, choose \"Configure Launches\"."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:167
msgid ""
"Click \"Add\" if no launcher exists. Then add the path to your executable in "
"the executable section. Your executable should be located in the ``bin/`` "
"sub-directory and should be named something like ``godot.x11.tools.64`` (the "
"name could be different depending on your platform and depending on your "
"build options)."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:175
msgid "That's it! Now you should be good to go :)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:181
msgid "Xcode"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:184
#: ../../docs/development/cpp/configuring_an_ide.rst:373
msgid "Project setup"
msgstr "Projektkonfiguration"

#: ../../docs/development/cpp/configuring_an_ide.rst:186
msgid "Create an Xcode external build project anywhere"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:190
msgid "Set the *Build tool* to the path to scons"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:192
msgid "Modify Build Target's Xcode Info Tab:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:194
msgid ""
"Set *Arguments* to something like: platform=osx tools=yes bits=64 "
"target=debug"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:195
msgid ""
"Set *Directory* to the path to Godot's source folder. Keep it blank if "
"project is already there."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:196
msgid "You may uncheck *Pass build settings in environment*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:200
msgid "Add a Command Line Target:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:202
msgid ""
"Go to Xcode File > New > Target... and add a new Xcode command line target"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:208
msgid "Name it something so you know not to compile with this target"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:209
msgid "e.g. ``GodotXcodeIndex``"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:210
msgid ""
"Goto the newly created target's *Build Settings* tab and search for *Header "
"Search Paths*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:211
msgid "Set *Header Search Paths* to an absolute path to Godot's source folder"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:212
msgid "Make it recursive by adding two \\*'s to the end of the path"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:213
msgid "e.g. ``/Users/me/repos/godot-source/\\**``"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:215
msgid "Add Godot Source to the Project:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:217
msgid "Drag and drop Godot source into project file browser."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:218
msgid "Uncheck *Create External Build System*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:222
msgid "Click Next"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:223
msgid "Select *create groups*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:227
msgid "Check off only your command line target in the *Add to targets* section"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:228
msgid "Click finish. Xcode will now index the files."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:229
msgid "Grab a cup of coffee... Maybe make something to eat, too"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:230
msgid ""
"You should have jump to definition, auto completion, and full syntax "
"highlighting when it is done."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:233
msgid "Scheme setup"
msgstr "Schema-Setup"

#: ../../docs/development/cpp/configuring_an_ide.rst:235
msgid "Edit Build Scheme of External Build Target:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:237
msgid "Open scheme editor of external build target"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:238
msgid "Expand the *Build* menu"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:239
msgid "Goto *Post Actions*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:240
msgid ""
"Add a new script run action, select your project in ``Provide build settings "
"from`` as this allows you to use ``${PROJECT_DIR}`` variable."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:244
msgid "Write a script that gives the binary a name that Xcode will recognize"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:245
msgid ""
"e.g. ``ln -f ${PROJECT_DIR}/godot/bin/godot.osx.tools.64 ${PROJECT_DIR}/"
"godot/bin/godot``"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:246
msgid "Build the external build target"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:248
msgid "Edit Run Scheme of External Build Target:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:250
msgid "Open the scheme editor again"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:251
msgid "Click Run"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:255
msgid ""
"Set the *Executable* to the file you linked in your post build action script"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:256
msgid "Check *Debug executable* if it isn't already"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:257
msgid ""
"You can go to *Arguments* tab and add an -e and a -path to a project to "
"debug the editor not the project selection screen"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:260
msgid "Test it:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:262
msgid "Set a breakpoint in platform/osx/godot_main_osx.mm"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:263
msgid "It should break at the point!"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:269
#, fuzzy
msgid "Visual Studio"
msgstr "VisualScript"

#: ../../docs/development/cpp/configuring_an_ide.rst:271
msgid ""
"Visual Studio Community is free for non-commercial use and has many useful "
"features, such as memory view, performance view, source control and more. "
"You can get it `from Microsoft <https://visualstudio.microsoft.com/downloads/"
">`__."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:276
msgid "Setup"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:278
msgid "To start developing with Visual Studio, follow these steps:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:280
msgid "Open the Visual Studio Installer and install the C++ package:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:284
msgid ""
"Open a Command Prompt or PowerShell window, use ``cd`` to reach the Godot "
"source directory and run ``scons platform=windows vsproj=yes``."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:287
msgid ""
"Now open the Godot folder by clicking **Open a project or solution** and "
"choose ``godot.sln``. - You can also double-click the ``godot.sln`` file in "
"Explorer."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:291
msgid "You can now start developing with Visual Studio."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:294
msgid "Debugging"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:296
msgid ""
"Visual Studio features a powerful debugger. This allows the user to examine "
"Godot's source code, stop at specific points in the code, make changes, and "
"view them on the run."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:299
msgid ""
"Debugging the Godot Engine inside the editor will require an extra setup "
"step."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:301
msgid ""
"Because opening Godot opens the Project Manager at first instead of the "
"project you're working on, the debugger will detach as soon as you open a "
"project. This means that the debugger will stop, even though Godot is still "
"running in another process."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:306
msgid ""
"To overcome this, you need to edit the debugging command line arguments in "
"VS. In your project, click **Project > Project Properties**:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:311
msgid "Then add this to the command arguments:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:315
msgid ""
"The ``-e`` flag is for entering the editor directly (which skips the Project "
"Manager)."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:316
msgid ""
"The ``--path`` argument should be an *absolute* path to a project directory "
"(not a `project.godot` file)."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:319
msgid ""
"To learn more about command line arguments, refer to the :ref:`command line "
"tutorial <doc_command_line_tutorial>`."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:322
msgid ""
"To check that everything is working, put a breakpoint in ``main.cpp`` and "
"press F5 to start debugging."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:331
msgid "Visual Studio Code"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:333
msgid ""
"Ensure that C/C++ extension is installed. You can find instructions in `docs "
"<https://code.visualstudio.com/docs/languages/cpp>`_."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:335
msgid "Open cloned godot folder in VS Code with ``File > Open Folder...``"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:337
msgid ""
"In order to build the project, you need two configuration files: *launch."
"json* and *tasks.json*. To create them:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:340
msgid ""
"Open *Debug* view by pressing :kbd:`Ctrl + Shift + D` and select cogwheel "
"with an orange dot:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:344
msgid ""
"Select *C++ (GDB/LLDB)* (it might be named differently on macOS or Windows)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:346
msgid "Update *launch.json* to match:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:350
msgid ""
"(Note that *godot.x11.tools.64* in \"program\" value might be named "
"differently on macOS or Windows)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:352
msgid ""
"Create *tasks.json* by starting the Debug process with :kbd:`F5`. VS Code "
"will show a dialog with a *Configure Task* button. Tap it and select *Create "
"tasks.json file from template*, then select *Others*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:354
msgid "Update *tasks.json* to match:"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:358
msgid "(Note that *platform=x11* will be different for macOX and Windows)"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:360
msgid ""
"You can now start the Debug process again to test that everything works."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:362
msgid ""
"If the build phase fails, check the console for hints. On Linux it's most "
"likely that some dependencies are missing. Check :ref:`Compiling for X11 "
"(Linux, \\*BSD) <doc_compiling_for_x11>`"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:368
#, fuzzy
msgid "Android Studio"
msgstr "Android SDK"

#: ../../docs/development/cpp/configuring_an_ide.rst:370
msgid ""
"`Android Studio <https://developer.android.com/studio>`_ is a `JetBrains "
"<https://www.jetbrains.com/>`_ IDE for Android development. It has a feature-"
"rich editor which supports Java and C/C++, so it can be used for development "
"of the Godot core engine, and Android platform codebases."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:375
msgid ""
"From the Android Studio *Welcome to Android Studio* window, select *Open an "
"existing Android Studio project*"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:379
msgid ""
"Navigate to ``<godot root directory>/platform/android/java`` and select the "
"``settings.gradle`` gradle file."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:380
msgid "Android Studio will import and index the project."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:381
msgid ""
"To build the project, follow the :ref:`compiling instructions <toc-devel-"
"compiling>`."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:386
msgid "CLion"
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:388
msgid ""
"`CLion <https://www.jetbrains.com/clion/>`_ is a commercial IDE for C++. It "
"requires a ``CMakeLists.txt`` file as a project file, which is problematic "
"for Godot which uses the SCons buildsystem and not CMake. However, there is "
"a ``CMakeLists.txt`` configuration for :ref:`Android Studio "
"<doc_configuring_an_ide_android_studio>` which can also be used by CLion."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:390
msgid "Choose *File* -> *Open*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:392
msgid ""
"Navigation to your Godot Git clone, and select the folder ``platform/android/"
"java/lib`` (the ``CMakeLists.txt`` file is located there). Select the "
"folder, not the ``CMakeLists.txt file``. Then click *Ok*."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:396
msgid "If this popup window appears, select *This window* to open the project."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:400
msgid ""
"Choose *Tools* -> *CMake* -> *Change Project Root* and select the root Godot "
"folder."
msgstr ""

#: ../../docs/development/cpp/configuring_an_ide.rst:404
msgid ""
"You should be now be able to see all the project files. Autocomplete should "
"work, when the project finish indexing."
msgstr ""
