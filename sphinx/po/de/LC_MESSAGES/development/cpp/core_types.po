# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-04 16:27+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/cpp/core_types.rst:4
msgid "Core types"
msgstr "Kerntypen"

#: ../../docs/development/cpp/core_types.rst:6
msgid ""
"Godot has a rich set of classes and templates that compose its core, and "
"everything is built upon them."
msgstr ""
"Godot hat eine Vielzahl von Klassen und Vorlagen, aus denen sich sein Kern "
"zusammensetzt, und alles baut darauf auf."

#: ../../docs/development/cpp/core_types.rst:9
msgid ""
"This reference will try to list them in order for their better understanding."
msgstr ""
"Diese Referenz wird versuchen sie aufzulisten, um sie besser zu verstehen."

#: ../../docs/development/cpp/core_types.rst:13
msgid "Definitions"
msgstr "Definitionen"

#: ../../docs/development/cpp/core_types.rst:15
msgid ""
"Godot uses the standard C99 datatypes, such as ``uint8_t``, ``uint32_t``, "
"``int64_t``, etc. which are nowadays supported by every compiler. "
"Reinventing the wheel for those is not fun, as it makes code more difficult "
"to read."
msgstr ""
"Godot verwendet die Standard-C99-Datentypen wie ``uint8_t``, ``uint32_t``, "
"``int64_t`` usw., die heutzutage von jedem Compiler unterstützt werden. Das "
"Rad für diese neu zu erfinden macht keinen Spaß, da es das Lesen von Code "
"erschwert."

#: ../../docs/development/cpp/core_types.rst:20
msgid ""
"In general, care is not taken to use the most efficient datatype for a given "
"task unless using large structures or arrays. ``int`` is used through most "
"of the code unless necessary. This is done because nowadays every device has "
"at least a 32 bits bus and can do such operations in one cycle. It makes "
"code more readable too."
msgstr ""
"Im Allgemeinen wird nicht darauf geachtet, den effizientesten Datentyp für "
"eine bestimmte Aufgabe zu verwenden, es sei denn, Sie verwenden große "
"Strukturen oder Arrays. ``int`` wird im größten Teil des Codes verwendet, "
"sofern dies nicht erforderlich ist. Dies geschieht, weil heutzutage jedes "
"Gerät mindestens einen 32-Bit-Bus hat und solche Operationen in einem Zyklus "
"ausführen kann. Es macht Code auch lesbarer."

#: ../../docs/development/cpp/core_types.rst:26
msgid ""
"For files or memory sizes, ``size_t`` is used, which is warranted to be 64 "
"bits."
msgstr ""
"Für Dateien oder Speichergrößen wird ``size_t`` verwendet, die garantiert 64 "
"Bit beträgt."

#: ../../docs/development/cpp/core_types.rst:29
msgid ""
"For Unicode characters, CharType instead of wchar_t is used, because many "
"architectures have 4 bytes long wchar_t, where 2 bytes might be desired. "
"However, by default, this has not been forced and CharType maps directly to "
"wchar_t."
msgstr ""
"Für Unicode-Zeichen wird CharType anstelle von wchar_t verwendet, da viele "
"Architekturen ein 4 Bytes langes wchar_t haben, wobei 2 Bytes möglicherweise "
"erwünscht sind. Standardmäßig wurde dies jedoch nicht erzwungen und CharType "
"wird direkt wchar_t zugeordnet."

#: ../../docs/development/cpp/core_types.rst:35
#: ../../docs/development/cpp/core_types.rst:132
#: ../../docs/development/cpp/core_types.rst:166
#: ../../docs/development/cpp/core_types.rst:182
#: ../../docs/development/cpp/core_types.rst:198
#: ../../docs/development/cpp/core_types.rst:209
#: ../../docs/development/cpp/core_types.rst:220
#: ../../docs/development/cpp/core_types.rst:233
msgid "References:"
msgstr "Referenzen:"

#: ../../docs/development/cpp/core_types.rst:37
#, fuzzy
msgid ""
"`core/typedefs.h <https://github.com/godotengine/godot/blob/3.x/core/"
"typedefs.h>`__"
msgstr ""
"`core/typedefs.h <https://github.com/godotengine/godot/blob/master/core/"
"typedefs.h>`__"

#: ../../docs/development/cpp/core_types.rst:40
msgid "Memory model"
msgstr "Speichermodell"

#: ../../docs/development/cpp/core_types.rst:42
msgid ""
"PC is a wonderful architecture. Computers often have gigabytes of RAM, "
"terabytes of storage and gigahertz of CPU, and when an application needs "
"more resources the OS will swap out the inactive ones. Other architectures "
"(like mobile or consoles) are in general more limited."
msgstr ""
"PC ist eine wunderbare Architektur. Computer verfügen häufig über Gigabytes "
"an RAM, Terabytes an Speicher und Gigahertz CPU. Wenn eine Anwendung mehr "
"Ressourcen benötigt, lagert das Betriebssystem die inaktiven aus. Andere "
"Architekturen (wie Mobilgeräte oder Konsolen) sind im Allgemeinen "
"eingeschränkter."

#: ../../docs/development/cpp/core_types.rst:47
msgid ""
"The most common memory model is the heap, where an application will request "
"a region of memory, and the underlying OS will try to fit it somewhere and "
"return it. This often works best and is flexible, but over time and with "
"abuse, this can lead to segmentation."
msgstr ""
"Das gebräuchlichste Speichermodell ist der Heap, bei dem eine Anwendung "
"einen Speicherbereich anfordert und das zugrunde liegende Betriebssystem "
"versucht, ihn irgendwo anzupassen und zurückzugeben. Dies funktioniert oft "
"am besten und ist flexibel, aber im Laufe der Zeit und bei Missbrauch kann "
"dies zu einer Segmentierung führen."

#: ../../docs/development/cpp/core_types.rst:52
msgid ""
"Segmentation slowly creates holes that are too small for most common "
"allocations, so that memory is wasted. There is a lot of literature about "
"heap and segmentation, so this topic will not be developed further here. "
"Modern operating systems use paged memory, which helps mitigate the problem "
"of segmentation but doesn't solve it."
msgstr ""
"Durch die Segmentierung werden langsam Löcher erzeugt, die für die meisten "
"gängigen Zuordnungen zu klein sind, sodass Speicherplatz verschwendet wird. "
"Es gibt viel Literatur über Heap und Segmentierung, daher wird auf dieses "
"Thema hier nicht weiter eingegangen. Moderne Betriebssysteme verwenden "
"ausgelagerten Speicher, wodurch das Segmentierungsproblem zwar gemindert, "
"aber nicht gelöst wird."

#: ../../docs/development/cpp/core_types.rst:58
msgid ""
"However, in many studies and tests, it is shown that given enough memory, if "
"the maximum allocation size is below a given threshold in proportion to the "
"maximum heap size and proportion of memory intended to be unused, "
"segmentation will not be a problem over time as it will remain constant. In "
"other words, leave 10-20% of your memory free and perform all small "
"allocations and you are fine."
msgstr ""
"In vielen Studien und Tests wurde jedoch gezeigt, dass bei ausreichendem "
"Speicher die Segmentierung im Laufe der Zeit kein Problem darstellt, wenn "
"die maximale Zuordnungsgröße im Verhältnis zur maximalen Heap-Größe und zum "
"Anteil des Speichers, der nicht verwendet werden soll, unter einem "
"bestimmten Schwellenwert liegt wie es konstant bleiben wird. Mit anderen "
"Worten, lassen Sie 10-20% Ihres Speichers frei und führen Sie alle kleinen "
"Zuweisungen durch, und alles ist gut."

#: ../../docs/development/cpp/core_types.rst:65
msgid ""
"Godot ensures that all objects that can be allocated dynamically are small "
"(less than a few kb at most). But what happens if an allocation is too large "
"(like an image or mesh geometry or large array)? In this case Godot has the "
"option to use a dynamic memory pool. This memory needs to be locked to be "
"accessed, and if an allocation runs out of memory, the pool will be "
"rearranged and compacted on demand. Depending on the need of the game, the "
"programmer can configure the dynamic memory pool size."
msgstr ""
"Godot stellt sicher, dass alle Objekte, die dynamisch zugewiesen werden "
"können, klein sind (höchstens einige KB). Aber was passiert, wenn eine "
"Zuordnung zu groß ist (z.B. ein Bild oder eine Mesh-Geometrie oder ein "
"großes Array)? In diesem Fall hat Godot die Möglichkeit einen dynamischen "
"Speicherpool zu verwenden. Dieser Speicher muss gesperrt sein, damit auf ihn "
"zugegriffen werden kann. Wenn einer Zuordnung der Speicherplatz ausgeht, "
"wird der Pool bei Bedarf neu angeordnet und komprimiert. Abhängig von den "
"Anforderungen des Spiels kann der Programmierer die Größe des dynamischen "
"Speicherpools konfigurieren."

#: ../../docs/development/cpp/core_types.rst:74
msgid "Allocating memory"
msgstr "Speicher zuweisen"

#: ../../docs/development/cpp/core_types.rst:76
msgid ""
"Godot has many tools for tracking memory usage in a game, especially during "
"debug. Because of this, the regular C and C++ library calls should not be "
"used. Instead, a few other ones are provided."
msgstr ""
"Godot verfügt über viele Tools zum Verfolgen der Speichernutzung in einem "
"Spiel, insbesondere während des Debuggens. Aus diesem Grund sollten die "
"regulären C und C++ Bibliotheksaufrufe nicht verwendet werden. Stattdessen "
"werden einige andere bereitgestellt."

#: ../../docs/development/cpp/core_types.rst:80
msgid "For C-style allocation, Godot provides a few macros:"
msgstr "Für die Zuweisung im C-Stil bietet Godot einige Makros:"

#: ../../docs/development/cpp/core_types.rst:88
msgid ""
"These are equivalent to the usual malloc, realloc, free of the standard C "
"library."
msgstr ""
"Diese entsprechen dem üblichen malloc, realloc, freigeben aus der Standard C-"
"Bibliothek."

#: ../../docs/development/cpp/core_types.rst:91
msgid "For C++-style allocation, special macros are provided:"
msgstr "Für die Zuweisung im C++ Stil stehen spezielle Makros zur Verfügung:"

#: ../../docs/development/cpp/core_types.rst:101
msgid "which are equivalent to new, delete, new[] and delete[]."
msgstr "die äquivalent zu new, delete, new [] und delete [] sind."

#: ../../docs/development/cpp/core_types.rst:103
msgid ""
"memnew/memdelete also use a little C++ magic and notify Objects right after "
"they are created, and right before they are deleted."
msgstr ""
"memnew/memdelete verwenden auch eine kleine C++-Magie und benachrichtigen "
"Objekte direkt nach ihrer Erstellung und direkt vor dem Löschen."

#: ../../docs/development/cpp/core_types.rst:106
msgid ""
"For dynamic memory, the PoolVector<> template is provided. PoolVector is a "
"standard vector class, and is very similar to vector in the C++ standard "
"library. To create a PoolVector buffer, use this:"
msgstr ""
"Für den dynamischen Speicher wird das PoolVector<> Template bereitgestellt. "
"PoolVector ist eine Standardvektorklasse und dem Vektor in der C++ - "
"Standardbibliothek sehr ähnlich. Verwenden Sie Folgendes, um einen "
"PoolVector-Puffer zu erstellen:"

#: ../../docs/development/cpp/core_types.rst:114
msgid ""
"PoolVector can be accessed using the [] operator and a few helpers exist for "
"this:"
msgstr ""
"Auf PoolVector kann mit dem Operator [] zugegriffen werden. Hierzu gibt es "
"einige Helfer:"

#: ../../docs/development/cpp/core_types.rst:126
msgid ""
"These operations allow fast read/write from PoolVectors and keep it locked "
"until they go out of scope. However, PoolVectors should be used for small, "
"dynamic memory operations, as read() and write() are too slow for a large "
"amount of accesses."
msgstr ""
"Diese Operationen ermöglichen ein schnelles Lesen/Schreiben von PoolVectors "
"und halten es gesperrt, bis sie den Gültigkeitsbereich verlassen. "
"PoolVectors sollten jedoch für kleine, dynamische Speicheroperationen "
"verwendet werden, da read() und write() für eine große Anzahl von Zugriffen "
"zu langsam sind."

#: ../../docs/development/cpp/core_types.rst:134
#, fuzzy
msgid ""
"`core/os/memory.h <https://github.com/godotengine/godot/blob/3.x/core/os/"
"memory.h>`__"
msgstr ""
"`core/os/memory.h <https://github.com/godotengine/godot/blob/master/core/os/"
"memory.h>`__"

#: ../../docs/development/cpp/core_types.rst:135
#, fuzzy
msgid ""
"`core/pool_vector.h <https://github.com/godotengine/godot/blob/3.x/core/"
"pool_vector.cpp>`__"
msgstr ""
"`core/pool_vector.h <https://github.com/godotengine/godot/blob/master/core/"
"pool_vector.cpp>`__"

#: ../../docs/development/cpp/core_types.rst:138
msgid "Containers"
msgstr "Container"

#: ../../docs/development/cpp/core_types.rst:140
msgid "Godot provides also a set of common containers:"
msgstr "Godot bietet auch eine Reihe gängiger Container:"

#: ../../docs/development/cpp/core_types.rst:142
msgid "Vector"
msgstr "Vektor"

#: ../../docs/development/cpp/core_types.rst:143
msgid "List"
msgstr "List"

#: ../../docs/development/cpp/core_types.rst:144
msgid "Set"
msgstr "Set"

#: ../../docs/development/cpp/core_types.rst:145
msgid "Map"
msgstr "Map"

#: ../../docs/development/cpp/core_types.rst:147
msgid ""
"They are simple and aim to be as minimal as possible, as templates in C++ "
"are often inlined and make the binary size much fatter, both in debug "
"symbols and code. List, Set and Map can be iterated using pointers, like "
"this:"
msgstr ""
"Sie sind einfach und sollen so minimal wie möglich zu sein, da Vorlagen in C+"
"+ häufig inline sind und die Binärgröße sowohl in Debug-Symbolen als auch "
"den Code aufblähen. List, Set und Map können mit folgenden Zeigern iteriert "
"werden:"

#: ../../docs/development/cpp/core_types.rst:158
msgid "The Vector<> class also has a few nice features:"
msgstr "Die Vector<> -Klasse hat auch ein paar nette Funktionen:"

#: ../../docs/development/cpp/core_types.rst:160
msgid ""
"It does copy on write, so making copies of it is cheap as long as they are "
"not modified."
msgstr ""
"Sie kopiert beim Schreiben, daher ist das Erstellen von Kopien günstig, "
"solange sie nicht geändert werden."

#: ../../docs/development/cpp/core_types.rst:162
msgid ""
"It supports multi-threading, by using atomic operations on the reference "
"counter."
msgstr ""
"Sie unterstützt Multithreading durch Verwendung kleinster Operationen am "
"Referenzzähler."

#: ../../docs/development/cpp/core_types.rst:168
#, fuzzy
msgid ""
"`core/vector.h <https://github.com/godotengine/godot/blob/3.x/core/vector."
"h>`__"
msgstr ""
"`core/vector.h <https://github.com/godotengine/godot/blob/master/core/vector."
"h>`__"

#: ../../docs/development/cpp/core_types.rst:169
#, fuzzy
msgid ""
"`core/list.h <https://github.com/godotengine/godot/blob/3.x/core/list.h>`__"
msgstr ""
"`core/list.h <https://github.com/godotengine/godot/blob/master/core/list."
"h>`__"

#: ../../docs/development/cpp/core_types.rst:170
#, fuzzy
msgid ""
"`core/set.h <https://github.com/godotengine/godot/blob/3.x/core/set.h>`__"
msgstr ""
"`core/set.h <https://github.com/godotengine/godot/blob/master/core/set.h>`__"

#: ../../docs/development/cpp/core_types.rst:171
#, fuzzy
msgid ""
"`core/map.h <https://github.com/godotengine/godot/blob/3.x/core/map.h>`__"
msgstr ""
"`core/map.h <https://github.com/godotengine/godot/blob/master/core/map.h>`__"

#: ../../docs/development/cpp/core_types.rst:174
msgid "String"
msgstr "Zeichenkette"

#: ../../docs/development/cpp/core_types.rst:176
msgid ""
"Godot also provides a String class. This class has a huge amount of "
"features, full Unicode support in all the functions (like case operations) "
"and utf8 parsing/extracting, as well as helpers for conversion and "
"visualization."
msgstr ""
"Godot bietet auch eine String-Klasse. Diese Klasse bietet eine Vielzahl von "
"Funktionen, vollständige Unicode-Unterstützung für alle Funktionen (z.B. "
"Falloperationen) und das Parsen bzw. Extrahieren von utf8 sowie Helfer für "
"die Konvertierung und Visualisierung."

#: ../../docs/development/cpp/core_types.rst:184
#, fuzzy
msgid ""
"`core/ustring.h <https://github.com/godotengine/godot/blob/3.x/core/ustring."
"h>`__"
msgstr ""
"`core/ustring.h <https://github.com/godotengine/godot/blob/master/core/"
"ustring.h>`__"

#: ../../docs/development/cpp/core_types.rst:187
msgid "StringName"
msgstr "StringName"

#: ../../docs/development/cpp/core_types.rst:189
msgid ""
"StringNames are like a String, but they are unique. Creating a StringName "
"from a string results in a unique internal pointer for all equal strings. "
"StringNames are useful for using strings as identifier, as comparing them is "
"basically comparing a pointer."
msgstr ""
"StringNames sind wie ein String, sind aber eindeutig. Das Erstellen eines "
"StringName aus einem String führt zu einem eindeutigen internen Zeiger für "
"alle gleichen Strings. StringNames sind nützlich um Strings als Bezeichner "
"zu verwenden, da beim Vergleich im Grunde genommen ein Zeiger verglichen "
"wird."

#: ../../docs/development/cpp/core_types.rst:194
msgid ""
"Creation of a StringName (especially a new one) is slow, but comparison is "
"fast."
msgstr ""
"Die Erstellung eines StringName (insbesondere eines neuen) ist langsam, der "
"Vergleich jedoch schnell."

#: ../../docs/development/cpp/core_types.rst:200
#, fuzzy
msgid ""
"`core/string_name.h <https://github.com/godotengine/godot/blob/3.x/core/"
"string_name.h>`__"
msgstr ""
"`core/string_name.h <https://github.com/godotengine/godot/blob/master/core/"
"string_name.h>`__"

#: ../../docs/development/cpp/core_types.rst:203
msgid "Math types"
msgstr "Mathe-Typen"

#: ../../docs/development/cpp/core_types.rst:205
msgid ""
"There are several linear math types available in the core/math directory."
msgstr ""
"Im Verzeichnis core/math stehen mehrere lineare Mathe-Typen zur Verfügung."

#: ../../docs/development/cpp/core_types.rst:211
#, fuzzy
msgid "`core/math <https://github.com/godotengine/godot/tree/3.x/core/math>`__"
msgstr ""
"`core/math <https://github.com/godotengine/godot/tree/master/core/math>`__"

#: ../../docs/development/cpp/core_types.rst:214
msgid "NodePath"
msgstr "NodePath"

#: ../../docs/development/cpp/core_types.rst:216
msgid ""
"This is a special datatype used for storing paths in a scene tree and "
"referencing them fast."
msgstr ""
"Dies ist ein spezieller Datentyp, mit dem Pfade in einem Szenenbaum "
"gespeichert und schnell referenziert werden."

#: ../../docs/development/cpp/core_types.rst:222
#, fuzzy
msgid ""
"`core/node_path.h <https://github.com/godotengine/godot/blob/3.x/core/"
"node_path.h>`__"
msgstr ""
"`core/node_path.h <https://github.com/godotengine/godot/blob/master/core/"
"node_path.h>`__"

#: ../../docs/development/cpp/core_types.rst:225
msgid "RID"
msgstr "RID"

#: ../../docs/development/cpp/core_types.rst:227
msgid ""
"RIDs are resource IDs. Servers use these to reference data stored in them. "
"RIDs are opaque, meaning that the data they reference can't be accessed "
"directly. RIDs are unique, even for different types of referenced data."
msgstr ""
"RIDs sind Ressourcen-IDs. Server verwenden diese um auf darin gespeicherte "
"Daten zu verweisen. RIDs sind undurchsichtig, was bedeutet, dass auf "
"verwiesene Daten nicht direkt zugegriffen werden kann. RIDs sind eindeutig, "
"auch für verschiedene Arten von Daten, auf die verwiesen wird."

#: ../../docs/development/cpp/core_types.rst:235
#, fuzzy
msgid ""
"`core/rid.h <https://github.com/godotengine/godot/blob/3.x/core/rid.h>`__"
msgstr ""
"`core/rid.h <https://github.com/godotengine/godot/blob/master/core/rid.h>`__"
