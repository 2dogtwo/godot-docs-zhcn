# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-02 13:32+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_for_windows.rst:4
msgid "Compiling for Windows"
msgstr "Kompilowanie dla Windowsa"

#: ../../docs/development/compiling/compiling_for_windows.rst:9
msgid "Requirements"
msgstr "Wymagania"

#: ../../docs/development/compiling/compiling_for_windows.rst:11
msgid "For compiling under Windows, the following is required:"
msgstr "By kompilować pod Windowsem, następujące kroki są wymagane:"

#: ../../docs/development/compiling/compiling_for_windows.rst:13
msgid ""
"`Visual Studio Community <https://www.visualstudio.com/vs/community/>`_, "
"version 2017 or later. VS 2019 is recommended. **Make sure to read "
"\"Installing Visual Studio caveats\" below or you will have to run/download "
"the installer again.**"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:17
msgid ""
"`MinGW-w64 <http://mingw-w64.org/>`__ with GCC can be used as an alternative "
"to Visual Studio. Be sure to install/configure it to use the ``posix`` "
"thread model."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:19
#, fuzzy
msgid "`Python 3.5+ <https://www.python.org/downloads/windows/>`_."
msgstr "`Python 2.7+ lub Python 3.5+ <https://www.python.org/downloads/>`__."

#: ../../docs/development/compiling/compiling_for_windows.rst:20
#, fuzzy
msgid ""
"`SCons 3.0 <https://www.scons.org/>`_ build system. If using Visual Studio "
"2019, you need at least SCons 3.1.1."
msgstr "System budowania `SCons <https://www.scons.org>`__."

#: ../../docs/development/compiling/compiling_for_windows.rst:22
#, fuzzy
msgid ""
"*Optional* - `yasm <https://yasm.tortall.net/>`_ (for WebM SIMD "
"optimizations)"
msgstr "*Opcjonalne* - yasm (dla opymalizacji WebM SIMD)"

#: ../../docs/development/compiling/compiling_for_windows.rst:24
msgid ""
"If you have `Scoop <https://scoop.sh/>`_ installed, you can easily install "
"MinGW and other dependencies using the following command::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:29
msgid ""
"If you have `MSYS2 <https://www.msys2.org/>`_ installed, you can easily "
"install MinGW and other dependencies using the following command::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:37
msgid ""
"For each MSYS2 MinGW subsystem, you should then run `pip install scons` in "
"its shell."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:40
msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:44
#, fuzzy
msgid "Setting up Python"
msgstr "Ustawianie Pywin32"

#: ../../docs/development/compiling/compiling_for_windows.rst:46
msgid ""
"First you need to install Python 3.5 or newer. Make sure to enable the "
"option to add Python to the ``PATH`` in the Python installer. The SCons "
"installer should then detect and use the existing Python installation."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:51
msgid "Setting up SCons"
msgstr "Ustawianie SCons"

#: ../../docs/development/compiling/compiling_for_windows.rst:53
msgid "To install SCons open the command prompt and run the following command."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:55
msgid "``python -m pip install scons``"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:57
msgid ""
"To check whether you have installed Python and SCons correctly, you can type "
"``python --version`` and ``scons --version`` into a command prompt (``cmd."
"exe``)."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:61
msgid ""
"If the commands above don't work, make sure to add Python to your ``PATH`` "
"environment variable after installing it, then check again. You can do so by "
"running the Python installer again and enabling the option to add Python to "
"the ``PATH``."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:69
msgid "Installing Visual Studio caveats"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:71
msgid ""
"If installing Visual Studio 2017 or 2019, make sure to enable **C++** in the "
"list of workflows to install."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:74
msgid ""
"If installing Visual Studio 2015, make sure to run a **Custom** installation "
"instead of **Typical** and select **C++** as a language there."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:77
msgid ""
"If you've already made the mistake of installing Visual Studio without C++ "
"support, run the installer again; it should present you a **Modify** button. "
"Running the installer from *Add/Remove Programs* will only give you a "
"**Repair** option, which won't let you install C++ tools."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:83
msgid "Downloading Godot's source"
msgstr "Pobieranie kodu źródłowego dla Godota"

#: ../../docs/development/compiling/compiling_for_windows.rst:85
msgid ""
"Godot's source code is `hosted on GitHub <https://github.com/godotengine/"
"godot>`_. Downloading it (cloning) using `Git <https://git-scm.com/>`_ is "
"recommended."
msgstr ""
"Kod źródłowy `Godota <https://github.com/godotengine/godot>`__ jest "
"udostępniany na Githubie. Pobranie go (sklonowanie) poprzez `Git <https://"
"git-scm.com/>`__ jest rekomendowane."

#: ../../docs/development/compiling/compiling_for_windows.rst:88
msgid ""
"The tutorial will assume from now on that you placed the source code in ``C:"
"\\godot``."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:93
msgid ""
"To prevent slowdowns caused by continuous virus scanning during compilation, "
"add the Godot source folder to the list of exceptions in your antivirus "
"software."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:97
msgid ""
"For Windows Defender, hit the :kbd:`Windows` key, type \"Windows Defender "
"Settings\" then hit :kbd:`Enter`. Under **Virus & threat protection**, go to "
"**Virus & threat protection setting** and scroll down to **Exclusions**. "
"Click **Add or remove exclusions** then add the Godot source folder."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:104
msgid "Compiling"
msgstr "Kompilowanie"

#: ../../docs/development/compiling/compiling_for_windows.rst:107
#, fuzzy
msgid "Selecting a compiler"
msgstr "Kompilator C"

#: ../../docs/development/compiling/compiling_for_windows.rst:109
msgid ""
"SCons will automatically find and use an existing Visual Studio "
"installation. If you do not have Visual Studio installed, it will attempt to "
"use MinGW instead. If you already have Visual Studio installed and want to "
"use MinGW, pass ``use_mingw=yes`` to the SCons command line. Note that MSVC "
"builds cannot be performed from the MSYS2 or MinGW shells. Use either ``cmd."
"exe`` or PowerShell instead."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:116
msgid ""
"During development, using the Visual Studio compiler is usually a better "
"idea, as it links the Godot binary much faster than MinGW. However, MinGW "
"can produce more optimized binaries using link-time optimization (see "
"below), making it a better choice for production use."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:122
msgid "Running SCons"
msgstr "Uruchamianie SCons"

#: ../../docs/development/compiling/compiling_for_windows.rst:124
#, fuzzy
msgid ""
"After opening a command prompt, change to the root directory of the engine "
"source code (using ``cd``) and type::"
msgstr ""
"Otwórz terminal, przejdź do głównego katalogu kodu źródłowego silnika i "
"wpisz:"

#: ../../docs/development/compiling/compiling_for_windows.rst:129
msgid "You can specify a number of CPU threads to use to speed up the build::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:133
msgid ""
"In general, it is OK to have at least as many threads compiling Godot as you "
"have cores in your CPU, if not one or two more. Feel free to add the ``-j`` "
"option to any SCons command you see below."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:137
msgid ""
"When compiling with multiple CPU threads, SCons may warn about pywin32 being "
"missing. You can safely ignore this warning."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:140
msgid ""
"If all goes well, the resulting binary executable will be placed in ``C:"
"\\godot\\bin\\`` with the name ``godot.windows.tools.32.exe`` or ``godot."
"windows.tools.64.exe``. By default, SCons will build a binary matching your "
"CPU architecture, but this can be overridden using ``bits=64`` or "
"``bits=32``."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:146
msgid ""
"This executable file contains the whole engine and runs without any "
"dependencies. Running it will bring up the Project Manager."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:149
msgid ""
"If you are compiling Godot for production use, then you can make the final "
"executable smaller and faster by adding the SCons option "
"``target=release_debug``."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:153
msgid ""
"If you are compiling Godot with MinGW, you can make the binary even smaller "
"and faster by adding the SCons option ``use_lto=yes``. As link-time "
"optimization is a memory-intensive process, this will require about 7 GB of "
"available RAM while compiling."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:158
msgid ""
"If you want to use separate editor settings for your own Godot builds and "
"official releases, you can enable :ref:`doc_data_paths_self_contained_mode` "
"by creating a file called ``._sc_`` or ``_sc_`` in the ``bin/`` folder."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:164
msgid "Development in Visual Studio or other IDEs"
msgstr "Tworzone w Visual Studio albo innym IDE"

#: ../../docs/development/compiling/compiling_for_windows.rst:166
msgid ""
"For most projects, using only scripting is enough but when development in C+"
"+ is needed, for creating modules or extending the engine, working with an "
"IDE is usually desirable."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:170
msgid ""
"You can create a Visual Studio solution via SCons by running SCons with the "
"``vsproj=yes`` parameter, like this::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:175
msgid ""
"You will be able to open Godot's source in a Visual Studio solution now, and "
"able to build Godot using Visual Studio's **Build** button."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:178
msgid ""
"If you need to edit the build commands, they are located in \"Godot\" "
"project settings, NMAKE sheet. SCons is called at the end of the commands. "
"If you make a mistake, copy the command from one of the other build "
"configurations (debug, release_debug, release) or architectures (Win32/x64); "
"they are equivalent."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:185
msgid "Cross-compiling for Windows from other operating systems"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:187
msgid ""
"If you are a Linux or macOS user, you need to install `MinGW-w64 <https://"
"mingw-w64.org/doku.php>`__, which typically comes in 32-bit and 64-bit "
"variants. The package names may differ based on your distribution, here are "
"some known ones:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:193
#, fuzzy
msgid "**Arch Linux**"
msgstr "**Arch**"

#: ../../docs/development/compiling/compiling_for_windows.rst:193
msgid "Install `mingw-w64-gcc from the AUR`_."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:195
msgid "**Debian** / **Ubuntu**"
msgstr "**Debian** / **Ubuntu**"

#: ../../docs/development/compiling/compiling_for_windows.rst:199
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../docs/development/compiling/compiling_for_windows.rst:204
msgid "**macOS**"
msgstr "**macOS**"

#: ../../docs/development/compiling/compiling_for_windows.rst:208
msgid "**Mageia**"
msgstr "**Mageia**"

#: ../../docs/development/compiling/compiling_for_windows.rst:216
msgid ""
"Before attempting the compilation, SCons will check for the following "
"binaries in your ``PATH`` environment variable::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:222
msgid ""
"If the binaries are not located in the ``PATH`` (e.g. ``/usr/bin``), you can "
"define the following environment variables to give a hint to the build "
"system::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:229
msgid ""
"To make sure you are doing things correctly, executing the following in the "
"shell should result in a working compiler (the version output may differ "
"based on your system)::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:237
msgid "Troubleshooting"
msgstr "Rozwiązywanie problemów"

#: ../../docs/development/compiling/compiling_for_windows.rst:239
msgid ""
"Cross-compiling from some Ubuntu versions may lead to `this bug <https://"
"github.com/godotengine/godot/issues/9258>`_, due to a default configuration "
"lacking support for POSIX threading."
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:243
msgid ""
"You can change that configuration following those instructions, for 64-bit::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:251
#, fuzzy
msgid "And for 32-bit::"
msgstr "I dla 64-bitów:"

#: ../../docs/development/compiling/compiling_for_windows.rst:259
msgid "Creating Windows export templates"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:261
msgid ""
"Windows export templates are created by compiling Godot without the editor, "
"with the following flags::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:269
msgid ""
"If you plan on replacing the standard export templates, copy these to the "
"following location, replacing ``<version>`` with the version identifier "
"(such as ``3.1.1.stable`` or ``3.2.dev``)::"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:275
#, fuzzy
msgid "With the following names::"
msgstr "Dodaj poniższy kod:"

#: ../../docs/development/compiling/compiling_for_windows.rst:282
msgid ""
"However, if you are using custom modules or custom engine code, you may "
"instead want to configure your binaries as custom export templates here:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_windows.rst:288
msgid ""
"You don't need to copy them in this case, just reference the resulting files "
"in the ``bin\\`` directory of your Godot source folder, so the next time you "
"build, you will automatically have the custom templates referenced."
msgstr ""
