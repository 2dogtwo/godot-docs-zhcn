# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 15:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/3d/lights_and_shadows.rst:4
#, fuzzy
msgid "3D lights and shadows"
msgstr "Światła i cienie"

#: ../../docs/tutorials/3d/lights_and_shadows.rst:7
msgid "Introduction"
msgstr "Wprowadzenie"

#: ../../docs/tutorials/3d/lights_and_shadows.rst:9
msgid ""
"Light sources emit light that mixes with the materials and produces a "
"visible result. Light can come from several types of sources in a scene:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:12
msgid ""
"From the Material itself in the form of the emission color (though it does "
"not affect nearby objects unless baked)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:14
msgid "Light Nodes: Directional, Omni and Spot."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:15
msgid "Ambient Light in the :ref:`Environment <class_Environment>`."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:17
msgid "Baked Light (read :ref:`doc_baked_lightmaps`)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:19
msgid ""
"The emission color is a material property. You can read more about it in "
"the :ref:`doc_spatial_material` tutorial."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:23
msgid "Light nodes"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:25
msgid ""
"There are three types of light nodes: `Directional light`_, `Omni light`_ "
"and `Spot light`_. Let's take a look at the common parameters for lights:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:31
msgid "Each one has a specific function:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:33
msgid "**Color**: Base color for emitted light."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:34
msgid ""
"**Energy**: Energy multiplier. This is useful for saturating lights or "
"working with :ref:`doc_high_dynamic_range`."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:35
msgid ""
"**Indirect Energy**: Secondary multiplier used with indirect light (light "
"bounces). This works in baked light or GIProbe."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:36
msgid ""
"**Negative**: Light becomes subtractive instead of additive. It's sometimes "
"useful to manually compensate some dark corners."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:37
msgid ""
"**Specular**: Affects the intensity of the specular blob in objects affected "
"by this light. At zero, this light becomes a pure diffuse light."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:38
msgid ""
"**Bake Mode**: Sets the bake mode for the light. For more information see :"
"ref:`doc_baked_lightmaps`"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:39
msgid ""
"**Cull Mask**: Objects that are in the selected layers below will be "
"affected by this light."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:42
#, fuzzy
msgid "Shadow mapping"
msgstr "Shadery"

#: ../../docs/tutorials/3d/lights_and_shadows.rst:44
msgid ""
"Lights can optionally cast shadows. This gives them greater realism (light "
"does not reach occluded areas), but it can incur a bigger performance cost. "
"There is a list of generic shadow parameters, each also has a specific "
"function:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:48
msgid "**Enabled**: Check to enable shadow mapping in this light."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:49
msgid ""
"**Color**: Areas occluded are multiplied by this color. It is black by "
"default, but it can be changed to tint shadows."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:50
msgid ""
"**Bias**: When this parameter is too small, self shadowing occurs. When too "
"large, shadows separate from the casters. Tweak to what works best for you."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:51
msgid ""
"**Contact**: Performs a short screen-space raycast to reduce the gap "
"generated by the bias. Contact shadows are only available when using the "
"GLES3 backend."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:52
msgid ""
"**Reverse Cull Faces**: Some scenes work better when shadow mapping is "
"rendered with face-culling inverted."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:54
msgid ""
"Below is an image of what tweaking bias looks like. Default values work for "
"most cases, but in general it depends on the size and complexity of geometry."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:59
msgid "Finally, if gaps can't be solved, the **Contact** option can help:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:63
msgid ""
"Any sort of bias issues can always be fixed by increasing the shadow map "
"resolution, although that may lead to decreased performance on low-end "
"hardware."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:67
msgid "Directional light"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:69
msgid ""
"This is the most common type of light and represents a light source very far "
"away (such as the sun). It is also the cheapest light to compute and should "
"be used whenever possible (although it's not the cheapest shadow-map to "
"compute, but more on that later)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:73
msgid ""
"Directional light models an infinite number of parallel light rays covering "
"the whole scene. The directional light node is represented by a big arrow "
"which indicates the direction of the light rays. However, the position of "
"the node does not affect the lighting at all and can be anywhere."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:80
msgid ""
"Every face whose front-side is hit by the light rays is lit, while the "
"others stay dark. Most light types have specific parameters, but directional "
"lights are pretty simple in nature, so they don't."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:84
msgid "Directional shadow mapping"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:86
msgid ""
"To compute shadow maps, the scene is rendered (only depth) from an "
"orthogonal point of view that covers the whole scene (or up to the max "
"distance). There is, however, a problem with this approach because objects "
"closer to the camera receive blocky shadows."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:92
msgid ""
"To fix this, a technique named \"Parallel Split Shadow Maps\" (or PSSM) is "
"used. This splits the view frustum in 2 or 4 areas. Each area gets its own "
"shadow map. This allows small areas close to the viewer to have the same "
"shadow resolution as a huge, far-away area."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:97
msgid "With this, shadows become more detailed:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:101
msgid "To control PSSM, a number of parameters are exposed:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:105
msgid ""
"Each split distance is controlled relative to the camera far (or shadow "
"**Max Distance** if greater than zero), so *0.0* is the eye position and "
"*1.0* is where the shadow ends at a distance. Splits are in-between. Default "
"values generally work well, but tweaking the first split a bit is common to "
"give more detail to close objects (like a character in a third person game)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:111
msgid ""
"Always make sure to set a shadow *Max Distance* according to what the scene "
"needs. A lower maximum distance will result in better-looking shadows."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:114
msgid ""
"Sometimes, the transition between a split and the next can look bad. To fix "
"this, the **\"Blend Splits\"** option can be turned on, which sacrifices "
"detail in exchange for smoother transitions:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:120
msgid ""
"The **\"Normal Bias\"** parameter can be used to fix special cases of self "
"shadowing when objects are perpendicular to the light. The only downside is "
"that it makes the shadow a bit thinner."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:126
msgid ""
"The **\"Bias Split Scale\"** parameter can control extra bias for the splits "
"that are far away. If self shadowing occurs only on the splits far away, "
"this value can fix them."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:129
msgid "Finally, the **\"Depth Range\"** has two settings:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:131
msgid ""
"**Stable**: Keeps the shadow stable while the camera moves, and the blocks "
"that appear in the outline when close to the shadow edges remain in-place. "
"This is the default and generally desired, but it reduces the effective "
"shadow resolution."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:132
msgid ""
"**Optimized**: Tries to achieve the maximum resolution available at any "
"given time. This may result in a \"moving saw\" effect on shadow edges, but "
"at the same time the shadow looks more detailed (so this effect may be "
"subtle enough to be forgiven)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:134
msgid "Just experiment which setting works better for your scene."
msgstr "Poeksperymentuj z ustawieniami, które lepiej działają w twojej scenie."

#: ../../docs/tutorials/3d/lights_and_shadows.rst:136
msgid ""
"Shadowmap size for directional lights can be changed in Project Settings -> "
"Rendering -> Quality:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:140
msgid ""
"Increasing it can solve bias problems, but decrease performance. Shadow "
"mapping is an art of tweaking."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:143
msgid "Omni light"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:145
msgid ""
"Omni light is a point source that emits light spherically in all directions "
"up to a given radius."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:150
msgid ""
"In real life, light attenuation is an inverse function, which means omni "
"lights don't have a radius. This is a problem because it means computing "
"several omni lights would become demanding."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:153
msgid ""
"To solve this, a *Range* is introduced together with an attenuation function."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:157
msgid ""
"These two parameters allow tweaking how this works visually in order to find "
"aesthetically pleasing results."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:163
msgid "Omni shadow mapping"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:165
msgid ""
"Omni light shadow mapping is relatively straightforward. The main issue that "
"needs to be considered is the algorithm used to render it."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:168
msgid ""
"Omni Shadows can be rendered as either **\"Dual Paraboloid\" or \"Cube Mapped"
"\"**. The former renders quickly, but can cause deformations, while the "
"later is more correct, but costlier."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:174
msgid ""
"If the objects being rendered are mostly irregular, Dual Paraboloid is "
"usually enough. In any case, as these shadows are cached in a shadow atlas "
"(more on that at the end), it may not make a difference in performance for "
"most scenes."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:179
msgid "Spot light"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:181
msgid ""
"Spot lights are similar to omni lights, except they emit light only into a "
"cone (or \"cutoff\"). They are useful to simulate flashlights, car lights, "
"reflectors, spots, etc. This type of light is also attenuated towards the "
"opposite direction it points to."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:188
msgid ""
"Spot lights share the same **Range** and **Attenuation** as **OmniLight**, "
"and add two extra parameters:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:190
msgid "**Angle**: The aperture angle of the light"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:191
msgid ""
"**Angle Attenuation**: The cone attenuation, which helps soften the cone "
"borders."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:194
msgid "Spot shadow mapping"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:196
msgid ""
"Spots don't need any parameters for shadow mapping. Keep in mind that, at "
"more than 89 degrees of aperture, shadows stop functioning for spots, and "
"you should consider using an Omni light instead."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:200
msgid "Shadow atlas"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:202
msgid ""
"Unlike Directional lights, which have their own shadow texture, Omni and "
"Spot lights are assigned to slots of a shadow atlas. This atlas can be "
"configured in Project Settings -> Rendering -> Quality -> Shadow Atlas."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:207
msgid ""
"The resolution applies to the whole Shadow Atlas. This atlas is divided into "
"four quadrants:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:211
msgid ""
"Each quadrant can be subdivided to allocate any number of shadow maps; the "
"following is the default subdivision:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:215
msgid ""
"The allocation logic is simple. The biggest shadow map size (when no "
"subdivision is used) represents a light the size of the screen (or bigger). "
"Subdivisions (smaller maps) represent shadows for lights that are further "
"away from view and proportionally smaller."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:220
msgid "Every frame, the following procedure is performed for all lights:"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:222
msgid ""
"Check if the light is on a slot of the right size. If not, re-render it and "
"move it to a larger/smaller slot."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:223
msgid ""
"Check if any object affecting the shadow map has changed. If it did, re-"
"render the light."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:224
msgid ""
"If neither of the above has happened, nothing is done, and the shadow is "
"left untouched."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:226
msgid ""
"If the slots in a quadrant are full, lights are pushed back to smaller "
"slots, depending on size and distance."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:228
msgid ""
"This allocation strategy works for most games, but you may want to use a "
"separate one in some cases (for example, a top-down game where all lights "
"are around the same size and quadrants may all have the same subdivision)."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:232
msgid "Shadow filter quality"
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:234
msgid ""
"The filter quality of shadows can be tweaked. This can be found in Project "
"Settings -> Rendering -> Quality -> Shadows. Godot supports no filter, PCF5 "
"and PCF13."
msgstr ""

#: ../../docs/tutorials/3d/lights_and_shadows.rst:240
msgid "It affects the blockyness of the shadow outline:"
msgstr ""
