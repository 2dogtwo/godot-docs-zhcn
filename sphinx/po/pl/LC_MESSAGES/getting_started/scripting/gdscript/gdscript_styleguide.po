# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-20 15:59+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:4
#, fuzzy
msgid "GDScript style guide"
msgstr "Przewodnik stylu GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:6
#, fuzzy
msgid ""
"This style guide lists conventions to write elegant GDScript. The goal is to "
"encourage writing clean, readable code and promote consistency across "
"projects, discussions, and tutorials. Hopefully, this will also support the "
"development of auto-formatting tools."
msgstr ""
"Ten przewodnik po stylistyce eleganckiego pisania eleganckiego GDScriptu. "
"Celem jest zachęcenie do pisania czystego i czytelnego kodu oraz promowanie "
"spójności pomiędzy projektami, dyskusjami i samouczkami. Miejmy nadzieję, że "
"zachęci to również do opracowania narzędzi do autoformatowania."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:11
#, fuzzy
msgid ""
"Since GDScript is close to Python, this guide is inspired by Python's `PEP 8 "
"<https://www.python.org/dev/peps/pep-0008/>`__ programming style guide."
msgstr ""
"Ponieważ GDScript jest związany z Pythonem, ten przewodnik jest inspirowany "
"przez stylem pisania w Pythonie `PEP 8 <https://www.python.org/dev/peps/"
"pep-0008/>`__."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:15
msgid ""
"Style guides aren't meant as hard rulebooks. At times, you may not be able "
"to apply some of the guidelines below. When that happens, use your best "
"judgment, and ask fellow developers for insights."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:19
msgid ""
"In general, keeping your code consistent in your projects and within your "
"team is more important than following this guide to a tee."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:22
msgid ""
"Godot's built-in script editor uses a lot of these conventions by default. "
"Let it help you."
msgstr ""
"Wbudowany edytor skryptów Godota domyślnie korzysta z wielu z tych "
"konwencji. Pozwól mu, pomóc sobie."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:25
#, fuzzy
msgid "Here is a complete class example based on these guidelines:"
msgstr "Oto prosty przykład jak to działa:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:92
#, fuzzy
msgid "Formatting"
msgstr "Format"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:95
#, fuzzy
msgid "Encoding and special characters"
msgstr "Obsługa powiadomień"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:97
#, fuzzy
msgid ""
"Use line feed (**LF**) characters to break lines, not CRLF or CR. *(editor "
"default)*"
msgstr ""
"Podczas tworzenia nowego pliku upewnij się, że do łamania linii użyto znaków "
"Linefeed (*LF*), a nie *CRLF* lub *CR*."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:98
msgid "Use one line feed character at the end of each file. *(editor default)*"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:99
msgid ""
"Use **UTF-8** encoding without a `byte order mark <https://en.wikipedia.org/"
"wiki/Byte_order_mark>`_. *(editor default)*"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:100
#, fuzzy
msgid "Use **Tabs** instead of spaces for indentation. *(editor default)*"
msgstr "Użyj 4 spacji zamiast tabulacji (nazywanymi 'miękkimi tabulatorami')."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:103
msgid "Indentation"
msgstr "Wcięcia"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:105
msgid "Each indent level should be one greater than the block containing it."
msgstr ""
"Każdy poziom wcięcia powinien być o jeden większy niż w bloku, w którym się "
"znajduje."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:107
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:127
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:178
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:208
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:233
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:253
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:279
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:568
msgid "**Good**:"
msgstr "**Dobrze**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:114
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:135
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:188
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:215
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:240
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:260
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:289
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:576
msgid "**Bad**:"
msgstr "**Źle**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:124
msgid ""
"Use 2 indent levels to distinguish continuation lines from regular code "
"blocks."
msgstr ""
"Użyj dwóch poziomów wcięcia dla odróżnienia bloku kodu od kontynuacji "
"poprzedniej linii."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:144
msgid "Blank lines"
msgstr "Puste wiersze"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:146
#, fuzzy
msgid "Surround functions and class definitions with two blank lines:"
msgstr "Funkcje i definicje klas otocz pustymi liniami."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:161
msgid "Use one blank line inside functions to separate logical sections."
msgstr ""
"Użyj jednego pustego wiersza wewnątrz funkcji, aby oddzielić sekcje logiczne."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:164
#, fuzzy
msgid "Line length"
msgstr "Długość animacji"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:166
msgid "Keep individual lines of code under 100 characters."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:168
msgid ""
"If you can, try to keep lines under 80 characters. This helps to read the "
"code on small displays and with two scripts opened side-by-side in an "
"external text editor. For example, when looking at a differential revision."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:173
#, fuzzy
msgid "One statement per line"
msgstr "Jedna instrukcja na linię"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:175
#, fuzzy
msgid ""
"Never combine multiple statements on a single line. No, C programmers, not "
"even with a single line conditional statement."
msgstr ""
"Nigdy nie należy łączyć wielu instrukcji w jednej linii. Programiści C i C+"
"+, nie piszcie instrukcji warunkowych w jednej linii (z wyjątkiem operatora "
"trójargumentowego)!"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:196
msgid "The only exception to that rule is the ternary operator:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:203
#, fuzzy
msgid "Avoid unnecessary parentheses"
msgstr "Unikaj niepotrzebnych nawiasów"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:205
msgid ""
"Avoid parentheses in expressions and conditional statements. Unless "
"necessary for order of operations, they only reduce readability."
msgstr ""
"Unikaj nawiasów w wyrażeniach i instrukcjach warunkowych, o ile nie jest to "
"konieczne ze względu na kolejność operacji. Ograniczają one jedynie "
"czytelność."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:223
#, fuzzy
msgid "Boolean operators"
msgstr "Operator logiczny lub"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:225
msgid ""
"Prefer the plain English versions of boolean operators, as they are the most "
"accessible:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:227
#, fuzzy
msgid "Use ``and`` instead of ``&&``."
msgstr "``and`` ``&&``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:228
#, fuzzy
msgid "Use ``or`` instead of ``||``."
msgstr "``or`` ``||``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:230
msgid ""
"You may also use parentheses around boolean operators to clear any "
"ambiguity. This can make long expressions easier to read."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:248
#, fuzzy
msgid "Comment spacing"
msgstr "Komentarze"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:250
msgid ""
"Regular comments should start with a space, but not code that you comment "
"out. This helps differentiate text comments from disabled code."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:269
msgid ""
"In the script editor, to toggle the selected code commented, press "
"<kbd>Ctrl</kbd> <kbd>K</kbd>. This feature adds a single # sign at the start "
"of the selected lines."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:274
msgid "Whitespace"
msgstr "Biały znak"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:276
#, fuzzy
msgid ""
"Always use one space around operators and after commas. Also, avoid extra "
"spaces in dictionary references and function calls."
msgstr ""
"Zawsze używaj odstępu jednej spacji przy operatorach i po przecinkach. "
"Unikaj dodatkowych spacji w odwołaniach do słowników i wywołań funkcji lub "
"tworzenia \"kolumn\"."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:299
msgid "Don't use spaces to align expressions vertically:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:308
#, fuzzy
msgid "Quotes"
msgstr "Uwagi"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:310
msgid ""
"Use double quotes unless single quotes make it possible to escape fewer "
"characters in a given string. See the examples below:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:330
#, fuzzy
msgid "Naming conventions"
msgstr "Konwencje nazewnictwa"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:332
#, fuzzy
msgid ""
"These naming conventions follow the Godot Engine style. Breaking these will "
"make your code clash with the built-in naming conventions, leading to "
"inconsistent code."
msgstr ""
"Owe konwencje nazywania są zgodne ze stylem używanym Godot Engine. Ich "
"złamanie spowoduje, że twój kod będzie sprzeczny z daną konwencją nazewniczą "
"i jest po prostu brzydkie."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:337
#, fuzzy
msgid "Classes and nodes"
msgstr "Klasy i Węzły"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:339
msgid "Use PascalCase for class and node names:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:345
#, fuzzy
msgid "Also use PascalCase when loading a class into a constant or a variable:"
msgstr "Również podczas ładowania klasy do stałej lub zmiennej:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:352
#, fuzzy
msgid "Functions and variables"
msgstr "Funkcje i Zmienne"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:354
#, fuzzy
msgid "Use snake\\_case to name functions and variables:"
msgstr "Funkcje i Zmienne"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:361
#, fuzzy
msgid ""
"Prepend a single underscore (\\_) to virtual methods functions the user must "
"override, private functions, and private variables:"
msgstr ""
"Stosuj pojedyncze podkreślenie (\\_) do metod wirtualnych (funkcje, które "
"użytkownik musi nadpisać), funkcji prywatnych i zmiennych prywatnych: ``func "
"_ready()``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:370
msgid "Signals"
msgstr "Sygnały"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:372
#, fuzzy
msgid "Use the past tense to name signals:"
msgstr "Używaj czasu przeszłego:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:380
#, fuzzy
msgid "Constants and enums"
msgstr "stały wzorzec"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:382
#, fuzzy
msgid ""
"Write constants with CONSTANT\\_CASE, that is to say in all caps with an "
"underscore (\\_) to separate words:"
msgstr ""
"Używaj CONSTANT\\_CASE, wielkimi literami, z podkreśleniem (\\_), aby "
"oddzielić słowa: ``const ILOSC_DNI = 200``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:389
msgid ""
"Use PascalCase for enum *names* and CONSTANT\\_CASE for their members, as "
"they are constants:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:403
#, fuzzy
msgid "Code order"
msgstr "Przetwarzaj"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:405
msgid ""
"This first section focuses on code order. For formatting, see :ref:"
"`formatting`. For naming conventions, see :ref:`naming_conventions`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:408
msgid "We suggest to organize GDScript code this way:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:431
msgid ""
"We optimized the order to make it easy to read the code from top to bottom, "
"to help developers reading the code for the first time understand how it "
"works, and to avoid errors linked to the order of variable declarations."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:435
msgid "This code order follows four rules of thumb:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:437
msgid "Properties and signals come first, followed by methods."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:438
msgid "Public comes before private."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:439
msgid "Virtual callbacks come before the class's interface."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:440
msgid ""
"The object's construction and initialization functions, ``_init`` and "
"``_ready``, come before functions that modify the object at runtime."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:445
#, fuzzy
msgid "Class declaration"
msgstr "Ładowanie animacji"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:447
msgid ""
"If the code is meant to run in the editor, place the ``tool`` keyword on the "
"first line of the script."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:450
msgid ""
"Follow with the `class_name` if necessary. You can turn a GDScript file into "
"a global type in your project using this feature. For more information, see :"
"ref:`doc_gdscript`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:454
msgid "Then, add the `extends` keyword if the class extends a built-in type."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:456
msgid ""
"Following that, you should have the class's optional docstring as comments. "
"You can use that to explain the role of your class to your teammates, how it "
"works, and how other developers should use it, for example."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:468
#, fuzzy
msgid "Signals and properties"
msgstr "Właściwości węzła"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:470
msgid ""
"Write signal declarations, followed by properties, that is to say, member "
"variables, after the docstring."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:473
msgid ""
"Enums should come after signals, as you can use them as export hints for "
"other properties."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:476
msgid ""
"Then, write constants, exported variables, public, private, and onready "
"variables, in that order."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:499
msgid ""
"The GDScript compiler evaluates onready variables right before the "
"``_ready`` callback. You can use that to cache node dependencies, that is to "
"say, to get child nodes in the scene that your class relies on. This is what "
"the example above shows."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:506
#, fuzzy
msgid "Methods and static functions"
msgstr "Funkcje statyczne"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:508
msgid "After the class's properties come the methods."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:510
msgid ""
"Start with the ``_init()`` callback method, that the engine will call upon "
"creating the object in memory. Follow with the ``_ready()`` callback, that "
"Godot calls when it adds a node to the scene tree."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:514
msgid ""
"These function should come first because they show how the object is "
"initialized."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:517
msgid ""
"Other built-in virtual callbacks, like ``_unhandled_input()`` and "
"``_physics_process``, should come next. These control the object's main loop "
"and interactions with the game engine."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:521
msgid ""
"The rest of the class's interface, public and private methods, come after "
"that, in that order."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:558
#, fuzzy
msgid "Static typing"
msgstr "Funkcje statyczne"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:560
msgid ""
"Since Godot 3.1, GDScript supports :ref:`optional static "
"typing<doc_gdscript_static_typing>`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:563
#, fuzzy
msgid "Type hints"
msgstr "Typy"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:565
msgid ""
"Place the colon right after the variable's name, without a space, and let "
"the GDScript compiler infer the variable's type when possible."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:584
msgid ""
"When you let the compiler infer the type hint, write the colon and equal "
"signs together: ``:=``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:590
msgid ""
"Add a space on either sides of the return type arrow when defining functions."
msgstr ""
