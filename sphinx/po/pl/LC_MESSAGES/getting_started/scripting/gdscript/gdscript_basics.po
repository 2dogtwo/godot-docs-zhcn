# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-06 14:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:4
msgid "GDScript basics"
msgstr "Podstawy GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:7
msgid "Introduction"
msgstr "Wprowadzenie"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:9
#, fuzzy
msgid ""
"*GDScript* is a high-level, dynamically typed programming language used to "
"create content. It uses a syntax similar to `Python <https://en.wikipedia."
"org/wiki/Python_%28programming_language%29>`_ (blocks are indent-based and "
"many keywords are similar). Its goal is to be optimized for and tightly "
"integrated with Godot Engine, allowing great flexibility for content "
"creation and integration."
msgstr ""
"*GDScript* jest wysokopoziomowym, dynamicznie typowanym językiem do "
"tworzenia treści. Używa składni podobnej do `Pythona <https://en.wikipedia."
"org/wiki/Python_%28programming_language%29>`_ (bloki są oparte na wcięciach "
"i wiele słów kluczowych jest podobnych). Jego celem jest optymalizacja i "
"ścisła integracja z Godot Engine, pozwalając na dużą elastyczność w "
"tworzeniu i integracji treści."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:17
msgid "History"
msgstr "Historia"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:21
msgid ""
"Documentation about GDScript's history has been moved to the :ref:"
"`Frequently Asked Questions <doc_faq_what_is_gdscript>`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:25
msgid "Example of GDScript"
msgstr "Przykład GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:27
msgid ""
"Some people can learn better by taking a look at the syntax, so here's a "
"simple example of how GDScript looks."
msgstr ""
"Niektórzy ludzie mogą się lepiej uczyć patrząc na składnię, więc jest to "
"prosty przykład jak wygląda GDScript."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:110
msgid ""
"If you have previous experience with statically typed languages such as C, C+"
"+, or C# but never used a dynamically typed one before, it is advised you "
"read this tutorial: :ref:`doc_gdscript_more_efficiently`."
msgstr ""
"Jeśli masz wcześniejsze doświadczenia z językami statycznie typowanymi "
"takimi jak C, C++ lub C#, ale nigdy wcześniej nie używałeś języka "
"dynamicznie typowanego, zalecane jest przeczytanie tego samouczka: :ref:"
"`doc_gdscript_more_efficiently`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:115
msgid "Language"
msgstr "Język"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:117
msgid ""
"In the following, an overview is given to GDScript. Details, such as which "
"methods are available to arrays or other objects, should be looked up in the "
"linked class descriptions."
msgstr ""
"Poniżej przedstawiono przegląd GDScript. Szczegóły, takie jak metody "
"dostępne dla tablic lub innych obiektów, należy sprawdzić w powiązanych "
"opisach klas."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:122
msgid "Identifiers"
msgstr "Identyfikatory"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:124
msgid ""
"Any string that restricts itself to alphabetic characters (``a`` to ``z`` "
"and ``A`` to ``Z``), digits (``0`` to ``9``) and ``_`` qualifies as an "
"identifier. Additionally, identifiers must not begin with a digit. "
"Identifiers are case-sensitive (``foo`` is different from ``FOO``)."
msgstr ""
"Każdy ciąg znaków, który ogranicza się do znaków alfabetycznych ( ``a`` do "
"``z`` i ``A`` do ``Z``), cyfr (``0`` do ``9``) i ``_`` kwalifikuje się jako "
"identyfikator. Ponadto identyfikatory nie mogą rozpoczynać się cyfrą. W "
"identyfikatorach wielkość liter ma znaczenie (``ziemniak`` jest różny od "
"``ZIEMNIAK``)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:130
msgid "Keywords"
msgstr "Słowa kluczowe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:132
msgid ""
"The following is the list of keywords supported by the language. Since "
"keywords are reserved words (tokens), they can't be used as identifiers. "
"Operators (like ``in``, ``not``, ``and`` or ``or``) and names of built-in "
"types as listed in the following sections are also reserved."
msgstr ""
"Poniżej znajduje się lista słów kluczowych obsługiwanych przez ten język. "
"Ponieważ słowa kluczowe są słowami zastrzeżonymi (tokenami), nie mogą być "
"używane jako identyfikatory. Operatorzy (jak ``in``, ``not``, ``and`` lub "
"`or``) oraz nazwy wbudowanych typów jak wymienione w poniższych sekcjach są "
"również zastrzeżone."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:137
msgid ""
"Keywords are defined in the `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ in "
"case you want to take a look under the hood."
msgstr ""
"Słowa kluczowe są zdefiniowane w `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ w "
"przypadku, gdybyś chciał zajrzeć pod maskę silnika."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:141
msgid "Keyword"
msgstr "Słowo kluczowe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:141
msgid "Description"
msgstr "Opis"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:143
msgid "if"
msgstr "if"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:143
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:145
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:147
msgid "See `if/else/elif`_."
msgstr "Zobacz `if/else/elif`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:145
msgid "elif"
msgstr "elif"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:147
msgid "else"
msgstr "else"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:149
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:807
msgid "for"
msgstr "for"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:149
msgid "See for_."
msgstr "Zobacz for_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:151
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:796
msgid "while"
msgstr "while"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:151
msgid "See while_."
msgstr "Zobacz while_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:153
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:842
msgid "match"
msgstr "match"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:153
msgid "See match_."
msgstr "Zobacz match_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:155
msgid "break"
msgstr "break"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:155
msgid "Exits the execution of the current ``for`` or ``while`` loop."
msgstr "Wychodzi z bieżącej pętli ``for`` lub ``while``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:157
msgid "continue"
msgstr "continue"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:157
msgid ""
"Immediately skips to the next iteration of the ``for`` or ``while`` loop."
msgstr ""
"Natychmiast przechodzi do następnej iteracji pętli ``for`` lub ``while``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:159
msgid "pass"
msgstr "pass"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:159
msgid ""
"Used where a statement is required syntactically but execution of code is "
"undesired, e.g. in empty functions."
msgstr ""
"Stosuje się tam, gdzie wyrażenie jest wymagane składniowo, ale wykonanie "
"kodu jest niepożądane, np. w pustych funkcjach."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:161
msgid "return"
msgstr "return"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:161
msgid "Returns a value from a function."
msgstr "Zwraca wartość funkcji."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:163
msgid "class"
msgstr "class"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:163
msgid "Defines a class."
msgstr "Definiuje klasę."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:165
msgid "extends"
msgstr "extends"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:165
msgid "Defines what class to extend with the current class."
msgstr "Definiuje rozszerzenie bieżącej klasy o inną klasę."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:167
msgid "is"
msgstr "is"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:167
#, fuzzy
msgid ""
"Tests whether a variable extends a given class, or is of a given built-in "
"type."
msgstr "Sprawdza, czy dana zmienna rozszerza daną klasę."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:169
#, fuzzy
msgid "as"
msgstr "case"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:169
msgid "Cast the value to a given type if possible."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:171
msgid "self"
msgstr "self"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:171
msgid "Refers to current class instance."
msgstr "Odnosi się do aktualnej instancji klasy."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:173
msgid "tool"
msgstr "tool"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:173
msgid "Executes the script in the editor."
msgstr "Wykonuje skrypt w edytorze."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:175
msgid "signal"
msgstr "signal"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:175
msgid "Defines a signal."
msgstr "Definiuje sygnał."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:177
msgid "func"
msgstr "func"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:177
msgid "Defines a function."
msgstr "Definiuje funkcję."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:179
msgid "static"
msgstr "static"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:179
msgid "Defines a static function. Static member variables are not allowed."
msgstr "Definiuje statyczną funkcję. Zmienne statyczne nie są dozwolone."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:181
msgid "const"
msgstr "const"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:181
msgid "Defines a constant."
msgstr "Definiuje stałą."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:183
msgid "enum"
msgstr "enum"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:183
msgid "Defines an enum."
msgstr "Definiuje wyliczenie."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:185
msgid "var"
msgstr "var"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:185
msgid "Defines a variable."
msgstr "Definiuje zmienną."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:187
msgid "onready"
msgstr "onready"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:187
msgid ""
"Initializes a variable once the Node the script is attached to and its "
"children are part of the scene tree."
msgstr ""
"Inicjalizuje zmienną, do węzła do którego dołączony jest skrypt, a jego "
"dzieci są częścią drzewa sceny."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:189
msgid "export"
msgstr "export"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:189
msgid ""
"Saves a variable along with the resource it's attached to and makes it "
"visible and modifiable in the editor."
msgstr ""
"Zapisuje zmienną wraz z zasobem, do którego jest dołączona i sprawia, że "
"jest ona widoczna i modyfikowalna w edytorze."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:191
msgid "setget"
msgstr "setget"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:191
msgid "Defines setter and getter functions for a variable."
msgstr "Definiuje funkcje getter i setter dla zmiennej."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:193
msgid "breakpoint"
msgstr "breakpoint"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:193
msgid "Editor helper for debugger breakpoints."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:195
msgid "preload"
msgstr "preload"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:195
msgid "Preloads a class or variable. See `Classes as resources`_."
msgstr "Ładuje za w czasu klasę albo zmienną. Zobacz `Classes as resources`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:197
msgid "yield"
msgstr "yield"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:197
msgid "Coroutine support. See `Coroutines with yield`_."
msgstr "Wsparcie dla współprogramu. Zobacz `Coroutines with yield`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:199
msgid "assert"
msgstr "assert"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:199
msgid ""
"Asserts a condition, logs error on failure. Ignored in non-debug builds. See "
"`Assert keyword`_."
msgstr ""
"Sygnalizuje stan, rejestruje błąd w przypadku awarii. Ignorowane w "
"kompilacjach niedebugowanych. Patrz `Assert keyword`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:201
msgid "remote"
msgstr "remote"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:201
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:203
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:205
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:207
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:209
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:211
msgid ""
"Networking RPC annotation. See :ref:`high-level multiplayer docs "
"<doc_high_level_multiplayer>`."
msgstr ""
"Sieciowanie adnotacje RPC. Patrz :ref:`wysokopoziomowy multiplayer "
"<doc_high_level_multiplayer>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:203
msgid "master"
msgstr "master"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:205
msgid "puppet"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:207
#, fuzzy
msgid "remotesync"
msgstr "remote"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:209
#, fuzzy
msgid "mastersync"
msgstr "master"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:211
msgid "puppetsync"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:213
msgid "PI"
msgstr "PI"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:213
msgid "PI constant."
msgstr "Stała Pi."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:215
msgid "TAU"
msgstr "TAU"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:215
msgid "TAU constant."
msgstr "Stała Tau."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:217
msgid "INF"
msgstr "INF"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:217
msgid "Infinity constant. Used for comparisons."
msgstr "Stała nieskończoności. Służy do porównań."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:219
msgid "NAN"
msgstr "NAN"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:219
msgid "NAN (not a number) constant. Used for comparisons."
msgstr "stała NAN (nie liczba). Służy do porównań."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:223
msgid "Operators"
msgstr "Operatory"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:225
msgid "The following is the list of supported operators and their precedence."
msgstr ""
"Poniżej znajduje się lista obsługiwanych operatorów i ich pierwszeństwo."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:228
msgid "**Operator**"
msgstr "**Operator**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:228
msgid "**Description**"
msgstr "**Opis**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:230
msgid "``x[index]``"
msgstr "``x[indeks]``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:230
msgid "Subscription (highest priority)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:232
msgid "``x.attribute``"
msgstr "``x.atrybut``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:232
#, fuzzy
msgid "Attribute reference"
msgstr "Odwołanie do atrybutu"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:234
msgid "``foo()``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:234
#, fuzzy
msgid "Function call"
msgstr "Funkcje"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:236
msgid "``is``"
msgstr "``is``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:236
#, fuzzy
msgid "Instance type checker"
msgstr "Służy do sprawdzania typu instancji"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:238
msgid "``~``"
msgstr "``~``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:238
msgid "Bitwise NOT"
msgstr "Bitowe NOT"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:240
msgid "``-x``"
msgstr "``-x``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:240
msgid "Negative / Unary negation"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:242
msgid "``*`` ``/`` ``%``"
msgstr "``*`` ``/`` ``%``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:242
msgid "Multiplication / Division / Remainder"
msgstr "Mnożenie / Dzielenie / Reszta z dzielenia"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:244
msgid ""
"These operators have the same behavior as C++. Integer division is truncated "
"rather than returning a fractional number, and the % operator is only "
"available for ints (\"fmod\" for floats)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:250
msgid "``+``"
msgstr "``+``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:250
#, fuzzy
msgid "Addition / Concatenation of arrays"
msgstr "Dodawanie / Odejmowanie"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:252
msgid "``-``"
msgstr "``-``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:252
#, fuzzy
msgid "Subtraction"
msgstr "Dodawanie / Odejmowanie"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:254
msgid "``<<`` ``>>``"
msgstr "``<<`` ``>>``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:254
#, fuzzy
msgid "Bit shifting"
msgstr "Przesunięcie bitowe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:256
msgid "``&``"
msgstr "``&``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:256
msgid "Bitwise AND"
msgstr "Bitowe AND"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:258
msgid "``^``"
msgstr "``^``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:258
msgid "Bitwise XOR"
msgstr "Bitowe XOR"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:260
msgid "``|``"
msgstr "``|``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:260
msgid "Bitwise OR"
msgstr "Bitowe OR"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:262
msgid "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"
msgstr "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:262
msgid "Comparisons"
msgstr "Porównania"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:264
msgid "``in``"
msgstr "``in``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:264
#, fuzzy
msgid "Content test"
msgstr "Badanie zawartości"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:266
msgid "``!`` ``not``"
msgstr "``!`` ``not``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:266
msgid "Boolean NOT"
msgstr "Operator logiczny nie"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:268
msgid "``and`` ``&&``"
msgstr "``and`` ``&&``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:268
msgid "Boolean AND"
msgstr "Operator logiczny i"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:270
msgid "``or`` ``||``"
msgstr "``or`` ``||``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:270
msgid "Boolean OR"
msgstr "Operator logiczny lub"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:272
msgid "``if x else``"
msgstr "``if x else``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:272
msgid "Ternary if/else"
msgstr "Trójskładnikowy if/else"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:274
msgid "``as``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:274
#, fuzzy
msgid "Type casting"
msgstr "Testowanie"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:276
msgid "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=``"
msgstr "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:276
msgid "Assignment (lowest priority)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:280
msgid "Literals"
msgstr "Literały"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:283
msgid "**Literal**"
msgstr "**Literał**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:283
msgid "**Type**"
msgstr "**Typ**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:285
msgid "``45``"
msgstr "``45``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:285
msgid "Base 10 integer"
msgstr "Bazowy system dziesiętny"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:287
msgid "``0x8F51``"
msgstr "``0x8F51``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:287
#, fuzzy
msgid "Base 16 (hexadecimal) integer"
msgstr "Baza heksadecymalna"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:289
msgid "``0b101010``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:289
#, fuzzy
msgid "Base 2 (binary) integer"
msgstr "Baza heksadecymalna"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:291
msgid "``3.14``, ``58.1e-10``"
msgstr "``3.14``, ``58.1e-10``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:291
#, fuzzy
msgid "Floating-point number (real)"
msgstr "Liczby zmiennoprzecinkowe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:293
msgid "``\"Hello\"``, ``\"Hi\"``"
msgstr "``\"Cześć\"``, ``\"Hej\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:293
msgid "Strings"
msgstr "Ciągi tekstowe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:295
msgid "``\"\"\"Hello\"\"\"``"
msgstr "``\"\"\"Cześć\"\"\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:295
msgid "Multiline string"
msgstr "Wieloliniowy ciąg tekstowy"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:297
msgid "``@\"Node/Label\"``"
msgstr "``@\"Węzeł/Sprite\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:297
#, fuzzy
msgid ":ref:`class_NodePath` or StringName"
msgstr "Ścieżka węzła lub nazwa ciągu"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:299
#, fuzzy
msgid "``$NodePath``"
msgstr "Konfiguracja węzła"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:299
msgid "Shorthand for ``get_node(\"NodePath\")``"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:303
msgid "Comments"
msgstr "Komentarze"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:305
msgid ""
"Anything from a ``#`` to the end of the line is ignored and is considered a "
"comment."
msgstr ""
"Wszystko od ``#``do końca wiersza jest ignorowane i jest traktowane jako "
"komentarz."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:315
msgid "Built-in types"
msgstr "Typy wbudowane"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:317
msgid ""
"Built-in types are stack-allocated. They are passed as values. This means a "
"copy is created on each assignment or when passing them as arguments to "
"functions. The only exceptions are ``Array``\\ s and ``Dictionaries``, which "
"are passed by reference so they are shared. (Pooled arrays such as "
"``PoolByteArray`` are still passed as values.)"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:324
msgid "Basic built-in types"
msgstr "Podstawowe typy wbudowane"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:326
msgid "A variable in GDScript can be assigned to several built-in types."
msgstr "Do zmiennej w GDScript można przypisać do wiele wbudowanych typów."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:329
msgid "null"
msgstr "null"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:331
msgid ""
"``null`` is an empty data type that contains no information and can not be "
"assigned any other value."
msgstr ""
"``null`` jest pustym typem danych, który nie zawiera żadnych informacji i "
"nie może być przypisana do niego żadna inna wartość."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:335
#, fuzzy
msgid ":ref:`bool <class_bool>`"
msgstr "1: :ref:`bool<class_bool>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:337
#, fuzzy
msgid "Short for \"boolean\", it can only contain ``true`` or ``false``."
msgstr "Typ danych logicznych może zawierać tylko ``true`` lub ``false``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:340
#, fuzzy
msgid ":ref:`int <class_int>`"
msgstr "2: :ref:`int<class_int>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:342
msgid ""
"Short for \"integer\", it stores whole numbers (positive and negative). It "
"is stored as a 64-bit value, equivalent to \"int64_t\" in C++."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:346
#, fuzzy
msgid ":ref:`float <class_float>`"
msgstr ":ref:`Quat <class_Quat>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:348
msgid ""
"Stores real numbers, including decimals, using floating-point values. It is "
"stored as a 64-bit value, equivalent to \"double\" in C++. Note: Currently, "
"data structures such as Vector2, Vector3, and PoolRealArray store 32-bit "
"single-precision \"float\" values."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:354
msgid ":ref:`String <class_String>`"
msgstr ":ref:`String <class_String>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:356
#, fuzzy
msgid ""
"A sequence of characters in `Unicode format <https://en.wikipedia.org/wiki/"
"Unicode>`_. Strings can contain `standard C escape sequences <https://en."
"wikipedia.org/wiki/Escape_sequences_in_C>`_. GDScript also supports :ref:"
"`doc_gdscript_printf`."
msgstr ""
"Ciąg znaków w formacie `Unicode <https://en.wikipedia.org/wiki/Unicode>`_. "
"Łańcuchy mogą zawierać `Standardowe sekwencje specjalne C <https://en."
"wikipedia.org/wiki/Escape_sequences_in_C>`_. GDScript obsługuje :ref:"
"`formatowanie łańcucha znaków czyli funkcjonalność funkcji printf "
"<doc_gdscript_printf>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:362
msgid "Vector built-in types"
msgstr "Wbudowane typy wektorowe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:365
msgid ":ref:`Vector2 <class_Vector2>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:367
#, fuzzy
msgid ""
"2D vector type containing ``x`` and ``y`` fields. Can also be accessed as an "
"array."
msgstr ""
"Wektor w przestrzeni 2D zawiera pola ``x`` i ``y``. Dostępny jest również "
"jako tablica."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:371
msgid ":ref:`Rect2 <class_Rect2>`"
msgstr ":ref:`Rect2 <class_Rect2>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:373
#, fuzzy
msgid ""
"2D Rectangle type containing two vectors fields: ``position`` and ``size``. "
"Also contains an ``end`` field which is ``position + size``."
msgstr ""
"Typ prostokątny 2D zawierający dwa pola wektorowe: ``position`` i ``size``. "
"Alternatywnie zawiera pole ``end``, które jest ``position+size``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:377
msgid ":ref:`Vector3 <class_Vector3>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:379
msgid ""
"3D vector type containing ``x``, ``y`` and ``z`` fields. This can also be "
"accessed as an array."
msgstr ""
"Wektor w przestrzeni trójwymiarowej(3D) zawiera pola ``x``, ``y`` i ``z``. "
"Dostęp do tej funkcji jest również możliwy w postaci tablicy."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:383
msgid ":ref:`Transform2D <class_Transform2D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:385
#, fuzzy
msgid "3×2 matrix used for 2D transforms."
msgstr "Macierz 3x2 stosowana do przekształceń 2D."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:388
msgid ":ref:`Plane <class_Plane>`"
msgstr ":ref:`Plane <class_Plane>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:390
msgid ""
"3D Plane type in normalized form that contains a ``normal`` vector field and "
"a ``d`` scalar distance."
msgstr ""
"3D Plane w znormalizowanej formie, który zawiera pole wektorowe ``normal`` i "
"długość skalarną ``d``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:394
msgid ":ref:`Quat <class_Quat>`"
msgstr ":ref:`Quat <class_Quat>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:396
msgid ""
"Quaternion is a datatype used for representing a 3D rotation. It's useful "
"for interpolating rotations."
msgstr ""
"Quaternion jest to typ danych używany do reprezentowania obrotu w 3D. Jest "
"przydatny do interpolacji obrotu."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:400
msgid ":ref:`AABB <class_AABB>`"
msgstr ":ref:`AABB <class_AABB>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:402
#, fuzzy
msgid ""
"Axis-aligned bounding box (or 3D box) contains 2 vectors fields: "
"``position`` and ``size``. Also contains an ``end`` field which is "
"``position + size``."
msgstr ""
"Typ prostokątny 2D zawierający dwa pola wektorowe: ``position`` i ``size``. "
"Alternatywnie zawiera pole ``end``, które jest ``position+size``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:407
msgid ":ref:`Basis <class_Basis>`"
msgstr ":ref:`Basis <class_Basis>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:409
msgid ""
"3x3 matrix used for 3D rotation and scale. It contains 3 vector fields "
"(``x``, ``y`` and ``z``) and can also be accessed as an array of 3D vectors."
msgstr ""
"Macierz 3x3 używana jest do obrotu i skalowania 3D. Zawiera 3 pola wektorowe "
"( ``x``, ``y`` i ``z``) i może być również dostępna jako tablica wektorów 3D."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:414
msgid ":ref:`Transform <class_Transform>`"
msgstr ":ref:`Transform <class_Transform>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:416
msgid ""
"3D Transform contains a Basis field ``basis`` and a Vector3 field ``origin``."
msgstr ""
"Przekształcenie(Transform) 3D zawiera pole Basis ``basis`` i "
"Vector3``origin``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:420
msgid "Engine built-in types"
msgstr "Wbudowane typy silnika"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:423
msgid ":ref:`Color <class_Color>`"
msgstr ":ref:`Color <class_Color>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:425
msgid ""
"Color data type contains ``r``, ``g``, ``b``, and ``a`` fields. It can also "
"be accessed as ``h``, ``s``, and ``v`` for hue/saturation/value."
msgstr ""
"Typ danych kolorowych zawiera pola ``r``, ``g``,``b`` i ``a``. Dostępny jest "
"również jako ``h``, ``s`` i ``v`` dla barwy/nasycenia/wartości."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:429
msgid ":ref:`NodePath <class_NodePath>`"
msgstr ":ref:`NodePath <class_NodePath>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:431
msgid ""
"Compiled path to a node used mainly in the scene system. It can be easily "
"assigned to, and from, a String."
msgstr ""
"Skompilowana ścieżka do węzła jest używana głównie w systemie scen. Można ją "
"łatwo przypisać do i od łańcucha znaków."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:435
msgid ":ref:`RID <class_RID>`"
msgstr ":ref:`RID <class_RID>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:437
msgid "Resource ID (RID). Servers use generic RIDs to reference opaque data."
msgstr ""
"Identyfikator zasobu (RID). Serwery wykorzystują ogólne RID-y do odniesień "
"dla danych nieprzezroczystych."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:440
msgid ":ref:`Object <class_Object>`"
msgstr ":ref:`Object <class_Object>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:442
msgid "Base class for anything that is not a built-in type."
msgstr "Klasa podstawowa do wszystkiego, co nie jest typem wbudowanym."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:445
msgid "Container built-in types"
msgstr "Wbudowane typy kontenerowe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:448
msgid ":ref:`Array <class_Array>`"
msgstr ":ref:`Array <class_Array>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:450
msgid ""
"Generic sequence of arbitrary object types, including other arrays or "
"dictionaries (see below). The array can resize dynamically. Arrays are "
"indexed starting from index ``0``. Negative indices count from the end."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:464
msgid ""
"GDScript arrays are allocated linearly in memory for speed. Large arrays "
"(more than tens of thousands of elements) may however cause memory "
"fragmentation. If this is a concern, special types of arrays are available. "
"These only accept a single data type. They avoid memory fragmentation and "
"use less memory, but are atomic and tend to run slower than generic arrays. "
"They are therefore only recommended to use for large data sets:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:471
msgid ""
":ref:`PoolByteArray <class_PoolByteArray>`: An array of bytes (integers from "
"0 to 255)."
msgstr ""
":ref:`PoolByteArray <class_PoolByteArray>`: Tablica bajtów (liczby całkowite "
"od 0 do 255)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:472
msgid ":ref:`PoolIntArray <class_PoolIntArray>`: An array of integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>`: Tablica liczb całkowitych."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:473
msgid ":ref:`PoolRealArray <class_PoolRealArray>`: An array of floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>`: Tablica liczb "
"zmiennoprzecinkowych."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:474
msgid ":ref:`PoolStringArray <class_PoolStringArray>`: An array of strings."
msgstr ""
":ref:`PoolStringArray <class_PoolStringArray>`: Tablica łańcuchów znaków."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:475
msgid ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: An array of :ref:`Vector2 "
"<class_Vector2>` objects."
msgstr ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: Tablica obiektów :ref:"
"`Vector2 <class_Vector2>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:476
msgid ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: An array of :ref:`Vector3 "
"<class_Vector3>` objects."
msgstr ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: Tablica obiektów :ref:"
"`Vector3 <class_Vector3>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:477
msgid ""
":ref:`PoolColorArray <class_PoolColorArray>`: An array of :ref:`Color "
"<class_Color>` objects."
msgstr ""
":ref:`PoolColorArray <class_PoolColorArray>`: Tablica obiektów :ref:`Color "
"<class_Color>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:480
msgid ":ref:`Dictionary <class_Dictionary>`"
msgstr ":ref:`Słownik <class_Dictionary>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:482
msgid "Associative container which contains values referenced by unique keys."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:495
msgid ""
"Lua-style table syntax is also supported. Lua-style uses ``=`` instead of ``:"
"`` and doesn't use quotes to mark string keys (making for slightly less to "
"write). However, keys written in this form can't start with a digit (like "
"any GDScript identifier)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:509
msgid ""
"To add a key to an existing dictionary, access it like an existing key and "
"assign to it::"
msgstr ""
"Aby dodać klucz do istniejącego słownika, otwórz go jakby istniał i przypisz "
"do niego wartość::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:525
msgid ""
"The bracket syntax can be used to access properties of any :ref:"
"`class_Object`, not just Dictionaries. Keep in mind it will cause a script "
"error when attempting to index a non-existing property. To avoid this, use "
"the :ref:`Object.get() <class_Object_method_get>` and :ref:`Object.set() "
"<class_Object_method_set>` methods instead."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:532
msgid "Data"
msgstr "Dane"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:535
msgid "Variables"
msgstr "Zmienne"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:537
msgid ""
"Variables can exist as class members or local to functions. They are created "
"with the ``var`` keyword and may, optionally, be assigned a value upon "
"initialization."
msgstr ""
"Zmienne mogą istnieć jako elementy klasy lub lokalnie w funkcji. Są one "
"tworzone za pomocą słowa kluczowego ``var`` i mogą, mieć przypisaną wartość "
"przy inicjalizacji."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:548
msgid ""
"Variables can optionally have a type specification. When a type is "
"specified, the variable will be forced to have always that same type, and "
"trying to assign an incompatible value will raise an error."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:552
msgid ""
"Types are specified in the variable declaration using a ``:`` (colon) symbol "
"after the variable name, followed by the type."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:560
msgid ""
"If the variable is initialized within the declaration, the type can be "
"inferred, so it's possible to omit the type name::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:566
msgid ""
"Type inference is only possible if the assigned value has a defined type, "
"otherwise it will raise an error."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:569
msgid "Valid types are:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:571
msgid "Built-in types (Array, Vector2, int, String, etc.)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:572
msgid "Engine classes (Node, Resource, Reference, etc.)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:573
msgid ""
"Constant names if they contain a script resource (``MyScript`` if you "
"declared ``const MyScript = preload(\"res://my_script.gd\")``)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:574
msgid ""
"Other classes in the same script, respecting scope (``InnerClass."
"NestedClass`` if you declared ``class NestedClass`` inside the ``class "
"InnerClass`` in the same scope)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:575
msgid "Script classes declared with the ``class_name`` keyword."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:578
msgid "Casting"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:580
msgid ""
"Values assigned to typed variables must have a compatible type. If it's "
"needed to coerce a value to be of a certain type, in particular for object "
"types, you can use the casting operator ``as``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:584
msgid ""
"Casting between object types results in the same object if the value is of "
"the same type or a subtype of the cast type."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:592
msgid ""
"If the value is not a subtype, the casting operation will result in a "
"``null`` value."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:599
msgid ""
"For built-in types, they will be forcibly converted if possible, otherwise "
"the engine will raise an error."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:608
msgid ""
"Casting is also useful to have better type-safe variables when interacting "
"with the scene tree::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:618
msgid "Constants"
msgstr "Stałe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:620
msgid ""
"Constants are similar to variables, but must be constants or constant "
"expressions and must be assigned on initialization."
msgstr ""
"Stałe są podobne do zmiennych, ale muszą być stałe lub stałymi wyrażeniami i "
"muszą być przypisane przy inicjalizacji."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:634
msgid ""
"Although the type of constants is inferred from the assigned value, it's "
"also possible to add explicit type specification::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:640
msgid "Assigning a value of an incompatible type will raise an error."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:644
msgid ""
"Since arrays and dictionaries are passed by reference, constants are \"flat"
"\". This means that if you declare a constant array or dictionary, it can "
"still be modified afterwards. They can't be reassigned with another value "
"though."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:649
msgid "Enums"
msgstr "Typy wyliczeniowe"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:651
msgid ""
"Enums are basically a shorthand for constants, and are pretty useful if you "
"want to assign consecutive integers to some constant."
msgstr ""
"Typy wyliczeniowe są w zasadzie skrótem stałych i są bardzo przydatne, jeśli "
"chcesz przypisać kolejne liczby całkowite do jakiejś stałej."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:654
msgid ""
"If you pass a name to the enum, it will put all the keys inside a constant "
"dictionary of that name."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:657
msgid ""
"In Godot 3.1 and later, keys in a named enum are not registered as global "
"constants. They should be accessed prefixed by the enum's name (``Name."
"KEY``); see an example below."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:677
msgid "Functions"
msgstr "Funkcje"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:679
msgid ""
"Functions always belong to a `class <Classes_>`_. The scope priority for "
"variable look-up is: local → class member → global. The ``self`` variable is "
"always available and is provided as an option for accessing class members, "
"but is not always required (and should *not* be sent as the function's first "
"argument, unlike Python)."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:692
msgid ""
"A function can ``return`` at any point. The default return value is ``null``."
msgstr ""
"Funkcja może ``zwrócić`` wartość w dowolnym momencie. Domyślnie zwraca "
"``null``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:694
msgid ""
"Functions can also have type specification for the arguments and for the "
"return value. Types for arguments can be added in a similar way to "
"variables::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:700
msgid ""
"If a function argument has a default value, it's possible to infer the type::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:705
msgid ""
"The return type of the function can be specified after the arguments list "
"using the arrow token (``->``)::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:711
msgid ""
"Functions that have a return type **must** return a proper value. Setting "
"the type as ``void`` means the function doesn't return anything. Void "
"functions can return early with the ``return`` keyword, but they can't "
"return any value."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:720
msgid ""
"Non-void functions must **always** return a value, so if your code has "
"branching statements (such as an ``if``/``else`` construct), all the "
"possible paths must have a return. E.g., if you have a ``return`` inside an "
"``if`` block but not after it, the editor will raise an error because if the "
"block is not executed, the function won't have a valid value to return."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:728
#, fuzzy
msgid "Referencing functions"
msgstr "Odwołanie do funkcji"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:730
msgid ""
"Contrary to Python, functions are *not* first-class objects in GDScript. "
"This means they cannot be stored in variables, passed as an argument to "
"another function or be returned from other functions. This is for "
"performance reasons."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:734
msgid ""
"To reference a function by name at run-time, (e.g. to store it in a "
"variable, or pass it to another function as an argument) one must use the "
"``call`` or ``funcref`` helpers::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:748
msgid "Static functions"
msgstr "Funkcje statyczne"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:750
msgid ""
"A function can be declared static. When a function is static, it has no "
"access to the instance member variables or ``self``. This is mainly useful "
"to make libraries of helper functions::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:759
msgid "Statements and control flow"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:761
msgid ""
"Statements are standard and can be assignments, function calls, control flow "
"structures, etc (see below). ``;`` as a statement separator is entirely "
"optional."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:766
msgid "if/else/elif"
msgstr "if/else/elif"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:768
msgid ""
"Simple conditions are created by using the ``if``/``else``/``elif`` syntax. "
"Parenthesis around conditions are allowed, but not required. Given the "
"nature of the tab-based indentation, ``elif`` can be used instead of "
"``else``/``if`` to maintain a level of indentation."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:782
msgid "Short statements can be written on the same line as the condition::"
msgstr "Krótkie instrukcje mogą być napisane w tym samym wierszu co warunek::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:789
#, fuzzy
msgid ""
"Sometimes, you might want to assign a different initial value based on a "
"boolean expression. In this case, ternary-if expressions come in handy::"
msgstr ""
"Czasami można przypisać jedną z dwóch wartości w oparciu o wyrażenie "
"logiczne. W tym przypadku przydatne są wyrażenia trzyargumentowe wyrażenie "
"warunkowe::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:798
msgid ""
"Simple loops are created by using ``while`` syntax. Loops can be broken "
"using ``break`` or continued using ``continue``:"
msgstr ""
"Proste pętle są tworzone przy użyciu ``while``. Pętle można przerwać za "
"pomocą ``break`` lub kontynuować za pomocą ``continue``:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:809
#, fuzzy
msgid ""
"To iterate through a range, such as an array or table, a *for* loop is used. "
"When iterating over an array, the current array element is stored in the "
"loop variable. When iterating over a dictionary, the *key* is stored in the "
"loop variable."
msgstr ""
"Do iteracji w zakresie, takim jak tablica lub tabela, wykorzystywana jest "
"pętla *for*. Podczas iteracji na tablicy, aktualny element tablicy jest "
"zapisywany do zmiennej. Podczas iteracji słownikiem *indeks* jest zapisywany "
"w zmiennej."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:844
msgid ""
"A ``match`` statement is used to branch execution of a program. It's the "
"equivalent of the ``switch`` statement found in many other languages, but "
"offers some additional features."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:847
#, fuzzy
msgid "Basic syntax::"
msgstr "Podstawowa składnia:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:858
#, fuzzy
msgid "**Crash-course for people who are familiar with switch statements**:"
msgstr "**Kurs dla osób, które są zaznajomione z instrukcją switch**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:860
#, fuzzy
msgid "Replace ``switch`` with ``match``."
msgstr "Zastąp ``switch`` z ``match``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:861
#, fuzzy
msgid "Remove ``case``."
msgstr "Usuń ``case``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:862
msgid ""
"Remove any ``break``\\ s. If you don't want to ``break`` by default, you can "
"use ``continue`` for a fallthrough."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:863
msgid "Change ``default`` to a single underscore."
msgstr "Zamień ``default`` na jedno podkreślenie."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:866
msgid "**Control flow**:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:868
msgid ""
"The patterns are matched from top to bottom. If a pattern matches, the first "
"corresponding block will be executed. After that, the execution continues "
"below the ``match`` statement. You can use ``continue`` to stop execution in "
"the current block and check for an additional match in the patterns below it."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:872
msgid "There are 6 pattern types:"
msgstr "Istnieje 6 rodzajów wzorów:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:884
#, fuzzy
msgid "Constant pattern"
msgstr "stały wzorzec"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:875
#, fuzzy
msgid "Constant primitives, like numbers and strings::"
msgstr "stałe wartości podstawowe, takie jak liczby i ciągi znaków ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:896
#, fuzzy
msgid "Variable pattern"
msgstr "zmienny wzorzec"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:887
#, fuzzy
msgid "Matches the contents of a variable/enum::"
msgstr "odpowiada zawartości zmiennej/typu wyliczeniowego ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:910
#, fuzzy
msgid "Wildcard pattern"
msgstr "stały wzorzec"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:899
msgid "This pattern matches everything. It's written as a single underscore."
msgstr ""
"Ten wzór pasuje do wszystkiego. Jest napisany jako pojedyncze podkreślenie."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:901
#, fuzzy
msgid ""
"It can be used as the equivalent of the ``default`` in a ``switch`` "
"statement in other languages::"
msgstr ""
"Jest używany jako odpowiednik instrukcji ``default`` w ``switch`` w innych "
"językach. ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:923
#, fuzzy
msgid "Binding pattern"
msgstr "stały wzorzec"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:913
#, fuzzy
msgid ""
"A binding pattern introduces a new variable. Like the wildcard pattern, it "
"matches everything - and also gives that value a name. It's especially "
"useful in array and dictionary patterns::"
msgstr ""
"Wzór wiążący wprowadza nową zmienną. Podobnie jak wzór wieloznaczny, pasuje "
"do wszystkiego, a także nadaje tej wartości nazwę. Jest szczególnie "
"przydatny w szablonach tablic i słowników. ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:944
#, fuzzy
msgid "Array pattern"
msgstr "zmienny wzorzec"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:926
msgid ""
"Matches an array. Every single element of the array pattern is a pattern "
"itself, so you can nest them."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:928
msgid ""
"The length of the array is tested first, it has to be the same size as the "
"pattern, otherwise the pattern doesn't match."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:930
msgid ""
"**Open-ended array**: An array can be bigger than the pattern by making the "
"last subpattern ``..``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:932
msgid "Every subpattern has to be comma-separated."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:971
#, fuzzy
msgid "Dictionary pattern"
msgstr "stały wzorzec"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:947
msgid ""
"Works in the same way as the array pattern. Every key has to be a constant "
"pattern."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:949
msgid ""
"The size of the dictionary is tested first, it has to be the same size as "
"the pattern, otherwise the pattern doesn't match."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:951
msgid ""
"**Open-ended dictionary**: A dictionary can be bigger than the pattern by "
"making the last subpattern ``..``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:953
msgid "Every subpattern has to be comma separated."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:955
msgid ""
"If you don't specify a value, then only the existence of the key is checked."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:957
msgid "A value pattern is separated from the key pattern with a ``:``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:984
#, fuzzy
msgid "Multiple patterns"
msgstr "Wielokrotne instancje"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:974
msgid ""
"You can also specify multiple patterns separated by a comma. These patterns "
"aren't allowed to have any bindings in them."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:987
msgid "Classes"
msgstr "Klasy"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:989
msgid ""
"By default, all script files are unnamed classes. In this case, you can only "
"reference them using the file's path, using either a relative or an absolute "
"path. For example, if you name a script file ``character.gd``::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1002
msgid ""
"Instead, you can give your class a name to register it as a new type in "
"Godot's editor. For that, you use the ``class_name`` keyword. You can add an "
"optional comma followed by a path to an image, to use it as an icon. Your "
"class will then appear with its new icon in the editor::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1014
#, fuzzy
msgid "Here's a class file example:"
msgstr "Tak wygląda klasa w XML:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1036
msgid ""
"Godot's class syntax is compact: it can only contain member variables or "
"functions. You can use static functions, but not static member variables. In "
"the same way, the engine initializes variables every time you create an "
"instance, and this includes arrays and dictionaries. This is in the spirit "
"of thread safety, since scripts can be initialized in separate threads "
"without the user knowing."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1044
msgid "Inheritance"
msgstr "Dziedziczenie"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1046
#, fuzzy
msgid "A class (stored as a file) can inherit from:"
msgstr "Klasa (przechowywana jako plik) może dziedziczyć po"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1048
#, fuzzy
msgid "A global class."
msgstr "Klasie globalnej"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1049
#, fuzzy
msgid "Another class file."
msgstr "Innego pliku klasy"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1050
msgid "An inner class inside another class file."
msgstr "Klasa wewnętrzna w pliku innej klasy."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1052
msgid "Multiple inheritance is not allowed."
msgstr "Wielokrotne dziedziczenie jest niedozwolone."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1054
#, fuzzy
msgid "Inheritance uses the ``extends`` keyword::"
msgstr "Dziedziczenie używa słowa kluczowego ``extends``:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1066
#, fuzzy
msgid ""
"To check if a given instance inherits from a given class, the ``is`` keyword "
"can be used::"
msgstr ""
"Aby sprawdzić, czy dana instancja dziedziczy z danej klasy, można użyć słowa "
"kluczowego ``is``:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1078
msgid ""
"To call a function in a *parent class* (i.e. one ``extend``-ed in your "
"current class), prepend ``.`` to the function name::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1083
#, fuzzy
msgid ""
"This is especially useful because functions in extending classes replace "
"functions with the same name in their parent classes. If you still want to "
"call them, you can prefix them with ``.`` (like the ``super`` keyword in "
"other languages)::"
msgstr ""
"Jest to szczególnie przydatne, ponieważ funkcje w klasach pochodnych "
"zastępują funkcje o tej samej nazwie w swoich klasach bazowych. Więc jeśli "
"nadal chcesz je wywołać, to możesz użyć ``.`` będące tym samym co słowo "
"kluczowe ``super`` w innych językach:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1091
msgid ""
"Default functions like  ``_init``, and most notifications such as "
"``_enter_tree``, ``_exit_tree``, ``_process``, ``_physics_process``, etc. "
"are called in all parent classes automatically. There is no need to call "
"them explicitly when overloading them."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1098
msgid "Class Constructor"
msgstr "Konstruktor klasy"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1100
#, fuzzy
msgid ""
"The class constructor, called on class instantiation, is named ``_init``. As "
"mentioned earlier, the constructors of parent classes are called "
"automatically when inheriting a class. So, there is usually no need to call "
"``._init()`` explicitly."
msgstr ""
"Konstruktor klasy, zwany instancją klasy, nosi nazwę ``init``. Jak "
"wspomniano wcześniej, konstruktory klas rodzicielskich są wywoływane "
"automatycznie podczas dziedziczenia klasy. Więc zazwyczaj nie ma potrzeby, "
"aby wywoływać jawnie ``._init() ``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1105
msgid ""
"Unlike the call of a regular function, like in the above example with ``."
"some_func``, if the constructor from the inherited class takes arguments, "
"they are passed like this::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1112
msgid "This is better explained through examples. Consider this scenario::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1135
#, fuzzy
msgid "There are a few things to keep in mind here:"
msgstr "Nie ma żadnych ograniczeń w stosowaniu Godota"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1137
msgid ""
"If the inherited class (``State.gd``) defines a ``_init`` constructor that "
"takes arguments (``e`` in this case), then the inheriting class (``Idle."
"gd``) *must* define ``_init`` as well and pass appropriate parameters to "
"``_init`` from ``State.gd``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1140
msgid ""
"``Idle.gd`` can have a different number of arguments than the parent class "
"``State.gd``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1141
msgid ""
"In the example above, ``e`` passed to the ``State.gd`` constructor is the "
"same ``e`` passed in to ``Idle.gd``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1143
msgid ""
"If ``Idle.gd``'s ``_init`` constructor takes 0 arguments, it still needs to "
"pass some value to the ``State.gd`` parent class, even if it does nothing. "
"This brings us to the fact that you can pass literals in the base "
"constructor as well, not just variables. eg.::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1153
msgid "Inner classes"
msgstr "Klasy wewnętrzne"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1155
msgid ""
"A class file can contain inner classes. Inner classes are defined using the "
"``class`` keyword. They are instanced using the ``ClassName.new()`` function."
msgstr ""
"Plik klasy może zawierać klasy wewnętrzne. Klasy wewnętrzne są definiowane "
"za pomocą słowa kluczowego ``class``. Są one instancjowane za pomocą funkcji "
"``NazwaKlasy.new()``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1180
msgid "Classes as resources"
msgstr "Klasy jako zasoby"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1182
msgid ""
"Classes stored as files are treated as :ref:`resources <class_GDScript>`. "
"They must be loaded from disk to access them in other classes. This is done "
"using either the ``load`` or ``preload`` functions (see below). Instancing "
"of a loaded class resource is done by calling the ``new`` function on the "
"class object::"
msgstr ""
"Klasy przechowywane jako pliki traktowane są jako :ref:`zasoby "
"<class_GDScript>`. Muszą być załadowane z dysku, aby uzyskać do nich dostęp "
"z innych klas. Odbywa się to za pomocą funkcji ``load`` lub ``preload`` "
"(patrz poniżej). Instancjowanie wczytanych zasobów klasy odbywa się przez "
"wywołanie funkcji ``new`` na obiekcie klasy::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1199
msgid "Exports"
msgstr "Eksport"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1203
msgid ""
"Documentation about exports has been moved to :ref:`doc_gdscript_exports`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1206
msgid "Setters/getters"
msgstr "Settery/gettery"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1208
msgid ""
"It is often useful to know when a class' member variable changes for "
"whatever reason. It may also be desired to encapsulate its access in some "
"way."
msgstr ""
"Często są używane, gdy zmienna w klasie zmienia swoją wartość. Pożądane jest "
"by kontrolować dostęp do tych zmiennych."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1211
msgid ""
"For this, GDScript provides a *setter/getter* syntax using the ``setget`` "
"keyword. It is used directly after a variable definition:"
msgstr ""
"W tym celu GDScript zapewnia składnię *setterów/getterów* przy użyciu słowa "
"kluczowego ``setget``. Jest ono używane bezpośrednio po definicji zmiennej:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1218
#, fuzzy
msgid ""
"Whenever the value of ``variable`` is modified by an *external* source (i.e. "
"not from local usage in the class), the *setter* function (``setterfunc`` "
"above) will be called. This happens *before* the value is changed. The "
"*setter* must decide what to do with the new value. Vice versa, when "
"``variable`` is accessed, the *getter* function (``getterfunc`` above) must "
"``return`` the desired value. Below is an example::"
msgstr ""
"Gdy wartość ``zmiennej`` jest modyfikowana przez *zewnętrzne* źródło (tzn. "
"nie lokalnie w klasie), wywoływana jest funkcja *set* (``setterfunc`` "
"powyżej). Dzieje się tak *zanim* nastąpi zmiana wartości. Funkcja *set* musi "
"zdecydować, co zrobić z nową wartością. Odwrotnie, gdy dostępna jest "
"``zmienna``, funkcja *get* (``getterfunc`` powyżej) musi `zwrócić` pożądaną "
"wartość`. Poniżej znajduje się przykład:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1234
#, fuzzy
msgid "Either of the *setter* or *getter* functions can be omitted::"
msgstr "Można pominąć jedną z funkcji *setter* lub *getter*:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1241
#, fuzzy
msgid ""
"Setters and getters are useful when :ref:`exporting variables "
"<doc_gdscript_exports>` to the editor in tool scripts or plugins, for "
"validating input."
msgstr ""
"Narzędzia Get/Setter są szczególnie przydatne do eksportowania zmiennych do "
"edytora skryptów narzędziowych lub wtyczek oraz do sprawdzania poprawności "
"danych wejściowych."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1244
msgid ""
"As said, *local* access will *not* trigger the setter and getter. Here is an "
"illustration of this:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1261
msgid "Tool mode"
msgstr "Tryb narzędziowy"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1263
#, fuzzy
msgid ""
"By default, scripts don't run inside the editor and only the exported "
"properties can be changed. In some cases, it is desired that they do run "
"inside the editor (as long as they don't execute game code or manually avoid "
"doing so). For this, the ``tool`` keyword exists and must be placed at the "
"top of the file::"
msgstr ""
"Domyślnie skrypty nie są uruchamiane wewnątrz edytora i tylko eksportowane "
"właściwości mogą być zmieniane. W niektórych przypadkach pożądane jest, aby "
"uruchamiały się wewnątrz edytora (o ile nie uruchamiają kodu gry). W tym "
"celu istnieje słowo kluczowe ``tool`` i musi być umieszczone na górze pliku:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1277
#, fuzzy
msgid "See :ref:`doc_running_code_in_the_editor` for more information."
msgstr ":ref:`Uruchamianie kodu w edytorze <doc_running_code_in_the_editor>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1279
msgid ""
"Be cautious when freeing nodes with ``queue_free()`` or ``free()`` in a tool "
"script (especially the script's owner itself). As tool scripts run their "
"code in the editor, misusing them may lead to crashing the editor."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1285
msgid "Memory management"
msgstr "Zarządzanie pamięcią"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1287
msgid ""
"If a class inherits from :ref:`class_Reference`, then instances will be "
"freed when no longer in use. No garbage collector exists, just reference "
"counting. By default, all classes that don't define inheritance extend "
"**Reference**. If this is not desired, then a class must inherit :ref:"
"`class_Object` manually and must call instance.free(). To avoid reference "
"cycles that can't be freed, a ``weakref`` function is provided for creating "
"weak references."
msgstr ""
"Jeśli klasa odziedziczy po :ref:`class_Reference`, to instancje zostaną "
"zwolnione, gdy nie będą już używane. Nie istnieje żaden pojemnik na śmieci, "
"tylko liczenie odniesień. Domyślnie wszystkie klasy, które nie definiują "
"dziedziczenia rozszerzają **Reference**. Jeśli nie jest to pożądane, to "
"klasa musi ręcznie dziedziczyć :ref:`class_Object` i wywołać inst.free(). W "
"celu uniknięcia pętli odniesień, które nie mogą być zwolnione, do tworzenia "
"słabych referencji służy funkcja ``weakref``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1295
msgid ""
"Alternatively, when not using references, the "
"``is_instance_valid(instance)`` can be used to check if an object has been "
"freed."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1302
msgid "Signals"
msgstr "Sygnały"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1304
msgid ""
"Signals are a tool to emit messages from an object that other objects can "
"react to. To create custom signals for a class, use the ``signal`` keyword."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1317
msgid ""
"Signals are a `Callback <https://en.wikipedia.org/wiki/"
"Callback_(computer_programming)>`_ mechanism. They also fill the role of "
"Observers, a common programming pattern. For more information, read the "
"`Observer tutorial <https://gameprogrammingpatterns.com/observer.html>`_ in "
"the Game Programming Patterns ebook."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1324
msgid ""
"You can connect these signals to methods the same way you connect built-in "
"signals of nodes like :ref:`class_Button` or :ref:`class_RigidBody`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1327
msgid ""
"In the example below, we connect the ``health_depleted`` signal from a "
"``Character`` node to a ``Game`` node. When the ``Character`` node emits the "
"signal, the game node's ``_on_Character_health_depleted`` is called::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1341
msgid "You can emit as many arguments as you want along with a signal."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1343
msgid ""
"Here is an example where this is useful. Let's say we want a life bar on "
"screen to react to health changes with an animation, but we want to keep the "
"user interface separate from the player in our scene tree."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1347
msgid ""
"In our ``Character.gd`` script, we define a ``health_changed`` signal and "
"emit it with :ref:`Object.emit_signal() <class_Object_method_emit_signal>`, "
"and from a ``Game`` node higher up our scene tree, we connect it to the "
"``Lifebar`` using the :ref:`Object.connect() <class_Object_method_connect>` "
"method::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1388
msgid ""
"To use signals, your class has to extend the ``Object`` class or any type "
"extending it like ``Node``, ``KinematicBody``, ``Control``..."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1391
msgid ""
"In the ``Game`` node, we get both the ``Character`` and ``Lifebar`` nodes, "
"then connect the character, that emits the signal, to the receiver, the "
"``Lifebar`` node in this case."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1405
msgid ""
"This allows the ``Lifebar`` to react to health changes without coupling it "
"to the ``Character`` node."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1408
msgid ""
"You can write optional argument names in parentheses after the signal's "
"definition::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1414
msgid ""
"These arguments show up in the editor's node dock, and Godot can use them to "
"generate callback functions for you. However, you can still emit any number "
"of arguments when you emit signals; it's up to you to emit the correct "
"values."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1420
msgid ""
"GDScript can bind an array of values to connections between a signal and a "
"method. When the signal is emitted, the callback method receives the bound "
"values. These bound arguments are unique to each connection, and the values "
"will stay the same."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1425
msgid ""
"You can use this array of values to add extra constant information to the "
"connection if the emitted signal itself doesn't give you access to all the "
"data that you need."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1429
msgid ""
"Building on the example above, let's say we want to display a log of the "
"damage taken by each character on the screen, like ``Player1 took 22 damage."
"``. The ``health_changed`` signal doesn't give us the name of the character "
"that took damage. So when we connect the signal to the in-game console, we "
"can add the character's name in the binds array argument::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1443
msgid ""
"Our ``BattleLog`` node receives each element in the binds array as an extra "
"argument::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1456
msgid "Coroutines with yield"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1458
msgid ""
"GDScript offers support for `coroutines <https://en.wikipedia.org/wiki/"
"Coroutine>`_ via the :ref:`yield<class_@GDScript_method_yield>` built-in "
"function. Calling ``yield()`` will immediately return from the current "
"function, with the current frozen state of the same function as the return "
"value. Calling ``resume()`` on this resulting object will continue execution "
"and return whatever the function returns. Once resumed, the state object "
"becomes invalid. Here is an example::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1479
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1500
#, fuzzy
msgid "Will print::"
msgstr "Wyświetli:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1485
#, fuzzy
msgid ""
"It is also possible to pass values between ``yield()`` and ``resume()``, for "
"example::"
msgstr ""
"Możliwe jest również np. przekazywanie wartości pomiędzy yield() a resume():"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1506
msgid ""
"Remember to save the new function state, when using multiple ``yield``\\s::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1521
msgid "Coroutines & signals"
msgstr "Współprogramy i sygnały"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1523
msgid ""
"The real strength of using ``yield`` is when combined with signals. "
"``yield`` can accept two arguments, an object and a signal. When the signal "
"is received, execution will recommence. Here are some examples::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1536
#, fuzzy
msgid ""
"Coroutines themselves use the ``completed`` signal when they transition into "
"an invalid state, for example::"
msgstr ""
"Współprogramy używają sygnału ``completed`` np. gdy przechodzą w stan "
"niepoprawny:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1548
#, fuzzy
msgid ""
"``my_func`` will only continue execution once both buttons have been pressed."
msgstr "``my_func`` będzie kontynuowany dopiero po naciśnięciu obu przycisków."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1550
msgid "You can also get the signal's argument once it's emitted by an object:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1557
msgid ""
"If you're unsure whether a function may yield or not, or whether it may "
"yield multiple times, you can yield to the ``completed`` signal "
"conditionally:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1579
msgid ""
"This ensures that the function returns whatever it was supposed to return "
"regardless of whether coroutines were used internally. Note that using "
"``while`` would be redundant here as the ``completed`` signal is only "
"emitted when the function didn't yield anymore."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1585
msgid "Onready keyword"
msgstr "Słowo kluczowe onready"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1587
msgid ""
"When using nodes, it's common to desire to keep references to parts of the "
"scene in a variable. As scenes are only warranted to be configured when "
"entering the active scene tree, the sub-nodes can only be obtained when a "
"call to ``Node._ready()`` is made."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1600
msgid ""
"This can get a little cumbersome, especially when nodes and external "
"references pile up. For this, GDScript has the ``onready`` keyword, that "
"defers initialization of a member variable until ``_ready()`` is called. It "
"can replace the above code with a single line::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1608
msgid "Assert keyword"
msgstr "Słowo kluczowe assert"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1610
msgid ""
"The ``assert`` keyword can be used to check conditions in debug builds. "
"These assertions are ignored in non-debug builds. This means that the "
"expression passed as argument won't be evaluated in a project exported in "
"release mode. Due to this, assertions must **not** contain expressions that "
"have side effects. Otherwise, the behavior of the script would vary "
"depending on whether the project is run in a debug build."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1622
msgid ""
"When running a project from the editor, the project will be paused if an "
"assertion error occurs."
msgstr ""
