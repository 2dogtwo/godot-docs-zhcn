# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-11 13:45+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:4
msgid "Design a title screen"
msgstr "Stwórz ekran startowy"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:6
msgid ""
"In the next two tutorials, you will build two responsive UI (user interface) "
"scenes step-by-step using the engine's UI system:"
msgstr ""
"W następnych dwóch poradnikach, zbudujesz dwie elastyczne sceny UI "
"(interfejsy użytkownika), krok po kroku używając systemu UI wbudowanego w "
"silnik:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:9
#, fuzzy
msgid "A main menu."
msgstr "Główne menu"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:10
#, fuzzy
msgid "A game UI with a health bar, energy bar, bomb and money counters."
msgstr "UI gry z paskiem życia, energii, licznikiem bomb i monet"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:12
#, fuzzy
msgid ""
"You will learn how to design game UIs efficiently, and how to use Godot's "
"Control nodes. This page focuses on the visual part: everything you do from "
"the editor. To learn how to code a life bar, read :doc:`ui_code_a_life_bar`."
msgstr ""
"Dowiesz się, jak efektywnie zaprojektować interfejs użytkownika i jak używać "
"węzłów kontrolnych. Ta strona skupia się na części wizualnej: wszystko co "
"robisz z edytora. Aby dowiedzieć się, jak stworzyć kod do paska życia, "
"przeczytaj :doc:`ui_code_a_life_bar`"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:20
#, fuzzy
msgid "The GUI you're going to create."
msgstr "GUI które zamierzasz stworzyć"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:22
#, fuzzy
msgid ""
"Download the project files: :download:`ui_main_menu_design.zip <files/"
"ui_main_menu_design.zip>` and extract the archive. Import the ``start/`` "
"project in Godot to follow this tutorial. The ``end/`` folder contains the "
"final result. You'll find all the sprites in the ``start/assets/main_menu`` "
"folder."
msgstr ""
"Pobierz pliki projektu: :download:`ui_main_menu_design.zip <files/"
"ui_main_menu_design.zip>` i rozpakuj archiwum. Zaimportuj projekt ``start/`` "
"w Godot, podążając za tym samouczkiem. Folder ``end/`` zawiera wynik "
"końcowy. Wszystkie obrazy znajdują się w folderze ``start/assets/main_menu``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:30
msgid ""
"Read the :doc:`ui_introduction_to_the_ui_system` first to learn how Godot's "
"UI system works."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:34
msgid "How to design your game UI"
msgstr "Jak zbudować UI w twojej grze"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:36
msgid ""
"To design a good UI, you want to come up with a rough mockup first: a plain "
"drawing version that focuses on the placement of your UI components, their "
"size, and user interaction. Pen and paper is all you need. You shouldn't use "
"fancy and final graphics at this stage. Then, you only need simple "
"placeholder sprites and you're good to jump into Godot. You want to make "
"sure the players can find their way around the interface using those "
"placeholders."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:46
msgid "The UI's rough plan or mockup"
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:48
msgid ""
"Placeholder doesn't have to mean ugly, but you should keep the graphics "
"simple and clean. Avoid special effects, animation, and detailed "
"illustration before you have players playtest your UI. Otherwise:"
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:52
msgid ""
"The graphics might skew the players' perception of the experience and you'll "
"miss out on valuable feedback."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:54
msgid "If the User Experience doesn't work, you'll have to redo some sprites."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:58
msgid ""
"Always try to make the interface work with simple text and boxes first. It's "
"easy to replace the textures later. Professional UX designers often work "
"with plain outlines and boxes in greyscale. When you take colors and fancy "
"visuals away, it's a lot easier to size and place UI elements properly. It "
"helps you refine the design foundation you'll build upon."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:65
msgid "There are two ways to design your UI in Godot. You can:"
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:67
msgid ""
"Build it all in a single scene, and eventually save some branches as "
"reusable scenes."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:69
msgid ""
"Build template scenes for reusable components and create specific components "
"that inherit from your base scenes."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:72
msgid ""
"We will use the first approach, because the first version of your UI may not "
"work as well as you'd like. You're likely to throw parts away and redesign "
"components as you go. When you're sure everything works, it's easy to make "
"some parts reusable, as you'll see below."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:79
msgid ""
"The files you'll find in Godot. The graphics look cleaner than on the rough "
"design, but they're still placeholders."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:83
msgid "Design the main menu"
msgstr "Tworzenie menu głównego"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:85
msgid ""
"Before we jump into the editor, we want to plan how we'll nest containers "
"based on our mockup image."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:89
#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:292
msgid "Break down the UI mockup"
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:91
msgid "Here are my three rules of thumb to find the right containers:"
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:93
msgid ""
"Break down the UI into nested boxes, from the largest that contains "
"everything, to the smallest ones, that encompass one widget, like a bar with "
"its label, a panel or a button."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:96
msgid "If there's some padding around an area, use a ``MarginContainer``."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:97
#, fuzzy
msgid ""
"If the elements are arranged in rows or columns, use an ``HBoxContainer`` or "
"``VBoxContainer``."
msgstr ""
"Jeżeli elementy są ułożone w rzędach lub kolumnach, należy użyć "
"``HBoxContainer`` lub ``VBoxContainer``"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:100
msgid ""
"These rules are enough to get us started, and work well for simple "
"interfaces."
msgstr ""
"Zasady te wystarczą na początek i będą dobrze działać dla prostych "
"interfejsów."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:103
msgid ""
"For the main menu, the largest box is the entire game window. There's "
"padding between the edges of the window and the first components: this "
"should be a ``MarginContainer``. Then, the screen is split into two columns, "
"so we'll use an ``HBoxContainer``. In the left column, we'll manage the rows "
"with a ``VBoxContainer``. And in the right column, we'll center the "
"illustration with a ``CenterContainer``."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:112
msgid "Interface building blocks, broken down using the three rules of thumb."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:116
msgid ""
"Containers adapt to the window's resolution and width-to-height ratio. "
"Although we could place UI elements by hand, containers are faster, more "
"precise, and **responsive**."
msgstr ""
"Kontenery dostosowują się do rozdzielczości okna i stosunku szerokości do "
"wysokości. Choć elementy interfejsu użytkownika można umieszczać ręcznie, "
"kontenery są szybsze, bardziej precyzyjne i **responsywne**."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:121
msgid "Prepare the Main Menu scene"
msgstr "Przygotowanie sceny Menu Główne"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:125
msgid ""
"This tutorial is based on a window size of 1366×768. To change the project's "
"base window size, open **Project > Project Settings** at the top of the "
"editor then change **Display > Window > Size > Width** to ``1366`` and "
"**Display > Window > Size > Height** to ``768``."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:130
msgid ""
"If you forget to change the window size, anchors and containers may not "
"behave as expected."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:133
#, fuzzy
msgid ""
"Let's create the main menu. We'll build it in a single scene. To create an "
"empty scene, click on **Scene > New Scene**."
msgstr ""
"Stwórzmy menu główne. Zrobimy je w jednej scenie. Aby utworzyć pustą scenę, "
"kliknij menu Scena -> Nowa scena."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:136
msgid ""
"We have to add a root node before we can save the scene. Your UI's root "
"should be the outermost container or element. In this case it's a "
"``MarginContainer``. ``MarginContainer`` is a good starting point for most "
"interfaces, as you often need padding around the UI. Press :kbd:`Ctrl + S` (:"
"kbd:`Cmd + S` on macOS) to save the scene to the disk. Name it *MainMenu*."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:142
msgid ""
"Select the ``MarginContainer`` again, and head to the inspector to define "
"the margins' size. Scroll down the ``Control`` class, to the ``Custom "
"Constants`` section. Unfold it. Set the margins as such:"
msgstr ""
"Wybierz ponownie ``MarginContainer`` i udaj się do inspektora w celu "
"zdefiniowania rozmiaru marginesów. Przewinąć w dół klasę ``Control`` do "
"sekcji ``Custom Constants``. Rozwiń go. Ustaw marginesy takie jak poniżej:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:146
msgid "Margin Right: *120*"
msgstr "Prawy Margines: *120*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:147
msgid "Margin Top: *80*"
msgstr ": *80*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:148
msgid "Margin Left: *120*"
msgstr "Margines Lewy: *120*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:149
msgid "Margin Bottom: *80*"
msgstr "Margines Dolny: *80*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:151
#, fuzzy
msgid ""
"We want the container to fit the window. In the toolbar above the Viewport, "
"open the **Layout** menu and select the last option, **Full Rect**."
msgstr ""
"Chcemy, aby kontener pasował do okna. W oknie Widok otwórz menu ``Layout`` i "
"wybierz ostatnią opcję ``Full Rect``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:155
msgid "Add the UI sprites"
msgstr "Dodaj sprity UI"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:157
msgid ""
"Select the ``MarginContainer``, and create the UI elements as "
"``TextureRect`` nodes. We need:"
msgstr ""
"Zaznacz ``MarginContainer`` i stwórz elementy interfejsu użytkownika jako "
"węzły ``TextureRect``. Potrzebujemy:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:160
#, fuzzy
msgid "the title or logo,"
msgstr "Tytuł lub logo"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:161
msgid "the three text options as individual nodes,"
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:162
#, fuzzy
msgid "the version note,"
msgstr "Notka o wersji"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:163
#, fuzzy
msgid "and the main menu's illustration."
msgstr "Obraz głównego menu"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:165
#, fuzzy
msgid ""
"Click the **Add Node** button or press :kbd:`Ctrl + A` (:kbd:`Cmd + A` on "
"macOS) on your keyboard. Start to type ``TextureRect`` to find the "
"corresponding node and press enter. With the new node selected, press :kbd:"
"`Ctrl + D` (:kbd:`Cmd + D` on macOS) five times to create five extra "
"``TextureRect`` instances."
msgstr ""
"Kliknij przycisk ``Dodaj węzeł`` lub naciśnij ``Meta+A`` na klawiaturze. "
"Zacznij wpisywać ``TextureRect`` aby znaleźć odpowiedni węzeł i naciśnij "
"ENTER. Po wybraniu nowego węzła, naciśnij pięciokrotnie przycisk ``Meta+D``, "
"aby utworzyć pięć dodatkowych instancji ``TextureRect``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:170
#, fuzzy
msgid ""
"Click each of the nodes to select it. In the inspector, find the **Texture** "
"property and click **[empty] > Load**. A file browser opens and lets you "
"pick a sprite to load into the texture slot."
msgstr ""
"Kliknij na każdy z węzłów, aby go zaznaczyć. W inspektorze kliknij ikonę "
"``...`` po prawej stronie właściwości Tekstury, a następnie kliknij ikonę "
"``Wczytaj``. Otworzy się przeglądarka plików, w której można wybrać Sprite "
"do załadowania do miejsca dla tekstury."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:176
#, fuzzy
msgid "The file browser lets you find and load textures."
msgstr "Menedżer plików pozwoli tobie znaleźć tekstury"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:178
#, fuzzy
msgid ""
"Repeat the operation for all ``TextureRect`` nodes. You should have the "
"logo, the illustration, the three menu options and the version note, each as "
"a separate node. Then, double click on each of the nodes in the Scene tab to "
"rename them. Nothing has been placed in containers yet so this should look "
"messy."
msgstr ""
"Trzeba powtórzyć operację dla wszystkich węzłów ``TextureRect``. Powinieneś "
"mieć logo, ilustrację, trzy opcje w menu i informację o wersji, każdy jako "
"oddzielny węzeł. Następnie kliknij dwukrotnie na każdy z węzłów na zakładce "
"Scena, aby zmienić ich nazwę."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:186
#, fuzzy
msgid "The six nodes with textures loaded."
msgstr "Sześć węzłów z ustawionymi teksturami"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:190
msgid ""
"If you want to support localization in your game, use ``Labels`` for menu "
"options instead of ``TextureRect``."
msgstr ""
"Jeśli chcesz obsługiwać lokalizację w swojej grze, używaj ``Label`` dla "
"opcji w menu zamiast ``TextureRect``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:194
msgid "Add containers to place UI elements automatically"
msgstr "Automatyczne dodawanie kontenerów do elementów interfejsu użytkownika"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:196
msgid ""
"Our main menu has some margin around the edges of the screen. It is split in "
"two parts: on the left, you have the logo and the menu options. On the "
"right, you have the characters. We can use one of two containers to achieve "
"this: ``HSplitContainer`` or ``HBoxContainer``. Split containers split the "
"area into two: a left and a right side or a top and a bottom side. They also "
"allow the user to resize the left and right areas using an interactive bar. "
"On the other hand, ``HBoxContainer`` just splits itself into as many columns "
"as it has children. Although you can deactivate the split container's resize "
"behavior, I recommend to favor box containers."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:207
msgid ""
"Select the ``MarginContainer`` and add an ``HBoxContainer``. Then, we need "
"two containers as children of our ``HBoxContainer``: a ``VBoxContainer`` for "
"the menu options on the left, and a ``CenterContainer`` for the illustration "
"on the right."
msgstr ""
"Wybierz ``MarginContainer`` i dodaj ``HBoxContainer``. Następnie "
"potrzebujemy dwóch kontenerów jako dzieci naszego ``HBoxContainer``: "
"``VBoxContainer`` do opcji w menu po lewej stronie i ``CenterContainer`` dla "
"ilustracji po prawej stronie."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:214
#, fuzzy
msgid ""
"You should have four nested containers and the TextureRect nodes sitting "
"aside from it."
msgstr ""
"Należy mieć cztery zagnieżdżone kontenery, a węzły TextureRect powinny być "
"od nich odsunięte"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:217
#, fuzzy
msgid ""
"In the node tree, select all the ``TextureRect`` nodes that should go on the "
"left side: the logo, the menu options (Continue, NewGame, Options), and the "
"version note. Drag and drop them into the ``VBoxContainer``. The nodes "
"should position automatically."
msgstr ""
"W drzewie węzłów wybierz wszystkie węzły ``TextureRect``, które mają być po "
"lewej stronie: logo, opcje menu i informację o wersji. Przeciągnij i upuść "
"je do ``VBoxContainer``. Następnie przeciągnij węzeł ilustracji do "
"``CenterContainer``. Węzły powinny pozycjonować się automatycznie."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:224
msgid "Containers automatically place and resize textures"
msgstr "Kontenery automatycznie umieszczają i skalują tekstury"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:226
msgid "We're left with two problems to solve:"
msgstr "Zostały dwa problemy do rozwiązania:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:228
#, fuzzy
msgid "The characters on the right aren't centered."
msgstr "Postać po prawej nie jest wycentrowana"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:229
#, fuzzy
msgid "There's no space between the logo and the other UI elements."
msgstr "Nie ma przerw pomiędzy logo i innymi elementami UI"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:231
msgid ""
"To center the characters on the right, first select the ``CenterContainer``. "
"Then in the Inspector, scroll down to the **Size Flags** category and click "
"on the field to the right of the **Vertical** property, and check **Expand** "
"in addition to **Fill**. Do the same for the **Horizontal** property. This "
"makes the ``CenterContainer`` expand into all available space while "
"respecting its neighbour ``VBoxContainer``. Finally, drag and drop the "
"Characters node into the ``CenterContainer``. The Characters element will "
"center automatically."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:242
#, fuzzy
msgid ""
"The character node centers inside the right half of the screen as soon as "
"you place it inside the CenterContainer."
msgstr ""
"Węzeł postaci jest wyśrodkowywany w prawej połowie ekranu, gdy tylko "
"umieścisz go w środku kontenera CenterContainer"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:245
msgid ""
"To space out the menu options and the logo on the left, we'll use one final "
"container and its size flags. Select the ``VBoxContainer`` and press :kbd:"
"`Ctrl + A` (:kbd:`Cmd + A` on macOS) to add a new node inside it. Add a "
"second ``VBoxContainer`` and name it *MenuOptions*. Select all three menu "
"options, ``Continue``, ``NewGame`` and ``Options``, and drag and drop them "
"inside the new ``VBoxContainer``. The UI's layout should barely change, if "
"at all."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:255
#, fuzzy
msgid ""
"Place the new container between the other two nodes to retain the UI's "
"layout."
msgstr ""
"Umieść nowy kontener między dwoma pozostałymi węzłami, aby zachować układ "
"graficzny interfejsu użytkownika"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:258
msgid ""
"Now we grouped the menu options together, we can tell their container to "
"expand to take as much vertical space as possible. Select the "
"``MenuOptions`` node. In the Inspector, scroll down to the **Size Flags** "
"category. Click on the field to the right of the **Vertical** property, and "
"check **Expand** in addition to **Fill**. The container expands to take all "
"the available vertical space while respecting its neighbors, the ``Logo`` "
"and ``Version`` elements."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:266
#, fuzzy
msgid ""
"To center the nodes in the ``VBoxContainer``, scroll to the top of the "
"Inspector and change the **Alignment** property to **Center**."
msgstr ""
"W celu wycentrowania węzłów w ``VBoxContainer``, przewiń na górę inspektora "
"i zmień właściwość ``Alignment`` na ``Center``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:271
#, fuzzy
msgid "The menu options should center vertically in the UI's left column."
msgstr ""
"Opcje menu powinny być umieszczone pionowo w po środku lewej kolumny "
"interfejsu użytkownika"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:273
msgid ""
"To wrap things up, let's add some separation between the menu options. "
"Expand the **Custom Constants** category below **Size Flags**, and click the "
"field next to the **Separation** parameter. Set it to 30. Once you press "
"enter, the **Separation** property becomes active and Godot adds 30 pixels "
"between menu options."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:281
#, fuzzy
msgid "The final interface."
msgstr "Końcowy interfejs"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:283
msgid ""
"Without a single line of code, we have a precise and responsive main menu."
msgstr ""
"Bez pisania kodu, stworzyliśmy precyzyjny i rozszerzalny ekran menu głównego."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:286
#, fuzzy
msgid ""
"Congratulations for getting there! You can download the final menu :download:"
"`ui_main_menu_design.zip <files/ui_main_menu_design.zip>` to compare with "
"your own. In the next tutorial, you'll create a Game User Interface with "
"bars and item counters."
msgstr ""
"Serdecznie gratulujemy za dotarcie do tego miejsca! Możesz pobrać `stworzone "
"menu tu <#>`__ aby porównać je z własnym. W następnym samouczku zostanie "
"utworzony interfejs użytkownika gry z paskami i licznikami przedmiotów."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:294
msgid ""
"A responsive User Interface is all about making sure our UIs scale well on "
"all screen types. TV screens and computer displays have different sizes and "
"ratios. In Godot, we use containers to control the position and the size of "
"UI elements."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:299
msgid ""
"The order in which you nest matters. To see if your UI adapts nicely to "
"different screen ratios, select the root node, press :kbd:`Q` to activate "
"the Select Mode, select the container and click and drag on one of the "
"container's corners to resize it. The UI components should flow inside of it."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:305
msgid ""
"You'll notice that although containers move sprites around, they don't scale "
"them. This is normal. We want the UI system to handle different screen "
"ratios, but we also need the entire game to adapt to different screen "
"resolutions. To do this, Godot scales the entire window up and down."
msgstr ""

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:311
msgid ""
"You can change the scale mode in the project settings: click **Project > "
"Project Settings** in the top menu. In the window's left column, look for "
"the **Display** category. Click on the **Window** sub-category. On the right "
"side of the window, you'll find a **Stretch** section. The three settings, "
"**Mode**, **Aspect**, and **Shrink**, control the screen size. For more "
"information, see :ref:`doc_multiple_resolutions`."
msgstr ""
