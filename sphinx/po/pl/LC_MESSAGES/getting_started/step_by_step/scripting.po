# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-04 09:58+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/scripting.rst:4
msgid "Scripting"
msgstr "Skrypty"

#: ../../docs/getting_started/step_by_step/scripting.rst:7
msgid "Introduction"
msgstr "Wprowadzenie"

#: ../../docs/getting_started/step_by_step/scripting.rst:9
msgid ""
"Before Godot 3.0, the only choice for scripting a game was to use :ref:"
"`GDScript<doc_gdscript>`. Nowadays, Godot has four (yes, four!) official "
"languages and the ability to add extra scripting languages dynamically!"
msgstr ""
"Przed wersją 3.0 Godota, :ref:`doc_gdscript` był jedynym językiem, którego "
"można było użyć do oskryptowania gry. Obecnie Godot wspiera cztery (tak, "
"cztery!) języki, a także możliwość dynamicznego dodawania innych języków "
"skryptowych!"

#: ../../docs/getting_started/step_by_step/scripting.rst:13
msgid ""
"This is great, mostly due to the large amount of flexibility provided, but "
"it also makes our work supporting languages more difficult."
msgstr ""
"To wspaniałe, głównie ze względu na dużą elastyczność, jednak im więcej "
"języków, tym więcej pracy trzeba włożyć w ich utrzymanie."

#: ../../docs/getting_started/step_by_step/scripting.rst:16
msgid ""
"The \"main\" languages in Godot, though, are GDScript and VisualScript. The "
"main reason to choose them is their level of integration with Godot, as this "
"makes the experience smoother; both have slick editor integration, while C# "
"and C++ need to be edited in a separate IDE. If you are a big fan of "
"statically typed languages, go with C# and C++ instead."
msgstr ""
"\"Domyślnymi\" językami dla Godota są GDScript i VisualScript - są "
"funkcjonalne, wydajne i oferują dobrą integrację z edytorem. Jeśli jesteś "
"wielkim fanem statycznie typowanych języków, możesz użyć C++ lub C#, jednak "
"konieczne jest użycie zewnętrznego IDE."

#: ../../docs/getting_started/step_by_step/scripting.rst:22
msgid "GDScript"
msgstr "GDScript"

#: ../../docs/getting_started/step_by_step/scripting.rst:24
msgid ""
":ref:`GDScript<doc_gdscript>` is, as mentioned above, the main language used "
"in Godot. Using it has some positive points compared to other languages due "
"to its high integration with Godot:"
msgstr ""
":ref:`GDScript<doc_gdscript>` jest, jak wspomniano powyżej, domyślnym "
"językiem dla Godota, głównie ze względu na wysoki stopień integracji z "
"programem. Ma kilka zalet nad innymi językami:"

#: ../../docs/getting_started/step_by_step/scripting.rst:28
msgid ""
"It's simple, elegant, and designed to be familiar for users of other "
"languages such as Lua, Python, Squirrel, etc."
msgstr ""
"Jest prosta, elegancka i zaprojektowana tak, aby być przypominała, "
"konstrukcję innych języków, użytkownikom, takich jak Lua, Python, Squirrel, "
"itp."

#: ../../docs/getting_started/step_by_step/scripting.rst:29
msgid "Loads and compiles blazingly fast."
msgstr "Szybko się ładuje i kompiluje."

#: ../../docs/getting_started/step_by_step/scripting.rst:30
msgid ""
"The editor integration is a pleasure to work with, with code completion for "
"nodes, signals, and many other items pertaining to the scene being edited."
msgstr ""
"Integracja edytora, pokazuje przyjemność z jaką można z nim pracować, z "
"uzupełnianiem kodu dla węzłów, sygnałów i wielu innych elementów związanych "
"z edytowaną sceną."

#: ../../docs/getting_started/step_by_step/scripting.rst:31
msgid ""
"Has vector types built-in (such as Vectors, transforms, etc.), making it "
"efficient for heavy use of linear algebra."
msgstr ""
"Ma wbudowane typy wektorowe (takie jak wektory, transformacje itp.), co "
"czyni go wydajnym do intensywnego wykorzystania algebry liniowej."

#: ../../docs/getting_started/step_by_step/scripting.rst:32
msgid ""
"Supports multiple threads as efficiently as statically typed languages - one "
"of the limitations that made us avoid VMs such as Lua, Squirrel, etc."
msgstr ""
"Wspiera wielowątkowość równie wydajnie jak języki typowane statycznie - jest "
"to jedno z ograniczeń, przez które unikamy maszyn wirtualnych, jak Lua, "
"Squirrel itd."

#: ../../docs/getting_started/step_by_step/scripting.rst:33
msgid ""
"Uses no garbage collector, so it trades a small bit of automation (most "
"objects are reference counted anyway), by determinism."
msgstr ""
"Nie używa kolektora śmieci, więc jest jedynie lekko zautomatyzowany "
"(większość obiektów i tak jest liczona jako odniesienie), przez determinizm."

#: ../../docs/getting_started/step_by_step/scripting.rst:34
msgid ""
"Its dynamic nature makes it easy to optimize sections of code in C++ (via "
"GDNative) if more performance is required, all without recompiling the "
"engine."
msgstr ""
"Jego dynamiczny charakter ułatwia optymalizację sekcji kodu w C++ (poprzez "
"GDNative), jeśli wymagana jest większa wydajność, bez konieczności ponownego "
"kompilowania silnika."

#: ../../docs/getting_started/step_by_step/scripting.rst:36
msgid ""
"If you're undecided and have experience with programming, especially "
"dynamically typed languages, go for GDScript!"
msgstr ""
"Jeśli jesteś niezdecydowany i masz doświadczenie w programowaniu, "
"szczególnie dynamicznie typowanych języków, wybierz GDScript!"

#: ../../docs/getting_started/step_by_step/scripting.rst:40
msgid "VisualScript"
msgstr "VisualScript"

#: ../../docs/getting_started/step_by_step/scripting.rst:42
msgid ""
"Beginning with 3.0, Godot offers :ref:`Visual "
"Scripting<doc_what_is_visual_script>`. This is a typical implementation of a "
"\"blocks and connections\" language, but adapted to how Godot works."
msgstr ""
"Począwszy od wersji 3.0, Godot oferuje :ref:`Wizualne programowanie "
"<doc_what_is_visual_scriptum>`. Jest to typowa implementacja języka \"bloków "
"i połączeń\", ale zaadaptowana do tego, jak działa Godot."

#: ../../docs/getting_started/step_by_step/scripting.rst:46
msgid ""
"Visual scripting is a great tool for non-programmers, or even for "
"experienced developers who want to make parts of the code more accessible to "
"others, like game designers or artists."
msgstr ""
"Wizualne programowanie jest doskonałym narzędziem dla nie programistów, a "
"nawet dla doświadczonych programistów, którzy chcą uczynić części kodu "
"bardziej dostępnymi dla innych, takich jak projektanci gier czy artyści."

#: ../../docs/getting_started/step_by_step/scripting.rst:50
msgid ""
"It can also be used by programmers to build state machines or custom visual "
"node workflows - for example, a dialogue system."
msgstr ""
"Może być również używany przez programistów do budowania maszyn stanu lub "
"niestandardowych wizualnych węzłów - na przykład systemu dialogowego."

#: ../../docs/getting_started/step_by_step/scripting.rst:55
msgid ".NET / C#"
msgstr ".NET / C#"

#: ../../docs/getting_started/step_by_step/scripting.rst:57
msgid ""
"As Microsoft's C# is a favorite amongst game developers, we have added "
"official support for it. C# is a mature language with tons of code written "
"for it, and support was added thanks to a generous donation from Microsoft."
msgstr ""
"Jako że C# Microsoftu jest faworytem wśród twórców gier, dodaliśmy oficjalne "
"wsparcie dla niego. C# jest dojrzałym językiem z mnóstwem kodu napisanego w "
"nim, a wsparcie zostało dodane dzięki hojnej darowiźnie od Microsoftu."

#: ../../docs/getting_started/step_by_step/scripting.rst:62
msgid ""
"It has an excellent tradeoff between performance and ease of use, although "
"one must be aware of its garbage collector."
msgstr ""
"Charakteryzuje się doskonałym kompromisem między wydajnością a łatwością "
"obsługi, choć trzeba mieć świadomość, że posiada oczyszczacz pamięci."

#: ../../docs/getting_started/step_by_step/scripting.rst:65
msgid ""
"Since Godot uses the `Mono <https://mono-project.com>`_ .NET runtime, in "
"theory any third-party .NET library or framework can be used for scripting "
"in Godot, as well as any Common Language Infrastructure-compliant "
"programming language, such as F#, Boo or ClojureCLR. In practice however, C# "
"is the only officially supported .NET option."
msgstr ""
"Odkąd Godot używa `Mono <https://mono-project.com>``_ .NET, w teorii można "
"używać dowolnej biblioteki lub frameworka .NET, jak również dowolnego języka "
"programowania zgodnego z Common Language Infrastructure, takiego jak F#, Boo "
"lub ClojureCLR. W praktyce jednak C# jest jedyną oficjalnie obsługiwaną "
"opcją .NET."

#: ../../docs/getting_started/step_by_step/scripting.rst:71
msgid "GDNative / C++"
msgstr "GDNative / C++"

#: ../../docs/getting_started/step_by_step/scripting.rst:73
msgid ""
"Finally, one of our brightest additions for the 3.0 release: GDNative allows "
"scripting in C++ without needing to recompile (or even restart) Godot."
msgstr ""
"Wreszcie, jeden z naszych najjaśniejszych dodatków do wydania 3.0: GDNative "
"umożliwia pisanie skryptów w C++ bez konieczności rekompilowania (a nawet "
"restartu) Godota."

#: ../../docs/getting_started/step_by_step/scripting.rst:77
msgid ""
"Any C++ version can be used, and mixing compiler brands and versions for the "
"generated shared libraries works perfectly, thanks to our use of an internal "
"C API Bridge."
msgstr ""
"Można używać każdej wersji C++, a dzięki zastosowaniu wewnętrznego mostu C "
"API Bridge doskonale działa mieszanie kompilatorów i wersji dla generowanych "
"bibliotek współdzielonych."

#: ../../docs/getting_started/step_by_step/scripting.rst:81
#, fuzzy
msgid ""
"This language is the best choice for performance and does not need to be "
"used throughout an entire game, as other parts can be written in GDScript or "
"Visual Script. However, the API is clear and easy to use as it resembles, "
"mostly, Godot's actual C++ API."
msgstr ""
"Ten język jest najlepszym wyborem dla wydajności i nie musi być używany "
"przez całą grę, ponieważ inne części mogą być napisane w GDScript lub "
"skrypcie wizualnym. API jest jednak jasne i łatwe w użyciu, ponieważ "
"przypomina rzeczywiste API C++ Godota."

#: ../../docs/getting_started/step_by_step/scripting.rst:86
msgid ""
"More languages can be made available through the GDNative interface, but "
"keep in mind we don't have official support for them."
msgstr ""
"Poprzez interfejs GDNative można udostępnić więcej języków, ale pamiętajmy, "
"że nie mamy dla nich oficjalnego wsparcia."

#: ../../docs/getting_started/step_by_step/scripting.rst:90
msgid "Scripting a scene"
msgstr "Tworzenie skryptu dla sceny"

#: ../../docs/getting_started/step_by_step/scripting.rst:92
msgid ""
"For the rest of this tutorial we'll set up a GUI scene consisting of a "
"button and a label, where pressing the button will update the label. This "
"will demonstrate:"
msgstr ""
"Na resztę tego samouczka tworzymy scenę GUI składającą się z "
"przycisku(button) i etykiety(label), gdzie naciśnięcie przycisku spowoduje "
"aktualizację etykiety. Tak się to demonstruje:"

#: ../../docs/getting_started/step_by_step/scripting.rst:96
msgid "Writing a script and attaching it to a node."
msgstr "Pisanie skryptu i dołączanie go do węzła."

#: ../../docs/getting_started/step_by_step/scripting.rst:97
msgid "Hooking up UI elements via signals."
msgstr "Odtwarzanie elementów interfejsu użytkownika za pomocą sygnałów."

#: ../../docs/getting_started/step_by_step/scripting.rst:98
msgid "Writing a script that can access other nodes in the scene."
msgstr "Pisanie skryptu umożliwiającego dostęp do innych węzłów sceny."

#: ../../docs/getting_started/step_by_step/scripting.rst:100
msgid ""
"Before continuing, please make sure to read the :ref:"
"`GDScript<doc_gdscript>` reference. It's a language designed to be simple, "
"and the reference is short, so it will not take more than a few minutes to "
"get an overview of the concepts."
msgstr ""
"Zanim przejdziesz dalej, przeczytaj dokument o :ref:"
"`GDScript<doc_gdscript>`. Tekst nie jest długi, a język jest dość prosty, "
"więc zorientowanie się w nim zajmie co najwyżej kilka minut."

#: ../../docs/getting_started/step_by_step/scripting.rst:105
msgid "Scene setup"
msgstr "Konfiguracja sceny"

#: ../../docs/getting_started/step_by_step/scripting.rst:107
#, fuzzy
msgid ""
"Use the \"Add Child Node\" dialogue accessed from the Scene tab (or by "
"pressing :kbd:`Ctrl + A`) to create a hierarchy with the following nodes:"
msgstr ""
"Użyj okna dialogowego \"Dodaj węzeł - dziecko\" dostępnego na karcie Scena "
"(lub naciśnij ``Ctrl+A``), aby utworzyć hierarchię z następującymi węzłami:"

#: ../../docs/getting_started/step_by_step/scripting.rst:110
msgid "Panel"
msgstr "Panel"

#: ../../docs/getting_started/step_by_step/scripting.rst:112
msgid "Label"
msgstr "Label"

#: ../../docs/getting_started/step_by_step/scripting.rst:113
msgid "Button"
msgstr "Przycisk"

#: ../../docs/getting_started/step_by_step/scripting.rst:115
msgid "The scene tree should look like this:"
msgstr "Drzewo sceny powinno tak wyglądać:"

#: ../../docs/getting_started/step_by_step/scripting.rst:119
msgid ""
"Use the 2D editor to position and resize the Button and Label so that they "
"look like the image below. You can set the text from the Inspector tab."
msgstr ""
"Edytor 2D służy do pozycjonowania i zmiany rozmiaru przycisków i etykiet "
"tak, aby wyglądały jak obrazek poniżej. Tekst można ustawić w zakładce "
"Inspektor."

#: ../../docs/getting_started/step_by_step/scripting.rst:124
msgid "Finally, save the scene with a name such as ``sayhello.tscn``."
msgstr "Na koniec zapisz scenę o nazwie ``sayhello.tscn``."

#: ../../docs/getting_started/step_by_step/scripting.rst:129
msgid "Adding a script"
msgstr "Dodawanie skryptu"

#: ../../docs/getting_started/step_by_step/scripting.rst:131
msgid ""
"Right click on the Panel node, then select \"Attach Script\" from the "
"context menu:"
msgstr ""
"Kliknij prawym przyciskiem myszy na węzeł Panel, a następnie wybierz z menu "
"kontekstowego opcję \"Dołącz skrypt\":"

#: ../../docs/getting_started/step_by_step/scripting.rst:136
msgid ""
"The script creation dialog will pop up. This dialog allows you to set the "
"script's language, class name, and other relevant options."
msgstr ""
"Pojawi się okno dialogowe tworzenia skryptu. To okno dialogowe umożliwia "
"ustawienie języka skryptu, nazwy klasy i innych opcji."

#: ../../docs/getting_started/step_by_step/scripting.rst:139
msgid ""
"In GDScript, the file itself represents the class, so the class name field "
"is not editable."
msgstr ""
"W GDScript to plik reprezentuje klasę, więc pole nazwy klasy nie jest "
"edytowalne."

#: ../../docs/getting_started/step_by_step/scripting.rst:142
msgid ""
"The node we're attaching the script to is a panel, so the Inherits field "
"will automatically be filled in with \"Panel\". This is what we want, as the "
"script's goal is to extend the functionality of our panel node."
msgstr ""
"Węzeł, do którego dołączamy skrypt, jest typu Panel, więc pole dziedziczenia "
"zostanie automatycznie wypełnione przyciskiem \"Panel\". Tego właśnie "
"chcemy, ponieważ celem skryptu jest rozszerzenie funkcjonalności naszego "
"węzła."

#: ../../docs/getting_started/step_by_step/scripting.rst:146
msgid "Finally, enter a path name for the script and select Create:"
msgstr "Na koniec wprowadź ścieżkę dla skryptu i wybierz Utwórz:"

#: ../../docs/getting_started/step_by_step/scripting.rst:150
msgid ""
"The script will then be created and added to the node. You can see this as "
"an \"Open script\" icon next to the node in the Scene tab, as well as in the "
"script property under Inspector:"
msgstr ""
"Skrypt zostanie utworzony i dodany do węzła. Możesz to zobaczyć jako ikonę "
"\"Otwórz skrypt\" obok węzła w zakładce Scena, jak również we właściwościach "
"skryptu pod Inspektorem:"

#: ../../docs/getting_started/step_by_step/scripting.rst:156
msgid ""
"To edit the script, select either of these buttons, both of which are "
"highlighted in the above image. This will bring you to the script editor, "
"where a default template will be included:"
msgstr ""
"Aby edytować skrypt, wybierz jeden z tych przycisków, które są podświetlone "
"na powyższym obrazku. Spowoduje to przeniesienie użytkownika do edytora "
"skryptów, gdzie zostanie dołączony domyślny szablon:"

#: ../../docs/getting_started/step_by_step/scripting.rst:161
msgid ""
"There's not much there. The ``_ready()`` function is called when the node, "
"and all its children, enters the active scene. **Note:** ``_ready()`` is not "
"the constructor; the constructor is instead ``_init()``."
msgstr ""
"Niewiele jest tam do zrobienia. Funkcja ``ready()`` jest wywoływana, gdy "
"węzeł i wszystkie jego dzieci wejdą w aktywną scenę. **Wyjaśnienie:** "
"``_ready()`` nie jest konstruktorem; zamiast tego konstruktorem jest "
"``_init()``."

#: ../../docs/getting_started/step_by_step/scripting.rst:166
msgid "The role of the script"
msgstr "Rola skryptu"

#: ../../docs/getting_started/step_by_step/scripting.rst:168
msgid ""
"A script adds behavior to a node. It is used to control how the node "
"functions as well as how it interacts with other nodes: children, parent, "
"siblings, and so on. The local scope of the script is the node. In other "
"words, the script inherits the functions provided by that node."
msgstr ""
"Skrypt dodaje zachowanie do węzła. Służy do kontrolowania sposobu działania "
"węzła oraz jego interakcji z innymi węzłami: dziećmi, rodzicami, rodzeństwem "
"itd. Lokalnym zakresem skryptu jest węzeł. Innymi słowy, skrypt dziedziczy "
"funkcje tego węzła."

#: ../../docs/getting_started/step_by_step/scripting.rst:179
msgid "Handling a signal"
msgstr "Obsługa sygnału"

#: ../../docs/getting_started/step_by_step/scripting.rst:181
msgid ""
"Signals are \"emitted\" when some specific kind of action happens, and they "
"can be connected to any function of any script instance. Signals are used "
"mostly in GUI nodes, although other nodes have them too, and you can even "
"define custom signals in your own scripts."
msgstr ""
"Sygnały są \"emitowane\" w momencie wystąpienia określonego rodzaju akcji i "
"można je podłączyć do dowolnej funkcji dowolnej instancji skryptu. Sygnały "
"są używane głównie w węzłach GUI, choć inne węzły również je posiadają, a w "
"własnych skryptach można nawet definiować własne sygnały."

#: ../../docs/getting_started/step_by_step/scripting.rst:186
msgid ""
"In this step, we'll connect the \"pressed\" signal to a custom function. "
"Forming connections is the first part and defining the custom function is "
"the second part. For the first part, Godot provides two ways to create "
"connections: through a visual interface the editor provides or through code."
msgstr ""
"W tym kroku sygnał \"wciśnięty\" zostanie podłączony do funkcji "
"niestandardowej. Tworzenie połączeń jest pierwszą częścią, a definiowanie "
"funkcji niestandardowych drugą częścią. W pierwszej części, Godot przewiduje "
"dwa sposoby tworzenia połączeń: poprzez wizualny interfejs edytora lub "
"poprzez kod."

#: ../../docs/getting_started/step_by_step/scripting.rst:191
msgid ""
"While we will use the code method for the remainder of this tutorial series, "
"let's cover how the editor interface works for future reference."
msgstr ""
"Mimo że będziemy tworzyć nasze połączenia poprzez kod przez resztę tego "
"samouczka, na przyszłość przyjrzyjmy się jak dodać połączenie, korzystając "
"z  interfejsu edytora."

#: ../../docs/getting_started/step_by_step/scripting.rst:194
msgid ""
"Select the Button node in the scene tree and then select the \"Node\" tab. "
"Next, make sure that you have \"Signals\" selected."
msgstr ""
"Zaznacz węzeł \"Przycisk\" na drzewie scen, a następnie wybierz kartę \"Węzeł"
"\". Następnie upewnij się, że wybrano opcję \"Sygnały\"."

#: ../../docs/getting_started/step_by_step/scripting.rst:199
msgid ""
"If you then select \"pressed()\" under \"BaseButton\" and click the "
"\"Connect...\" button in the bottom right, you'll open up the connection "
"creation dialogue."
msgstr ""
"Jeśli wybierzesz \"wciśnij()\"(pressed()) pod \"BaseButton\" i klikniesz "
"przycisk \"Connect...\" w prawym dolnym rogu, otworzysz okno dialogowe "
"tworzenia połączenia."

#: ../../docs/getting_started/step_by_step/scripting.rst:204
msgid ""
"The top of the dialogue displays a list of your scene's nodes with the "
"emitting node's name highlighted in blue. Select the \"Panel\" node here."
msgstr ""

#: ../../docs/getting_started/step_by_step/scripting.rst:207
msgid ""
"The bottom of the dialogue shows the name of the method that will be "
"created. By default, the method name will contain the emitting node's name "
"(\"Button\" in this case), resulting in ``_on_[EmitterNode]_[signal_name]``."
msgstr ""

#: ../../docs/getting_started/step_by_step/scripting.rst:211
msgid ""
"And that concludes the guide on how to use the visual interface. However, "
"this is a scripting tutorial, so for the sake of learning, let's dive into "
"the manual process!"
msgstr ""
"I na tym kończy się przewodnik, jak korzystać z interfejsu wizualnego. Jest "
"to jednak samouczek skryptowy, więc aby się uczyć, zanurzmy się w podstawy "
"tego procesu zawarte w kodzie!"

#: ../../docs/getting_started/step_by_step/scripting.rst:215
msgid ""
"To accomplish this, we will introduce a function that is probably the most "
"used by Godot programmers: :ref:`Node.get_node() "
"<class_Node_method_get_node>`. This function uses paths to fetch nodes "
"anywhere in the scene, relative to the node that owns the script."
msgstr ""
"Aby to osiągnąć, wprowadzimy funkcję, która jest prawdopodobnie najczęściej "
"używana przez programistów Godota: :ref:`Node.get_node() "
"<class_Node_method_get_node>`. Ta funkcja używa ścieżek do pobierania węzłów "
"w dowolnym miejscu sceny, względem węzła, który jest właścicielem skryptu."

#: ../../docs/getting_started/step_by_step/scripting.rst:220
msgid ""
"For the sake of convenience, delete everything underneath ``extends Panel``. "
"You will fill out the rest of the script manually."
msgstr ""
"Dla wygody usuwa wszystko pod ``rozszerza Panel``. Resztę skryptu wypełnisz "
"ręcznie."

#: ../../docs/getting_started/step_by_step/scripting.rst:223
msgid ""
"Because the Button and Label are siblings under the Panel where the script "
"is attached, you can fetch the Button by typing the following underneath the "
"``_ready()`` function:"
msgstr ""
"Ponieważ Przycisk i Etykieta są spokrewnione w panelu, do którego dołączony "
"jest skrypt, możesz przywołać Przycisk wpisując poniższe zdanie poniżej "
"funkcji ``ready()``:"

#: ../../docs/getting_started/step_by_step/scripting.rst:240
msgid "Next, write a function which will be called when the button is pressed:"
msgstr ""
"Następnie należy zapisać funkcję, która zostanie wywołana po naciśnięciu "
"przycisku:"

#: ../../docs/getting_started/step_by_step/scripting.rst:255
#, fuzzy
msgid ""
"Finally, connect the button's \"pressed\" signal to ``_on_Button_pressed()`` "
"by using :ref:`Object.connect() <class_Object_method_connect>`."
msgstr ""
"Na koniec należy podłączyć przycisk do sygnału \"pressed\" do ``_ready()`` "
"używając :ref:`Object.connect() <class_Object_method_connect>`."

#: ../../docs/getting_started/step_by_step/scripting.rst:271
msgid "The final script should look like this:"
msgstr "Końcowy scenariusz powinien tak wyglądać:"

#: ../../docs/getting_started/step_by_step/scripting.rst:304
msgid ""
"Run the scene and press the button. You should get the following result:"
msgstr ""
"Uruchom scenę i naciśnij przycisk. Powinieneś otrzymać następujący wynik:"

#: ../../docs/getting_started/step_by_step/scripting.rst:308
msgid "Why, hello there! Congratulations on scripting your first scene."
msgstr "Witaj! Gratulujemy oskryptowania pierwszej sceny."

#: ../../docs/getting_started/step_by_step/scripting.rst:312
msgid ""
"A common misunderstanding regarding this tutorial is how ``get_node(path)`` "
"works. For a given node, ``get_node(path)`` searches its immediate children. "
"In the above code, this means that Button must be a child of Panel. If "
"Button were instead a child of Label, the code to obtain it would be:"
msgstr ""

#: ../../docs/getting_started/step_by_step/scripting.rst:330
msgid "Also, remember that nodes are referenced by name, not by type."
msgstr ""
"Pamiętaj, że do referencji danego węzła odnosimy się po jego nazwie, nie "
"typie."

#: ../../docs/getting_started/step_by_step/scripting.rst:334
msgid ""
"The right-hand panel of the connect dialogue is for binding specific values "
"to the connected function's parameters. You can add and remove values of "
"different types."
msgstr ""
"Panel, znajdujący się po prawej stronie okna połączeń służy do wiązania "
"określonych wartości do parametrów połączonych funkcji. Możesz dodawać i "
"usuwać wartości różnych typów."

#: ../../docs/getting_started/step_by_step/scripting.rst:338
msgid ""
"The code approach also enables this with a 4th ``Array`` parameter that is "
"empty by default. Feel free to read up on the ``Object.connect`` method for "
"more information."
msgstr ""
"Podejście z użyciem kodu również pozwala na takie przypisania poprzez użycie "
"czwartego parametru,  ``Array``,  którego wartość domyślnie jest pusta. "
"Możesz dowiedzieć się więcej na ten temat, czytając o metodzie ``Object."
"connect``."
