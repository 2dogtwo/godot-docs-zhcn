# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-02 11:13+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pl\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:4
msgid "Scripting (continued)"
msgstr "Pisanie Skryptów (kontynuacja)"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:7
msgid "Processing"
msgstr "Przetwarzanie"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:9
msgid ""
"Several actions in Godot are triggered by callbacks or virtual functions, so "
"there is no need to write code that runs all the time."
msgstr ""
"Wiele akcji w Godot jest uruchamianych poprzez wywołania zwrotne i funkcje "
"wirtualne, dla tego nie ma też potrzeby pisać kodu, który działa bez przerwy."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:12
msgid ""
"However, it is still common to need a script to be processed on every frame. "
"There are two types of processing: idle processing and physics processing."
msgstr ""
"Jednakże często zdarza się, że skrypt musi być przetworzony co każdą klatkę. "
"Istnieją dwa rodzaje przetwarzania: bezczynne (idle processing) oraz "
"procesów fizycznych (physics processing)."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:16
msgid ""
"Idle processing is activated when the method :ref:`Node._process() "
"<class_Node_method__process>` is found in a script. It can be turned off and "
"on with the :ref:`Node.set_process() <class_Node_method_set_process>` "
"function."
msgstr ""
"Bezczynne przetwarzanie jest aktywowane, gdy w skrypcie znajduje się metoda :"
"ref:`Node._process() <class_Node_method__process>`. Może być ono włączane i "
"wyłączane za pomocą funkcji :ref:`Node.set_process() "
"<class_Node_method_set_process>`."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:20
msgid "This method will be called every time a frame is drawn:"
msgstr "Ta metoda wykona się za każdym razem, kiedy rysowana jest klatka:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:36
#, fuzzy
msgid ""
"It's important to bear in mind that the frequency with which ``_process()`` "
"will be called depends on how many frames per second (FPS) your application "
"is running at. This rate can vary over time and devices."
msgstr ""
"Trzeba pamiętać, że częstotliwość z jaką będzie się wykonywać metoda "
"``_process()`` zależy od tego w ilu klatkach na sekundę (FPS) działa Twoja "
"aplikacja. Ta wartość może się zmieniać w zależności od czasu i urządzenia."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:40
msgid ""
"To help manage this variability the ``delta`` parameter contains the time "
"elapsed in seconds, as a floating point, since the previous call to "
"``_process()``."
msgstr ""
"Parametr delta to liczba zmiennoprzecinkowa, zawierająca czas w sekundach, "
"jaki upłynął od poprzedniego wywołania ``_process()``."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:43
msgid ""
"This parameter can be used to make sure things always take the same amount "
"of time, regardless of the game's FPS."
msgstr ""
"Ten parametr jest stosowany by być zawsze pewnym, że czynność zawsze będzie "
"trwała określony czas, bez względu na ilość FPS."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:46
msgid ""
"For example, movement is often multiplied with a time delta to make movement "
"speed both constant and independent from the frame rate."
msgstr ""
"Na przykład, ruch jest często mnożony przez czas od ostatniej klatki, aby "
"prędkość ruchu była stała i niezależna od częstotliwości odświeżania."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:49
msgid ""
"Physics processing with ``_physics_process()`` is similar, but it should be "
"used for processes that must happen before each physics step, such as "
"controlling a character. It always runs before a physics step and it is "
"called at fixed time intervals: 60 times per second by default. You can "
"change the interval from the Project Settings, under Physics -> Common -> "
"Physics Fps."
msgstr ""
"Przetwarzanie operacji fizycznych w ``_physics_process()`` jest podobne, ale "
"powinno być używane do procesów, które muszą wystąpić przed każdym "
"obliczeniem fizyki, takich jak kontrolowanie postaci. Zawsze działa przed "
"obliczaniem fizyki i jest wywoływany w ustalonych odstępach czasu: domyślnie "
"60 razy na sekundę. Można zmienić odstęp czasu pomiędzy wywoływaniem funkcji "
"``_physics_process()`` ustawieniami projektu, przechodząc do zakładki "
"Physics -> Common -> Physics Fps."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:55
msgid ""
"The function ``_process()``, however, is not synced with physics. Its frame "
"rate is not constant and is dependent on hardware and game optimization. Its "
"execution is done after the physics step on single-threaded games."
msgstr ""
"Funkcja ``_process()`` nie jest jednak zsynchronizowana z fizyką. "
"Częstotliwość odświeżania nie jest stała i zależy od optymalizacji sprzętu i "
"gier. Jej wykonanie następuje po obliczeniu fizyki w grach jednowątkowych."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:58
#, fuzzy
msgid ""
"A simple way to see the ``_process()`` function at work is to create a scene "
"with a single Label node, with the following script:"
msgstr ""
"Prostym sposobem sprawdzenia tego, jak działa funkcja ``_process()`` jest "
"utworzenie sceny z pojedynczym węzłem Label, z następującym skryptem:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:85
msgid "Which will show a counter increasing each frame."
msgstr "Który będzie pokazywał licznik zwiększający każdą klatkę."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:88
msgid "Groups"
msgstr "Grupy"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:90
#, fuzzy
msgid ""
"Groups in Godot work like tags you might have come across in other software. "
"A node can be added to as many groups as desired. This is a useful feature "
"for organizing large scenes. There are two ways to add nodes to groups. The "
"first is from the UI, using the Groups button under the Node panel:"
msgstr ""
"Węzły mogą być dodawane do grup, w dowolnej liczbie do każdego węzeła i są "
"użytecznym narzędziem do organizowania dużych scen. Można je ustawić na dwa "
"sposoby. Pierwszą metodą jest ich ustawienie interfejsu użytkownika, z "
"przycisku Grupy pod panelem Węzeł:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:97
msgid ""
"And the second way is from code. The following script would add the current "
"node to the ``enemies`` group as soon as it appeared in the scene tree."
msgstr ""
"A drugą z poziomu kodu. Skrypt poniżej dodałby aktualny węzeł do grupy "
"``enemies``, gdy tylko pojawi się w drzewie sceny."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:115
msgid ""
"This way, if the player is discovered sneaking into a secret base, all "
"enemies can be notified about its alarm sounding by using :ref:`SceneTree."
"call_group() <class_SceneTree_method_call_group>`:"
msgstr ""
"W ten sposób, jeśli gracz zostanie wykryty podczas skradania się do tajnej "
"bazy, wszyscy wrogowie zostaną powiadomieni za pomocą :ref:`SceneTree."
"call_group() <class_SceneTree_method_call_group>`:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:132
msgid ""
"The above code calls the function ``player_was_discovered`` on every member "
"of the group ``enemies``."
msgstr ""
"Powyższy kod wywołuje funkcję ``wykryto_gracza``(player_was_discovered) w "
"kodzie każdego członka grupy ``przeciwnicy``(enemies)."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:135
msgid ""
"It is also possible to get the full list of ``enemies`` nodes by calling :"
"ref:`SceneTree.get_nodes_in_group() "
"<class_SceneTree_method_get_nodes_in_group>`:"
msgstr ""
"Możliwe jest również uzyskanie pełnej listy węzłów z grupy ``wrogowie`` "
"przez wywołanie :ref:`SceneTree.get_nodes_in_group() "
"<class_SceneTree_method_get_nodes_in_group>`:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:148
msgid ""
"The :ref:`SceneTree <class_SceneTree>` class provides many useful methods, "
"like interacting with scenes, their node hierarchy and groups of nodes. It "
"allows you to easily switch scenes or reload them, to quit the game or pause "
"and unpause it. It even comes with interesting signals. So check it out if "
"you have some time!"
msgstr ""
"Klasa :ref:`SceneTree <class_SceneTree>` dostarcza wielu przydatnych metod, "
"takich jak interakcja ze scenami, ich hierarchią i grupami węzłów. Pozwala w "
"łatwy sposób przełączać sceny, przeładowywać je, kończyć grę lub spauzować i "
"odpauzować ją. Sprawdź to, jeśli masz trochę czasu!"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:156
msgid "Notifications"
msgstr "Powiadomienia"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:158
#, fuzzy
msgid ""
"Godot has a system of notifications. These are usually not needed for "
"scripting, as it's too low-level and virtual functions are provided for most "
"of them. It's just good to know they exist. For example, you may add an :ref:"
"`Object._notification() <class_Object_method__notification>` function in "
"your script:"
msgstr ""
"Godot posiada system powiadomień. Zazwyczaj nie są one potrzebne do "
"skryptów, ponieważ są za bardzo nisko-poziomowe i dla większości z nich "
"dostępne są funkcje wirtualne. Dobrze jest wiedzieć, że one istnieją. Można "
"na przykład dodać w twoim skrypcie funkcję :ref:`Object.notification() "
"<class_Object__ Notification>` :"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:193
msgid ""
"The documentation of each class in the :ref:`Class Reference <toc-class-"
"ref>` shows the notifications it can receive. However, in most cases "
"GDScript provides simpler overrideable functions."
msgstr ""
"Dokumentacja każdej klasy w :ref:`Class Reference <toclass-ref>` pokazuje "
"powiadomienia, które może otrzymać. Jednak w większości przypadków GDScript "
"zapewnia prostsze, możliwe do nadpisania funkcje."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:198
msgid "Overrideable functions"
msgstr "Funkcje możliwe do nadpisania"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:200
msgid ""
"Such overrideable functions, which are described as follows, can be applied "
"to nodes:"
msgstr ""
"Takie możliwe do nadpisania funkcje, opisane poniżej, mogą być stosowane do "
"węzłów:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:272
msgid ""
"As mentioned before, it's better to use these functions instead of the "
"notification system."
msgstr ""
"Jak wspomniano wcześniej, lepiej jest używać tych funkcji zamiast systemu "
"powiadomień."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:276
msgid "Creating nodes"
msgstr "Tworzenie węzłów"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:278
msgid ""
"To create a node from code, call the ``.new()`` method, like for any other "
"class-based datatype. For example:"
msgstr ""
"Aby utworzyć węzeł w kodzie, należy wywołać metodę ``.new()``, tak jak w "
"przypadku każdego innego zbioru danych opartego na klasie. Na przykład:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:302
msgid ""
"To delete a node, be it inside or outside the scene, ``free()`` must be used:"
msgstr ""
"Aby usunąć węzeł, zarówno wewnątrz, jak i na zewnątrz sceny, należy użyć "
"``free()``:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:318
#, fuzzy
msgid ""
"When a node is freed, it also frees all its child nodes. Because of this, "
"manually deleting nodes is much simpler than it appears. Free the base node "
"and everything else in the subtree goes away with it."
msgstr ""
"Gdy węzeł zostanie uwolniony, uwalnia również wszystkie węzły dziecięce. Z "
"tego powodu ręczne usuwanie węzłów jest znacznie prostsze niż się wydaje. "
"Zwolnij węzeł bazowy i wszystko inne w drzewie podrzędnym zniknie."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:322
msgid ""
"A situation might occur where we want to delete a node that is currently "
"\"blocked\", because it is emitting a signal or calling a function. This "
"will crash the game. Running Godot with the debugger will often catch this "
"case and warn you about it."
msgstr ""
"Może się zdarzyć, że chcemy usunąć węzeł, który jest obecnie \"zablokowany"
"\", ponieważ emituje sygnał lub wywołuje funkcję. To wywoła błąd gry. "
"Uruchomienie Godota z debuggerem często wyłapuje tą sytuację ostrzega przed "
"nią."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:327
#, fuzzy
msgid ""
"The safest way to delete a node is by using :ref:`Node.queue_free() "
"<class_Node_method_queue_free>`. This erases the node safely during idle."
msgstr ""
"Najbezpieczniejszym sposobem usunięcia węzła jest użycie :ref:`Node."
"queue_free() <class_Node_method_queue_free>`. Węzeł zostanie bezpiecznie "
"usunięty, podczas gdy będzie bezczynny."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:345
msgid "Instancing scenes"
msgstr "Instancjowanie scen"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:347
msgid ""
"Instancing a scene from code is done in two steps. The first one is to load "
"the scene from your hard drive:"
msgstr ""
"Instancjowanie sceny z kodu odbywa się w dwóch krokach. Pierwszym z nich "
"jest wczytanie sceny z dysku twardego:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:360
msgid ""
"Preloading it can be more convenient, as it happens at parse time (GDScript "
"only):"
msgstr ""
"Wstępne ładowanie (preloading) może być wygodniejsze, gdyż ma miejsce "
"podczas parsowania (tylko GDScript):"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:368
msgid ""
"But ``scene`` is not yet a node. It's packed in a special resource called :"
"ref:`PackedScene <class_PackedScene>`. To create the actual node, the "
"function :ref:`PackedScene.instance() <class_PackedScene_method_instance>` "
"must be called. This will return the tree of nodes that can be added to the "
"active scene:"
msgstr ""
"Ale ``scene`` nie jest jeszcze węzłem. Jest zapakowany w specjalny zasób o "
"nazwie :ref:`PackedScene <class_PackedScene>`. Aby utworzyć węzeł należy "
"wywołać funkcję :ref:`PackedScene.instance() "
"<class_PackedScene_method_instance>`. Spowoduje to zwrócenie drzewa węzłów, "
"które można dodać do aktywnej sceny:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:386
msgid ""
"The advantage of this two-step process is that a packed scene may be kept "
"loaded and ready to use so that you can create as many instances as desired. "
"This is especially useful to quickly instance several enemies, bullets, and "
"other entities in the active scene."
msgstr ""
"Zaletą tego dwuetapowego procesu jest to, że zapakowana scena może być "
"załadowana i gotowa do użycia, dzięki czemu można utworzyć dowolną liczbę "
"instancji. Jest to szczególnie przydatne do szybkiego wywołania kilku "
"wrogów, pocisków i innych podmiotów na aktywnej scenie."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:394
msgid "Register scripts as classes"
msgstr "Rejstrowanie skryptów jako klasy"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:396
msgid ""
"Godot has a \"Script Class\" feature to register individual scripts with the "
"Editor. By default, you can only access unnamed scripts by loading the file "
"directly."
msgstr ""

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:400
msgid ""
"You can name a script and register it as a type in the editor with the "
"``class_name`` keyword followed by the class's name. You may add a comma and "
"an optional path to an image to use as an icon. You will then find your new "
"type in the Node or Resource creation dialog."
msgstr ""

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:422
msgid "In Godot 3.1:"
msgstr "W Godot 3.1:"

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:424
msgid ""
"Only GDScript and NativeScript, i.e., C++ and other GDNative-powered "
"languages, can register scripts."
msgstr ""
"Tylko GDScript i NativeScript, tj. C++ i inne języki wspierane przez "
"GDNative, mogą rejestrować skrypty."

#: ../../docs/getting_started/step_by_step/scripting_continued.rst:425
msgid "Only GDScript creates global variables for each named script."
msgstr "Tylko GDScript tworzy globalne zmienne dla każdego nazwanego skryptu."
