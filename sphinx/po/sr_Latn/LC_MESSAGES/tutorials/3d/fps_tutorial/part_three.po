# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-02 12:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: sr_Latn\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:4
msgid "Part 3"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:7
msgid "Part Overview"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:9
msgid ""
"In this part we will be limiting our weapons by giving them ammo. We will "
"also be giving the player the ability to reload, and we will be adding "
"sounds when the weapons fire."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:15
msgid ""
"By the end of this part, the player will have limited ammo, the ability to "
"reload, and sounds will play when the player fires and changes weapons."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:18
msgid ""
"You are assumed to have finished :ref:`doc_fps_tutorial_part_two` before "
"moving on to this part of the tutorial."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:20
msgid ""
"The finished project from :ref:`doc_fps_tutorial_part_two` will be the "
"starting project for part 3"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:22
msgid "Let's get started!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:26
msgid "Changing levels"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:28
msgid ""
"Now that we have a fully working FPS, let's move to a more FPS like level."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:30
msgid ""
"Open up ``Space_Level.tscn`` (``assets/Space_Level_Objects/Space_Level."
"tscn``) and/or ``Ruins_Level.tscn`` (``assets/Ruin_Level_Objects/Ruins_Level."
"tscn``)."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:32
msgid ""
"``Space_Level.tscn`` and ``Ruins_Level.tscn`` are complete custom FPS levels "
"created for the purpose of this tutorial. Press ``F6`` to play the open "
"scene, or press the ``play current scene button``, and give it them a whirl."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:35
msgid ""
"``Space_Level.tscn`` is more graphically demanding of the GPU than "
"``Ruins_Level.tscn``. If your computer is struggling to render ``Space_Level."
"tscn``, try using ``Ruins_Level.tscn`` instead."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:38
msgid ""
"You might have noticed there are several :ref:`RigidBody <class_RigidBody>` "
"nodes placed throughout the level. We can place ``RigidBody_hit_test.gd`` on "
"them and then they will react to being hit with bullets, so let's do that!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:41
msgid ""
"Follow the instructions below for either (or both) of the scenes you want to "
"use"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:77
msgid "Now you can fire at all of the rigid bodies in either level!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:80
msgid "Adding ammo"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:82
msgid ""
"Now that we've got working guns, let's give them a limited amount of ammo."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:84
msgid "First we need to define a few variables in each of our weapon scripts."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:86
#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:195
msgid "Open up ``Weapon_Pistol.gd`` and add the following global variables:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:94
msgid "``ammo_in_weapon``: The amount of ammo currently in the pistol"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:95
msgid ""
"``spare_ammo``: The amount of ammo we have left in reserve for the pistol"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:96
msgid "``AMMO_IN_MAG``: The amount of ammo in a fully reload weapon/magazine"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:98
msgid "Now all we need to do is add a single line of code to ``fire_weapon``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:100
msgid ""
"Add the following right under ``Clone.BULLET_DAMAGE = DAMAGE``: "
"``ammo_in_weapon -= 1``"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:102
msgid ""
"This will remove one from ``ammo_in_weapon`` every time we fire. Notice "
"we're not checking to see if we have ammo count of ``0`` or greater in "
"``fire_weapon``. Instead we're going to check that the ammo count in "
"``Player.gd``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:107
msgid "Now we need to add ammo for both the rifle and the knife."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:109
msgid ""
"You may be wondering why we are adding ammo for the knife given it does not "
"consume any ammunition. The reason we want to add ammo to the knife is so we "
"have a consistent interface for all of our weapons."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:112
msgid ""
"If we did not add ammo variables for the knife, we would have to add checks "
"for the knife. By adding the ammo variables to the knife, we don't need to "
"worry about whether or all our weapons have the same variables."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:115
msgid "Add the following global variables to ``Weapon_Rifle.gd``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:123
msgid ""
"And then add the following to ``fire_weapon``: ``ammo_in_weapon -= 1``. Make "
"sure that ``ammo_in_weapon -= 1`` is outside of the ``if ray."
"is_colliding()`` check so we lost ammo regardless of whether we've hit "
"something or not."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:126
msgid ""
"Now all that's left is the knife. Add the following to ``Weapon_Knife.gd``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:134
msgid ""
"And because our knife does not consume ammo, that is all we need to add."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:138
msgid "Now all we need to do is change a one thing in ``Player.gd``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:140
msgid ""
"All we need to change how we're firing our weapons in ``process_input``. "
"Change the code for firing weapons to the following:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:155
msgid ""
"Now our weapons have a limited amount of ammo, and will stop firing when we "
"run out."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:159
msgid ""
"Ideally we'd like to be able to see how much ammo we have left. Let's make a "
"new function called ``process_ui``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:161
msgid "First, add ``process_UI(delta)`` to ``_physics_process``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:163
msgid "Now add the following to ``Player.gd``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:175
#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:237
msgid "Let's go over what's happening:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:177
msgid ""
"First we check to see if the current weapon is either ``UNARMED`` or "
"``KNIFE``. If it is, we change the ``UI_status_label``'s text to only show "
"our health, since ``UNARMED`` and ``KNIFE`` do not consume ammo."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:180
msgid ""
"If we are using a weapon that does consume ammo, we first get the weapon "
"node."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:182
msgid ""
"Then change ``UI_status_label``'s text to show our health, how much ammo we "
"have in the weapon, along with how much spare ammo we have for that weapon."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:186
msgid "Now we can see how much ammo we have through the HUD."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:189
msgid "Adding reloading to the weapons"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:191
msgid ""
"Now that we can run our weapons out of ammo, we really need a way to fill "
"them back up. Let's add reloading next!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:193
msgid ""
"For reloading we need to add a few more variables and a function to every "
"weapon."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:204
msgid ""
"``CAN_RELOAD``: A boolean to track whether this weapon has the ability to "
"reload"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:205
msgid ""
"``CAN_REFIL``: A boolean to track whether we can refill this weapon's spare "
"ammo. We will not be using ``CAN_REFIL`` in this part, but we will in the "
"next part!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:206
msgid ""
"``RELOADING_ANIM_NAME``: The name of the reloading animation for this weapon."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:208
msgid ""
"Now we need to add a function for handling reloading. Add the following "
"function to ``Weapon_Pistol.gd``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:239
msgid "First we define a variable to see whether or not we can reload."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:241
msgid ""
"We first check to see if we are in this weapon's idle animation state "
"because we only want to be able to reload when we are not firing. equipping, "
"or unequipping."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:244
msgid ""
"Next we check to see if we have spare ammo, and if the ammo already in our "
"weapon is equal to a fully reloaded weapon. This way we can assure we're not "
"going to reload when we have no ammo or when the weapon is already full of "
"ammo."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:247
msgid ""
"If we still can reload, then we calculate the amount of ammo needed to "
"reload the weapon."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:249
msgid ""
"If we have enough ammo to fill the weapon, we remove the ammo needed from "
"``spare_ammo`` and then set ``ammo_in_weapon`` to a full weapon/magazine."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:251
msgid ""
"If we do not have enough ammo, we add all of the ammo left in "
"``spare_ammo``, then set ``spare_ammo`` to ``0``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:253
msgid ""
"Next we play the reloading animation for this weapon, and then return "
"``true``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:255
msgid "If we could not reload, we return ``false``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:259
msgid ""
"Now we need to add reloading to the rifle. Open up ``Weapon_Rifle.gd`` and "
"add the following global variables:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:268
msgid ""
"These variables are exactly the same as the pistol, just with "
"``RELOADING_ANIM_NAME`` changed to the rifle's reloading animation."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:270
msgid "Now we just need to add ``reload_weapon`` to ``Weapon_Rifle.gd``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:299
msgid "This code is exactly the same as the pistol."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:303
msgid ""
"The last bit we need to do for the weapons is add 'reloading' to the knife. "
"Add the following global variables to ``Weapon_Knife.gd``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:312
msgid ""
"Since we both cannot reload or refill a knife, we set both constants to "
"``false``. We also define ``RELOADING_ANIM_NAME`` as an empty string, since "
"the knife has no reloading animation."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:315
msgid ""
"Now we just need to add ``reloading_weapon``, and thankfully it's really "
"simple:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:322
msgid "Since we cannot reload a knife, we just always return ``false``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:325
msgid "Adding reloading to the player"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:327
msgid ""
"Now we just need to add a few things to ``Player.gd``. First we need to "
"define a new global variable:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:333
msgid ""
"``reloading_weapon``: A variable to track whether or not we are currently "
"trying to reload."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:336
msgid "Next we need to add another function call to ``_physics_process``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:338
msgid ""
"Add ``process_reloading(delta)`` to ``_physics_process``. Now "
"``_physics_process`` should look something like this:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:349
msgid ""
"Now we need to add ``process_reloading``. Add the following function to "
"``Player.gd``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:360
#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:411
msgid "Let's go over what's happening here."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:362
msgid "First we check to make sure we are trying to reload."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:364
msgid ""
"If we are, we then get the current weapon. If the current weapon does not "
"equal ``null``, we call its ``reload_weapon`` function."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:366
msgid ""
"If the current weapon is equal to ``null``, then the current weapon is "
"``UNARMED``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:368
msgid ""
"Finally, we set ``reloading_weapon`` to ``false``, because regardless of "
"whether we've successfully reloaded, we've tried reloading and no longer "
"need to keep trying."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:373
msgid ""
"Before we can reload, we need to change a few things in ``process_input``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:375
msgid ""
"The first thing we need to change is in the code for changing weapons. We "
"need to add a additional check (``if reloading_weapon == false:``) to see if "
"we are reloading:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:386
msgid "This makes it where we cannot change weapons if we are reloading."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:388
msgid ""
"Now we need to add the code to trigger a reload when the player pushes the "
"``reload`` action. Add the following code to ``process_input``:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:413
msgid ""
"First we make sure we're not reloading already, nor are we trying to change "
"weapons."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:415
msgid "Then we check to see if the ``reload`` action has been pressed."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:417
msgid ""
"If we have pressed ``reload``, we then get the current weapon and check to "
"make sure it is not ``null``. Then we check to see if the weapon can reload "
"or not using its ``CAN_RELOAD`` constant."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:420
msgid ""
"If the weapon can reload, we then get the current animation state, and make "
"a variable for tracking whether we are already reloading or not."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:422
msgid ""
"We then go through every weapon to make sure we're not already playing that "
"weapon's reloading animation."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:424
msgid ""
"If we are not reloading with any weapon, we set ``reloading_weapon`` to "
"``true``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:428
msgid ""
"One thing I like to add is where the weapon will reload itself if you try to "
"fire it when it's out of ammo."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:430
msgid ""
"We also need to add a additional if check (``is_reloading_weapon == false:"
"``) so we cannot fire the current weapon while reloading."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:433
msgid ""
"Let's change our firing code in ``process_input`` so it reloads when trying "
"to fire an empty weapon:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:451
msgid ""
"Now we check to make sure we're not reloading before we fire out weapon, and "
"when we have ``0`` or less ammo in our weapon we set ``reloading_weapon`` to "
"``true`` if we try to fire."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:454
msgid ""
"This will make it where we will try to reload when we try to fire a empty "
"weapon."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:458
msgid ""
"With that we can reload our weapons! Give it a try! Now you can fire all of "
"the spare ammo for each weapon."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:461
msgid "Adding sounds"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:463
msgid ""
"Finally, let's add some sounds that play when we are reloading, changing "
"guns, and when we are firing them."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:466
msgid ""
"There are no game sounds provided in this tutorial (for legal reasons). "
"https://gamesounds.xyz/ is a collection of **\"royalty free or public domain "
"music and sounds suitable for games\"**. I used Gamemaster's Gun Sound Pack, "
"which can be found in the Sonniss.com GDC 2017 Game Audio Bundle."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:470
msgid ""
"Open up ``SimpleAudioPlayer.tscn``. It is simply a :ref:`Spatial "
"<class_Spatial>` with a :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` "
"as it's child."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:472
msgid ""
"The reason this is called a 'simple' audio player is because we are not "
"taking performance into account and because the code is designed to provide "
"sound in the simplest way possible."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:475
msgid ""
"If you want to use 3D audio, so it sounds like it's coming from a location "
"in 3D space, right click the :ref:`AudioStreamPlayer "
"<class_AudioStreamPlayer>` and select \"Change type\"."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:478
msgid ""
"This will open the node browser. Navigate to :ref:`AudioStreamPlayer3D "
"<class_AudioStreamPlayer3D>` and select \"change\". In the source for this "
"tutorial, we will be using :ref:`AudioStreamPlayer "
"<class_AudioStreamPlayer>`, but you can optionally use :ref:"
"`AudioStreamPlayer3D <class_AudioStreamPlayer3D>` if you desire, and the "
"code provided below will work regardless of which one you chose."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:483
msgid ""
"Create a new script and call it ``SimpleAudioPlayer.gd``. Attach it to the :"
"ref:`Spatial <class_Spatial>` in ``SimpleAudioPlayer.tscn`` and insert the "
"following code:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:534
msgid ""
"By setting ``position`` to ``null`` by default in ``play_sound``, we are "
"making it an optional argument, meaning ``position`` doesn't necessarily "
"have to be passed in to call the ``play_sound``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:537
msgid "Let's go over what's happening here:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:541
msgid ""
"In ``_ready`` we get the :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` "
"and connect its ``finished`` signal to ourselves. It doesn't matter if it's "
"a :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` or :ref:"
"`AudioStreamPlayer3D <class_AudioStreamPlayer3D>` node, as they both have "
"the finished signal. To make sure it is not playing any sounds, we call "
"``stop`` on the :ref:`AudioStreamPlayer <class_AudioStreamPlayer>`."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:545
msgid ""
"Make sure your sound files are **not** set to loop! If it is set to loop the "
"sounds will continue to play infinitely and the script will not work!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:548
msgid ""
"The ``play_sound`` function is what we will be calling from ``Player.gd``. "
"We check if the sound is one of the three possible sounds, and if it is we "
"set the audio stream for our :ref:`AudioStreamPlayer "
"<class_AudioStreamPlayer>` to the correct sound."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:552
msgid ""
"If it is an unknown sound, we print an error message to the console and free "
"ourselves."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:554
msgid ""
"If you are using a :ref:`AudioStreamPlayer3D <class_AudioStreamPlayer3D>`, "
"remove the ``#`` to set the position of the audio player node so it plays at "
"the correct position."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:557
msgid ""
"Finally, we tell the :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` to "
"play."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:559
msgid ""
"When the :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` is finished "
"playing the sound, it will call ``destroy_self`` because we connected the "
"``finished`` signal in ``_ready``. We stop the :ref:`AudioStreamPlayer "
"<class_AudioStreamPlayer>` and free ourself to save on resources."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:563
msgid "This system is extremely simple and has some major flaws:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:565
msgid ""
"One flaw is we have to pass in a string value to play a sound. While it is "
"relatively simple to remember the names of the three sounds, it can be "
"increasingly complex when you have more sounds. Ideally we'd place these "
"sounds in some sort of container with exposed variables so we do not have to "
"remember the name(s) of each sound effect we want to play."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:570
msgid ""
"Another flaw is we cannot play looping sounds effects, nor background music "
"easily with this system. Because we cannot play looping sounds, certain "
"effects like footstep sounds are harder to accomplish because we then have "
"to keep track of whether or not there is a sound effect and whether or not "
"we need to continue playing it."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:575
msgid ""
"One of the biggest flaws with this system is we can only play sounds from "
"``Player.gd``. Ideally we'd like to be able to play sounds from any script "
"at any time."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:580
msgid ""
"With that done, let's open up ``Player.gd`` again. First we need to load the "
"``SimpleAudioPlayer.tscn``. Place the following code in your global "
"variables:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:587
msgid ""
"Now we just need to instance the simple audio player when we need it, and "
"then call its ``play_sound`` function and pass the name of the sound we want "
"to play. To make the process simpler, let's create a ``create_sound`` "
"function:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:599
msgid "Lets walk through what this function does:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:603
msgid ""
"The first line instances the ``Simple_Audio_Player.tscn`` scene and assigns "
"it to a variable, named ``audio_clone``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:606
msgid ""
"The second line gets the scene root, using one large assumption. We first "
"get this node's :ref:`SceneTree <class_SceneTree>`, and then access the root "
"node, which in this case is the :ref:`Viewport <class_Viewport>` this entire "
"game is running under. Then we get the first child of the :ref:`Viewport "
"<class_Viewport>`, which in our case happens to be the root node in "
"``Test_Area.tscn`` or any of the other provided levels. We are making a huge "
"assumption that the first child of the root is the root node that our player "
"is under, which could not always be the case."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:612
msgid ""
"If this doesn't make sense to you, don't worry too much about it. The second "
"line of code only doesn't work reliably if you have multiple scenes loaded "
"as children to the root node at a time, which will rarely happen for most "
"projects. This is really only potentially a issue depending on how you "
"handle scene loading."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:616
msgid ""
"The third line adds our newly created ``SimpleAudioPlayer`` scene to be a "
"child of the scene root. This works exactly the same as when we are spawning "
"bullets."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:619
msgid ""
"Finally, we call the ``play_sound`` function and pass in the arguments we're "
"given. This will call ``SimpleAudioPlayer.gd``'s ``play_sound`` function "
"with the passed in arguments."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:624
msgid ""
"Now all that is left is playing the sounds when we want to. Let's add sound "
"to the pistol first!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:626
msgid "Open up ``Weapon_Pistol.gd``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:628
msgid ""
"Now, we want to make a noise when we fire the pistol, so add the following "
"to the end of the ``fire_weapon`` function:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:634
msgid "Now when we fire our pistol, we'll play the ``pistol_shot`` sound."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:636
#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:658
msgid ""
"To make a sound when we reload, we just need to add the following right "
"under ``player_node.animation_manager.set_animation(RELOADING_ANIM_NAME)`` "
"in the ``reload_weapon`` function:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:643
#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:665
msgid "Now when we reload we'll play the ``gun_cock`` sound."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:647
msgid "Now let's add sounds to the rifle. Open up ``Weapon_Rifle.gd``."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:650
msgid ""
"To play sounds when the rifle is fired, add the following to the end of the "
"``fire_weapon`` function:"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:656
msgid "Now when we fire our rifle, we'll play the ``rifle_shot`` sound."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:668
msgid "Final notes"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:672
msgid ""
"Now you have weapons with limited ammo that play sounds when you fire them!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:674
msgid ""
"At this point we have all of the basics of a FPS working. There's still a "
"few things that would be nice to add, and we're going to add them in the "
"next three parts!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:677
msgid ""
"For example, right now we have no way to add ammo to our spares, so we'll "
"eventually run out. Also, we don't really have anything to shoot at outside "
"of the :ref:`RigidBody <class_RigidBody>` nodes."
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:680
msgid ""
"In In :ref:`doc_fps_tutorial_part_four` we'll add some targets to shoot at, "
"along with some health and ammo pick ups! We're also going to add joypad "
"support, so we can play with wired Xbox 360 controllers!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:683
msgid "If you ever get lost, be sure to read over the code again!"
msgstr ""

#: ../../docs/tutorials/3d/fps_tutorial/part_three.rst:685
msgid ""
"You can download the finished project for this part here: :download:"
"`Godot_FPS_Part_3.zip <files/Godot_FPS_Part_3.zip>`"
msgstr ""
