# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2022, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-24 15:04+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Introduction to Godot"
msgstr "Godot 소개"

msgid ""
"This article is here to help you figure out whether Godot might be a good "
"fit for you. We will introduce some broad features of the engine to give you "
"a feel for what you can achieve with it and answer questions such as \"what "
"do I need to know to get started?\"."
msgstr ""

msgid ""
"This is by no means an exhaustive overview. We will introduce many more "
"features in this getting started series."
msgstr ""

#, fuzzy
msgid "What is Godot?"
msgstr "Godot란?"

msgid ""
"Godot is a general-purpose 2D and 3D game engine designed to support all "
"sorts of projects. You can use it to create games or applications you can "
"then release on desktop or mobile, as well as on the web."
msgstr ""
"Godot는 모든 종류의 프로젝트를 지원하도록 설계된 범용 2D 및 3D 게임 엔진입니"
"다. 이를 사용하여 게임이나 응용 프로그램을 만든 다음 데스크톱이나 모바일, 웹"
"에서 출시할 수 있습니다."

msgid ""
"You can also create console games with it, although you either need strong "
"programming skills or a developer to port the game for you."
msgstr ""
"강력한 프로그래밍 기술이나 게임을 포팅할 개발자가 필요하지만 콘솔 게임을 만"
"들 수도 있습니다."

msgid ""
"The Godot team can't provide an open-source console export due to the "
"licensing terms imposed by console manufacturers. Regardless of the engine "
"you use, though, releasing games on consoles is always a lot of work. You "
"can read more on that here: :ref:`doc_consoles`."
msgstr ""

msgid "What can the engine do?"
msgstr "엔진이 무엇을 할 수 있습니까?"

msgid ""
"Godot was initially developed in-house by an Argentinan game studio. Its "
"development started in 2001, and the engine was rewritten and improved "
"tremendously since its open-source release in 2014."
msgstr ""

msgid ""
"Some examples of games created with Godot include Ex-Zodiac and Helms of "
"Fury."
msgstr "Godot로 만든 게임의 예로 Ex-Zodiac 및 Helms of Fury가 있습니다."

msgid ""
"As for applications, the open-source pixel art drawing program Pixelorama is "
"powered by Godot, and so is the voxel RPG creator RPG in a box."
msgstr ""

msgid "You can find many more examples in the official showcase videos:"
msgstr "공식 쇼케이스 동영상에서 더 많은 예를 찾을 수 있습니다."

msgid "`April 2020 desktop and console showcase`_"
msgstr ""

msgid "`April 2020 mobile showcase`_"
msgstr ""

#, fuzzy
msgid "How does it work and look?"
msgstr "어떻게 Godot를 확장할 수 있나요?"

#, fuzzy
msgid ""
"Godot comes with a fully-fledged game editor with integrated tools to answer "
"the most common needs. It includes a code editor, an animation editor, a "
"tilemap editor, a shader editor, a debugger, a profiler, and more."
msgstr ""
"Godot는 가장 일반적인 요구 사항을 위해 자체 툴을 제공하려고 합니다. 전용 스크"
"립팅 작업 공간, 애니메이션 편집기, 타일맵 편집기, 셰이더 편집기, 디버거, 프로"
"파일러, 로컬 및 원격 장치에서 핫 리로드 등의 기능이 있습니다."

msgid ""
"The team strives to offer a feature-rich game editor with a consistent user "
"experience. While there is always room for improvement, the user interface "
"keeps getting refined."
msgstr ""
"팀은 기능이 풍부한 게임 에디터와 일관된 사용자 경험을 제공하기 위해 노력하고 "
"있습니다. 항상 개선의 여지가 있지만, 유저 인터페이스는 계속해서 개선되고 있습"
"니다."

msgid ""
"Of course, if you prefer, you can work with external programs. We officially "
"support importing 3D scenes designed in Blender_ and maintain plugins to "
"code in VSCode_ and Emacs_ for GDScript and C#. We also support Visual "
"Studio for C# on Windows."
msgstr ""
"물론 여러분이 원한다면 외부 프로그램으로 작업할 수도 있습니다. Blender_에서 "
"설계된 3D 장면 가져오기를 공식적으로 지원하고 GDScript 및 C#용 VSCode_ 및 "
"Emacs_의 코드에 대한 플러그인을 유지 관리합니다. 또한 Windows에서 C#용 "
"Visual Studio를 지원합니다."

#, fuzzy
msgid "Programming languages"
msgstr "디자인 언어"

msgid "Let's talk about the available programming languages."
msgstr "사용 가능한 프로그래밍 언어에 대해 이야기해 봅시다."

msgid ""
"You can code your games using :ref:`GDScript <toc-learn-scripting-"
"gdscript>`, a Godot-specific and tightly integrated language with a "
"lightweight syntax, or :ref:`C# <toc-learn-scripting-C#>`, which is popular "
"in the games industry. These are the two main scripting languages we support."
msgstr ""

#, fuzzy
msgid ""
"Godot also supports a node-based visual programming language named :ref:"
"`VisualScript <toc-learn-scripting-visual_script>`."
msgstr ""
"Godot는 또한 :ref:`VisualScript <toc-learn-scripting-visual_script>`라는 노"
"드 기반 비주얼 프로그래밍 언어를 지원합니다."

msgid ""
"With the :ref:`GDNative <toc-tutorials-gdnative>` technology, you can also "
"write gameplay or high-performance algorithms in C or C++ without "
"recompiling the engine. You can use this technology to integrate third-party "
"libraries and other Software Development Kits (SDK) in the engine."
msgstr ""

msgid ""
"Of course, you can also directly add modules and features to the engine, as "
"it's completely free and open-source."
msgstr ""
"물론 엔진에 모듈과 기능을 직접 추가할 수도 있습니다. 완전히 자유롭고 오픈 소"
"스이기 때문입니다."

#, fuzzy
msgid ""
"These are the five officially supported programming languages. The community "
"maintains support for many more. For more information, see :ref:`GDNative "
"third-party bindings <doc_what_is_gdnative_third_party_bindings>`."
msgstr ""
"다음은 공식적으로 지원되는 5가지 프로그래밍 언어입니다. 커뮤니티는 더 많은 것"
"을 지원합니다. 자세한 내용은 :ref:`GDNative third-party bindings "
"<doc_what_is_gdnative_third_party_bindings>`를 참조하세요."

msgid "What do I need to know to use Godot?"
msgstr "Godot를 사용하려면 무엇을 알아야 하나요?"

msgid ""
"Godot is a feature-packed game engine. With its thousands of features, there "
"is a lot to learn. To make the most of it, you need good programming "
"foundations. While we try to make the engine accessible, you will benefit a "
"lot from knowing how to think like a programmer first."
msgstr ""

#, fuzzy
msgid ""
"Godot relies on the object-oriented programming paradigm. Being comfortable "
"with concepts such as classes and objects will help you code efficiently in "
"it."
msgstr ""
"Godot는 객체 지향 프로그래밍 패러다임에 의존합니다. 클래스 및 객체와 같은 개"
"념에 익숙해지면 효율적으로 코딩하는 데 도움이 됩니다."

#, fuzzy
msgid ""
"If you are entirely new to programming, we recommend following the `CS50 "
"open courseware`_ from Harvard University. It's a great free course that "
"will teach you everything you need to know to be off to a good start. It "
"will save you countless hours and hurdles learning any game engine afterward."
msgstr ""
"프로그래밍이 처음이라면 하버드 대학교의 `CS50 open courseware`_를 따르는 것"
"이 좋습니다. 좋은 시작을 하기 위해 알아야 할 모든 것을 가르쳐 줄 훌륭한 무료 "
"코스입니다. 나중에 게임 엔진을 배우는 데 드는 수많은 시간과 장애물을 절약할 "
"수 있습니다."

msgid ""
"In CS50, you will learn multiple programming languages. Don't be afraid of "
"that: programming languages have many similarities. The skills you learn "
"with one language transfer well to others."
msgstr ""
"CS50에서는 여러 프로그래밍 언어를 배우게 됩니다. 그것을 두려워하지 마세요. 프"
"로그래밍 언어는 많은 유사점을 가지고 있습니다. 한 언어로 배운 기술은 다른 언"
"어로 잘 전달됩니다."

#, fuzzy
msgid ""
"We will provide you with more Godot-specific learning resources in :ref:"
"`doc_learning_new_features`."
msgstr ""
":ref:`doc_learning_new_features`에서 더 많은 Godot 관련 학습 자료를 제공하겠"
"습니다."

msgid ""
"In the next part, you will get an overview of the engine's essential "
"concepts."
msgstr "다음 파트에서는 엔진의 필수 개념에 대한 개요를 살펴볼 것입니다."

#, fuzzy
msgid "Translation status"
msgstr "번역 형식"
