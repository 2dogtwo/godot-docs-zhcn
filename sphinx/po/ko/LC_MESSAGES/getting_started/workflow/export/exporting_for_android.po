# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-30 19:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:4
msgid "Exporting for Android"
msgstr "Android로 내보내기"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:6
msgid ""
"Exporting for Android has fewer requirements than compiling Godot for it. "
"The following steps detail what is needed to setup the SDK and the engine."
msgstr ""
"Android로 내보내려면 Godot를 컴파일하는 것보다 요구사항이 적습니다. 다음 단계"
"는 SDK와 엔진을 설정하는데 필요한 것에 대해 설명합니다."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:10
msgid "Download the Android SDK"
msgstr "Android SDK 다운로드하기"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:12
msgid ""
"Download and install the Android SDK from `developer.android.com <https://"
"developer.android.com/studio/>`__."
msgstr ""
"https://developer.android.com/studio/ 에서 Android SDK를 다운로드하고 설치하"
"세요."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:15
msgid ""
"If you install Android Studio, you need to run it once to complete the SDK "
"setup."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:18
#, fuzzy
msgid "Install OpenJDK 8"
msgstr "Java 설치하기"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:20
msgid ""
"Download and install  `OpenJDK 8 <https://adoptopenjdk.net/index.html?"
"variant=openjdk8&jvmVariant=hotspot>`__, newer versions do not work."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:24
msgid "Create a debug.keystore"
msgstr "debug.keystore 만들기"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:26
msgid ""
"Android needs a debug keystore file to install to devices and distribute non-"
"release APKs. If you have used the SDK before and have built projects, ant "
"or eclipse probably generated one for you (on Linux and macOS, you can find "
"it in the ``~/.android`` directory)."
msgstr ""
"Android는 기기에 설치하고 출시하지 않은 APK를 배포하기 위해 디버그 키스토어 "
"파일이 필요합니다. 이전에 SDK를 사용하고 프로젝트를 만든 적이 있다면, ant나 "
"eclipse가 파일이 있을 것입니다 (Linux와 macOS에서, ``~/.android`` 디렉토리에"
"서 찾을 수 있습니다)."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:31
#, fuzzy
msgid ""
"If you can't find it or need to generate one, the keytool command from the "
"JDK can be used for this purpose::"
msgstr ""
"찾을 수 없거나 만들어야 하는 경우, 이 용도를 위해 JDK에서 keytool 명령어를 사"
"용할 수 있습니다:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:36
msgid ""
"This will create a ``debug.keystore`` file in your current directory. You "
"should move it to a memorable location such as ``%USERPROFILE%\\.android"
"\\``, because you will need its location in a later step. For more "
"information on ``keytool`` usage, see `this Q&A article <https://godotengine."
"org/qa/21349/jdk-android-file-missing>`__."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:39
msgid "Make sure you have adb"
msgstr "adb가 있는지 확인하세요"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:41
#, fuzzy
msgid ""
"Android Debug Bridge (``adb``) is the command line tool used to communicate "
"with Android devices. It's installed with the SDK, but you may need to "
"install one (any) of the Android API levels for it to be installed in the "
"SDK directory."
msgstr ""
"Android Debug Bridge (adb)는 명령줄 도구로 Android 기기와 통신하는데 사용됩니"
"다. SDK와 함께 설치되지만, SDK 디렉토리에 설치하기 위해 Android API 수준에 맞"
"는 것을 설치해야 할 지도 모릅니다."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:46
msgid "Setting it up in Godot"
msgstr "Godot에서 설정하기"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:48
#, fuzzy
msgid ""
"Enter the Editor Settings screen. This screen contains the editor settings "
"for the user account in the computer (it's independent of the project)."
msgstr ""
"편집기 설정 화면으로 갑니다. 이 화면은 컴퓨터의 사용자 계정을 위한 편집기 설"
"정을 갖고 있습니다 (프로젝트와는 독립된 것입니다)."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:54
msgid "Scroll down to the section where the Android settings are located:"
msgstr "Android 설정이 있는 섹션까지 내립니다:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:58
msgid "In that screen, the path to 3 files needs to be set:"
msgstr "이 화면에서 3개의 파일 경로가 설정되어야 합니다:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:60
msgid ""
"The ``adb`` executable (``adb.exe`` on Windows) - It can usually be found at "
"``%LOCALAPPDATA%\\Android\\Sdk\\platform-tools\\adb.exe``."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:63
msgid ""
"The ``jarsigner`` executable (from JDK 6 or 8) - On Windows, OpenJDK "
"installs to a directory like ``%PROGRAMFILES%\\AdoptOpenJDK\\jdk-8.0.252.09-"
"hotspot\\bin``. On Linux, it typically installs to a directory like ``/usr/"
"bin/jarsigner``. The exact path may vary depending on the OpenJDK update "
"you've installed and your machine's operating system."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:66
msgid ""
"The debug ``.keystore`` file - It can be found in the folder where you put "
"the ``debug.keystore`` file you created above."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:69
msgid "Once that is configured, everything is ready to export to Android!"
msgstr "일단 구성되면, Android에 내보낼 준비가 끝납니다!"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:72
msgid "Providing launcher icons"
msgstr "실행 아이콘 제공"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:74
msgid ""
"Launcher icons are used by Android launcher apps to represent your "
"application to users. Godot only requires high-resolution icons (for "
"``xxxhdpi`` density screens) and will automatically generate lower-"
"resolution variants."
msgstr ""
"런처 아이콘은 Android 앱에서 사용자에게 애플리케이션을 나타내는 데 사용됩니"
"다. Godot은 고해상도 아이콘 (``xxxhdpi``) 만 필요하며 저해상도는 자동으로 생"
"성합니다."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:76
#, fuzzy
msgid "There are two types of icons required by Godot:"
msgstr "Godot에는 UI를 디자인하는 두 가지 방법이 있습니다. 먼저 당신은:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:78
#, fuzzy
msgid ""
"**Main Icon:** The \"classic\" icon. This will be used on all Android "
"versions up to Android 8 (Oreo), exclusive. Must be at least 192×192 px."
msgstr ""
"** Main Icon : ** : \"classic\" icon. 이는 모든 Android 버전에서 최대 "
"Android 8 (Oreo)까지만 사용됩니다. 192 × 192 픽셀 이상이어야합니다."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:79
msgid ""
"**Adaptive Icons:** Starting from Android 8 (inclusive), `Adaptive Icons "
"<https://developer.android.com/guide/practices/ui_guidelines/"
"icon_design_adaptive>`_ were introduced. Applications will need to include "
"separate background and foreground icons to have a native look. The user's "
"launcher application will control the icon's animation and masking. Must be "
"at least 432×432 px."
msgstr ""
"** Adaptive Icons : ** Android 8 (포함)부터 `Adaptive Icons <https://"
"developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive>`_ "
"가 도입되었습니다. 앱은 배경 및 전경 아이콘을 포함해야합니다. 사용자의 런처 "
"응용 프로그램은 아이콘의 애니메이션 및 마스킹을 제어합니다. 432 × 432 픽셀 이"
"상이어야합니다."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:81
msgid ""
"It's important to adhere to some rules when designing adaptive icons. "
"`Google Design has provided a nice article <https://medium.com/google-design/"
"designing-adaptive-icons-515af294c783>`_ that helps to understand those "
"rules and some of the capabilities of adaptive icons."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:83
msgid ""
"The most important adaptive icon design rule is to have your icon critical "
"elements inside the safe zone: a centered circle with a diameter of 66dp "
"(264 pixels on ``xxxhdpi``) to avoid being clipped by the launcher."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:85
msgid ""
"If you don't provide some of the requested icons, Godot will replace them "
"using a fallback chain, trying the next in line when the current one fails:"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:87
msgid ""
"**Main Icon:** Provided main icon -> Project icon -> Default Godot main icon."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:88
msgid ""
"**Adaptive Icon Foreground:** Provided foreground icon -> Provided main icon "
"-> Project icon -> Default Godot foreground icon."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:89
msgid ""
"**Adaptive Icon Background:** Provided background icon -> Default Godot "
"background icon."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:91
msgid ""
"It's highly recommended to provide all requested icons, and at least with "
"the specified resolutions. Only this way your application will look great on "
"all Android devices and versions."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:94
msgid "Exporting for Google Play Store"
msgstr "구글 플레이 스토어로 내보내기"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:96
msgid ""
"Uploading an APK to Google's Play Store requires you to sign using a non-"
"debug keystore file; such file can be generated like this:"
msgstr ""
"APK를 구글 플레이 스토어에 업로드 하려면 비 디버그 키스토어 파일을 서명해야합"
"니다; 그러한 파일은 다음과 같이 생성될 수 있습니다:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:103
msgid ""
"This keystore and key are used to verify your developer identity, remember "
"the password and keep it in a safe place! Use Google's Android Developer "
"guides to learn more about `APK signing <https://developer.android.com/"
"studio/publish/app-signing>`__."
msgstr ""
"이 키스토어와 키는 개발자 ID를 확인하는데 사용됩니다, 암호를 기억하고 안전한 "
"장소에 보관하세요! `APK 서명 <https://developer.android.com/studio/publish/"
"app-signing>`__\\ 에 대해 더 자세히 배우고 싶다면 구글 Android 개발자 가이드"
"를 사용하세요."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:106
msgid "Now fill in the following forms in your Android Export Presets:"
msgstr "이제 Android 내보내기 프리셋에서 다음 항목을 채우세요:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:110
#, fuzzy
msgid "**Release:** Enter the path to the keystore file you just generated."
msgstr "Release: 막 생성한 키스토어 파일의 경로를 입력하세요."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:111
#, fuzzy
msgid "**Release User:** Replace with the key alias."
msgstr "Release User: 키 별명으로 바꾸세요."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:112
#, fuzzy
msgid ""
"**Release Password:** Key password. Note that the keystore password and the "
"key password currently have to be the same."
msgstr ""
"Release Password: 키 암호. 키스토어 암호와 키 암호는 현재로선 같아야 합니다."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:114
#, fuzzy
msgid ""
"**Your export_presets.cfg file now contains sensitive information.** If you "
"use a version control system, you should remove it from public repositories "
"and add it to your ``.gitignore`` file or equivalent."
msgstr ""
"**이제 export_presets.cfg 파일에는 민감한 정보가 들어있습니다;** 버전 제어 시"
"스템을 사용한다면, 공개 저장소에서 이것을 제거하는 것이 좋을 것입니다."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:118
#, fuzzy
msgid ""
"Don't forget to uncheck the **Export With Debug** checkbox while choosing "
"the APK's name."
msgstr ""
"APK의 이름을 고르면서 ``Export With Debug`` 버튼을 비활성화하는 것을 잊지마세"
"요."

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:123
msgid "Optimizing the APK size"
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:125
msgid ""
"By default, the APK will contain native libraries for both ARMv7 and ARMv8 "
"architectures. This increases its size significantly. To create a smaller "
"APK, uncheck either **Armeabi-v 7a** or **Arm 64 -v 8a** in your project's "
"Android export preset. This will create an APK that only contains a library "
"for a single architecture. Note that applications targeting ARMv7 can also "
"run on ARMv8 devices, but the opposite is not true."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:132
msgid ""
"Since August 2019, Google Play requires all applications to be available in "
"64-bit form. This means you cannot upload an APK that contains *just* an "
"ARMv7 library. To solve this, you can upload several APKs to Google Play "
"using its `Multiple APK support <https://developer.android.com/google/play/"
"publishing/multiple-apks>`__. Each APK should target a single architecture; "
"creating an APK for ARMv7 and ARMv8 is usually sufficient to cover most "
"devices in use today."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:139
msgid ""
"You can optimize the size further by compiling an Android export template "
"with only the features you need. See :ref:`doc_optimizing_for_size` for more "
"information."
msgstr ""
