# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 10:56+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:4
msgid "Your first game"
msgstr "당신의 첫 게임"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:7
msgid "Overview"
msgstr "개요"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:9
msgid ""
"This tutorial will guide you through making your first Godot project. You "
"will learn how the Godot editor works, how to structure a project, and how "
"to build a 2D game."
msgstr ""
"이 튜토리얼은 첫 Godot 프로젝트를 만드는 과정을 안내합니다. Godot 에디터가 어"
"떻게 작동하는지, 프로젝트를 구성하는 방법, 2D 게임을 만드는 방법을 배우게 됩"
"니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:13
msgid ""
"This project is an introduction to the Godot engine. It assumes that you "
"have some programming experience already. If you're new to programming "
"entirely, you should start here: :ref:`doc_scripting`."
msgstr ""
"이 프로젝트는 Godot 엔진에 대한 소개이고, 당신이 이미 약간의 프로그래밍 경험"
"이 있다고 가정합니다. 만약 당신이 초보 프로그래머라면, :ref:`doc_scripting` "
"부터 시작해야합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:18
msgid ""
"The game is called \"Dodge the Creeps!\". Your character must move and avoid "
"the enemies for as long as possible. Here is a preview of the final result:"
msgstr ""
"그 게임은 \"Dodge the Creeps!\"라고 부릅니다. 캐릭터는 가능한 한 오랫동안 움"
"직이고 적을 피해야 합니다. 다음은 최종 결과의 미리 보기입니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:24
msgid ""
"**Why 2D?** 3D games are much more complex than 2D ones. You should stick to "
"2D until you have a good understanding of the game development process."
msgstr ""
"**왜 2D인가?** 3D게임은 2D게임보다 훨씬 더 복잡하다. 게임 개발 과정을 잘 이해"
"할 수 있을 때까지 2D를 고수해야 합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:28
msgid "Project setup"
msgstr "프로젝트 설정하기"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:30
msgid ""
"Launch Godot and create a new project. Then, download :download:"
"`dodge_assets.zip <files/dodge_assets.zip>` - the images and sounds you'll "
"be using to make the game. Unzip these files to your project folder."
msgstr ""
"Godot를 시작하고 새 프로젝트를 만듭니다. 그런 다음, :download:`dodge_assets."
"zip <files/dodge_assets.zip>` 당신이 게임에 쓸 이미지와 소리를 다운로드 합니"
"다. 이 파일을 프로젝트 폴더에 풉니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:34
msgid ""
"For this tutorial, we will assume you are familiar with the editor. If you "
"haven't read :ref:`doc_scenes_and_nodes`, do so now for an explanation of "
"setting up a project and using the editor."
msgstr ""
"이 튜토리얼에서는 에디터에 대해 잘 알고 있다고 가정하겠습니다. :ref:"
"`doc_scenes_and_nodes` 내용을 읽지 않은 경우, 프로젝트를 설정하고 에디터를 사"
"용하는 방법에 대해 배우러 가세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:38
msgid ""
"This game will use portrait mode, so we need to adjust the size of the game "
"window. Click on Project -> Project Settings -> Display -> Window and set "
"\"Width\" to 480 and \"Height\" to 720."
msgstr ""
"이 게임은 세로 모드를 사용하므로 게임 창의 크기를 조정해야 합니다. Project -"
"> ProjectSettings -> Display -> Window를 클릭하고 \"Width\"를 480으로, "
"\"Height\"를 720으로 설정합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:43
msgid "Organizing the project"
msgstr "프로젝트 조직하기"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:45
msgid ""
"In this project, we will make 3 independent scenes: ``Player``, ``Mob``, and "
"``HUD``, which we will combine into the game's ``Main`` scene. In a larger "
"project, it might be useful to make folders to hold the various scenes and "
"their scripts, but for this relatively small game, you can save your scenes "
"and scripts in the root folder, referred to as ``res://``.  You can see your "
"project folders in the FileSystem Dock in the upper left corner:"
msgstr ""
"이 프로젝트에서 우리는  ``Player`` , ``Mob`` , ``HUD`` 의 세 개의 독립적인 씬"
"을 만들 것인데 이 씬 들은 우리가 게임의 ``Main`` 씬으로 결합될 것이다. 더 큰 "
"프로젝트에서는 다양한 씬과 스크립트를 저장할 폴더를 만드는 것이 유용할 수 있"
"지만, 상대적으로 작은 이 게임에서는 \"res://\"라고 하는 루트 폴더에 씬과 스크"
"립트를 저장할 수 있습니다. 프로젝트 폴더는 왼쪽 위에 있는 파일 시스템 독에서 "
"볼 수 있습니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:56
msgid "Player scene"
msgstr "플레이어 씬"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:58
msgid ""
"The first scene we will make defines the ``Player`` object. One of the "
"benefits of creating a separate Player scene is that we can test it "
"separately, even before we've created other parts of the game."
msgstr ""
"우리가 만들 첫 번째 씬은 ``Player`` 객체를 정의합니다. 별도의 플레이어 씬을 "
"만들 때의 장점 중 하나는 게임의 다른 부분을 만들기 전에 별도로 테스트할 수 있"
"다는 것입니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:63
msgid "Node structure"
msgstr "노드 구조"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:65
msgid ""
"To begin, click the \"Add/Create a New Node\" button and add an :ref:`Area2D "
"<class_Area2D>` node to the scene."
msgstr ""
"시작하려면 \"새 노드 추가/생성\" 버튼을 클릭하고 :ref:`Area2D <class_Area2D>`"
"노드를 씬에 추가합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:70
msgid ""
"With ``Area2D`` we can detect objects that overlap or run into the player. "
"Change its name to ``Player`` by clicking on the node's name. This is the "
"scene's root node. We can add additional nodes to the player to add "
"functionality."
msgstr ""
"``Area2D`` 를 사용하면 플레이어와 겹치거나 플레이어에 부딪히는 물체를 감지할 "
"수 있습니다. 노드 이름을 클릭하여 이름을 ``Player`` 로 변경합니다. 이것은 씬"
"의 루트 노드입니다. 플레이어에 노드를 추가하여 함수를 추가할 수 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:74
msgid ""
"Before we add any children to the ``Player`` node, we want to make sure we "
"don't accidentally move or resize them by clicking on them. Select the node "
"and click the icon to the right of the lock; its tooltip says \"Makes sure "
"the object's children are not selectable.\""
msgstr ""
"``Player`` 노드에 자식을 추가하기 전에 자식들을 선택하여 실수로 움직이거나 크"
"기를 조정하지 않도록 합니다. 노드를 선택하고 자물쇠 오른쪽에 있는 아이콘을 클"
"릭합니다. 노드의 툴 팁에 \"오브젝트의 자식노드가 선택될 수 없도록 설정합니다."
"\" 라고 표시됩니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:81
msgid ""
"Save the scene. Click Scene -> Save, or press ``Ctrl+S`` on Windows/Linux or "
"``Command+S`` on Mac."
msgstr ""
"씬을 저장합니다. 씬 -> 씬 저장을 클릭하거나 윈도우/리눅스에서는 ``Ctrl+S`` "
"를, 맥에서는 ``Command+S`` 를 누릅니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:83
msgid "For this project, we will be following the Godot naming conventions."
msgstr "이 프로젝트에서, 우리는 Godot의 명명 규칙을 따를 것입니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:85
msgid ""
"**GDScript**: Classes (nodes) use PascalCase, variables and functions use "
"snake_case, and constants use ALL_CAPS (See :ref:`doc_gdscript_styleguide`)."
msgstr ""
"**GDScript**: 클래스(노드)는 ``PascalCase`` 를 사용하고', 변수와 함수는 "
"``snake_case`` 를 사용하며, 상수는 ``ALL_CAPS`` 를 사용합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:89
msgid ""
"**C#**: Classes, export variables and methods use PascalCase, private fields "
"use _camelCase, local variables and parameters use camelCase (See :ref:"
"`doc_c_sharp_styleguide`).  Be careful to type the method names precisely "
"when connecting signals."
msgstr ""
"**C#**:  클래스, export 변수 그리고 메쏘드는 PascalCase를 사용합니다. "
"private 필드는  _camelCase를 사용합니다.  지역변수(local variables)와  파라미"
"터는 camelCase를 사용합니다 (참고 :ref:`doc_c_sharp_styleguide`). 시그널을 연"
"결할 때는 메쏘드 이름을 정확하게 입력하도록 주의하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:96
msgid "Sprite animation"
msgstr "스프라이트 애니메이션"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:98
msgid ""
"Click on the ``Player`` node and add an :ref:`AnimatedSprite "
"<class_AnimatedSprite>` node as a child. The ``AnimatedSprite`` will handle "
"the appearance and animations for our player. Notice that there is a warning "
"symbol next to the node. An ``AnimatedSprite`` requires a :ref:`SpriteFrames "
"<class_SpriteFrames>` resource, which is a list of the animations it can "
"display. To create one, find the ``Frames`` property in the Inspector and "
"click \"<null>\" -> \"New SpriteFrames\". Next, in the same location, click "
"``<SpriteFrames>`` to open the \"SpriteFrames\" panel:"
msgstr ""
"``Player`` 노드를 클릭하고 :ref:`AnimatedSprite <class_AnimatedSprite>` 노드"
"를 하위 노드로 추가합니다. ``AnimatedSprite`` 는 우리 선수를 위해 외모와 애니"
"메이션을 다룰 것입니다. 노드 옆에 주의 기호가 있습니다. ``AnimatedSprite`` "
"를 사용하려면 표시할 수 있는 애니메이션 목록인 :ref:`SpriteFrames "
"<class_SpriteFrames>` 리소스가 필요합니다. 작성하려면 인스펙터에서 "
"``Frames`` 속성을 찾아 \"<null>\" -> \"New SpriteFrames\"를 클릭합니다. 그런 "
"다음 같은 위치에서 ``<SpriteFrames>`` 를 클릭하여 \"SpriteFrames\" 패널을 엽"
"니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:110
msgid ""
"On the left is a list of animations. Click the \"default\" one and rename it "
"to \"right\". Then click the \"Add\" button to create a second animation "
"named \"up\". Drag the two images for each animation, named "
"``playerGrey_up[1/2]`` and ``playerGrey_walk[1/2]``, into the \"Animation "
"Frames\" side of the panel:"
msgstr ""
"왼쪽에는 애니메이션 목록이 있습니다. \"default\"를 클릭하고 \"right\"로 이름"
"을 바꾸세요. 그런 뒤 \"추가\" 버튼을 눌러 두 번째 애니메이션을 만들고 \"up"
"\"이라 이름을 지읍시다. 각 애니메이션에 두 개의 이미지를 드래그 하고, \"애니"
"메이션 프레임\" 패널 안에 하나는 ``playerGrey_up[1/2]`` 다른 하나는 "
"``playerGrey_walk[1/2]`` 라고 이름을 지읍니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:117
msgid ""
"The player images are a bit too large for the game window, so we need to "
"scale them down. Click on the ``AnimatedSprite`` node and set the ``Scale`` "
"property to ``(0.5, 0.5)``. You can find it in the Inspector under the "
"``Node2D`` heading."
msgstr ""
"플레이어 이미지들이 게임 창에 비해 너무 크기 때문에, 크기를 줄여야 합니다. "
"``AnimatedSprite`` 노드를 클릭하고 ``Scale`` 속성을 ``(0.5, 0.5)`` 로 설정하"
"세요. 인스펙터의 ``Node2D`` 에서 찾으실 수 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:124
msgid ""
"Finally, add a :ref:`CollisionShape2D <class_CollisionShape2D>` as a child "
"of ``Player``. This will determine the player's \"hitbox\", or the bounds of "
"its collision area. For this character, a ``CapsuleShape2D`` node gives the "
"best fit, so next to \"Shape\" in the Inspector, click \"<null>\"\" -> \"New "
"CapsuleShape2D\".  Resize the shape to cover the sprite:"
msgstr ""
"마지막으로, :ref:`CollisionShape2D <class_CollisionShape2D>` 를 ``Player`` "
"의 자식으로 추가하세요. 이것이 플레이어의 \"히트박스\", 즉 충돌 영역의 범위"
"를 결정합니다. 이 캐릭터에게, ``CapsuleShape2D`` 노드가 가장 적합합니다, 그러"
"므로 인스펙터의 \"Shape\" 옆 \"<null>\"\" -> \"New CapsuleShape2D\" 를 클릭하"
"세요. 스프라이트를 덮도록 크기를 조정하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:132
msgid ""
"Don't scale the shape's outline! Only use the size handles (circled in red) "
"to adjust the shape!"
msgstr ""
"모양의 겉 테두리를 조정하지 마세요! 모양을 맞추기 위해 크기 핸들만 (빨간 동그"
"라미 부분) 사용합니다!"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:135
msgid "When you're finished, your ``Player`` scene should look like this:"
msgstr "다 되셨다면, 당신의 ``Player`` 씬은 이렇게 되어야 합니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:140
msgid "Moving the player"
msgstr "플레이어 움직이기"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:142
msgid ""
"Now we need to add some functionality that we can't get from a built-in "
"node, so we'll add a script. Click the ``Player`` node and click the \"Add "
"Script\" button:"
msgstr ""
"이제 내장 노드 만으로는 얻을 수 없는 몇 가지 기능을 추가해야 합니다, 그래서 "
"스크립트를 만들겁니다. ``Player`` 노드를 클릭하고 \"스크립트 추가\" 버튼을 누"
"르세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:148
msgid ""
"In the script settings window, you can leave the default settings alone. "
"Just click \"Create\":"
msgstr ""
"스크립트 설정 창에서는, 기본 설정으로 냅두어도 됩니다. 그냥 \"생성\"을 누르세"
"요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:151
msgid ""
"If you're creating a C# script or other languages, select the language from "
"the `language` drop down menu before hitting create."
msgstr ""
"만약 C# 스크립트나 다른 언어로 생성하려한다면, 생성을 누르기 전에 `언어` 메뉴"
"에서 언어를 선택하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:156
msgid ""
"If this is your first time encountering GDScript, please read :ref:"
"`doc_scripting` before continuing."
msgstr ""
"처음 GDScript를 보시는 거라면, 계속하기 전에 :ref:`doc_scripting` 를 읽어주세"
"요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:159
msgid "Start by declaring the member variables this object will need:"
msgstr "이 객체가 필요로 하는 멤버 변수를 선언함으로써 시작합시다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:180
msgid ""
"Using the ``export`` keyword on the first variable ``speed`` allows us to "
"set its value in the Inspector. This can be handy for values that you want "
"to be able to adjust just like a node's built-in properties. Click on the "
"``Player`` node and set the speed property to ``400``."
msgstr ""
"``export`` 키워드로 첫 번째 변수인 ``speed`` 가 인스펙터 내 값을 설정하도록 "
"합니다. 이것은 당신이 원하는 값을 노드의 내장 속성처럼 조절할 수 있기 때문에 "
"편리합니다. ``Player`` 노드를 선택하고 speed 속성을 ``400`` 으로 설정하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:185
msgid ""
"If you're using C#, you need to (re)build the project assemblies whenever "
"you want to see new export variables or signals. This build can be manually "
"triggered by clicking the word \"Mono\" at the bottom of the editor window "
"to reveal the Mono Panel, then clicking the \"Build Project\" button."
msgstr ""
"당신이 C#을 사용한다면, 새로운 외부변수(export variables)나 시그널을 보기 위"
"해서 프로젝트 구성물(assemblies)를 (재)컴파일(build)할 필요가 있습니다. 이 컴"
"파일은 편집기 의 밑에 \"Mono\" 단어를 클릭하여 Mono 패널이 나타나게 한 후 "
"\"프로젝트 생성(Build)\" 버튼을 눌러서 수동으로 진행됩니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:193
msgid ""
"The ``_ready()`` function is called when a node enters the scene tree, which "
"is a good time to find the size of the game window:"
msgstr ""
"``_ready()`` 함수는 노드가 씬 트리에 들어올 때 호출됩니다, 이는 게임 창의 크"
"기를 알아보기 좋은 순간입니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:209
msgid ""
"Now we can use the ``_process()`` function to define what the player will "
"do. ``_process()`` is called every frame, so we'll use it to update elements "
"of our game, which we expect will change often. Here we'll make it:"
msgstr ""
"이제 우리는 ``_process()`` 함수를 사용해서 플레이어가 무엇을 할 지 정의할 수 "
"있습니다. ``_process()`` 는 매 프레임마다 호출되므로, 게임에서 자주 변하는 요"
"소들을 업데이트하기 위해서 사용할 수 있습니다. 다음은 우리가 만들고자 하는 것"
"입니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:213
msgid "Check for input."
msgstr "입력을 확인."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:214
msgid "Move in the given direction."
msgstr "주어진 방향으로 이동."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:215
msgid "Play the appropriate animation."
msgstr "적절한 애니메이션을 재생."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:217
msgid ""
"First, we need to check for input - is the player pressing a key? For this "
"game, we have 4 direction inputs to check. Input actions are defined in the "
"Project Settings under \"Input Map\". You can define custom events and "
"assign different keys, mouse events, or other inputs to them. For this demo, "
"we will use the default events that are assigned to the arrow keys on the "
"keyboard."
msgstr ""
"먼저, 입력을 확인해야 합니다 - 플레이어가 키를 누르는 것이라 할까요? 이 게임"
"에서, 우리는 입력을 확인하기 위한 4 개의 방향키가 필요합니다. 입력 액션은 프"
"로젝트 설정의 \"입력 설정\"에서 정의할 수 있습니다. 사용자 지정 이벤트를 정의"
"하고 이를 다른 키, 마우스 이벤트, 혹은 다른 입력으로 지정할 수도 있습니다. "
"이 데모에서는, 우리는 키보드에 있는 방향키가 지정된 기본 이벤트를 사용할 것입"
"니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:224
msgid ""
"You can detect whether a key is pressed using ``Input.is_action_pressed()``, "
"which returns ``true`` if it is pressed or ``false`` if it isn't."
msgstr ""
"``Input.is_action_pressed()`` 를 사용해서 키가 눌러졌는지를 감지할 수 있습니"
"다, 눌러지면 ``true`` 값을 내보내고 그렇지 않으면 ``false`` 값을 내보냅니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:286
msgid ""
"We check each input and add/subtract from the ``velocity`` to obtain a total "
"direction. For example, if you hold ``right`` and ``down`` at the same time, "
"the resulting ``velocity`` vector will be ``(1, 1)``. In this case, since "
"we're adding a horizontal and a vertical movement, the player would move "
"*faster* than if it just moved horizontally."
msgstr ""
"우리는 각 입력을 확인하고 ``velocity`` 에서 더하기/빼기를 해서 전체 방향을 얻"
"습니다. 예를 들어 당신이 ``오른쪽`` 과 ``아래`` 를 동시에 누른다면, 결과 "
"``velocity`` 벡터는 ``(1, 1)`` 이 될 것입니다. 이런 경우에서, 상하좌우 움직임"
"을 추가한다면, 플레이어는 단순히 수평으로 움직이는 것보다 *더 빠르게* 움직일 "
"겁니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:292
msgid ""
"We can prevent that if we *normalize* the velocity, which means we set its "
"*length* to ``1``, and multiply by the desired speed. This means no more "
"fast diagonal movement."
msgstr ""
"우리는 이 속도를 *노멀라이즈* 해서 예방할 수 있습니다, 즉 우리는 이것의 *범위"
"* 를 ``1`` 로 설정하고, 원하는 속도로 곱해줍니다. 이렇게 하면 더 이상 대각선 "
"이동속도가 빨라지지 않습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:296
msgid ""
"If you've never used vector math before, or need a refresher, you can see an "
"explanation of vector usage in Godot at :ref:`doc_vector_math`. It's good to "
"know but won't be necessary for the rest of this tutorial."
msgstr ""
"이제까지 벡터 수학을 안 써봤거나, 회복이 필요하다면, Godot에서 벡터 사용에 관"
"한 설명을 :ref:`doc_vector_math` 에서 보실 수 있습니다. 보면 좋지만 나머지 튜"
"토리얼을 위해 꼭 필수적인 것은 아닙니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:300
msgid ""
"We also check whether the player is moving so we can start or stop the "
"AnimatedSprite animation."
msgstr ""
"우리는 또 AnimatedSprite 애니메이션을 재생하고 정지할 수 있도록 플레이어가 움"
"직이고 있는지를 확인할 것입니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:303
msgid ""
"``$`` returns the node at the relative path from this node, or returns "
"``null`` if the node is not found. Since AnimatedSprite is a child of the "
"current node, we can use ``$AnimatedSprite``."
msgstr ""
"``$`` 는 이 노드에서 상대적인 경로에 있는 노드를 반환하거나, 노드가 없다면 "
"``null`` 값을 반환합니다. AnimatedSprite가 지금 노드의 자식인 상태이므로, 우"
"리는 ``$AnimatedSprite`` 를 사용할 수 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:306
msgid ""
"``$`` is shorthand for ``get_node()``. So in the code above, ``"
"$AnimatedSprite.play()`` is the same as ``get_node(\"AnimatedSprite\")."
"play()``."
msgstr ""
"``$`` 는 ``get_node()`` 의 줄임말입니다. 그래서 위의 코드인, ``"
"$AnimatedSprite.play()`` 는 ``get_node(\"AnimatedSprite\").play()`` 와 같습니"
"다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:309
msgid ""
"Now that we have a movement direction, we can update ``Player``'s position "
"and use ``clamp()`` to prevent it from leaving the screen by adding the "
"following to the bottom of the ``_process`` function:"
msgstr ""
"이제 우리는 이동 방향을 갖고 있으므로, ``Player`` 의 위치를 업데이트 할 수 있"
"으므로 ``_process`` 함수의 맨 아래에 ``clamp()`` 를 추가해서 플레이어가 화면"
"에서 나가지 못하도록 합시다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:329
msgid "*Clamping* a value means restricting it to a given range."
msgstr ""
"*클램핑(Clamping)* 값은 주어진 범위로 그것을 제한한다는 것을 의미합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:331
msgid ""
"Click \"Play Scene\" (``F6``) and confirm you can move the player around the "
"screen in all directions. The console output that opens upon playing the "
"scene can be closed by clicking ``Output`` (which should be highlighted in "
"blue) in the lower left of the Bottom Panel."
msgstr ""
"\"씬 실행하기\" (``F6``) 를 클릭하고 플레이어가 화면에서 전 방향으로 움직이는"
"지 확인하세요. 씬을 실행할 때 열리는 콘솔 출력은 하단 패널의 왼쪽 하단에 ``출"
"력`` 을 클릭해서 닫으실 수 있습니다 (파란색으로 강조되어 있을 것입니다)."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:335
msgid ""
"If you get an error in the \"Debugger\" panel that refers to a \"null "
"instance\", this likely means you spelled the node name wrong. Node names "
"are case-sensitive and ``$NodeName`` or ``get_node(\"NodeName\")`` must "
"match the name you see in the scene tree."
msgstr ""
"\"디버거\" 패널에서 \"null instance\"라고 하면서 에러가 뜬다면, 노드 이름의 "
"철자를 틀렸다는 것을 의미합니다. 노드 이름은 대소문자를 구별하고  ``"
"$NodeName`` 이나 ``get_node(\"NodeName\")`` 이 씬 트리에서 보는 이름이 일치해"
"야 합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:340
msgid "Choosing animations"
msgstr "애니메이션 고르기"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:342
msgid ""
"Now that the player can move, we need to change which animation the "
"AnimatedSprite is playing based on direction. We have a \"right\" animation, "
"which should be flipped horizontally using the ``flip_h`` property for left "
"movement, and an \"up\" animation, which should be flipped vertically with "
"``flip_v`` for downward movement. Let's place this code at the end of our "
"``_process()`` function:"
msgstr ""
"이제 캐릭터가 움직이니, 방향에 맞는 AnimatedSprite가 움직이도록 바꿔야 합니"
"다. 우리는 \"오른쪽\" 애니메이션이 있고 이걸 왼쪽 움직임으로 쓰려면 가로로 뒤"
"집어야 하므로 ``flip_h`` 속성을 써줍니다, 그리고 \"위\" 애니메이션도 아래 움"
"직임으로 쓰려면 세로로 뒤집어야 하므로 ``flip_v`` 을 써줍니다. "
"``_process()`` 아래에 이 코드를 작성해주세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:376
msgid ""
"The boolean assignments in the code above are a common shorthand for "
"programmers. Consider this code versus the shortened boolean assignment "
"above:"
msgstr ""
"위 코드 내의 불 할당은 프로그래머를 위한 일반적인 속기입니다. 위의 단축된 불 "
"할당을 이 코드와 비교해서 생각해보세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:395
msgid ""
"Play the scene again and check that the animations are correct in each of "
"the directions. When you're sure the movement is working correctly, add this "
"line to ``_ready()``, so the player will be hidden when the game starts:"
msgstr ""
"씬을 다시 실행하고 애니메이션이 각 방향으로 잘 움직이는지 확인하세요. 잘 작동"
"된다고 확신된다면, 플레이어가 게임이 시작할 때 안 보이도록 이 문장을 "
"``_ready()`` 에 추가하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:410
msgid "Preparing for collisions"
msgstr "충돌 준비하기"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:412
msgid ""
"We want ``Player`` to detect when it's hit by an enemy, but we haven't made "
"any enemies yet! That's OK, because we're going to use Godot's *signal* "
"functionality to make it work."
msgstr ""
"우리는 ``Player`` 가 적과 닿았다는 것을 감지하길 원합니다, 하지만 아직 적을 "
"안 만들었습니다! 괜찮습니다, 왜냐하면 충돌이 작동하도록 우리는 Godot의 *시그"
"널(signal)* 기능을 사용할 것이기 때문입니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:416
msgid "Add the following at the top of the script, after ``extends Area2d``:"
msgstr "``extends Area2d`` 다음에 스크립트 상단에 다음을 추가하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:430
msgid ""
"This defines a custom signal called \"hit\" that we will have our player "
"emit (send out) when it collides with an enemy. We will use ``Area2D`` to "
"detect the collision. Select the ``Player`` node and click the \"Node\" tab "
"next to the Inspector tab to see the list of signals the player can emit:"
msgstr ""
"이것은 \"hit\"라 불리는 사용자 지정 시그널을 정의해서 적과 충돌할 때 우리의 "
"플레이어가 방출하도록 (내보내도록) 합니다. 우리는 ``Area2D`` 로 그 충돌을 감"
"지할 겁니다. ``Player`` 노드를 선택하고 인스펙터 탭 옆의 \"노드\" 탭을 클릭하"
"고 플레이어가 방출할 수 있는 시그널들을 확인해 보세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:437
msgid ""
"Notice our custom \"hit\" signal is there as well! Since our enemies are "
"going to be ``RigidBody2D`` nodes, we want the ``body_entered( Object "
"body )`` signal; this will be emitted when a body contacts the player. Click "
"\"Connect..\" and then \"Connect\" again on the \"Connecting Signal\" "
"window. We don't need to change any of these settings - Godot will "
"automatically create a function called ``_on_Player_body_entered`` in your "
"player's script."
msgstr ""
"우리의 \"hit\" 시그널도 거기에 있다는 것에 주목하세요! 적들은 "
"``RigidBody2D`` 노드가 될 것이기 때문에, 우리는 ``body_entered( Object "
"body )`` 시그널이 필요하고, 이걸로 몸이 플레이어와 접촉할 때 방출하도록 할 것"
"입니다. \"연결하기..\" 를 누르고 \"시그널 연결하기\" 창에서 \"연결\"을 누릅니"
"다. 우리는 어떤 설정도 바꿀 필요가 없습니다 - Godot는 자동으로 플레이어 스크"
"립트에 ``_on_Player_body_entered`` 라는 함수를 생성해줍니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:445
msgid ""
"When connecting a signal, instead of having Godot create a function for you, "
"you can also give the name of an existing function that you want to link the "
"signal to."
msgstr ""
"시그널이 연결될 때, Godot가 함수를 만들어 주는 대신, 당신이 직접 연결하고 싶"
"은 시그널에 존재하는 함수의 이름을 줄 수 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:449
msgid "Add this code to the function:"
msgstr "함수에 이 코드를 추가하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:468
msgid ""
"Disabling the area's collision shape means it won't detect collisions. By "
"turning it off, we make sure we don't trigger the ``hit`` signal more than "
"once."
msgstr ""
"영역의 충돌 모양을 사라지게 하는 것은 충돌을 감지하지 않는다를 의미합니다. 그"
"것을 끈다면, ``hit`` 시그널을 두 번 이상 울리지 않게 됩니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:472
msgid ""
"The last piece for our player is to add a function we can call to reset the "
"player when starting a new game."
msgstr ""
"우리 플레이어의 마지막 과제는 호출할 수 있는 함수를 추가해서 새 게임이 시작"
"할 때 플레이어를 리셋할 수 있게 하는 겁니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:493
msgid "Enemy scene"
msgstr "적 씬"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:495
msgid ""
"Now it's time to make the enemies our player will have to dodge. Their "
"behavior will not be very complex: mobs will spawn randomly at the edges of "
"the screen and move in a random direction in a straight line, then despawn "
"when they go offscreen."
msgstr ""
"이제 우리의 플레이어가 피할 적을 만들 차례입니다. 이들의 행동은 그리 복잡하"
"진 않을겁니다: 적이 아무렇게나 화면의 가장자리에서 나타나고 무작위 방향으로 "
"직선으로 나아갑니다, 그리고 화면을 벗어나면 사라집니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:500
msgid ""
"We will build this into a ``Mob`` scene, which we can then *instance* to "
"create any number of independent mobs in the game."
msgstr ""
"그러면 ``Mob`` 씬에 이 작업을 해야 합니다, 이것을 *인스턴스* 해서 게임에선 정"
"해진 수 만큼의 적들을 만들 것입니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:504
msgid "Node setup"
msgstr "노드 설정하기"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:506
msgid "Click Scene -> New Scene and we'll create the Mob."
msgstr "씬 -> 새 씬을 클릭하고 거기에서 적을 만들겁니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:508
msgid "The Mob scene will use the following nodes:"
msgstr "적 씬은 다음 노드들을 사용할 것입니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:510
msgid ":ref:`RigidBody2D <class_RigidBody2D>` (named ``Mob``)"
msgstr ":ref:`RigidBody2D <class_RigidBody2D>` ( ``Mob`` 으로 이름지음)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:512
msgid ":ref:`AnimatedSprite <class_AnimatedSprite>`"
msgstr ":ref:`AnimatedSprite <class_AnimatedSprite>`"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:513
msgid ":ref:`CollisionShape2D <class_CollisionShape2D>`"
msgstr ":ref:`CollisionShape2D <class_CollisionShape2D>`"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:514
msgid ""
":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>` (named "
"``Visibility``)"
msgstr ""
":ref:`VisibilityNotifier2D <class_VisibilityNotifier2D>` ( ``Visibility`` 으"
"로 이름지음)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:516
msgid ""
"Don't forget to set the children so they can't be selected, like you did "
"with the Player scene."
msgstr ""
"플레이어 씬에서 한 것과 마찬가지로, 자식이 선택되지 않도록 설정하는 것을 잊지"
"마세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:519
msgid ""
"In the :ref:`RigidBody2D <class_RigidBody2D>` properties, set ``Gravity "
"Scale`` to ``0``, so the mob will not fall downward. In addition, under the "
"``PhysicsBody2D`` section, click the ``Mask`` property and uncheck the first "
"box. This will ensure the mobs do not collide with each other."
msgstr ""
":ref:`RigidBody2D <class_RigidBody2D>` 속성에서는, ``Gravity Scale`` 을 "
"``0`` 으로 설정해 적이 아래로 떨어지지 않도록 합니다. 그리고, "
"``PhysicsBody2D``  섹션의 ``Mask`` 속성을 클릭하고 첫 번째 상자의 체크를 푸세"
"요. 이것은 적들끼리 충돌하지 않도록 만듭니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:526
msgid ""
"Set up the :ref:`AnimatedSprite <class_AnimatedSprite>` like you did for the "
"player. This time, we have 3 animations: ``fly``, ``swim``, and ``walk``. "
"Set the ``Playing`` property in the Inspector to \"On\" and adjust the "
"\"Speed (FPS)\" setting as shown below. We'll select one of these animations "
"randomly so that the mobs will have some variety."
msgstr ""
":ref:`AnimatedSprite <class_AnimatedSprite>` 를 당신이 플레이어에서 한 것처"
"럼 설정합니다. 이번엔, 3 개의 애니메이션이 있습니다: ``fly``, ``swim``, 그리"
"고 ``walk`` 이죠. 인스펙터의 ``Playing`` 를 \"On\"으로 설정합니다. 그리고 "
"\"Speed (FPS)\" 를 아래에 보이는대로 조정해줍시다. 우리는 이 애니메이션들 중 "
"하나를 무작위로 선택해서, 적들이 다양하게 보이도록 할 겁니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:533
msgid ""
"``fly`` should be set to 3 FPS, with ``swim`` and ``walk`` set to 4 FPS."
msgstr ""
"``fly`` 는 3 FPS로 설정하고, ``swim`` 과 ``walk`` 는 4 FPS로 설정합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:535
msgid ""
"Like the player images, these mob images need to be scaled down. Set the "
"``AnimatedSprite``'s ``Scale`` property to ``(0.75, 0.75)``."
msgstr ""
"플레이어 이미지처럼, 이 적 이미지들도 크기를 줄일 필요가 있습니다. "
"``AnimatedSprite`` 의 ``Scale`` 속성을 ``(0.75, 0.75)`` 으로 설정합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:538
msgid ""
"As in the ``Player`` scene, add a ``CapsuleShape2D`` for the collision. To "
"align the shape with the image, you'll need to set the ``Rotation Degrees`` "
"property to ``90`` under ``Node2D``."
msgstr ""
"``Player`` 씬처럼, 충돌을 위한 ``CapsuleShape2D`` 을 추가합니다. 이미지와 모"
"양이 같도록, ``Node2D`` 아래 ``Rotation Degrees`` 속성을 ``90`` 으로 설정해"
"야 합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:543
msgid "Enemy script"
msgstr "적 스크립트"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:545
msgid "Add a script to the ``Mob`` and add the following member variables:"
msgstr "``Mob`` 에게 스크립트를 추가해주고 다음의 멤버 변수를 추가해주세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:571
msgid ""
"We'll pick a random value between ``min_speed`` and ``max_speed`` for how "
"fast each mob will move (it would be boring if they were all moving at the "
"same speed). Set them to ``150`` and ``250`` in the Inspector. We also have "
"an array containing the names of the three animations, which we'll use to "
"select a random one."
msgstr ""
"``min_speed`` 와 ``max_speed`` 사이 무작위 값으로 각 적들이 빠르게 움직이는 "
"정도를 선택하도록 할겁니다 (모두가 같은 속도로 움직이면 지루할 것입니다). 인"
"스펙터에서 각각 ``150 과 ``250`` 으로 설정합시다. 그리고 세 개의 애니메이션"
"의 이름이 들어있는 배열이 있는데 이걸 무작위로 선택해서 사용할 겁니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:577
msgid ""
"Now let's look at the rest of the script. In ``_ready()`` we randomly choose "
"one of the three animation types:"
msgstr ""
"이제 스크립트의 나머지를 봅시다. ``_ready()`` 에서 우리는 무작위로 세 개의 애"
"니메이션 유형들 중 하나를 고릅니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:596
msgid ""
"You must use ``randomize()`` if you want your sequence of \"random\" numbers "
"to be different every time you run the scene. We're going to use "
"``randomize()`` in our ``Main`` scene, so we won't need it here. ``randi() % "
"n`` is the standard way to get a random integer between ``0`` and ``n-1``."
msgstr ""
"씬을 실행할 때 매 순간마다 다른 \"무작위\" 숫자의 순서를 원한다면 "
"``randomize()`` 를 사용해야 합니다. ``randomize()`` 를 우리의 ``Main`` 씬에 "
"사용할꺼니까, 더이상 여기 있으면 안됩니다. ``randi() % n`` 은  ``0`` 과 "
"``n-1`` 사이의 무작위 정수 값을 얻는 기본적인 방법입니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:602
msgid ""
"The last piece is to make the mobs delete themselves when they leave the "
"screen. Connect the ``screen_exited()`` signal of the ``Visibility`` node "
"and add this code:"
msgstr ""
"적이 나갈 때 스스로를 삭제하는 것이 적의 마지막 과제입니다. ``Visubility`` 노"
"드의 ``screen_exited()`` 시그널을 연결하고 이 코드를 추가하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:619
msgid "This completes the `Mob` scene."
msgstr "이걸로 `적` 씬이 완성되었습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:622
msgid "Main scene"
msgstr "메인 씬"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:624
msgid ""
"Now it's time to bring it all together. Create a new scene and add a :ref:"
"`Node <class_Node>` named ``Main``. Click the \"Instance\" button and select "
"your saved ``Player.tscn``."
msgstr ""
"이제 이 모두를 모을 차례입니다. 새 씬을 만들고 ``Main`` 이라는 이름의 :ref:"
"`Node <class_Node>` 를 만드세요. \"인스턴스\" 버튼을 누르고 저장한 ``Player."
"tscn`` 을 선택하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:630
msgid "See :ref:`doc_instancing` to learn more about instancing."
msgstr "인스턴스에 대해 더 알고 싶다면 :ref:`doc_instancing` 로 가세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:632
msgid ""
"Now, add the following nodes as children of ``Main``, and name them as shown "
"(values are in seconds):"
msgstr ""
"``Main`` 의 자식으로 다음의 노드들을 추가하고, 여기에서 설명하는 대로 이름을 "
"지으세요 (값은 초 단위 입니다):"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:635
msgid ""
":ref:`Timer <class_Timer>` (named ``MobTimer``) - to control how often mobs "
"spawn"
msgstr ""
":ref:`Timer <class_Timer>` (``MobTimer`` 라고 이름지음) - 얼마나 자주 적이 스"
"폰하는지를 조절함"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:636
msgid ""
":ref:`Timer <class_Timer>` (named ``ScoreTimer``) - to increment the score "
"every second"
msgstr ""
":ref:`Timer <class_Timer>` (``ScoreTimer`` 라고 이름지음) - 매 초마다 점수를 "
"증가시킴"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:637
msgid ""
":ref:`Timer <class_Timer>` (named ``StartTimer``) - to give a delay before "
"starting"
msgstr ""
":ref:`Timer <class_Timer>` (``StratTimer`` 라고 이름지음) - 시작하기 전에 지"
"연시간을 줌"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:638
msgid ""
":ref:`Position2D <class_Position2D>` (named ``StartPosition``) - to indicate "
"the player's start position"
msgstr ""
":ref:`Position2D <class_Position2D>` (``StartPosition`` 이라고 이름지음) - 플"
"레이어의 시작 위치를 표시함"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:640
msgid ""
"Set the ``Wait Time`` property of each of the ``Timer`` nodes as follows:"
msgstr "각  ``Timer`` 마다 ``Wait Time`` 속성을 다음과 같이 설정하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:643
msgid "``MobTimer``: ``0.5``"
msgstr "``MobTimer``: ``0.5``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:644
msgid "``ScoreTimer``: ``1``"
msgstr "``ScoreTimer``: ``1``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:645
msgid "``StartTimer``: ``2``"
msgstr "``StartTimer``: ``2``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:647
msgid ""
"In addition, set the ``One Shot`` property of ``StartTimer`` to \"On\" and "
"set ``Position`` of the ``StartPosition`` node to ``(240, 450)``."
msgstr ""
"그리고, ``StartTimer`` 속성의 ``One Shot`` 을 \"On\"으로 설정하고 "
"``StartPosition`` 노드의 ``Position`` 을 ``(240, 450)`` 으로 설정하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:651
msgid "Spawning mobs"
msgstr "적 스폰하기"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:653
msgid ""
"The Main node will be spawning new mobs, and we want them to appear at a "
"random location on the edge of the screen. Add a :ref:`Path2D "
"<class_Path2D>` node named ``MobPath`` as a child of ``Main``. When you "
"select ``Path2D``, you will see some new buttons at the top of the editor:"
msgstr ""
"메인 노드는 새로운 적들을 스폰할 것이고 우리는 그들이 화면 모서리 아무 위치에"
"서나 나타나도록 만들고 싶습니다. :ref:`Path2D <class_Path2D>` 노드를 "
"``Main`` 의 자식으로 추가하고 ``MobPath`` 라고 이름지으세요. ``Path2D`` 를 선"
"택한다면, 당신은 에디터 위쪽에 새로운 버튼들이 보일 것입니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:660
msgid ""
"Select the middle one (\"Add Point\") and draw the path by clicking to add "
"the points at the corners shown. To have the points snap to the grid, make "
"sure \"Snap to Grid\" is checked. This option can be found under the "
"\"Snapping options\" button to the left of the \"Lock\" button, appearing as "
"a series of three vertical dots."
msgstr ""
"가운데 것을 선택하고 (\"포인트 추가\") 클릭으로 모서리에 포인트를 추가하고 경"
"로를 그립니다. 포인트가 그리드에 스냅되게 하려면, \"그리드에 스냅\"이 체크되"
"어있어야 합니다. 이 설정은 \"잠금\" 버튼 왼쪽과 \"스냅 설정\" 버튼 옆의 세 개"
"의 점에서 찾을 수 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:668
msgid ""
"Draw the path in *clockwise* order, or your mobs will spawn pointing "
"*outwards* instead of *inwards*!"
msgstr ""
"*시계 방향* 으로 그리세요, 그렇지 않으면 적들은 *안쪽* 이 아닌 *바깥쪽* 으로 "
"향할 것입니다!"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:671
msgid ""
"After placing point ``4`` in the image, click the \"Close Curve\" button and "
"your curve will be complete."
msgstr ""
"이미지에서 ``4`` 포인트를 찍고 난 후, \"커브 닫기\" 버튼을 누르면 커브가 완성"
"됩니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:674
msgid ""
"Now that the path is defined, add a :ref:`PathFollow2D <class_PathFollow2D>` "
"node as a child of ``MobPath`` and name it ``MobSpawnLocation``. This node "
"will automatically rotate and follow the path as it moves, so we can use it "
"to select a random position and direction along the path."
msgstr ""
"이제 경로를 정의하기 위해, :ref:`PathFollow2D <class_PathFollow2D>` 노드를 "
"``MobPath`` 의 자식으로 추가한 후, ``MobSpawnLocation`` 이라고 이름짓습니다. "
"이 노드는 자동으로 회전하고 이동하면서 경로를 따라갈 것입니다, 그래서 우리는 "
"이걸로 경로를 따라 임의의 위치와 방향을 선택하기 위해 사용할 수 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:680
msgid "Main script"
msgstr "메인 스크립트"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:682
msgid ""
"Add a script to ``Main``. At the top of the script, we use ``export "
"(PackedScene)`` to allow us to choose the Mob scene we want to instance."
msgstr ""
"``Main`` 에 스크립트를 추가합니다. 스크립트의 위에 ``export (PackedScene)`` "
"를 사용해서 우리가 인스턴스하길 원하는 적 씬을 고를 수 있도록 만듭니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:722
msgid ""
"Drag ``Mob.tscn`` from the \"FileSystem\" panel and drop it in the ``Mob`` "
"property under the Script Variables of the ``Main`` node."
msgstr ""
"\"파일 시스템\" 패널에서 ``Mob.tscn`` 을 드래그하고 ``Main`` 노드의 스크립트 "
"속성 아래 ``Mob`` 속성에 드랍하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:725
msgid ""
"Next, click on the Player and connect the ``hit`` signal. We want to make a "
"new function named ``game_over``, which will handle what needs to happen "
"when a game ends. Type \"game_over\" in the \"Method In Node\" box at the "
"bottom of the \"Connecting Signal\" window. Add the following code, as well "
"as a ``new_game`` function to set everything up for a new game:"
msgstr ""
"다음으로, 플레이어를 클릭하고 ``hit`` 시그널과 연결하세요. 우리는 "
"``game_over`` 라는 새로운 함수를 만들어서, 게임이 끝날 때 발생하도록 조절할 "
"것입니다. \"시그널 연결\" 창 아래 \"Method In Node\" 박스에 \"game_over\" 라"
"고 치세요. 다음의 코드를 추가하고 ``new_game`` 함수를 추가하여 새로운 게임을 "
"위한 모든 것들을 설정하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:762
msgid ""
"Now connect the ``timeout()`` signal of each of the Timer nodes "
"(``StartTimer``, ``ScoreTimer`` ,and ``MobTimer``). ``StartTimer`` will "
"start the other two timers. ``ScoreTimer`` will increment the score by 1."
msgstr ""
"이제 각 타이머 노드 (``StartTimer``, ``ScoreTimer`` ,그리고 ``MobTimer``) 의 "
"``timeout()`` 시그널을 연결하세요. ``StartTimer`` 는 나머지 두 타이머를 시작"
"하게 만들 것입니다. ``ScoreTimer`` 는 점수가 1씩 증가하게 합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:789
msgid ""
"In ``_on_MobTimer_timeout()``, we will create a mob instance, pick a random "
"starting location along the ``Path2D``, and set the mob in motion. The "
"``PathFollow2D`` node will automatically rotate as it follows the path, so "
"we will use that to select the mob's direction as well as its position."
msgstr ""
"``_on_MobTimer_timeout()`` 에서 우리는 몹 인스턴스를 만들고, ``Path2D`` 에 따"
"라 무작위 시작점을 결정하고, 적이 움직이도록 설정할 것입니다. "
"``PathFollow2D`` 노드는 자동으로 경로를 따라 돌고, 그래서 이걸로 적들의 위치"
"와 방향을 선택하기 위해서 사용할 수 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:795
msgid ""
"Note that a new instance must be added to the scene using ``add_child()``."
msgstr "새로운 인스턴스는 ``add_child()`` 를 사용해야 추가할 수 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:798
msgid ""
"Now click on ``MobTimer`` in the scene window then head to inspector window, "
"switch to node view then click on ``timeout()`` and connect the signal."
msgstr ""
"이제 씬 창에서 ``MobTimer`` 를 클릭하고 인스펙터 창으로 가서, 노드 화면으로 "
"바꾼 후 ``timeout()`` 을 클릭하고 시그널을 연결합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:801
msgid "Add the following code:"
msgstr "다음의 코드를 추가하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:848
msgid ""
"In functions requiring angles, GDScript uses *radians*, not degrees. If "
"you're more comfortable working with degrees, you'll need to use the "
"``deg2rad()`` and ``rad2deg()`` functions to convert between the two."
msgstr ""
"각도가 필요한 기능에서, GDScript는 각도가 아닌, *라디안* 을 사용합니다. 각도"
"로 좀 더 편한 작업을 하고싶다면, ``deg2rad()`` 와 ``rad2deg()`` 함수로 이 둘"
"을 전환할 수 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:854
msgid "HUD"
msgstr "HUD"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:856
msgid ""
"The final piece our game needs is a UI: an interface to display things like "
"score, a \"game over\" message, and a restart button. Create a new scene, "
"and add a :ref:`CanvasLayer <class_CanvasLayer>` node named ``HUD``. \"HUD\" "
"stands for \"heads-up display\", an informational display that appears as an "
"overlay on top of the game view."
msgstr ""
"게임에 마지막으로 필요한 것은 UI입니다: 인터페이스로 화면에 점수, \"게임 오버"
"\" 메시지, 재시작 버튼을 보여줍니다. 새 씬을 만들고,  :ref:`CanvasLayer "
"<class_CanvasLayer>` 노드를 추가하고 ``HUD`` 라고 이름지으세요. \"HUD\"는 "
"\"heads-up display\"의 약자로, 정보가 게임 화면 앞에 덮어씌우는 방식입니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:862
msgid ""
"The :ref:`CanvasLayer <class_CanvasLayer>` node lets us draw our UI elements "
"on a layer above the rest of the game, so that the information it displays "
"isn't covered up by any game elements like the player or mobs."
msgstr ""
":ref:`CanvasLayer <class_CanvasLayer>` 노드는 게임 위 레이어에 우리의 UI 요소"
"들을 그릴수 있게 해주고, 이로써 보여지는 정보가 플레이어나 적과 같은 게임 요"
"소들에 의해 가려지지 않게 만듭니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:866
msgid "The HUD displays the following information:"
msgstr "HUD는 다음의 정보들을 보여줍니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:868
msgid "Score, changed by ``ScoreTimer``."
msgstr "점수, ``ScoreTimer`` 가 바꿈."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:869
msgid "A message, such as \"Game Over\" or \"Get Ready!\""
msgstr "메시지, \"Game Over\"나 \"Get Ready!\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:870
msgid "A \"Start\" button to begin the game."
msgstr "게임을 시작하기 위한 \"Start\" 버튼."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:872
msgid ""
"The basic node for UI elements is :ref:`Control <class_Control>`. To create "
"our UI, we'll use two types of :ref:`Control <class_Control>` nodes: :ref:"
"`Label <class_Label>` and :ref:`Button <class_Button>`."
msgstr ""
"UI 요소에 기초가 되는 노드는 :ref:`Control <class_Control>` 입니다. UI를 만들"
"기 위해, 우리는 두 가지 형식의 :ref:`Control <class_Control>` 노드를 쓸겁니"
"다: :ref:`Label <class_Label>` 과 :ref:`Button <class_Button>` 입니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:876
msgid "Create the following as children of the ``HUD`` node:"
msgstr "다음에 맞춰 ``HUD`` 노드의 자식으로 추가하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:878
msgid ":ref:`Label <class_Label>` named ``ScoreLabel``."
msgstr "``ScoreLabel`` 로 이름지은 :ref:`Label <class_Label>`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:879
msgid ":ref:`Label <class_Label>` named ``MessageLabel``."
msgstr "``MessageLabel`` 로 이름지은 :ref:`Label <class_Label>`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:880
msgid ":ref:`Button <class_Button>` named ``StartButton``."
msgstr "``StartButton`` 으로 이름지은 :ref:`Button <class_Button>`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:881
msgid ":ref:`Timer <class_Timer>` named ``MessageTimer``."
msgstr "``MessageTimer`` 로 이름지은 :ref:`Timer <class_Timer>`."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:883
msgid ""
"**Anchors and Margins:** ``Control`` nodes have a position and size, but "
"they also have anchors and margins. Anchors define the origin - the "
"reference point for the edges of the node. Margins update automatically when "
"you move or resize a control node. They represent the distance from the "
"control node's edges to its anchor. See :ref:"
"`doc_design_interfaces_with_the_control_nodes` for more details."
msgstr ""
"**앵커(Anchors)와 마진(Margins):** ``Control`` 노드는 위치와 크기를 가지고 있"
"고, 앵커과 마진 또한 가지고 있습니다. 앵커는 중심은 정의합니다 - 노드의 모서"
"리를 위한 참고 포인트. 마진은 컨트롤 노드를 움직이거나 크기를 조절할 때 자동"
"으로 업데이트됩니다. 이것은 컨트롤 노드들의 모서리가 앵커로부터 얼마나 떨어"
"져 있는 지를 나타냅니다. 더 자세한 설명은 :ref:"
"`doc_design_interfaces_with_the_control_nodes` 를 참고하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:890
msgid ""
"Arrange the nodes as shown below. Click the \"Anchor\" button to set a "
"Control node's anchor:"
msgstr ""
"하단에 보이는 대로 노드를 정렬하세요. \"Anchor\" 버튼을 클릭해 컨트롤 노드의 "
"앵커를 설정하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:895
msgid ""
"You can drag the nodes to place them manually, or for more precise "
"placement, use the following settings:"
msgstr ""
"당신은 노드들을 드래그해서 수동으로 놓을 수도 있습니다, 혹은 더 정확한 방법으"
"로는, 다음의 설정을 사용하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:899
msgid "ScoreLabel"
msgstr "ScoreLabel"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:901
msgid "``Layout``: \"Center Top\""
msgstr "``레이아웃``: \"Center Top\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:902
#: ../../docs/getting_started/step_by_step/your_first_game.rst:915
#: ../../docs/getting_started/step_by_step/your_first_game.rst:928
msgid "``Margin``:"
msgstr "``Margin``:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:904
msgid "Left: ``-25``"
msgstr "Left: ``-25``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:905
msgid "Top: ``0``"
msgstr "Top: ``0``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:906
msgid "Right: ``25``"
msgstr "Right: ``25``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:907
msgid "Bottom: ``100``"
msgstr "Bottom: ``100``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:909
msgid "Text: ``0``"
msgstr "Text: ``0``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:912
msgid "MessageLabel"
msgstr "MessageLabel"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:914
msgid "``Layout``: \"Center\""
msgstr "``레이아웃``: \"Center\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:917
msgid "Left: ``-200``"
msgstr "Left: ``-200``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:918
msgid "Top: ``-150``"
msgstr "Top: ``-150``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:919
msgid "Right: ``200``"
msgstr "Right: ``200``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:920
msgid "Bottom: ``0``"
msgstr "Bottom: ``0``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:922
msgid "Text: ``Dodge the Creeps!``"
msgstr "Text: ``Dodge the Creeps!``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:925
msgid "StartButton"
msgstr "StartButton"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:927
msgid "``Layout``: \"Center Bottom\""
msgstr "``레이아웃``: \"Center Bottom\""

#: ../../docs/getting_started/step_by_step/your_first_game.rst:930
msgid "Left: ``-100``"
msgstr "Left: ``-100``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:931
msgid "Top: ``-200``"
msgstr "Top: ``-200``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:932
msgid "Right: ``100``"
msgstr "Right: ``100``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:933
msgid "Bottom: ``-100``"
msgstr "Bottom: ``-100``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:935
msgid "Text: ``Start``"
msgstr "Text: ``Start``"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:937
msgid ""
"To make the text of the ``MessageLabel`` fit the game's window click the "
"small icon next to your text property. This will open up a new window where "
"you can add a new line between the words. The default font for ``Control`` "
"nodes is small and doesn't scale well. There is a font file included in the "
"game assets called \"Xolonium-Regular.ttf\". To use this font, do the "
"following for each of the three ``Control`` nodes:"
msgstr ""
"``MessageLabel``\\ 의 텍스트가 게임 화면에 맞추기 위해 text 속성 옆에 작은 아"
"이콘을 클릭합니다. 그러면 단어 사이에 새 줄을 추가할 수 있는 새로운 창이 나타"
"납니다. ``Control`` 노드의 기본 폰트는 작고 잘 확장되지 않습니다. game assets"
"에 포함된 \"Xolonium-Regular.ttf\"는 폰트 파일입니다. 이 폰트를 사용하기 위"
"해 각 ``Control`` 노드마다 다음과 같이 하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:945
msgid "Under \"Custom Fonts\", choose \"New DynamicFont\""
msgstr "\"Custom Fonts\" 에서, \"새 DynamicFont\"를 선택하세요"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:949
msgid ""
"Click on the \"DynamicFont\" you added, and under \"Font Data\", choose "
"\"Load\" and select the \"Xolonium-Regular.ttf\" file. You must also set the "
"font's ``Size``. A setting of ``64`` works well."
msgstr ""
"추가한 \"DynamicFont\"를 클릭하시고, \"Font Data\"에서, \"Load\"를 눌러서 "
"\"Xolonium-Regular.ttf\" 파일을 선택하세요. 또한 폰트의 ``Size`` 도 설정해야 "
"합니다. ``64`` 정도가 좋습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:955
msgid "Now add this script to ``HUD``:"
msgstr "이제 ``HUD`` 에 이 스크립트를 추가하세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:974
msgid ""
"The ``start_game`` signal tells the ``Main`` node that the button has been "
"pressed."
msgstr "``start_game`` 시그널은 ``Main`` 노드에게 버튼이 눌려졌음을 알립니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:996
msgid ""
"This function is called when we want to display a message temporarily, such "
"as \"Get Ready\". On the ``MessageTimer``, set the ``Wait Time`` to ``2`` "
"and set the ``One Shot`` property to \"On\"."
msgstr ""
"이 함수는 우리가 원하는 메시지를 일시적으로 보여줄 때 호출됩니다, \"Get Ready"
"\" 처럼 말이죠. ``MessageTimer`` 에서, ``WaitTime`` 을 ``2`` 로 설정하고 "
"``OneShot`` 속성을 \"On\"으로 하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1026
msgid ""
"This function is called when the player loses. It will show \"Game Over\" "
"for 2 seconds, then return to the title screen and show the \"Start\" button."
msgstr ""
"이 함수는 플레이어가 패배했을 때 호출됩니다. 이것은 2초동안 \"Game Over\"를 "
"보여주고, 타이틀 화면으로 돌아와서 \"Start\" 버튼을 보여줍니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1043
msgid "This function is called by ``Main`` whenever the score changes."
msgstr "이 함수는 점수가 변경될 때마다 ``Main`` 에 의해서 호출됩니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1045
msgid ""
"Connect the ``timeout()`` signal of ``MessageTimer`` and the ``pressed()`` "
"signal of ``StartButton``."
msgstr ""
"``MessageTimer`` 의 ``timeout()`` 시그널과 ``StartButton`` 의 ``pressed()`` "
"를 연결하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1072
msgid "Connecting HUD to Main"
msgstr "메인에 HUD를 연결하기"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1074
msgid ""
"Now that we're done creating the ``HUD`` scene, save it and go back to "
"``Main``. Instance the ``HUD`` scene in ``Main`` like you did the ``Player`` "
"scene, and place it at the bottom of the tree. The full tree should look "
"like this, so make sure you didn't miss anything:"
msgstr ""
"이제 ``HUD`` 씬 만들기가 끝났습니다, 저장하고 다시 ``Main`` 으로 돌아갑니다. "
"``Player`` 씬에서 했듯이 ``HUD`` 씬을 ``Main`` 에 인스턴스하고, 트리의 맨 아"
"래에 위치시킵니다. 모든 트리는 이렇게 되어야 하므로, 놓친 것이 없는지 확인해"
"보세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1081
msgid ""
"Now we need to connect the ``HUD`` functionality to our ``Main`` script. "
"This requires a few additions to the ``Main`` scene:"
msgstr ""
"이제 ``HUD`` 기능을 ``Main`` 스크립트에 연결할겁니다. 여기에는 ``Main`` 씬에 "
"추가적인 것이 요구됩니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1084
msgid ""
"In the Node tab, connect the HUD's ``start_game`` signal to the "
"``new_game()`` function."
msgstr ""
"노드 탭에서, HUD의 ``start_game`` 시그널을 ``new_game()`` 함수에 연결하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1087
msgid ""
"In ``new_game()``, update the score display and show the \"Get Ready\" "
"message:"
msgstr ""
"``new_game()`` 에서, 점수 화면을 업데이트하고 \"Get Ready\" 메시지를 보이게 "
"합니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1102
msgid "In ``game_over()`` we need to call the corresponding ``HUD`` function:"
msgstr "``game_over()`` 에서는, 일치하는 ``HUD`` 함수를 호출해야 합니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1113
msgid ""
"Finally, add this to ``_on_ScoreTimer_timeout()`` to keep the display in "
"sync with the changing score:"
msgstr ""
"마지막으로, ``_on_ScoreTimer_timeout()`` 를 추가해서 점수가 바뀌는 것과 일치"
"한 화면을 유지하도록 합니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1125
msgid ""
"Now you're ready to play! Click the \"Play the Project\" button. You will be "
"asked to select a main scene, so choose ``Main.tscn``."
msgstr ""
"이제 실행할 준비가 끝났습니다! \"프로젝트 실행\" 버튼을 누르세요. 아마 메인 "
"씬을 선택하라고 물어볼 겁니다, ``Main.tscn`` 을 골라줍시다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1129
msgid "Finishing up"
msgstr "마무리 작업"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1131
msgid ""
"We have now completed all the functionality for our game. Below are some "
"remaining steps to add a bit more \"juice\" to improve the game experience. "
"Feel free to expand the gameplay with your own ideas."
msgstr ""
"우리는 게임의 모든 기능을 마친 상태입니다. 밑에 남아있는 단계는 게임의 경험"
"을 향상시킬 \"주스\"를 추가하는 것입니다. 독창적인 아이디어로 자유롭게 게임 "
"플레이를 확장시켜보세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1136
msgid "Background"
msgstr "배경(Background)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1138
msgid ""
"The default gray background is not very appealing, so let's change its "
"color. One way to do this is to use a :ref:`ColorRect <class_ColorRect>` "
"node. Make it the first node under ``Main`` so that it will be drawn behind "
"the other nodes. ``ColorRect`` only has one property: ``Color``. Choose a "
"color you like and drag the size of the ``ColorRect`` so that it covers the "
"screen."
msgstr ""
"기본 회색 배경은 그렇게 멋지지는 않습니다, 그래서 색깔을 바꿔봅시다. 그 방법"
"들 중 하나는 :ref:`ColorRect <class_ColorRect>` 노드를 사용하는 것입니다. "
"``Main`` 바로 밑 첫 번째 노드로 놓아서 다른 노드들 뒤에 그려지도록 하세요. "
"``ColorRect`` 는 오직 하나의 속성만 가지고 있습니다: ``Color`` 입니다. 원하"
"는 색깔을 고르고 ``ColorRect`` 의 크기를 조절해 화면을 덮도록 만듭시다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1145
msgid ""
"You can also add a background image, if you have one, by using a ``Sprite`` "
"node."
msgstr ""
"또한 ``Sprite`` 노드를 사용해서 갖고 있는 배경 사진을 추가하실수도 있습니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1149
msgid "Sound effects"
msgstr "사운드 이펙트(Sound effects)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1151
msgid ""
"Sound and music can be the single most effective way to add appeal to the "
"game experience. In your game assets folder, you have two sound files: "
"\"House In a Forest Loop.ogg\" for background music, and \"gameover.wav\" "
"for when the player loses."
msgstr ""
"사운드와 음악은 게임 경험을 멋지게 만들어주는 가장 효과적인 물건입니다. 게임 "
"에셋 폴더에서, 두 개의 사운드 파일을 찾으실 수 있습니다: \"House In a Forest "
"Loop.ogg\"는 배경 음악으로, \"gameover.wav\"는 플레이어가 죽었을 때 쓰면 됩니"
"다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1156
msgid ""
"Add two :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` nodes as children "
"of ``Main``. Name one of them ``Music`` and the other ``DeathSound``. On "
"each one, click on the ``Stream`` property, select \"Load\", and choose the "
"corresponding audio file."
msgstr ""
"두 개의 :ref:`AudioStreamPlayer <class_AudioStreamPlayer>` 노드를 ``Main`` "
"의 자식으로 추가하세요. 하나는 ``Music`` 으로, 다른 하나는 ``DeathSound`` 로 "
"이름 지으세요. 각각에서, ``Stream`` 속성을 클릭하시고 \"Load\"를 선택해서 이"
"름에 맞는 오디오 파일을 선택하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1161
msgid ""
"To play the music, add ``$Music.play()`` in the ``new_game()`` function and "
"``$Music.stop()`` in the ``game_over()`` function."
msgstr ""
"음악을 실행시키려면, ``new_game()`` 함수에 ``$Music.play()`` 를 추가하고 "
"``game_over()`` 함수에 ``$Music.stop()`` 을 추가하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1164
msgid "Finally, add ``$DeathSound.play()`` in the ``game_over()`` function."
msgstr ""
"마지막으로, ``game_over()`` 함수에 ``$DeathSound.play()`` 를 추가하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1167
msgid "Particles"
msgstr "파티클(Particles)"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1169
msgid ""
"For one last bit of visual appeal, let's add a trail effect to the player's "
"movement. Choose your ``Player`` scene and add a :ref:`Particles2D "
"<class_Particles2D>` node named ``Trail``."
msgstr ""
"마지막 시각적 효과를 위해, 플레이어의 움직임에 꼬리를 추가합시다. ``Player`` "
"씬을 선택하고 :ref:`Particles2D <class_Particles2D>` 노드를 추가하고 "
"``Trail`` 이라고 이름지으세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1173
msgid ""
"There are a large number of properties to choose from when configuring "
"particles. Feel free to experiment and create different effects. For the "
"effect in this example, use the following settings:"
msgstr ""
"파티클을 구성할 땐 많은 고를 수 있는 속성들이 있습니다. 다양한 이펙트들을 만"
"들고 자유롭게 경험해보세요. 이 예시의 이펙트를 위해서는, 다음의 설정을 사용하"
"세요:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1179
msgid ""
"You also need to create a ``Material`` by clicking on ``<null>`` and then "
"\"New ParticlesMaterial\". The settings for that are below:"
msgstr ""
"당신은 또한 ``<null>`` 에서 \"새 ParticlesMaterial\"을 클릭해서 ``Material`` "
"을 추가할 수도 있습니다. 이 설정은 다음과 같습니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1184
msgid ""
"To make the gradient for the \"Color Ramp\" setting, we want a gradient "
"taking the alpha (transparency) of the sprite from 0.5 (semi-transparent) to "
"0.0 (fully transparent)."
msgstr ""
"\"Color Ramp\" 설정에 그라디언트를 만들려면, 알파 (투명도)를 0.5 (반투명) 에"
"서 0.0 (완전 투명) 으로 설정하는 그라디언트가 필요합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1188
msgid ""
"Click \"New GradientTexture\", then under \"Gradient\", click \"New Gradient"
"\". You'll see a window like this:"
msgstr ""
"\"새 GradientTexture\"를 클릭하고, \"Gradient\" 아래에, \"새 Gradient\"를 클"
"릭하세요. 이렇게 생긴 창이 뜰 것입니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1193
msgid ""
"The left and right boxes represent the start and end colors. Click on each "
"and then click the large square on the right to choose the color. For the "
"first color, set the ``A`` (alpha) value to around halfway. For the second, "
"set it all the way to ``0``."
msgstr ""
"왼쪽과 오른쪽 상자는 시작과 끝 색상을 나타냅니다. 각각을 클릭하고 오른쪽 넓"
"은 사각형을 클릭해서 색상을 선택합니다. 첫 색상으로, ``A`` (알파) 값을 거의 "
"절반으로 설정합니다. 두 번째 색상으로 \n"
" ``0`` 으로 끝까지 설정합니다."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1198
msgid ""
"See :ref:`Particles2D <class_Particles2D>` for more details on using "
"particle effects."
msgstr ""
"파티클 이펙트를 사용하는 더 많은 정보는 :ref:`Particles2D "
"<class_Particles2D>` 를 참고하세요."

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1202
msgid "Project files"
msgstr "프로젝트 파일"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1205
msgid "You can find a completed version of this project at these locations:"
msgstr "당신은 여기서 이 프로젝트의 완성 버전을 확인하실 수 있습니다:"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1205
msgid "https://github.com/kidscancode/Godot3_dodge/releases"
msgstr "https://github.com/kidscancode/Godot3_dodge/releases"

#: ../../docs/getting_started/step_by_step/your_first_game.rst:1206
msgid "https://github.com/godotengine/godot-demo-projects"
msgstr "https://github.com/godotengine/godot-demo-projects"
