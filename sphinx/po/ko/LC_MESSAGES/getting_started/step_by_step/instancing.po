# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-04 16:27+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/instancing.rst:4
msgid "Instancing"
msgstr "인스턴스화(Instancing) 하기"

#: ../../docs/getting_started/step_by_step/instancing.rst:7
msgid "Introduction"
msgstr "소개"

#: ../../docs/getting_started/step_by_step/instancing.rst:9
msgid ""
"Creating a single scene and adding nodes into it might work for small "
"projects, but as a project grows in size and complexity, the number of nodes "
"can quickly become unmanageable. To address this, Godot allows a project to "
"be separated into any number of scenes. This provides you with a powerful "
"tool that helps you organize the different components of your game."
msgstr ""
"하나의 씬을 만들고 노드를 추가하는 것은 작은 프로젝트에는 적합할지도 모릅니"
"다. 하지만 프로젝트의 규모가 커지고 복잡해지면서, 수많은 노드들은 곧바로 다루"
"기 어려워집니다. 이를 해결하기 위해 Godot에서는 프로젝트를 여러 개의 씬으로 "
"나눌 수 있습니다. 이것으로 게임의 서로 다른 구성 요소를 조직하는데 큰 도움이 "
"될 수 있습니다."

#: ../../docs/getting_started/step_by_step/instancing.rst:15
msgid ""
"In :ref:`doc_scenes_and_nodes` you learned that a scene is a collection of "
"nodes organized in a tree structure, with a single node as the tree root."
msgstr ""
":ref:`doc_scenes_and_nodes`\\ 에서 말하길, 씬은 노드들이 트리 구조로 조직된 "
"묶음이고, 하나의 노드가 트리의 루트가 된다고 했습니다."

#: ../../docs/getting_started/step_by_step/instancing.rst:20
msgid ""
"You can create as many scenes as you like and save them to disk. Scenes "
"saved in this manner are called \"Packed Scenes\" and have a ``.tscn`` "
"filename extension."
msgstr ""
"많은 씬을 원하는 만큼 만들어서 디스크에 저장할 수 있습니다. 씬은 \"압축된 씬"
"(Packed Scenes)\"이라고 불리는 방식으로 저장되고, 파일 확장자는 ``.tscn``\\ "
"입니다."

#: ../../docs/getting_started/step_by_step/instancing.rst:26
msgid ""
"Once a scene has been saved, it can be instanced into another scene as if it "
"were any other node."
msgstr ""
"일단 씬 하나를 저장한다면, 다른 씬으로 인스턴스화할 수 있습니다. 다른 노드들"
"처럼 말이죠."

#: ../../docs/getting_started/step_by_step/instancing.rst:31
msgid "In the above picture, Scene B was added to Scene A as an instance."
msgstr "위 그림에서 씬 B는 씬 A에 인스턴스로 추가되었습니다."

#: ../../docs/getting_started/step_by_step/instancing.rst:34
msgid "Instancing by example"
msgstr "예제를 통해 인스턴스화하기"

#: ../../docs/getting_started/step_by_step/instancing.rst:36
msgid ""
"To learn how instancing works, let's start by downloading a sample project: :"
"download:`instancing.zip <files/instancing.zip>`."
msgstr ""
"어떻게 인스턴스화가 작동하는지 배우기 위해, 먼저 샘플 프로젝트를 다운로드합시"
"다: :download:`instancing.zip <files/instancing.zip>`."

#: ../../docs/getting_started/step_by_step/instancing.rst:39
msgid ""
"Unzip this project anywhere you like. Then open Godot and add this project "
"to the project manager using the 'Import' button:"
msgstr ""
"원하는 위치에 압축을 푸세요. 그런 다음 Godot를 켜고, 프로젝트 매니저에서 '가"
"져오기(Import)' 버튼으로 이 프로젝트를 추가하세요:"

#: ../../docs/getting_started/step_by_step/instancing.rst:44
msgid ""
"Browse to the folder you extracted and open the \"project.godot\" file you "
"can find inside it. After doing this, the new project will appear on the "
"list of projects. Edit the project by pressing the 'Edit' button."
msgstr ""
"압축을 푼 폴더를 검색하고 그 안에서 찾은 \"project.godot\" 파일을 여세요. 그"
"러면 새 프로젝트가 프로젝트 목록에 나타납니다. '편집하기(Edit)' 버튼을 눌러 "
"프로젝트를 편집하세요."

#: ../../docs/getting_started/step_by_step/instancing.rst:48
msgid ""
"This project contains two scenes: \"Ball.tscn\" and \"Main.tscn\". The ball "
"scene uses a :ref:`RigidBody2D <class_RigidBody2D>` to provide physics "
"behavior while the main scene has a set of obstacles for the ball to collide "
"with (using :ref:`StaticBody2D <class_StaticBody2D>`)."
msgstr ""
"이 프로젝트에는 두 개의 씬이 있습니다: \"Ball.tscn\"과 \"Main.tscn\"입니다. "
"Ball 씬에는 물리적인 동작을 주는 :ref:`RigidBody2D <class_RigidBody2D>`\\ 를 "
"사용했고, Main 씬에는 (:ref:`StaticBody2D <class_StaticBody2D>`\\ 를 사용해"
"서) 공과 충돌하는 장애물 세트가 있습니다."

#: ../../docs/getting_started/step_by_step/instancing.rst:57
msgid "Open the ``Main`` scene, and then select the root node:"
msgstr "``Main`` 씬을 열고 루트 노드를 선택하세요:"

#: ../../docs/getting_started/step_by_step/instancing.rst:61
#, fuzzy
msgid ""
"We want to add an instance of the ``Ball`` scene as a child of ``Main``. "
"Click the \"link\"-shaped button (its hover-text says \"Instance a scene "
"file as a Node.\") and select the ``Ball.tscn`` file."
msgstr ""
"``Ball`` 씬의 인스턴스를 ``Main`` 씬의 자손으로 추가할 것입니다. \"사슬\" 모"
"양 버튼을 클릭하세요 (마우스를 올리면 \"씬 파일을 노드로 인스턴스해요.\"라고 "
"뜹니다), 그리고 ``Ball.tscn`` 파일을 선택하세요."

#: ../../docs/getting_started/step_by_step/instancing.rst:67
msgid ""
"The ball will be placed at the top-left corner of the screen area (this is "
"``(0, 0)`` in screen coordinates). Click and drag the ball somewhere near "
"the top-center of the scene:"
msgstr ""
"Ball은 화면 영역의 왼쪽 위에 있습니다 (그 곳이 화면 좌표에서 ``(0, 0)``\\ 인 "
"곳입니다). 공을 클릭하고 화면 가운데의 조금 위로 드래그하세요:"

#: ../../docs/getting_started/step_by_step/instancing.rst:73
msgid "Press \"Play\" and watch the ball fall to the bottom of the screen:"
msgstr "\"실행(Play)\" 버튼을 눌러서 공이 화면 아래로 떨어지는지 확인하세요:"

#: ../../docs/getting_started/step_by_step/instancing.rst:78
msgid "Multiple instances"
msgstr "여러 인스턴스"

#: ../../docs/getting_started/step_by_step/instancing.rst:80
msgid ""
"You can add as many instances as you like to a scene, either by using the "
"\"Instance\" button again, or by clicking on the ball instance and pressing :"
"kbd:`Ctrl + D` (:kbd:`Cmd + D` on macOS) to duplicate it:"
msgstr ""
"씬에 원하는 만큼 많은 인스턴스를 추가할 수 있습니다. 다시 \"인스턴스"
"(Instance)\" 버튼을 누르거나, 공 인스턴스를 클릭하고 :kbd:`Ctrl + D` (macOS"
"는 :kbd:`Cmd + D`)를 누르면 복제됩니다:"

#: ../../docs/getting_started/step_by_step/instancing.rst:86
msgid "Run the scene again and all of the balls will fall."
msgstr "씬을 다시 실행하면 모든 공이 떨어질 것입니다."

#: ../../docs/getting_started/step_by_step/instancing.rst:91
msgid "Editing instances"
msgstr "인스턴스 편집하기"

#: ../../docs/getting_started/step_by_step/instancing.rst:93
msgid ""
"Open the ``Ball`` scene, expand the ``PhysicsMaterial`` by clicking on it, "
"and set the ``Bounce`` property to ``1``."
msgstr ""
"``Ball`` 씬을 열고, ``PhysicsMaterial`` 옆의 ㅁPhysics를 클릭해 확장한 다음 "
"``Bounce`` 속성을 ``1``로 설정합니다."

#: ../../docs/getting_started/step_by_step/instancing.rst:98
msgid ""
"Press \"Play\" and notice that all of the instanced balls are now much more "
"bouncy. Because the instanced balls are based on the saved scene, changes to "
"that scene will affect all instances."
msgstr ""
"\"실행(Play)\"을 누르면 모든 인스턴스화된 공이 이제 더 많이 튕기는 것을 볼 "
"수 있습니다. 인스턴스화된 공은 저장한 씬 기반이기 때문에 씬의 변경사항도 인스"
"턴스에 영향을 줍니다."

#: ../../docs/getting_started/step_by_step/instancing.rst:102
msgid ""
"You can also adjust individual instances. Set the bounce value back to ``0`` "
"and then in the ``Main`` scene, select one of the instanced balls. Resources "
"like ``PhysicsMaterial`` are shared between instances by default, so we need "
"to make it unique. Click on the tools button in the top-right of the "
"Inspector dock and select \"Make Sub-Resources Unique\". Set its ``Bounce`` "
"to ``1`` and press \"Play\"."
msgstr ""
"개별 인스턴스를 조정할 수도 있습니다. 바운스 값을 다시 ``0``\\ 으로 설정한 다"
"음 ``Main`` 장면에서 인스턴스화된 공 중 하나를 선택합니다. "
"``PhysicsMaterial``\\ 과 같은 리소스는 기본적으로 인스턴스 간에 공유되므로 고"
"유하게 만들어야 합니다. 인스펙터(Inspector) 독의 오른쪽 상단에 있는 도구 버튼"
"을 클릭하고 \"하위 리소스를 고유하게 만들기(Make Sub-Resources Unique)\"를 선"
"택합니다. 이 인스턴스의 ``Bounce``\\ 속성을 ``1``로 설정하고 \"재생\"을 누릅"
"니다."

#: ../../docs/getting_started/step_by_step/instancing.rst:111
msgid ""
"Notice that a grey \"revert\" button appears next to the adjusted property. "
"When this button is present, it means you modified a property in the "
"instanced scene to override its value in the saved scene. Even if that "
"property is modified in the original scene, the custom value will remain. "
"Pressing the revert button will restore the property to the value in the "
"saved scene."
msgstr ""
"조정한 속성 옆에 회색 \"되돌리기(Revert)\" 버튼이 나타났습니다. 이 버튼이 있"
"다는 것은 당신이 저장된 씬의 값을 덮어씌우기 위해 인스턴스화된 씬의 속성을 수"
"정했다는 것을 의미합니다. 원본 씬에서 속성을 수정하더라도 사용자 지정 값은 유"
"지됩니다. 되돌리기 버튼을 누르면 저장된 씬의 값으로 속성을 복원할 수 있습니"
"다."

#: ../../docs/getting_started/step_by_step/instancing.rst:119
msgid "Conclusion"
msgstr "결론"

#: ../../docs/getting_started/step_by_step/instancing.rst:121
msgid ""
"Instancing can be useful when you want to create many copies of the same "
"object. It is also possible to create instances in code by using GDScript, "
"see :ref:`doc_instancing_continued`."
msgstr ""
"인스턴스화하는 것은 많은 양의 오브젝트 사본을 만들 때 유용합니다. GDScript로"
"도 인스턴스를 만들 수 있습니다. :ref:`doc_instancing_continued`\\ 를 참고하세"
"요."
