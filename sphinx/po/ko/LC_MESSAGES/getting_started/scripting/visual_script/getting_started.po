# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-10 11:47+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:4
msgid "Getting started with Visual Scripting"
msgstr "Visual Scripting 시작하기"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:6
msgid ""
"As with everything in Godot, we prioritize a good experience over copying or "
"integrating third party solutions which might not fit nicely in the current "
"workflow. This led us to write our own version of how we believe this "
"feature would work best with the engine."
msgstr ""
"Godot의 모든 기능과 마찬가지로, 우리는 현재 워크플로우에 적합하지 않을 수 있"
"는 타사 솔루션을 복사하거나 통합하는 것에 대한 좋은 경험을 우선순위로 둡니"
"다. 이것으로 우리는 이 기능이 엔진에서 가장 잘 작동할 것이라고 생각하는 우리"
"의 설명을 적을 수 있었습니다."

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:10
msgid ""
"In Godot, a Visual Script fits smoothly together with regular scripts in the "
"Editor tab"
msgstr ""
"Godot에서, Visual Script가 에디터 탭의 일반 스크립트와 매끄럽게 호환합니다"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:15
msgid ""
"In fact, Visual Scripting integrates so well to Godot that it's hard to "
"believe it was added only in version 3.0. This is because, when editing, the "
"rest of Godot panels and docks act like a palette from where you can drag "
"and drop all sorts of information to the script canvas:"
msgstr ""
"사실, Visual Scripting이 Godot에 잘 통합되기 때문에 버전 3.0에 추가되었다고 "
"보기 어렵습니다. 왜냐하면 Visual Script를 편집할 때, Godot 패널과 독의 나머"
"지 부분이 모든 종류의 정보를 스크립트 캔버스로 끌어다 놓을 수 있는 팔레트처"
"럼 작동하기 때문입니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:23
msgid "Creating a script"
msgstr "스크립트 생성하기"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:25
msgid ""
"Creating scripts works the same as with other scripting languages: Select "
"any node in the scene and push the \"New Script\" button at the top right "
"corner of the Scene Tree dock:"
msgstr ""
"스크립트 생성은 다른 스크립팅 언어와 동일하게 작동합니다: 씬의 아무 노드나 선"
"택하고 씬 트리 독의 오른쪽 상단 모서리에 있는 \"새 스크립트\" 버튼을 누릅니"
"다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:31
msgid ""
"Once it opens, the script type \"Visual Script\" must be selected from the "
"drop down list. The script extension must be \".vs\" (for Visual Script!)."
msgstr ""
"열리면 드롭 다운 목록에서 스크립트 타입 \"Visual Script\"를 선택해야 합니다. "
"스크립트 확장은 \".vs\"(Visual Script를 위해!) 이어야 합니다."

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:37
msgid ""
"Finally, the Script Editor will open, allowing you to start editing the "
"visual script:"
msgstr ""
"마침내, Script 에디터가 열리고, Visual script 편집을 시작할 수 있습니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:43
msgid "Adding a function"
msgstr "함수 추가하기"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:45
msgid ""
"Unlike other visual scripting implementations, Visual Scripting in Godot is "
"heavily based on functions. This happens because it uses the same interface "
"to communicate with the engine as other scripting engines. In Godot, the "
"scripting interface is universal and all implementations conform to it."
msgstr ""
"다른 시각적 스크립팅 실행과 달리 Godot의 Visual Scripting은 함수를 기반으로 "
"합니다. 왜냐하면 다른 스크립팅 엔진처럼 엔진과 통신하는 동일한 인터페이스를 "
"사용하기 때문에 일어납니다. Godot에서는 스크립팅 인터페이스가 보편적이며 모"
"든 실행이 이 인터페이스를 준수합니다."

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:49
msgid "A function is an individual canvas with nodes connected."
msgstr "함수는 노드가 연결된 개별 캔버스입니다."

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:51
msgid ""
"A single script can contain many functions, each of which will have a canvas "
"of its own, allowing for more organization."
msgstr ""
"단일 스크립트에는 많은 함수를 포함할 수 있으며, 각각 고유의 캔버스를 갖고 있"
"고, 더 많은 구성을 할 수 있습니다."

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:53
msgid "There are three main ways to add functions in a script:"
msgstr "스크립트에 함수를 추가하는 세 가지 주요 방법이 있습니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:56
msgid "Overriding a virtual function"
msgstr "가상 함수 재정의하기(Override)"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:58
msgid ""
"Most types of nodes and other types of objects in Godot contain virtual "
"functions. These are functions that will be called (run your code) when "
"something happens and can be looked up in the reference. Virtual functions "
"are listed when pressing the \"Override\" icon in the member panel:"
msgstr ""
"Godot에 있는 대부분의 타입의 노드와 다른 타입의 객체는 가상 함수를 포함합니"
"다. 이들은 무언가가 발생했을 때 (코드를 실행하여) 호출될 함수로 참조에서 볼 "
"수 있습니다. 멤버 패널에서 \"재정의\" 아이콘을 누르면 가상 함수가 나열됩니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:65
msgid ""
"In the following example, a function will be executed when the node is "
"loaded and added to the running scene. For this, the _ready() virtual method "
"will be overridden:"
msgstr ""
"다음 예시에서는, 노드를 불러와서 실행 씬에 추가될 때 함수가 실행될 것입니다. "
"이를 위해 _ready () 가상 메서드가 재정의 될 것입니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:71
msgid "Finally, a canvas appears for this function, showing the override:"
msgstr "마침내, 이 함수를 위해 재정의를 보여주는 캔버스가 나타났습니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:76
msgid ""
"As some functions expect you to return a value, they will also add a return "
"node where such value is supposed to be provided:"
msgstr ""
"일부 함수는 값을 반환할 것을 예상하며, 그들에게는 반환 노드를 추가하여 해당 "
"값을 제공해야 합니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:83
msgid "Connecting a signal to a function"
msgstr "함수에 시그널 연결하기"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:85
msgid ""
"Nodes in a tree emit signals when something happens. Godot uses signals for "
"all sorts of things. A typical example would be a button that emits a "
"\"pressed\" signal when actually pressed."
msgstr ""
"트리의 노드는 무언가가 발생하면 시그널을 방출(emit)합니다. Godot는 모든 종류"
"의 시그널을 사용합니다. 전형적인 예로 버튼이 실제로 눌렀을 때 \"pressed\"(눌"
"렸음) 시그널을 내보내는 것이 있습니다."

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:88
msgid ""
"For this, a node must be selected and the Node tab opened. This will allow "
"inspecting the signals. Once they are displayed, connect the \"pressed\" "
"signal:"
msgstr ""
"이를 위해, 노드를 선택하고 Node 탭을 열어줍니다. 이렇게 하면 시그널을 볼 수 "
"있습니다. 일단 보여지면, \"pressed\" 시그널을 연결하십시오:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:94
msgid ""
"This will open the connection dialog. In this dialog, you must select the "
"node where the signal will be connected to, and the function that will "
"receive the signal:"
msgstr ""
"연결 대화 상자가 열립니다. 이 대화 상자에서 시그널을 연결할 노드를 선택하고 "
"시그널을 받을 함수를 선택해야 합니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:100
msgid ""
"If this is done right, a new function will be created in our script and a "
"signal will automatically be connected to it:"
msgstr ""
"잘 작동된다면, 스크립트에 새 함수가 만들어지며 시그널이 자동으로 연결됩니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:107
msgid "Creating a function manually"
msgstr "수동으로 함수 만들기"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:109
msgid ""
"The last way to create functions is to do it manually. In general, this is "
"not as common unless you really need it. Custom functions work when another "
"(or the same) script calls them manually. The main use cases for this are "
"breaking a larger function up into several manageable chunks and reusing "
"your visual code."
msgstr ""
"마지막 방법으로는 함수를 수동으로 생성하는 것입니다. 일반적으로 정말로 필요"
"한 경우가 아니라면 수동 생성은 쓰이지 않습니다. 커스텀 함수는 다른 (또는 같"
"은) 스크립트가 수동으로 호출할 때 작동합니다. 주요 사용 사례로는 함수를 더 작"
"게 분리하는 것이나, 시각적 코드를 재 사용하는 것입니다."

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:113
msgid ""
"To create a function manually, push the big \"Plus\" button, and a new "
"function will be added with a default name:"
msgstr ""
"함수를 수동으로 생성하려면, 큰 \"더하기\" 버튼을 누르세요, 그러면 기본 이름으"
"로 새로운 함수가 추가됩니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:119
msgid ""
"This will add a new function, which can be renamed by simply double clicking "
"its name:"
msgstr "이름을 더블 클릭하여 이름을 바꿀 수 있는 새 함수가 추가됩니다:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:125
msgid ""
"To edit the \"arguments\" this function can get (the values you pass to it "
"when you call this function), simply click the Function node and check the "
"inspector:"
msgstr ""
"이 함수가 가질 수 있는 \"인수(arguments)\"를 편집하려면 (이 함수를 호출할 때 "
"전달하는 값), 함수 노드를 클릭하고 인스펙터를 확인하세요:"

#: ../../docs/getting_started/scripting/visual_script/getting_started.rst:131
msgid "More on that will be explained later in this document."
msgstr "자세한 내용은 이 문서의 뒷부분에서 설명합니다."
