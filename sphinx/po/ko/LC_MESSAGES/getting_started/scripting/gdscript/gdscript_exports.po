# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-13 14:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:4
msgid "GDScript exports"
msgstr "GDScript 내보내기(Export)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:7
msgid "Introduction to exports"
msgstr "내보내기 소개"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:9
msgid ""
"In Godot, class members can be exported. This means their value gets saved "
"along with the resource (such as the :ref:`scene <class_PackedScene>`) "
"they're attached to. They will also be available for editing in the property "
"editor. Exporting is done by using the ``export`` keyword::"
msgstr ""
"Godot에서 클래스 멤버는 내보낼 수 있습니다. 즉, 멤버의 값은 (:ref:`씬 "
"<class_PackedScene>`\\ 처럼) 붙어있는 리소스와 함께 저장됩니다. 그리고 속성"
"(Property) 편집기에서 편집할 수 있습니다. 내보내려면 ``export`` 키워드를 사용"
"합니다::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:18
msgid ""
"An exported variable must be initialized to a constant expression or have an "
"export hint in the form of an argument to the ``export`` keyword (see the "
"*Examples* section below)."
msgstr ""
"내보낸 변수는 상수 표현식으로 초기화하거나, 인수의 형태에 ``export`` 키워드"
"로 내보내기 힌트가 있어야 합니다 (아래의 *예제* 섹션을 참고하세요)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:22
msgid ""
"One of the fundamental benefits of exporting member variables is to have "
"them visible and editable in the editor. This way, artists and game "
"designers can modify values that later influence how the program runs. For "
"this, a special export syntax is provided."
msgstr ""
"멤버 변수 내보내기의 기본적인 이점은 편집기에서 보이고 편집할 수 있는 것입니"
"다. 이 방법으로 아티스트와 게임 디자이너가 프로그램이 실행 방법에 영향을 주"
"는 값을 수정할 수 있습니다. 이를 위해, 특수 내보내기 문법이 제공됩니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:29
msgid ""
"Exporting properties can also be done in other languages such as C#. The "
"syntax varies depending on the language."
msgstr ""
"속성 내보내기는 C#과 같은 다른 언어에서도 가능합니다. 문법은 언어에 따라 다릅"
"니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:33
msgid "Examples"
msgstr "예제"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:136
msgid ""
"It must be noted that even if the script is not being run while in the "
"editor, the exported properties are still editable. This can be used in "
"conjunction with a :ref:`script in \"tool\" mode <doc_gdscript_tool_mode>`."
msgstr ""
"스크립트가 편집기에서 실행하지 않는다면, 내보낸 속성은 편집할 수 있다는 것은 "
"꼭 알아두세요. 왜냐하면 :ref:`\"Tool(도구) 모드에서 스크립트 "
"<doc_gdscript_tool_mode>`\\ 를 사용할 수 있기 때문입니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:141
msgid "Exporting bit flags"
msgstr "비트 플래그(bit flags) 내보내기"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:143
#, fuzzy
msgid ""
"Integers used as bit flags can store multiple ``true``/``false`` (boolean) "
"values in one property. By using the export hint ``int, FLAGS, ...``, they "
"can be set from the editor::"
msgstr ""
"비트 플래그로 사용되는 정수는 한 속성에 여러 ``참``/``거짓`` (불리언) 값을 저"
"장할 수 있습니다. 편집기에서 설정하도록 하려면 ``int, FLAGS`` 내보내기 힌트"
"를 사용합니다::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:150
#, fuzzy
msgid ""
"You must provide a string description for each flag. In this example, "
"``Fire`` has value 1, ``Water`` has value 2, ``Earth`` has value 4 and "
"``Wind`` corresponds to value 8. Usually, constants should be defined "
"accordingly (e.g. ``const ELEMENT_WIND = 8`` and so on)."
msgstr ""
"이 예제에서, ``Fire`` 는 값 1, ``Water`` 는 값 2, ``Earth`` 는 값 4, 그리고 "
"``Wind`` 는 값 8에 해당합니다. 일반적으로, 상수는 이에 따라 정의되어야 합니"
"다 (예 ``const ELEMENT_WIND = 8`` 등등)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:155
msgid ""
"Export hints are also provided for the physics and render layers defined in "
"the project settings::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:162
#, fuzzy
msgid ""
"Using bit flags requires some understanding of bitwise operations. If in "
"doubt, use boolean variables instead."
msgstr ""
"비트 플래그를 사용하려면 비트 연산에 대한 이해가 필요합니다. 의심스럽다면, 불"
"리언 변수를 대신 내보내어야 합니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:166
msgid "Exporting arrays"
msgstr "배열 내보내기"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:168
msgid ""
"Exported arrays can have initializers, but they must be constant expressions."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:170
msgid ""
"If the exported array specifies a type which inherits from Resource, the "
"array values can be set in the inspector by dragging and dropping multiple "
"files from the FileSystem dock at once."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:208
msgid "Setting exported variables from a tool script"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:210
msgid ""
"When changing an exported variable's value from a script in :ref:"
"`doc_gdscript_tool_mode`, the value in the inspector won't be updated "
"automatically. To update it, call :ref:`property_list_changed_notify() "
"<class_Object_method_property_list_changed_notify>` after setting the "
"exported variable's value."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:217
#, fuzzy
msgid "Advanced exports"
msgstr "고급 벡터 연산"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:219
msgid ""
"Not every type of export can be provided on the level of the language itself "
"to avoid unnecessary design complexity. The following describes some more or "
"less common exporting features which can be implemented with a low-level API."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:223
msgid ""
"Before reading further, you should get familiar with the way properties are "
"handled and how they can be customized with :ref:`_set() "
"<class_Object_method__get_property_list>`, :ref:`_get() "
"<class_Object_method__get_property_list>`, and :ref:`_get_property_list() "
"<class_Object_method__get_property_list>` methods as described in :ref:"
"`doc_accessing_data_or_logic_from_object`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:230
msgid ""
"For binding properties using the above methods in C++, see :ref:"
"`doc_binding_properties_using_set_get_property_list`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:233
msgid ""
"The script must operate in the ``tool`` mode so the above methods can work "
"from within the editor."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:237
#, fuzzy
msgid "Adding script categories"
msgstr "노드 속성"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:239
msgid ""
"For better visual distinguishing of properties, a special script category "
"can be embedded into the inspector to act as a separator. ``Script "
"Variables`` is one example of a built-in category."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:256
msgid "``name`` is the name of a category to be added to the inspector;"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:258
msgid ""
"``PROPERTY_USAGE_CATEGORY`` indicates that the property should be treated as "
"a script category specifically, so the type ``TYPE_NIL`` can be ignored as "
"it won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:263
#, fuzzy
msgid "Grouping properties"
msgstr "노드 속성"

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:265
msgid "A list of properties with similar names can be grouped."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:279
msgid ""
"``name`` is the name of a group which is going to be displayed as "
"collapsible list of properties;"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:282
msgid ""
"every successive property added after the group property will be collapsed "
"and shortened as determined by the prefix defined via the ``hint_string`` "
"key. For instance, ``rotate_speed`` is going to be shortened to ``speed`` in "
"this case."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_exports.rst:286
msgid ""
"``PROPERTY_USAGE_GROUP`` indicates that the property should be treated as a "
"script group specifically, so the type ``TYPE_NIL`` can be ignored as it "
"won't be actually used for the scripting logic, yet it must be defined "
"anyway."
msgstr ""
