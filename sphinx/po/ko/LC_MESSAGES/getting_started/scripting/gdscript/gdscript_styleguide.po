# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-21 12:27+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:4
msgid "GDScript style guide"
msgstr "GDScript 스타일 가이드"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:7
msgid "Description"
msgstr "설명"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:9
msgid ""
"This styleguide lists conventions to write elegant GDScript. The goal is to "
"encourage writing clean, readable code and promote consistency across "
"projects, discussions, and tutorials. Hopefully, this will also encourage "
"development of auto-formatting tools."
msgstr ""
"이 스타일 가이드는 GDScript를 우아하게 작성하는 규정 목록을 보여줍니다. 이를 "
"통해 깔끔하고 읽을 수 있는 코드를 작성하고, 프로젝트와 토론, 튜토리얼에 걸쳐 "
"일관성을 유지하는 것이 목적입니다. 바라건대, 이것이 자동 서식 지정 도구의 개"
"발을 장려할 것입니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:14
msgid ""
"Since GDScript is close to Python, this guide is inspired by Python's `PEP 8 "
"<https://www.python.org/dev/peps/pep-0008/>`__ programming styleguide."
msgstr ""
"GDScript가 Python과 밀접하기 때문에, 이 가이드는 Python의 `PEP 8 <https://"
"www.python.org/dev/peps/pep-0008/>`__ 프로그래밍 스타일 가이드에서 영감을 얻"
"었습니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:18
msgid ""
"Godot's built-in script editor uses a lot of these conventions by default. "
"Let it help you."
msgstr ""
"Godot의 내장 스크립트 편집기는 기본적으로 많은 규정을 사용합니다. 그것이 당신"
"을 돕도록 하십시오."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:22
msgid "Code structure"
msgstr "코드 구조"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:25
msgid "Indentation"
msgstr "들여쓰기(Indentation)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:27
msgid "Indent type: Tabs *(editor default)*"
msgstr "들여쓰기 유형: Tabs *(편집기 기본)*"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:29
msgid "Indent size: 4 *(editor default)*"
msgstr "들여쓰기 크기: 4 *(편집기 기본)*"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:31
msgid "Each indent level should be one greater than the block containing it."
msgstr "각 들여쓰기 수준은 그것을 포함하는 블록보다 한 단계 더 커야합니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:33
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:53
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:96
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:120
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:140
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:160
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:262
msgid "**Good**:"
msgstr "**좋음**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:40
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:61
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:106
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:127
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:147
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:170
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:270
msgid "**Bad**:"
msgstr "**나쁨**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:50
msgid ""
"Use 2 indent levels to distinguish continuation lines from regular code "
"blocks."
msgstr ""
"계속되는 줄은 정규 코드 블록과 구분하기 위해 2단계의 들여쓰기 수준을 사용합니"
"다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:70
msgid "Blank lines"
msgstr "공백 줄"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:72
#, fuzzy
msgid "Surround functions and class definitions with two blank lines:"
msgstr "함수와 클래스 정의를 공백 줄로 묶습니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:87
msgid "Use one blank line inside functions to separate logical sections."
msgstr "논리 섹션을 분리하기 위해 함수 안에 하나의 공백 줄을 사용합니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:90
msgid "One statement per line"
msgstr "한 줄에 하나의 명령문"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:92
msgid ""
"Never combine multiple statements on a single line. No, C programmers, not "
"with a single line conditional statement (except with the ternary operator)!"
msgstr ""
"한 줄에 여러 명령문을 결합하지 마십시오. C 프로그래머는, 한 줄에 조건문과 함"
"께 사용하지 마십시오 (삼항 연산자 제외)!"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:115
msgid "Avoid unnecessary parentheses"
msgstr "불필요한 괄호 피하기"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:117
msgid ""
"Avoid parentheses in expressions and conditional statements. Unless "
"necessary for order of operations, they only reduce readability."
msgstr ""
"표현식과 조건문에 괄호를 사용하지 마십시오. 연산 명령에 필요한 경우가 아니라"
"면, 가독성만 떨어뜨릴 것입니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:135
#, fuzzy
msgid "Comment spacing"
msgstr "주석(Comment)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:137
msgid ""
"Normal comments should start with a space, but comments which are disabled "
"code should not. This helps differentiate text comments from disabled code."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:155
msgid "Whitespace"
msgstr "공백"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:157
msgid ""
"Always use one space around operators and after commas. Avoid extra spaces "
"in dictionary references and function calls, or to create \"columns.\""
msgstr ""
"연산자와 쉼표 뒤에 하나의 빈칸을 반드시 사용합니다. 사전 참조나 함수 호출에 "
"여분의 공백을 피하거나, \"열\"을 생성하십시오."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:180
msgid "**NEVER**:"
msgstr "**절대 금지**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:189
msgid "Quotes"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:191
msgid ""
"Use double quotes unless single quotes make it possible to escape fewer "
"characters in a given string. See the examples below:"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:209
msgid "Naming conventions"
msgstr "명명 규칙"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:211
msgid ""
"These naming conventions follow the Godot Engine style. Breaking these will "
"make your code clash with the built-in naming conventions, which is ugly."
msgstr ""
"이러한 명명 규칙은 Godot 엔진 스타일을 따릅니다. 이 규칙을 깬다면 코드가 보기"
"에도 못생기고, 내장된 명명 규칙으로 충돌하게 됩니다."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:216
msgid "Classes and nodes"
msgstr "클래스와 노드"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:218
msgid "Use PascalCase: ``extends KinematicBody``"
msgstr "파스칼 표기법(PascalCase)을 사용: ``extends KinematicBody``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:220
msgid "Also when loading a class into a constant or variable:"
msgstr "또한 상수나 변수 안으로 클래스를 불러올 때 사용:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:227
msgid "Functions and variables"
msgstr "함수와 변수"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:229
msgid "Use snake\\_case: ``get_node()``"
msgstr "스네이크 표기법(snake\\_case)을 사용: ``get_node()``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:231
msgid ""
"Prepend a single underscore (\\_) to virtual methods (functions the user "
"must override), private functions, and private variables: ``func _ready()``"
msgstr ""
"가상 메서드 (사용자가 치환해야 하는 함수), 개인 함수, 그리고 개인 함수에 단"
"일 밑줄 (\\_)을 추가하십시오: ``func _ready()``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:236
msgid "Signals"
msgstr "시그널(Signal)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:238
msgid "Use past tense:"
msgstr "과거 시제 사용:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:246
msgid "Constants"
msgstr "상수"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:248
msgid ""
"Use CONSTANT\\_CASE, all caps, with an underscore (\\_) to separate words: "
"``const MAX_SPEED = 200``"
msgstr ""
"CONSTANT\\_CASE 사용, 모두 대문자로, 밑줄 (\\_)로 단어를 분리함: ``const "
"MAX_SPEED = 200``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:252
#, fuzzy
msgid "Static typing"
msgstr "정적 함수"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:254
msgid ""
"Since Godot 3.1, GDScript supports :ref:`optional static "
"typing<doc_gdscript_static_typing>`."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:257
#, fuzzy
msgid "Type hints"
msgstr "타입(Types)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:259
msgid ""
"Place the colon right after the variable's name, without a space, and let "
"the GDScript compiler infer the variable's type when possible."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:278
msgid ""
"When you let the compiler infer the type hint, write the colon and equal "
"signs together: ``:=``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:284
msgid ""
"Add a space on either sides of the return type arrow when defining functions."
msgstr ""
