# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-19 11:09+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:4
msgid "C# basics"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:7
msgid "Introduction"
msgstr "소개"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:9
msgid ""
"C# support is a new feature available since Godot 3.0. As such, you may "
"still run into some issues, or find spots where the documentation could be "
"improved. Please report issues with C# in Godot on the `engine GitHub page "
"<https://github.com/godotengine/godot/issues>`_, and any documentation "
"issues on the `documentation GitHub page <https://github.com/godotengine/"
"godot-docs/issues>`_."
msgstr ""
"C# 지원은 Godot 3.0의 새로운 기능입니다. 따라서, 실행 중 여전히 문제가 발생"
"할 수 있고, 문서를 개선할 수 있는 부분을 발견할 수도 있습니다. `엔진 Github "
"페이지 <https://github.com/godotengine/godot/issues>`_\\ 에서 Godot의 C#관련 "
"문제들을 보고해주세요. 그리고 문서상의 문제는`문서 Github 페이지 <https://"
"github.com/godotengine/godot-docs/issues>`_\\ 에서 보고해주세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:17
msgid ""
"This page provides a brief introduction to C#, both what it is and how to "
"use it in Godot. Afterwards, you may want to look at :ref:`how to use "
"specific features <doc_c_sharp_features>`, read about the :ref:`differences "
"between the C# and the GDScript API <doc_c_sharp_differences>` and (re)visit "
"the :ref:`Scripting section <doc_scripting>` of the step-by-step tutorial."
msgstr ""
"이 페이지는 C#에 대한 간단한 소개와 그것이 무엇인지, 그리고 그것을 Godot에서 "
"사용하는 방법을 제공합니다. 그런 다음, :ref:`특정 기능을 사용하는 방법 "
"<doc_c_sharp_features>`\\ 을 원한다면, :ref:`C# 과 GDScript API의 차이점 "
"<doc_c_sharp_differences>`\\ 에 대해 읽고 단계별 튜토리얼의 :ref:`스크립팅 섹"
"션 <doc_scripting>`\\ 을 (다시) 확인하세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:24
msgid ""
"C# is a high-level programming language developed by Microsoft. In Godot, it "
"is implemented with the Mono 6.x .NET framework, including full support for "
"C# 8.0. Mono is an open source implementation of Microsoft's .NET Framework "
"based on the ECMA standards for C# and the Common Language Runtime. A good "
"starting point for checking its capabilities is the `Compatibility <http://"
"www.mono-project.com/docs/about-mono/compatibility/>`_ page in the Mono "
"documentation."
msgstr ""
"C#은 Microsoft가 개발한 하이 레벨 프로그래밍 언어 입니다. Godot에서는 Mono 6."
"x .NET framework로 구현되었으며, C# 8.0을 완전 지원합니다. Mono는 Microsoft"
"의 .NET Framework의 오픈 소스로 C#과 Common Language Runtime을 위한 ECMA 표준"
"을 기반으로 구현되었습니다. 호환성을 확인하기 위한 좋은 시작점으로 Mono 문서"
"에 있는 `호환성<http://www.mono-project.com/docs/about-mono/compatibility/"
">`_ 을 살펴보세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:32
msgid ""
"This is **not** a full-scale tutorial on the C# language as a whole. If you "
"aren't already familiar with its syntax or features, see the `Microsoft C# "
"guide <https://docs.microsoft.com/en-us/dotnet/csharp/index>`_ or look for a "
"suitable introduction elsewhere."
msgstr ""
"이것은  C# 언어 전체에 대한 본격적인 튜토리얼이 **아닙니다**. 문법이나 기능"
"에 익숙하지 않다면 `Microsoft C# 가이드 <https://docs.microsoft.com/en-us/"
"dotnet/csharp/index>`_\\ 를 보거나 다른 적합한 설명을 찾아보세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:39
msgid "Setting up C# for Godot"
msgstr "Godot에 C# 설치하기"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:42
msgid "Prerequisites"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:44
msgid ""
"Install the latest stable version of `.NET Core SDK <https://dotnet."
"microsoft.com/download/dotnet-core>`__ (3.1 as of writing)."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:48
msgid ""
"From Godot 3.2.3 onwards, installing Mono SDK is not a requirement anymore, "
"except it is required if you are building the engine from source."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:51
msgid ""
"Godot bundles the parts of Mono needed to run already compiled games, "
"however Godot does not include the tools required to build and compile "
"games, such as MSBuild. These tools need to be installed separately. The "
"required tools are included in the .NET Core SDK. MSBuild is also included "
"in the Mono SDK, but it can't build C# projects with the new ``csproj`` "
"format, therefore .NET Core SDK is required for Godot 3.2.3+."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:58
#, fuzzy
msgid ""
"In summary, you must have installed .NET Core SDK **and** the Mono-enabled "
"version of Godot."
msgstr ""
"요약하자면, Visual Studio나 Mono가 (운영체제에 맞게) 설치되어 있어야 하며 **"
"그리고** Mono를 사용할 수 있는 버전의 Godot이어야 합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:62
msgid "Additional notes"
msgstr "추가 정보"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:64
msgid ""
"Be sure to install the 64-bit version of the SDK(s) if you are using the 64-"
"bit version of Godot."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:67
#, fuzzy
msgid ""
"If you are building Godot from source, install the latest stable version of "
"`Mono <https://www.mono-project.com/download/stable/>`__, and make sure to "
"follow the steps to enable Mono support in your build as outlined in the :"
"ref:`doc_compiling_with_mono` page."
msgstr ""
"당신의 Godot 버전이 Mono를 지원해야 하는데, 그러기 위해 Godot의 **Mono 버전**"
"\\ 을 다운로드 해야 합니다. 소스에서 Godot를 빌드하는 경우, :ref:"
"`doc_compiling_with_mono` 페이지에서 설명하는 Mono 지원을 활성화 하는 순서를 "
"따라야 합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:73
msgid "Configuring an external editor"
msgstr "외부 편집기 설정"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:75
#, fuzzy
msgid ""
"C# support in Godot's built-in script editor is minimal. Consider using an "
"external IDE or editor, such as  `Visual Studio Code <https://code."
"visualstudio.com/>`__ or MonoDevelop. These provide autocompletion, "
"debugging, and other useful features for C#. To select an external editor in "
"Godot, click on **Editor → Editor Settings** and scroll down to **Mono**. "
"Under **Mono**, click on **Editor**, and select your external editor of "
"choice. Godot currently supports the following external editors:"
msgstr ""
"Godot의 스크립트 편집기에서 C# 지원은 최소한입니다. `Visual Studio Code "
"<https://code.visualstudio.com/>`_\\ 나 MonoDevelop과 같은 외부 IDE나 편집기"
"를 사용하는 것을 고려해보세요. 이들은 자동 완성, 디버깅 및 C#을 위한 기타 유"
"용한 기능이 제공됩니다. Godot에서 외부 편집기를 선택하려면, **편집기 → 편집"
"기 설정**\\ 으로 가서 **Mono**\\ 로 내려갑니다. **Mono**\\ 에서 **Editor**\\ "
"를 클릭하면 외부 편집기를 선택하는 페이지가 나타납니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:84
msgid "Visual Studio 2019"
msgstr "Visual Studio 2019"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:85
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:109
msgid "Visual Studio Code"
msgstr "Visual Studio Code"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:86
msgid "MonoDevelop"
msgstr "MonoDevelop"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:87
msgid "Visual Studio for Mac"
msgstr "Visual Studio for Mac"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:88
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:93
msgid "JetBrains Rider"
msgstr "JetBrains Rider"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:90
msgid "See the following sections for how to configure an external editor:"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:95
msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`JetBrains Rider <https://www.jetbrains.com/rider/download>`__."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:98
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:114
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:146
#, fuzzy
msgid "In Godot's **Editor → Editor Settings** menu:"
msgstr "Godot 편집기 설정 :"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:100
#, fuzzy
msgid ""
"Set **Mono** -> **Editor** -> **External Editor** to **JetBrains Rider**."
msgstr "**Mono External Editor** 를 **JetBrains Rider** 로 설정."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:101
#, fuzzy
msgid "Set **Mono** -> **Builds** -> **Build Tool** to **dotnet CLI**."
msgstr "**Mono Build Tool** 을 **JetBrains Mono** 로 설정."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:103
msgid "In Rider:"
msgstr "Rider 에서:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:105
#, fuzzy
msgid "Set **MSBuild version** to **.NET Core**."
msgstr ""
"**MSBuild version** 을 **Bundled with Rider** 이나 **.NET Core** 로 설정."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:106
msgid "Install the **Godot support** plugin."
msgstr "**Godot support** 플러그인을 설치."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:111
msgid ""
"After reading the \"Prerequisites\" section, you can download and install "
"`Visual Studio Code <https://code.visualstudio.com/download>`__ (aka VS "
"Code)."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:116
#, fuzzy
msgid ""
"Set **Mono** -> **Editor** -> **External Editor** to **Visual Studio Code**."
msgstr "**Mono External Editor** 를 **JetBrains Rider** 로 설정."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:118
#, fuzzy
msgid "In Visual Studio Code:"
msgstr "Visual Studio Code"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:120
#, fuzzy
msgid ""
"Install the `C# <https://marketplace.visualstudio.com/items?itemName=ms-"
"dotnettools.csharp>`__ extension."
msgstr ""
"`VSMonoDebugger 확장 프로그램 <https://marketplace.visualstudio.com/items?"
"itemName=GordianDotNet.VSMonoDebugger0d62>`_를 설치하십시오."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:121
#, fuzzy
msgid ""
"Install the `Mono Debug <https://marketplace.visualstudio.com/items?"
"itemName=ms-vscode.mono-debug>`__ extension."
msgstr ""
"`VSMonoDebugger 확장 프로그램 <https://marketplace.visualstudio.com/items?"
"itemName=GordianDotNet.VSMonoDebugger0d62>`_를 설치하십시오."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:122
#, fuzzy
msgid ""
"Install the `C# Tools for Godot <https://marketplace.visualstudio.com/items?"
"itemName=neikeq.godot-csharp-vscode>`__ extension."
msgstr ""
"`VSMonoDebugger 확장 프로그램 <https://marketplace.visualstudio.com/items?"
"itemName=GordianDotNet.VSMonoDebugger0d62>`_를 설치하십시오."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:124
msgid ""
"If you are using Linux you need to install the `Mono SDK <https://www.mono-"
"project.com/download/stable/#download-lin>`__ for the C# tools plugin to "
"work."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:128
msgid ""
"To configure a project for debugging open the Godot project folder in VS "
"Code. Go to the Run tab and click on **create a launch.json file**. Select "
"**C# Godot** from the dropdown menu. Now, when you start the debugger in VS "
"Code your Godot project will run."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:133
#, fuzzy
msgid "Visual Studio (Windows only)"
msgstr "Visual Studio 혹은 VS Code"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:135
msgid ""
"Download and install the latest version of `Visual Studio <https://"
"visualstudio.microsoft.com/downloads/>`__. Visual Studio will include the "
"required SDKs if you have the correct workloads selected, so you don't need "
"to manually install the things listed in the \"Prerequisites\" section."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:141
msgid "While installing Visual Studio, select these workloads:"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:143
#, fuzzy
msgid "Mobile development with .NET"
msgstr "엔진 개발(Engine development)"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:144
msgid ".NET Core cross-platform development"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:148
#, fuzzy
msgid "Set **Mono** -> **Editor** -> **External Editor** to **Visual Studio**."
msgstr "**Mono External Editor** 를 **JetBrains Rider** 로 설정."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:150
msgid ""
"Next, you need to download the Godot Visual Studio extension from github "
"`here <https://github.com/godotengine/godot-csharp-visualstudio/"
"releases>`__. Double click on the downloaded file and follow the "
"installation process."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:156
msgid "Creating a C# script"
msgstr "C# 스크립트 만들기"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:158
msgid ""
"After you successfully set up C# for Godot, you should see the following "
"option when selecting **Attach Script** in the context menu of a node in "
"your scene:"
msgstr ""
"Godot용 C# 을 성공적으로 설정한 후, 씬의 노드 메뉴에서 **스크립트 붙이기** "
"를 눌렀을 때, 다음 설정이 표시되어야 합니다:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:163
msgid ""
"Note that while some specifics change, most concepts work the same when "
"using C# for scripting. If you're new to Godot, you may want to follow the "
"tutorials on :ref:`doc_scripting` at this point. While some places in the "
"documentation still lack C# examples, most concepts can be transferred "
"easily from GDScript."
msgstr ""
"일부 세부 사항이 변경되는 동안, 대부분의 작업은 스크립팅을 C#으로 하는 것과 "
"동일합니다. Godot를 처음 접해보신다면, 이 시점에서 :ref:`doc_scripting` 튜토"
"리얼을 정독하시는 것이 좋습니다. 문서의 일부는 C# 예제가 부족하지만, 대부분"
"은 일찍이 GDScript에서 옮길 수 있습니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:170
msgid "Project setup and workflow"
msgstr "프로젝트 설정과 작업 흐름"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:172
msgid ""
"When you create the first C# script, Godot initializes the C# project files "
"for your Godot project. This includes generating a C# solution (``.sln``) "
"and a project file (``.csproj``), as well as some utility files and folders "
"(``.mono`` and ``Properties/AssemblyInfo.cs``). All of these but ``.mono`` "
"are important and should be committed to your version control system. ``."
"mono`` can be safely added to the ignore list of your VCS. When "
"troubleshooting, it can sometimes help to delete the ``.mono`` folder and "
"let it regenerate."
msgstr ""
"첫 C# 스크립트를 생성하면, Godot는 Godot 프로젝트를 위한 C# 프로젝트 파일을 "
"초기화합니다. 여기에는 C# 솔루션 (``.sin``)이나 프로젝트 파일 (``.csproj``) "
"뿐만 아니라, 일부 유용 파일과 폴더들 (``.mono``\\ 와 ``Properties/"
"AssemblyInfo.cs``)을 생성하는 것도 포함합니다. ``.mono``\\ 를 제외하고는 모"
"두 중요하므로 버전 관리 시스템에 유지해 두어야 합니다. ``.mono``\\ 는 버전 관"
"리 시스템의 무시 목록에 쉽게 추가할 수 있습니다. 문제를 해결할 때, ``.mono`` "
"폴더를 삭제하고 다시 만드는 것이 때로는 도움이 됩니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:182
msgid "Example"
msgstr "예제"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:184
msgid ""
"Here's a blank C# script with some comments to demonstrate how it works."
msgstr "여기 동작을 설명하는 주석이 붙은 C# 스크립트가 있습니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:211
msgid ""
"As you can see, functions normally in global scope in GDScript like Godot's "
"``print`` function are available in the ``GD`` class which is part of the "
"``Godot`` namespace. For a list of methods in the ``GD`` class, see the "
"class reference pages for :ref:`@GDScript <class_@gdscript>` and :ref:"
"`@GlobalScope <class_@globalscope>`."
msgstr ""
"보시다시피, Godot의 ``print`` 함수와 마찬가지로 GDScript에서 함수는 기본적으"
"로 전역 범위에 있기 때문에 ``Godot`` 네임스페이스의 일부분인 ``GD`` 클래스에"
"서 사용할 수 있습니다. ``GD`` 클래스에서의 메서드 목록을 보려면, :ref:"
"`@GDScript <class_@gdscript>`\\ 와 :ref:`@GlobalScope <class_@globalscope>`"
"\\ 에서 클래스 참조 페이지를 참고하세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:218
#, fuzzy
msgid ""
"Keep in mind that the class you wish to attach to your node should have the "
"same name as the ``.cs`` file. Otherwise, you will get the following error "
"and won't be able to run the scene: *\"Cannot find class XXX for script "
"res://XXX.cs\"*"
msgstr ""
"노드에 붙이고 싶은 클래스 이름이 ``.cs`` 파일이어야 한다는 사실을 명심하세"
"요. 그렇지 않으면, 다음과 같은 오류를 받게 되며 씬을 실행할 수 없을 것입니"
"다: *\"스크립트 res://XXX.cs에서 클래스 XXX를 찾을 수 없음\"*"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:224
msgid "General differences between C# and GDScript"
msgstr "C#과 GDScript와의 일반적인 차이"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:226
msgid ""
"The C# API uses ``PascalCase`` instead of ``snake_case`` in GDScript/C++. "
"Where possible, fields and getters/setters have been converted to "
"properties. In general, the C# Godot API strives to be as idiomatic as is "
"reasonably possible."
msgstr ""
"GDScript/C++에서는 ``snake_case``\\ 를 쓰지만 C# API는 ``PascalCase``\\ 를 씁"
"니다. 가능하면 공백과 getters/setters이 속성으로 변환됩니다. 일반적으로 C# "
"Godot API는 합리적으로 가능한 것처럼 관용적이도록 노력합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:230
msgid "For more information, see the :ref:`doc_c_sharp_differences` page."
msgstr "더 자세한 내용은, :ref:`doc_c_sharp_differences` 페이지를 참고하세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:234
#, fuzzy
msgid ""
"You need to (re)build the project assemblies whenever you want to see new "
"exported variables or signals in the editor. This build can be manually "
"triggered by clicking the word **Build** in the top right corner of the "
"editor. You can also click **Mono** at the bottom of the editor window to "
"reveal the Mono panel, then click the **Build Project** button."
msgstr ""
"당신이 C#을 사용한다면, 새로운 외부변수(export variables)나 시그널을 보기 위"
"해서 프로젝트 구성물(assemblies)를 (재)컴파일(build)할 필요가 있습니다. 이 컴"
"파일은 편집기 의 밑에 \"Mono\" 단어를 클릭하여 Mono 패널이 나타나게 한 후 "
"\"프로젝트 생성(Build)\" 버튼을 눌러서 수동으로 진행됩니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:240
msgid ""
"You will also need to rebuild the project assemblies to apply changes in "
"\"tool\" scripts."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:244
msgid "Current gotchas and known issues"
msgstr "현재 문제와 알려진 문제"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:246
msgid ""
"As C# support is quite new in Godot, there are some growing pains and things "
"that need to be ironed out. Below is a list of the most important issues you "
"should be aware of when diving into C# in Godot, but if in doubt, also take "
"a look over the official `issue tracker for Mono issues <https://github.com/"
"godotengine/godot/labels/topic%3Amono>`_."
msgstr ""
"C# 지원이 Godot에서 꽤 새롭기 때문에, 성장통이 있고 다듬어야 할 곳이 여전히 "
"있습니다. 아래에는 중요한 문제 목록으로 Godot에서 C#으로 갈아탈 때 명심해야 "
"합니다, 하지만 의심스러운 점이 있다면 공식 `Mono 이슈를 위한 이슈 트래커 "
"<https://github.com/godotengine/godot/labels/topic%3Amono>`_\\ 를 살펴보세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:252
msgid ""
"Writing editor plugins is possible, but it is currently quite convoluted."
msgstr ""
"편집기 플러그인을 작성하는 것은 가능하지만, 현재로썬 상당히 복잡합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:253
msgid ""
"State is currently not saved and restored when hot-reloading, with the "
"exception of exported variables."
msgstr ""
"내보낸 변수를 제외하고, 현재 상태는 핫 리로드 중일 때 저장되고 복원되지 않습"
"니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:255
msgid ""
"Attached C# scripts should refer to a class that has a class name that "
"matches the file name."
msgstr ""
"첨부된 C# 스크립트가 파일 이름과 일치하는 클래스 이름을 가진 클래스를 참조해"
"야 합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:257
msgid ""
"There are some methods such as ``Get()``/``Set()``, ``Call()``/"
"``CallDeferred()`` and signal connection method ``Connect()`` that rely on "
"Godot's ``snake_case`` API naming conventions. So when using e.g. "
"``CallDeferred(\"AddChild\")``, ``AddChild`` will not work because the API "
"is expecting the original ``snake_case`` version ``add_child``. However, you "
"can use any custom properties or methods without this limitation."
msgstr ""
"Godot 의 ``snake_case\" API 명명 규칙에 의존하는 ``Get ()\"/\"Set()\" "
"\"Call()\"/\"CallDeferred()\"와\" 시그널 연결 메서드 ``Connect()\"와 같은 방"
"법이 있습니다. 그러므로 예를 들어 ``CallDeferred\"(\"AddChild\")를 사용할 때 "
"``AddChild\"는 API가 원래의 ``snake_case\" 버전의 ``add_child\"를 기대하기 때"
"문에 작동하지 않을 것입니다. 그러나 당신은 이러한 제한 없이 모든 맞춤 속성이"
"나 메서드를 사용할 수 있습니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:265
#, fuzzy
msgid ""
"Exporting Mono projects is supported for desktop platforms (Linux, Windows "
"and macOS), Android, HTML5, and iOS. The only platform not supported yet is "
"UWP."
msgstr ""
"Mono 프로젝트를 내보내는 것은 데스크탑 플랫폼 (Linux, Windows, 그리고 macOS)"
"만 지원합니다. Android, iOS, HTML5 그리고 UWP는 현재는 지원하지 않습니다 "
"(`#20267 <https://github.com/godotengine/godot/issues/20267>`_, `#20268 "
"<https://github.com/godotengine/godot/issues/20268>`_ `#20270 <https://"
"github.com/godotengine/godot/issues/20270>`_ `#20271 <https://github.com/"
"godotengine/godot/issues/20271>`_)."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:269
msgid "Performance of C# in Godot"
msgstr "Godot에서 C#의 퍼포먼스"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:271
msgid ""
"According to some preliminary `benchmarks <https://github.com/cart/godot3-"
"bunnymark>`_, the performance of C# in Godot — while generally in the same "
"order of magnitude — is roughly **~4×** that of GDScript in some naive "
"cases. C++ is still a little faster; the specifics are going to vary "
"according to your use case. GDScript is likely fast enough for most general "
"scripting workloads. C# is faster, but requires some expensive marshalling "
"when talking to Godot."
msgstr ""
"일부 예비 `벤치마크 <https://github.com/cart/godot3-bunnymark>`_\\ 에 따르"
"면, Godot에서 C#의 퍼포먼스는 — 일반적으로 같은 순서의 크기에서 — 순수한 경우"
"에서 대략 GDScript의 **~4x**\\ 입니다. C++이 아직 조금 더 빠릅니다; 하지만 세"
"부 사항은 사용하는 경우에 따라 다릅니다. GDScript는 대부분의 일반적인 스크립"
"팅 작업에 충분히 빠릅니다. C#이 더 빠르지만, Godot과 대화하려면 비용이 큰 마"
"샬링(marshalling)이 필요합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:279
msgid "Using NuGet packages in Godot"
msgstr "Godot에서 NuGet 패키지 사용하기"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:281
msgid ""
"`NuGet <https://www.nuget.org/>`_ packages can be installed and used with "
"Godot, as with any C# project. Many IDEs are able to add packages directly. "
"They can also be added manually by adding the package reference in the ``."
"csproj`` file located in the project root:"
msgstr ""
"`NuGet <https://www.nuget.org/>`_ 패키지를 설치하여 프로젝트처럼, Godot와 사"
"용할 수 있습니다. 많은 IDE는 직접 패키지를 추가할 수 있습니다. 또한 프로젝트 "
"루트에 있는 ``.csproj`` 파일에 패키지 참조를 수동으로 추가할 수 있습니다:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:295
msgid ""
"As of Godot 3.2.3, Godot automatically downloads and sets up newly added "
"NuGet packages the next time it builds the project."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:299
msgid "Profiling your C# code"
msgstr "C# 코드 프로파일링"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:301
#, fuzzy
msgid ""
"`Mono log profiler <https://www.mono-project.com/docs/debug+profile/profile/"
"profiler/>`_ is available for Linux and macOS. Due to a Mono change, it does "
"not work on Windows currently."
msgstr ""
"`Mono 로그 프로파일러 <https://www.mono-project.com/docs/debug+profile/"
"profile/profiler/>`_ 를 지원합니다. `this PR <https://github.com/godotengine/"
"godot/pull/26513>`_."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_basics.rst:302
msgid ""
"External Mono profiler like `JetBrains dotTrace <https://www.jetbrains.com/"
"profiler/>`_ can be used as described `here <https://github.com/godotengine/"
"godot/pull/34382>`_."
msgstr ""
"다른 Mono 프로파일러로는 `JetBrains dotTrace <https://www.jetbrains.com/"
"profiler/>`_ 을 사용 할 수 있습니다. 해당 설명 - `here <https://github.com/"
"godotengine/godot/pull/34382>`_."
