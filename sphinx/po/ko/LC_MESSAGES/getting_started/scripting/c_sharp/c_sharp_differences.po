# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-10 13:55+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:4
msgid "API differences to GDScript"
msgstr "GDScript와의 API 차이점"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:6
msgid "This is a (incomplete) list of API differences between C# and GDScript."
msgstr "이것은 C#과 GDScript간의 (불완전한) API 차이점 목록입니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:9
msgid "General differences"
msgstr "일반적인 차이점"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:11
msgid ""
"As explained in the :ref:`doc_c_sharp`, C# generally uses ``PascalCase`` "
"instead of the ``snake_case`` in GDScript and C++."
msgstr ""
":ref:`doc_c_sharp`\\ 에서 설명했듯이, C#은 GDScript와 C++에서 ``snake_case``"
"\\ 를 쓰는 대신 ``PascalCase``\\ 를 사용합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:15
msgid "Global scope"
msgstr "글로벌 범위"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:17
msgid ""
"Available under ``Godot.GD``. Some things were moved to their own classes, "
"like Math and Random. See below."
msgstr ""
"``Godot.GD``\\ 하에 사용할 수 있습니다. 어떤 것은 자체적인 클래스로 옮겨졌습"
"니다, Math나 Random같이 말이죠. 아래를 참고하세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:20
msgid ""
"Global functions like ``print``, ``var2str`` and ``weakref`` are located "
"under ``GD`` in C#."
msgstr ""
"``print``, ``var2str`` 그리고 ``weakref``\\ 와 같은 글로벌 함수는 C#에서 "
"``GD``\\ 에 위치합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:23
msgid "``ERR_*`` constants were moved to ``Godot.Error``."
msgstr "``ERR_*`` 상수는 ``Godot.Error``\\ 로 옮겨졌습니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:26
msgid "Math"
msgstr "Math(수학)"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:28
msgid ""
"Math functions, like ``abs``, ``acos``, ``asin``, ``atan`` and ``atan2``, "
"are located under ``Mathf`` as ``Abs``, ``Acos``, ``Asin``, ``Atan`` and "
"``Atan2``, instead of in global scope. ``PI`` is ``Mathf.Pi``"
msgstr ""
"``abs``, ``acos``, ``asin``, ``atan`` 그리고 ``atan2``\\ 와 같은 Math 함수는 "
"글로벌 범위에 있는 대신, ``Mathf``\\ 에 위치하며,  ``Abs``, ``Acos``, "
"``Asin``, ``Atan`` 그리고 ``Atan2``\\ 로 있습니다. ``PI``\\ 는 ``Mathf.Pi``"
"\\ 입니다"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:33
msgid "Random"
msgstr "Random(랜덤)"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:35
msgid ""
"Random functions, like ``rand_range`` and ``rand_seed``, are located under "
"``Random``, so use ``Random.RandRange`` instead of ``rand_range``."
msgstr ""
"``rand_range``\\ 와 ``rand_seed``\\ 와 같은 Random 함수는 ``Random``\\ 에 위"
"치하기 때문에, ``rand_range``\\ 가 아니라 ``Random.RandRange``\\ 를 사용합니"
"다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:39
msgid "Export keyword"
msgstr "키워드 가져오기"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:41
msgid ""
"Use the ``[Export]`` attribute instead of the GDScript ``export`` keyword."
msgstr "GDScript의 ``export`` 키워드 대신 ``[Export]`` 속성을 사용합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:44
msgid "Signal keyword"
msgstr "시그널 키워드"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:46
msgid ""
"Use the ``[Signal]`` attribute instead of the GDScript ``signal`` keyword. "
"This attribute should be used on a `delegate`, whose name signature will be "
"used to define the signal."
msgstr ""
"GDScript의 ``signal`` 키워드 대신 ``[Signal]`` 속성을 사용합니다. 이 속성은 "
"`delegate`\\ 에 사용되어야 하며, 이름은 시그널을 정의하는 데 사용될 것입니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:54
msgid "See also: :ref:`c_sharp_signals`"
msgstr "이것도 보세요: :ref:`c_sharp_signals`"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:57
msgid "Singletons"
msgstr "싱글톤(Singleton)"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:59
msgid ""
"Singletons provide static methods rather than using the singleton pattern in "
"C#. This is to make code less verbose and similar to GDScript. Example:"
msgstr ""
"C#에서 싱글톤 패턴을 사용하는 대신 싱글톤은 정적 메서드를 제공합니다. 이것으"
"로 GDScript와 비슷하면서도 더 적은 글로 코드를 만들 수 있습니다. 예제:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:67
msgid "String"
msgstr "문자열(String)"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:69
msgid ""
"Use ``System.String`` (``string``). All the Godot String methods are "
"provided by the ``StringExtensions`` class as extension methods. Example:"
msgstr ""
"``System.String`` (``string``)을 사용합니다. 모든 Godot 문자열 메서드는 "
"``StringExtensions`` 클래스에서 확장 메서드 형태로 제공됩니다. 예제:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:77
msgid "There are a few differences, though:"
msgstr "하지만 몇 가지 차이점은 있습니다:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:79
msgid ""
"``erase``: Strings are immutable in C#, so we cannot modify the string "
"passed to the extension method. For this reason, ``Erase`` was added as an "
"extension method of ``StringBuilder`` instead of string. Alternatively, you "
"can use ``string.Remove``."
msgstr ""
"``erase``: C#에서는 문자열이 변경되지 않아서, 확장 메서드에 전달된 문자열을 "
"수정할 수 없습니다. 이런 이유로, ``Erase``\\ 는 문자열의 확장 메서드가 아닌 "
"``StringBuilder``\\ 의 확장 메서드 형태로 추가되었습니다. 이를 대체하기 위"
"해, ``string.Remove``\\ 를 사용할 수 있습니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:83
msgid ""
"``IsSubsequenceOf``/``IsSubsequenceOfi``: An additional method is provided, "
"which is an overload of ``IsSubsequenceOf``, allowing you to explicitly "
"specify case sensitivity:"
msgstr ""
"``IsSubsequenceOf``/``IsSubsequenceOfi``: ``IsSubsequenceOf``\\ 의 과부하"
"(overload)인 추가 메서드를 제공하여, 대소문자 구분을 명시적으로 할 수 있습니"
"다:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:94
msgid ""
"``Match``/``Matchn``/``ExprMatch``: An additional method is provided besides "
"``Match`` and ``Matchn``, which allows you to explicitly specify case "
"sensitivity:"
msgstr ""
"``Match``/``Matchn``/``ExprMatch``: ``Match``\\ 와 ``Matchn``\\ 이외에 추가 "
"메서드를 제공하여, 대소문자 구분을 명시적으로 할 수 있습니다:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:105
msgid "Basis"
msgstr "Basis(기초)"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:107
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Basis()`` initializes all primitive members to their default value. Use "
"``Basis.Identity`` for the equivalent of ``Basis()`` in GDScript and C++."
msgstr ""
"C#에서 Struct은 매개변수 없는 생성자를 가질 수 없습니다. 따라서, ``new "
"Basis()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C++에서 "
"``Basis()``\\ 에 해당하는 것으로 ``Basis.Identity``\\ 를 사용합니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:111
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:158
msgid "The following method was converted to a property with a different name:"
msgstr "다음 메서드들는 다른 이름으로 변환된 속성들입니다:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:114
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:129
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:142
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:153
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:161
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:180
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:223
msgid "GDScript"
msgstr "GDScript"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:114
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:129
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:142
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:153
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:161
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:180
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:223
msgid "C#"
msgstr "C#"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:116
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:133
msgid "get_scale()"
msgstr "get_scale()"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:116
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:133
msgid "Scale"
msgstr "Scale"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:120
msgid "Transform2D"
msgstr "Transform2D(변형2D)"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:122
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Transform2D()`` initializes all primitive members to their default value. "
"Please use ``Transform2D.Identity`` for the equivalent of ``Transform2D()`` "
"in GDScript and C++."
msgstr ""
"C#에서 Struct는 매개변수 없는 생성자를 가질 수 없습니다. 따라서, ``new "
"Transform2D()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C+"
"+에서 ``Transform2D()``\\ 에 해당하는 것으로 ``Transform2D.Identity``\\ 를 사"
"용해주세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:126
msgid ""
"The following methods were converted to properties with their respective "
"names changed:"
msgstr "다음 메서드들은 관련된 이름으로 변경된 속성들입니다:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:131
msgid "get_origin()"
msgstr "get_origin()"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:131
msgid "Origin"
msgstr "Origin"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:132
msgid "get_rotation()"
msgstr "get_rotation()"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:132
msgid "Rotation"
msgstr "Rotation"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:137
msgid "Plane"
msgstr "Plane"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:139
msgid ""
"The following method was converted to a property with a *slightly* different "
"name:"
msgstr "다음 메서드는 *약간* 다른 이름으로 변환된 속성입니다:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:144
msgid "center()"
msgstr "center()"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:144
msgid "Center"
msgstr "Center"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:148
msgid "Rect2"
msgstr "Rect2"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:150
msgid ""
"The following field was converted to a property with a *slightly* different "
"name:"
msgstr "다음 영역은 *약간* 다른 이름으로 변환된 속성입니다:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:155
msgid "end"
msgstr "end"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:155
msgid "End"
msgstr "End"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:163
msgid "get_area()"
msgstr "get_area()"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:163
msgid "Area"
msgstr "Area"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:167
msgid "Quat"
msgstr "Quat"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:169
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Quat()`` initializes all primitive members to their default value. Please "
"use ``Quat.Identity`` for the equivalent of ``Quat()`` in GDScript and C++."
msgstr ""
"C#에서 Struct는 매개변수 없는 생성자를 가질 수 없습니다. 따라서, ``new "
"Quat()``\\ 는 모든 기본 멤버를 기본 값으로 초기화합니다. GDScript와 C++에서 "
"``Quat()``\\ 에 해당하는 것으로 ``Quat.Identity``\\ 를 사용해주세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:174
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:182
msgid "Array"
msgstr "배열"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:176
msgid ""
"*This is temporary. Array is ref-counted, so it will need its own type that "
"wraps the native side. PoolArrays will also need their own type to be used "
"the way they are meant to.*"
msgstr ""
"*이것은 일시적인 것입니다. 배열은 ref를 셀 수 있고, 네이티브 측을 감싸는 타입"
"이 필요할 것입니다. PoolArray도 그들을 뜻하는 방법으로 자신들의 타입이 필요"
"할 것입니다.*"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:182
msgid "object[]"
msgstr "object[]"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:183
msgid "PoolIntArray"
msgstr "PoolIntArray"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:183
msgid "int[]"
msgstr "int[]"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:184
msgid "PoolByteArray"
msgstr "PoolByteArray"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:184
msgid "byte[]"
msgstr "byte[]"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:185
msgid "PoolFloatArray"
msgstr "PoolFloatArray"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:185
msgid "float[]"
msgstr "float[]"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:186
msgid "PoolStringArray"
msgstr "PoolStringArray"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:186
msgid "String[]"
msgstr "String[]"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:187
msgid "PoolColorArray"
msgstr "PoolColorArray"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:187
msgid "Color[]"
msgstr "Color[]"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:188
msgid "PoolVector2Array"
msgstr "PoolVector2Array"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:188
msgid "Vector2[]"
msgstr "Vector2[]"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:189
msgid "PoolVector3Array"
msgstr "PoolVector3Array"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:189
msgid "Vector3[]"
msgstr "Vector3[]"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:192
msgid ""
"In some exceptional cases, a raw array (``type[]``) may be required instead "
"of a ``List``."
msgstr ""
"일부 예외적인 경우로, ``List`` 대신 미가공 배열 (``type[]``)이 필요할 수도 있"
"습니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:195
msgid "Dictionary"
msgstr "딕셔너리"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:197
msgid ""
"*This is temporary. Array is ref-counted, so it will need its own type that "
"wraps the native side.*"
msgstr ""
"*이것은 일시적인 것입니다. 배열은 ref를 셀 수 있고, 네이티브 측을 감싸는 타입"
"이 필요할 것입니다.*"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:199
msgid "Use ``Dictionary<object, object>``."
msgstr "``Dictionary<object, object>``\\ 를 사용하세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:202
msgid "Variant"
msgstr "변수"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:204
msgid "``System.Object`` (``object``) is used instead of ``Variant``."
msgstr "``Variant`` 대신 ``System.Object`` (``object``)를 사용하세요."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:207
msgid "Communicating with other scripting languages"
msgstr "다른 스크립팅 언어와 소통하기"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:209
msgid ""
"The methods ``object Object.call(string method, params object[] args)``, "
"``object Object.get(string field)`` and ``object Object.set(string field, "
"object value)`` are provided to communicate with instances of other "
"scripting languages via the Variant API."
msgstr ""
"메서드 ``object Object.call(string method, params object[] args)``, ``object "
"Object.get(string field)`` 그리고 ``object Object.set(string field, object "
"value)``\\ 는 변수 API를 통해 다른 스크립팅 언어의 인스턴스와 소통하기 위해 "
"제공됩니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:215
msgid "Other differences"
msgstr "다른 차이점"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:217
msgid ""
"``preload``, ``assert`` and ``yield``, as they work in GDScript, are "
"currently not available in C#."
msgstr ""
"``preload``, ``assert`` 그리고 ``yield``\\ 가 GDScript에서는 작동하지만, 현재"
"로써 C#에서는 이용할 수 없습니다."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:220
msgid "Other differences:"
msgstr "다른 차이점:"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:225
msgid "Color8"
msgstr "Color8"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:225
msgid "Color.Color8"
msgstr "Color.Color8"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:226
msgid "is_inf"
msgstr "is_inf"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:226
msgid "float.IsInfinity"
msgstr "float.IsInfinity"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:227
msgid "is_nan"
msgstr "is_nan"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:227
msgid "float.IsNaN"
msgstr "float.IsNaN"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:228
msgid "dict2inst"
msgstr "dict2inst"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:228
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:229
msgid "? TODO"
msgstr "? TODO"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:229
msgid "inst2dict"
msgstr "inst2dict"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:230
msgid "load"
msgstr "load"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:230
msgid "GD.load, which is the same as ResourceLoader.load"
msgstr "GD.load, which is the same as ResourceLoader.load"
