# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 15:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/math/interpolation.rst:4
msgid "Interpolation"
msgstr "보간법 (Interpolation)"

#: ../../docs/tutorials/math/interpolation.rst:6
msgid ""
"Interpolation is a very basic operation in graphics programming. It's good "
"to become familiar with it in order to expand your horizons as a graphics "
"developer."
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:8
msgid ""
"The basic idea is that you want to transition from A to B. A value ``t``, "
"represents the states in-between."
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:10
msgid ""
"As an example if ``t`` is 0, then the state is A. If ``t`` is 1, then the "
"state is B. Anything in-between is an *interpolation*."
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:12
msgid ""
"Between two real (floating-point) numbers, a simple interpolation is usually "
"described as:"
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:19
msgid "And often simplified to:"
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:26
msgid ""
"The name of this type of interpolation, which transforms a value into "
"another at *constant speed* is *\"linear\"*. So, when you hear about *Linear "
"Interpolation*, you know they are referring to this simple formula."
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:28
msgid ""
"There are other types of interpolations, which will not be covered here. A "
"recommended read afterwards is the :ref:`Bezier <doc_beziers_and_curves>` "
"page."
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:31
#, fuzzy
msgid "Vector interpolation"
msgstr "벡터 연산"

#: ../../docs/tutorials/math/interpolation.rst:33
msgid ""
"Vector types (:ref:`Vector2 <class_Vector2>` and :ref:`Vector3 "
"<class_Vector3>`) can also be interpolated, they come with handy functions "
"to do it :ref:`Vector2.linear_interpolate() "
"<class_Vector2_method_linear_interpolate>` and :ref:`Vector3."
"linear_interpolate() <class_Vector3_method_linear_interpolate>`."
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:36
msgid ""
"For cubic interpolation, there are also :ref:`Vector2.cubic_interpolate() "
"<class_Vector2_method_linear_interpolate>` and :ref:`Vector3."
"cubic_interpolate() <class_Vector3_method_linear_interpolate>`, which do a :"
"ref:`Bezier <doc_beziers_and_curves>` style interpolation."
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:38
msgid ""
"Here is simple pseudo-code for going from point A to B using interpolation:"
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:48
#, fuzzy
msgid "It will produce the following motion:"
msgstr "적 씬은 다음 노드들을 사용할 것입니다:"

#: ../../docs/tutorials/math/interpolation.rst:53
#, fuzzy
msgid "Transform interpolation"
msgstr "변형 기능들"

#: ../../docs/tutorials/math/interpolation.rst:55
msgid ""
"It is also possible to interpolate whole transforms (make sure they have "
"either uniform scale or, at least, the same non-uniform scale). For this, "
"the function :ref:`Transform.interpolate_with() "
"<class_Transform_method_interpolate_with>` can be used."
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:58
msgid ""
"Here is an example of transforming a monkey from Position1 to Position2:"
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:62
#, fuzzy
msgid "Using the following pseudocode:"
msgstr "다음의 코드를 추가하세요:"

#: ../../docs/tutorials/math/interpolation.rst:74
msgid "And again, it will produce the following motion:"
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:80
#, fuzzy
msgid "Smoothing motion"
msgstr "옵션들 가져오기"

#: ../../docs/tutorials/math/interpolation.rst:82
msgid ""
"Interpolation can be used to smooth movement, rotation, etc. Here is an "
"example of a circle following the mouse using smoothed motion:"
msgstr ""

#: ../../docs/tutorials/math/interpolation.rst:94
#, fuzzy
msgid "Here is how it looks:"
msgstr "도표는 다음과 같습니다:"

#: ../../docs/tutorials/math/interpolation.rst:98
msgid ""
"This useful for smoothing camera movement, allies following you (ensuring "
"they stay within a certain range), and many other common game patterns."
msgstr ""
