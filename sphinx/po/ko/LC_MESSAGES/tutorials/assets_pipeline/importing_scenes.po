# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 18:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Importing 3D scenes"
msgstr "3D 씬 가져오기"

msgid "Godot scene importer"
msgstr "Godot 씬 임포터"

msgid ""
"When dealing with 3D assets, Godot has a flexible and configurable importer."
msgstr ""
"3D 애셋을 다룰 때, Godot는 유연하면서 설정할 수 있는 임포터를 가지고 있습니"
"다."

#, fuzzy
msgid ""
"Godot works with *scenes*. This means that the entire scene being worked on "
"in your favorite 3D modeling software will be transferred as close as "
"possible."
msgstr ""
"Godot는 *씬*\\ 으로 작업합니다. 이는 즉, 좋아하는 3D DCC에서 작업한 전체 씬"
"을 최대한 가깝게 전송한다는 것입니다."

msgid "Godot supports the following 3D *scene file formats*:"
msgstr "Godot는 아래와 같은 3D *씬 파일 형식* 을 지원합니다:"

msgid ""
"glTF 2.0 **(recommended)**. Godot has full support for both text (``.gltf``) "
"and binary (``.glb``) formats."
msgstr ""
"glTF 2.0 **(권장)**. Godot은 텍스트(``.gltf``)와 이진 파일 형식 (``.glb``) 모"
"두를 지원합니다."

msgid ""
"``.blend`` (Blender). This works by calling Blender to export to glTF in a "
"transparent manner (requires Blender to be installed)."
msgstr ""

msgid "DAE (COLLADA), an older format that is fully supported."
msgstr "DAE (COLLADA), 완전히 지원되는 오래단 파일 형식입니다."

#, fuzzy
msgid ""
"OBJ (Wavefront) format + their MTL material files. This is also fully "
"supported, but pretty limited given the format's limitations (no support for "
"pivots, skeletons, animations, UV2, PBR materials, ...)."
msgstr ""
"OBJ (Wavefront) 형식 + MTL 재질 파일. 완전히 지원하지만, 꽤 제한적입니다 (피"
"봇, 스켈레톤, 애니메이션, PBR 재질 등을 지원하지 않음)."

#, fuzzy
msgid ""
"FBX, supported via `FBX2glTF <https://github.com/godotengine/FBX2glTF>`__ "
"integration. This requires installing an external program that links against "
"the proprietary FBX SDK, so we recommend using other formats listed above "
"(if suitable for your workflow)."
msgstr ""
"FBX, 공개 에셋 가져오기 라이브러리를 통해 지원됩니다. 하지만, FBX는 사유 소프"
"트웨어이므로 워크플로우에 적합한 경우, 위에 나열된 다른 형식을 사용하는 것이 "
"좋습니다."

#, fuzzy
msgid ""
"Copy the scene file together with the textures and mesh data (if separate) "
"to the project repository, then Godot will do a full import when focusing "
"the editor window."
msgstr ""
"텍스처와 씬 파일을 함께 프로젝트 저장소에 복사하면 Godot가 완전히 가져올 것입"
"니다."

#, fuzzy
msgid "3D asset direction conventions"
msgstr "명명 규칙"

msgid ""
"Godot uses a right-handed, Y-is-up coordinate system, with the -Z axis as "
"the camera's forward direction. This is the same as OpenGL. This implies "
"that +Z is back, +X is right, and -X is left for a camera."
msgstr ""

msgid ""
"The convention for 3D assets is to face the opposite direction as the "
"camera, so that characters and other assets are facing the camera by "
"default. This convention is extremely common in 3D modeling applications, "
"and is `codified in glTF as part of the glTF 2.0 specification <https://"
"registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#coordinate-system-and-"
"units>`__. This means that for oriented 3D assets (such as characters), the "
"+Z axis is the direction of the front, so -Z is the rear, +X is the left "
"side, and -X is the right side for a 3D asset. In Blender, this means that "
"+Y is rear and -Y is front for an asset."
msgstr ""

msgid ""
"When rotating an oriented 3D asset in Godot, use the ``use_model_front`` "
"option on the ``look_at`` functions, and use the ``Vector3.MODEL_*`` "
"constants to perform calculations in the oriented asset's local space."
msgstr ""

msgid ""
"For assets without an intrinsic front side or forward direction, such as a "
"game map or terrain, take note of the cardinal directions instead. The "
"convention in Godot and the vast majority of other applications is that +X "
"is east and -X is west. Due to Godot's right-handed Y-is-up coordinate "
"system, this implies that +Z is south and -Z is north. In Blender, this "
"means that +Y is north and -Y is south."
msgstr ""

#, fuzzy
msgid "Exporting glTF 2.0 files from Blender (recommended)"
msgstr "블렌더에서 glTF 2.0 파일 내보내기"

#, fuzzy
msgid "There are 3 ways to export glTF files from Blender:"
msgstr "서버로 프로젝트를 내보낼 수 있는 방법이 두 가지 있습니다:"

msgid "As a glTF binary file (``.glb``)."
msgstr ""

msgid "As a glTF text-based file with embedded binary data (``.gltf`` file)"
msgstr ""

msgid ""
"As a glTF text-based file with separate binary data and textures (``.gltf`` "
"file + ``.bin`` file + textures)."
msgstr ""

#, fuzzy
msgid ""
"glTF binary files (``.glb``) are the smallest of the three options. They "
"include the mesh and textures set up in Blender. When brought into Godot the "
"textures are part of the object's material file."
msgstr ""
"glTF 이진 파일은 세 선택지중 용량이 가장 작습니다. Blender에서 설정된 메시와 "
"텍스처를 포함하고 있습니다. Godot에 불러왔을 때 텍스처는 오브젝트의 재질 파일"
"의 일부입니다."

#, fuzzy
msgid ""
"glTF embedded files (``.gltf``) function the same way as binary files. They "
"don't provide extra functionality in Godot, and shouldn't be used since they "
"have a larger file size."
msgstr ""
"glTF 임베디드 파일은 이진 파일과 같은 방식으로 동작합니다. Godot에서 추가적"
"인 기능을 제공하지 않으며 파일의 크기도 크므로 사용하지 않는 것이 좋습니다."

#, fuzzy
msgid ""
"There are two reasons to use glTF with the textures separate. One is to have "
"the scene description in a text based format and the binary data in a "
"separate binary file. This can be useful for version control if you want to "
"review changes in a text-based format. The second is you need the texture "
"files separate from the material file. If you don't need either of those, "
"glTF binary files are fine."
msgstr ""
"glTF을 텍스처와 분리해 사용해야하는 이유는 두 가지가 있습니다. 첫 번째는 씬"
"의 설명을 텍스트 기반의 포맷과 이진 데이터로 각각의 이진 파일에 저장하기 위함"
"입니다. 이 경우 버전 관리에서 텍스트 기반 포맷의 변경점을 검토해야 할 때 유용"
"합니다. 두 번째는 텍스처 파일을 재질 파일과 분리하기 위해서 입니다. 위 두 가"
"지 이점이 필요하지 않다면 glTF 이진 파일을 사용하는 것도 좋습니다."

msgid ""
"If your model contains blend shapes (also known as \"shape keys\" and "
"\"morph targets\"), your glTF export setting **Export Deformation Bones "
"Only** needs to be configured to **Enabled** under the Animation export "
"configurations."
msgstr ""

msgid "Exporting non-deforming bones anyway will lead to incorrect shading."
msgstr ""

#, fuzzy
msgid ""
"Blender versions older than 3.2 do not export emissive textures with the "
"glTF file. If your model uses one and you're using an older version of "
"Blender, it must be brought in separately."
msgstr ""
"Blender는 emissive 텍스처를 glTF 파일로 내보내는 것을 지원하지 않습니다. 만"
"약 모델이 emmisive 텍스처를 사용한다면 glTF를 나누어 불러와야 합니다."

msgid ""
"By default, Blender has backface culling disabled on materials and will "
"export materials to match how they render in Blender. This means that "
"materials in Godot will have their cull mode set to **Disabled**. This can "
"decrease performance since backfaces will be rendered, even when they are "
"being culled by other faces. To resolve this, enable **Backface Culling** in "
"Blender's Materials tab, then export the scene to glTF again."
msgstr ""
"Blender는 기본적으로 재질의 backface culling이 비활성화 되어 있으며 Blender에"
"서 렌더링되는 것과 같이 재질을 내보내려고 할 것입니다. 따라서 Godot에서도 재"
"질의 cull mode 옵션을 **Disabled** 로 설정해야 합니다. 이 경우 다른 면에 가려"
"질 때에도 backface가 렌더링 되므로 성능을 떨어뜨릴 수 있습니다. 이를 해결하려"
"면 Blender의 재질 탭에서 **Backface culling** 옵션을 활성화하십시오."

msgid "Importing ``.blend`` files directly within Godot"
msgstr ""

msgid ""
"This functionality requires Blender 3.0 or later. For best results, we "
"recommend using Blender 3.5 or later, as it includes many fixes to the glTF "
"exporter."
msgstr ""

msgid ""
"It is **strongly** recommended to use an official Blender release downloaded "
"from blender.org, as opposed to a Linux distribution package or Flatpak. "
"This avoids any issues related to packaging, such as different library "
"versions that can cause incompatibilities or sandboxing restrictions."
msgstr ""

msgid ""
"From Godot 4.0 onwards, the editor can directly import ``.blend`` files by "
"calling `Blender <https://www.blender.org/>`__'s glTF export functionality "
"in a transparent manner."
msgstr ""

msgid ""
"This allows you to iterate on your 3D scenes faster, as you can save the "
"scene in Blender, alt-tab back to Godot then see your changes immediately. "
"When working with version control, this is also more efficient as you no "
"longer need to commit a copy of the exported glTF file to version control."
msgstr ""

msgid ""
"To use ``.blend`` import, you must install Blender before opening the Godot "
"editor (if opening a project that already contains ``.blend`` files). If you "
"keep Blender installed at its default location, Godot should be able to "
"detect its path automatically. If this isn't the case, configure the path to "
"the directory containing the Blender executable in the Editor Settings "
"(**Filesystem > Import > Blender > Blender 3 Path**)."
msgstr ""

msgid ""
"If you keep ``.blend`` files within your project folder but don't want them "
"to be imported by Godot, disable **Filesystem > Import > Blender > Enabled** "
"in the advanced Project Settings."
msgstr ""

msgid ""
"When working in a team, keep in mind using ``.blend`` files in your project "
"will require *all* team members to have Blender installed. While Blender is "
"a free download, this may add friction when working on the project. ``."
"blend`` import is also not available on the Android and web editors, as "
"these platforms can't call external programs."
msgstr ""

msgid ""
"If this is problematic, consider using glTF scenes exported from Blender "
"instead."
msgstr ""

msgid "Exporting DAE files from Blender"
msgstr "블렌더에서 DAE 파일 내보내기"

#, fuzzy
msgid ""
"Blender has built-in COLLADA support, but it does not work properly for the "
"needs of game engines and shouldn't be used as-is. However, scenes exported "
"with the built-in Collada support may still work for simple scenes without "
"animation."
msgstr ""
"블렌더도 내장 COLLADA를 지원하지만, 게임 엔진의 필요에 맞게 동작하지 않으므"
"로 그대로 사용하지 않는 것이 좋습니다."

#, fuzzy
msgid ""
"For complex scenes or scenes that contain animations, Godot provides a "
"`Blender plugin <https://github.com/godotengine/collada-exporter>`_ that "
"will correctly export COLLADA scenes for use in Godot."
msgstr ""
"Godot는 Godot에 맞게 COLLADA 씬을 제대로 내보낼 수 있도록 `Blender 플러그인 "
"<https://github.com/godotengine/collada-exporter>`_ 을 지원합니다. Blender "
"2.8 이상의 버전에서는 동작하지 않지만 추후 업데이트가 있을 예정입니다."

#, fuzzy
msgid "Importing OBJ files in Godot"
msgstr "Godot 3.0+에서 애셋 가져오기"

msgid ""
"OBJ is one of the simplest 3D formats out there, so Godot should be able to "
"import most OBJ files successfully. However, OBJ is also a very limited "
"format: it doesn't support skinning, animation, UV2 or PBR materials."
msgstr ""

#, fuzzy
msgid "There are 2 ways to use OBJ meshes in Godot:"
msgstr ""
"리소스를 저장하는 두 가지 방법이 있습니다. 두 가지 방법은 다음과 같습니다:"

msgid ""
"Load them directly in a MeshInstance3D node, or any other property that "
"expects as mesh (such as GPUParticles3D). This is the default mode."
msgstr ""

msgid ""
"Change their import mode to **OBJ as Scene** in the Import dock then restart "
"the editor. This allows you to use the same import options as glTF or "
"Collada scenes, such as unwrapping UV2 on import (for :ref:"
"`doc_using_lightmap_gi`)."
msgstr ""

msgid ""
"Blender 3.4 and later can export RGB vertex colors in OBJ files (this is a "
"nonstandard extension of the OBJ format). Godot is able to import those "
"vertex colors since Godot 4.0, but they will not be displayed on the "
"material unless you enable **Vertex Color > Use As Albedo** on the material."
msgstr ""

msgid ""
"Vertex colors from OBJ meshes keep their original color space once imported "
"(sRGB/linear), but their brightness is clamped to 1.0 (they can't be "
"overbright)."
msgstr ""

#, fuzzy
msgid "Importing FBX files in Godot"
msgstr "Godot 3.0+에서 애셋 가져오기"

msgid ""
"When opening a project containing FBX scenes, you will see a dialog asking "
"you to configure FBX import. Click the link in the dialog to download a "
"fbx2gltf binary, then extract the ZIP archive, place the binary anywhere you "
"wish, then specify its path in the dialog."
msgstr ""

msgid ""
"If you keep ``.fbx`` files within your project folder but don't want them to "
"be imported by Godot, disable **Filesystem > Import > FBX > Enabled** in the "
"advanced Project Settings."
msgstr ""

msgid ""
"The full installation process for using FBX in Godot is described on the "
"`FBX import page of the Godot website <https://godotengine.org/fbx-"
"import>`__."
msgstr ""

msgid "Exporting textures separately"
msgstr "텍스처를 각각 내보내기"

#, fuzzy
msgid ""
"While textures can be exported with a model in certain file formats, such as "
"glTF 2.0, you can also export them separately. Godot uses PBR (physically "
"based rendering) for its materials, so if a texturing program can export PBR "
"textures they can work in Godot. This includes the `Substance suite <https://"
"www.substance3d.com/>`__, `ArmorPaint (open source) <https://armorpaint.org/"
">`__, and `Material Maker (open source) <https://github.com/RodZill4/"
"material-maker>`__."
msgstr ""
"glTF 2.0같은 몇몇 파일 포맷에서는 텍스처를 모델과 함께 내보낼 수 있지만, 따"
"로 내보내는 것도 가능합니다. Godot은 재질에 PBR(물리 기반 렌더링)을 사용하는"
"데, 텍스처 프로그램이 PBR 텍스처를 내보낼 수 있다면 Godot에서도 사용이 가능합"
"니다. `Substance suite <https://www.substance3d.com/>`__, `ArmorPaint (오픈 "
"소스) <https://armorpaint.org/>`__, 그리고`Material Maker (오픈 소스) "
"<https://github.com/RodZill4/material-maker>`__ 가 이에 해당됩니다."

#, fuzzy
msgid ""
"For more information on Godot's materials, see :ref:"
"`doc_standard_material_3d`."
msgstr "자세한 정보는 :ref:`doc_spatial_material` 페이지를 참고하십시오."

msgid "Exporting considerations"
msgstr "내보내기 고려 사항"

msgid ""
"Since GPUs can only render triangles, meshes that contain quads or N-gons "
"have to be *triangulated* before they can be rendered. Godot can triangulate "
"meshes on import, but results may be unpredictable or incorrect, especially "
"with N-gons. Regardless of the target application, triangulating *before* "
"exporting the scene will lead to more consistent results and should be done "
"whenever possible."
msgstr ""
"GPU가 삼각형만을 렌더링 할 수 있기 때문에 사각형 혹은 초과의 n각형을 포함하"
"는 메시는 렌더링 이전에 *triangulate* 되어야 합니다. Godot은 가져오기 과정에"
"서 메시를 triangulate 할 수 있지만, 특히 n각형의 경우는 예측 불가능하거나 잘"
"못된 결과가 나올 수 있습니다. 목표 애플리케이션에 관계 없이 씬을 내보내기 이"
"전에 triangulate하는 편이 더 안정적인 결과물을 만들기 때문에 가능하면 내보내"
"기 이전에 수행해야 합니다."

#, fuzzy
msgid ""
"To avoid issues with incorrect triangulation after importing in Godot, it is "
"recommended to make the 3D modeling software triangulate objects on its own. "
"In Blender, this can be done by adding a Triangulate modifier to your "
"objects and making sure **Apply Modifiers** is checked in the export dialog. "
"Alternatively, depending on the exporter, you may be able to find and enable "
"a **Triangulate Faces** option in the export dialog."
msgstr ""
"Godot에 가져오기 이후 잘못된 triangulation이 수행되는 것을 방지하기 위해 오브"
"젝트 자신의 3D DCC triangulate 오브젝트를 만드는 것을 권장합니다. Blender의 "
"경우 오브젝트에 Triangulate modifier를 추가한 뒤 내보내기 창에서 **Apply "
"Modifiers** 에 체크해 이 작업을 수행할 수 있습니다."

#, fuzzy
msgid ""
"To avoid issues with 3D selection in the editor, it is recommended to apply "
"the object transform in the 3D modeling software before exporting the scene."
msgstr ""
"에디터에서 3D 선택 항목에 문제가 생기는 것을 방지하기 위해 씬을 내보내기 전"
"에 3D DCC에 오브젝트 변환을 적용하는 것을 권장합니다."

msgid ""
"It is important that the mesh is not deformed by bones when exporting. Make "
"sure that the skeleton is reset to its T-pose or default rest pose before "
"exporting with your favorite 3D editor."
msgstr ""
"메시를 내보낼 때, 메시가 본에 의해 형태가 변하지 않는 것이 중요합니다. 좋아하"
"는 3D 편집기에서 메시를 내보낼 때, 스켈레톤이 기존의 T 포즈나 기본 휴식 포즈"
"로 되어있는지 확인하세요."

#, fuzzy
msgid "Lighting considerations"
msgstr "내보내기 고려 사항"

msgid ""
"While it's possible to import lights from a 3D scene using the glTF, ``."
"blend`` or Collada formats, it's generally advised to design the scene's "
"lighting in the Godot editor after importing the scene."
msgstr ""

msgid ""
"This allows you to get a more accurate feel for the final result, as "
"different engines will render lights in a different manner. This also avoids "
"any issues with lights appearing excessively strong or faint as a result of "
"the import process."
msgstr ""

msgid "Import workflows"
msgstr "워크플로 가져오기"

msgid ""
"Since Godot can only save its own scene format (``.tscn``/``.scn``), Godot "
"cannot save over the original 3D scene file (which uses a different format). "
"This is also a safer approach as it avoids making accidental changes to the "
"source file."
msgstr ""

msgid ""
"To allow customizing the scene and its materials, Godot's scene importer "
"allows for different workflows regarding how data is imported."
msgstr ""

#, fuzzy
msgid "Import dock after selecting a 3D scene in the FileSystem dock"
msgstr "파일 시스템 독에서 스크립트를 찾기."

msgid ""
"This import process is customizable using 3 separate interfaces, depending "
"on your needs:"
msgstr ""

msgid ""
"The **Import** dock, after selecting the 3D scene by clicking it once in the "
"FileSystem dock."
msgstr ""

msgid ""
"The **Advanced Import Settings** dialog, which can be accessed by double-"
"clicking the 3D scene in the FileSystem dock or by clicking the **Advanced…"
"** button in the Import dock. This allows you to customize per-object "
"options in Godot."
msgstr ""

msgid ""
":ref:`Import hints <doc_importing_3d_scenes_import_hints>`, which are "
"special suffixes added to object names in the 3D modeling software. This "
"allows you to customize per-object options in the 3D modeling software."
msgstr ""

msgid ""
"For basic customization, using the Import dock suffices. However, for more "
"complex operations such as defining material overrides on a per-material "
"basis, you'll need to use the Advanced Import Settings dialog, import hints, "
"or possibly both."
msgstr ""

#, fuzzy
msgid "Using the Import dock"
msgstr "웹 에디터 사용하기"

msgid ""
"The following options can be adjusted in the Import dock after selecting a "
"3D scene in the FileSystem dock:"
msgstr ""

msgid ""
"**Root Type:** The node type to use as a root node. Using node types that "
"inherit from Node3D is recommended. Otherwise, you'll lose the ability to "
"position the node directly in the 3D editor."
msgstr ""

msgid ""
"**Root Name:** The name of the root node in the imported scene. This is "
"generally not noticeable when instancing the scene in the editor (or drag-"
"and-dropping from the FileSystem dock), as the root node is renamed to match "
"the filename in this case."
msgstr ""

msgid ""
"**Apply Root Scale:** If enabled, **Root Scale** will be *applied* on the "
"meshes and animations directly, while keeping the root node's scale to the "
"default `(1, 1, 1)`. This means that if you add a child node later on within "
"the imported scene, it won't be scaled. If disabled, **Root Scale** will "
"multiply the scale of the root node instead."
msgstr ""

#, fuzzy
msgid "**Meshes**"
msgstr "메쉬"

msgid ""
"**Ensure Tangents:** If checked, generate vertex tangents using `Mikktspace "
"<http://www.mikktspace.com/>`__ if the input meshes don't have tangent data. "
"When possible, it's recommended to let the 3D modeling software generate "
"tangents on export instead on relying on this option. Tangents are required "
"for correct display of normal and height maps, along with any material/"
"shader features that require tangents. If you don't need material features "
"that require tangents, disabling this can reduce output file size and speed "
"up importing if the source 3D file doesn't contain tangents."
msgstr ""

msgid ""
"**Generate LODs:** If checked, generates lower detail variants of the mesh "
"which will be displayed in the distance to improve rendering performance. "
"Not all meshes benefit from LOD, especially if they are never rendered from "
"far away. Disabling this can reduce output file size and speed up importing. "
"See :ref:`doc_mesh_lod` for more information."
msgstr ""

msgid ""
"**Create Shadow Meshes:** If checked, enables the generation of shadow "
"meshes on import. This optimizes shadow rendering without reducing quality "
"by welding vertices together when possible. This in turn reduces the memory "
"bandwidth required to render shadows. Shadow mesh generation currently "
"doesn't support using a lower detail level than the source mesh (but shadow "
"rendering will make use of LODs when relevant)."
msgstr ""

msgid ""
"**Light Baking:** Configures the meshes' :ref:`global illumination mode "
"<class_GeometryInstance3D_property_gi_mode>` in the 3D scene. If set to "
"**Static Lightmaps**, sets the meshes' GI mode to **Static** and generates "
"UV2 on import for :ref:`lightmap baking <doc_using_lightmap_gi>`."
msgstr ""

msgid ""
"**Lightmap Texel Size:** Only visible if **Light Baking** is set to **Static "
"Lightmaps**. Controls the size of each texel on the baked lightmap. A "
"smaller value results in more precise lightmaps, at the cost of larger "
"lightmap sizes and longer bake times."
msgstr ""

#, fuzzy
msgid "**Skins**"
msgstr "**하늘:**"

msgid ""
"**Use Named Skins:** If checked, use named :ref:`Skins <class_Skin>` for "
"animation. The :ref:`class_MeshInstance3D` node contains 3 properties of "
"relevance here: a skeleton NodePath pointing to the Skeleton3D node (usually "
"``..``), a mesh, and a skin:"
msgstr ""

msgid ""
"The :ref:`class_Skeleton3D` node contains a list of bones with names, their "
"pose and rest, a name and a parent bone."
msgstr ""

msgid ""
"The mesh is all of the raw vertex data needed to display a mesh. In terms of "
"the mesh, it knows how vertices are weight-painted and uses some internal "
"numbering often imported from 3D modeling software."
msgstr ""

msgid ""
"The skin contains the information necessary to bind this mesh onto this "
"Skeleton3D. For every one of the internal bone IDs chosen by the 3D modeling "
"software, it contains two things. Firstly, a Matrix known as the Bind Pose "
"Matrix, Inverse Bind Matrix, or IBM for short. Secondly, the Skin contains "
"each bone's name (if **Use Named Skins** is enabled), or the bone's index "
"within the Skeleton3D list (if **Use Named Skins** is disabled)."
msgstr ""

msgid ""
"Together, this information is enough to tell Godot how to use the bone poses "
"in the Skeleton3D node to render the mesh from each MeshInstance3D. Note "
"that each MeshInstance3D may share binds, as is common in models exported "
"from Blender, or each MeshInstance3D may use a separate Skin object, as is "
"common in models exported from other tools such as Maya."
msgstr ""

#, fuzzy
msgid "**Animation**"
msgstr "애니메이션"

msgid "**Import:** If checked, import animations from the 3D scene."
msgstr ""

msgid ""
"**FPS:** The number of frames per second to use for baking animation curves "
"to a series of points with linear interpolation. It's recommended to "
"configure this value to match the value you're using as a baseline in your "
"3D modeling software. Higher values result in more precise animation with "
"fast movement changes, at the cost of higher file sizes and memory usage. "
"Thanks to interpolation, there is usually not much benefit in going above 30 "
"FPS (as the animation will still appear smooth at higher rendering "
"framerates)."
msgstr ""

msgid ""
"**Trimming:** Trim the beginning and end of animations if there are no "
"keyframe changes. This can reduce output file size and memory usage with "
"certain 3D scenes, depending on the contents of their animation tracks."
msgstr ""

msgid ""
"**Remove Immutable Tracks:** Remove animation tracks that only contain "
"default values. This can reduce output file size and memory usage with "
"certain 3D scenes, depending on the contents of their animation tracks."
msgstr ""

#, fuzzy
msgid "**Import Script**"
msgstr "**JavaScript**"

msgid ""
"**Path:** Path to an import script, which can run code *after* the import "
"process has completed for custom processing. See :ref:"
"`doc_importing_3d_scenes_import_script` for more information."
msgstr ""

msgid "**glTF**"
msgstr ""

msgid ""
"**Embedded Texture Handling:** Controls how textures embedded within glTF "
"scenes should be handled. **Discard All Textures** will not import any "
"textures, which is useful if you wish to manually set up materials in Godot "
"instead. **Extract Textures** extracts textures to external images, "
"resulting in smaller file sizes and more control over import options. "
"**Embed as Basis Universal** and **Embed as Uncompressed** keeps the "
"textures embedded in the imported scene, with and without VRAM compression "
"respectively."
msgstr ""

msgid "Using the Advanced Import Settings dialog"
msgstr ""

msgid ""
"The first tab you'll see is the **Scene** tab. The options available in the "
"panel on the right are identical to the Import dock, but you have access to "
"a 3D preview. The 3D preview can be rotated by holding down the left mouse "
"button then dragging the mouse. Zoom can be adjusted using the mouse wheel."
msgstr ""

msgid "Advanced Import Settings dialog (Scene tab)"
msgstr ""

msgid ""
"Advanced Import Settings dialog (Scene tab). Credit: `Modern Arm Chair 01 - "
"Poly Haven <https://polyhaven.com/a/modern_arm_chair_01>`__"
msgstr ""

#, fuzzy
msgid "**Configuring node import options**"
msgstr "번역을 가져와서 구성하기"

msgid ""
"You can select individual nodes that compose the scene while in the "
"**Scene** tab using the tree view at the left:"
msgstr ""

msgid "Selecting a node in the Advanced Import Settings dialog (Scene tab)"
msgstr ""

msgid "Selecting a node in the Advanced Import Settings dialog (Materials tab)"
msgstr ""

msgid "This exposes several per-node import options:"
msgstr ""

msgid ""
"**Skip Import:** If checked, the node will not be present in the final "
"imported scene. Enabling this disables all other options."
msgstr ""

msgid ""
"**Generate > Physics:** If checked, generates a PhysicsBody3D *parent* node "
"with collision shapes that are *siblings* to the MeshInstance3D node."
msgstr ""

msgid ""
"**Generate > NavMesh:** If checked, generates a NavigationRegion3D *child* "
"node for :ref:`navigation <doc_navigation_overview_3d>`. **Mesh + NavMesh** "
"will keep the original mesh visible, while **NavMesh Only** will only import "
"the navigation mesh (without a visual representation). **NavMesh Only** is "
"meant to be used when you've manually authored a simplified mesh for "
"navigation."
msgstr ""

msgid ""
"**Generate > Occluder:** If checked, generates an OccluderInstance3D "
"*sibling* node for :ref:`occlusion culling <doc_occlusion_culling>` using "
"the mesh's geometry as a basis for the occluder's shape. **Mesh + Occluder** "
"will keep the original mesh visible, while **Occluder Only** will only "
"import the occluder (without a visual representation). **Occluder Only** is "
"meant to be used when you've manually authored a simplified mesh for "
"occlusion culling."
msgstr ""

msgid ""
"These options are only visible if some of the above options are enabled:"
msgstr ""

msgid ""
"**Physics > Body Type:** Only visible if **Generate > Physics** is enabled. "
"Controls the PhysicsBody3D that should be created. **Static** creates a "
"StaticBody3D, **Dynamic** creates a RigidBody3D, **Area** creates an Area3D."
msgstr ""

msgid ""
"**Physics > Shape Type:** Only visible if **Generate > Physics** is enabled. "
"**Trimesh** allows for precise per-triangle collision, but it can only be "
"used with a **Static** body type. Other types are less precise and may "
"require manual configuration, but can be used with any body type. For static "
"level geometry, use **Trimesh**. For dynamic geometry, use primitive shapes "
"if possible for better performance, or use one of the convex decomposition "
"modes if the shape is large and complex."
msgstr ""

msgid ""
"**Decomposition > Advanced:** Only visible if **Physics > Shape Type** is "
"**Decompose Convex**. If checked, allows adjusting advanced decomposition "
"options. If disabled, only a preset **Precision** can be adjusted (which is "
"usually sufficient)."
msgstr ""

msgid ""
"**Decomposition > Precision:** Only visible if **Physics > Shape Type** is "
"**Decompose Convex**. Controls the precision to use for convex "
"decomposition. Higher values result in more detailed collision, at the cost "
"of slower generation and increased CPU usage during physics simulation. To "
"improve performance, it's recommended to keep this value as low as possible "
"for your use cases."
msgstr ""

msgid ""
"**Occluder > Simplification Distance:** Only visible if **Generate > "
"Occluder** is set to **Mesh + Occluder** or **Occluder Only**. Higher values "
"result in a occluder mesh with fewer vertices (resulting in decreased CPU "
"utilization), at the cost of more occlusion culling issues (such as false "
"positives or false negatives). If you run into objects disappearing when "
"they shouldn't when the camera is near a certain mesh, try decreasing this "
"value."
msgstr ""

#, fuzzy
msgid "**Configuring mesh and material import options**"
msgstr "번역을 가져와서 구성하기"

msgid ""
"In the Advanced Import Settings dialog, there are 2 ways to select "
"individual meshes or materials:"
msgstr ""

#, fuzzy
msgid ""
"Switch to the **Meshes** or **Materials** tab in the top-left corner of the "
"dialog."
msgstr "ball이 좌상단 구석의 뷰 포트에 나옵니다."

msgid ""
"Stay in the **Scene** tab, but unfold the options on the tree view on the "
"left. After choosing a mesh or material, this presents the same information "
"as the **Meshes** and **Materials** tabs, but in a tree view instead of a "
"list."
msgstr ""

msgid ""
"If you select a mesh, different options will appear in the panel on the "
"right:"
msgstr ""

msgid "Advanced Import Settings dialog (Meshes tab)"
msgstr ""

#, fuzzy
msgid "The options are as follows:"
msgstr "가장 일반적인 사용 케이스는 다음과 같습니다:"

msgid ""
"**Save to File:** Saves the :ref:`class_Mesh` *resource* to an external file "
"(this isn't a scene file). You generally don't need to use this for placing "
"the mesh in a 3D scene – instead, you should instance the 3D scene directly. "
"However, having direct access to the Mesh resource is useful for specific "
"nodes, such as :ref:`class_MeshInstance3D`, :ref:"
"`class_MultiMeshInstance3D`, :ref:`class_GPUParticles3D` or :ref:"
"`class_CPUParticles3D`. - You will also need to specify an output file path "
"using the option that appears after enabling **Save to File**. It's "
"recommended to use the ``.res`` output file extension for smaller file sizes "
"and faster loading speeds, as ``.tres`` is inefficient for writing large "
"amounts of data."
msgstr ""

msgid ""
"**Generate > Shadow Meshes:** Per-mesh override for the **Meshes > Create "
"Shadow Meshes** scene-wide import option described in :ref:"
"`doc_importing_3d_scenes_using_the_import_dock`. **Default** will use the "
"scene-wide import option, while **Enable** or **Disable** can forcibly "
"enable or disable this behavior on a specific mesh."
msgstr ""

msgid ""
"**Generate > Lightmap UV:** Per-mesh override for the **Meshes > Light "
"Baking** scene-wide import option described in :ref:"
"`doc_importing_3d_scenes_using_the_import_dock`. **Default** will use the "
"scene-wide import option, while **Enable** or **Disable** can forcibly "
"enable or disable this behavior on a specific mesh. - Setting this to "
"**Enable** on a scene with the **Static** light baking mode is equivalent to "
"configuring this mesh to use **Static Lightmaps**. Setting this to "
"**Disable** on a scene with the **Static Lightmaps** light baking mode is "
"equivalent to configuring this mesh to use **Static** instead."
msgstr ""

msgid ""
"**Generate > LODs:** Per-mesh override for the **Meshes > Generate LODs** "
"scene-wide import option described in :ref:"
"`doc_importing_3d_scenes_using_the_import_dock`. **Default** will use the "
"scene-wide import option, while **Enable** or **Disable** can forcibly "
"enable or disable this behavior on a specific mesh."
msgstr ""

msgid ""
"**LODs > Normal Split Angle:** The minimum angle difference between two "
"vertices required to preserve a geometry edge in mesh LOD generation. If "
"running into visual issues with LOD generation, decreasing this value may "
"help (at the cost of less efficient LOD generation)."
msgstr ""

msgid ""
"**LODs > Normal Merge Angle:** The minimum angle difference between two "
"vertices required to preserve a geometry edge in mesh LOD generation. If "
"running into visual issues with LOD generation, decreasing this value may "
"help (at the cost of less efficient LOD generation)."
msgstr ""

msgid ""
"If you select a material, only one option will appear in the panel on the "
"right:"
msgstr ""

msgid "Advanced Import Settings dialog (Materials tab)"
msgstr ""

msgid ""
"When **Use External** is checked and an output path is specified, this lets "
"you use an external material instead of the material that is included in the "
"original 3D scene file; see the section below."
msgstr ""

#, fuzzy
msgid "Extracting materials to separate files"
msgstr "텍스처를 각각 내보내기"

msgid ""
"While Godot can import materials authored in 3D modeling software, the "
"default configuration may not be suitable for your needs. For example:"
msgstr ""

msgid ""
"You want to configure material features not supported by your 3D application."
msgstr ""

msgid ""
"You want to use a different texture filtering mode, as this option is "
"configured in the material since Godot 4.0 (and not in the image)."
msgstr ""

msgid ""
"You want to replace one of the materials with an entirely different "
"material, such as a custom shader."
msgstr ""

msgid ""
"To be able to modify the 3D scene's materials in the Godot editor, you need "
"to use *external* material resources."
msgstr ""

msgid ""
"In the top-left corner of the Advanced Import Settings dialog, choose "
"**Actions… > Extract Materials**:"
msgstr ""

msgid ""
"Extracting all built-in materials to external resources in the Advanced "
"Import Settings dialog"
msgstr ""

msgid ""
"After choosing this option, select a folder to extract material ``.tres`` "
"files to, then confirm the extraction:"
msgstr ""

msgid ""
"Confirming material extraction in the Advanced Import Settings subdialog"
msgstr ""

msgid ""
"After extracting materials, the 3D scene will automatically be configured to "
"use external material references. As a result, you don't need to manually "
"enable **Use External** on every material to make the external ``.tres`` "
"material effective."
msgstr ""

msgid ""
"When **Use External** is enabled, remember that the Advanced Import Settings "
"dialog will keep displaying the mesh's original materials (the ones designed "
"in the 3D modeling software). This means your customizations to the "
"materials won't be visible within this dialog. To preview your modified "
"materials, you need to place the imported 3D scene in another scene using "
"the editor."
msgstr ""

msgid ""
"Godot will not overwrite changes made to extracted materials when the source "
"3D scene is reimported. However, if the material name is changed in the "
"source 3D file, the link between the original material and the extracted "
"material will be lost. As a result, you'll need to use the Advanced Import "
"Settings dialog to associate the renamed material to the existing extracted "
"material."
msgstr ""

msgid ""
"The above can be done in the dialog's **Materials** tab by selecting the "
"material, enabling **Save to File**, then specifying the save path using the "
"**Path** option that appears after enabling **Save to File**."
msgstr ""

msgid "Using import scripts for automation"
msgstr ""

#, fuzzy
msgid ""
"A special script to process the whole scene after import can be provided. "
"This is great for post-processing, changing materials, doing funny stuff "
"with the geometry, and more."
msgstr ""
"특수한 스크립트로 가져오기 이후 전체 씬을 처리하는 것도 가능합니다. 후처리, "
"재질 변경, 도형으로 장난을 치는 일 등에 유용합니다."

msgid ""
"Create a script that is not attached to any node by right-clicking in the "
"FileSystem dock and choosing **New > Script…**. In the script editor, write "
"the following:"
msgstr ""

#, fuzzy
msgid ""
"The ``_post_import(scene: Node)`` function takes the imported scene as "
"argument (the parameter is actually the root node of the scene). The scene "
"that will finally be used **must** be returned (even if the scene can be "
"entirely different)."
msgstr ""
"``post_import`` 함수는 가져온 씬을 인수로 받습니다 (매개변수는 사실 씬의 루"
"트 노드입니다). 마지막으로 사용되는 씬은 반환되어야 합니다. 그것은 다른 것일 "
"수 있습니다."

#, fuzzy
msgid "Using animation libraries"
msgstr "애니메이션 트리"

msgid ""
"As of Godot 4.0, you can choose to import **only** animations from a glTF "
"file and nothing else. This is used in some asset pipelines to distribute "
"animations separately from models. For example, this allows you to use one "
"set of animations for several characters, without having to duplicate "
"animation data in every character."
msgstr ""

msgid ""
"To do so, select the glTF file in the FileSystem dock, then change the "
"import mode to Animation Library in the Import dock:"
msgstr ""

msgid "Changing the import type to Animation Library in the Import dock"
msgstr ""

msgid ""
"Click **Reimport** and restart the editor when prompted. After restarting, "
"the glTF file will be imported as an :ref:`class_AnimationLibrary` instead "
"of a :ref:`class_PackedScene`. This animation library can then be referenced "
"in an :ref:`class_AnimationPlayer` node."
msgstr ""

msgid ""
"The import options that are visible after changing the import mode to "
"Animation Library act the same as when using the Scene import mode. See :ref:"
"`doc_importing_3d_scenes_using_the_import_dock` for more information."
msgstr ""

#, fuzzy
msgid "Filter script"
msgstr "필터 스크립트"

msgid ""
"It is possible to specify a filter script in a special syntax to decide "
"which tracks from which animations should be kept."
msgstr ""
"어떤 애니메이션의 어떤 트랙을 골라낼 지 결정하기 위해 필터 스크립트를 특수한 "
"문법으로 정의할 수 있습니다."

#, fuzzy
msgid ""
"The filter script is executed against each imported animation. The syntax "
"consists of two types of statements, the first for choosing which animations "
"to filter, and the second for filtering individual tracks within the matched "
"animation. All name patterns are performed using a case-insensitive "
"expression match, with support for ``?`` and ``*`` wildcards (using :ref:"
"`String.matchn() <class_String_method_matchn>` under the hood)."
msgstr ""
"필터 스크립트는 가져온 모든 애니메이션에 수행됩니다. 문법은 두 가지 문항으로 "
"이루어졌는데, 첫 번째는 어떤 애니메이션을 필터링 하는지 결정하는 것이고, 두 "
"번째는 해당하는 애니메이션에서 개별의 트랙을 필터링 하는 것 입니다. 이름 패턴"
"은 ``?`` 와 ``*`` 와일드카드를 사용해서 대소문자 구분 없는 표현식으로 매칭이 "
"수행됩니다(내부적으로 ``String.matchn()`` 을 사용합니다)."

msgid ""
"The script must start with an animation filter statement (as denoted by the "
"line beginning with an ``@``). For example, if we would like to apply "
"filters to all imported animations which have a name ending in "
"``\"_Loop\"``::"
msgstr ""
"스크립트는 항상 애니메이션 필터 문항으로 시작해야 합니다(``@`` 로 라인이 시작"
"이 표시된 바로 뒤에). 예를 들어 ``\"_Loop\"`` 로 끝나는 모든 애니메이션에 필"
"터를 적용하려면 다음과 같이 해야 합니다::"

msgid ""
"Similarly, additional patterns can be added to the same line, separated by "
"commas. Here is a modified example to additionally *include* all animations "
"with names that begin with ``\"Arm_Left\"``, but also *exclude* all "
"animations which have names ending in ``\"Attack\"``::"
msgstr ""
"비슷한 맥락에서 같은 줄에 쉼표로 구분되도록 패턴을 추가할 수도 있습니다. "
"``\"Arm_Left\"``로 시작하는 애니메이션을 모두 *포함* 시키고 ``\"Attack\"`` 으"
"로 끝나는 애니메이션은 모두 *제외* 시키는 예제는 다음과 같습니다::"

msgid ""
"Following the animation selection filter statement, we add track filtering "
"patterns to indicate which animation tracks should be kept or discarded. If "
"no track filter patterns are specified, then all tracks within the matched "
"animations will be discarded!"
msgstr ""
"애니메이션 필터 문항 다음에는 어떤 애니메이션의 트랙을 골라낼 지 결정하는 트"
"랙 필터 패턴을 추가해야 합니다. 만약 필터 패턴을 정하지 않으면 골라낸 애니메"
"이션의 모든 트랙이 그냥 버려집니다!"

msgid ""
"It's important to note that track filter statements are applied in order for "
"each track within the animation, this means that one line may include a "
"track, a later rule can still discard it. Similarly, a track excluded by an "
"early rule may then be re-included once again by a filter rule further down "
"in the filter script."
msgstr ""
"트랙 필터문이 애니메이션의 모든 개별 트랙에 적용된다는 사실을 이해하는 것이 "
"중요합니다. 이는 한 문항에 의해 트랙이 포함되었더라도 이후에 나오는 문항에 의"
"해 다시 제외될 수 있다는 뜻이니까요. 같은 맥락으로 앞의 문항에 의해 제외된 트"
"랙 역시 나중에 나오는 문항에 의해 다시 포함될 수 있습니다."

msgid ""
"For example: include all tracks in animations with names ending in "
"``\"_Loop\"``, but discard any tracks affecting a ``\"Skeleton\"`` which end "
"in ``\"Control\"``, unless they have ``\"Arm\"`` in their name::"
msgstr ""
"예를 들어서 ``\"_Loop\"`` 으로 끝나는 애니메이션의 모든 트랙을 추가한 뒤 "
"``\"Skeleton\"`` 으로 시작하는 트랙 중 ``\"Control\"`` 로 끝나는 트랙은 "
"``\"Arm\"`` 이 포함되지 않으면 제외하는 필터문은 다음과 같습니다::"

msgid ""
"In the above example, tracks like ``\"Skeleton:Leg_Control\"`` would be "
"discarded, while tracks such as ``\"Skeleton:Head\"`` or ``\"Skeleton:"
"Arm_Left_Control\"`` would be retained."
msgstr ""
"위 예제에서 ``\"Skeleton:Leg_Control\"`` 은 제외되지만 ``\"Skeleton:Head\"`` "
"나 ``\"Skeleton:Arm_Left_Control\"`` 는 포함될 것입니다."

msgid ""
"Any track filter lines that do not begin with a ``+`` or ``-`` are ignored."
msgstr "트랙 필터 중 ``+`` 또는 ``-`` 로 시작하지 않는 줄은 모두 제외됩니다."

msgid "Storage"
msgstr "보관소"

msgid ""
"By default, animations are saved as built-in. It is possible to save them to "
"a file instead. This allows adding custom tracks to the animations and "
"keeping them after a reimport."
msgstr ""
"기본적으로, 애니메이션은 내장되어 저장됩니다. 대신 파일로 애니메이션을 저장"
"할 수도 있습니다. 이렇게 하면 맞춤 트랙을 애니메이션에 추가할 수 있고, 다시 "
"가져온 후에도 이를 유지할 수 있습니다."

msgid "Optimizer"
msgstr "최적화 도구"

msgid ""
"When animations are imported, an optimizer is run, which reduces the size of "
"the animation considerably. In general, this should always be turned on "
"unless you suspect that an animation might be broken due to it being enabled."
msgstr ""
"애니메이션을 가져올 때 옵티마이저(optimizer)가 실행되어 애니메이션의 크기는 "
"상당히 줄어듭니다. 일반적으로, 옵티마이저가 활성화되어 있기 때문에 애니메이션"
"이 손상되었다고 의심되는 상황이 아니라면 항상 활성화되어 있어야 합니다."

msgid "Clips"
msgstr "클립"

msgid ""
"It is possible to specify multiple animations from a single timeline as "
"clips. For this to work, the model must have only one animation that is "
"named ``default``. To create clips, change the clip amount to something "
"greater than zero. You can then name a clip, specify which frames it starts "
"and stops on, and choose whether the animation loops or not."
msgstr ""
"클립의 형태로 하나의 타임라인에 여러 개의 애니메이션을 지정하는 것 역시 가능"
"합니다. 이를 위해서는 모델에 ``default`` 로 작명된 애니메이션은 단 하나만 존"
"재해야 합니다. 클립을 생성하려면 클립 개수를 0보다 큰 값으로 변경하면 됩니"
"다. 이후 클립의 이름, 시작 프레임과 끝 프레임 및 애니메이션의 반복 여부를 정"
"할 수 있습니다."

msgid "Scene inheritance"
msgstr "씬 상속"

#, fuzzy
msgid ""
"In many cases, it may be desired to make manual modifications to the "
"imported scene. By default, this is not possible because if the source 3D "
"asset changes, Godot will re-import the *whole* scene."
msgstr ""
"많은 상황에서, 가져온 씬을 수정하고 싶을 것입니다. 기본적으로 원본 애셋(3D 모"
"델링 앱에서 다시 내보낸 원본 .dae, .gltf, .obj 파일)이 바뀌기 때문에 그렇게 "
"할 수는 없고 , Godot는 전체 씬을 다시 가져올 것입니다."

#, fuzzy
msgid ""
"However, it is possible to make local modifications by using *scene "
"inheritance*. If you try to open the imported scene using **Scene > Open "
"Scene…** or **Scene > Quick Open Scene…**, the following dialog will appear:"
msgstr ""
"하지만, *씬 상속*\\ 을 사용하면 로컬로 수정하는 것이 가능합니다. 가져온 씬을 "
"열면 다음 대화 상자가 나타납니다:"

msgid "Dialog when opening an imported 3D scene in the editor"
msgstr ""

#, fuzzy
msgid "In inherited scenes, the only limitations for modification are:"
msgstr "상속된 씬에서, 수정에 대한 유일한 제한은 다음과 같습니다:"

#, fuzzy
msgid ""
"Nodes from the base scene can't be removed, but additional nodes can be "
"added anywhere."
msgstr "노드는 삭제될 수 없습니다 (하지만 어디에나 추가될 수 있습니다)."

#, fuzzy
msgid ""
"Subresources can't be edited. Instead, you need to save them externally as "
"described above."
msgstr ""
"하위 리소스를 편집할 수 없습니다 (이를 위해선 위에서 설명했듯 외부로 저장해"
"야 합니다)"

#, fuzzy
msgid "Other than that, everything is allowed."
msgstr "그 외에는 모든 것이 허용됩니다!"

msgid "Import hints"
msgstr "가져오기 힌트"

msgid ""
"Many times, when editing a scene, there are common tasks that need to be "
"done after exporting:"
msgstr "여러번 씬을 편집할 때, 내보낸 후 해야 하는 일반적인 작업이 있습니다:"

msgid "Adding collision detection to objects."
msgstr "오브젝트에 콜리전 감지를 추가하기."

msgid "Setting objects as navigation meshes."
msgstr "오브젝트를 내비게이션 메시로 설정하기."

#, fuzzy
msgid ""
"Deleting nodes that are not used in the game engine (like specific lights "
"used for modelling)."
msgstr ""
"(모델링에 사용되는 특정 빛과 같이) 게임 엔진에 사용되는 않는 노드 지우기"

msgid ""
"To simplify this workflow, Godot offers several suffixes that can be added "
"to the names of the objects in your 3D modelling software. When imported, "
"Godot will detect suffixes in object names and will perform actions "
"automatically."
msgstr ""
"이 워크플로를 간단히 하기 위해, Godot는 3D 모델링 소프트웨어에서 오브젝트의 "
"이름에 붙일 수 있는 몇몇 접미사를 제공합니다. 가져올 때, Godot는 이를 감지하"
"고 자동으로 동작을 수행합니다:"

#, fuzzy
msgid "All the suffixes described below are **case-sensitive**."
msgstr "아래에 설명된 모든 접미사들은 *대소문자를 구분합니다*."

msgid "Remove nodes (-noimp)"
msgstr "노드 삭제 (-noimp)"

msgid ""
"Objects that have the ``-noimp`` suffix will be removed at import-time no "
"matter what their type is. They will not appear in the imported scene."
msgstr ""
"``-noimp`` 접미사를 갖고 있는 오브젝트가 어떤 타입이든지 가져올 때 제거될 것"
"입니다. 가져온 씬에서 나타나지 않습니다."

msgid ""
"This is equivalent to enabling **Skip Import** for a node in the Advanced "
"Import Settings dialog."
msgstr ""

msgid "Create collisions (-col, -convcol, -colonly, -convcolonly)"
msgstr "콜리전 생성 (-col, -convcol, -colonly, -convcolonly)"

msgid ""
"The option ``-col`` will work only for Mesh objects. If it is detected, a "
"child static collision node will be added, using the same geometry as the "
"mesh. This will create a triangle mesh collision shape, which is a slow, but "
"accurate option for collision detection. This option is usually what you "
"want for level geometry (but see also ``-colonly`` below)."
msgstr ""
"``-col`` 옵션은 메시 오브젝트에만 적용됩니다. 만약 접미사가 감지되면 동일한 "
"도형을 메시로 사용해 자식 정적 콜리전 노드가 추가됩니다. 이 옵션에서는 느리지"
"만 충돌 감지가 정확한 삼각형 메시 콜리전 모양이 생성됩니다. 레벨 지형을 만드"
"는데 적합한 옵션입니다 (하지만 하단의 ``-colony`` 또한 확인해보십시오)."

#, fuzzy
msgid ""
"The option ``-convcol`` will create a :ref:`class_ConvexPolygonShape3D` "
"instead of a :ref:`class_ConcavePolygonShape3D`. Unlike triangle meshes "
"which can be concave, a convex shape can only accurately represent a shape "
"that doesn't have any concave angles (a pyramid is convex, but a hollow box "
"is concave). Due to this, convex collision shapes are generally not suited "
"for level geometry. When representing simple enough meshes, convex collision "
"shapes can result in better performance compared to a triangle collision "
"shape. This option is ideal for simple or dynamic objects that require "
"mostly-accurate collision detection."
msgstr ""
"``-convcol`` 옵션은 :ref:`class_concavepolygonshape` 대신 :ref:"
"`class_convexpolygonshape`를 생성합니다. 오목한 부분을 묘사할 수 있는 삼각형 "
"메시와는 달리 볼록 다면체 형상은 오목한 각이 없는(예를 들어 피라미드는 볼록 "
"다면체 형상이지만 빈 박스는 오목한 형상입니다) 도형만을 정확히 묘사할 수 있습"
"니다. 때문에 볼록 다면체 콜리전 형상은 레벨 지형을 묘사하는데에는 적합하지 않"
"습니다. 충분히 간단한 메시를 표현하고자 할 때는 볼록 다면체 콜리전 형상을 사"
"용하는 것이 삼각형 콜리전 형상보다 성능 면에서 원활합니다. 이 옵션은 비교적 "
"정확한 충돌 감지가 필요한 간단하고 동적인 오브젝트에 적합합니다."

#, fuzzy
msgid ""
"However, in both cases, the visual geometry may be too complex or not smooth "
"enough for collisions. This can create physics glitches and slow down the "
"engine unnecessarily."
msgstr ""
"하지만 충돌 감지를 적용할 도형이 너무 복잡하거나 각진 경우에 두 옵션 모두 물"
"리 계산에 오류를 일으키거나 엔진을 느리게 만들 수 있습니다."

#, fuzzy
msgid ""
"To solve this, the ``-colonly`` modifier exists. It will remove the mesh "
"upon importing and will create a :ref:`class_StaticBody3D` collision "
"instead. This helps the visual mesh and actual collision to be separated."
msgstr ""
"이를 해결하기 위해, ``-colonly`` 모디파이어(modifier)가 존재합니다, 가져올 "
"때 메시를 제거하고 대신 :ref:`class_staticbody` 콜리전을 생성합니다. 이렇게 "
"하면 시각적 메시와 실제 콜리전을 분리할 수 있습니다."

#, fuzzy
msgid ""
"The option ``-convcolonly`` works in a similar way, but will create a :ref:"
"`class_ConvexPolygonShape3D` instead using convex decomposition."
msgstr ""
"``-convcolonly`` 옵션 또한 위와 유사하지만 :ref:`class_convexpolygonshape`를 "
"생성한다는 차이가 있습니다."

#, fuzzy
msgid ""
"With Collada files, the option ``-colonly`` can also be used with Blender's "
"empty objects. On import, it will create a :ref:`class_StaticBody3D` with a "
"collision node as a child. The collision node will have one of a number of "
"predefined shapes, depending on Blender's empty draw type:"
msgstr ""
"``-colonly`` 옵션은 블렌더의 empty 오브젝트와 함께 사용될 수도 있습니다. 가져"
"올 때, 자손으로 콜리전 노드가 있는 :ref:`class_staticbody`\\ 를 생성할 것입니"
"다. 콜리전 노드는 미리 정의된 모양 중 하나를 가지며, 블렌더의 empty 드로우 타"
"입에 따라 다릅니다:"

msgid "Choosing a draw type for an Empty on creation in Blender"
msgstr ""

#, fuzzy
msgid "Single arrow will create a :ref:`class_SeparationRayShape3D`."
msgstr "Single arrow는 :ref:`class_rayshape`를 생성합니다."

#, fuzzy
msgid "Cube will create a :ref:`class_BoxShape3D`."
msgstr "Cube는 :ref:`class_boxshape` 를 생성합니다."

#, fuzzy
msgid "Image will create a :ref:`class_WorldBoundaryShape3D`."
msgstr "Image는 :ref:`class_planeshape` 를 생성합니다."

#, fuzzy
msgid ""
"Sphere (and the others not listed) will create a :ref:`class_SphereShape3D`."
msgstr ""
"Sphere (그리고 나열되지 않은 나머지)는 :ref:`class_sphereshape` 를 생성합니"
"다."

msgid ""
"When possible, **try to use a few primitive collision shapes** instead of "
"triangle mesh or convex shapes. Primitive shapes often have the best "
"performance and reliability."
msgstr ""
"가능하다면 삼각형이나 볼록 다면체 대신 **primitive 충돌 감지 형상을 사용해보"
"십시오**. Primitive 형상이 많은 경우 성능 및 안전성 면에서 더 뛰어납니다."

#, fuzzy
msgid ""
"For better visibility on Blender's editor, you can set the \"X-Ray\" option "
"on collision empties and set some distinct color for them by changing **Edit "
"> Preferences > Themes > 3D Viewport > Empty**."
msgstr ""
"블렌더의 편집기에서 더 좋은 가시성을 위해, 콜리전 Empty에 \"X-Ray\"를 설정하"
"고 **User Preferences / Themes / 3D View / Empty**\\ 에서 뚜렷한 색상을 설정"
"할 수 있습니다."

msgid ""
"If using Blender 2.79 or older, follow these steps instead: **User "
"Preferences > Themes > 3D View > Empty**."
msgstr ""

msgid ""
"See :ref:`doc_collision_shapes_3d` for a comprehensive overview of collision "
"shapes."
msgstr ""
"모든 콜리전 형상을 확인하고 싶다면 :ref:`doc_collision_shapes_3d`을 참고하십"
"시오."

msgid "Create navigation (-navmesh)"
msgstr "내비게이션 생성 (-navmesh)"

msgid ""
"A mesh node with the ``-navmesh`` suffix will be converted to a navigation "
"mesh. The original Mesh object will be removed at import-time."
msgstr ""
"``-navmesh`` 접미사를 가진 메시 노드는 내비게이션 메시로 변환되고 기존 메시 "
"오브젝트는 import-time 때 삭제될 것입니다."

msgid "Create a VehicleBody (-vehicle)"
msgstr "VehicleBody 만들기 (-vehicle)"

#, fuzzy
msgid ""
"A mesh node with the ``-vehicle`` suffix will be imported as a child to a :"
"ref:`class_VehicleBody3D` node."
msgstr ""
"``-vehicle`` 접미사를 가진 메시 노드는 :ref:`VehicleBody "
"<class_VehicleBody>` 노드의 자손으로 가져오게 됩니다."

msgid "Create a VehicleWheel (-wheel)"
msgstr "VehicleWheel 만들기 (-wheel)"

#, fuzzy
msgid ""
"A mesh node with the ``-wheel`` suffix will be imported as a child to a :ref:"
"`class_VehicleWheel3D` node."
msgstr ""
"``-wheel`` 접미사를 가진 메시 노드는 :ref:`VehicleWheel "
"<class_VehicleWheel>` 노드의 자손으로 가져오게 됩니다."

msgid "Rigid Body (-rigid)"
msgstr "리지드 바디 (-rigid)"

#, fuzzy
msgid ""
"A mesh node with the ``-rigid`` suffix will be imported as a :ref:"
"`class_RigidBody3D`."
msgstr ""
"``-rigid`` 접미사를 가진 메시 노드는 :ref:`VehicleBody <class_VehicleBody>` "
"노드의 자손으로 가져오게 됩니다."

msgid "Animation loop (-loop, -cycle)"
msgstr "애니메이션 루프 (-loop, -cycle)"

#, fuzzy
msgid ""
"Animation clips in the source 3D file that start or end with the token "
"``loop`` or ``cycle`` will be imported as a Godot :ref:`class_Animation` "
"with the loop flag set. **Unlike the other suffixes described above, this "
"does not require a hyphen.**"
msgstr ""
"COLLADA 문서에서 ``loop``\\ 나 ``cycle``\\ 토큰으로 시작하거나 끝나는 애니메"
"이션 클립은 루프 플래그가 설정된 Godot 애니메이션으로 가져와질 것입니다. **위"
"에서 설명된 다른 접미사와 다르게, 하이픈(-)이 필요하지 않습니다.**"

#, fuzzy
msgid ""
"In Blender, this requires using the NLA Editor and naming the Action with "
"the ``loop`` or ``cycle`` prefix or suffix."
msgstr ""
"블렌더에서, 이를 위해 NLA 편집기를 사용하여 Action 이름에 \"loop\"나 "
"\"cycle\" 접두사 혹은 접미사를 붙여야 합니다."

msgid "Translation status"
msgstr "번역 상태"
