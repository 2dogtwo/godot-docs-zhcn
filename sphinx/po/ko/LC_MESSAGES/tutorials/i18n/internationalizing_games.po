# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-02 12:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/i18n/internationalizing_games.rst:4
msgid "Internationalizing games"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:7
msgid "Introduction"
msgstr "소개"

#: ../../docs/tutorials/i18n/internationalizing_games.rst:9
msgid ""
"Sería excelente que el mundo hablara solo un idioma. Unfortunately for us "
"developers, that is not the case. While not generally a big requirement when "
"developing indie or niche games, it is also very common that games going "
"into a more massive market require localization."
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:14
msgid ""
"Godot offers many tools to make this process more straightforward, so this "
"tutorial is more like a collection of tips and tricks."
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:17
msgid ""
"Localization is usually done by specific studios hired for the job and, "
"despite the huge amount of software and file formats available for this, the "
"most common way to do localization to this day is still with spreadsheets. "
"The process of creating the spreadsheets and importing them is already "
"covered in the :ref:`doc_importing_translations` tutorial, so this one could "
"be seen more like a follow up to that one."
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:25
msgid ""
"We would be using the offical demo as an example, you can download it in the "
"AssetLib: https://godotengine.org/asset-library/asset/134 or find it in the "
"demo_projects/gui/translation"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:28
msgid "Configuring the imported translation"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:30
msgid ""
"The translations can get updated and re-imported when they change, but they "
"still have to be added to the project. This is done in Scene > Project "
"Settings > Localization:"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:36
msgid "This dialog allows to add or remove translations project-wide."
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:39
msgid "Localizing resources"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:41
msgid ""
"It is also possible to instruct Godot to open alternative versions of assets "
"(resources) depending on the current language. For this the \"Remaps\" tab "
"exists:"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:47
msgid ""
"Select the resource to be remapped, and the alternatives for each locale."
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:51
msgid "Converting keys to text"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:53
msgid ""
"Some controls such as :ref:`Button <class_Button>`, :ref:`Label "
"<class_Label>`, etc. will automatically fetch a translation each time they "
"are set a key instead of a text. For example, if a label is assigned "
"\"MAIN_SCREEN_GREETING1\" and a key to different languages exists in the "
"translations, this will be automatically converted."
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:59
msgid ""
"For code, the :ref:`Object.tr() <class_Object_tr>` function can be used. "
"This will just look-up the text into the translations and convert it if "
"found:"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:69
msgid "Making controls resizable"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:71
msgid ""
"The same text in different languages can vary greatly in length. For this, "
"make sure to read the tutorial on :ref:`doc_size_and_anchors`, as having "
"dynamically adjusted control sizes may help. :ref:`Container "
"<class_Container>` can be very useful, as well as the multiple options in :"
"ref:`Label <class_Label>` for text wrapping."
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:78
msgid "TranslationServer"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:80
msgid ""
"Godot has a server for handling the low level translation management called "
"the :ref:`TranslationServer <class_TranslationServer>`. Translations can be "
"added or removed during run-time, and the current language be changed too."
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:86
msgid "Command line"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:88
msgid ""
"Language can be tested when running Godot from command line. For example, to "
"test a game in french, the following arguments can be supplied:"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:97
msgid "Translating the project name"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:99
msgid ""
"The project name becomes the app name when exporting to different operating "
"systems and platforms. To specify the project name in more than one "
"language, create a new setting application/name in the project settings "
"dialog and append the locale identifier to it. For example:"
msgstr ""

#: ../../docs/tutorials/i18n/internationalizing_games.rst:106
msgid ""
"As always, If you don't know the code of a language or zone, :ref:`check the "
"list <doc_locales>`."
msgstr ""
