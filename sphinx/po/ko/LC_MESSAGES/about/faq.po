# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-13 14:01+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/about/faq.rst:1
msgid "FAQ"
msgstr "자주 묻는 질문(FAQ)"

#: ../../docs/about/faq.rst:7
msgid "Frequently asked questions"
msgstr "자주 묻는 질문들(FAQ)"

#: ../../docs/about/faq.rst:10
msgid ""
"What can I do with Godot? How much does it cost? What are the license terms?"
msgstr ""
"Godot로 무엇을 할 수 있나요? 가격은 얼마인가요? 라이선스 조항은 어떻게 되나"
"요?"

#: ../../docs/about/faq.rst:12
msgid ""
"Godot is `Free and Open-Source Software <https://en.wikipedia.org/wiki/"
"Free_and_open-source_software>`_ available under the `OSI-approved <https://"
"opensource.org/licenses/MIT>`_ MIT license. This means it is free as in "
"\"free speech\" as well as in \"free beer.\""
msgstr ""
"Godot는 `OSI가 인정한 <https://opensource.org/licenses/MIT>`_ MIT 라이선스로 "
"사용할 수 있는 `무료이자 오픈 소스 소프트웨어 <https://ko.wikipedia.org/wiki/"
"자유-오픈_소스_소프트웨어>`_\\ 입니다. 이 말인 즉, Godot는 \"언론의 자유"
"(Free)\"라는 뜻과 \"무료(Free) 맥주\"라는 뜻을 모두 지니고 있다는 것이죠."

#: ../../docs/about/faq.rst:14
msgid "In short:"
msgstr "간단히 말해서:"

#: ../../docs/about/faq.rst:16
msgid ""
"You are free to download and use Godot for any purpose, personal, non-"
"profit, commercial, or otherwise."
msgstr ""
"개인적으로, 비영리로, 사업 목적으로, 그 외 어떤 이유든지 자유롭게 Godot를 다"
"운로드하고 사용할 수 있습니다."

#: ../../docs/about/faq.rst:17
msgid ""
"You are free to modify, distribute, redistribute, and remix Godot to your "
"heart's content, for any reason, both non-commercially and commercially."
msgstr ""
"Godot를 마음대로 자유롭게 수정하고, 배포하고, 재배포하고 수정할 수 있습니다. "
"그 이유가 비상업적이든지 상업적이든지 말이죠."

#: ../../docs/about/faq.rst:19
msgid ""
"All the contents of this accompanying documentation are published under the "
"permissive Creative Commons Attribution 3.0 (`CC-BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0/>`_) license, with attribution to \"Juan "
"Linietsky, Ariel Manzur and the Godot Engine community.\""
msgstr ""
"이 문서의 모든 내용은 크리에이티브 커먼스 저작자 표시 3.0 (`CC-BY 3.0 "
"<https://creativecommons.org/licenses/by/3.0/deed.ko>`_) 라이선스 하에, "
"\"Juan Linietsky, Ariel Manzur, Godot Engine community\"에 속합니다."

#: ../../docs/about/faq.rst:23
msgid ""
"Logos and icons are generally under the same Creative Commons license. Note "
"that some third-party libraries included with Godot's source code may have "
"different licenses."
msgstr ""
"로고와 아이콘은 일반적으로 동일한 크리에이티브 커먼스 라이선스 하에 속합니"
"다. Godot의 소스 코드에 포함된 일부 제 3자 라이브러리는 다른 라이선스가 적용"
"될 수 있으므로 유의하세요."

#: ../../docs/about/faq.rst:27
msgid ""
"For full details, look at the `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_ as well as the `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ and `LOGO_LICENSE."
"txt <https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_ "
"files in the Godot repository."
msgstr ""
"전체 세부 사항은 Godot 저장소에 있는 `COPYRIGHT.txt <https://github.com/"
"godotengine/godot/blob/master/COPYRIGHT.txt>`_\\ 와 `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_, `LOGO_LICENSE.txt "
"<https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_ 파일을 "
"참고하세요."

#: ../../docs/about/faq.rst:31
msgid ""
"Also, see `the license page on the Godot website <https://godotengine.org/"
"license>`_."
msgstr ""
"`Godot 웹 사이트의 라이선스 페이지 <https://godotengine.org/license>`_\\ 도 "
"참고하세요."

#: ../../docs/about/faq.rst:34
msgid "Which platforms are supported by Godot?"
msgstr "Godot는 어떤 플랫폼을 지원하나요?"

#: ../../docs/about/faq.rst:36
msgid "**For the editor:**"
msgstr "**편집기의 경우:**"

#: ../../docs/about/faq.rst:38
msgid "Windows"
msgstr "Windows"

#: ../../docs/about/faq.rst:39 ../../docs/about/faq.rst:45
msgid "macOS"
msgstr "macOS"

#: ../../docs/about/faq.rst:40 ../../docs/about/faq.rst:46
msgid "X11 (Linux, \\*BSD)"
msgstr "X11 (Linux, \\*BSD)"

#: ../../docs/about/faq.rst:42
msgid "**For exporting your games:**"
msgstr "**내보내는 게임의 경우:**"

#: ../../docs/about/faq.rst:44
msgid "Windows (and UWP)"
msgstr "Windows (그리고 UWP)"

#: ../../docs/about/faq.rst:47
msgid "Android"
msgstr "Android"

#: ../../docs/about/faq.rst:48
msgid "iOS"
msgstr "iOS"

#: ../../docs/about/faq.rst:49
msgid "Web"
msgstr "웹"

#: ../../docs/about/faq.rst:51
msgid ""
"Both 32- and 64-bit binaries are supported where it makes sense, with 64 "
"being the default."
msgstr "64비트가 기본이지만 32비트와 64비트 모두 지원합니다."

#: ../../docs/about/faq.rst:54
msgid ""
"Some users also report building and using Godot successfully on ARM-based "
"systems with Linux, like the Raspberry Pi."
msgstr ""
"일부 사용자들은 Linux로 Raspberry Pi와 같은 ARM 기반 시스템에 Godot를 성공적"
"으로 빌드하고 사용했다고 말합니다."

#: ../../docs/about/faq.rst:57
msgid ""
"Additionally, there is some unofficial third-party work being done on "
"building for some consoles. However, none of this is included in the default "
"build scripts or export templates at this time."
msgstr ""
"추가적으로 콘솔로 빌드하기 위한 비공식적인 제 3자의 작업이 있습니다. 하지만 "
"아직 그 중 기본 빌드 스크립트나 내보내기 템플릿을 포함한 것은 없습니다."

#: ../../docs/about/faq.rst:61
msgid ""
"For more on this, see the sections on :ref:`exporting <toc-learn-workflow-"
"export>` and :ref:`compiling Godot yourself <toc-devel-compiling>`."
msgstr ""
"자세한 정보는 :ref:`내보내기 <toc-learn-workflow-export>`\\ 와 :ref:`Godot를 "
"직접 컴파일하기 <toc-devel-compiling>`\\ 를 다루는 섹션을 참고하세요."

#: ../../docs/about/faq.rst:65
msgid "Which programming languages are supported in Godot?"
msgstr "Godot는 어떤 프로그래밍 언어를 지원하나요?"

#: ../../docs/about/faq.rst:67
msgid ""
"The officially supported languages for Godot are GDScript, Visual Scripting, "
"C#, and C++. See the subcategories for each language in the :ref:`scripting "
"<toc-learn-scripting>` section."
msgstr ""
"Godot가 공식으로 지원하는 언어는 GDScript, Visual Scripting, C#, 그리고 C++입"
"니다. :ref:`스크립팅 <toc-learn-scripting>` 섹션에서 각 언어 별 하위 카테고리"
"를 참고하세요."

#: ../../docs/about/faq.rst:71
msgid ""
"If you are just starting out with either Godot or game development in "
"general, GDScript is the recommended language to learn and use since it is "
"native to Godot. While scripting languages tend to be less performant than "
"lower-level languages in the long run, for prototyping, developing Minimum "
"Viable Products (MVPs), and focusing on Time-To-Market (TTM), GDScript will "
"provide a fast, friendly, and capable way of developing your games."
msgstr ""
"대개 Godot 개발이나 게임 개발을 목적으로 엔진을 켜게 된다면, Godot에 네이티브"
"로 동작하는 GDScript를 배우고 사용하는데 추천하는 언어입니다. 스크립트 언어"
"는 장기적인 면에서 다른 로우 레벨 언어보다 퍼포먼스가 떨어지는 경향이 있습니"
"다. 하지만 시제품 제작이나 최소 기능 제품(MVP)을 개발하기 위해서, 그리고 판매"
"할 때까지 걸리는 시간(TTM)에 중점을 둔다면, GDScript는 게임을 개발하는데 빠르"
"고, 친절하고, 유능한 방법을 제공할 것입니다."

#: ../../docs/about/faq.rst:78
msgid ""
"Note that C# support is still relatively new, and as such, you may encounter "
"some issues along the way. Our friendly and hard-working development "
"community is always ready to tackle new problems as they arise, but since "
"this is an open-source project, we recommend that you first do some due "
"diligence yourself. Searching through discussions on `open issues <https://"
"github.com/godotengine/godot/issues>`_ is a great way to start your "
"troubleshooting."
msgstr ""
"C# 지원은 비교적 최근에 시작했기 때문에 오류를 발견할 수 있습니다. 우리의 친"
"절하고 부지런한 개발 커뮤니티는 언제나 새 문제를 해결할 준비가 되어있습니다. "
"하지만 이것은 오픈 소스 프로젝트이므로 스스로 해결해 보는 것을 추천합니다. "
"`Open Issues <https://github.com/godotengine/godot/issues>`_\\ 에서 토론을 찾"
"아보는 것도 문제를 해결하는데 좋은 출발점이 될 것입니다."

#: ../../docs/about/faq.rst:85
msgid ""
"As for new languages, support is possible via third parties using the "
"GDNative / NativeScript / PluginScript facilities. (See the question about "
"plugins below.) Work is currently underway, for example, on unofficial "
"bindings for Godot to `Python <https://github.com/touilleMan/godot-python>`_ "
"and `Nim <https://github.com/pragmagic/godot-nim>`_."
msgstr ""
"GDNative / NativeScript / PluginScript 기능을 사용한 제 3자를 통해 새로운 언"
"어를 지원할 수 있습니다. (아래에 플러그인에 관한 질문을 참고하세요.) 예를 들"
"어 Godot에 `Python <https://github.com/touilleMan/godot-python>`_\\ 과 `Nim "
"<https://github.com/pragmagic/godot-nim>`_\\ 의 비공식 바인딩 개발이 진행 중"
"입니다."

#: ../../docs/about/faq.rst:93
msgid "What is GDScript and why should I use it?"
msgstr "GDScript는 무엇이고 왜 이것을 써야 하나요?"

#: ../../docs/about/faq.rst:95
msgid ""
"GDScript is Godot's integrated scripting language. It was built from the "
"ground up to maximize Godot's potential in the least amount of code, "
"affording both novice and expert developers alike to capitalize on Godot's "
"strengths as fast as possible. If you've ever written anything in a language "
"like Python before then you'll feel right at home. For examples, history, "
"and a complete overview of the power GDScript offers you, check out the :ref:"
"`GDScript scripting guide <doc_gdscript>`."
msgstr ""
"GDScript는 Godot에 통합된 스크립트 언어입니다. 이것은 초심자와 전문 개발자가 "
"동등하게 Godot의 강점을 가능한 빨리 활용할 수 있도록, 짧은 코드로도 Godot의 "
"잠재력을 극대화할 수 있도록 바닥부터 지어졌습니다. 이전에 Python 비슷한 언어"
"를 사용해 보신 적이 있다면 익숙할 것입니다. 예제, 역사, 그리고 GDScript가 가"
"진 힘의 전체 개요는 :ref:`GDScript 스크립팅 가이드 <doc_gdscript>`\\ 를 참고"
"하세요."

#: ../../docs/about/faq.rst:102
#, fuzzy
msgid ""
"There are several reasons to use GDScript--especially when you are "
"prototyping, in alpha/beta stages of your project, or are not creating the "
"next AAA title--but the most salient reason is the overall **reduction of "
"complexity**."
msgstr ""
"GDScript를 사용하는 여러 이유가 있습니다--특히 프로토타입을 만드는 경우, 프로"
"젝트의 알파/베타 수준의 스테이지를 만드는 경우에, 혹은 만드는 게임이 AAA급이 "
"아니라면 말이죠--그러나 전체적으로 가장 두드러진 이유는 **복잡성 감소**\\ 입"
"니다"

#: ../../docs/about/faq.rst:106
msgid ""
"The original intent of creating a tightly integrated, custom scripting "
"language for Godot was two-fold: first, it reduces the amount of time "
"necessary to get up and running with Godot, giving developers a rapid way of "
"exposing themselves to the engine with a focus on productivity; second, it "
"reduces the overall burden of maintenance, attenuates the dimensionality of "
"issues, and allows the developers of the engine to focus on squashing bugs "
"and improving features related to the engine core--rather than spending a "
"lot of time trying to get a small set of incremental features working across "
"a large set of languages."
msgstr ""
"Godot를 위한 맞춤 스크립트 언어를 만들게 된 원래 의도는 두 가지 입니다: 먼저 "
"Godot를 켜고 실행하는 많은 시간을 줄입니다. 개발자는 생산성에 중점을 두고 엔"
"진에 빠르게 접근할 수 있습니다; 두 번째로 전반적인 유지 보수의 부담을 줄여줍"
"니다. 문제의 어려움을 줄이고 엔진 개발자는 엔진 핵심 버그를 없애고 기능을 개"
"선하는데 집중할 수 있습니다--많은 언어에서 작동하는 자잘한 기능들을 얻으려고 "
"많은 시간을 소모하는 일이 없게 됩니다."

#: ../../docs/about/faq.rst:114
msgid ""
"Since Godot is an open-source project, it was imperative from the start to "
"prioritize a more integrated and seamless experience over attracting "
"additional users by supporting more familiar programming languages--"
"especially when supporting those more familiar languages would result in a "
"worse experience. We understand if you would rather use another language in "
"Godot (see the list of supported options above). That being said, if you "
"haven't given GDScript a try, try it for **three days**. Just like Godot, "
"once you see how powerful it is and rapid your development becomes, we think "
"GDScript will grow on you."
msgstr ""
"Godot가 오픈 소스 프로젝트가 되면서 부터, 처음부터 더 통합되고 완벽한 경험까"
"지 우선 순위를 정했을 때, 추가 사용자 유치를 위한 더 친근한 프로그래밍 언어"
"를 지원하는 것이 최우선이었습니다--특히 더 친근한 언어를 지원하는 것이 더 나"
"쁜 결과로 이어질 때 그랬습니다. Godot에서 다른 언어를 사용하는 것을 이해합니"
"다 (아래에 지원하는 옵션을 참고하세요). GDScript를 사용하지 않아봤다면, **3 "
"일** 동안 한번 사용해보세요. Godot처럼 GDScript가 강력하고 개발하는 것을 빠르"
"게 하는 것을 보게 된다면, 우리는 GDScript가 성장할 것이라고 생각합니다."

#: ../../docs/about/faq.rst:123
msgid ""
"More information about getting comfortable with GDScript or dynamically "
"typed languages can be found in the :ref:`doc_gdscript_more_efficiently` "
"tutorial."
msgstr ""
"GDScript 또는 동적 타입 언어에 익숙해지는 더 자세한 정보는 :ref:"
"`doc_gdscript_more_efficiently` 튜토리얼을 참고하세요."

#: ../../docs/about/faq.rst:127
msgid "What were the motivations behind creating GDScript?"
msgstr "GDScript를 제작하게 된 동기가 무엇입니까?"

#: ../../docs/about/faq.rst:129
msgid ""
"In the early days, the engine used the `Lua <https://www.lua.org>`__ "
"scripting language. Lua is fast, but creating bindings to an object oriented "
"system (by using fallbacks) was complex and slow and took an enormous amount "
"of code. After some experiments with `Python <https://www.python.org>`__, it "
"also proved difficult to embed."
msgstr ""
"처음에는 `Lua <https://www.lua.org>`__ 스크립팅 언어를 사용했습니다. Lua는 빠"
"르지만, (Fallback을 사용해서) 객체 지향 시스템에 묶는 일은 복잡하고 느리면서"
"도 엄청난 양의 코드가 필요했습니다. `Python <https://www.python.org>`__\\ 을 "
"몇 번 사용해봤지만, 포함하기는 어려웠습니다."

#: ../../docs/about/faq.rst:135
msgid ""
"The main reasons for creating a custom scripting language for Godot were:"
msgstr "Godot를 위한 맞춤 스크립트 언어를 개발하게 된 주요 이유는 이러합니다:"

#: ../../docs/about/faq.rst:137
msgid ""
"Poor threading support in most script VMs, and Godot uses threads (Lua, "
"Python, Squirrel, JavaScript, ActionScript, etc.)."
msgstr ""
"대부분의 스크립트 가상 머신에서 스레드 지원이 좋지 않습니다. 하지만 Godot은 "
"스레드를 사용합니다 (Lua, Python, Squirrel, JS, AS 등)."

#: ../../docs/about/faq.rst:139
msgid ""
"Poor class-extending support in most script VMs, and adapting to the way "
"Godot works is highly inefficient (Lua, Python, JavaScript)."
msgstr ""
"대부분의 스크립트 가상 머신은 클래스 확장 지원이 부족하고 Godot의 작동 방식"
"에 맞춰 변형하자면 너무 비효율적입니다 (Lua, Python, JS)."

#: ../../docs/about/faq.rst:141
msgid ""
"Many existing languages have horrible interfaces for binding to C++, "
"resulting in large amount of code, bugs, bottlenecks, and general "
"inefficiency (Lua, Python, Squirrel, JavaScript, etc.) We wanted to focus on "
"a great engine, not a great amount of integrations."
msgstr ""
"많은 존재하는 언어들은 C++ 바인딩을 위한 끔찍한 인터페이스를 갖고 있습니다. "
"코드 양이 많아지고 버그, 병목, 그리고 전반적으로 비효율적입니다 (Lua, "
"Python, Squirrel, JS 등.) 우리는 많은 통합이 아닌 좋은 엔진에 중점을 두고 싶"
"었습니다."

#: ../../docs/about/faq.rst:144
msgid ""
"No native vector types (vector3, matrix4, etc.), resulting in highly reduced "
"performance when using custom types (Lua, Python, Squirrel, JavaScript, "
"ActionScript, etc.)."
msgstr ""
"자체적인 벡터 유형이 없어서 (vector3, matrix4 등) 맞춤 유형을 사용하게 되고 "
"성능이 크게 감소합니다 (Lua, Python, Squirrel, JS, AS 등)."

#: ../../docs/about/faq.rst:147
msgid ""
"Garbage collector results in stalls or unnecessarily large memory usage "
"(Lua, Python, JavaScript, ActionScript, etc.)."
msgstr ""
"(Lua, Python, JavaScript, ActionScript 등의) 가비지 컬렉터는 속도저하와 불필"
"요한 많은 메모리 사용을 초래합니다."

#: ../../docs/about/faq.rst:149
msgid ""
"Difficulty to integrate with the code editor for providing code completion, "
"live editing, etc. (all of them). This is well-supported by GDScript."
msgstr ""
"코드 완성, 실시간 편집 등 (이 전부를) 지원하기 위한 코드 편집기 통합이 까다롭"
"습니다. GDScript는 이 부분을 잘 지원합니다."

#: ../../docs/about/faq.rst:153
msgid "GDScript was designed to curtail the issues above, and more."
msgstr "GDScript는 위의 문제 등을 줄이기 위해 설계되었습니다."

#: ../../docs/about/faq.rst:156
msgid "What type of 3D model formats does Godot support?"
msgstr "Godot는 어떤 유형의 3D 모델 형식을 지원합니까?"

#: ../../docs/about/faq.rst:158
msgid ""
"Godot supports Collada via the `OpenCollada <https://github.com/KhronosGroup/"
"OpenCOLLADA/wiki/OpenCOLLADA-Tools>`_ exporter (Maya, 3DSMax). If you are "
"using Blender, take a look at our own `Better Collada Exporter <https://"
"godotengine.org/download>`_."
msgstr ""
"Godot는 Collada를 지원하기 때문에 Maya나 3DS Max를 사용한다면 가장 호환성이 "
"좋은 `OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/"
"OpenCOLLADA-Tools>`_ 내보내기 도구를 살펴보세요. Blender를 사용한다면 우리가 "
"만든 `Better Collada Exporter <https://godotengine.org/download>`_ 를 살펴보"
"세요."

#: ../../docs/about/faq.rst:161
msgid "As of Godot 3.0, glTF is supported."
msgstr "Godot 3.0부터 glTF를 지원합니다."

#: ../../docs/about/faq.rst:163
msgid ""
"FBX is supported via the Open Asset Import library. However, FBX is "
"proprietary so we recommend using other formats listed above, if suitable "
"for your workflow."
msgstr ""
"FBX는 Open Asset Import 라이브러리를 통해 지원됩니다. 하지만 FBX는 독점이므"
"로 워크플로우에 적합한 경우, 위에 나열된 다른 형식을 사용하는 것을 권장합니"
"다."

#: ../../docs/about/faq.rst:167
msgid ""
"Will [insert closed SDK such as FMOD, GameWorks, etc.] be supported in Godot?"
msgstr "Godot에서 [FMOD, GameWorks 등 클로즈 SDK]가 지원될까요?"

#: ../../docs/about/faq.rst:169
msgid ""
"The aim of Godot is to create a free and open-source MIT-licensed engine "
"that is modular and extendable. There are no plans for the core engine "
"development community to support any third-party, closed-source/proprietary "
"SDKs, as integrating with these would go against Godot's ethos."
msgstr ""
"Godot의 목표는 모듈 방식이고 확장 가능한 무료이자 오픈 소스 MIT 라이선스 엔진"
"을 만드는 것입니다. 핵심 엔진 개발 커뮤니티가 클로즈 소스/독점 SDK를 지원하도"
"록 하는 계획은 없습니다. 이것들을 통합하는 것은 Godot의 정신에 반대되는 것입"
"니다."

#: ../../docs/about/faq.rst:174
msgid ""
"That said, because Godot is open-source and modular, nothing prevents you or "
"anyone else interested in adding those libraries as a module and shipping "
"your game with them--as either open- or closed-source."
msgstr ""
"즉, Godot는 오픈 소스이고 모듈화 되어있으므로, 어느 누구라도 클로즈 SDK를 모"
"듈로 추가해서 여러분의 게임에 사용해 출시해도 무방합니다--오픈 소스든지 클로"
"즈 소스든지 말이죠."

#: ../../docs/about/faq.rst:178
msgid ""
"To see how support for your SDK of choice could still be provided, look at "
"the Plugins question below."
msgstr ""
"선택한 SDK에 대한 지원이 어떻게 제공되는지 알아보려면 아래 플러그인 질문을 참"
"고하세요."

#: ../../docs/about/faq.rst:181
msgid ""
"If you know of a third-party SDK that is not supported by Godot but that "
"offers free and open-source integration, consider starting the integration "
"work yourself. Godot is not owned by one person; it belongs to the "
"community, and it grows along with ambitious community contributors like you."
msgstr ""
"혹시 Godot이 지원하진 않지만 무료이고 오픈 소스로 제공하는 다른 SDK를 안다면 "
"직접 통합 작업을 시작해보세요. Godot은 한 사람의 것이 아닙니다; 커뮤니티에 속"
"해 있고 당신과 같은 야심 찬 커뮤니티 기여자들과 함께 자랍니다."

#: ../../docs/about/faq.rst:187
msgid "Why does Godot use Vulkan or OpenGL instead of Direct3D?"
msgstr "Godot가 Direct3D 대신 Vulkan 또는 OpenGL을 사용하는 이유는 무엇인가요?"

#: ../../docs/about/faq.rst:189
msgid ""
"Godot aims for cross-platform compatibility and open standards first and "
"foremost. OpenGL and Vulkan are the technologies that are both open and "
"available (nearly) on all platforms. Thanks to this design decision, a "
"project developed with Godot on Windows will run out of the box on Linux, "
"macOS, and more."
msgstr ""
"Godot는 무엇보다도 플랫폼 간 호환성과 개방형 표준을 목표로합니다. OpenGL과 "
"Vulkan은 개방적이고 (거의) 모든 플랫폼에서 사용할 수있는 기술입니다. 이 디자"
"인 결정 덕분에 Windows에서 Godot로 개발 된 프로젝트는 Linux, macOS 등에서 즉"
"시 실행됩니다."

#: ../../docs/about/faq.rst:195
msgid ""
"Since Godot only has a few people working on its renderer, we would prefer "
"having fewer rendering backends to maintain. On top of that, using a single "
"API on all platforms allows for greater consistency with fewer platform-"
"specific issues."
msgstr ""
"Godot는 렌더러 작업하는 사람이 적기 때문에, 유지 관리 할 렌더링 백엔드가 더 "
"적은 것을 선호합니다. 또한 모든 플랫폼에서 단일 API를 사용하면서 플랫폼 별 문"
"제를 줄이고 일관성을 높입니다."

#: ../../docs/about/faq.rst:200
msgid ""
"In the long term, we may develop a Direct3D 12 renderer for Godot (mainly "
"for the Xbox's purposes), but Vulkan and OpenGL will remain the default "
"rendering backends on all platforms, including Windows."
msgstr ""
"장기적으로, 우리가 Direct3D 12 렌더러를 (주로 Xbox 용) 개발할 가능성은 있지"
"만, Vulkan 및 OpenGL은 Windows를 포함한 모든 플랫폼에서 기본 렌더링 백엔드로 "
"남을 것입니다."

#: ../../docs/about/faq.rst:205
msgid "Why does Godot aim to keep its core feature set small?"
msgstr "왜 Godot은 주요 특징을 작게 유지하려고 하나요?"

#: ../../docs/about/faq.rst:207
msgid ""
"Godot intentionally does not include features that can be implemented by add-"
"ons unless they are used very often. One example of this would be advanced "
"artificial intelligence functionality."
msgstr ""
"Godot은 매우 자주 쓰이지 않는 이상 의도적으로 add-on으로 구현할 수 있는 기능"
"들은 포함하지 않습니다. 고급 인공 지능 같은 것이 좋은 예입니다."

#: ../../docs/about/faq.rst:211
msgid "There are several reasons for this:"
msgstr "이렇게 하려는 이유가 몇 가지 있습니다:"

#: ../../docs/about/faq.rst:213
msgid ""
"**Code maintenance and surface for bugs.** Every time we accept new code in "
"the Godot repository, existing contributors often take the reponsibility of "
"maintaining it. Some contributors don't always stick around after getting "
"their code merged, which can make it difficult for us to maintain the code "
"in question. This can lead to poorly maintained features with bugs that are "
"never fixed. On top of that, the \"API surface\" that needs to be tested and "
"checked for regressions keeps increasing over time."
msgstr ""
"** 코드 유지 보수 와 버그 관리** 매번 우리가 Godot 리포지터리(repository)에 "
"새로운 코드를 받을 때마다, 그 코드의 contributors(기여자/참여자)는 종종 이것"
"을 유지하는 책임을 집니다. 어떤 contributors은 그들이 제출한 코드가 merge된 "
"뒤에는 계속 관심을 두지 않습니다. 그래서 이러한 경우 문제 있는 코드를 유지하"
"는 것이 어려워 집니다. 이러한 상황은 기능들이 제대로 보수되지 않고 버그투성이"
"인 상태로 남게 됩니다. 결국, 회귀를 위해 테스트하고 검사해야 하는 \"API "
"surface\"는 시간이 흐름에 따라 계속 증가합니다."

#: ../../docs/about/faq.rst:221
msgid ""
"**Ease of contribution.** By keeping the codebase small and tidy, it can "
"remain fast and easy to compile from source. This makes it easier for new "
"contributors to get started with Godot, without requiring them to purchase "
"high-end hardware."
msgstr ""
"**쉬운 기여하기.** 코드베이스를 작고 깨끗하게 유지함으로써, 전체 소스를 컴파"
"일하는 것이 빠르고 쉽게 유지될 것입니다. 이것은 새로운 기여자들이 비싼 하드웨"
"어없이도 Godot을 시작하기 쉽게 만들 것입니다."

#: ../../docs/about/faq.rst:226
msgid ""
"**Keeping the binary size small for the editor.** Not everyone has a fast "
"Internet connection. Ensuring that everyone can download the Godot editor, "
"extract it and run it in less than 5 minutes makes Godot more accessible to "
"developers in all countries."
msgstr ""
"**편집기의 바이너리 크기를 작게 하기.** 모두가 빠른 인터넷 회선을 가지고 있"
"지 않습니다. 아무라도 Godot 편집기를 5분안에 내려받고, 압축을 풀고, 실행할 "
"수 있게 한다면, 전 세계의 개발자들이 Godot에 더 쉽게 접근할 것입니다."

#: ../../docs/about/faq.rst:231
msgid ""
"**Keeping the binary size small for export templates.** This directly "
"impacts the size of projects exported with Godot. On mobile and web "
"platforms, keeping file sizes low is primordial to ensure fast installation "
"and loading on underpowered devices. Again, there are many countries where "
"high-speed Internet is not readily available. To add to this, strict data "
"usage caps are often in effect in those countries."
msgstr ""
"**템플릿 내보내기를 위한 바이너리 크기를 작게하기.** 이것은 Godot에서 내보낸 "
"프로젝트 크기에 영향을 끼칩니다. 모바일이나 웹 환경에서는, 파일 크기를 최소화"
"하는 것이 성능이 낮은 기계에서 빠른 설치와 로딩에 도움을 줍니다. 다시 말하자"
"면, 지구 상에는 고속 인터넷이 불가능한 나라가 아직 많습니다. 추가로, 이런 나"
"라들에서는 데이터 사용량을 제한하는 것도 효과가 있습니다."

#: ../../docs/about/faq.rst:238
msgid ""
"For all the reasons above, we have to be selective of what we can accept as "
"core functionality in Godot. This is why we are aiming to move some core "
"functionality to officially supported add-ons in future versions of Godot. "
"In terms of binary size, this also has the advance of making you pay only "
"for what you actually use in your project. (In the meantime, you can :ref:"
"`compile custom export templates with unused features disabled "
"<doc_optimizing_for_size>` to optimize the distribution size of your "
"project.)"
msgstr ""
"위의 모든 이유에 의해, 우리는 어떤 것을 Godot의 핵심 기능으로 넣을 지 선택해"
"야만 합니다. 이것이 우리가 일부 핵심 기능들을 미래의 Godot버전에서 공식 지원 "
"add-on으로 만들려는 이유입니다. 바이너리 크기면에서, 프로젝트에 실제 사용하"
"는 것만을 포함하게 하는 장점이 있습니다. (그 동안, 프로젝트의 배포 크기를 최"
"적화하기 위해 :ref:`사용하지 않는 기능을 비활성화하는 사용자 지정 내보내기 템"
"플릿을 컴파일 <doc_optimizing_for_size>` 할 수 있습니다.)"

#: ../../docs/about/faq.rst:247
msgid ""
"How should assets be created to handle multiple resolutions and aspect "
"ratios?"
msgstr "다양한 해상도와 화면 비율에 맞는 에셋을 어떻게 만듭니까?"

#: ../../docs/about/faq.rst:249
msgid ""
"This question pops up often and it's probably thanks to the misunderstanding "
"created by Apple when they originally doubled the resolution of their "
"devices. It made people think that having the same assets in different "
"resolutions was a good idea, so many continued towards that path. That "
"originally worked to a point and only for Apple devices, but then several "
"Android and Apple devices with different resolutions and aspect ratios were "
"created, with a very wide range of sizes and DPIs."
msgstr ""
"이런 고민은 아마도 Apple사가 언젠가 자사 제품의 해상도를 두 배로 늘렸을 때 생"
"긴 오해 때문인 것으로 보입니다. 이 때문에 사람들은 다양한 해상도의 같은 에셋"
"을 갖는 것이 좋은 아이디어라 생각하게 되었습니다. 그런데 이런 통념은 짧은 기"
"간 Apple 제품에 한에서는 적용이 되었지만, 얼마 지나지 않아 다양한 해상도와 화"
"면 비율, DPI 를 갖는 Android 기기들과 Apple 기기들이 시장에 나오면서 이제는 "
"불필요한 일이 되었습니다."

#: ../../docs/about/faq.rst:257
msgid ""
"The most common and proper way to achieve this is to, instead, use a single "
"base resolution for the game and only handle different screen aspect ratios. "
"This is mostly needed for 2D, as in 3D it's just a matter of Camera XFov or "
"YFov."
msgstr ""
"이제 다양한 기기에 대응할 수 있는 가장 일반적이고 적절한 방법은 2D 게임의 경"
"우 한 해상도에 다양한 화면 비율을 지원해주는 것입니다. 3D 게임에서는 단순히 "
"카메라의 XFov나 YFov를 조절하는 것으로 해결할 수 있습니다."

#: ../../docs/about/faq.rst:261
msgid ""
"Choose a single base resolution for your game. Even if there are devices "
"that go up to 2K and devices that go down to 400p, regular hardware scaling "
"in your device will take care of this at little or no performance cost. Most "
"common choices are either near 1080p (1920x1080) or 720p (1280x720). Keep in "
"mind the higher the resolution, the larger your assets, the more memory they "
"will take and the longer the time it will take for loading."
msgstr ""
"게임을 위한 기본 해상도를 고르세요. 해상도가 2K까지 올라가는 기기나 400p까지 "
"내려가는 기기가 있더라도, 기기 안에 있는 균형 하드웨어 스케일링은 이 점을 성"
"능 비용으로 다루진 않을 것입니다. 대부분의 선택은 1080p (1920x1080)이나 720p "
"(1280x720) 근처입니다. 해상도가 높으면 애셋은 더 커지고 더 많은 메모리를 먹"
"고 더 긴 로딩이 걸릴 것이니 명심하세요."

#: ../../docs/about/faq.rst:269
msgid ""
"Use the stretch options in Godot; 2D stretching while keeping aspect ratios "
"works best. Check the :ref:`doc_multiple_resolutions` tutorial on how to "
"achieve this."
msgstr ""
"Godot에서 Stretch 설정을 사용해보세요; 화면 비율을 유지하는 2D Stretch가 좋습"
"니다. 사용하는 방법은 :ref:`doc_multiple_resolutions` 튜토리얼에서 확인해보세"
"요."

#: ../../docs/about/faq.rst:273
msgid ""
"Determine a minimum resolution and then decide if you want your game to "
"stretch vertically or horizontally for different aspect ratios, or if there "
"is one aspect ratio and you want black bars to appear instead. This is also "
"explained in :ref:`doc_multiple_resolutions`."
msgstr ""
"최소 해상도를 선택한 다음, 게임의 화면을 다른 화면 비율에 맞게 수직이나 수평"
"으로 펼칠 수 있습니다. 아니면 화면 비율을 유지하는 대신 검은 여백이 나타나게 "
"할 수 있습니다. 이 또한 :ref:`doc_multiple_resolutions`\\ 에서 설명합니다."

#: ../../docs/about/faq.rst:278
msgid ""
"For user interfaces, use the :ref:`anchoring <doc_size_and_anchors>` to "
"determine where controls should stay and move. If UIs are more complex, "
"consider learning about Containers."
msgstr ""
"사용자 인터페이스에 대해서는 :ref:`앵커 <doc_size_and_anchors>`\\ 를 사용해"
"서 Control이 이동하거나 정지해야 할 위치를 결정하세요. UI가 더 복잡하다면 "
"Container 사용을 고려해보세요."

#: ../../docs/about/faq.rst:282
msgid "And that's it! Your game should work in multiple resolutions."
msgstr "다 됐습니다! 여러분의 게임은 다양한 해상도에서 작동 할 것입니다."

#: ../../docs/about/faq.rst:284
msgid ""
"If there is a desire to make your game also work on ancient devices with "
"tiny screens (fewer than 300 pixels in width), you can use the export option "
"to shrink images, and set that build to be used for certain screen sizes in "
"the App Store or Google Play."
msgstr ""
"(가로 300화소도 안되는) 오래된 기기의 작은 화면에서도 게임이 작동하기를 정말 "
"원한다면, 내보내기 설정으로 이미지를 압축해서 앱 스토어나 구글 플레이에 적합"
"한 화면으로 만들 수 있습니다."

#: ../../docs/about/faq.rst:290
msgid "How can I extend Godot?"
msgstr "Godot의 기능확장을 어떻게 합니까?"

#: ../../docs/about/faq.rst:292
msgid ""
"For extending Godot, like creating Godot Editor plugins or adding support "
"for additional languages, take a look at :ref:`EditorPlugins "
"<doc_making_plugins>` and tool scripts."
msgstr ""
"Godot 편집기 플러그인 제작이나 추가적인 언어 지원을 하고 싶다면 :ref:`편집기 "
"플러그인 <doc_making_plugins>`\\ 과 tool 스크립트를 참고하세요."

#: ../../docs/about/faq.rst:296
msgid "Also, see the official blog posts on these topics:"
msgstr "또한 이 주제에 관한 공식 블로그 게시물도 참고하세요:"

#: ../../docs/about/faq.rst:298
msgid ""
"`A look at the GDNative architecture <https://godotengine.org/article/look-"
"gdnative-architecture>`_"
msgstr ""
"`GDNative 건축의 모습 <https://godotengine.org/article/look-gdnative-"
"architecture>`_"

#: ../../docs/about/faq.rst:299
msgid "`GDNative is here! <https://godotengine.org/article/dlscript-here>`_"
msgstr "`GDNative이 왔어요! <https://godotengine.org/article/dlscript-here>`_"

#: ../../docs/about/faq.rst:301
msgid ""
"You can also take a look at the GDScript implementation, the Godot modules, "
"as well as the `unofficial Python support <https://github.com/touilleMan/"
"godot-python>`_ for Godot. This would be a good starting point to see how "
"another third-party library integrates with Godot."
msgstr ""
"GDScript 구현, Godot 모듈, Godot을 위한 `비공식 Python 지원 <https://github."
"com/touilleMan/godot-python>`_ 을 살펴볼 수도 있습니다. 이것이 Godot과 어떻"
"게 제 3자 라이브러리와 통합하는 지를 보여주는 좋은 출발점이 될 것입니다."

#: ../../docs/about/faq.rst:307
msgid "When is the next release of Godot out?"
msgstr "Godot의 다음 릴리스는 언제입니까?"

#: ../../docs/about/faq.rst:309
msgid ""
"When it's ready! See :ref:`doc_release_policy_when_is_next_release_out` for "
"more information."
msgstr ""
"준비가 되었다면, 자세한 설명을 위해 :ref:`doc_running_code_in_the_editor` 를 "
"참고하세요."

#: ../../docs/about/faq.rst:313
msgid "I would like to contribute! How can I get started?"
msgstr "저도 기여하고 싶어요! 어떻게 시작해야 하나요?"

#: ../../docs/about/faq.rst:315
msgid ""
"Awesome! As an open-source project, Godot thrives off of the innovation and "
"ambition of developers like you."
msgstr ""
"좋습니다! 오픈 소스 프로젝트인 만큼 Godot은 당신같이 혁신적이고 야심 찬 개발"
"자들에 의해 번창합니다."

#: ../../docs/about/faq.rst:318
msgid ""
"The first place to get started is in the `issues <https://github.com/"
"godotengine/godot/issues>`_. Find an issue that resonates with you, then "
"proceed to the `How to Contribute <https://github.com/godotengine/godot/blob/"
"master/CONTRIBUTING.md#contributing-pull-requests>`_ guide to learn how to "
"fork, modify, and submit a Pull Request (PR) with your changes."
msgstr ""
"처음으로 시작해야 할 부분은 `Issues <https://github.com/godotengine/godot/"
"issues>`_\\ 입니다. 당신이 공감하는 문제를 찾은 다음, `기여하는 방법 "
"<https://github.com/godotengine/godot/blob/master/CONTRIBUTING."
"md#contributing-pull-requests>`_ 가이드를 따라가세요. 변경 사항과 함께 Pull "
"Request (PR)를 포크 요청, 수정 및 제출하는 법을 배울 수 있습니다."

#: ../../docs/about/faq.rst:323
msgid "I have a great idea for Godot. How can I share it?"
msgstr "Godot에 대한 좋은 아이디어가 있습니다. 어떻게 이것을 공유할 수 있나요?"

#: ../../docs/about/faq.rst:325
msgid ""
"It might be tempting to want to bring ideas to Godot, like ones that result "
"in massive core changes, some sort of mimicry of what another game engine "
"does, or alternative workflows that you'd like built into the editor. These "
"are great, and we are thankful to have such motivated people want to "
"contribute, but Godot's focus is and always will be the core functionality "
"as outlined in the `Roadmap <https://github.com/godotengine/godot-roadmap/"
"blob/master/ROADMAP.md>`_, `squashing bugs and addressing issues <https://"
"github.com/godotengine/godot/issues>`_, and conversations between Godot "
"community members."
msgstr ""
"Godot으로 아이디어를 가져오는 것이, 마치 거대한 핵심 변화를 가져오거나, 다른 "
"종류의 게임 엔진을 흉내 내거나, 편집기에 내장하길 원하는 대체 워크플로가 생기"
"는 것 같아서 매력적일 것입니다. 아이디어는 멋집니다. 그래서 이런 사람들이 "
"Godot에 기여하는 것을 원한다는 사실에 감사하고 있습니다. 하지만 Godot의 초점"
"은 `로드맵 \n"
"<https://github.com/godotengine/godot-roadmap/blob/master/ROADMAP.md>`_\\ 에 "
"요약한 대로 핵심 기능과 `버그를 없애고 이슈를 다루는 것 <https://github.com/"
"godotengine/godot/issues>`_, 그리고 Godot 커뮤니티 회원과의 대화입니다."

#: ../../docs/about/faq.rst:334
msgid ""
"Most developers in the Godot community will be more interested to learn "
"about things like:"
msgstr ""
"Godot 커뮤니티의 개발자 대부분은 이런 것을 배우는 데 더 흥미를 가질 것입니다:"

#: ../../docs/about/faq.rst:337
msgid ""
"Your experience using the software and the problems you have (we care about "
"this much more than ideas on how to improve it)."
msgstr ""
"소프트웨어를 사용한 경험과 문제 (우리는 아이디어보다 이것을 개선하는 일을 더 "
"중요하게 여깁니다)."

#: ../../docs/about/faq.rst:339
msgid ""
"The features you would like to see implemented because you need them for "
"your project."
msgstr "프로젝트에 필요해서 구현하고자 하는 기능."

#: ../../docs/about/faq.rst:341
msgid ""
"The concepts that were difficult to understand while learning the software."
msgstr "소프트웨어를 배우면서 이해하기 어려운 개념."

#: ../../docs/about/faq.rst:342
msgid "The parts of your workflow you would like to see optimized."
msgstr "최적화하고 싶은 워크플로 부분."

#: ../../docs/about/faq.rst:343
msgid ""
"Parts where you missed clear tutorials or where the documentation wasn't "
"clear."
msgstr "깔끔한 튜토리얼이 없거나 깔끔하지 않은 문서 부분."

#: ../../docs/about/faq.rst:345
msgid ""
"Please don't feel like your ideas for Godot are unwelcome. Instead, try to "
"reformulate them as a problem first, so developers and the community have a "
"functional foundation to ground your ideas on."
msgstr ""
"그러니 Godot이 여러분의 생각을 달갑게 여기지 않는다고 생각하진 마세요. 다만 "
"개발자와 커뮤니티가 생각을 바탕으로 기술적 토대를 마련하기 위해, 먼저 문제점 "
"순으로 재구성해주세요."

#: ../../docs/about/faq.rst:349
msgid ""
"A good way to approach sharing your ideas and problems with the community is "
"as a set of user stories. Explain what you are trying to do, what behavior "
"you expect to happen, and then what behavior actually happened. Framing "
"problems and ideas this way will help the whole community stay focused on "
"improving developer experiences as a whole."
msgstr ""
"커뮤니티와 생각과 문제를 공유하는 좋은 방법은 이야기로 서술하는 것입니다. 당"
"신이 무엇을 하려 했고, 어떤 일을 예상했는데, 그 뒤 실제로는 어떤 일이 일어났"
"는 지를 설명하세요. 이 방법으로 문제와 생각을 정리하면 전체 커뮤니티가 개발"
"자 경험을 개선하는데 집중할 수 있습니다."

#: ../../docs/about/faq.rst:355
msgid ""
"Bonus points for bringing screenshots, concrete numbers, test cases, or "
"example projects (if applicable)."
msgstr ""
"스크린샷이나, 구체적인 값, 실험 사례, (가능하다면) 예제 프로젝트를 가져오면 "
"추가 점수가 될 것입니다."

#: ../../docs/about/faq.rst:361
msgid "Is it possible to use Godot to create non-game applications?"
msgstr "Godot을 게임이 아닌 응용프로그램 제작에 사용할 수 있을까요?"

#: ../../docs/about/faq.rst:363
msgid ""
"Yes! Godot features an extensive built-in UI system, and its small "
"distribution size can make it a suitable alternative to frameworks like "
"Electron or Qt."
msgstr ""
"예! Godot는 광범위한 내장 UI 시스템을 특징으로하며 작은 배포 크기로 인해 "
"Electron 또는 Qt와 같은 프레임 워크에 적합한 대안이 될 수 있습니다."

#: ../../docs/about/faq.rst:366
msgid ""
"When creating a non-game application, make sure to enable :ref:`low-"
"processor mode <class_ProjectSettings_property_application/run/"
"low_processor_mode>` in the Project Settings to decrease CPU and GPU usage."
msgstr ""
"게임이 아닌 응용 프로그램을 제작할 때는 CPU와 GPU 사용율을 줄이기 위해 반드"
"시 프로젝트 설정에서 :ref:`low-processor mode "
"<class_ProjectSettings_property_application/run/low_processor_mode>`를 활성화"
"해주세요."

#: ../../docs/about/faq.rst:370
msgid ""
"That said, we wouldn't recommend using Godot to create a *mobile* "
"application since low-processor mode isn't supported on mobile platforms yet."
msgstr ""
"그렇긴 하지만 *모바일* 응용 프로그램 제작에는 Godot을 사용하지 말아 주세요. "
"아직 저사양모드가 모바일 플랫폼에서는 지원되지 않습니다."

#: ../../docs/about/faq.rst:373
msgid ""
"Check out `Material Maker <https://github.com/RodZill4/material-maker>`__ "
"and `Pixelorama <https://github.com/Orama-Interactive/Pixelorama>`__ for "
"examples of open source applications made with Godot."
msgstr ""
"Godot으로 만든 오픈소스 예제 어플리케이션으로 `Material Maker <https://"
"github.com/RodZill4/material-maker>`__ 와 `Pixelorama <https://github.com/"
"Orama-Interactive/Pixelorama>`__ 를 참고하세요."

#: ../../docs/about/faq.rst:380
msgid "Is it possible to use Godot as a library?"
msgstr "Godot는 라이브러리로서 사용될 수 있을까요?"

#: ../../docs/about/faq.rst:382
msgid ""
"Godot is meant to be used with its editor. We recommend you give it a try, "
"as it will most likely save you time in the long term. There are no plans to "
"make Godot usable as a library, as it would make the rest of the engine more "
"convoluted and difficult to use for casual users."
msgstr ""
"Godot는 편집기와 함께 사용하도록되어 있습니다. 긴 안목으로 보면 시간을 절약 "
"할 수 있으므로 편집기를 사용해 보는 것이 좋습니다. Godot를 라이브러리로 사용"
"할 수 있도록 만들 계획은 없습니다. 그러면 엔진의 다른 부분이 더 복잡해지고 일"
"반 사용자가 사용기 어려워지기 때문입니다."

#: ../../docs/about/faq.rst:387
msgid ""
"If you want to use a rendering library, look into using an established "
"rendering engine instead. Keep in mind rendering engines usually have "
"smaller communities compared to Godot. This will make it more difficult to "
"find answers to your questions."
msgstr ""
"만약 렌더링 라이브러리를 원하신다면, 기존 렌더링 엔진을 대신 사용하는 것을 고"
"려하십시오. 대부분의 렌더링 엔진은 Godot에 비해 커뮤니티가 작다는 점을 명심하"
"십시오. 그곳에서 질문에 대한 답을 찾기는 더 어려워 질 것입니다."

#: ../../docs/about/faq.rst:393
msgid "What user interface toolkit does Godot use?"
msgstr "Godot는 어떤 사용자 인터페이스 툴킷을 사용합니까?"

#: ../../docs/about/faq.rst:395
msgid ""
"Godot does not use a standard :abbr:`GUI (Graphical User Interface)` toolkit "
"like GTK, Qt or wxWidgets. Instead, Godot uses its own user interface "
"toolkit, rendered using OpenGL ES or Vulkan. This toolkit is exposed in the "
"form of Control nodes, which are used to render the editor (which is written "
"in C++). These Control nodes can also be used in projects from any scripting "
"language supported by Godot."
msgstr ""
"Godot은 GTK나 Qt, wxWidgets와 같은 표준 :abbr:`GUI (Graphical User "
"Interface)` 툴킷을 사용하지 않는 대신 OpenGL ES나 Vulcan으로 렌더링하는 자체 "
"유저 인터페이스 툴킷을 사용합니다. 이 툴킷은 (C++로 작성된) 에디터를 렌더링"
"할 때 사용되는 컨트롤 노드의 형태로 노출되어 있습니다. 물론 이 컨트롤 노드들"
"은 Godot이 지원하는 어느 스크립트 언어로든지 사용할 수 있습니다."

#: ../../docs/about/faq.rst:402
msgid ""
"This custom toolkit makes it possible to benefit from hardware acceleration "
"and have a consistent appearance across all platforms. On top of that, it "
"doesn't have to deal with the LGPL licensing caveats that come with GTK or "
"Qt. Lastly, this means Godot is \"eating its own dog food\" since the editor "
"itself is one of the most complex users of Godot's UI system."
msgstr ""
"이 자체 툴킷 덕분에 하드웨어 가속으로부터 혜택을 받고 모든 플랫폼을 아울러 일"
"정한 외관을 가질 수 있습니다. 그에 더해 GTK나 Qt에 붙어있는 LGPL 라이센스과 "
"고투를 벌일 필요도 없읍니다. 마지막으로 편집기 자체가 Godot UI 시스템의 가장 "
"복잡한 구현 중 하나이기 때문에 Godot은 \"개밥 먹이기(eating its own dog "
"food)\"를 하는 것이기도 합니다."

#: ../../docs/about/faq.rst:408
msgid ""
"This custom UI toolkit :ref:`can't be used as a library "
"<doc_faq_use_godot_as_library>`, but you can still :ref:`use Godot to create "
"non-game applications by using the editor <doc_faq_non_game_applications>`."
msgstr ""
"이 자체 UI 툴킷은 :ref:`라이브러리로 사용할 수 없지만 "
"<doc_faq_use_godot_as_library>`, 여전히 :ref:`편집기를 이용하여 Godot으로 비"
"게임 어플리케이션을 만들 수는 있습니다 <doc_faq_non_game_applications>`."

#: ../../docs/about/faq.rst:413
#, fuzzy
msgid "Why does Godot not use STL (Standard Template Library)?"
msgstr "Godot가 STL (표준 템플릿 라이브러리)을 사용하지 않는 이유"

#: ../../docs/about/faq.rst:415
msgid ""
"Like many other libraries (Qt as an example), Godot does not make use of "
"STL. We believe STL is a great general purpose library, but we had special "
"requirements for Godot."
msgstr ""
"(Qt와 같은) 많은 다른 라이브러리처럼 Godot는 STL을 사용하지 않습니다. 우리는 "
"STL이 훌륭한 범용 라이브러리라고 생각하지만, Godot에게는 특별한 요구 사항이 "
"있었습니다."

#: ../../docs/about/faq.rst:419
msgid ""
"STL templates create very large symbols, which results in huge debug "
"binaries. We use few templates with very short names instead."
msgstr ""
"STL 템플릿은 매우 큰 심볼들을 만들어서, 결과적으로 거대한 디버그 바이너리를 "
"만듭니다. 대신 우리는 매우 짧은 이름의 템플릿을 조금만 사용합니다."

#: ../../docs/about/faq.rst:420
msgid ""
"Most of our containers cater to special needs, like Vector, which uses copy "
"on write and we use to pass data around, or the RID system, which requires "
"O(1) access time for performance. Likewise, our hash map implementations are "
"designed to integrate seamlessly with internal engine types."
msgstr ""
"우리의 컨테이너 대부분은 이런 특수 목적에 맞춰졌습니다. 벡터의 경우는, Copy-"
"On-Write를 사용하고, 데이터를 전달하는데 사용합니다. RID 시스템의 경우, 성능"
"을 위해 O(1) 접근 시간이 필요해서 벡터를 사용합니다. 마찬가지로 해시 맵 구현"
"은 내부 엔진 유형과 부드럽게 통합하도록 설계되었습니다."

#: ../../docs/about/faq.rst:421
msgid ""
"Our containers have memory tracking built-in, which helps better track "
"memory usage."
msgstr ""
"컨테이너는 메모리 추적 기능이 내장되어 있어서, 메모리 사용량을 추적하는데 더 "
"도움이 됩니다."

#: ../../docs/about/faq.rst:422
msgid ""
"For large arrays, we use pooled memory, which can be mapped to either a "
"preallocated buffer or virtual memory."
msgstr ""
"큰 배열의 경우, 풀(Pool)로 된 메모리를 사용합니다, 사전에 지정된 버퍼 메모리 "
"혹은 가상 메모리에 매핑될 수 있습니다."

#: ../../docs/about/faq.rst:423
msgid ""
"We use our custom String type, as the one provided by STL is too basic and "
"lacks proper internationalization support."
msgstr ""
"STL에서 제공하는 문자열 유형은 너무 단순하고 현지화 지원 기능이 부족해서 맞"
"춤 문자열 유형을 사용합니다."

#: ../../docs/about/faq.rst:426
msgid "Why does Godot not use exceptions?"
msgstr "왜 Godot는 예외(Exception)를 사용하지 않나요?"

#: ../../docs/about/faq.rst:428
msgid ""
"We believe games should not crash, no matter what. If an unexpected "
"situation happens, Godot will print an error (which can be traced even to "
"script), but then it will try to recover as gracefully as possible and keep "
"going."
msgstr ""
"우리는 게임이 무엇이든 간에 충돌하지 않아야 한다고 생각합니다. 예기치 못한 사"
"태가 벌어지면, Godot은 오류를 작성합니다 (스크립트에서도 추적할 수 있습니"
"다), 그런 다음 가능한 한 정상적으로 복구한 후 계속 진행합니다."

#: ../../docs/about/faq.rst:433
msgid ""
"Additionally, exceptions significantly increase binary size for the "
"executable."
msgstr "또한 예외는 실행 파일에서 이진 크기를 상당히 늘립니다."

#: ../../docs/about/faq.rst:437
msgid "Why does Godot not enforce RTTI?"
msgstr "왜 Godot는 런타임 유형 정보(RTTI)를 시행하지 않나요?"

#: ../../docs/about/faq.rst:439
msgid ""
"Godot provides its own type-casting system, which can optionally use RTTI "
"internally. Disabling RTTI in Godot means considerably smaller binary sizes "
"can be achieved, at a little performance cost."
msgstr ""
"Godot은 선택적으로 런타임 유형 정보를 사용하는 자체 유형 캐스팅 시스템을 제공"
"합니다. Godot에서 런타임 유형 정보를 끄게 되면 약간의 성능을 더 소모하지만 상"
"당히 작은 바이너리 크기를 얻을 수 있습니다."

#: ../../docs/about/faq.rst:444
msgid "Why does Godot not force users to implement DoD (Data oriented Design)?"
msgstr "Godot은 왜 DoD(데이터 지향 디자인) 구현을 강제하지 않습니까?"

#: ../../docs/about/faq.rst:446
msgid ""
"While Godot internally for a lot of the heavy performance tasks attempts to "
"use cache coherency as well as possible, we believe most users don't really "
"need to be forced to use DoD practices."
msgstr ""
"더 높은 성능 처리를 위해 Godot은 내부적으로 가능한 한 최선의 캐시 일관성을 사"
"용하려 하지만, 우리는 대부분의 사용자가 DoD 관행을 따라야 할 필요가 없다고 생"
"각합니다."

#: ../../docs/about/faq.rst:450
msgid ""
"DoD is mostly a cache coherency optimization that can only gain you "
"significant performance improvements when dealing with dozens of thousands "
"of objects (which are processed every frame with little modification). As "
"in, if you are moving a few hundred sprites or enemies per frame, DoD won't "
"help you, and you should consider a different approach to optimization."
msgstr ""
"DoD는 대개 캐시 일관성 최적화를 뜻하며, 이는 즉 수 만 개의 객체가 있는 경우에"
"만 (그리고 객체가 모든 프레임에서 수정이 거의 없이 처리되는 경우에만) 상당한 "
"성능 향상을 볼 수 있습니다. 만약 프레임마다 수 백 개의 스프라이트나 적을 이동"
"한다 하면, DoD는 도움이 되지 않습니다, 당신은 최적화에 있어서 다른 접근법을 "
"생각해 봐야 하는 것이죠."

#: ../../docs/about/faq.rst:457
msgid ""
"The vast majority of games do not need this and Godot provides handy helpers "
"to do the job for most cases when you do."
msgstr ""
"대부분의 게임에는 필요하지 않을 테지만, Godot은 이런 작업의 대부분의 경우에 "
"도움을 줄 편리한 도우미를 제공합니다."

#: ../../docs/about/faq.rst:460
msgid ""
"If a game that really needs to process such large amount of objects is "
"needed, our recommendation is to use C++ and GDNative for the high "
"performance parts and GDScript (or C#) for the rest of the game."
msgstr ""
"게임이 정말로 많은 양의 객체를 처리해야 한다면, 우리의 추천은 높은 성능이 필"
"요한 부분은 C++과 GDNative 사용하고, 그 외 나머지 부분은 GDScript (혹은 C#)"
"을 사용하는 것입니다."

#: ../../docs/about/faq.rst:465
msgid "How can I support Godot development or contribute?"
msgstr "어떻게 Godot 개발을 돕거나 후원할 수 있나요?"

#: ../../docs/about/faq.rst:467
msgid "See :ref:`doc_ways_to_contribute`."
msgstr ":ref:`doc_ways_to_contribute`\\ 를 참고하세요."

#: ../../docs/about/faq.rst:470
msgid "Who is working on Godot? How can I contact you?"
msgstr "Godot은 누가 만드나요? 제가 연락할 수 있을까요?"

#: ../../docs/about/faq.rst:472
msgid ""
"See the corresponding page on the `Godot website <https://godotengine.org/"
"contact>`_."
msgstr ""
"`Godot 웹사이트 <https://godotengine.org/contact>`_\\ 에서 해당 페이지를 참고"
"하세요."
