# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-20 15:59+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:4
msgid "2D Sprite animation"
msgstr "2Dスプライトアニメーション"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:7
msgid "Introduction"
msgstr "はじめに"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:9
msgid ""
"In this tutorial, you'll learn two different ways to create 2D animated "
"characters. Typically, when you create or download an animated character, it "
"will come in one of two ways: as individual images or as a single sprite "
"sheet containing all the animation's frames. Depending on which type of "
"assets you have, you can choose one of the following solutions."
msgstr ""
"このチュートリアルでは、2Dアニメーションキャラクターを作成する2つの異なる方法"
"を学習します。通常、アニメーションキャラクターを作成またはダウンロードする場"
"合、2つの方法のいずれかが使用されます。個別の画像として、またはすべてのアニ"
"メーションフレームを含む単一のスプライトシートとして。アセットのタイプに応じ"
"て、次のソリューションのいずれかを選択できます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:15
msgid ""
"First, we'll use :ref:`AnimatedSprite <class_AnimatedSprite>` to animate a "
"collection of individual images. Then, to use a sprite sheet, we'll use :ref:"
"`AnimationPlayer <class_AnimationPlayer>` along with the *Animation* "
"property of :ref:`Sprite <class_Sprite>`."
msgstr ""
"最初に、AnimatedSpriteを使用して、個々の画像のコレクションをアニメーション化"
"します。次に、スプライトシートを使用するには、AnimationPlayerとSpriteの"
"Animationプロパティを使用します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:20
msgid "Art for the following examples by https://opengameart.org/users/ansimuz"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:23
msgid "Individual images with AnimatedSprite"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:25
msgid ""
"In this scenario, you have a collection of images, each containing one of "
"your character's animation frames. For this example, we'll use the following "
"animation:"
msgstr ""
"このシナリオでは、キャラクターのアニメーションフレームを1つづつ含む複数の画像"
"を使います。この例では、次のアニメーションを使用します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:31
msgid ""
"You can download the images here: :download:`run_animation.zip <files/"
"run_animation.zip>`"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:34
msgid ""
"Unzip the images and place them in your project folder. Set up your scene "
"tree with the following nodes:"
msgstr ""
"画像を解凍し、プロジェクトフォルダーに配置します。次のノードを使用してシーン"
"ツリーを設定します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:39
#: ../../docs/tutorials/2d/2d_sprite_animation.rst:109
msgid ""
"The root node could also be :ref:`Area2D <class_Area2D>` or :ref:"
"`RigidBody2D <class_RigidBody2D>`. The animation will still be made in the "
"same way. Once the animation is completed, you can assign a shape to the "
"CollisionShape2D. See :ref:`Physics Introduction <doc_physics_introduction>` "
"for more information."
msgstr ""
"ルートノードは、Area2DまたはRigidBody2Dにすることもできます。アニメーションは"
"引き続き同じ方法で作成されます。アニメーションが完成したら、CollisionShape2D"
"にシェイプを割り当てることができます。詳細については、物理の概要を参照してく"
"ださい。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:46
msgid ""
"Now select the ``AnimatedSprite`` and in its *SpriteFrames* property, select "
"\"New SpriteFrames\"."
msgstr ""
"次に、AnimatedSpriteを選択し、そのSpriteFramesプロパティで「New "
"SpriteFrames」を選択します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:51
msgid ""
"Click on the new SpriteFrames resource and you'll see a new panel appear at "
"the bottom of the editor window:"
msgstr ""
"新しいSpriteFramesリソースをクリックすると、エディターウィンドウの下部に新し"
"いパネルが表示されます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:56
msgid ""
"From the FileSystem dock on the left side, drag the 8 individual images into "
"the center part of the SpriteFrames panel. On the left side, change the name "
"of the animation from \"default\" to \"run\"."
msgstr ""
"左側のFileSystemドックから、8つの個別の画像をSpriteFramesパネルの中央部分にド"
"ラッグします。左側で、アニメーションの名前を「デフォルト」から「run」に変更し"
"ます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:62
#, fuzzy
msgid ""
"Back in the Inspector, check the box for the *Playing* property. You should "
"now see the animation playing in the viewport. However, it is a bit slow. To "
"fix this, change the *Speed (FPS)* setting in the SpriteFrames panel to 10."
msgstr ""
"インスペクターに戻り、Playingプロパティのボックスをチェックします。これで、"
"ビューポートでアニメーションが再生されます。しかし、それは少し遅いです。これ"
"を修正するには、SpriteFramesパネルのSpeed（FPS）設定を変更します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:66
msgid ""
"You can add additional animations by clicking the \"New Animation\" button "
"and adding additional images."
msgstr ""
"[新しいアニメーション]ボタンをクリックして画像を追加すると、アニメーションを"
"追加できます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:70
msgid "Controlling the animation"
msgstr "アニメーションのコントロール"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:72
msgid ""
"Once the animation is complete, you can control the animation via code using "
"the ``play()`` and ``stop()`` methods. Here is a brief example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"アニメーションが完了すると、play()メソッドとstop()メソッドを使用して、コード"
"でアニメーションを制御できます。右矢印キーを押したままアニメーションを再生"
"し、キーを放したときにアニメーションを停止する簡単な例を次に示します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:90
msgid "Sprite sheet with AnimationPlayer"
msgstr "アニメーションプレイヤーのスプライトシート"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:92
msgid ""
"In the event you have a sprite sheet containing all of your animation "
"frames, you can't easily use ``AnimatedSprite``. Instead, you can use a "
"standard :ref:`Sprite <class_Sprite>` node to display the texture, and then "
"animate the change from texture to texture with :ref:`AnimationPlayer "
"<class_AnimationPlayer>`."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:97
msgid "Consider this sprite sheet, which contains 6 frames of animation:"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:101
msgid ""
"Right-click the image and choose \"Save Image As\" to download, then copy "
"the image into your project folder."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:104
msgid ""
"Our goal is to display these images one after another in a loop. Start by "
"setting up your scene tree:"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:116
msgid ""
"Drag the spritesheet into the Sprite's *Texture* property, and you'll see "
"the whole sheet displayed on the screen. To slice it up into individual "
"frames, expand the *Animation* section in the Inspector and set the "
"*Hframes* to ``6``. *Hframes* and *Vframes* are the number of horizontal and "
"vertical frames in your sprite sheet."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:124
msgid ""
"Now try changing the value of the *Frame* property. You'll see that it "
"ranges from ``0`` to ``5`` and the image displayed by the Sprite changes "
"accordingly. This is the property we'll be animating."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:128
msgid ""
"Select the ``AnimationPlayer`` and click the \"Animation\" button followed "
"by \"New\". Name the new animation \"walk\". Set the animation length to "
"``0.6`` and click the \"Loop\" button so that our animation will repeat."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:134
msgid ""
"Now select the ``Sprite`` node and click the key icon to add a new track."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:138
msgid ""
"Continue adding frames at each point in the timeline (``0.1`` seconds by "
"default), until you have all the frames from 0 to 5. You'll see the frames "
"actually appearing in the animation track:"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:144
msgid "Press \"Play\" on the animation to see how it looks."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:149
#, fuzzy
msgid "Controlling an AnimationPlayer animation"
msgstr "アニメーションのコントロール"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:151
#, fuzzy
msgid ""
"Like with AnimatedSprite, you can control the animation via code using the "
"``play()`` and ``stop()`` methods. Again, here is an example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"アニメーションが完了すると、play()メソッドとstop()メソッドを使用して、コード"
"でアニメーションを制御できます。右矢印キーを押したままアニメーションを再生"
"し、キーを放したときにアニメーションを停止する簡単な例を次に示します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:168
msgid ""
"If updating both an animation and a separate property at once (for example, "
"a platformer may update the sprite's ``h_flip``/``v_flip`` properties when a "
"character turns while starting a 'turning' animation), it's important to "
"keep in mind that ``play()`` isn't applied instantly. Instead, it's applied "
"the next time the :ref:`AnimationPlayer <class_AnimationPlayer>` is "
"processed. This may end up being on the next frame, causing a 'glitch' "
"frame, where the property change was applied but the animation was not. If "
"this turns out to be a problem, after calling ``play()``, you can call "
"``advance(0)`` to update the animation immediately."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:179
msgid "Summary"
msgstr "概要"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:181
msgid ""
"These examples illustrate the two most common situations you'll encounter in "
"2D animation. Each has its benefits. Working with ``AnimationPlayer`` is a "
"bit more complex, but provides additional functionality, since you can also "
"animate other properties like position or scale. Experiment and see which "
"works best for your needs."
msgstr ""
