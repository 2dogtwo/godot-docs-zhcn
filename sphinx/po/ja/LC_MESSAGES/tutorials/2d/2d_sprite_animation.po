# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-13 17:49+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:4
msgid "2D Sprite animation"
msgstr "2Dスプライトアニメーション"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:7
msgid "Introduction"
msgstr "はじめに"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:9
#, fuzzy
msgid ""
"In this tutorial, you'll learn how to create 2D animated characters with the "
"AnimatedSprite class and the AnimationPlayer. Typically, when you create or "
"download an animated character, it will come in one of two ways: as "
"individual images or as a single sprite sheet containing all the animation's "
"frames.  Both can be animated in Godot with the AnimatedSprite class."
msgstr ""
"このチュートリアルでは、2Dアニメーションキャラクターを作成する2つの異なる方法"
"を学習します。通常、アニメーションキャラクターを作成またはダウンロードする場"
"合、2つの方法のいずれかが使用されます。個別の画像として、またはすべてのアニ"
"メーションフレームを含む単一のスプライトシートとして。アセットのタイプに応じ"
"て、次のソリューションのいずれかを選択できます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:14
#, fuzzy
msgid ""
"First, we'll use :ref:`AnimatedSprite <class_AnimatedSprite>` to animate a "
"collection of individual images. Then we will animate a sprite sheet using "
"this class.  Finally, we will learn another way to animate a sprite sheet "
"with :ref:`AnimationPlayer <class_AnimationPlayer>` and the *Animation* "
"property of :ref:`Sprite <class_Sprite>`."
msgstr ""
"最初に、\\ :ref:`AnimatedSprite <class_AnimatedSprite>` を使用して、個々の画"
"像のコレクションをアニメーション化します。次に、スプライトシートを使用するに"
"は、\\ :ref:`AnimationPlayer <class_AnimationPlayer>` と :ref:`Sprite "
"<class_Sprite>` の *Animation* プロパティを使用します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:19
#, fuzzy
msgid ""
"Art for the following examples by https://opengameart.org/users/ansimuz and "
"by https://opengameart.org/users/tgfcoder"
msgstr ""
"次のサンプルのアートは https://opengameart.org/users/ansimuz から入手しました"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:23
msgid "Individual images with AnimatedSprite"
msgstr "AnimatedSpriteと個々の画像"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:25
msgid ""
"In this scenario, you have a collection of images, each containing one of "
"your character's animation frames. For this example, we'll use the following "
"animation:"
msgstr ""
"このシナリオでは、キャラクターのアニメーションフレームを1つづつ含む複数の画像"
"を使います。この例では、次のアニメーションを使用します:"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:31
msgid ""
"You can download the images here: :download:`run_animation.zip <files/"
"run_animation.zip>`"
msgstr ""
"画像はこちらからダウンロードできます: :download:`run_animation.zip </"
"run_animation.zip>`"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:34
msgid ""
"Unzip the images and place them in your project folder. Set up your scene "
"tree with the following nodes:"
msgstr ""
"画像を解凍し、プロジェクトフォルダに配置します。次のノードを使用してシーンツ"
"リーを設定します:"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:39
#: ../../docs/tutorials/2d/2d_sprite_animation.rst:143
msgid ""
"The root node could also be :ref:`Area2D <class_Area2D>` or :ref:"
"`RigidBody2D <class_RigidBody2D>`. The animation will still be made in the "
"same way. Once the animation is completed, you can assign a shape to the "
"CollisionShape2D. See :ref:`Physics Introduction <doc_physics_introduction>` "
"for more information."
msgstr ""
"ルートノードは、\\ :ref:`Area2D <class_Area2D>` または :ref:`RigidBody2D "
"<class_RigidBody2D>` にすることもできます。アニメーションは引き続き同じ方法で"
"作成されます。アニメーションが完成したら、CollisionShape2Dにシェイプを割り当"
"てることができます。詳細については、\\ :ref:`Physics Introduction "
"<doc_physics_introduction>` を参照してください。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:46
msgid ""
"Now select the ``AnimatedSprite`` and in its *SpriteFrames* property, select "
"\"New SpriteFrames\"."
msgstr ""
"次に、\\ ``AnimatedSprite`` を選択し、その *SpriteFrames* プロパティで「新規 "
"SpriteFrames」を選択します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:51
msgid ""
"Click on the new SpriteFrames resource and you'll see a new panel appear at "
"the bottom of the editor window:"
msgstr ""
"新しいSpriteFramesリソースをクリックすると、エディタウィンドウの下部に新しい"
"パネルが表示されます:"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:56
msgid ""
"From the FileSystem dock on the left side, drag the 8 individual images into "
"the center part of the SpriteFrames panel. On the left side, change the name "
"of the animation from \"default\" to \"run\"."
msgstr ""
"左側のFileSystemドックから、8つの個別の画像をSpriteFramesパネルの中央部分にド"
"ラッグします。左側で、アニメーションの名前を \"default\" から \"run\" に変更"
"します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:62
msgid ""
"Back in the Inspector, check the box for the *Playing* property. You should "
"now see the animation playing in the viewport. However, it is a bit slow. To "
"fix this, change the *Speed (FPS)* setting in the SpriteFrames panel to 10."
msgstr ""
"インスペクタに戻り、\\ *Playing* プロパティのチェックボックスをオンにします。"
"これで、アニメーションがビューポートで再生されます。しかし、それは少し遅いで"
"す。この問題を解決するには、SpriteFramesパネルの *Speed(FPS)* 設定を10に変更"
"します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:66
msgid ""
"You can add additional animations by clicking the \"New Animation\" button "
"and adding additional images."
msgstr ""
"[新規アニメーション]ボタンをクリックして画像を追加すると、アニメーションを追"
"加できます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:70
msgid "Controlling the animation"
msgstr "アニメーションのコントロール"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:72
msgid ""
"Once the animation is complete, you can control the animation via code using "
"the ``play()`` and ``stop()`` methods. Here is a brief example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"アニメーションが完了すると、\\ ``play()`` メソッドと ``stop()`` メソッドを使"
"用して、コードでアニメーションを制御できます。右矢印キーを押したままアニメー"
"ションを再生し、キーを放したときにアニメーションを停止する簡単な例を次に示し"
"ます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:90
#, fuzzy
msgid "Sprite sheet with AnimatedSprite"
msgstr "AnimationPlayerのスプライトシート"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:92
msgid ""
"You can also easily animate from a sprite sheet with the class "
"``AnimatedSprite``.  We will use this public domain sprite sheet:"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:96
#, fuzzy
msgid ""
"Right-click the image and choose \"Save Image As\" to download it, and then "
"copy the image into your project folder."
msgstr ""
"画像を右クリックして[名前を付けて保存]を選択してダウンロードし、イメージをプ"
"ロジェクトフォルダにコピーします。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:98
#, fuzzy
msgid ""
"Set up your scene tree the same way you did previously when using individual "
"images.  Select the ``AnimatedSprite`` and in its *SpriteFrames* property, "
"select \"New SpriteFrames\"."
msgstr ""
"次に、\\ ``AnimatedSprite`` を選択し、その *SpriteFrames* プロパティで「新規 "
"SpriteFrames」を選択します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:101
#, fuzzy
msgid ""
"Click on the new SpriteFrames resource.  This time, when the bottom panel "
"appears, select \"Add frames from a Sprite Sheet\"."
msgstr ""
"新しいSpriteFramesリソースをクリックすると、エディタウィンドウの下部に新しい"
"パネルが表示されます:"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:105
msgid "You will be prompted to open a file.  Select your sprite sheet."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:107
msgid ""
"A new window will open, showing your sprite sheet.  The first thing you will "
"need to do is to change the number of vertical and horizontal images in your "
"sprite sheet.  In this sprite sheet, we have four images horizontally and "
"two images vertically."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:111
msgid ""
"Next, select the frames from the sprite sheet that you want to include in "
"your animation.  We will select the top four, then click \"Add 4 frames\" to "
"create the animation."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:115
msgid ""
"You will now see your animation under the list of animations in the bottom "
"panel.  Double click on default to change the name of the animation to jump."
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:119
msgid ""
"Finally, check Playing on the  AnimatedSprite in the inspector to see your "
"frog jump!"
msgstr ""

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:125
msgid "Sprite sheet with AnimationPlayer"
msgstr "AnimationPlayerのスプライトシート"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:127
#, fuzzy
msgid ""
"Another way that you can animate when using a sprite sheet is to use a "
"standard :ref:`Sprite <class_Sprite>` node to display the texture, and then "
"animating the change from texture to texture with :ref:`AnimationPlayer "
"<class_AnimationPlayer>`."
msgstr ""
"すべてのアニメーションフレームを含むスプライトシートがある場合、\\ "
"``AnimatedSprite`` を簡単に使用することはできません。代わりに、標準の :ref:"
"`Sprite <class_Sprite>` ノードを使用してテクスチャを表示し、\\ :ref:"
"`AnimationPlayer <class_AnimationPlayer>` を使用してテクスチャからテクスチャ"
"への変更をアニメーション化できます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:131
msgid "Consider this sprite sheet, which contains 6 frames of animation:"
msgstr ""
"6フレームのアニメーションを含むこのスプライトシートを考えてみましょう。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:135
msgid ""
"Right-click the image and choose \"Save Image As\" to download, then copy "
"the image into your project folder."
msgstr ""
"画像を右クリックして[名前を付けて保存]を選択してダウンロードし、イメージをプ"
"ロジェクトフォルダにコピーします。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:138
msgid ""
"Our goal is to display these images one after another in a loop. Start by "
"setting up your scene tree:"
msgstr ""
"私たちの目標は、これらの画像をループで次々に表示することです。シーンツリーを"
"設定することから始めます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:150
msgid ""
"Drag the spritesheet into the Sprite's *Texture* property, and you'll see "
"the whole sheet displayed on the screen. To slice it up into individual "
"frames, expand the *Animation* section in the Inspector and set the "
"*Hframes* to ``6``. *Hframes* and *Vframes* are the number of horizontal and "
"vertical frames in your sprite sheet."
msgstr ""
"スプライトシートをスプライトの *Texture* プロパティにドラッグすると、シート全"
"体が画面に表示されます。個々のフレームにスライスするには、インスペクタの "
"*Animation* セクションを展開し、\\ *Hframes* を ``6`` に設定します。\\ "
"*Hframes* および *Vframes* は、スプライトシート内の水平フレームと垂直フレーム"
"の数です。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:158
msgid ""
"Now try changing the value of the *Frame* property. You'll see that it "
"ranges from ``0`` to ``5`` and the image displayed by the Sprite changes "
"accordingly. This is the property we'll be animating."
msgstr ""
"次に、\\ *Frame* プロパティの値を変更してみてください。範囲が ``0`` から "
"``5`` であり、それに応じてスプライトによって表示される画像が変化することがわ"
"かります。これが、アニメーション化のプロパティです。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:162
msgid ""
"Select the ``AnimationPlayer`` and click the \"Animation\" button followed "
"by \"New\". Name the new animation \"walk\". Set the animation length to "
"``0.6`` and click the \"Loop\" button so that our animation will repeat."
msgstr ""
"``AnimationPlayer`` を選択し、[アニメーション] ボタンをクリックしてから [新"
"規] をクリックします。新しいアニメーションに「walk」という名前を付けます。ア"
"ニメーションの長さを ``0.6`` に設定し、[ループ] ボタンをクリックして、アニ"
"メーションが繰り返されるようにします。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:168
msgid ""
"Now select the ``Sprite`` node and click the key icon to add a new track."
msgstr ""
"次に、\\ ``Sprite`` ノードを選択し、鍵のアイコンをクリックして新しいトラック"
"を追加します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:172
msgid ""
"Continue adding frames at each point in the timeline (``0.1`` seconds by "
"default), until you have all the frames from 0 to 5. You'll see the frames "
"actually appearing in the animation track:"
msgstr ""
"タイムラインの各ポイント(デフォルトでは ``0.1``\\ 秒刻み)で、0から5までのすべ"
"てのフレームが追加されるまで、鍵アイコンをクリックしてフレームの追加を続けま"
"す。アニメーショントラックに実際にフレームが表示されます:"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:178
msgid "Press \"Play\" on the animation to see how it looks."
msgstr ""
"アニメーションの [再生] をクリックすると、アニメーションがどのように表示され"
"るかを確認できます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:183
msgid "Controlling an AnimationPlayer animation"
msgstr "AnimationPlayerアニメーションの制御"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:185
msgid ""
"Like with AnimatedSprite, you can control the animation via code using the "
"``play()`` and ``stop()`` methods. Again, here is an example to play the "
"animation while the right arrow key is held, and stop it when the key is "
"released."
msgstr ""
"AnimatedSpriteと同様に、\\ ``play()`` メソッドと ``stop()`` メソッドを使用し"
"て、コードを介してアニメーションを制御できます。ここでも、右矢印キーを押した"
"ままアニメーションを再生し、キーを放したときにアニメーションを停止する例を次"
"に示します。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:202
msgid ""
"If updating both an animation and a separate property at once (for example, "
"a platformer may update the sprite's ``h_flip``/``v_flip`` properties when a "
"character turns while starting a 'turning' animation), it's important to "
"keep in mind that ``play()`` isn't applied instantly. Instead, it's applied "
"the next time the :ref:`AnimationPlayer <class_AnimationPlayer>` is "
"processed. This may end up being on the next frame, causing a 'glitch' "
"frame, where the property change was applied but the animation was not. If "
"this turns out to be a problem, after calling ``play()``, you can call "
"``advance(0)`` to update the animation immediately."
msgstr ""
"アニメーションと個別のプロパティの両方を一度に更新する場合 (たとえば、プラッ"
"トフォームゲームの場合、「ターン」アニメーションの開始中に、キャラクタの方向"
"転のために、スプライトの ``h_flip``/``v_flip`` プロパティを更新する場合があり"
"ます)、\\ ``play()`` では即座に適用されないことに注意してください。代わりに、"
"次回 :ref:`AnimationPlayer <class_AnimationPlayer>` が処理されるときに適用さ"
"れます。この更新は次のフレームで確定するので、プロパティの更新は行われていて"
"も、それがアニメーションには適用されていない「グリッチ」フレームが発生する可"
"能性があります。これが問題であることが判明した場合は、\\ ``play()`` を呼び出"
"した後に ``advance(0)`` を呼び出すことでアニメーションをすぐに更新することが"
"できます。"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:213
msgid "Summary"
msgstr "概要"

#: ../../docs/tutorials/2d/2d_sprite_animation.rst:215
#, fuzzy
msgid ""
"These examples illustrate the two classes you can use in Godot for 2D "
"animation. ``AnimationPlayer`` is a bit more complex than "
"``AnimatedSprite``, but it provides additional functionality, since you can "
"also animate other properties like position or scale. The class "
"``AnimationPlayer`` can also be used with an ``AnimatedSprite``.  Experiment "
"to see what works best for your needs."
msgstr ""
"これらの例は、2Dアニメーションで発生する最も一般的な2つの状況を示しています。"
"それぞれに利点があります。\\ ``AnimationPlayer`` の操作はもう少し複雑ですが、"
"位置やスケールなどの他のプロパティをアニメーション化することもできるため、追"
"加の機能が提供されます。どれがあなたのニーズに最適なのかを試してみてくださ"
"い。"
