# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-28 16:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:4
msgid "Inspector plugins"
msgstr "インスペクタプラグイン"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:6
msgid ""
"The inspector dock supports custom plugins to create your own widgets for "
"editing properties. This tutorial explains how to use the :ref:"
"`class_EditorInspectorPlugin` and :ref:`class_EditorProperty` classes to "
"write such plugins with the example of creating a custom value editor."
msgstr ""
"インスペクタドックは、プロパティを編集するための独自のウィジェットを作成する"
"カスタムプラグインをサポートしています。このチュートリアルでは、\\ :ref:"
"`class_EditorInspectorPlugin` および :ref:`class_EditorProperty` クラスを使用"
"して、カスタム値エディタを作成する例を使用して、このようなプラグインを作成す"
"る方法を説明します。"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:12
msgid "Setup"
msgstr "セットアップ"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:14
msgid ""
"Just like :ref:`doc_making_plugins`, we start out by making a new plugin, "
"getting a ``plugin.cfg`` file created, and start with our :ref:"
"`class_EditorPlugin`.  However, instead of using ``add_custom_node`` or "
"``add_control_to_dock`` we'll use ``add_inspector_plugin``."
msgstr ""
":ref:`doc_making_plugins` と同様に、新しいプラグインを作成し、\\ ``plugin."
"cfg`` ファイルを作成して、\\ :ref:` class_EditorPlugin` から始めます。ただ"
"し、\\ ``add_custom_node`` または ``add_control_to_dock`` を使用する代わり"
"に、\\ ``add_inspector_plugin`` を使用します。"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:40
msgid "EditorInspectorPlugin"
msgstr "EditorInspectorPlugin"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:42
msgid ""
"To actually connect into the Inspector, we create a :ref:"
"`class_EditorInspectorPlugin` class. This script provides the \"hooks\" to "
"the inspector. Thanks to this class, the editor will call the functions "
"within the EditorInspectorPlugin while it goes through the process of "
"building the UI for the inspector. The script is used to check if we should "
"enable ourselves for any :ref:`class_Object` that is currently in the "
"inspector (including any :ref:`class_Resource` that is embedded!)."
msgstr ""
"実際にインスペクタに接続するには、\\ :ref:`class_EditorInspectorPlugin` クラ"
"スを作成します。このスクリプトはインスペクタに\"hooks\"(フック)を提供します。"
"このクラスのおかげで、エディタは、インスペクタのUIを構築するプロセスを実行し"
"ている間にEditorInspectorPlugin内の関数を呼び出します。このスクリプトは、現在"
"インスペクタにある :ref:`class_Object` (埋め込まれている :ref:"
"`class_Resource` を含む！) に対して有効にする必要があるかどうかを確認するため"
"に使用されます。"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:50
msgid ""
"Once enabled, EditorInspectorPlugin has methods that allow for adding :ref:"
"`class_EditorProperty` nodes or just custom :ref:`class_Control` nodes to "
"the beginning and end of the inspector for that :ref:`class_Object`, or for "
"overriding or changing existing property editors."
msgstr ""
"有効にすると、EditorInspectorPluginには、その :ref:`class_Object` のインスペ"
"クタの最初と最後に :ref:`class_EditorProperty` ノードまたはカスタム :ref:"
"`class_Control` ノードを追加したり、既存のプロパティエディタをオーバーライド"
"または変更したりできるメソッドがあります。"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:84
msgid "EditorProperty"
msgstr "EditorProperty"

#: ../../docs/tutorials/plugins/editor/inspector_plugins.rst:86
msgid ""
"Next, we define the actual :ref:`class_EditorProperty` custom value editor "
"that we want instantiated to edit integers. This is a custom :ref:"
"`class_Control` and we can add any kinds of additional nodes to make "
"advanced widgets to embed in the inspector."
msgstr ""
"次に、インスタンス化して整数を編集する実際の :ref:`class_EditorProperty` カス"
"タム値エディタを定義します。これはカスタムの :ref:`class_Control` であり、任"
"意の種類の追加ノードを追加して、インスペクタに埋め込む高度なウィジェットを作"
"成できます。"
