# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2019, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-17 12:01+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/about/faq.rst:4
msgid "Frequently asked questions"
msgstr "よくある質問"

#: ../../docs/about/faq.rst:7
msgid ""
"What can I do with Godot? How much does it cost? What are the license terms?"
msgstr ""
"Godotで何ができますか？費用はいくらかかりますか？ライセンス条項は何ですか？"

#: ../../docs/about/faq.rst:9
msgid ""
"Godot is `Free and Open-Source Software <https://en.wikipedia.org/wiki/"
"Free_and_open-source_software>`_ available under the `OSI-approved <https://"
"opensource.org/licenses/MIT>`_ MIT license. This means it is free as in "
"\"free speech\" as well as in \"free beer.\""
msgstr ""
"Godotは\\ `フリーソフトウェアでオープンソース <https://ja.wikipedia.org/wiki/"
"FLOSS>`_\\ で、OSI承認済みのMITライセンスの元で利用できます。これは「飲み放"
"題」と同様に「言論の自由」のように自由であることを意味します。"

#: ../../docs/about/faq.rst:11
msgid "In short:"
msgstr "要するに："

#: ../../docs/about/faq.rst:13
msgid ""
"You are free to download and use Godot for any purpose, personal, non-"
"profit, commercial, or otherwise."
msgstr ""
"Godotをダウンロードして、個人的、非営利、商業、またはその他の目的で自由に使用"
"できます。"

#: ../../docs/about/faq.rst:14
msgid ""
"You are free to modify, distribute, redistribute, and remix Godot to your "
"heart's content, for any reason, both non-commercially and commercially."
msgstr ""
"商用と非商用を問わず、どのような用途であれ、心おきなく自由にGodotを改変、配"
"布、再配布およびリミックスできます。"

#: ../../docs/about/faq.rst:16
msgid ""
"All the contents of this accompanying documentation are published under the "
"permissive Creative Commons Attribution 3.0 (`CC-BY 3.0 <https://"
"creativecommons.org/licenses/by/3.0/>`_) license, with attribution to \"Juan "
"Linietsky, Ariel Manzur and the Godot Engine community.\""
msgstr ""
"このコンテンツは、「Juan Linietsky」、「Ariel Manzur」そして 「Godot Engineコ"
"ミュニティ」によって、クリエイティブ・コモンズ-表示 3.0(\\ `CC-BY 3.0 "
"<https://creativecommons.org/licenses/by/3.0/>`_\\ )ライセンスの下、管理され"
"ております。"

#: ../../docs/about/faq.rst:20
msgid ""
"Logos and icons are generally under the same Creative Commons license. Note "
"that some third-party libraries included with Godot's source code may have "
"different licenses."
msgstr ""
"ロゴ、アイコンはクリエイティブ・コモンズ・ライセンス下で管理しています。補足"
"としてサードパーティライブラリには、Godotのソースコードとは違うライセンスを含"
"んでいる可能性があります。"

#: ../../docs/about/faq.rst:24
msgid ""
"For full details, look at the `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_ as well as the `LICENSE.txt <https://"
"github.com/godotengine/godot/blob/master/LICENSE.txt>`_ and `LOGO_LICENSE."
"txt <https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_ "
"files in the Godot repository."
msgstr ""
"詳細はGodotリポジトリの、\\ `COPYRIGHT.txt <https://github.com/godotengine/"
"godot/blob/master/COPYRIGHT.txt>`_\\ または `LICENSE.txt <https://github.com/"
"godotengine/godot/blob/master/LICENSE.txt>`_\\ と\\ `LOGO_LICENSE.txt "
"<https://github.com/godotengine/godot/blob/master/LOGO_LICENSE.md>`_\\ ファイ"
"ルをご覧ください。"

#: ../../docs/about/faq.rst:28
msgid ""
"Also, see `the license page on the Godot website <https://godotengine.org/"
"license>`_."
msgstr ""
"また、`Godotウェブサイトのライセンス情報ページ <https://godotengine.org/"
"license>`_\\ も見てみて下さい。"

#: ../../docs/about/faq.rst:31
msgid "Which platforms are supported by Godot?"
msgstr "Godotが対応するプラットフォームは？"

#: ../../docs/about/faq.rst:33
msgid "**For the editor:**"
msgstr "**エディター:**"

#: ../../docs/about/faq.rst:35
msgid "Windows"
msgstr "Windows"

#: ../../docs/about/faq.rst:36 ../../docs/about/faq.rst:42
msgid "macOS"
msgstr "macOS"

#: ../../docs/about/faq.rst:37 ../../docs/about/faq.rst:43
msgid "X11 (Linux, \\*BSD)"
msgstr "X11 (Linux, \\*BSD)"

#: ../../docs/about/faq.rst:39
msgid "**For exporting your games:**"
msgstr "**ゲームの書き出し:**"

#: ../../docs/about/faq.rst:41
msgid "Windows (and UWP)"
msgstr "Windows (およびUWP)"

#: ../../docs/about/faq.rst:44
msgid "Android"
msgstr "Android"

#: ../../docs/about/faq.rst:45
msgid "iOS"
msgstr "iOS"

#: ../../docs/about/faq.rst:46
msgid "Web"
msgstr "ウェブ"

#: ../../docs/about/faq.rst:48
msgid ""
"Both 32- and 64-bit binaries are supported where it makes sense, with 64 "
"being the default."
msgstr ""
"デフォルトは64ビットですが、場合に応じて32ビットと64ビット両方に対応していま"
"す。"

#: ../../docs/about/faq.rst:51
msgid ""
"Some users also report building and using Godot successfully on ARM-based "
"systems with Linux, like the Raspberry Pi."
msgstr ""
"Raspberry Piのような、ARMベースのLinuxマシンでGodotが動作したという報告もいく"
"つかあります。"

#: ../../docs/about/faq.rst:54
msgid ""
"Additionally, there is some unofficial third-party work being done on "
"building for some consoles. However, none of this is included in the default "
"build scripts or export templates at this time."
msgstr ""
"それに加えて、コンソール機向けに第三者による非公式のビルドがいくつかありま"
"す。しかし、現時点では標準のビルドスクリプトや書き出しテンプレートには含まれ"
"ていません。"

#: ../../docs/about/faq.rst:58
msgid ""
"For more on this, see the sections on :ref:`exporting <toc-learn-workflow-"
"export>` and :ref:`compiling Godot yourself <toc-devel-compiling>`."
msgstr ""
"詳しくは、:ref:`書き出しについて <toc-learn-workflow-export>`\\ の節や\\ :"
"ref:`Godotをコンパイルする <toc-devel-compiling>`\\ をご参照ください。"

#: ../../docs/about/faq.rst:62
msgid "Which programming languages are supported in Godot?"
msgstr "Godotが対応するプログラミング言語は？"

#: ../../docs/about/faq.rst:64
msgid ""
"The officially supported languages for Godot are GDScript, Visual Scripting, "
"C#, and C++. See the subcategories for each language in the :ref:`scripting "
"<toc-learn-scripting>` section."
msgstr ""
"Godotが公式対応している言語は、GDScript、ビジュアルスクリプト、C#、およびC+"
"+です。それぞれの言語についてのサブカテゴリーは\\ :ref:`スクリプト <toc-"
"learn-scripting>`\\ セクションにあります。"

#: ../../docs/about/faq.rst:68
msgid ""
"If you are just starting out with either Godot or game development in "
"general, GDScript is the recommended language to learn and use since it is "
"native to Godot. While scripting languages tend to be less performant than "
"lower-level languages in the long run, for prototyping, developing Minimum "
"Viable Products (MVPs), and focusing on Time-To-Market (TTM), GDScript will "
"provide a fast, friendly, and capable way of developing your games."
msgstr ""
"初めてGodotを使う人や、これからゲーム開発を始める人には、Godot内蔵のGDScript"
"がおすすめです。スクリプト言語はより低水準な言語に比べて、必ずしも長期的には"
"最適ではありません。しかし試作や、実用最小限の製品(MVP)の開発、製品化への時間"
"(TTM)を重視する場合、GDScriptはゲーム開発のためのスピーディで親しみやすい、有"
"用な手段になります。"

#: ../../docs/about/faq.rst:75
msgid ""
"Note that C# support is still relatively new, and as such, you may encounter "
"some issues along the way. Our friendly and hard-working development "
"community is always ready to tackle new problems as they arise, but since "
"this is an open-source project, we recommend that you first do some due "
"diligence yourself. Searching through discussions on `open issues <https://"
"github.com/godotengine/godot/issues>`_ is a great way to start your "
"troubleshooting."
msgstr ""
"C#への対応はまだ比較的新しいため、何らかの問題が生じる可能性があります。当方"
"のフレンドリーで仕事熱心な開発コミュニティーは、新たに浮かんできた問題に挑む"
"準備は万端です。しかし、これはオープンソース・プロジェクトなので、まずはご自"
"身で解決法を探ることを推奨します。トラブルシューティングには最初に、`open "
"issues(英語) <https://github.com/godotengine/godot/issues>`_\\ 内にて交わされ"
"ているやりとりを調べてみて下さい。"

#: ../../docs/about/faq.rst:82
msgid ""
"As for new languages, support is possible via third parties using the "
"GDNative / NativeScript / PluginScript facilities. (See the question about "
"plugins below.) Work is currently underway, for example, on unofficial "
"bindings for Godot to `Python <https://github.com/touilleMan/godot-python>`_ "
"and `Nim <https://github.com/pragmagic/godot-nim>`_."
msgstr ""
"新しい言語については、GDNative/NativeScript/PluginScript機能を通じてサード"
"パーティによる対応が可能です。例えば現在、`Python <https://github.com/"
"touilleMan/godot-python>`_\\ や\\ `Nim <https://github.com/pragmagic/godot-"
"nim>`_\\ のGodot向け非公式バインディングが開発進行中です。"

#: ../../docs/about/faq.rst:88
msgid "What is GDScript and why should I use it?"
msgstr "GDScriptとは何で、それを使う必要性は？"

#: ../../docs/about/faq.rst:90
msgid ""
"GDScript is Godot's integrated scripting language. It was built from the "
"ground up to maximize Godot's potential in the least amount of code, "
"affording both novice and expert developers alike to capitalize on Godot's "
"strengths as fast as possible. If you've ever written anything in a language "
"like Python before then you'll feel right at home. For examples, history, "
"and a complete overview of the power GDScript offers you, check out the :ref:"
"`GDScript scripting guide <doc_gdscript>`."
msgstr ""
"GDScriptはGodot内蔵のスクリプト言語です。最小のコード行数でGodotの能力を最大"
"限に発揮できるよう、一から設計されています。初心者からエキスパートまで、すば"
"やくGodotの性能を引き出せるようになります。もしPythonのような言語で書いた経験"
"があれば、すぐに馴染めることでしょう。GDScriptのサンプルや歴史、その力の概要"
"を知りたい方は、:ref:`GDScriptスクリプティング・ガイド <doc_gdscript>`\\ をお"
"読み下さい。"

#: ../../docs/about/faq.rst:97
msgid ""
"There are several reasons to use GDScript--especially when you are "
"prototyping, in alpha/beta stages of your project, or are not creating the "
"next AAA title--but the most salient reason is the overall **reduction of "
"complexity.**"
msgstr ""
"GDScriptを使う理由は、――特に、試作やアルファ/ベータ版の段階にある場合や、大作"
"を作るのでない場合――いくつもあります。しかし一番の理由は、全体的に\\ **複雑さ"
"を減らせることです。**"

#: ../../docs/about/faq.rst:101
msgid ""
"The original intent of creating a tightly integrated, custom scripting "
"language for Godot was two-fold: first, it reduces the amount of time "
"necessary to get up and running with Godot, giving developers a rapid way of "
"exposing themselves to the engine with a focus on productivity; second, it "
"reduces the overall burden of maintenance, attenuates the dimensionality of "
"issues, and allows the developers of the engine to focus on squashing bugs "
"and improving features related to the engine core--rather than spending a "
"lot of time trying to get a small set of incremental features working across "
"a large set of languages."
msgstr ""
"Godotのために緊密に統合されたカスタムスクリプト言語を作る当初の目的は2つあり"
"ました:第一に、それはGodotを立ち上げて走らせるのに必要な時間を減らし、開発者"
"が生産性に焦点を当ててエンジンに自分自身をさらす迅速な方法を提供します。;第2"
"に、メンテナンスの全体的な負担を軽減し、問題の次元性を低減し、エンジンの開発"
"者が、大きな言語セット全体で動作する小さな追加機能セットを得るために多くの時"
"間を費やすのではなく、バグを取り除き、エンジンコアに関連する機能を改善するこ"
"とに集中できるようにします。"

#: ../../docs/about/faq.rst:109
msgid ""
"Since Godot is an open-source project, it was imperative from the start to "
"prioritize a more integrated and seamless experience over attracting "
"additional users by supporting more familiar programming languages--"
"especially when supporting those more familiar languages would result in a "
"worse experience. We understand if you would rather use another language in "
"Godot (see the list of supported options above). That being said, if you "
"haven't given GDScript a try, try it for **three days**. Just like Godot, "
"once you see how powerful it is and rapid your development becomes, we think "
"GDScript will grow on you."
msgstr ""
"Godotはオープンソースプロジェクトであるため、なじみのあるプログラミング言語を"
"サポートすることで、より多くのユーザーを引きつけることよりも、より統合された"
"シームレスなエクスペリエンスを優先することが最初から不可欠でした。あなたが"
"Godotで別の言語(上記のサポートされるオプションのリストを参照してください。)を"
"使用したいということは理解します。とはいえ、GDScriptをまだ試していない人"
"は、\\ **3日間**\\ 試してみてください。Godotと同じように、GDScriptがいかに強"
"力であり、開発が迅速になるかを見れば、GDScriptも成長すると思います。"

#: ../../docs/about/faq.rst:118
msgid ""
"More information about getting comfortable with GDScript or dynamically "
"typed languages can be found in the :ref:`doc_gdscript_more_efficiently` "
"tutorial."
msgstr ""
"GDScriptや他の動的言語を使いこなすための情報は、こちらのチュートリアル\\ :"
"ref:`doc_gdscript_more_efficiently`\\ にあります。"

#: ../../docs/about/faq.rst:122
msgid "What were the motivations behind creating GDScript?"
msgstr "GDScriptを作った動機はどのようなものですか？"

#: ../../docs/about/faq.rst:124
msgid ""
"The main reasons for creating a custom scripting language for Godot were:"
msgstr "Godot専用のスクリプト言語を作った主な理由は以下の通りです。"

#: ../../docs/about/faq.rst:126
msgid ""
"Poor thread support in most script VMs, and Godot uses threads (Lua, Python, "
"Squirrel, JS, AS, etc.)."
msgstr ""
"ほとんどのスクリプトVMではスレッドサポートが不十分で、Godotはスレッド（Lua、"
"Python、Squirrel、JS、ASなど）を使用します。"

#: ../../docs/about/faq.rst:128
msgid ""
"Poor class-extending support in most script VMs, and adapting to the way "
"Godot works is highly inefficient (Lua, Python, JS)."
msgstr ""
"ほとんどのスクリプトVMでのクラス拡張のサポートが不十分で、Godotの動作方法に適"
"応することは非常に非効率的です(Lua、Python、JS)。"

#: ../../docs/about/faq.rst:130
msgid ""
"Many existing languages have horrible interfaces for binding to C++, "
"resulting in large amount of code, bugs, bottlenecks, and general "
"inefficiency (Lua, Python, Squirrel, JS, etc.) We wanted to focus on a great "
"engine, not a great amount of integrations."
msgstr ""
"既存の多くの言語には、C++にバインドするためのひどいインターフェイスがあり、大"
"量のコード、バグ、ボトルネック、および一般的な非効率性 (Lua、Python、"
"Squirrel、JS など)が発生します。私たちは、多くの統合ではなく、偉大なエンジン"
"に焦点を当てたかったのです。"

#: ../../docs/about/faq.rst:133
msgid ""
"No native vector types (vector3, matrix4, etc.), resulting in highly reduced "
"performance when using custom types (Lua, Python, Squirrel, JS, AS, etc.)."
msgstr ""
"ネイティブなベクトルタイプ(vector3、matrix4など)がないため、カスタムタイプ"
"(Lua、Python、Squirrel、JS、ASなど)を使用するとパフォーマンスが大幅に低下しま"
"す。"

#: ../../docs/about/faq.rst:136
msgid ""
"Garbage collector results in stalls or unnecessarily large memory usage "
"(Lua, Python, JS, AS, etc.)."
msgstr ""
"ガベージコレクタが原因で失速したり、不必要にメモリ使用量が増えたりします"
"(Lua、Python、JS、ASなど)。"

#: ../../docs/about/faq.rst:138
msgid ""
"Difficulty to integrate with the code editor for providing code completion, "
"live editing, etc. (all of them). This is well supported by GDScript."
msgstr ""
"コード補完、ライブ編集などを提供するコードエディタとの統合が困難です。(それら"
"すべて)これはGDScriptによってサポートされています。"

#: ../../docs/about/faq.rst:142
msgid "GDScript was designed to curtail the issues above and more."
msgstr "GDScriptは以上の問題を減らすように設計されています。"

#: ../../docs/about/faq.rst:145
msgid "What type of 3D model formats does Godot support?"
msgstr "Godotはどんな3Dモデルフォーマットをサポートしていますか？"

#: ../../docs/about/faq.rst:147
msgid ""
"Godot supports Collada via the `OpenCollada <https://github.com/KhronosGroup/"
"OpenCOLLADA/wiki/OpenCOLLADA-Tools>`_ exporter (Maya, 3DSMax)."
msgstr ""
"Godotは、`OpenCollada <https://github.com/KhronosGroup/OpenCOLLADA/wiki/"
"OpenCOLLADA-Tools>`_\\ エクスポーター(Maya、3DSMax)を介してColladaをサポート"
"しています。"

#: ../../docs/about/faq.rst:149
msgid ""
"If you are using Blender, take a look at our own `Better Collada Exporter "
"<https://godotengine.org/download>`_."
msgstr ""
"もしあなたがBlenderを使っているなら、 `Better Collada Exporter <https://"
"godotengine.org/download>`_\\ をご覧ください。"

#: ../../docs/about/faq.rst:151
msgid "As of Godot 3.0, glTF is supported."
msgstr "Godot 3.0の時点で、glTFをサポートしています。"

#: ../../docs/about/faq.rst:153
msgid ""
"FBX SDK has a `restrictive license <https://www.blender.org/bf/"
"Autodesk_FBX_License.rtf>`_, that is incompatible with the `open license "
"<https://opensource.org/licenses/MIT>`_ provided by Godot. That being said, "
"FBX support could still be provided by third parties as a plugin. (See "
"Plugins question below.)"
msgstr ""
"FBX SDKには、Godotが提供する\\ `オープン ライセンス <https://opensource.org/"
"licenses/MIT>`_\\ と互換性のない\\ `制限付きライセンス <https://www.blender."
"org/bf/Autodesk_FBX_License.rtf>`_\\ があります。とは言え、FBXのサポートはプ"
"ラグインとしてサードパーティから提供される可能性あります(以下のプラグインの質"
"問を参照してください)"

#: ../../docs/about/faq.rst:159
msgid ""
"Will [insert closed SDK such as FMOD, GameWorks, etc.] be supported in Godot?"
msgstr "Godotでは[FMODやGameWorksなどクローズドSDKを挿入]がサポートされますか?"

#: ../../docs/about/faq.rst:161
msgid ""
"The aim of Godot is to create a free and open-source MIT-licensed engine "
"that is modular and extendable. There are no plans for the core engine "
"development community to support any third-party, closed-source/proprietary "
"SDKs, as integrating with these would go against Godot's ethos."
msgstr ""
"Godotの目的は、モジュール式で拡張可能な自由でオープンソースのMITライセンスエ"
"ンジンを作成することです。コアエンジン開発コミュニティは、これらとの統合が"
"Godotの精神に反するとして、サードパーティのクローズドソース/プロプライエタリ"
"SDKをサポートする計画はありません。"

#: ../../docs/about/faq.rst:166
msgid ""
"That said, because Godot is open-source and modular, nothing prevents you or "
"anyone else interested in adding those libraries as a module and shipping "
"your game with them--as either open- or closed-source."
msgstr ""
"つまり、Godot はオープンソースとモジュラーであるため、これらのライブラリをモ"
"ジュールとして追加し、オープンソースまたはクローズドソースのいずれかとして"
"ゲームを出荷することに興味を持つユーザーや他の誰かを妨げるものは何もありませ"
"ん。"

#: ../../docs/about/faq.rst:170
msgid ""
"To see how support for your SDK of choice could still be provided, look at "
"the Plugins question below."
msgstr ""
"選択したSDKのサポートがどのように提供されるのかを確認するには、以下のプラグイ"
"ンの質問を参照してください。"

#: ../../docs/about/faq.rst:173
msgid ""
"If you know of a third-party SDK that is not supported by Godot but that "
"offers free and open-source integration, consider starting the integration "
"work yourself. Godot is not owned by one person; it belongs to the "
"community, and it grows along with ambitious community contributors like you."
msgstr ""
"Godotではサポートされていないが、自由でオープン ソースの統合を提供するサード"
"パーティ製のSDKがわかっている場合は、統合作業を自分で開始することを検討してく"
"ださい。Godotは一人の人間が所有しているわけではありません。それはコミュニティ"
"に属し、あなたのような野心的なコミュニティの貢献者と一緒に成長します。"

#: ../../docs/about/faq.rst:179
msgid ""
"How should assets be created to handle multiple resolutions and aspect "
"ratios?"
msgstr ""
"複数の解像度やアスペクト比に対応するアセットを作成するにはどうすればよいです"
"か？"

#: ../../docs/about/faq.rst:181
msgid ""
"This question pops up often and it's probably thanks to the misunderstanding "
"created by Apple when they originally doubled the resolution of their "
"devices. It made people think that having the same assets in different "
"resolutions was a good idea, so many continued towards that path. That "
"originally worked to a point and only for Apple devices, but then several "
"Android and Apple devices with different resolutions and aspect ratios were "
"created, with a very wide range of sizes and DPIs."
msgstr ""
"この質問は頻繁に出てきますが、これはおそらくAppleが当初デバイスの解像度を2倍"
"にしたときに起こした誤解のせいでしょう。同じアセットを異なる解像度で持つこと"
"は良い考えだと人々に思わせ、多くの人がその道に向かって進み続けました。当初は"
"Appleのデバイスでしか使えませんでしたが、その後、解像度とアスペクト比の異なる"
"複数のAndroidとAppleのデバイスが作られ、サイズとDPIの幅が非常に広くなりまし"
"た。"

#: ../../docs/about/faq.rst:189
msgid ""
"The most common and proper way to achieve this is to, instead, use a single "
"base resolution for the game and only handle different screen aspect ratios. "
"This is mostly needed for 2D, as in 3D it's just a matter of Camera XFov or "
"YFov."
msgstr ""
"これを実現する最も一般的で適切な方法は、代わりに、ゲームに単一の基本解像度を"
"使用し、異なる画面アスペクト比のみを処理することです。これは、3Dではカメラ"
"XFovまたはYFovの問題のように、主に2Dのために必要です。"

#: ../../docs/about/faq.rst:193
msgid ""
"Choose a single base resolution for your game. Even if there are devices "
"that go up to 2K and devices that go down to 400p, regular hardware scaling "
"in your device will take care of this at little or no performance cost. Most "
"common choices are either near 1080p (1920x1080) or 720p (1280x720). Keep in "
"mind the higher the resolution, the larger your assets, the more memory they "
"will take and the longer the time it will take for loading."
msgstr ""
"ゲームの基本解像度を1つ選択します。2Kまでのデバイスや400pまでのデバイスがあっ"
"ても、デバイスの通常のハードウェアスケーリングでは、パフォーマンスコストをほ"
"とんどまたはまったくかけずに対応できます。最も一般的な選択肢は、約"
"1080p(1920x1080)または720p(1280x720)です。解像度が高いほどアセットが大きくな"
"り、メモリの使用量が多くなり、ロードに時間がかかることに注意してください。"

#: ../../docs/about/faq.rst:201
msgid ""
"Use the stretch options in Godot; 2D stretching while keeping aspect ratios "
"works best. Check the :ref:`doc_multiple_resolutions` tutorial on how to "
"achieve this."
msgstr ""
"Godotのストレッチオプションの使用します。アスペクト比を維持したまま2Dストレッ"
"チを行うと、最適な結果が得られます。この方法については、チュートリアル\\ :"
"ref:`doc_multiple_resolutions`\\ を参照してください。"

#: ../../docs/about/faq.rst:205
msgid ""
"Determine a minimum resolution and then decide if you want your game to "
"stretch vertically or horizontally for different aspect ratios, or if there "
"is one aspect ratio and you want black bars to appear instead. This is also "
"explained in :ref:`doc_multiple_resolutions`."
msgstr ""
"最小解像度を決定し、ゲームを縦横比ごとに垂直または水平に伸ばすかどうか、また"
"は縦横比が1つあって黒いバーを表示するかどうかを決定します。これについては、:"
"ref:`doc_multiple_resolutions`\\ でも説明されています。"

#: ../../docs/about/faq.rst:210
msgid ""
"For user interfaces, use the :ref:`anchoring <doc_size_and_anchors>` to "
"determine where controls should stay and move. If UIs are more complex, "
"consider learning about Containers."
msgstr ""
"ユーザインタフェースでは、:ref:`anchoring <doc_size_and_anchors>`\\ を使用し"
"て、コントロールの位置と移動先を指定します。UIがより複雑な場合は、コンテナに"
"ついて学ぶことを検討してください。"

#: ../../docs/about/faq.rst:214
msgid "And that's it! Your game should work in multiple resolutions."
msgstr "これで終わりです！あなたのゲームは複数の解像度で動くことでしょう。"

#: ../../docs/about/faq.rst:216
msgid ""
"If there is a desire to make your game also work on ancient devices with "
"tiny screens (fewer than 300 pixels in width), you can use the export option "
"to shrink images, and set that build to be used for certain screen sizes in "
"the App Store or Google Play."
msgstr ""
"小さな画面(幅が300ピクセル未満)の古いデバイスでもゲームを動作させたい場合は、"
"エクスポートオプションを使用して画像を縮小し、そのビルドをAppStoreまたは"
"GooglePlayの特定の画面サイズに使用するように設定できます。"

#: ../../docs/about/faq.rst:222
msgid "How can I extend Godot?"
msgstr "Godotを拡張するにはどうすればよいですか?"

#: ../../docs/about/faq.rst:224
msgid ""
"For extending Godot, like creating Godot Editor plugins or adding support "
"for additional languages, take a look at :ref:`EditorPlugins "
"<doc_making_plugins>` and tool scripts."
msgstr ""
"Godotエディタプラグインの作成や追加言語のサポートの追加など、Godotを拡張する"
"には、:ref:`エディタプラグイン <doc_making_plugins>`\\ およびツールスクリプト"
"を参照してください。"

#: ../../docs/about/faq.rst:228
msgid "Also, see the official blog posts on these topics:"
msgstr "また、これらのトピックに関する公式ブログの投稿を参照してください:"

#: ../../docs/about/faq.rst:230
msgid ""
"`A look at the GDNative architecture <https://godotengine.org/article/look-"
"gdnative-architecture>`_"
msgstr ""
"`GDNativeアーキテクチャを参照 <https://godotengine.org/article/look-gdnative-"
"architecture>`_"

#: ../../docs/about/faq.rst:231
msgid "`GDNative is here! <https://godotengine.org/article/dlscript-here>`_"
msgstr "`GDNativeはこちら! <https://godotengine.org/article/dlscript-here>`_"

#: ../../docs/about/faq.rst:233
msgid ""
"You can also take a look at the GDScript implementation, the Godot modules, "
"as well as the `unofficial Python support <https://github.com/touilleMan/"
"godot-python>`_ for Godot. This would be a good starting point to see how "
"another third-party library integrates with Godot."
msgstr ""
"GDScriptの実装、Godotモジュール、およびGodotの `非公式Pythonサポート<https://"
"github.com/touilleMan/godot-python>`_\\ もご覧ください。これは、別のサード"
"パーティライブラリがどのようにGodotに統合されるかを知る良い出発点です。"

#: ../../docs/about/faq.rst:239
msgid "I would like to contribute! How can I get started?"
msgstr "Godotにコントリビュートしたいのですが、どうすればよいですか？"

#: ../../docs/about/faq.rst:241
msgid ""
"Awesome! As an open-source project, Godot thrives off of the innovation and "
"ambition of developers like you."
msgstr ""
"素晴らしい！オープンソースプロジェクトとして、Godotは技術革新と、あなたのよう"
"な開発者の野心によって支えられています。"

#: ../../docs/about/faq.rst:244
msgid ""
"The first place to get started is in the `issues <https://github.com/"
"godotengine/godot/issues>`_. Find an issue that resonates with you, then "
"proceed to the `How to Contribute <https://github.com/godotengine/godot/blob/"
"master/CONTRIBUTING.md#contributing-pull-requests>`_ guide to learn how to "
"fork, modify, and submit a Pull Request (PR) with your changes."
msgstr ""
"まずはじめに見るべきは`issues <https://github.com/godotengine/godot/issues>`"
"です。あなたの共感を呼ぶIssueを見つけ、`How to Contribute <https://github."
"com/godotengine/godot/blob/master/CONTRIBUTING.md#contributing-pull-"
"requests>`でforkや編集の方法を学び、そしてプルリクエストを提出してください。"

#: ../../docs/about/faq.rst:249
msgid "I have a great idea for Godot. How can I share it?"
msgstr "Godotについていいアイデアがあるのですが、どこで共有すればいいですか？"

#: ../../docs/about/faq.rst:251
msgid ""
"It might be tempting to want to bring ideas to Godot, like ones that result "
"in massive core changes, some sort of mimicry of what another game engine "
"does, or alternative workflows that you'd like built into the editor. These "
"are great and we are thankful to have such motivated people want to "
"contribute, but Godot's focus is and always will be the core functionality "
"as outlined in the `Roadmap <https://github.com/godotengine/godot-roadmap/"
"blob/master/ROADMAP.md>`_, `squashing bugs and addressing issues <https://"
"github.com/godotengine/godot/issues>`_, and conversations between Godot "
"community members."
msgstr ""
"Godotにアイデアをもたらしたいと思うかもしれません。たとえば、大規模なコアの変"
"更、他のゲームエンジンの動作の模倣、またはエディターに組み込みたい代替ワーク"
"フローをもたらすようなものです。これらは素晴らしく、そのようなやる気のある"
"人々が貢献したいと思っていることに感謝していますが、Godotの焦点は「ロードマッ"
"プ<https://github.com/godotengine/godot-roadmap/blob/ master / ROADMAP.md> "
"`_、`バグをつぶして問題に対処する<https://github.com/godotengine/godot/"
"issues> `_、およびGodotコミュニティメンバー間の会話です。"

#: ../../docs/about/faq.rst:260
msgid ""
"Most developers in the Godot community will be more interested to learn "
"about things like:"
msgstr ""
"Godotコミュニティのほとんどの開発者は以下のようなことを知りたいと思っているで"
"しょう:"

#: ../../docs/about/faq.rst:263
msgid ""
"Your experience using the software and the problems you have (we care about "
"this much more than ideas on how to improve it)."
msgstr ""
"あなたがソフトウェアを使った経験とあなたが抱えている問題(私たちはそれをどう改"
"善するかについての考えよりももっとずっと気にかけています)。"

#: ../../docs/about/faq.rst:265
msgid ""
"The features you would like to see implemented because you need them for "
"your project."
msgstr "あなたのプロジェクトで必要としているため実装してほしい機能。"

#: ../../docs/about/faq.rst:267
msgid ""
"The concepts that were difficult to understand while learning the software."
msgstr "使い方を学ぶにあたって理解しにくかった概念。"

#: ../../docs/about/faq.rst:268
msgid "The parts of your workflow you would like to see optimized."
msgstr "あなたの作業フローにおいて、最適化したい部分。"

#: ../../docs/about/faq.rst:269
msgid ""
"Parts where you missed clear tutorials or where the documentation wasn't "
"clear."
msgstr ""
"明確なチュートリアルを見逃した部分、またはドキュメントが明確ではなかった部"
"分。"

#: ../../docs/about/faq.rst:271
msgid ""
"Please don't feel like your ideas for Godot are unwelcome. Instead, try to "
"reformulate them as a problem first, so developers and the community have a "
"functional foundation to ground your ideas on."
msgstr ""
"Godotに対するあなたのアイデアが歓迎されないとは思わないでください。代わりに、"
"それらを最初に問題として再定式化してみてください。そうすれば、開発者とコミュ"
"ニティは、あなたのアイデアを土台にするための機能的基盤を持ちます。"

#: ../../docs/about/faq.rst:275
msgid ""
"A good way to approach sharing your ideas and problems with the community is "
"as a set of user stories. Explain what you are trying to do, what behavior "
"you expect to happen, and then what behavior actually happened. Framing "
"problems and ideas this way will help the whole community stay focused on "
"improving developer experiences as a whole."
msgstr ""
"コミュニティでアイデアや問題を共有するための良い方法は、ユーザーのストーリー"
"として共有することです。あなたが 何をしようとしているのか、どのような行動が起"
"こると予想されるのか、そして実際にどのような行動が起こったのかを説明してくだ"
"さい。 この方法で問題やアイデアを立案すると、コミュニティ全体が開発者エクスペ"
"リエンス全体の改善に集中できるようになります。"

#: ../../docs/about/faq.rst:281
msgid ""
"Bonus points for bringing screenshots, concrete numbers, test cases, or "
"example projects (if applicable)."
msgstr ""
"スクリーンショット、具体的な数字、テストケース、またはサンプルプロジェクト"
"（該当する場合）をもたらすボーナスポイント。"

#: ../../docs/about/faq.rst:286
msgid "Why does Godot not use STL (Standard Template Library)"
msgstr "なぜGodotはSTL (Standard Template Library)を使わないのですか"

#: ../../docs/about/faq.rst:288
msgid ""
"Like many other libraries (Qt as an example), Godot does not make use of "
"STL. We believe STL is a great general purpose library, but we had special "
"requirements for Godot."
msgstr ""
"他のライブラリのように(例えばQt)、GodotはSTLを使いません。私たちはSTLが素晴ら"
"しい標準的な目的のためのライブラリだと信じています、しかし、私たちはGodotのた"
"めに特別に必要とはしていません。"

#: ../../docs/about/faq.rst:292
msgid ""
"STL templates create very large symbols, which results in huge debug "
"binaries. We use few templates with very short names instead."
msgstr ""
"STLテンプレートは非常に大きなシンボルを作ります、そして巨大のデバッグバイナ"
"リーを結果として生じます。私たちは、代わりにいくつかのテンプレートをとても短"
"い名前と共に使います。"

#: ../../docs/about/faq.rst:293
msgid ""
"Most of our containers cater to special needs, like Vector, which uses copy "
"on write and we use to pass data around, or the RID system, which requires "
"O(1) access time for performance. Likewise, our hash map implementations are "
"designed to integrate seamlessly with internal engine types."
msgstr ""
"私たちのコンテナのほとんどは、コピーオンライトを使用してデータの受け渡しに使"
"用するベクターやパフォーマンスのためにO(1)アクセス時間を必要とするRIDシステム"
"など、特別なニーズに対応しています。同様に、ハッシュマップの実装は、内部エン"
"ジンタイプとシームレスに統合するように設計されています。"

#: ../../docs/about/faq.rst:294
msgid ""
"Our containers have memory tracking built-in, which helps better track "
"memory usage."
msgstr ""
"コンテナにはメモリトラッキングが組み込まれているため、メモリ使用量を追跡でき"
"ます。"

#: ../../docs/about/faq.rst:295
msgid ""
"For large arrays, we use pooled memory, which can be mapped to either a "
"preallocated buffer or virtual memory."
msgstr ""
"大規模な配列の場合、プールメモリを使用します。これは、事前に割り当てられた"
"バッファまたは仮想メモリのいずれかにマップできます。"

#: ../../docs/about/faq.rst:296
msgid ""
"We use our custom String type, as the one provided by STL is too basic and "
"lacks proper internationalization support."
msgstr ""
"STLが提供するものは基本的で適切な国際化サポートが不足しているため、私たちはカ"
"スタムString型を使用します。"

#: ../../docs/about/faq.rst:299
msgid "Why does Godot not use exceptions?"
msgstr "なぜGodotは例外を使わないのですか？"

#: ../../docs/about/faq.rst:301
msgid ""
"We believe games should not crash, no matter what. If an unexpected "
"situation happens, Godot will print an error (which can be traced even to "
"script), but then it will try to recover as gracefully as possible and keep "
"going."
msgstr ""
"私たちは、ゲームが何であれ、クラッシュすべきではないと考えています。予期しな"
"い状況が発生した場合、Godotはエラーを出力します（スクリプトまでトレース可能）"
"が、その後、可能な限り正常に回復し、動き続けます。"

#: ../../docs/about/faq.rst:306
msgid ""
"Additionally, exceptions significantly increase binary size for the "
"executable."
msgstr "さらに、例外により、実行ファイルのバイナリサイズが大幅に増加します。"

#: ../../docs/about/faq.rst:310
msgid "Why does Godot not enforce RTTI?"
msgstr "GodotがRTTIを強制しないのはなぜですか？"

#: ../../docs/about/faq.rst:312
msgid ""
"Godot provides its own type-casting system, which can optionally use RTTI "
"internally. Disabling RTTI in Godot means considerably smaller binary sizes "
"can be achieved, at a little performance cost."
msgstr ""
"Godotには独自の型キャストシステムがあり、オプションで内部でRTTIを使用できま"
"す。 GodotでRTTIを無効にすると、わずかなパフォーマンスコストで、かなり小さい"
"バイナリサイズを実現できます。"

#: ../../docs/about/faq.rst:317
msgid "Why does Godot not force users to implement DoD (Data oriented Design)?"
msgstr ""
"GodotがユーザーにDoD（データ指向設計）の実装を強制しないのはなぜですか？"

#: ../../docs/about/faq.rst:319
msgid ""
"While Godot internally for a lot of the heavy performance tasks attempts to "
"use cache coherency as best as possible, we believe most users don't really "
"need to be forced to use DoD practices."
msgstr ""
"多くの重いパフォーマンスタスクのためにGodotが内部的に可能な限り最高のキャッ"
"シュコヒーレンシーを使用しようとしていますが、ほとんどのユーザーはDoDプラク"
"ティスを強制する必要はほとんどないと考えています。"

#: ../../docs/about/faq.rst:323
msgid ""
"DoD is mostly a cache coherency optimization that can only gain you "
"significant performance improvements when dealing with dozens of thousands "
"of objects (which are processed every frame with little modification). As "
"in, if you are moving a few hundred sprites or enemies per frame, DoD won't "
"help you, and you should consider a different approach to optimization."
msgstr ""
"DoDは主にキャッシュコヒーレンシ最適化であり、何十万ものオブジェクト（ほとんど"
"変更なしでフレームごとに処理される）を処理する場合にのみ、大幅なパフォーマン"
"スの向上が得られます。たとえば、フレームごとに数百のスプライトまたは敵を移動"
"する場合、DoDは役に立ちません。最適化の別のアプローチを検討する必要がありま"
"す。"

#: ../../docs/about/faq.rst:330
msgid ""
"The vast majority of games do not need this and Godot provides handy helpers "
"to do the job for most cases when you do."
msgstr ""
"ゲームの大部分はこれを必要としません、そして、あなたがそうするとき、Dodotはほ"
"とんどの場合仕事をするために便利なヘルパーを提供します。"

#: ../../docs/about/faq.rst:333
msgid ""
"If a game that really needs to process such large amount of objects is "
"needed, our recommendation is to use C++ and GDNative for the high "
"performance parts and GDScript (or C#) for the rest of the game."
msgstr ""
"このような大量のオブジェクトを本当に処理する必要があるゲームが必要な場合、推"
"奨されるのは、高性能部分にはC ++とGDNativeを、残りのゲームにはGDScript（また"
"はC＃）を使用することです。"

#: ../../docs/about/faq.rst:338
msgid "How can I support Godot development or contribute?"
msgstr "Godotの開発をサポートしたり、貢献したりするにはどうすればいいですか?"

#: ../../docs/about/faq.rst:340
msgid "See :ref:`doc_ways_to_contribute`."
msgstr ":ref:`doc_ways_to_contribute`\\ をご覧下さい。"

#: ../../docs/about/faq.rst:343
msgid "Who is working on Godot? How can I contact you?"
msgstr "誰がGodotで働いていますか。どうやって連絡すればいいですか?"

#: ../../docs/about/faq.rst:345
msgid ""
"See the corresponding page on the `Godot website <https://godotengine.org/"
"contact>`_."
msgstr ""
"`Godot webサイト <https://godotengine.org/contact>`_\\ の該当ページを見てくだ"
"さい。"
