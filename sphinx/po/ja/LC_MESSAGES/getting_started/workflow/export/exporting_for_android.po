# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-30 19:14+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:4
msgid "Exporting for Android"
msgstr "Androidへのエクスポート"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:6
msgid ""
"Exporting for Android has fewer requirements than compiling Godot for it. "
"The following steps detail what is needed to setup the SDK and the engine."
msgstr ""
"Android向けのエクスポートは、Godotをコンパイルするよりも要件が少ないです。次"
"の手順では、SDKとエンジンのセットアップに必要なものについて詳しく説明します。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:10
msgid "Download the Android SDK"
msgstr "Android SDKをダウンロード"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:12
msgid ""
"Download and install the Android SDK from `developer.android.com <https://"
"developer.android.com/studio/>`__."
msgstr ""
"`developer.android.com <https://developer.android.com/studio/>`__ から"
"Android SDKをダウンロードしてインストールします。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:15
msgid ""
"If you install Android Studio, you need to run it once to complete the SDK "
"setup."
msgstr ""
"Android Studioをインストールする場合、SDKのセットアップを完了するために1回実"
"行する必要があります。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:18
#, fuzzy
msgid "Install OpenJDK 8"
msgstr "JDKのインストール"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:20
msgid ""
"Download and install  `OpenJDK 8 <https://adoptopenjdk.net/index.html?"
"variant=openjdk8&jvmVariant=hotspot>`__, newer versions do not work."
msgstr ""

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:24
msgid "Create a debug.keystore"
msgstr "デバッグキーストアを作成する"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:26
msgid ""
"Android needs a debug keystore file to install to devices and distribute non-"
"release APKs. If you have used the SDK before and have built projects, ant "
"or eclipse probably generated one for you (on Linux and macOS, you can find "
"it in the ``~/.android`` directory)."
msgstr ""
"Androidでは、デバイスにインストールし、リリースされていないAPKを配布するため"
"のデバッグキーストアファイルが必要です。以前にSDKを使用してプロジェクトをビル"
"ドしたことがある場合は、antまたはeclipseによってプロジェクトが生成される可能"
"性があります(LinuxとmacOSの場合、\\ ``~/.android``\\ ディレクトリに見つけるこ"
"とができます)。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:31
msgid ""
"If you can't find it or need to generate one, the keytool command from the "
"JDK can be used for this purpose::"
msgstr ""
"見つからない場合や生成する必要がある場合は、JDKのkeytoolコマンドをこの目的に"
"使用できます:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:36
msgid ""
"This will create a ``debug.keystore`` file in your current directory. You "
"should move it to a memorable location such as ``%USERPROFILE%\\.android"
"\\``, because you will need its location in a later step. For more "
"information on ``keytool`` usage, see `this Q&A article <https://godotengine."
"org/qa/21349/jdk-android-file-missing>`__."
msgstr ""
"これにより、現在のディレクトリに ``debug.keystore`` ファイルが作成されます。"
"後の手順で場所が必要になるため、\\ ``%USERPROFILE%\\.android\\`` などの記憶に"
"残る場所に移動する必要があります。\\ ``keytool`` の使用方法の詳細について"
"は、\\ `このQ&A記事 <https://godotengine.org/qa/21349/jdk-android-file-"
"missing>`__ を参照してください。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:39
msgid "Make sure you have adb"
msgstr "アンドロイドデバッグブリッジ(adb)を持っていることを確認します"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:41
msgid ""
"Android Debug Bridge (``adb``) is the command line tool used to communicate "
"with Android devices. It's installed with the SDK, but you may need to "
"install one (any) of the Android API levels for it to be installed in the "
"SDK directory."
msgstr ""
"Androidデバッグブリッジ(``adb``) は、Androidデバイスとの通信に使用されるコマ"
"ンドラインツールです。 SDKと共にインストールされますが、SDKディレクトリにイン"
"ストールするためにAndroid APIレベルのいずれか1つ(任意)をインストールする必要"
"があります。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:46
msgid "Setting it up in Godot"
msgstr "Godotで設定する"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:48
#, fuzzy
msgid ""
"Enter the Editor Settings screen. This screen contains the editor settings "
"for the user account in the computer (it's independent of the project)."
msgstr ""
"[エディタ設定]画面に入力します。この画面には、コンピュータのユーザー アカウン"
"トのエディタ設定が含まれます (プロジェクトから独立しています)。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:54
msgid "Scroll down to the section where the Android settings are located:"
msgstr "Androidの設定が配置されているセクションまで下にスクロールします:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:58
msgid "In that screen, the path to 3 files needs to be set:"
msgstr "この画面では、3つのファイルへのパスを設定する必要があります:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:60
msgid ""
"The ``adb`` executable (``adb.exe`` on Windows) - It can usually be found at "
"``%LOCALAPPDATA%\\Android\\Sdk\\platform-tools\\adb.exe``."
msgstr ""
"``adb`` 実行可能ファイル(Windowsでは ``adb.exe``) - 通常は ``%LOCALAPPDATA%"
"\\Android\\Sdk\\platform-tools\\adb.exe`` にあります。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:63
#, fuzzy
msgid ""
"The ``jarsigner`` executable (from JDK 6 or 8) - On Windows, OpenJDK "
"installs to a directory like ``%PROGRAMFILES%\\AdoptOpenJDK\\jdk-8.0.252.09-"
"hotspot\\bin``. On Linux, it typically installs to a directory like ``/usr/"
"bin/jarsigner``. The exact path may vary depending on the OpenJDK update "
"you've installed and your machine's operating system."
msgstr ""
"``jarsigner`` 実行可能ファイル(JDK 6または8から) - Windowsでは、OpenJDKは ``"
"%PROGRAMFILES%\\ojdkbuild\\java-1.8.0-openjdk-1.8.0.232-2\\bin`` のようなディ"
"レクトリにインストールされます。正確なパスは、インストールしたOpenJDKアップ"
"デートによって異なる場合があります。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:66
msgid ""
"The debug ``.keystore`` file - It can be found in the folder where you put "
"the ``debug.keystore`` file you created above."
msgstr ""
"デバック ``.keystore``ファイル - 上記で作成した ``debug.keystore`` ファイルを"
"置いたフォルダにあります。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:69
msgid "Once that is configured, everything is ready to export to Android!"
msgstr "設定が完了すれば、Androidにエクスポートできるようになります!"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:72
msgid "Providing launcher icons"
msgstr "ランチャーアイコンの提供"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:74
msgid ""
"Launcher icons are used by Android launcher apps to represent your "
"application to users. Godot only requires high-resolution icons (for "
"``xxxhdpi`` density screens) and will automatically generate lower-"
"resolution variants."
msgstr ""
"ランチャーアイコンは、Androidランチャーアプリでユーザーにアプリケーションを表"
"すために使用されます。 Godotは高解像度アイコン(``xxxhdpi`` 密度画面用)のみを"
"必要とし、低解像度のバリアントを自動的に生成します。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:76
msgid "There are two types of icons required by Godot:"
msgstr "Godotに必要なアイコンには2つのタイプがあります:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:78
#, fuzzy
msgid ""
"**Main Icon:** The \"classic\" icon. This will be used on all Android "
"versions up to Android 8 (Oreo), exclusive. Must be at least 192×192 px."
msgstr ""
"**Main Icon**: 『クラシック版』のアイコン。これはAndroid 8 (Oreo) 未満の全"
"Androidバージョンにて使用されます。最低でも 192x192 ピクセルが必要。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:79
msgid ""
"**Adaptive Icons:** Starting from Android 8 (inclusive), `Adaptive Icons "
"<https://developer.android.com/guide/practices/ui_guidelines/"
"icon_design_adaptive>`_ were introduced. Applications will need to include "
"separate background and foreground icons to have a native look. The user's "
"launcher application will control the icon's animation and masking. Must be "
"at least 432×432 px."
msgstr ""
"**Adaptive Icons**: Android 8 からは、\\ `アダプティブ アイコン <https://"
"developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive>`_"
"\\ が導入されています。ネイティブの見た目にするには、アプリケーションはアイコ"
"ンを前面と背景に分けて含める必要があります。アイコンのアニメーションとマスキ"
"ングは、ランチャーによってコントロールされます。最低でも 432x432 ピクセルが必"
"要。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:81
msgid ""
"It's important to adhere to some rules when designing adaptive icons. "
"`Google Design has provided a nice article <https://medium.com/google-design/"
"designing-adaptive-icons-515af294c783>`_ that helps to understand those "
"rules and some of the capabilities of adaptive icons."
msgstr ""
"アダプティブ アイコンをデザインする際は、いくつかのルールに従うことが重要で"
"す。Google Designが、それらのルールとアダプティブ アイコンの機能について解説"
"する\\ `すばらしい記事を公開 <https://medium.com/google-design/designing-"
"adaptive-icons-515af294c783>`_ (英語)しています。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:83
#, fuzzy
msgid ""
"The most important adaptive icon design rule is to have your icon critical "
"elements inside the safe zone: a centered circle with a diameter of 66dp "
"(264 pixels on ``xxxhdpi``) to avoid being clipped by the launcher."
msgstr ""
"アダプティブ アイコンでの一番重要なデザインルールは、ランチャーで切り取られな"
"いようにするため、アイコンの重要な要素をセーフゾーンの内側に配置することで"
"す。セーフゾーンは中心から半径 66dp (``xxxhdpi``\\ で264ピクセル) の円形で"
"す。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:85
msgid ""
"If you don't provide some of the requested icons, Godot will replace them "
"using a fallback chain, trying the next in line when the current one fails:"
msgstr ""
"もし要求されるアイコンを指定しなかった場合、Godotは失敗するたびにフォールバッ"
"ク チェーンから次のものを試し、置き換えます:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:87
msgid ""
"**Main Icon:** Provided main icon -> Project icon -> Default Godot main icon."
msgstr ""
"**Main Icon:** 指定されたメイン アイコン -> プロジェクト アイコン -> デフォル"
"トのGodotメインアイコン。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:88
msgid ""
"**Adaptive Icon Foreground:** Provided foreground icon -> Provided main icon "
"-> Project icon -> Default Godot foreground icon."
msgstr ""
"**Adaptive Icon Foreground:** 指定された前面アイコン -> 指定されたメイン アイ"
"コン -> プロジェクト アイコン -> デフォルトのGodot前面アイコン。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:89
msgid ""
"**Adaptive Icon Background:** Provided background icon -> Default Godot "
"background icon."
msgstr ""
"**Adaptive Icon Background:** 指定された背景アイコン -> デフォルトのGodot背景"
"アイコン。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:91
#, fuzzy
msgid ""
"It's highly recommended to provide all requested icons, and at least with "
"the specified resolutions. Only this way your application will look great on "
"all Android devices and versions."
msgstr ""
"要求されたアイコンを、解像度の基準を満たした上で、すべて用意することを強く推"
"奨します。それがAndroidの全デバイスおよび全バージョンで、あなたのアプリケー"
"ションが良く見えるようにする唯一の方法です。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:94
msgid "Exporting for Google Play Store"
msgstr "Google Playストア用にエクスポート"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:96
msgid ""
"Uploading an APK to Google's Play Store requires you to sign using a non-"
"debug keystore file; such file can be generated like this:"
msgstr ""
"APKをGoogleのPlayストアにアップロードするには、デバッグ以外のキーストアファイ"
"ルを使用して署名する必要があります。このようなファイルは次のように生成できま"
"す。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:103
msgid ""
"This keystore and key are used to verify your developer identity, remember "
"the password and keep it in a safe place! Use Google's Android Developer "
"guides to learn more about `APK signing <https://developer.android.com/"
"studio/publish/app-signing>`__."
msgstr ""
"このキーストアとキーは、開発者の身元を確認し、パスワードを記憶し、安全な場所"
"に保管するために使用されます。GoogleのAndroidデベロッパー ガイドを使用し"
"て、\\ `APK 署名 <https://developer.android.com/studio/publish/app-"
"signing>`_ の詳細をご覧ください。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:106
msgid "Now fill in the following forms in your Android Export Presets:"
msgstr "次に、Android エクスポートプリセットで次のフォームに入力します:"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:110
msgid "**Release:** Enter the path to the keystore file you just generated."
msgstr "**Release:** 生成したばかりのキーストアファイルへのパスを入力します。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:111
msgid "**Release User:** Replace with the key alias."
msgstr "**Release User:** キーエイリアスで置き換えます。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:112
msgid ""
"**Release Password:** Key password. Note that the keystore password and the "
"key password currently have to be the same."
msgstr ""
"**Release Password:** キーパスワード。現在、キーストアのパスワードとキーのパ"
"スワードは同じでなければならないことに注意してください。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:114
msgid ""
"**Your export_presets.cfg file now contains sensitive information.** If you "
"use a version control system, you should remove it from public repositories "
"and add it to your ``.gitignore`` file or equivalent."
msgstr ""
"**export_presets.cfgファイルには機密情報が含まれるようになりました。** バー"
"ジョン管理システムを使用する場合は、パブリックリポジトリから削除し、 ``."
"gitignore`` ファイルまたは同等のファイルに追加する必要があります。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:118
msgid ""
"Don't forget to uncheck the **Export With Debug** checkbox while choosing "
"the APK's name."
msgstr ""
"APKの名前を選択する際は、[** Export with Debug **]チェックボックスをオフにす"
"ることを忘れないでください。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:123
msgid "Optimizing the APK size"
msgstr "APKサイズの最適化"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:125
msgid ""
"By default, the APK will contain native libraries for both ARMv7 and ARMv8 "
"architectures. This increases its size significantly. To create a smaller "
"APK, uncheck either **Armeabi-v 7a** or **Arm 64 -v 8a** in your project's "
"Android export preset. This will create an APK that only contains a library "
"for a single architecture. Note that applications targeting ARMv7 can also "
"run on ARMv8 devices, but the opposite is not true."
msgstr ""
"デフォルトでは、APKにはARMv7アーキテクチャとARMv8アーキテクチャの両方のネイ"
"ティブライブラリが含まれます。これにより、サイズが大幅に増加します。より小さ"
"なAPKを作成するには、プロジェクトのAndroidエクスポートプリセットで **Armeabi-"
"v 7a** または **Arm 64 -v 8a** のチェックを外します。これにより、単一のアーキ"
"テクチャのライブラリのみを含むAPKが作成されます。 ARMv7をターゲットとするアプ"
"リケーションはARMv8デバイスでも実行できますが、その逆は当てはまりません。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:132
msgid ""
"Since August 2019, Google Play requires all applications to be available in "
"64-bit form. This means you cannot upload an APK that contains *just* an "
"ARMv7 library. To solve this, you can upload several APKs to Google Play "
"using its `Multiple APK support <https://developer.android.com/google/play/"
"publishing/multiple-apks>`__. Each APK should target a single architecture; "
"creating an APK for ARMv7 and ARMv8 is usually sufficient to cover most "
"devices in use today."
msgstr ""
"2019年8月以降、Google Playではすべてのアプリケーションを64ビット形式で利用可"
"能である必要があります。これは、 ARMV7ライブラリ\\ *のみ\\* を含むAPKはアップ"
"ロードできないことを意味します。これを解決するには、\\ `Multiple APK support "
"<https://developer.android.com/google/play/publishing/multiple-apks>`_ を使用"
"して、いくつかのAPKをGoogle Playにアップロードできます。各APKは単一のアーキテ"
"クチャをターゲットにする必要があります。通常、ARMv7およびARMv8用のAPKを作成す"
"るだけで、現在使用されているほとんどのデバイスをカバーできます。"

#: ../../docs/getting_started/workflow/export/exporting_for_android.rst:139
msgid ""
"You can optimize the size further by compiling an Android export template "
"with only the features you need. See :ref:`doc_optimizing_for_size` for more "
"information."
msgstr ""
"必要な機能のみを使用してAndroidエクスポートテンプレートをコンパイルすることに"
"より、サイズをさらに最適化できます。詳細については、\\ :ref:"
"`doc_optimizing_for_size` を参照してください。"
