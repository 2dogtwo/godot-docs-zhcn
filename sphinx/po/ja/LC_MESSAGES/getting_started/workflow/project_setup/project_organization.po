# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-20 16:21+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:4
msgid "Project organization"
msgstr "プロジェクトの構成"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:7
msgid "Introduction"
msgstr "はじめに"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:9
msgid ""
"Since Godot has no restrictions on project structure or filesystem usage, "
"organizing files when learning the engine can seem challenging. This "
"tutorial suggests a workflow which should be a good starting point. We will "
"also cover using version control with Godot."
msgstr ""
"Godotにはプロジェクト構造やファイルシステムの使用方法に制限がないため、エンジ"
"ンを学習する際にファイルを整理することが難しいようです。このチュートリアルで"
"は、出発点として適切なワークフローを提案します。また、Godotでのバージョン管理"
"の使用についても説明します。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:15
msgid "Organization"
msgstr "構成"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:17
msgid ""
"Godot is scene-based in nature, and uses the filesystem as-is, without "
"metadata or an asset database."
msgstr ""
"Godotは本質的にシーンベースであり、メタデータやアセットデータベースなしで、"
"ファイルシステムをそのまま使用します。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:20
msgid ""
"Unlike other engines, many resources are contained within the scene itself, "
"so the amount of files in the filesystem is considerably lower."
msgstr ""
"他のエンジンとは異なり、多くのリソースはシーン自体に含まれているため、ファイ"
"ルシステム内のファイルの量はかなり少なくなります。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:23
msgid ""
"Considering that, the most common approach is to group assets as close to "
"scenes as possible; when a project grows, it makes it more maintainable."
msgstr ""
"それを考慮すると、最も一般的なアプローチは、可能な限りシーンに近いアセットを"
"グループ化することです。そうしておけば、プロジェクトが大きくなった時の保守性"
"が高まります。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:27
msgid ""
"As an example, one can usually place into a single folder their basic "
"assets, such as sprite images, 3D model meshes, materials, and music, etc. "
"They can then use a separate folder to store built levels that use them."
msgstr ""
"例として、通常は、スプライト画像、3Dモデルメッシュ、マテリアル、音楽などの基"
"本的なアセットを単一のフォルダに配置できます。その後、別のフォルダを使用し"
"て、それらを使用してビルドされたレベルを格納することもできます。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:48
msgid "Importing"
msgstr "インポート"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:50
msgid ""
"Godot versions prior to 3.0 did the import process from files outside the "
"project. While this can be useful in large projects, it resulted in an "
"organization hassle for most developers."
msgstr ""
"バージョン3.0以前のGodotは、プロジェクト外部のファイルからインポートプロセス"
"を実行しました。これは大規模なプロジェクトでは便利ですが、ほとんどの開発者に"
"とって構成に手間がかかります。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:54
msgid ""
"Because of this, assets are now transparently imported from within the "
"project folder."
msgstr ""
"このため、アセットはプロジェクトフォルダ内から透過的にインポートされるように"
"なりました。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:58
msgid "Ignoring specific folders"
msgstr "特定のフォルダを無視する"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:60
msgid ""
"To prevent Godot from importing files contained in a specific folder, create "
"an empty file called ``.gdignore`` in the folder (the leading ``.`` is "
"required). This can be useful to speed up the initial project importing."
msgstr ""
"Godot が特定のフォルダに含まれるファイルをインポートしないようにするには、"
"フォルダ内に ``.gdignore`` という空のファイルを作成します (先頭に ``.`` が必"
"要です)。これは、(既存の構成などからの)初期プロジェクトのインポートを高速化す"
"るのに役立ちます。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:66
msgid ""
"To create a file whose name starts with a dot on Windows, you can use a text "
"editor such as Notepad++ or use the following command in a command prompt: "
"``type nul > .gdignore``"
msgstr ""
"Windowsでドットで始まる名前のファイルを作成するには、Notepad++などのテキスト"
"エディタを使用するか、コマンドプロンプトで次のコマンドを使用します: ``type "
"nul> .gdignore``"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:70
msgid ""
"Once the folder is ignored, resources in that folder can't be loaded anymore "
"using the ``load()`` and ``preload()`` methods."
msgstr ""
"フォルダが無視されると、そのフォルダ内のリソースを ``load()`` および "
"``preload()`` メソッドを使用して読み込むことができなくなります。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:73
msgid ""
"Ignoring a folder will also automatically hide it from the FileSystem dock, "
"which can be useful to reduce clutter."
msgstr ""
"フォルダを無視すると、そのフォルダはファイルシステムドックから自動的に非表示"
"になるので、煩雑さを軽減するのに役立ちます。"

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:77
msgid "Case sensitivity"
msgstr ""

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:79
msgid ""
"Windows and recent macOS versions use case-insensitive filesystems by "
"default, whereas Linux distributions use a case-sensitive filesystem by "
"default. This can cause issues after exporting a project, since Godot's PCK "
"virtual filesystem is case-sensitive. To avoid this, it's recommended to "
"stick to ``snake_case`` naming for all files in the project (and lowercase "
"characters in general)."
msgstr ""

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:88
msgid ""
"You can break this rule when style guides say otherwise (such as the C# "
"style guide). Still, be consistent to avoid mistakes."
msgstr ""

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:91
msgid ""
"On Windows 10, to further avoid mistakes related to case sensitivity, you "
"can also make the project folder case-sensitive. After enabling the Windows "
"Subsystem for Linux feature, run the following command in a PowerShell "
"window::"
msgstr ""

#: ../../docs/getting_started/workflow/project_setup/project_organization.rst:101
msgid ""
"If you haven't enabled the Windows Subsystem for Linux, you can enter the "
"following line in a PowerShell window *running as Administrator* then reboot "
"when asked::"
msgstr ""
