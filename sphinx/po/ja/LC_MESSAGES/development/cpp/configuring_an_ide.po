# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-13 17:49+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/cpp/configuring_an_ide.rst:4
msgid "Configuring an IDE"
msgstr "IDEの構成"

#: ../../docs/development/cpp/configuring_an_ide.rst:6
msgid ""
"We assume that you have already `cloned <https://github.com/godotengine/"
"godot>`_ and :ref:`compiled <toc-devel-compiling>` Godot."
msgstr ""
"すでにGodotの\\ `クローンを作成 <https://github.com/godotengine/godot>`_ \\ "
"し、\\ :ref:`コンパイル <toc-devel-compiling>`\\ したとします。"

#: ../../docs/development/cpp/configuring_an_ide.rst:9
msgid ""
"You can easily develop Godot with any text editor and by invoking ``scons`` "
"on the command line, but if you want to work with an IDE (Integrated "
"Development Environment), here are setup instructions for some popular ones:"
msgstr ""
"任意のテキストエディタを使用してコマンドラインで ``scons`` を呼び出すことで簡"
"単にGodotを開発できますが、IDE(統合開発環境)で作業する場合の、いくつかの一般"
"的なもののセットアップ手順を以下に示します:"

#: ../../docs/development/cpp/configuring_an_ide.rst:13
msgid ""
":ref:`Qt Creator <doc_configuring_an_ide_qtcreator>` (all desktop platforms)"
msgstr ""
":ref:`Qt Creator <doc_configuring_an_ide_qtcreator>` (すべてのデスクトッププ"
"ラットフォーム)"

#: ../../docs/development/cpp/configuring_an_ide.rst:14
msgid ""
":ref:`Kdevelop <doc_configuring_an_ide_kdevelop>` (all desktop platforms)"
msgstr ""
":ref:`Kdevelop <doc_configuring_an_ide_kdevelop>` (すべてのデスクトッププラッ"
"トフォーム)"

#: ../../docs/development/cpp/configuring_an_ide.rst:15
msgid ":ref:`Xcode <doc_configuring_an_ide_xcode>` (macOS)"
msgstr ":ref:`Xcode <doc_configuring_an_ide_xcode>` (macOS)"

#: ../../docs/development/cpp/configuring_an_ide.rst:16
msgid ":ref:`Visual Studio <doc_compiling_for_windows_install_vs>` (Windows)"
msgstr ":ref:`Visual Studio <doc_compiling_for_windows_install_vs>` (Windows)"

#: ../../docs/development/cpp/configuring_an_ide.rst:17
msgid ""
":ref:`Visual Studio Code<doc_configuring_an_ide_vscode>` (all desktop "
"platforms)"
msgstr ""
":ref:`Visual Studio Code<doc_configuring_an_ide_vscode>` (すべてのデスクトッ"
"ププラットフォーム)"

#: ../../docs/development/cpp/configuring_an_ide.rst:18
msgid ""
":ref:`Android Studio<doc_configuring_an_ide_android_studio>` (all desktop "
"platforms)"
msgstr ""
":ref:`Android Studio<doc_configuring_an_ide_android_studio>` (すべてのデスク"
"トッププラットフォーム)"

#: ../../docs/development/cpp/configuring_an_ide.rst:19
msgid ":ref:`CLion<doc_configuring_an_ide_clion>` (all desktop platforms)"
msgstr ""
":ref:`CLion<doc_configuring_an_ide_clion>` (すべてのデスクトッププラット"
"フォーム)"

#: ../../docs/development/cpp/configuring_an_ide.rst:21
msgid ""
"It is possible to use other IDEs, but their setup is not documented yet."
msgstr ""
"他のIDEを使用することは可能ですが、それらのセットアップはまだ文書化されていま"
"せん。"

#: ../../docs/development/cpp/configuring_an_ide.rst:26
msgid "Qt Creator"
msgstr "Qt Creator"

#: ../../docs/development/cpp/configuring_an_ide.rst:29
msgid "Importing the project"
msgstr "プロジェクトのインポート"

#: ../../docs/development/cpp/configuring_an_ide.rst:31
msgid "Choose *New Project* -> *Import Project* -> *Import Existing Project*."
msgstr ""
"*新しいプロジェクト* → *プロジェクトのインポート* → *既存プロジェクトのイン"
"ポートを* を選択します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:35
msgid "Set the path to your Godot root directory and enter the project name."
msgstr "Godotルートディレクトリへのパスを設定し、プロジェクト名を入力します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:39
msgid ""
"Here you can choose which folders and files will be visible to the project. "
"C/C++ files are added automatically. Potentially useful additions: \\*.py "
"for buildsystem files, \\*.java for Android development, \\*.mm for macOS. "
"Click \"Next\"."
msgstr ""
"ここでは、プロジェクトに表示するフォルダとファイルを選択できます。C/C++ファイ"
"ルは自動的に追加されます。利用可能な拡張子: ビルドシステムファイルの \\*.py、"
"Android 開発用 \\*.java、macOS用 \\*.mm。[次へ] をクリックします。"

#: ../../docs/development/cpp/configuring_an_ide.rst:45
msgid "Click *Finish*."
msgstr "*完了* をクリックします。"

#: ../../docs/development/cpp/configuring_an_ide.rst:46
msgid ""
"Add a line containing ``.`` to *project_name.includes* to get working code "
"completion."
msgstr ""
"``.`` を含む行を\\ *project_name.includes*\\ に追加して、作業コードの完了を取"
"得します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:51
msgid "Build and run"
msgstr "ビルドと実行"

#: ../../docs/development/cpp/configuring_an_ide.rst:53
msgid "Build configuration:"
msgstr "ビルド構成:"

#: ../../docs/development/cpp/configuring_an_ide.rst:55
msgid "Click on *Projects* and open the *Build* tab."
msgstr "*プロジェクト*\\ をクリックし、\\ *ビルド*\\ タブを開きます。"

#: ../../docs/development/cpp/configuring_an_ide.rst:56
msgid "Delete the pre-defined ``make`` build step."
msgstr "定義済みの ``make`` ビルド ステップを削除します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:60
msgid "Click *Add Build Step* -> *Custom Process Step*."
msgstr ""
"*ビルドステップを追加*\\  -> \\ *カスタムプロセスステップ*\\ をクリックしま"
"す。"

#: ../../docs/development/cpp/configuring_an_ide.rst:64
msgid ""
"Type ``scons`` in the *Command* field. If it fails with 'Could not start "
"process \"scons\"', it can mean that ``scons`` is not in your ``PATH`` "
"environment variable, so you may have to use the full path to the SCons "
"binary."
msgstr ""
"*Command* フィールドに ``scons`` と入力します。\\ ``Could not start process "
"\"scons\"`` で失敗した場合、\\ ``scons`` が ``PATH`` 環境変数にないため、"
"SConsバイナリへのフルパスを使用しなければならない可能性があります。"

#: ../../docs/development/cpp/configuring_an_ide.rst:67
msgid ""
"Fill the *Arguments* field with your compilation options. (e.g.: ``p=x11 "
"target=debug -j 4``)"
msgstr ""
"*引数*\\ フィールドにコンパイルオプションを入力します。(例: ``p=x11 "
"target=debug -j 4`` )"

#: ../../docs/development/cpp/configuring_an_ide.rst:71
msgid "Run configuration:"
msgstr "構成の実行:"

#: ../../docs/development/cpp/configuring_an_ide.rst:73
msgid "Open the *Run* tab."
msgstr "*実行*\\ タブを開きます。"

#: ../../docs/development/cpp/configuring_an_ide.rst:74
msgid ""
"Point the *Executable* to your compiled Godot binary (e.g: ``%{buildDir}/bin/"
"godot.x11.opt.tools.64``)"
msgstr ""
"*Executable* をコンパイル済みのGodotバイナリにポイントします(例: ``"
"%{buildDir}/bin/godot.x11.opt.tools.64``)"

#: ../../docs/development/cpp/configuring_an_ide.rst:75
msgid ""
"If you want to run a specific game or project, point *Working directory* to "
"the game directory."
msgstr ""
"特定のゲームまたはプロジェクトを実行する場合は、\\ *作業ディレクトリ*\\ を"
"ゲームディレクトリに指定します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:76
msgid ""
"If you want to run the editor, add ``-e`` to the *Command line arguments* "
"field."
msgstr ""
"エディタを実行する場合は、\\ *コマンドライン引数*\\ フィールドに ``-e`` を追"
"加します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:81
msgid "Updating sources after pulling latest commits"
msgstr "最新のコミットをプルした後のソースの更新"

#: ../../docs/development/cpp/configuring_an_ide.rst:83
msgid ""
"As a developer you usually want to frequently pull the latest commits from "
"the upstream git repository or a specific fork etc. However this brings a "
"little problem with it: as the development continues, source files (and "
"folders) are added or removed. These changes needs to be reflected in your "
"project files for Qt Creator too, so you continue to have a nice experience "
"coding in it. A simple way to check is to right click at your root folder in "
"the \"Projects View\" and click on \"Edit files...\""
msgstr ""
"開発者は、通常、上流のgitリポジトリまたは特定のフォークなどから最新のコミット"
"を頻繁にプルする必要があります。ただし、開発を続けると、ソースファイル(および"
"フォルダ)が追加または削除されるため、少し問題が生じます。 これらの変更はQt "
"Creatorのプロジェクトファイルにも反映される必要があるため、それをちゃんと反映"
"した上で引き続きコーディングを行ってください。チェックする簡単な方法"
"は、\"Projects View\"のルートフォルダを右クリックし、\"Edit files...\"をク"
"リックすることです。"

#: ../../docs/development/cpp/configuring_an_ide.rst:93
msgid ""
"Now a new dialog should appear that is similar in functionality to the one "
"in the third step of the \"Importing the project\" section. Here you can "
"check whether you want to add/remove specific files and/or folders. You can "
"chose by clicking with your mouse or just simply by clicking the \"Apply "
"Filter\" button. A simple click on \"Ok\" and you're ready to continue your "
"work."
msgstr ""
"これで、 \"Importing the project\" セクションの3番目のステップの機能と同様の"
"新しいダイアログが表示されます。ここで、特定のファイルやフォルダを追加または"
"削除するかどうかを確認できます。マウスでクリックするか、単に \"Apply Filter"
"\" ボタンをクリックするだけで選択できます。 \"OK\" をクリックするだけで、作業"
"を続行できます。"

#: ../../docs/development/cpp/configuring_an_ide.rst:101
msgid "Code style configuration"
msgstr "コードスタイル設定"

#: ../../docs/development/cpp/configuring_an_ide.rst:103
msgid ""
"Developers must follow the project's :ref:`code style "
"<doc_code_style_guidelines>` and IDE should help them to do it. By default, "
"Qt Creator does use spaces for indentation which is incorrect for Godot "
"project. You can change this behavior by changing the \"Code Style\" in "
"*Options* -> *C++*."
msgstr ""
"開発者はプロジェクトの :ref:`コードスタイル<doc_code_style_guidelines>` に従"
"う必要があり、IDEはそれを支援する必要があります。デフォルトでは、Qt Creatorは"
"インデントにスペースを使用しますが、これはGodotプロジェクトでは正しくありませ"
"ん。この動作を変更するには、\\ *オプション* → *C++* の「コードスタイル」を変"
"更します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:110
msgid ""
"Click on *Edit* to change the current settings, then click on *Copy Built-in "
"Code Style* button to set a new code style. Set a name for it (e.g. Godot) "
"and change the Tab policy to be *Tabs Only*."
msgstr ""
"[編集]をクリックして現在の設定を変更し、[ビルトイン コードスタイルをコピー]ボ"
"タンをクリックして新しいコードスタイルを設定します。名前を設定し(例: Godot)、"
"タブポリシーを *タブのみ* に変更します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:119
msgid "KDevelop"
msgstr "KDevelop"

#: ../../docs/development/cpp/configuring_an_ide.rst:121
msgid ""
"`KDevelop <https://www.kdevelop.org>`_ is a free, open source IDE for all "
"desktop platforms."
msgstr ""
"`KDevelop <https://www.kdevelop.org>`_ は、すべてのデスクトッププラットフォー"
"ム向けの無料のオープンソースIDEです。"

#: ../../docs/development/cpp/configuring_an_ide.rst:123
msgid ""
"You can find a video tutorial `here <https://www.youtube.com/watch?"
"v=yNVoWQi9TJA>`_. Or you may follow this text version tutorial."
msgstr ""
"ビデオチュートリアルは `こちら <https://www.youtube.com/watch?"
"v=yNVoWQi9TJA>`_ です。または、このテキストバージョンのチュートリアルに従って"
"ください。"

#: ../../docs/development/cpp/configuring_an_ide.rst:126
msgid "Start by opening KDevelop and choosing \"open project\"."
msgstr "KDevelopを開き、\"open project\" を選択して開始します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:130
msgid "Choose the directory where you cloned Godot."
msgstr "Godotのクローンを作成したディレクトリを選択します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:132
msgid ""
"On the next screen, choose \"Custom Build System\" for the *Project manager*."
msgstr ""
"次の画面で、\\ *Project manager* の \"Custom Build System\" を選択します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:136
msgid "Now that the project has been imported, open the project configuration."
msgstr "プロジェクトがインポートされたので、プロジェクトの設定を開きます。"

#: ../../docs/development/cpp/configuring_an_ide.rst:140
msgid "Add the following includes/imports:"
msgstr "次を includes/imports に追加します:"

#: ../../docs/development/cpp/configuring_an_ide.rst:153
msgid "Apply the changes."
msgstr "変更(Apply)を適用します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:155
msgid ""
"Switch to the \"Custom Build System\" tab. Add a build configuration and "
"keep the build directory blank. Enable build tools and add ``scons`` as the "
"executable then add ``platform=x11 target=debug`` (``platform=osx`` if "
"you're on macOS) as the arguments."
msgstr ""
"\"Custom Build System\" タブに切り替えます。ビルド構成(Build configuration)を"
"追加し、ビルドディレクトリ(Build Directory)を空白のままにします。ビルドツール"
"(Build Tools)を有効(Enable)にし、実行可能ファイル(Executable)として `` "
"scons`` を追加してから、引数(Arguments)として ``platform = x11 target = "
"debug`` (macOSを使用している場合は `` platform = osx``)を追加します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:162
msgid ""
"Next we need to tell KDevelop where to find the binary. From the \"Run\" "
"menu, choose \"Configure Launches\"."
msgstr ""
"次に、バイナリを見つける場所をKDevelopに指示する必要があります。\"Run\" メ"
"ニューから[起動設定]を選択します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:167
msgid ""
"Click \"Add\" if no launcher exists. Then add the path to your executable in "
"the executable section. Your executable should be located in the ``bin/`` "
"sub-directory and should be named something like ``godot.x11.tools.64`` (the "
"name could be different depending on your platform and depending on your "
"build options)."
msgstr ""
"ランチャーが存在しない場合は、[追加] をクリックします。次に、実行可能"
"(Executable)セクションに実行可能ファイルへのパスを追加します。実行可能ファイ"
"ルは ``bin/`` サブディレクトリに配置し、\\ ``godot.x11.tools.64`` のような名"
"前を付ける必要があります(名前はプラットフォームやビルドオプションによって異な"
"る場合があります) 。"

#: ../../docs/development/cpp/configuring_an_ide.rst:175
msgid "That's it! Now you should be good to go :)"
msgstr "以上です!これで準備完了です (^^)"

#: ../../docs/development/cpp/configuring_an_ide.rst:181
msgid "Xcode"
msgstr "\\ Xcode"

#: ../../docs/development/cpp/configuring_an_ide.rst:184
#: ../../docs/development/cpp/configuring_an_ide.rst:311
msgid "Project setup"
msgstr "プロジェクトの設定"

#: ../../docs/development/cpp/configuring_an_ide.rst:186
msgid "Create an Xcode external build project anywhere"
msgstr "任意の場所にXcode外部ビルドプロジェクトを作成する"

#: ../../docs/development/cpp/configuring_an_ide.rst:190
msgid "Set the *Build tool* to the path to scons"
msgstr "*ビルドツール*\\ をsconsへのパスに設定します"

#: ../../docs/development/cpp/configuring_an_ide.rst:192
msgid "Modify Build Target's Xcode Info Tab:"
msgstr "ビルドターゲットのXcode情報タブを変更します:"

#: ../../docs/development/cpp/configuring_an_ide.rst:194
msgid ""
"Set *Arguments* to something like: platform=osx tools=yes bits=64 "
"target=debug"
msgstr ""
"*引数*\\ を次のようなものに設定します: platform=osx tools=はい bits=64 "
"target=debug"

#: ../../docs/development/cpp/configuring_an_ide.rst:195
msgid ""
"Set *Directory* to the path to Godot's source folder. Keep it blank if "
"project is already there."
msgstr ""
"*Directory*\\ を Godot のソース フォルダへのパスに設定します。プロジェクトが"
"既に存在する場合は、空白のままにします。"

#: ../../docs/development/cpp/configuring_an_ide.rst:196
msgid "You may uncheck *Pass build settings in environment*"
msgstr "*環境内のビルド設定を渡す*\\ のチェックを外すことが\\ *できます*"

#: ../../docs/development/cpp/configuring_an_ide.rst:200
msgid "Add a Command Line Target:"
msgstr "コマンドラインターゲットの追加:"

#: ../../docs/development/cpp/configuring_an_ide.rst:202
msgid ""
"Go to Xcode File > New > Target... and add a new Xcode command line target"
msgstr ""
"[Xcodeファイル]> [新規]> [ターゲット...]に移動し、新しいXcodeコマンドライン"
"ターゲットを追加します"

#: ../../docs/development/cpp/configuring_an_ide.rst:208
msgid "Name it something so you know not to compile with this target"
msgstr "このターゲットでコンパイルしないように名前を付けます"

#: ../../docs/development/cpp/configuring_an_ide.rst:209
msgid "e.g. ``GodotXcodeIndex``"
msgstr "例: ``GodotXcodeIndex``"

#: ../../docs/development/cpp/configuring_an_ide.rst:210
msgid ""
"Goto the newly created target's *Build Settings* tab and search for *Header "
"Search Paths*"
msgstr ""
"新しく作成したターゲットの\\ *ビルド設定*\\ タブに移動し、\\ *ヘッダー検索パ"
"スを検索します*"

#: ../../docs/development/cpp/configuring_an_ide.rst:211
msgid "Set *Header Search Paths* to an absolute path to Godot's source folder"
msgstr "*ヘッダー検索パス*\\ をGodotのソースフォルダへの絶対パスに設定する"

#: ../../docs/development/cpp/configuring_an_ide.rst:212
msgid "Make it recursive by adding two \\*'s to the end of the path"
msgstr "パスの末端に 「\\*\\*」を追加して再帰的にする"

#: ../../docs/development/cpp/configuring_an_ide.rst:213
msgid "e.g. ``/Users/me/repos/godot-source/\\**``"
msgstr "例: ``/Users/me/repos/godot-source/\\**``"

#: ../../docs/development/cpp/configuring_an_ide.rst:215
msgid "Add Godot Source to the Project:"
msgstr "プロジェクトにGodotソースを追加する:"

#: ../../docs/development/cpp/configuring_an_ide.rst:217
msgid "Drag and drop Godot source into project file browser."
msgstr ""
"Godotソースをプロジェクトファイルブラウザにドラッグアンドドロップします。"

#: ../../docs/development/cpp/configuring_an_ide.rst:218
msgid "Uncheck *Create External Build System*"
msgstr "チェックを外す: \\ *外部ビルド システムの作成*"

#: ../../docs/development/cpp/configuring_an_ide.rst:222
msgid "Click Next"
msgstr "次へをクリックします"

#: ../../docs/development/cpp/configuring_an_ide.rst:223
msgid "Select *create groups*"
msgstr "*グループの作成を選択*"

#: ../../docs/development/cpp/configuring_an_ide.rst:227
msgid "Check off only your command line target in the *Add to targets* section"
msgstr ""
"*ターゲットに追加*\\ セクションでコマンドラインターゲットのみをオフにします"

#: ../../docs/development/cpp/configuring_an_ide.rst:228
msgid "Click finish. Xcode will now index the files."
msgstr ""
"終了をクリックします。次に、Xcodeがファイルのインデックスを作成します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:229
msgid "Grab a cup of coffee... Maybe make something to eat, too"
msgstr "コーヒーを1杯取って...もしかしたら、何か食べるものも作るかもしれません"

#: ../../docs/development/cpp/configuring_an_ide.rst:230
msgid ""
"You should have jump to definition, auto completion, and full syntax "
"highlighting when it is done."
msgstr ""
"定義、自動補完、および完全な構文の強調表示が完了したら、その定義にジャンプす"
"る必要があります。"

#: ../../docs/development/cpp/configuring_an_ide.rst:233
msgid "Scheme setup"
msgstr "スキームのセットアップ"

#: ../../docs/development/cpp/configuring_an_ide.rst:235
msgid "Edit Build Scheme of External Build Target:"
msgstr "外部ビルドターゲットのビルドスキームの編集:"

#: ../../docs/development/cpp/configuring_an_ide.rst:237
msgid "Open scheme editor of external build target"
msgstr "外部ビルドターゲットのオープンスキームエディタ"

#: ../../docs/development/cpp/configuring_an_ide.rst:238
msgid "Expand the *Build* menu"
msgstr "*ビルド*\\ メニューを展開する"

#: ../../docs/development/cpp/configuring_an_ide.rst:239
msgid "Goto *Post Actions*"
msgstr "*アクションの投稿へ飛ぶ*"

#: ../../docs/development/cpp/configuring_an_ide.rst:240
msgid ""
"Add a new script run action, select your project in ``Provide build settings "
"from`` as this allows you to use ``${PROJECT_DIR}`` variable."
msgstr ""
"新しいスクリプト実行アクションを追加し、 ``Provide build settings from`` でプ"
"ロジェクトを選択すると、 ``${PROJECT_DIR}`` 変数を使用することができます。"

#: ../../docs/development/cpp/configuring_an_ide.rst:244
msgid "Write a script that gives the binary a name that Xcode will recognize"
msgstr "Xcodeが認識する名前をバイナリに与えるスクリプトを記述する"

#: ../../docs/development/cpp/configuring_an_ide.rst:245
msgid ""
"e.g. ``ln -f ${PROJECT_DIR}/godot/bin/godot.osx.tools.64 ${PROJECT_DIR}/"
"godot/bin/godot``"
msgstr ""
"例: ``ln -f ${PROJECT_DIR}/godot/bin/godot.osx.tools.64 ${PROJECT_DIR}/godot/"
"bin/godot``"

#: ../../docs/development/cpp/configuring_an_ide.rst:246
msgid "Build the external build target"
msgstr "外部ビルドターゲットの構築"

#: ../../docs/development/cpp/configuring_an_ide.rst:248
msgid "Edit Run Scheme of External Build Target:"
msgstr "外部ビルドターゲットの実行スキームの編集:"

#: ../../docs/development/cpp/configuring_an_ide.rst:250
msgid "Open the scheme editor again"
msgstr "スキームエディタを再度開きます"

#: ../../docs/development/cpp/configuring_an_ide.rst:251
msgid "Click Run"
msgstr "実行をクリック"

#: ../../docs/development/cpp/configuring_an_ide.rst:255
msgid ""
"Set the *Executable* to the file you linked in your post build action script"
msgstr ""
"*Executable*\\ を、ビルド後のアクションスクリプトでリンクしたファイルに設定し"
"ます"

#: ../../docs/development/cpp/configuring_an_ide.rst:256
msgid "Check *Debug executable* if it isn't already"
msgstr ""
"まだ実行されていない場合は、\\ *デバッグ実行可能ファイル*\\ をチェックします"

#: ../../docs/development/cpp/configuring_an_ide.rst:257
msgid ""
"You can go to *Arguments* tab and add an -e and a -path to a project to "
"debug the editor not the project selection screen"
msgstr ""
"*引数*\\ タブに移動し、プロジェクトに -e と -path を追加して、プロジェクト選"
"択画面ではなくエディタをデバッグできます"

#: ../../docs/development/cpp/configuring_an_ide.rst:260
msgid "Test it:"
msgstr "それをテストします:"

#: ../../docs/development/cpp/configuring_an_ide.rst:262
msgid "Set a breakpoint in platform/osx/godot_main_osx.mm"
msgstr "プラットフォーム /osx/godot_main_osx.mm でブレークポイントを設定する"

#: ../../docs/development/cpp/configuring_an_ide.rst:263
msgid "It should break at the point!"
msgstr "そのポイントでブレークするはずです!"

#: ../../docs/development/cpp/configuring_an_ide.rst:269
msgid "Visual Studio Code"
msgstr "\\ Visual Studio Code"

#: ../../docs/development/cpp/configuring_an_ide.rst:271
msgid ""
"Ensure that C/C++ extension is installed. You can find instructions in `docs "
"<https://code.visualstudio.com/docs/languages/cpp>`_."
msgstr ""
"C/C++拡張機能がインストールされていることを確認してください。手順は `docs "
"<https://code.visualstudio.com/docs/languages/cpp>`_ にあります。"

#: ../../docs/development/cpp/configuring_an_ide.rst:273
#, fuzzy
msgid "Open cloned godot folder in VS Code with ``File > Open Folder...``"
msgstr ""
"クローンされたgodotフォルダをVS Codeで開きます(ファイル → フォルダーを開"
"く...)"

#: ../../docs/development/cpp/configuring_an_ide.rst:275
#, fuzzy
msgid ""
"In order to build the project, you need two configuration files: *launch."
"json* and *tasks.json*. To create them:"
msgstr ""
"プロジェクトをビルドするには、2つの構成ファイルが必要です: *launch.json* およ"
"び *tasks.json*\\ 。それらを作成するには:"

#: ../../docs/development/cpp/configuring_an_ide.rst:278
#, fuzzy
msgid ""
"Open *Debug* view by pressing :kbd:`Ctrl + Shift + D` and select cogwheel "
"with an orange dot:"
msgstr ""
"デバッグビューを開き(Ctrl + Shift + D)、オレンジ色のドットが付いた歯車を選択"
"します:"

#: ../../docs/development/cpp/configuring_an_ide.rst:282
msgid ""
"Select *C++ (GDB/LLDB)* (it might be named differently on macOS or Windows)"
msgstr ""
"*C++ (GDB/LLDB)* を選択します(macOSまたはWindowsでは異なる名前が付けられる場"
"合があります)"

#: ../../docs/development/cpp/configuring_an_ide.rst:284
msgid "Update *launch.json* to match:"
msgstr "一致するように *launch.json* を更新します:"

#: ../../docs/development/cpp/configuring_an_ide.rst:288
msgid ""
"(Note that *godot.x11.tools.64* in \"program\" value might be named "
"differently on macOS or Windows)"
msgstr ""
"(\"program\"値の *godot.x11.tools.64* の名前は、macOSまたはWindowsでは異なる"
"場合があることに注意してください)"

#: ../../docs/development/cpp/configuring_an_ide.rst:290
#, fuzzy
msgid ""
"Create *tasks.json* by starting the Debug process with :kbd:`F5`. VS Code "
"will show a dialog with a *Configure Task* button. Tap it and select *Create "
"tasks.json file from template*, then select *Others*"
msgstr ""
"デバッグプロセス(F5)を開始して、\\ *tasks.json* を作成します。 VS Codeには、*"
"タスクの構成* ボタンのあるダイアログが表示されます。それをタップして、 *テン"
"プレートから tasks.json を生成* を選択し、\\ *Others* を選択します"

#: ../../docs/development/cpp/configuring_an_ide.rst:292
msgid "Update *tasks.json* to match:"
msgstr "一致するように *tasks.json* を更新します:"

#: ../../docs/development/cpp/configuring_an_ide.rst:296
msgid "(Note that *platform=x11* will be different for macOX and Windows)"
msgstr "(*platform = x11* はmacOXとWindowsでは異なります)"

#: ../../docs/development/cpp/configuring_an_ide.rst:298
msgid ""
"You can now start the Debug process again to test that everything works."
msgstr "デバッグプロセスを再度開始して、すべてが機能することをテストできます。"

#: ../../docs/development/cpp/configuring_an_ide.rst:300
msgid ""
"If the build phase fails, check the console for hints. On Linux it's most "
"likely that some dependencies are missing. Check :ref:`Compiling for X11 "
"(Linux, \\*BSD) <doc_compiling_for_x11>`"
msgstr ""
"ビルドフェーズが失敗した場合は、コンソールでヒントを確認してください。 Linux"
"では、いくつかの依存関係が欠落している可能性が最も高いです。要確認 :ref:`X11"
"用のコンパイル (Linux、\\ * BSD) <doc_compiling_for_x11>`"

#: ../../docs/development/cpp/configuring_an_ide.rst:306
msgid "Android Studio"
msgstr "\\ Android Studio"

#: ../../docs/development/cpp/configuring_an_ide.rst:308
#, fuzzy
msgid ""
"`Android Studio <https://developer.android.com/studio>`_ is a `JetBrains "
"<https://www.jetbrains.com/>`_ IDE for Android development. It has a feature-"
"rich editor which supports Java and C/C++, so it can be used for development "
"of the Godot core engine, and Android platform codebases."
msgstr ""
"`Android Studio <https://developer.android.com/studio>`_はAndroid開発用の "
"`Jetbrain <https://www.jetbrains.com/>`_ IDEです。JavaとC/C++をサポートする機"
"能豊富なエディタを備えているため、GodotコアエンジンおよびAndroidプラット"
"フォームコードベースの開発に使用できます。"

#: ../../docs/development/cpp/configuring_an_ide.rst:313
msgid ""
"From the Android Studio *Welcome to Android Studio* window, select *Open an "
"existing Android Studio project*"
msgstr ""
"Android Studio *Welcome to Android Studio* ウィンドウから、\\ *Open an "
"existing Android Studio project* を選択します"

#: ../../docs/development/cpp/configuring_an_ide.rst:317
msgid ""
"Navigate to ``<godot root directory>/platform/android/java`` and select the "
"``settings.gradle`` gradle file."
msgstr ""
"``<godot root directory>/platform/android/java`` に移動し、\\ ``settings."
"gradle`` gradleファイルを選択します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:318
msgid "Android Studio will import and index the project."
msgstr "Android Studioはプロジェクトをインポートしてインデックスを作成します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:319
msgid ""
"To build the project, follow the :ref:`compiling instructions <toc-devel-"
"compiling>`."
msgstr ""
"プロジェクトをビルドするには、\\ :ref:`コンパイル手順<toc-devel-compiling>` "
"に従ってください。"

#: ../../docs/development/cpp/configuring_an_ide.rst:324
msgid "CLion"
msgstr "CLion"

#: ../../docs/development/cpp/configuring_an_ide.rst:326
msgid ""
"`CLion <https://www.jetbrains.com/clion/>`_ is a commercial IDE for C++. It "
"requires a ``CMakeLists.txt`` file as a project file, which is problematic "
"for Godot which uses the SCons buildsystem and not CMake. However, there is "
"a ``CMakeLists.txt`` configuration for :ref:`Android Studio "
"<doc_configuring_an_ide_android_studio>` which can also be used by CLion."
msgstr ""
"`CLion <https://www.jetbrains.com/clion/>`_ はC++用の商用IDEです。プロジェク"
"トファイルとして ``CMakeLists.txt`` ファイルが必要です。これは、CMakeではなく"
"SConsビルドシステムを使用するGodotにとって問題です。ただし、CLionでも使用でき"
"る :ref:`Android Studio <doc_configuring_an_ide_android_studio>` の "
"``CMakeLists.txt`` 設定があります。"

#: ../../docs/development/cpp/configuring_an_ide.rst:328
msgid "Choose *File* -> *Open*."
msgstr "*File* → *Open* を選択します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:330
msgid ""
"Navigation to your Godot Git clone, and select the folder ``platform/android/"
"java/lib`` (the ``CMakeLists.txt`` file is located there). Select the "
"folder, not the ``CMakeLists.txt file``. Then click *Ok*."
msgstr ""
"Godot Gitクローンに移動し、\\ ``platform/android/java/lib`` フォルダを選択し"
"ます(``CMakeLists.txt`` ファイルはそこにあります)。\\ ``CMakeLists.txtファイ"
"ル`` ではなく、フォルダを選択します。次に、\\ *OK* をクリックします。"

#: ../../docs/development/cpp/configuring_an_ide.rst:334
msgid "If this popup window appears, select *This window* to open the project."
msgstr ""
"このポップアップウィンドウが表示されたら、\\ *This window* を選択してプロジェ"
"クトを開きます。"

#: ../../docs/development/cpp/configuring_an_ide.rst:338
msgid ""
"Choose *Tools* -> *CMake* -> *Change Project Root* and select the root Godot "
"folder."
msgstr ""
"*Tools* → *CMake* → *Change Project Root* を選択し、ルートGodotフォルダを選択"
"します。"

#: ../../docs/development/cpp/configuring_an_ide.rst:342
msgid ""
"You should be now be able to see all the project files. Autocomplete should "
"work, when the project finish indexing."
msgstr ""
"これで、すべてのプロジェクトファイルを表示できるはずです。プロジェクトのイン"
"デックス作成が完了すると、オートコンプリートが機能するはずです。"
