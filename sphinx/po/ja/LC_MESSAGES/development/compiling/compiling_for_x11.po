# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-13 17:49+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/development/compiling/compiling_for_x11.rst:4
msgid "Compiling for X11 (Linux, \\*BSD)"
msgstr "X11のコンパイル (Linux、\\*BSD)"

#: ../../docs/development/compiling/compiling_for_x11.rst:9
msgid "Requirements"
msgstr "必要条件"

#: ../../docs/development/compiling/compiling_for_x11.rst:11
msgid ""
"For compiling under Linux or other Unix variants, the following is required:"
msgstr ""
"Linux またはその他の Unix バリアントでコンパイルするには、次のことが必要です:"

#: ../../docs/development/compiling/compiling_for_x11.rst:14
msgid "GCC or Clang"
msgstr "GCCまたはClang"

#: ../../docs/development/compiling/compiling_for_x11.rst:15
msgid "Python 3 or 2.7+"
msgstr "Python 3 あるいは 2.7 以上"

#: ../../docs/development/compiling/compiling_for_x11.rst:16
msgid "SCons build system (3.0 or later for Python 3)"
msgstr "SCons ビルドシステム (Python3には3.0以降)"

#: ../../docs/development/compiling/compiling_for_x11.rst:17
msgid "pkg-config (used to detect the dependencies below)"
msgstr "pkg-config (以下の依存関係を検出するために使用)"

#: ../../docs/development/compiling/compiling_for_x11.rst:18
msgid "X11, Xcursor, Xinerama, Xi and XRandR development libraries"
msgstr "X11、Xcursor、Xinerama、XiおよびXRandR開発ライブラリ"

#: ../../docs/development/compiling/compiling_for_x11.rst:19
msgid "MesaGL development libraries"
msgstr "MesaGL開発ライブラリ"

#: ../../docs/development/compiling/compiling_for_x11.rst:20
msgid "ALSA development libraries"
msgstr "ALSA開発ライブラリ"

#: ../../docs/development/compiling/compiling_for_x11.rst:21
msgid "PulseAudio development libraries"
msgstr "PulseAudio開発ライブラリ"

#: ../../docs/development/compiling/compiling_for_x11.rst:22
msgid "*Optional* - libudev (build with ``udev=yes``)"
msgstr "*任意* - libudev (``udev=yes`` でのビルドに)"

#: ../../docs/development/compiling/compiling_for_x11.rst:23
msgid "*Optional* - yasm (for WebM SIMD optimizations)"
msgstr "*任意* - yasm (WebM SIMD最適化のため)"

#: ../../docs/development/compiling/compiling_for_x11.rst:25
msgid ""
"For a general overview of SCons usage for Godot, see :ref:"
"`doc_introduction_to_the_buildsystem`."
msgstr ""
"Godotにおける基本的なSconsの使い方については、\\ :ref:"
"`doc_introduction_to_the_buildsystem`\\ を参照してください。"

#: ../../docs/development/compiling/compiling_for_x11.rst:29
msgid "Distro-specific one-liners"
msgstr "ディストリビューション固有のワンライナー"

#: ../../docs/development/compiling/compiling_for_x11.rst:31
msgid "**Alpine Linux**"
msgstr "\\ **Alpine Linux**"

#: ../../docs/development/compiling/compiling_for_x11.rst:36
msgid "**Arch Linux**"
msgstr "**Arch Linux**"

#: ../../docs/development/compiling/compiling_for_x11.rst:41
msgid "**Debian** / **Ubuntu**"
msgstr "**Debian** / **Ubuntu**"

#: ../../docs/development/compiling/compiling_for_x11.rst:46
msgid "**Fedora**"
msgstr "**Fedora**"

#: ../../docs/development/compiling/compiling_for_x11.rst:52
msgid "**FreeBSD**"
msgstr "**FreeBSD**"

#: ../../docs/development/compiling/compiling_for_x11.rst:58
msgid "**Gentoo**"
msgstr "**Gentoo**"

#: ../../docs/development/compiling/compiling_for_x11.rst:63
msgid "**Mageia**"
msgstr "**Mageia**"

#: ../../docs/development/compiling/compiling_for_x11.rst:69
msgid "**OpenBSD**"
msgstr "**OpenBSD**"

#: ../../docs/development/compiling/compiling_for_x11.rst:73
msgid "**openSUSE**"
msgstr "**openSUSE**"

#: ../../docs/development/compiling/compiling_for_x11.rst:78
msgid "**Solus**"
msgstr "**Solus**"

#: ../../docs/development/compiling/compiling_for_x11.rst:85
msgid "Compiling"
msgstr "コンパイル"

#: ../../docs/development/compiling/compiling_for_x11.rst:87
msgid ""
"Start a terminal, go to the root dir of the engine source code and type:"
msgstr ""
"ターミナルを起動し、エンジンソースコードのルートディレクトリに移動し、次のよ"
"うに入力します:"

#: ../../docs/development/compiling/compiling_for_x11.rst:93
msgid ""
"A good rule of thumb for the ``-j`` (*jobs*) flag, is to have at least as "
"many threads compiling Godot as you have cores in your CPU, if not one or "
"two more. Feel free to add the ``-j`` option to any SCons command you see "
"below."
msgstr ""
"``-j`` (*jobs ジョブ*) フラグに関する経験則は、GodotのコンパイルにはCPUのコア"
"数だけスレッドを割り当てるべきということです。そこからさらに一つか二つ追加し"
"てもいいでしょう。下記にあるSConsコマンドのいずれにも自由に -j オプションを付"
"けてください。"

#: ../../docs/development/compiling/compiling_for_x11.rst:97
msgid ""
"If all goes well, the resulting binary executable will be placed in the \"bin"
"\" subdirectory. This executable file contains the whole engine and runs "
"without any dependencies. Executing it will bring up the project manager."
msgstr ""
"すべてがうまくいけば、結果として得られるバイナリ実行可能ファイルは「bin」サブ"
"ディレクトリに配置されます。この実行可能ファイルにはエンジン全体が含まれてお"
"り、依存関係なしで実行されます。実行すると、プロジェクトマネージャが呼び出さ"
"れます。"

#: ../../docs/development/compiling/compiling_for_x11.rst:104
msgid "If you wish to compile using Clang rather than GCC, use this command:"
msgstr ""
"GCCではなくClangを使用してコンパイルする場合は、次のコマンドを使用します:"

#: ../../docs/development/compiling/compiling_for_x11.rst:110
msgid ""
"Using Clang appears to be a requirement for OpenBSD, otherwise fonts would "
"not build."
msgstr ""
"Clangを使うことはOpenBSDの要件のようで、そうしないとフォントが作れません。"

#: ../../docs/development/compiling/compiling_for_x11.rst:113
msgid ""
"If you are compiling Godot for production use, then you can make the final "
"executable smaller and faster by adding the SCons option "
"``target=release_debug``."
msgstr ""
"制作に使うGodotをコンパイルするなら、SConsのオプション "
"``target=release_debug`` を追加すれば、より小さくて高速な実行ファイルにするこ"
"とができます。"

#: ../../docs/development/compiling/compiling_for_x11.rst:117
#, fuzzy
msgid ""
"If you are compiling Godot with GCC, you can make the binary even smaller "
"and faster by adding the SCons option ``use_lto=yes``. As link-time "
"optimization is a memory-intensive process, this will require about 3 GB of "
"available RAM while compiling."
msgstr ""
"GodotをMinGWでコンパイルするなら、SConsのオプション ``use_lto=yes`` を追加す"
"れば、さらに小さくて高速なバイナリにすることができます。リンク時最適化には大"
"量のメモリを消費するので、およそ 3GB の使用可能なRAMを必要とします。"

#: ../../docs/development/compiling/compiling_for_x11.rst:123
msgid "Building export templates"
msgstr "エクスポートテンプレートの構築"

#: ../../docs/development/compiling/compiling_for_x11.rst:125
msgid ""
"Linux binaries usually won't run on distributions that are older than the "
"distribution they were built on. If you wish to distribute binaries that "
"work on most distributions, you should build them on an old distribution "
"such as Ubuntu 16.04. You can use a virtual machine or a container to set up "
"a suitable build environment."
msgstr ""
"Linuxのバイナリは通常、ビルドしたディストリビューションより古いディストリ"
"ビューションでは動きません。もし大抵のディストリビューションで動作するバイナ"
"リを配布したいなら、Ubuntu 16.04のような古いディストリビューションでビルドす"
"るべきでしょう。バーチャルマシンやコンテナを使えば、適切なビルド環境をセット"
"アップできます。"

#: ../../docs/development/compiling/compiling_for_x11.rst:133
msgid ""
"To build X11 (Linux, \\*BSD) export templates, run the build system with the "
"following parameters:"
msgstr ""
"X11(Linux、\\*BSD)エクスポートテンプレートをビルドするには、次のパラメーター"
"を使用してビルド システムを実行します:"

#: ../../docs/development/compiling/compiling_for_x11.rst:136
msgid "(32 bits)"
msgstr "(32ビット)"

#: ../../docs/development/compiling/compiling_for_x11.rst:143
msgid "(64 bits)"
msgstr "(64ビット)"

#: ../../docs/development/compiling/compiling_for_x11.rst:150
msgid ""
"Note that cross-compiling for the opposite bits (64/32) as your host "
"platform is not always straight-forward and might need a chroot environment."
msgstr ""
"注意点として、現在のホスト プラットフォームの反対のビット(64/32)へのクロスコ"
"ンパイルは、簡単にいくとは限らず、chroot環境が必要になるかもしれません。"

#: ../../docs/development/compiling/compiling_for_x11.rst:153
msgid ""
"To create standard export templates, the resulting files must be copied to:"
msgstr ""
"標準のエクスポート テンプレートを作成するには、結果のファイルを次の場所にコ"
"ピーする必要があります:"

#: ../../docs/development/compiling/compiling_for_x11.rst:159
msgid ""
"and named like this (even for \\*BSD which is seen as \"Linux X11\" by "
"Godot):"
msgstr ""
"そして、このように命名されます (Godotでは\\*BSD の場合も「Linux X11」と見なさ"
"れます):"

#: ../../docs/development/compiling/compiling_for_x11.rst:168
msgid ""
"However, if you are writing your custom modules or custom C++ code, you "
"might instead want to configure your binaries as custom export templates "
"here:"
msgstr ""
"ただし、カスタムモジュールまたはカスタムC++ コードを作成する場合は、ここでカ"
"スタムエクスポート テンプレートとしてバイナリを構成する必要があります:"

#: ../../docs/development/compiling/compiling_for_x11.rst:174
msgid ""
"You don't even need to copy them, you can just reference the resulting files "
"in the ``bin/`` directory of your Godot source folder, so the next time you "
"build, you automatically have the custom templates referenced."
msgstr ""
"この場合はコピーする必要はなく、Godotのソースフォルダ内にある ``bin\\`` ディ"
"レクトリに出力されたファイルを指定するだけです。こうすれば、次にビルドした時"
"も、自動的にカスタム テンプレートを参照するようになります。"

#: ../../docs/development/compiling/compiling_for_x11.rst:179
msgid "Using Clang and LLD for faster development"
msgstr ""

#: ../../docs/development/compiling/compiling_for_x11.rst:181
msgid ""
"You can also use Clang and LLD to build Godot. This has two upsides compared "
"to the default GCC + GNU ld setup:"
msgstr ""

#: ../../docs/development/compiling/compiling_for_x11.rst:184
msgid ""
"LLD links Godot significantly faster compared to GNU ld or gold. This leads "
"to faster iteration times."
msgstr ""

#: ../../docs/development/compiling/compiling_for_x11.rst:186
msgid "Clang tends to give more useful error messages compared to GCC."
msgstr ""

#: ../../docs/development/compiling/compiling_for_x11.rst:188
#, fuzzy
msgid ""
"To do so, install Clang and the ``lld`` package from your distribution's "
"package manager then use the following SCons command::"
msgstr ""
"**Linux:** ほとんどのディストリビューションでは、ディストリビューションのパッ"
"ケージマネージャーから ``gettext`` パッケージをインストールします。"

#: ../../docs/development/compiling/compiling_for_x11.rst:193
msgid ""
"It's still recommended to use GCC for production builds as they can be "
"compiled using link-time optimization, making the resulting binaries smaller "
"and faster."
msgstr ""
