# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-27 13:49+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:4
msgid "GDScript style guide"
msgstr "Посібник зі стилю GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:6
msgid ""
"This style guide lists conventions to write elegant GDScript. The goal is to "
"encourage writing clean, readable code and promote consistency across "
"projects, discussions, and tutorials. Hopefully, this will also support the "
"development of auto-formatting tools."
msgstr ""
"У цьому посібнику зі стилю перелічені умовні домовленості для написання "
"елегантного коду GDScript. Мета посібника - заохотити писати чистий, "
"читабельний код та сприяти узгодженню між проектами, дискусіями та "
"навчальними матеріалами. Сподіваємось, це також підтримає розробку "
"інструментів автоматичного форматування."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:11
msgid ""
"Since GDScript is close to Python, this guide is inspired by Python's `PEP 8 "
"<https://www.python.org/dev/peps/pep-0008/>`__ programming style guide."
msgstr ""
"Оскільки GDScript близький до Python, цей посібник брав за зразок посібник "
"зі стилю програмування Python `PEP 8 <https://www.python.org/dev/peps/"
"pep-0008/>`__."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:15
msgid ""
"Style guides aren't meant as hard rulebooks. At times, you may not be able "
"to apply some of the guidelines below. When that happens, use your best "
"judgment, and ask fellow developers for insights."
msgstr ""
"Посібники зі стилів не розглядаються як жорсткі правила. Часом ви не зможете "
"застосувати деякі наведені нижче вказівки. Коли це станеться, використовуйте "
"найкраще рішення та запитайте в колег-розробників їх думку."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:19
msgid ""
"In general, keeping your code consistent in your projects and within your "
"team is more important than following this guide to a tee."
msgstr ""
"Загалом, стабільне дотримання визначеного стилю у ваших проектах, та серед "
"вашої команди, важливіше, ніж дотримання цього посібника."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:22
msgid ""
"Godot's built-in script editor uses a lot of these conventions by default. "
"Let it help you."
msgstr ""
"Вбудований в Godot редактор скриптів використовує багато цих умов за "
"замовчуванням. Нехай це вам допоможе."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:25
msgid "Here is a complete class example based on these guidelines:"
msgstr "Ось повний приклад класу на основі цих вказівок:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:94
msgid "Formatting"
msgstr "Форматування"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:97
msgid "Encoding and special characters"
msgstr "Кодування та спеціальні символи"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:99
msgid ""
"Use line feed (**LF**) characters to break lines, not CRLF or CR. *(editor "
"default)*"
msgstr ""
"Використовуйте символи зміни рядка (**LF**) для переривання рядків, не CRLF, "
"чи CR. *(за замовчуванням редактора)*"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:100
msgid "Use one line feed character at the end of each file. *(editor default)*"
msgstr ""
"Використовуйте символи зміни рядка в кінці кожного файлу. *(за замовчуванням "
"редактора*)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:101
msgid ""
"Use **UTF-8** encoding without a `byte order mark <https://en.wikipedia.org/"
"wiki/Byte_order_mark>`_. *(editor default)*"
msgstr ""
"Використовуйте кодування **UTF-8** без `маркера порядку байтів <https://en."
"wikipedia.org/wiki/Byte_order_mark>`_. *(за замовчування редактора)*"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:102
msgid "Use **Tabs** instead of spaces for indentation. *(editor default)*"
msgstr ""
"Використовуйте для відступів **Tab** замість пробілів. *(за замовчуванням "
"редактора)*"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:105
msgid "Indentation"
msgstr "Відступи"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:107
msgid "Each indent level should be one greater than the block containing it."
msgstr ""
"Кожен рівень відступу повинен бути на один відступ більшим, ніж блок, що "
"містить його."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:109
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:129
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:148
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:201
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:225
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:272
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:302
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:327
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:347
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:373
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:697
msgid "**Good**:"
msgstr "**Правильно**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:116
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:137
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:171
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:212
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:231
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:282
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:309
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:334
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:354
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:383
#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:705
msgid "**Bad**:"
msgstr "**Неправильно**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:126
msgid ""
"Use 2 indent levels to distinguish continuation lines from regular code "
"blocks."
msgstr ""
"Використовуйте 2 відступи, щоб відрізнити рядки продовження від звичайних "
"блоків коду."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:145
msgid ""
"Exceptions to this rule are arrays, dictionaries, and enums. Use a single "
"indentation level to distinguish continuation lines:"
msgstr ""
"Виняток із цього правила - це масиви, словники та перерахунки. "
"Використовуйте один відступ, щоб виділити рядки продовження:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:195
msgid "Trailing comma"
msgstr "Заключна кома"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:197
msgid ""
"Use a trailing comma on the last line in arrays, dictionaries, and enums. "
"This results in easier refactoring and better diffs in version control as "
"the last line doesn't need to be modified when adding new elements."
msgstr ""
"Використовуйте заключну кому в останньому рядку в масивах, словниках та "
"перерахунках. Це спрощує рефакторинг та покращення в пізніших версіях, "
"оскільки останній рядок не потрібно змінювати при додаванні нових елементів."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:223
msgid ""
"Trailing commas are unnecessary in single-line lists, so don't add them in "
"this case."
msgstr ""
"У однорядкових списках заключні коми не потрібні, тому не додавайте їх у "
"цьому випадку."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:238
msgid "Blank lines"
msgstr "Порожні рядки"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:240
msgid "Surround functions and class definitions with two blank lines:"
msgstr "Використовуйте по два порожніх рядка між функціями та класами:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:255
msgid "Use one blank line inside functions to separate logical sections."
msgstr ""
"Використовуйте один порожній рядок всередині функцій для розділення логічних "
"блоків."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:258
msgid "Line length"
msgstr "Довжина рядка"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:260
msgid "Keep individual lines of code under 100 characters."
msgstr "Зберігайте в окремих рядках коду не більше 100 символів."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:262
msgid ""
"If you can, try to keep lines under 80 characters. This helps to read the "
"code on small displays and with two scripts opened side-by-side in an "
"external text editor. For example, when looking at a differential revision."
msgstr ""
"Якщо можете, спробуйте тримати в рядках не більше 80 символів. Це допомагає "
"читати код на невеликих дисплеях та з двома скриптами, відкритими поруч у "
"зовнішньому текстовому редакторі. Наприклад, щоб переглянути на наявність "
"різниці."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:267
msgid "One statement per line"
msgstr "Одне твердження на рядок"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:269
msgid ""
"Never combine multiple statements on a single line. No, C programmers, not "
"even with a single line conditional statement."
msgstr "Ніколи не комбінуйте кілька тверджень в одному рядку."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:290
msgid "The only exception to that rule is the ternary operator:"
msgstr "Єдиним винятком із цього правила є потрійний оператор:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:297
msgid "Avoid unnecessary parentheses"
msgstr "Уникайте непотрібних дужок"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:299
msgid ""
"Avoid parentheses in expressions and conditional statements. Unless "
"necessary for order of operations, they only reduce readability."
msgstr ""
"Уникайте дужок у виразах та умовних твердженнях, за винятком ситуацій, коли "
"вони потрібні для визначення порядку операцій, в інших випадках вони лише "
"знижують читабельність."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:317
msgid "Boolean operators"
msgstr "Логічні (булеві) оператори"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:319
msgid ""
"Prefer the plain English versions of boolean operators, as they are the most "
"accessible:"
msgstr ""
"Віддавайте перевагу звичайним англійським версіям логічних операторів, "
"оскільки вони є найбільш зручними:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:321
msgid "Use ``and`` instead of ``&&``."
msgstr "Використовуйте ``and`` замість ``&&``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:322
msgid "Use ``or`` instead of ``||``."
msgstr "Використовуйте ``or`` замість ``||``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:324
msgid ""
"You may also use parentheses around boolean operators to clear any "
"ambiguity. This can make long expressions easier to read."
msgstr ""
"Ви також можете використовувати дужки навколо логічних операторів, щоб "
"уникнути будь-якої неоднозначності. Це може полегшити читання довгих виразів."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:342
msgid "Comment spacing"
msgstr "Пробіл коментаря"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:344
msgid ""
"Regular comments should start with a space, but not code that you comment "
"out. This helps differentiate text comments from disabled code."
msgstr ""
"Регулярні коментарі повинні починатися з пробілу, але не код, який ви "
"закоментовуєте. Це допомагає відрізняти текстові коментарі від відключеного "
"коду."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:363
msgid ""
"In the script editor, to toggle the selected code commented, press :kbd:"
"`Ctrl + K`. This feature adds a single # sign at the start of the selected "
"lines."
msgstr ""
"У редакторі скриптів можна закоментувати цілу ділянку вибраного коду за "
"допомогою натискання :kbd:`Ctrl + K`. Ця дія додає знак # на початку всіх "
"вибраних рядків."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:368
msgid "Whitespace"
msgstr "Пробіли"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:370
msgid ""
"Always use one space around operators and after commas. Also, avoid extra "
"spaces in dictionary references and function calls."
msgstr ""
"Завжди використовуйте один пробіл навколо операторів і після коми. Також "
"уникайте зайвих пробілів у посиланнях на словники та викликах функцій."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:393
msgid "Don't use spaces to align expressions vertically:"
msgstr "Не використовуйте пробіли для вирівнювання виразів по вертикалі:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:402
msgid "Quotes"
msgstr "Лапки"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:404
msgid ""
"Use double quotes unless single quotes make it possible to escape fewer "
"characters in a given string. See the examples below:"
msgstr ""
"Використовуйте подвійні лапки, за винятком випадків, коли подвійні лапки "
"треба вивести, як текст, на екрані. Дивіться приклади нижче:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:424
msgid "Naming conventions"
msgstr "Конвенції іменування"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:426
msgid ""
"These naming conventions follow the Godot Engine style. Breaking these will "
"make your code clash with the built-in naming conventions, leading to "
"inconsistent code."
msgstr ""
"Ці конвенції іменування відповідають стилю Godot Engine. Якщо їх порушити, "
"ваш код зіткнеться із вбудованими конвенціями іменування, що призведе до "
"непослідовного коду."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:431
#, fuzzy
msgid "File names"
msgstr "В'єтнамська"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:433
msgid ""
"Use snake_case for file names. For named classes, convert the PascalCase "
"class name to snake_case::"
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:446
msgid ""
"This is consistent with how C++ files are named in Godot's source code. This "
"also avoids case sensitivity issues that can crop up when exporting a "
"project from Windows to other platforms."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:451
msgid "Classes and nodes"
msgstr "Класи та вузли"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:453
msgid "Use PascalCase for class and node names:"
msgstr ""
"Використовуйте PascalCase (всі слова разом та з великої букви) для імен "
"класів та вузлів:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:459
msgid "Also use PascalCase when loading a class into a constant or a variable:"
msgstr ""
"Також використовуйте PascalCase під час завантаження класу в константу чи "
"змінну:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:466
msgid "Functions and variables"
msgstr "Функції та змінні"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:468
msgid "Use snake\\_case to name functions and variables:"
msgstr ""
"Використовуйте snake\\_case (всі слова з маленької букви відокремлені "
"підкресленням) для назв функцій та змінних:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:475
msgid ""
"Prepend a single underscore (\\_) to virtual methods functions the user must "
"override, private functions, and private variables:"
msgstr ""
"Додайте одне підкреслення (\\_) до функцій віртуальних методів, якими "
"користувач повинен перекривати, приватні функції та приватні змінні:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:484
msgid "Signals"
msgstr "Сигнали"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:486
msgid "Use the past tense to name signals:"
msgstr "Давайте сигналам імена в минулому часі:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:494
msgid "Constants and enums"
msgstr "Константи і перерахунки"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:496
msgid ""
"Write constants with CONSTANT\\_CASE, that is to say in all caps with an "
"underscore (\\_) to separate words:"
msgstr ""
"Записуйте константи в стилі CONSTANT\\_CASE (всі букви написані з великим "
"регістром, слова відокремлені підкресленням (\\_)):"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:503
msgid ""
"Use PascalCase for enum *names* and CONSTANT\\_CASE for their members, as "
"they are constants:"
msgstr ""
"Використовуйте PascalCase для *імен* перерахунків та CONSTANT\\_CASE для їх "
"членів, оскільки ті є константами:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:517
msgid "Code order"
msgstr "Порядок коду"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:519
msgid ""
"This first section focuses on code order. For formatting, see :ref:"
"`formatting`. For naming conventions, see :ref:`naming_conventions`."
msgstr ""
"Цей перший розділ присвячений порядку коду. Для форматування дивіться :ref:"
"`formatting`. Про конвенції іменування дивіться :ref:`naming_conventions`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:522
msgid "We suggest to organize GDScript code this way:"
msgstr "Ми пропонуємо організувати код GDScript таким чином:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:545
msgid ""
"We optimized the order to make it easy to read the code from top to bottom, "
"to help developers reading the code for the first time understand how it "
"works, and to avoid errors linked to the order of variable declarations."
msgstr ""
"Ми оптимізували порядок, щоб полегшити читання коду зверху вниз, щоб "
"допомогти розробникам, які вперше читають код, зрозуміти, як він працює, та "
"уникнути помилок, пов'язаних із порядком оголошення змінних."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:549
msgid "This code order follows four rules of thumb:"
msgstr "Цей порядок коду відповідає чотирьом правилам:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:551
msgid "Properties and signals come first, followed by methods."
msgstr "Першими стають властивості та сигнали, а потім - методи."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:552
msgid "Public comes before private."
msgstr "Загальнодоступні йдуть перед приватними."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:553
msgid "Virtual callbacks come before the class's interface."
msgstr "Віртуальні зворотні виклики йдуть перед інтерфейсом класу."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:554
msgid ""
"The object's construction and initialization functions, ``_init`` and "
"``_ready``, come before functions that modify the object at runtime."
msgstr ""
"Конструктори об'єктів та ініціалізації функцій, ``_init`` і ``_ready``, "
"перед функціями, що змінюють об'єкт під час виконання."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:559
msgid "Class declaration"
msgstr "Оголошення класу"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:561
msgid ""
"If the code is meant to run in the editor, place the ``tool`` keyword on the "
"first line of the script."
msgstr ""
"Якщо код призначений для запуску в редакторі, розмістіть ключове слово "
"``tool`` в першому рядку скрипта."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:564
msgid ""
"Follow with the `class_name` if necessary. You can turn a GDScript file into "
"a global type in your project using this feature. For more information, see :"
"ref:`doc_gdscript`."
msgstr ""
"Далі, якщо потрібно, `class_name`. Ви можете перетворити файл GDScript у "
"глобальний тип свого проекту за допомогою цієї функції. Для отримання "
"додаткової інформації дивіться :ref:`doc_gdscript`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:568
msgid "Then, add the `extends` keyword if the class extends a built-in type."
msgstr ""
"Потім додайте ключове слово `extens`, якщо клас розширює вбудований тип."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:570
msgid ""
"Following that, you should have the class's optional docstring as comments. "
"You can use that to explain the role of your class to your teammates, how it "
"works, and how other developers should use it, for example."
msgstr ""
"Слідом за цим у вас можуть бути додаткові коментарі, які пояснюють клас. Ви "
"можете використовувати їх для пояснення ролі свого класу товаришам по "
"команді, та того, як він працює та як, наприклад, інші розробники повинні "
"використовувати його."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:582
msgid "Signals and properties"
msgstr "Сигнали та властивості"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:584
msgid ""
"Write signal declarations, followed by properties, that is to say, member "
"variables, after the docstring."
msgstr "Записуйте оголошення сигналу, далі властивості, тобто змінні-члени."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:587
msgid ""
"Enums should come after signals, as you can use them as export hints for "
"other properties."
msgstr ""
"Перерахунки повинні йти за сигналами, оскільки ви можете використовувати їх "
"як підказки щодо експорту інших властивостей."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:590
msgid ""
"Then, write constants, exported variables, public, private, and onready "
"variables, in that order."
msgstr ""
"Потім записуйте константи, експортовані змінні, загальнодоступні, приватні "
"та onready змінні, в такому порядку."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:615
msgid ""
"The GDScript compiler evaluates onready variables right before the "
"``_ready`` callback. You can use that to cache node dependencies, that is to "
"say, to get child nodes in the scene that your class relies on. This is what "
"the example above shows."
msgstr ""
"Компілятор GDScript оцінює готові змінні безпосередньо перед зворотним "
"викликом ``_ready``. Ви можете використовувати це для кешування залежностей "
"вузлів, тобто для отримання дочірніх вузлів у сцені, на яку покладається ваш "
"клас. Це демонструє приклад вище."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:621
#, fuzzy
msgid "Member variables"
msgstr "Змінні середовища"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:623
msgid ""
"Don't declare member variables if they are only used locally in a method, as "
"it makes the code more difficult to follow. Instead, declare them as local "
"variables in the method's body."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:628
#, fuzzy
msgid "Local variables"
msgstr "Локальні змінні"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:630
msgid ""
"Declare local variables as close as possible to their first use. This makes "
"it easier to follow the code, without having to scroll too much to find "
"where the variable was declared."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:635
msgid "Methods and static functions"
msgstr "Методи і статичні функції"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:637
msgid "After the class's properties come the methods."
msgstr "Після властивостей класу йдуть методи."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:639
msgid ""
"Start with the ``_init()`` callback method, that the engine will call upon "
"creating the object in memory. Follow with the ``_ready()`` callback, that "
"Godot calls when it adds a node to the scene tree."
msgstr ""
"Почніть з методу зворотного виклику ``_init()``, який движок викликає при "
"створенні об'єкта в пам'яті. Далі ``_ready()``, який Godot викликає, коли "
"додає вузол до дерева сцен."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:643
msgid ""
"These function should come first because they show how the object is "
"initialized."
msgstr ""
"Ці функції повинні бути першими, оскільки вони показують, як об'єкт "
"ініціалізується."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:646
msgid ""
"Other built-in virtual callbacks, like ``_unhandled_input()`` and "
"``_physics_process``, should come next. These control the object's main loop "
"and interactions with the game engine."
msgstr ""
"Інші вбудовані віртуальні зворотні виклики, як-от ``_unhandled_input()`` і "
"``_physics_process``, мають стати наступними. Вони керують основним циклом "
"об'єкта та взаємодією з ігровим движком."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:650
msgid ""
"The rest of the class's interface, public and private methods, come after "
"that, in that order."
msgstr ""
"Решта класу, публічні та приватні методи, йдуть після цього в такому порядку."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:687
msgid "Static typing"
msgstr "Статична типізація"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:689
msgid ""
"Since Godot 3.1, GDScript supports :ref:`optional static "
"typing<doc_gdscript_static_typing>`."
msgstr ""
"Оскільки Godot 3.1, GDScript підтримує :ref:`необов'язкову статичну "
"типізацію<doc_gdscript_static_typing>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:692
#, fuzzy
msgid "Type hints"
msgstr "Тип"

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:694
msgid ""
"Place the colon right after the variable's name, without a space, and let "
"the GDScript compiler infer the variable's type when possible."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:713
msgid ""
"When you let the compiler infer the type hint, write the colon and equal "
"signs together: ``:=``."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_styleguide.rst:719
msgid ""
"Add a space on either sides of the return type arrow when defining functions."
msgstr ""
