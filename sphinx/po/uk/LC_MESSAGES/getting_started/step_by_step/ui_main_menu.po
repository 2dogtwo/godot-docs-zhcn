# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-19 11:09+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:4
msgid "Design a title screen"
msgstr "Дизайн титульного екрана"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:6
msgid ""
"In the next two tutorials, you will build two responsive UI (user interface) "
"scenes step-by-step using the engine's UI system:"
msgstr ""
"У наступних двох уроках ви поетапно побудуєте дві чутливі сцени інтерфейсу, "
"використовуючи систему інтерфейсу двигуна:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:9
msgid "A main menu."
msgstr "Головне меню."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:10
msgid "A game UI with a health bar, energy bar, bomb and money counters."
msgstr ""
"Ігровий інтерфейс із шкалою здоров'я, енергії, лічильниками бомб та грошей."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:12
msgid ""
"You will learn how to design game UIs efficiently, and how to use Godot's "
"Control nodes. This page focuses on the visual part: everything you do from "
"the editor. To learn how to code a life bar, read :doc:`ui_code_a_life_bar`."
msgstr ""
"Ви дізнаєтесь, як ефективно конструювати ігрові інтерфейси та як "
"використовувати вузли управління Godot. Ця сторінка зосереджена на "
"візуальній частині всього, що ви робите з допомогою редактора. Щоб "
"дізнатися, як кодувати шкалу життя, читайте :doc:`ui_code_a_life_bar`."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:20
msgid "The GUI you're going to create."
msgstr "Графічний інтерфейс, який ви будете створювати."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:22
msgid ""
"Download the project files: :download:`ui_main_menu_design.zip <files/"
"ui_main_menu_design.zip>` and extract the archive. Import the ``start/`` "
"project in Godot to follow this tutorial. The ``end/`` folder contains the "
"final result. You'll find all the sprites in the ``start/assets/main_menu`` "
"folder."
msgstr ""
"Завантажте файли проєкту: :download:`ui_main_menu_design.zip <files/"
"ui_main_menu_design.zip>` і витягніть архів. Імпортуйте проєкт ``start/`` у "
"Godot, щоб виконати цей урок. ``end/`` містить кінцевий результат. В теці "
"``start/assets/main_menu`` ви знайдете всі спрайти."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:30
msgid ""
"Read the :doc:`ui_introduction_to_the_ui_system` first to learn how Godot's "
"UI system works."
msgstr ""
"Прочитайте спочатку :doc:`ui_introduction_to_the_ui_system`, щоб дізнатися, "
"як працює система користувацького інтерфейсу Godot."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:34
msgid "How to design your game UI"
msgstr "Як розробляти свій ігровий інтерфейс"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:36
msgid ""
"To design a good UI, you want to come up with a rough mockup first: a plain "
"drawing version that focuses on the placement of your UI components, their "
"size, and user interaction. Pen and paper is all you need. You shouldn't use "
"fancy and final graphics at this stage. Then, you only need simple "
"placeholder sprites and you're good to jump into Godot. You want to make "
"sure the players can find their way around the interface using those "
"placeholders."
msgstr ""
"Щоб створити хороший інтерфейс користувача, потрібно спершу придумати грубий "
"макет: намалюйте просту версію, яка зосереджена на розміщенні компонентів "
"вашого інтерфейсу, їх розмірах та взаємодії з користувачем. Ручка і папір - "
"все, що вам потрібно. На цьому етапі не слід використовувати вигадливу та "
"остаточну графіку. Далі вам потрібні лише прості спрайти-заповнювачі "
"розміщені в Godot. Ви маєте переконатися, що ваш інтерфейс зручний."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:46
msgid "The UI's rough plan or mockup"
msgstr "Приблизний план або макет інтерфейсу"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:48
msgid ""
"Placeholder doesn't have to mean ugly, but you should keep the graphics "
"simple and clean. Avoid special effects, animation, and detailed "
"illustration before you have players playtest your UI. Otherwise:"
msgstr ""
"Заповнювачі не повинні бути негарними, але ви повинні підтримувати графіку "
"простою та чистою. Уникайте спеціальних ефектів, анімації та детальних "
"ілюстрацій, перш ніж гравці почнуть використовувати ваш інтерфейс. Інакше:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:52
msgid ""
"The graphics might skew the players' perception of the experience and you'll "
"miss out on valuable feedback."
msgstr ""
"Графіка може викривити у гравців сприйняття гри, і ви втратите позитивні "
"відгуки."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:54
msgid "If the User Experience doesn't work, you'll have to redo some sprites."
msgstr ""
"Якщо інтерфейс не працює належним чином, вам доведеться переробити деякі "
"спрайти."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:58
msgid ""
"Always try to make the interface work with simple text and boxes first. It's "
"easy to replace the textures later. Professional UX designers often work "
"with plain outlines and boxes in greyscale. When you take colors and fancy "
"visuals away, it's a lot easier to size and place UI elements properly. It "
"helps you refine the design foundation you'll build upon."
msgstr ""
"Завжди намагайтеся спочатку змусити інтерфейс працювати з простим текстом і "
"полями. Пізніше замінити текстури легко. Професійні дизайнери UX часто "
"працюють із звичайними контурами та коробочками у відтінках сірого. Без "
"кольорів та вишуканих візуальних зображень, набагато простіше розмістити та "
"розмістити елементи інтерфейсу належним чином. Це допомагає вдосконалити "
"фундамент проєкту, який ви будете розробляти."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:65
msgid "There are two ways to design your UI in Godot. You can:"
msgstr "Існує два способи проєктування вашого інтерфейсу в Godot. Ви можете:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:67
msgid ""
"Build it all in a single scene, and eventually save some branches as "
"reusable scenes."
msgstr ""
"Створити все в одній сцені, а згодом зберегти деякі її гілки, як окремі "
"сцени, для багаторазового використання."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:69
msgid ""
"Build template scenes for reusable components and create specific components "
"that inherit from your base scenes."
msgstr ""
"Побудувати шаблони сцен для багаторазових компонентів та створити конкретні "
"компоненти на основі цих шаблонів."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:72
msgid ""
"We will use the first approach, because the first version of your UI may not "
"work as well as you'd like. You're likely to throw parts away and redesign "
"components as you go. When you're sure everything works, it's easy to make "
"some parts reusable, as you'll see below."
msgstr ""
"Ми будемо використовувати перший підхід, оскільки перша версія вашого "
"інтерфейсу може працювати не так добре, як вам хотілося б. Ви, ймовірно, "
"будете викидати певні деталі та переробляти окремі компоненти. Коли ви "
"будете впевнені, що все працює, то зможете легко зробити необхідні частини "
"багаторазовими, як побачите нижче."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:79
msgid ""
"The files you'll find in Godot. The graphics look cleaner than on the rough "
"design, but they're still placeholders."
msgstr ""
"Файли, які ви знайдете в Godot. Графіка виглядає краще, ніж на чернетці, але "
"все ще потребує вдосконалення."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:83
msgid "Design the main menu"
msgstr "Проєктування головного меню"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:85
msgid ""
"Before we jump into the editor, we want to plan how we'll nest containers "
"based on our mockup image."
msgstr ""
"Перш ніж зайти в редактор, слід, на основі нашого макета, спланувати, як "
"вкладати контейнери."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:89
#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:292
msgid "Break down the UI mockup"
msgstr "Розбивання макета інтерфейсу"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:91
msgid "Here are my three rules of thumb to find the right containers:"
msgstr "Ось три правила, завдяки яким я підбираю правильні контейнери:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:93
msgid ""
"Break down the UI into nested boxes, from the largest that contains "
"everything, to the smallest ones, that encompass one widget, like a bar with "
"its label, a panel or a button."
msgstr ""
"Розбийте інтерфейс на вкладені поля - від найбільшого, що містить усе, до "
"найменших, що містять один віджет, як-от шкалу, панель, чи кнопку."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:96
msgid "If there's some padding around an area, use a ``MarginContainer``."
msgstr ""
"Якщо навколо області є якийсь простір, використовуйте ``MarginContainer``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:97
msgid ""
"If the elements are arranged in rows or columns, use an ``HBoxContainer`` or "
"``VBoxContainer``."
msgstr ""
"Якщо елементи розташовані в рядках, або стовпцях, використовуйте "
"``HBoxContainer``, або ``VBoxContainer``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:100
msgid ""
"These rules are enough to get us started, and work well for simple "
"interfaces."
msgstr ""
"Цих правил достатньо, щоб почати і успішно працювати з простими інтерфейсами."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:103
msgid ""
"For the main menu, the largest box is the entire game window. There's "
"padding between the edges of the window and the first components: this "
"should be a ``MarginContainer``. Then, the screen is split into two columns, "
"so we'll use an ``HBoxContainer``. In the left column, we'll manage the rows "
"with a ``VBoxContainer``. And in the right column, we'll center the "
"illustration with a ``CenterContainer``."
msgstr ""
"В головному меню найбільшим полем є все вікно гри. Між краями вікна та "
"першими компонентами є відступи: це має бути a ``MarginContainer``. Потім "
"екран розбивається на два стовпці, тому ми будемо використовувати "
"``HBoxContainer``. У лівому стовпці ми будемо керувати рядками з допомогою "
"``VBoxContainer``. І в правому стовпці ми будемо центрувати ілюстрацію з "
"допомогою ``CenterContainer``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:112
msgid "Interface building blocks, broken down using the three rules of thumb."
msgstr "Інтерфейсні блоки, розбиті за допомогою трьох правил."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:116
msgid ""
"Containers adapt to the window's resolution and width-to-height ratio. "
"Although we could place UI elements by hand, containers are faster, more "
"precise, and **responsive**."
msgstr ""
"Контейнери адаптуються до роздільної здатності вікна та співвідношення "
"ширини до висоти. Хоча ми могли б помістити елементи інтерфейсу вручну, "
"використання контейнерів швидше, точніше і **чутливіше**."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:121
msgid "Prepare the Main Menu scene"
msgstr "Підготовка сцени головного меню"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:125
msgid ""
"This tutorial is based on a window size of 1366×768. To change the project's "
"base window size, open **Project > Project Settings** at the top of the "
"editor then change **Display > Window > Size > Width** to ``1366`` and "
"**Display > Window > Size > Height** to ``768``."
msgstr ""
"Цей урок базується на розмірі вікна 1366×768. Щоб змінити базовий розмір "
"вікна проєкта, відкрийте **Проєкт > Налаштування проєкта** в верхній частині "
"редактора і змініть **Display > Window > Size > Width** на ``1366`` і "
"**Display > Window > Size > Height** на ``768``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:130
msgid ""
"If you forget to change the window size, anchors and containers may not "
"behave as expected."
msgstr ""
"Якщо ви забудете змінити розмір вікна, прив'язки, чи контейнери можуть "
"повести себе не так, як очікувалося."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:133
msgid ""
"Let's create the main menu. We'll build it in a single scene. To create an "
"empty scene, click on **Scene > New Scene**."
msgstr ""
"Створимо головне меню. Ми побудуємо його в одній сцені. Щоб створити порожню "
"сцену, натисніть **Сцена> Нова сцена**."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:136
msgid ""
"We have to add a root node before we can save the scene. Your UI's root "
"should be the outermost container or element. In this case it's a "
"``MarginContainer``. ``MarginContainer`` is a good starting point for most "
"interfaces, as you often need padding around the UI. Press :kbd:`Ctrl + S` (:"
"kbd:`Cmd + S` on macOS) to save the scene to the disk. Name it *MainMenu*."
msgstr ""
"Ми повинні додати кореневий вузол, перш ніж зможемо зберегти сцену. "
"Кореневий вузол вашого інтерфейсу повинен бути самим зовнішнім контейнером, "
"або елементом. В даному випадку це ``MarginContainer``. ``MarginContainer`` "
"є хорошою відправною точкою для більшості інтерфейсів, оскільки вам часто "
"потрібні відступи довкола інтерфейсу. Натисніть, ``Ctrl+S`` щоб зберегти "
"сцену на диск. Назвіть її *MainMenu*."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:142
msgid ""
"Select the ``MarginContainer`` again, and head to the inspector to define "
"the margins' size. Scroll down the ``Control`` class, to the ``Custom "
"Constants`` section. Unfold it. Set the margins as such:"
msgstr ""
"Виберіть ``MarginContainer`` ще раз і перейдіть до інспектора, щоб визначити "
"розмір полів (відступів). Прокрутіть клас ``Control`` вниз до розділу "
"``Custom Constants``. Розгорніть його. Встановіть поля:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:146
msgid "Margin Right: *120*"
msgstr "Margin Right (Поле справа): *120*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:147
msgid "Margin Top: *80*"
msgstr "Margin Top (Поле зверху): *80*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:148
msgid "Margin Left: *120*"
msgstr "Margin Left (Поле зліва): *120*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:149
msgid "Margin Bottom: *80*"
msgstr "Margin Bottom (Поле знизу): *80*"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:151
msgid ""
"We want the container to fit the window. In the toolbar above the Viewport, "
"open the **Layout** menu and select the last option, **Full Rect**."
msgstr ""
"Ми хочемо, щоб контейнер помістився у вікно. На панелі інструментів над "
"вікном перегляду відкрийте меню **Макет ** та виберіть останній варіант "
"**Увесь прямокутник**."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:155
msgid "Add the UI sprites"
msgstr "Додавання спрайтів до інтерфейсу"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:157
msgid ""
"Select the ``MarginContainer``, and create the UI elements as "
"``TextureRect`` nodes. We need:"
msgstr ""
"Виберіть ``MarginContainer``, і створіть такі вузли інтерфейсу як "
"``TextureRect``. Нам потрібні:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:160
msgid "the title or logo,"
msgstr "назва і логотип,"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:161
msgid "the three text options as individual nodes,"
msgstr "три варіанти тексту в якості окремих вузлів,"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:162
msgid "the version note,"
msgstr "інформація про версію,"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:163
msgid "and the main menu's illustration."
msgstr "і ілюстрація головного меню."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:165
msgid ""
"Click the **Add Node** button or press :kbd:`Ctrl + A` (:kbd:`Cmd + A` on "
"macOS) on your keyboard. Start to type ``TextureRect`` to find the "
"corresponding node and press enter. With the new node selected, press :kbd:"
"`Ctrl + D` (:kbd:`Cmd + D` on macOS) five times to create five extra "
"``TextureRect`` instances."
msgstr ""
"Натисніть кнопку **Додати вузол**, або натисніть ``Ctrl+A`` (:kbd:`Cmd + A` "
"на macOS) на клавіатурі. Почніть вводити, ``TextureRect``, щоб знайти "
"відповідний вузол, і натисніть клавішу Enter. Вибравши новий вузол, "
"натисніть ``Ctrl+D`` (:kbd:`Cmd + D` на macOS) п'ять раз, щоб створити п'ять "
"додаткових екземплярів ``TextureRect``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:170
msgid ""
"Click each of the nodes to select it. In the inspector, find the **Texture** "
"property and click **[empty] > Load**. A file browser opens and lets you "
"pick a sprite to load into the texture slot."
msgstr ""
"Клацніть кожен з вузлів, щоб вибрати його. У інспекторі знайдіть властивість "
"**Texture** та натисніть **[порожньо]> Завантажити**. Відкриється браузер "
"файлів і дозволить вибрати спрайт для встановлення текстури."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:176
msgid "The file browser lets you find and load textures."
msgstr "Браузер файлів дозволяє знаходити та завантажувати текстури."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:178
msgid ""
"Repeat the operation for all ``TextureRect`` nodes. You should have the "
"logo, the illustration, the three menu options and the version note, each as "
"a separate node. Then, double click on each of the nodes in the Scene tab to "
"rename them. Nothing has been placed in containers yet so this should look "
"messy."
msgstr ""
"Повторіть операцію для всіх вузлів ``TextureRect``. У вас повинен бути "
"логотип, ілюстрація, три варіанти меню та інформація про версію, кожен як "
"окремий вузол. Потім двічі клацніть на кожному з вузлів на вкладці Сцена, "
"щоб перейменувати їх. Елементи ще не були поміщені в контейнери, тому "
"виглядають безладно."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:186
msgid "The six nodes with textures loaded."
msgstr "Шість вузлів із завантаженими текстурами."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:190
msgid ""
"If you want to support localization in your game, use ``Labels`` for menu "
"options instead of ``TextureRect``."
msgstr ""
"Якщо ви хочете підтримати локалізацію гри, використовуйте ``Labels`` для "
"параметрів меню замість ``TextureRect``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:194
msgid "Add containers to place UI elements automatically"
msgstr ""
"Додавання контейнерів для автоматичного розміщення елементів інтерфейсу"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:196
#, fuzzy
msgid ""
"Our main menu has some margin around the edges of the screen. It is split in "
"two parts: on the left, you have the logo and the menu options. On the "
"right, you have the characters. We can use one of two containers to achieve "
"this: ``HSplitContainer`` or ``HBoxContainer``. Split containers split the "
"area into two: a left and a right side or a top and a bottom side. They also "
"allow the user to resize the left and right areas using an interactive bar. "
"On the other hand, ``HBoxContainer`` just splits itself into as many columns "
"as it has children. Although you can deactivate the split container's resize "
"behavior, it's recommended to favor box containers."
msgstr ""
"Наше головне меню має деякі поля по краях екрана. Воно розділене на дві "
"частини: зліва ви маєте логотип та параметри меню. Праворуч у вас є "
"ілюстрація. Для поділу ми можемо використовувати один з двох контейнерів: "
"``HSplitContainer``, або ``HBoxContainer``. Ці контейнери ділять область на "
"дві: ліву і праву, або верхню і нижню сторони. Вони також дозволяють "
"користувачеві змінювати розмір лівої та правої областей за допомогою "
"інтерактивної шкали. З іншого боку, ``HBoxContainer`` просто розділяється на "
"стільки колонок, скільки має нащадків. Хоча ви можете дезактивувати "
"можливість зміни розміру Split контейнера, я рекомендую надавати перевагу "
"box контейнерам."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:207
msgid ""
"Select the ``MarginContainer`` and add an ``HBoxContainer``. Then, we need "
"two containers as children of our ``HBoxContainer``: a ``VBoxContainer`` for "
"the menu options on the left, and a ``CenterContainer`` for the illustration "
"on the right."
msgstr ""
"Виберіть ``MarginContainer`` і додайте ``HBoxContainer``. Далі нам потрібні "
"два контейнери, які будуть нащадками ``HBoxContainer``: ``VBoxContainer`` "
"для параметрів меню зліва та ``CenterContainer`` для ілюстрації праворуч."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:214
msgid ""
"You should have four nested containers and the TextureRect nodes sitting "
"aside from it."
msgstr ""
"У вас повинно бути чотири вкладених контейнери та вузли TextureRect, поруч."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:217
msgid ""
"In the node tree, select all the ``TextureRect`` nodes that should go on the "
"left side: the logo, the menu options (Continue, NewGame, Options), and the "
"version note. Drag and drop them into the ``VBoxContainer``. The nodes "
"should position automatically."
msgstr ""
"У дереві вузлів виберіть усі ``TextureRect`` вузли, які мають бути з лівого "
"боку: логотип, параметри меню (Continue, NewGame, Options) та примітку до "
"версії. Перетягніть їх у ``VBoxContainer``. Вузли повинні розташовуватися "
"автоматично."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:224
msgid "Containers automatically place and resize textures"
msgstr "Контейнери автоматично розміщують і змінюють розмір текстур"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:226
msgid "We're left with two problems to solve:"
msgstr "У нас залишаються дві проблеми:"

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:228
msgid "The characters on the right aren't centered."
msgstr "Ілюстрація праворуч не по центру."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:229
msgid "There's no space between the logo and the other UI elements."
msgstr "Між логотипом та іншими елементами інтерфейсу немає місця."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:231
msgid ""
"To center the characters on the right, first select the ``CenterContainer``. "
"Then in the Inspector, scroll down to the **Size Flags** category and click "
"on the field to the right of the **Vertical** property, and check **Expand** "
"in addition to **Fill**. Do the same for the **Horizontal** property. This "
"makes the ``CenterContainer`` expand into all available space while "
"respecting its neighbour ``VBoxContainer``. Finally, drag and drop the "
"Characters node into the ``CenterContainer``. The Characters element will "
"center automatically."
msgstr ""
"Для центрування ілюстрації праворуч спочатку виберіть значок "
"``CenterContainer``. Потім у Інспекторі прокрутіть униз до категорії **Size "
"Flags**, натисніть на поле праворуч від властивості **Vertical** та поставте "
"прапорець **Expand** на додаток до **Fill**. Зробіть те саме для властивості "
"**Horizontal**. Це змушує ``CenterContainer`` розширюватися на весь "
"доступний простір, поважаючи свого сусіда ``VBoxContainer``. Нарешті, "
"перетягніть вузол ілюстрації у ``CenterContainer``. Елемент Characters буде "
"централізовано автоматично."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:242
msgid ""
"The character node centers inside the right half of the screen as soon as "
"you place it inside the CenterContainer."
msgstr ""
"Вузол з картинкою центрований в правій половині екрана після розміщення "
"всередині CenterContainer."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:245
msgid ""
"To space out the menu options and the logo on the left, we'll use one final "
"container and its size flags. Select the ``VBoxContainer`` and press :kbd:"
"`Ctrl + A` (:kbd:`Cmd + A` on macOS) to add a new node inside it. Add a "
"second ``VBoxContainer`` and name it *MenuOptions*. Select all three menu "
"options, ``Continue``, ``NewGame`` and ``Options``, and drag and drop them "
"inside the new ``VBoxContainer``. The UI's layout should barely change, if "
"at all."
msgstr ""
"Щоб додати простору між меню і логотипом, ми використаємо ще один контейнер "
"``VBoxContainer`` і його прапорці розмірів (Size Flags). Виберіть "
"``VBoxContainer`` і натисніть :kbd:`Ctrl+A` (:kbd:`Cmd + A` на macOS), щоб "
"додати в нього новий вузол. Додайте другий ``VBoxContainer`` та назвіть його "
"*MenuOptions*. Виберіть усі три параметри меню ``Continue``, ``NewGame`` і "
"``Options`` та перетягніть їх всередину нового ``VBoxContainer``. Макет "
"інтерфейсу повинен ледь змінитися, якщо він взагалі зміниться."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:255
msgid ""
"Place the new container between the other two nodes to retain the UI's "
"layout."
msgstr ""
"Помістіть новий контейнер між іншими двома вузлами, щоб зберегти макет "
"інтерфейсу користувача."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:258
msgid ""
"Now we grouped the menu options together, we can tell their container to "
"expand to take as much vertical space as possible. Select the "
"``MenuOptions`` node. In the Inspector, scroll down to the **Size Flags** "
"category. Click on the field to the right of the **Vertical** property, and "
"check **Expand** in addition to **Fill**. The container expands to take all "
"the available vertical space while respecting its neighbors, the ``Logo`` "
"and ``Version`` elements."
msgstr ""
"Тепер, коли ми згрупували параметри меню разом, ми можемо змусити їх "
"контейнер розширитись, щоб зайняти якомога більше вертикального простору. "
"Виберіть вузол ``MenuOptions``. У Інспекторі прогорніть униз до розділу "
"**Size Flags**. Клацніть на полі праворуч від властивості **Vertical** і "
"встановіть галочку **Expand** на додаток до **Fill**. Контейнер "
"розширюється, щоб зайняти весь доступний вертикальний простір, поважаючи "
"своїх сусідів, елементи ``Logo`` та ``Version``."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:266
msgid ""
"To center the nodes in the ``VBoxContainer``, scroll to the top of the "
"Inspector and change the **Alignment** property to **Center**."
msgstr ""
"Щоб центрувати вузли у ``VBoxContainer``, прогорніть до вершини Інспектора "
"та змініть властивість **Alignment** (Вирівнювання) на **Center**."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:271
msgid "The menu options should center vertically in the UI's left column."
msgstr ""
"Параметри меню повинні розташовуватися по центрі вертикалі в лівій колонці "
"інтерфейсу користувача."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:273
msgid ""
"To wrap things up, let's add some separation between the menu options. "
"Expand the **Custom Constants** category below **Size Flags**, and click the "
"field next to the **Separation** parameter. Set it to 30. Once you press "
"enter, the **Separation** property becomes active and Godot adds 30 pixels "
"between menu options."
msgstr ""
"На завершення додамо відступи між параметрами меню. Розкрийте категорію "
"**Custom Constants** під **Size Flags** та натисніть поле поруч із "
"параметром **Separation**. Встановіть його на 30. Після натискання клавіші "
"Enter, властивість розділення стане активною, і Godot додасть 30 пікселів "
"між параметрами меню."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:281
msgid "The final interface."
msgstr "Кінцевий інтерфейс."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:283
msgid ""
"Without a single line of code, we have a precise and responsive main menu."
msgstr "Без єдиного рядка коду ми маємо точне та чутливе головне меню."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:286
msgid ""
"Congratulations for getting there! You can download the final menu :download:"
"`ui_main_menu_design.zip <files/ui_main_menu_design.zip>` to compare with "
"your own. In the next tutorial, you'll create a Game User Interface with "
"bars and item counters."
msgstr ""
"Вітаємо з завершенням! Ви можете завантажити остаточний результат :download:"
"`ui_main_menu_design.zip <files/ui_main_menu_design.zip>`, щоб порівняти зі "
"своїм власним. У наступному уроці ви створите Ігровий інтерфейс користувача "
"з шкалами та лічильниками предметів."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:294
msgid ""
"A responsive User Interface is all about making sure our UIs scale well on "
"all screen types. TV screens and computer displays have different sizes and "
"ratios. In Godot, we use containers to control the position and the size of "
"UI elements."
msgstr ""
"Чутливий користувацький інтерфейс означає, що наші інтерфейси масштабуються "
"під всі типи екранів. Екрани телевізорів та екрани комп'ютера мають різні "
"розміри та співвідношення. У Godot ми використовуємо контейнери для контролю "
"положення та розміру елементів інтерфейсу."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:299
msgid ""
"The order in which you nest matters. To see if your UI adapts nicely to "
"different screen ratios, select the root node, press :kbd:`Q` to activate "
"the Select Mode, select the container and click and drag on one of the "
"container's corners to resize it. The UI components should flow inside of it."
msgstr ""
"Порядок, в якому ви розміщуєте вузли, має значення. Щоб побачити, чи ваш "
"інтерфейс користувача добре адаптується до різних співвідношень екрана, "
"виберіть кореневий вузол, натисніть клавішу :kbd:`Q`, щоб активувати режим "
"вибору, виберіть контейнер і натисніть та перетягніть один з кутів "
"контейнера, щоб змінити його розмір. Компоненти інтерфейсу повинні текти "
"всередині нього."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:305
msgid ""
"You'll notice that although containers move sprites around, they don't scale "
"them. This is normal. We want the UI system to handle different screen "
"ratios, but we also need the entire game to adapt to different screen "
"resolutions. To do this, Godot scales the entire window up and down."
msgstr ""
"Ви помітите, що хоча контейнери переміщають спрайти, вони не масштабують їх. "
"Це нормально. Ми хочемо, щоб система інтерфейсу користувалася різними "
"співвідношеннями екранів, але для адаптації до різних роздільних можливостей "
"екрана нам також потрібна вся гра. Для цього Godot масштабує все вікно вгору "
"та вниз."

#: ../../docs/getting_started/step_by_step/ui_main_menu.rst:311
msgid ""
"You can change the scale mode in the project settings: click **Project > "
"Project Settings** in the top menu. In the window's left column, look for "
"the **Display** category. Click on the **Window** sub-category. On the right "
"side of the window, you'll find a **Stretch** section. The three settings, "
"**Mode**, **Aspect**, and **Shrink**, control the screen size. For more "
"information, see :ref:`doc_multiple_resolutions`."
msgstr ""
"Ви можете змінити режим масштабування у параметрах проєкту: натисніть "
"**Проєкт> Параметри проєкту** у верхньому меню. У лівій колонці вікна "
"шукайте розділ **Display** (\"Відображення\"). Клацніть на підрозділ "
"**Window**. У правій частині вікна ви знайдете розділ **Stretch** "
"(Розтягування). Три налаштування **Mode** (Режим), **Aspect** (Аспект), і "
"**Shrink** (Зменшення), керують розміром екрана. Для отримання додаткової "
"інформації дивіться :ref:`doc_multiple_resolutions`."
