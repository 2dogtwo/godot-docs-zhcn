# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-02 13:32+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:4
#, fuzzy
msgid "Design the GUI"
msgstr "Дизайн графічного інтерфейсу"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:6
#, fuzzy
msgid ""
"Now that you've nailed the basics, we're going to see how to build a game "
"Graphical User Interface (GUI) with reusable UI components: a life bar, an "
"energy bar, and bomb and emerald counters. By the end of this tutorial, "
"you'll have a game GUI, ready to control with GDscript or VisualScript:"
msgstr ""
"Тепер, коли ви засвоїли основи, ми дізнаємось, як створити ігровий графічний "
"інтерфейс користувача (GUI) з багаторазовими компонентами: шкалами здоров'я "
"та енергії, лічильниками бомб та смарагдів. В кінці цього уроку ви матимете "
"графічний інтерфейс гри, готовий до керування за допомогою GDscript, або "
"VisualScript:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:13
#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:621
msgid "The final result"
msgstr "Кінцевий результат"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:15
msgid "You'll also learn to:"
msgstr "Ви також навчитеся:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:17
msgid "Create flexible UI components"
msgstr "Створювати гнучкі компоненти інтерфейсу"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:18
#, fuzzy
msgid "Use scene inheritance"
msgstr "Використовувати наслідування сцен"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:19
#, fuzzy
msgid "Build a complex UI"
msgstr "Будувати складні інтерфейси"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:21
#, fuzzy
msgid ""
"Download the project files: :download:`ui_gui_design.zip <files/"
"ui_gui_design.zip>` and extract the archive. Import the `start/` project in "
"Godot to follow this tutorial. The `end/` folder contains the final result."
msgstr ""
"Завантажте файли проєкту: :download:`ui_gui_design.zip <files/ui_gui_design."
"zip>` і витягніть архів. Імпортуйте проєкт `start/` у Godot, щоб виконати "
"цей урок. Папка `end/` містить кінцевий результат."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:25
#, fuzzy
msgid ""
"You can watch this tutorial as a `video on YouTube <https://www.youtube.com/"
"watch?v=y1E_y9AIqow>`_."
msgstr ""
"Ви можете переглянути цей урок як `відео на Youtube <https://www.youtube.com/"
"watch?v=y1E_y9AIqow>`_."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:28
#, fuzzy
msgid "Breaking down the UI"
msgstr "Розбивання інтерфейсу"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:30
#, fuzzy
msgid ""
"Let's break down the final UI and plan the containers we'll use. As in the :"
"doc:`ui_main_menu`, it starts with a ``MarginContainer``. Then, we can see "
"up to three columns:"
msgstr ""
"Давайте розберемо остаточний інтерфейс і сплануємо, які контейнери ми будемо "
"використовувати. Як і в: :doc:`ui_main_menu`, він починається з "
"``MarginContainer``. Далі ми можемо бачити три стовпці:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:34
msgid "The life and energy counters on the left"
msgstr "Зліва лічильники здоров'я та енергії"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:35
msgid "The life and energy bars"
msgstr "Шкали здоров'я та енергії"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:36
#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:42
msgid "The bomb and emerald counters on the right"
msgstr "Лічильники бомб та смарагдів справа"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:38
msgid ""
"But the bar's label and the gauge are two parts of the same UI element. If "
"we think of them this way, we're left with two columns:"
msgstr ""
"Але лічильники і шкали зліва є частинами одного і того ж елемента "
"інтерфейсу. В результаті у нас залишається два стовпці:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:41
msgid "The life and energy bars on the left"
msgstr "Шкали здоров'я та енергії зліва"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:44
#, fuzzy
msgid ""
"This makes it easier to nest containers: we have some margins around the "
"border of the screen using a ``MarginContainer``, followed by an "
"``HBoxContainer`` to manage our two columns. The two bars stack on top of "
"one another inside a ``VBoxContainer``. And we'll need a last "
"``HBoxContainer`` in the right column to place the bomb and emerald counters "
"side-by-side."
msgstr ""
"Це полегшує вкладення контейнерів: ми створюємо деякі поля біля меж екрана "
"за допомогою ``MarginContainer``, а потім використовуємо ``HBoxContainer`` "
"для керування нашими двома стовпцями. Дві шкали укладаються одна на одну "
"всередині контейнера ``VBoxContainer``. І ще один ``HBoxContainer`` нам "
"потрібен в правій колонці, щоб розмістити поруч лічильники бомб та "
"смарагдів ."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:53
msgid "We get a clean UI layout with only 4 containers"
msgstr "У нас виходить чистий макет інтерфейсу лише з 4 контейнерами"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:55
msgid ""
"We will need extra containers inside the individual UI components, but this "
"gives us the main GUI scene's structure. With this plan in place, we can "
"jump into Godot and create our GUI."
msgstr ""
"Нам будуть потрібні додаткові контейнери всередині окремих компонентів "
"інтерфейсу, але наразі ми маємо основну структуру графічного інтерфейсу. "
"Маючи такий план, ми можемо перейти в Godot і створити наш графічний "
"інтерфейс."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:60
msgid "Create the base GUI"
msgstr "Створення базового GUI (графічного інтерфейсу)"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:62
msgid ""
"There are two possible approaches to the GUI: we can design elements in "
"separate scenes and put them together, or prototype everything in a single "
"scene and break it down later. I recommend working with a single scene as "
"you can play with your UI's placement and proportions faster this way. Once "
"it looks good, you can save entire sections of the node tree as reusable sub-"
"scenes. We'll do that in a moment."
msgstr ""
"Існує два можливі підходи до створення графічного інтерфейсу: ми можемо "
"спроєктувати елементи в окремих сценах і, потім, скласти їх разом, або зразу "
"створити усе в одній сцені, а розбити на окремі пізніше. Я рекомендую "
"працювати з однією сценою, оскільки ви можете поекспериментувати і швидше "
"визначитися з розміщенням та пропорціями інтерфейсу. Отримавши вигляд "
"інтерфейсу який вас влаштовує, ви можете зберегти цілі секції дерева вузлів, "
"як окремі сцени для багаторазового використання. Ми зробимо це пізніше."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:69
msgid "For now, let's start with a few containers."
msgstr "Поки почнемо з кількох контейнерів."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:71
msgid ""
"Create a new scene and add a ``MarginContainer``. Select the node and name "
"it ``GUI``."
msgstr ""
"Створіть нову сцену та додайте ``MarginContainer``. Виберіть вузол і назвіть "
"його ``GUI``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:74
msgid ""
"We want our interface to anchor to the top of the screen. Select the ``GUI`` "
"node and click the Layout button at the top of the viewport. Select the "
"``Top Wide`` option. The ``GUI`` node will anchor to the top edge of its "
"parent, the viewport by default. It will resize automatically on the "
"vertical axis to make space for its child UI components."
msgstr ""
"Ми хочемо, щоб наш інтерфейс прив'язався до верхньої частини екрана. "
"Виберіть вузол ``GUI`` і натисніть кнопку Макет у верхній частині вікна "
"перегляду. Виберіть варіант ``Згори за шириною``. Вузол ``GUI`` прикріпиться "
"до верхнього краю його предка, за замовчуванням до верхньої частини вікна. "
"Він змінить розмір автоматично по вертикальній осі, щоб звільнити місце для "
"своїх нащадків."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:80
msgid "Save the scene as ``GUI.tscn``. We will put the entire GUI in it."
msgstr ""
"Збережіть сцену як ``GUI.tscn ``. Ми розмістимо в ній увесь графічний "
"інтерфейс."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:82
msgid ""
"With the ``MarginContainer`` selected, head to the inspector and scroll down "
"to the custom constants section. Unfold it and click the field next to each "
"of the ``Margin`` properties. Set them all to ``20`` pixels. Next, add an "
"``HBoxContainer`` node. This one will contain our two bars on the left and "
"separate them from the two counters on the right."
msgstr ""
"З вибраним ``MarginContainer`` перейдіть до інспектора та прокрутіть униз до "
"розділу *Custom Constants*. Розгорніть його та встановіть кожну із "
"властивостей ``Margin`` на ``20`` пікселів. Далі додайте вузол "
"``HBoxContainer``. Він буде містити дві шкали зліва та, окремо, два "
"лічильника справа."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:88
msgid ""
"We want to stack the bars vertically inside the ``HBoxContainer``. Add a "
"``VBoxContainer`` as a child of ``HBoxContainer`` and name it ``Bars``. "
"Select the parent ``HBoxContainer`` again and this time, add another "
"``HBoxContainer`` as a child of it. Call it ``Counters``. With these four "
"containers, we have the base for our GUI scene."
msgstr ""
"Ми хочемо укласти шкали вертикально всередину ``HBoxContainer``. Додайте до "
"``HBoxContainer`` в нащадки``VBoxContainer`` і назвіть його ``Bars`` "
"(Шкали). Виберіть ``HBoxContainer`` ще раз, і додайте в нащадки ще один "
"``HBoxContainer``. Назвіть його ``Counters``. З цими чотирма контейнерами ми "
"маємо базу для нашої сцени GUI."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:95
msgid "You should have 4 containers that look like this"
msgstr "У вас повинно бути 4 контейнери, які виглядають так"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:99
msgid ""
"We can work this way because we first broke down our UI design and took a "
"few moments to think about the containers we'd use. When you follow a "
"tutorial like this, it may seem weird. But once you're working on real "
"games, you'll see it's an efficient workflow."
msgstr ""
"Ми можемо працювати таким чином, тому що ми спочатку розбили наш дизайн "
"інтерфейсу і потратили кілька хвилин, щоб подумати над тим, які контейнери "
"будемо використовувати. Такий підхід може видатися дивним. Але як тільки ви "
"почнете працювати над реальними іграми, ви переконаєтеся, що це ефективний "
"робочий процес."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:105
msgid "Create the bars' base"
msgstr "Створення бази для шкал"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:107
msgid ""
"Each bar is split into two sub-elements that align horizontally: the label "
"with the health count on the left, and the gauge on the right. Once again, "
"the ``HBoxContainer`` is the perfect tool for the job. Select the ``Bars`` "
"node and add a new ``HBoxContainer`` inside of it. Name it ``Bar``."
msgstr ""
"Кожна шкала розділена на два піделементи, які вирівнюються по горизонталі: "
"мітка з кількістю здоров’я зліва та сама шкала справа. Знову "
"``HBoxContainer`` ідеальний інструмент для роботи. Виберіть вузол ``Bars`` і "
"додайте йому ``HBoxContainer`` всередину. Назвіть його ``Bar``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:113
msgid ""
"The label itself requires at least three nodes: a ``NinePatchRect`` for the "
"background, on top of which we'll add a texture on the left, either ``HP`` "
"or ``EP``, and a ``Label`` on the right for the value. We can nest "
"``Control`` nodes however we want. We could use the ``NinePatchRect`` as a "
"parent for the two other elements, as it encompasses them. In general, you "
"want to use containers instead, as their role is to help organize UI "
"components. We'll need a ``MarginContainer`` later anyway to add some space "
"between the life count and the gauge. Select the ``Bar`` and add a "
"``MarginContainer``. Name it ``Count``. Inside of it, add three nodes:"
msgstr ""
"Для самої мітки потрібно щонайменше три вузли: ``NinePatchRect`` для фону, "
"поверх якого ми додамо текстуру зліва, ``HP``, або ``EP``, і ``Label`` "
"праворуч для значення. Ми можемо вкласти вузли``Control`` як захочемо. Ми "
"могли б використовувати ``NinePatchRect`` в якості предка для двох інших "
"елементів. Але краще використовувати контейнери замість цього, оскільки їх "
"роль полягає в організації компонентів інтерфейсу. Врешті, пізніше, нам все-"
"таки знадобиться ``MarginContainer``, щоб додати простір між кількістю життя "
"та показником. Виберіть ``Bar`` і додайте ``MarginContainer``. Назвіть його "
"``Count``. Всередину нього додайте три вузли:"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:124
msgid "A ``NinePatchRect`` named ``Background``"
msgstr "``NinePatchRect`` з іменем ``Background``"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:125
msgid "A ``TextureRect`` named ``Title``"
msgstr "``TextureRect`` з іменем ``Title``"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:126
msgid "And a ``Label`` named ``Number``"
msgstr "І ``Label`` з іменем ``Number``"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:128
msgid "To add the nodes as siblings, always select the ``Count`` node first."
msgstr ""
"Щоб додані вузли були побратимами, перед додаванням завжди вибирайте вузол "
"``Count``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:132
msgid ""
"Your scene tree should look like this. We're ready to throw in some textures"
msgstr ""
"Ваше дерево сцени повинно виглядати так. Ми готові додати деякі текстури"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:135
msgid ""
"Our scene is still empty. It's time to throw in some textures. To load the "
"textures, head to the FileSystem dock to the left of the viewport. Browse "
"down to the res://assets/GUI folder."
msgstr ""
"Наша сцена все ще порожня. Настав час закинути деякі текстури. Щоб "
"завантажити текстури, перейдіть до панелі Файлова система зліва від області "
"перегляду. Перейдіть до теки res://assets/GUI folder."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:141
msgid "You should see a list of textures that we'll use to skin our interface."
msgstr ""
"Ви повинні побачити список текстур, які ми будемо використовувати для "
"розробки нашого інтерфейсу."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:144
msgid ""
"Select the ``Background`` in the Scene dock. In the Inspector, you should "
"see a ``Texture`` property. In the FileSystem tab, click and drag "
"``label_HP_bg.png`` onto the ``Texture`` slot. It stays squashed. The parent "
"MarginContainer will force its size down to 0 until we force elements inside "
"the container to have a minimum size. Select the ``Background`` node. In the "
"Inspector, scroll down to the Rect section. Set ``Min Size`` to (100, 40). "
"You should see the ``Background`` resize along with its parent containers."
msgstr ""
"Виберіть ``Background`` в Сцені. В Інспекторі ви повинні побачити "
"властивість ``Texture``. З панелі Файлова система перетягніть ``label_HP_bg."
"png`` в ``Texture``. Картинка залишиться стиснута. Предок MarginContainer "
"стискає розміри до 0, поки ми не задамо елементам всередині контейнера "
"мінімальний розмір, який треба утримувати. Виберіть вузол ``Background``. У "
"Інспекторі прокрутіть униз до розділу Rect. Встановіть ``Min Size`` на (100, "
"40). Ви повинні побачити, як міняється розмір ``Background`` разом з його "
"батьківськими контейнерами."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:153
msgid ""
"Next, select the ``Title`` and drag and drop ``label_HP.png`` into its "
"``Texture`` slot. Select the ``Number`` node, click the field next to the "
"``Text`` property and type ``10``. This way, we can see both nodes in the "
"viewport. They should stack up in the top-left corner of their parent "
"``MarginContainer``."
msgstr ""
"Далі виберіть ``Title`` і перетягніть ``label_HP.png`` в його властивість "
"``Texture``. Виберіть вузол ``Number``, натисніть поле поруч із властивістю "
"``Text`` та введіть ``10``. Таким чином, ми можемо побачити обидва вузли у "
"вікні перегляду. Вони повинні складатись у верхньому лівому куті свого "
"предка ``MarginContainer``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:161
msgid "If you select both nodes, you should see something like this"
msgstr "Якщо вибрати обидва вузли, ви повинні побачити щось подібне"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:163
msgid ""
"As they have a container as their direct parent, we cannot move them freely: "
"the ``Count`` node will always reset their anchors, their size and position. "
"Try to move and resize the nodes in the viewport. Then, select any of the "
"three textures and press :kbd:`Ctrl + Up` or :kbd:`Ctrl + Down` to reorder "
"them in the Scene dock. They'll snap back to their previous size and "
"position."
msgstr ""
"Оскільки у них є контейнер в якості прямого предка, ми не можемо вільно їх "
"переміщувати: вузол ``Count``буде скидати їх прив'язки, розмір і положення. "
"Спробуйте перемістити та змінити розміри вузлів у вікні перегляду. Потім "
"виберіть будь-яку з трьох текстур і натисніть ``Ctrl + Up``, або ``Ctrl"
"+Down``, щоб спробувати впорядкувати їх в Сцені. Вони повернуться до "
"попереднього розміру та положення."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:170
msgid ""
"Parent containers control the size, the scale, the margins, and the anchors "
"of their direct children. To modify the nodes, you must nest them inside a "
"regular Control or another UI element. We'll use the ``Background`` as a "
"parent for the ``Title`` and ``Number``. Select both the ``Title`` and "
"``Number``, and drag and drop them onto ``Background``."
msgstr ""
"Предки-контейнери контролюють розмір, масштаб, поля та прив'язки їхніх "
"прямих нащадків. Щоб змінити вузли, потрібно вкласти їх у звичайний елемент "
"управління Control, або інший елемент інтерфейсу. Ми будемо використовувати "
"``Background`` в якості предка для ``Title`` та ``Number``. Виберіть "
"``Title`` і ``Number``, і перетягніть їх на ``Background``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:179
msgid ""
"By using the Background node as the two textures' parent, we take control "
"away from the Count MarginContainer"
msgstr ""
"Використовуючи вузол Background в якості предка, ми відбираємо контроль від "
"Count, який є контейнером MarginContainer"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:182
msgid ""
"Select the ``Title`` and in the Inspector, change its ``Stretch Mode`` "
"property to ``Keep Centered``. Next find the ``Rect`` category in the "
"Inspector and change the ``Size`` property to (50, 40) so it only takes the "
"left half of the background.  Next, select the ``Number`` node. In the "
"viewport, click the ``Layout`` menu and click ``Full Rect``. The node will "
"resize to fit the ``Background``. Head to the Inspector and change its "
"``Align`` property to ``Right``, and the ``Valign`` property to ``Center``. "
"The text should snap to the center of the ``Background``'s right edge. "
"Resize the node horizontally, so it takes the right half of the "
"``Background`` and there's a bit of padding with the right edge."
msgstr ""
"Виберіть ``Title`` і в інспекторі змініть його властивість ``Stretch Mode`` "
"на ``Keep Centered``. Далі знайдіть розділ ``Rect`` в Інспекторі та змініть "
"властивість ``Size`` на (50, 40), щоб позначка займала лише ліву половину "
"фону. Далі виберіть вузол ``Number``. У вікні перегляду виберіть меню "
"``Макет`` та клацніть ``Увесь прямокутник``. Вузол відповідно розтягнеться "
"на увесь ``Background``. Поверніться до Інспектора і змініть його "
"властивість ``Align`` на ``Right``, а властивість ``Valign`` на ``Center``. "
"Текст повинен прилягати до центру правого краю ``Background``. Змініть "
"розмір вузла по горизонталі, щоб він зайняв праву половину ``Background``, "
"але з правого краю залишився невеликий відступ."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:195
msgid ""
"Here's how the nodes' bounding boxes should look in the viewport. Keep it "
"rough, you don't need to place them too precisely for now."
msgstr ""
"Ось як повинні виглядати межі вузлів у вікні перегляду. Наразі не потрібно "
"розміщувати їх дуже точно."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:199
msgid "Replace the Label's font"
msgstr "Зміна шрифта в Label"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:201
msgid ""
"The label's font is too small. We need to replace it. Select the ``Number`` "
"node and in the Inspector, scroll down to the ``Control`` class, and find "
"the ``Custom Font`` category. Click the field next to the ``Font`` property "
"and click on ``New Dynamic Font``. Click on the field again and select Edit."
msgstr ""
"Шрифт мітки занадто малий. Нам потрібно його змінити. Виберіть вузол "
"``Number`` в Інспекторі, прокрутіть до ``Control`` та знайдіть розділ "
"``Custom Font``. Клацніть поле поруч із властивістю ``Font`` та натисніть на "
"``New Dynamic Font``. Клацніть на полі ще раз та виберіть Редагувати."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:207
msgid ""
"You will enter the ``Dynamic Font`` resource. Unfold the ``Font`` category "
"and click the field next to ``Font Data``. Click the ``Load`` button. In the "
"file browser, navigate down to the assets/font folder and double click "
"``Comfortaa-Bold.ttf`` to open it. You should see the font update in the "
"viewport. Unfold the settings category to change the font size. Set the "
"``Size`` property to a higher value, like ``24`` or ``28``."
msgstr ""
"Ви попадете в ресурс ``Dynamic Font``. Розгорніть розділ ``Font`` та "
"натисніть поле поруч із ``Font Data``. Натисніть кнопку ``Завантажити``. У "
"браузері файлів перейдіть до папки Assets/Font та двічі клацніть на "
"``Comfortaa-Bold.ttf``, щоб відкрити його. Ви повинні побачити оновлення "
"шрифту у вікні перегляду. Розгорніть розділ налаштувань ``Settings``, щоб "
"змінити розмір шрифту. Встановіть властивість ``Size`` на більш високе "
"значення, наприклад ``24``, або ``28``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:215
msgid ""
"We now need the text's baseline, the number's lower edge, to align with the "
"HP texture on the left. To do so, still in the ``DynamicFont`` resource, you "
"can tweak the ``Bottom`` property under the ``Extra Spacing`` category. It "
"adds some bottom padding to the text. Click the ``Number`` node in the Scene "
"tab to go back to the node's properties and change the ``Valign`` to "
"``Bottom``. To adjust the text's baseline, click on the font field under the "
"``Custom Font`` category again and tweak the ``Bottom`` property until the "
"text aligns with the ``Title`` node. I used a value of ``2`` pixels."
msgstr ""
"Тепер нам потрібно вирівняти нижній край числа з нижнім краєм текстури HP "
"зліва. Для цього, все ще в ресурсі ``DynamicFont``, ви можете налаштувати "
"властивість ``Bottom`` в розділі ``Extra Spacing``. Тут можна відрегулювати "
"відступ від тексту до нижнього краю. Клацніть вузол ``Number`` на вкладці "
"Сцена, щоб повернутися до властивостей вузла та змінити ``Valign`` на "
"``Bottom``. Щоб відкоригувати нижню лінію тексту, ще раз натисніть на поле "
"шрифту в розділі ``Custom Font`` і підлаштуйте властивість ``Bottom``, так "
"щоб текст вирівнявся з вузлом ``Title``. Я використав значення ``2``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:227
msgid "With a Bottom value of 2 pixels, the Number aligns with the Title"
msgstr "При значенні Bottom в 2 пікселя Number вирівнюється з Title"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:229
msgid ""
"With this, we finished the hardest part of the GUI. Congratulations! Let's "
"move on to the simpler nodes."
msgstr ""
"Цим ми закінчили найважчу частину GUI. Вітаю! Перейдемо до більш простих "
"вузлів."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:233
msgid "Add the progress bar"
msgstr "Додавання шкали прогресса"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:235
msgid ""
"We need one last element to complete our life bar: the gauge itself. Godot "
"ships with a ``TextureProgress`` node that has everything we need."
msgstr ""
"Нам потрібен останній елемент, щоб завершити нашу шкалу здоров'я: сам "
"показник. Godot поставляється з вузлом ``TextureProgress``, у якому є все, "
"що нам потрібно."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:238
msgid ""
"Select the Bar node and add a ``TextureProgress`` inside of it. Name it "
"``Gauge``. In the inspector unfold the ``Textures`` section. Head to the "
"FileSystem dock and drag and drop the ``lifebar_bg.png`` texture onto the "
"``Under`` slot. Do the same with the ``lifebar_fill.png`` image and drop it "
"onto the ``Progress`` slot. Under the ``Range`` class in the inspector, "
"change the ``Value`` property to ``50`` to see the gauge fill up."
msgstr ""
"Виберіть вузол Bar і додайте до нього ``TextureProgress``. Назвіть його "
"``Gauge``. У інспекторі розгорніть розділ ``Textures``. Перейдіть до "
"Файлової системи і перетягніть текстуру ``lifebar_bg.png`` на ``Under``. "
"Зробіть те ж саме з зображенням ``lifebar_fill.png`` і перетягніть його на "
"``Progress``. Під класом ``Range`` у інспекторі змініть властивість "
"``Value`` на ``50`` щоб побачити, як показник заповнюється."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:246
msgid "With only five ``Control`` nodes, our first bar is ready to use."
msgstr ""
"Маючи лише п'ять вузлів ``Control``, наша перша шкала готова до використання."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:250
msgid ""
"That's it, our life bar is ready. This last part was quick, wasn't it? "
"That's thanks to our robust container setup."
msgstr ""
"Наша шкала здоров'я готова. Ця остання частина була швидкою, чи не так? Це "
"завдяки нашій надійній установці контейнерів."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:254
msgid "Design the bomb and emerald counters"
msgstr "Розробка лічильників бомб та смарагдів"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:256
msgid ""
"The bomb and emerald counters are like the bar's ``Count`` node. So we'll "
"duplicate it and use it as a template."
msgstr ""
"Лічильники бомб та смарагдів схожі на вузол шкали ``Count``. Тож ми "
"продублюємо його і використаємо як шаблон."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:259
msgid ""
"Under the ``Bar`` node, select ``Count`` and press :kbd:`Ctrl + D` to "
"duplicate it. Drag and drop the new node under the ``Counters`` "
"``HBoxContainer`` at the bottom of the scene tree. You should see it resize "
"automatically. Don't worry about this for now, we'll fix the size soon."
msgstr ""
"У вузлі ``Bar`` виберіть ``Count`` і натисніть :kbd:`Ctrl + D`, щоб його "
"дублювати. Перетягніть новий вузол у ``Counters`` ``HBoxContainer`` в нижню "
"частину дерева сцени. Ви можете побачити, як його розмір автоматично "
"зміниться. Не хвилюйтеся з цього приводу зараз, ми скоро виправимо розмір."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:264
msgid ""
"Rename the ``Count2`` node to ``Counter``. Unlike the bars, we want the "
"number to be on the left, and an icon to sit on the right. The setup is the "
"same: we need a background (a ``NinePatchRect``), the title, and the number "
"nodes. The ``Title`` node is a ``TextureRect``, so it's what we need to "
"display the icon. In the scene tree, select the ``Title`` node, and rename "
"it to ``Icon``."
msgstr ""
"Перейменуйте вузол ``Count2`` у ``Counter``. На відміну від шкал, ми хочемо, "
"щоб число було зліва, а значок - справа. Налаштування однакове: нам потрібні "
"вузли фону (``NinePatchRect``), заголовка та числа. Вузол ``Title`` є "
"``TextureRect``, так що це те , що нам потрібно , щоб відобразити значок. У "
"дереві сцен виберіть вузол ``Title`` та перейменуйте його на ``Icon``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:273
msgid "Here's how your node tree should look so far"
msgstr "Ось як має виглядати ваше дерево вузлів на даний момент"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:275
msgid ""
"With the ``Icon`` node selected, in the inspector, scroll to the top to see "
"the ``Texture`` slot. Head to the FileSystem dock on the left and select the "
"``bombs_icon.png``. Drag and drop it onto the ``Texture`` slot. In the Scene "
"Tab select both the ``Icon`` and the ``Number`` nodes. Click the Layout menu "
"in the toolbar at the top of the viewport and select ``Full Rect``. Both "
"nodes will update to fit the size of the ``Background``."
msgstr ""
"Вибравши вузол ``Icon``, у інспекторі прокрутіть доверху, щоб побачити "
"``Texture``. З панелі Файлова система виберіть ``bombs_icon.png``. "
"Перетягніть його в гніздо ``Texture``. На вкладці Сцена виберіть вузли "
"``Icon`` і ``Number``. Клацніть меню Макет на панелі інструментів у верхній "
"частині вікна перегляду та виберіть ``Увесь прямокутник``. Обидва вузли "
"оновляться відносно розміру ``Background``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:285
msgid "The nodes anchor to the entire Background, but their position is off"
msgstr "Вузли прив'язуються до всього Background, але їх положення вимкнено"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:287
#, fuzzy
msgid ""
"Let's change the ``Number``'s align properties to move it to the left and "
"center of the ``Background``. Select the ``Number`` node, change its "
"``Align`` property to left and the ``Valign`` property to center. Then "
"resize its left edge a bit to add some padding between the left edge of the "
"``Background`` and the text."
msgstr ""
"Давайте змінимо в ``Number`` властивості вирівнювання, щоб перемістити його "
"вліво та в центр ``Background``. Виберіть вузол ``Number``, змініть його "
"властивість ``Align`` на ``Left`` та властивість ``Valign`` на ``Center``. "
"Потім трохи змініть розмір лівого краю, щоб додати трохи простору між лівим "
"краєм ``Background`` та текстом."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:295
#, fuzzy
msgid "The Number node aligned to the left and center"
msgstr "Вузол Number вирівняний ліворуч та по центру"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:297
msgid ""
"To overlap the Icon and the background, we need a few tweaks. First, our "
"background is a bit too tall. It's because it's inside a margin container "
"that is controlled by the top-most GUI node. Select the GUI node at the top "
"of the scene tree and downsize it vertically so that it's as thin as "
"possible. You'll see the gauge prevents you from making it too small. A "
"container cannot be smaller than the minimal size of its children. The "
"container's margins also weigh in."
msgstr ""
"Щоб перекрити піктограму та фон, нам потрібно кілька налаштувань. По-перше, "
"наш фон трохи надто високий. Це тому, що він знаходиться у контейнері поля "
"(MarginСontainer), який контролюється самим верхнім вузлом GUI. Виберіть "
"вузол GUI у верхній частині дерева сцени та зменшіть його по вертикалі, щоб "
"він був максимально тонким. Ви побачите, що показник не дозволяє вам зробити "
"його занадто маленьким. Контейнер не може бути меншим, ніж мінімальний "
"розмір його нащадків. Поля контейнера також беруться до уваги."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:305
msgid ""
"Select the Icon, click the Layout menu, and select ``Full Rect`` to re-"
"center it. We need it to anchor to the ``Background``'s right edge. Open the "
"Layout menu again and select ``Center Right``. Move the icon up so it is "
"centered vertically with the ``Background``."
msgstr ""
"Виберіть ``Icon``, натисніть меню Макет та виберіть ``Full Rect``, щоб "
"центрувати його повторно. Нам потрібно, щоб він прикріпився до правого краю "
"``Background``. Відкрийте меню Макет ще раз та виберіть ``За центром "
"праворуч``. Перемістіть піктограму вгору, щоб вона була розташована по "
"центрі вертикалі разом з ``Background``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:313
msgid ""
"The bomb icon anchors to the Background's right edge. Resize the Counter "
"container to see the Icon node stick to its right side"
msgstr ""
"Піктограма бомби прив'язується до правого краю фону. Змініть розмір "
"контейнера Counter, щоб побачити, як вузол Icon притримується правої сторони"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:316
msgid ""
"Because we duplicated the ``Counter`` from the bar's ``Count``, the "
"``Number`` node's font is off. Select the ``Number`` node again, head to the "
"``Font`` property, and click it to access the ``DynamicFont`` resource. In "
"the ``Extra Spacing`` section, change the ``Bottom`` value to ``0`` to reset "
"the font's baseline. Our counter now works as expected."
msgstr ""
"Оскільки ми дублювали ``Counter`` з ``Count`` шрифт вузла ``Number`` "
"зламався. Виберіть вузол ``Number`` ще раз, перейдіть до властивості "
"``Font`` і клацніть по ресурсу ``DynamicFont``. У розділі ``Extra Spacing`` "
"змініть значення ``Bottom`` на ``0``, щоб скинути базову лінію шрифту. Зараз "
"наш лічильник працює як очікувалося."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:323
msgid ""
"Let's make the ``Counters`` anchor to the right edge of the viewport. To do "
"so, we need to set the ``Bars`` container take all the available horizontal "
"space it can. Select the ``Bars`` node and scroll down to the ``Size Flags`` "
"category. In the ``Horizontal`` category, check the ``Expand`` value. The "
"``Bars`` node should resize and push the counter to the right side of the "
"screen."
msgstr ""
"Давайте прив'яжемо ``Counters`` до правого краю вікна перегляду. Для цього "
"нам потрібно налаштувати контейнер ``Bars`` так, щоб він зайняв весь наявний "
"горизонтальний простір, який зможе. Виберіть вузол ``Bars`` і прокрутіть "
"вниз до розділу ``Size Flags``. У підрозділі ``Horizontal`` позначте "
"``Expand``. Вузол ``Bars`` повинен змінити розмір і потиснути лічильник до "
"правої сторони екрану."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:331
msgid ""
"An expanding container eats all the space it can from its parent, pushing "
"everything else along the way"
msgstr ""
"Расширившийся контейнер, з'їдає у свого предка увесь простір, який зможе, "
"посуваючи все інше в сторону"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:335
msgid "Turn the bar and counter into reusable UI components"
msgstr "Перетворення шкали та лічильника на багаторазові елементи інтерфейсу"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:337
msgid ""
"We have one bar and one counter widget. But we need two of each. We may need "
"to change the bars' design or their functionality later on. It'd be great if "
"we could have a single scene to store a UI element's template, and child "
"scenes to work on variations. Godot lets us do this with Inherited Scenes."
msgstr ""
"У нас одна шкала і один лічильник. Але нам їх треба по дві штуки кожного. "
"Пізніше нам може знадобитися змінити дизайн шкал, або їх функціональність. "
"Було б чудово, якби ми могли мати одну сцену для зберігання шаблону елемента "
"інтерфейсу та дочірні сцени для роботи над варіантами. Godot дозволяє нам це "
"робити із спадковими сценами."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:343
msgid ""
"Let's save both the ``Counter`` and the ``Bar`` branches as separate scenes "
"that we'll reduce to create the ``LifeBar``, the ``EnergyBar``, the "
"``BombCounter``, and the ``EmeraldCounter``. Select the ``Bar`` "
"HBoxContainer. Right click on it and click on ``Save Branch as Scene``. Save "
"the scene as ``Bar.tscn``. You should see the node branch turn it to a "
"single ``Bar`` node."
msgstr ""
"Давайте збережемо ``Counter`` і ``Bar``, як окремі сцени , які ми будемо "
"використовувати для створення ``LifeBar``, ``EnergyBar``, ``BombCounter`` і "
"``EmeraldCounter``. Виберіть HBoxContainer ``Bar``. Клацніть правою кнопкою "
"миші та натисніть на ``Зберегти гілку як Сцену``. Збережіть сцену під назвою "
"``Bar.tscn``. Ви повинні побачити, як вся гілка перетворюється в один вузол."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:352
msgid ""
"A scene is a tree of nodes. The topmost node is the tree's **root**, and the "
"children at the bottom of the hierarchy are **leaves**. Any node other than "
"the root along with one or more children is a **branch**. We can encapsulate "
"node branches into separate scenes, or load and merge them from other scenes "
"into the active one. Right click on any node in the Scene dock and select "
"``Save Branch as Scene`` or ``Merge from Scene``."
msgstr ""
"Сцена - це дерево вузлів. Верхній вузол - **корінь** дерева , а нащадки "
"внизу ієрархії - це **листя**. Будь-який вузол, крім кореня, разом із одним, "
"або кількома нащадками - це **гілка**. Ми можемо інкапсулювати гілки вузлів "
"в окремі сцени, або завантажити та об'єднати їх з інших сцен в активну. "
"Клацніть правою кнопкою миші на будь-якому вузлі на панелі Сцена та виберіть "
"``Зберегти гілку як Сцену``або ``Merge from Scene`` (З'єднати зі сценою)."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:360
msgid ""
"Then, select the ``Counter`` node and do the same. Right click, ``Save "
"Branch as Scene``, and save it as ``Counter.tscn``. A new edit scene icon "
"appears to the right of the nodes in the scene tree. Click on the one next "
"to ``Bar`` to open the corresponding scene. Resize the ``Bar`` node so that "
"its bounding box fits its content. The way we named and placed the Control "
"nodes, we're ready to inherit this template and create the life bar. It's "
"the same for the ``Counter``."
msgstr ""
"Потім виберіть вузол ``Counter`` і зробіть те саме. Збережіть гілку як сцену "
"під назвою ``Counter.tscn``. Праворуч від вузлів новостворених сцен у дереві "
"сцени з’являється нова іконка сцени. Клацніть на одну з них поруч з ``Bar``, "
"щоб відкрити відповідну сцену. Змініть розмір вузла ``Bar`` так, щоб його "
"обмежувальне поле відповідало його вмісту. Тепер, коли ми назвали і "
"розмістили вузли управління, ми готові успадкувати цей шаблон і створити "
"шкалу здоров'я. Те ж саме треба зробити для ``Counter``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:370
msgid "With no extra changes, our Bar is ready to use"
msgstr "Без додаткових змін наша шкала готова до використання"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:373
msgid "Use scene inheritance to create the remaining elements"
msgstr "Використання успадкування сцен для створення решти елементів"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:375
msgid ""
"We need two bars that work the same way: they should feature a label on the "
"left, with some value, and a horizontal gauge on the right. The only "
"difference is that one has the HP label and is green, while the other is "
"called EP and is yellow. Godot gives us a powerful tool to create a common "
"base to reuse for all bars in the game: **inherited scenes**."
msgstr ""
"Нам потрібні дві шкали, які працюють однаково: вони повинні містити мітку, з "
"деяким значенням, зліва, і горизонтальний показник справа. Єдина відмінність "
"полягає в тому, що один має мітку HP і зелений, а другий називається EP і "
"жовтий. Godot дає нам потужний інструмент для створення шаблонів, які можна "
"повторно використовувати для створення всіх шкал у грі: **спадкові сцени**."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:383
msgid ""
"Inherited scenes help us keep the GUI scene clean. In the end, we will only "
"have containers and one node for each UI component."
msgstr ""
"Спадкові сцени допомагають нам підтримувати чистоту сцени GUI. Зрештою, у "
"нас будуть лише контейнери та один вузол для кожного компонента інтерфейсу."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:386
msgid ""
"On an inherited scene, you can change any property of every node in the "
"inspector, aside from its name. If you modify and save the parent scene, all "
"the inherited scenes update to reflect the changes. If you change a value in "
"the inherited scene, it will always override the parent's property. It's "
"useful for UIs, as they often require variations of the same elements. In "
"general, in UI design, buttons, panels etc. share a common base style and "
"interactions. We don't want to copy it over to all variations manually."
msgstr ""
"У спадковій сцені ви можете змінити будь-яку властивість кожного вузла в "
"інспекторі, окрім його імені. Якщо ви змінюєте та зберігаєте батьківську "
"сцену, всі успадковані сцени оновлюються. Якщо ви зміните значення в "
"успадкованій сцені, воно завжди перекриває властивість предків. Це корисно "
"для інтерфейсів користувача, оскільки вони часто вимагають варіацій одних і "
"тих же елементів. Загалом, в дизайні інтерфейсу, кнопки, панелі тощо "
"поділяють загальний базовий стиль та взаємодії. Ми не хочемо копіювати його "
"усі варіанти вручну."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:395
msgid ""
"A reload icon will appear next to the properties you override. Click it to "
"reset the value to the parent scene's default."
msgstr ""
"Поруч із властивостями, які ви перекриєте, з'явиться значок "
"перезавантаження. Клацніть його, щоб відновити значення до стандартної сцени "
"предка."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:400
msgid ""
"Think of scene inheritance like the node tree, or the ``extends`` keyword in "
"GDScript. An inherited scene does everything like its parent, but you can "
"override properties, resources and add extra nodes and scripts to extend its "
"functionality."
msgstr ""
"Подумайте про успадкування сцени, як про дерево вузлів, або ключове слово "
"``extends`` в GDScript. Спадкова сцена виконує все, як і її предок, але ви "
"можете змінити властивості, ресурси та додати додаткові вузли та скрипти, "
"щоб розширити її функціональність."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:406
msgid "Inherit the Bar Scene to build the LifeBar"
msgstr "Успадкування сцени Bar для створення LifeBar (Шкали здоров'я)"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:408
msgid ""
"Go to ``Scene -> New Inherited Scene`` to create a new type of ``Bar``. "
"Select the Bar scene and open it. You should see a new [unsaved] tab, that's "
"like your ``Bar``, but with all nodes except the root in grey. Press :kbd:"
"`Ctrl + S` (:kbd:`Cmd + S` on macOS) to save the new inherited scene and "
"name it ``LifeBar``."
msgstr ""
"Перейдіть до ``Сцена -> Нова успадкована сцена`` до створення нового типу "
"``Bar``. Виберіть сцену Bar і відкрийте її. Ви повинні побачити нову вкладку "
"[не збережену], таку ж як ваша сцена ``Bar``, але з усіма вузлами, крім "
"кореня сірого кольору. Натисніть :kbd:`Ctrl + S`(:kbd:`Cmd + S` на macOS), "
"щоб зберегти нову успадковану сцену та назвіть її ``LifeBar``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:416
msgid "You can't rename grey nodes. This tells you they have a parent scene"
msgstr ""
"Ви не можете перейменувати сірі вузли. Це говорить вам, що у них є "
"батьківська сцена"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:418
msgid ""
"First, rename the root or top level node to ``LifeBar``. We always want the "
"root to describe exactly what this UI component is. The name differentiates "
"this bar from the ``EnergyBar`` we'll create next. The other nodes inside "
"the scene should describe the component's structure with broad terms, so it "
"works with all inherited scenes. Like our ``TextureProgress`` and ``Number`` "
"nodes."
msgstr ""
"Спочатку перейменуйте корінь, або вузол верхнього рівня, на ``LifeBar``. Ми "
"завжди хочемо, щоб назва кореня описувала зміст компоненту інтерфейсу. Назва "
"відрізнятиме цю шкалу від ``EnergyBar``, яку ми створимо далі. Інші вузли "
"всередині сцени повинні описувати структуру компонента широкими термінами, "
"тому що вони працюють з усіма успадкованими сценами. Наприклад наші вузли "
"``TextureProgress`` і ``Number``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:427
msgid ""
"If you've ever done web design, it's the same spirit as working with CSS: "
"you create a base class, and add variations with modifier classes. From a "
"base button class, you'll have button-green and button-red variations for "
"the user to accept and refuse prompts. The new class contains the name of "
"the parent element and an extra keyword to explain how it modifies it. When "
"we create an inherited scene and change the name of the top level node, "
"we're doing the same thing."
msgstr ""
"Якщо ви коли-не-будь займалися веб-дизайном, то це схоже на роботу з CSS: ви "
"створюєте базовий клас і додаєте варіанти з класами модифікаторів. У класі "
"базових кнопок ви матимете зелену та червону кнопки, щоб користувач міг "
"приймати та відмовляти підказки. Новий клас містить ім'я батьківського "
"елемента та додаткове ключове слово, щоб пояснити, як саме він модифікує "
"його. Коли ми створюємо успадковану сцену та змінюємо назву вузла верхнього "
"рівня, ми робимо те саме."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:436
msgid "Design the EnergyBar"
msgstr "Розробка EnergyBar (Шкали енергії)"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:438
msgid ""
"We already setup the ``LifeBar``'s design with the main ``Bar`` scene. Now "
"we need the ``EnergyBar``."
msgstr ""
"Ми вже створили ``LifeBar`` з основної сцени ``Bar``. Тепер нам потрібна "
"``EnergyBar``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:441
msgid ""
"Let's create a new inherited scene, and once again select the ``Bar.tscn`` "
"scene and open it. Double-click on the ``Bar`` root node and rename it to "
"``EnergyBar``. Save the new scene as ``EnergyBar.tscn``. We need to replace "
"the HP texture with EP one, and to change the textures on the gauge."
msgstr ""
"Давайте створимо нову успадковану сцену та ще раз виберемо сцену ``Bar."
"tscn`` і відкриємо її. Двічі клацніть на кореневому вузлі ``Bar`` та "
"перейменуйте його на ``EnergyBar``. Збережіть нову сцену як ``EnergyBar."
"tscn``. Нам потрібно замінити текстуру HP на EP та змінити текстури на "
"показнику."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:447
msgid ""
"Head to the FileSystem dock on the left, select the ``Title`` node in the "
"Scene tree and drag and drop the ``label_EP.png`` file onto the texture "
"slot. Select the ``Number`` node and change the ``Text`` property to a "
"different value like ``14``."
msgstr ""
"Перейдіть до панелі Файлова система, виберіть вузол ``Title`` у дереві сцени "
"та перетягніть файл ``label_EP.png`` в гніздо текстури. Виберіть вузол "
"``Number`` і змініть властивість ``Text`` на інше значення, наприклад ``14``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:452
msgid ""
"You'll notice the EP texture is smaller than the HP one. We should update "
"the ``Number``'s font size to better fit it. A font is a resource. All the "
"nodes in the entire project that use this resource will be affected by any "
"property we change. You can try to change the size to a huge value like "
"``40`` and switch back to the ``LifeBar`` or the ``Bar`` scenes. You will "
"see the text increased in size."
msgstr ""
"Ви помітите, що текстура EP менша, ніж у HP. Ми повинні оновити розмір "
"шрифту ``Number``, щоб він краще підходив. Шрифт - це ресурс. На всі вузли у "
"всьому проєкті, які використовують цей ресурс, впливатиме будь-яка "
"властивість, яку ми змінимо. Ви можете спробувати змінити розмір на "
"величезне значення , наприклад ``40`` і повернувшись назад на ``LifeBar``, "
"або в сцену ``Bar``. Ви побачите, що текст збільшився в розмірі."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:461
msgid "If we change the font resource, all the nodes that use it are affected"
msgstr "Зміни в ресурсі шрифту вплинуть на всі вузли, які ним користуються"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:464
msgid ""
"To change the font size on this node only, we must create a copy of the font "
"resource. Select the ``Number`` node again and click on the wrench and "
"screwdriver icon on the top right of the inspector. In the drop-down menu, "
"select the ``Make Sub-Resources Unique`` option. Godot will find all the "
"resources this node uses and create unique copies for us."
msgstr ""
"Щоб змінити розмір шрифту лише на цьому вузлі, ми повинні створити копію "
"ресурсу шрифту. Виберіть вузол ``Number`` і натисніть на значок гайкового "
"ключа та викрутки у верхньому правому куті інспектора. У спадному меню "
"виберіть параметр ``Зробити суб-ресурси унікальними``. Godot знайде всі "
"ресурси, якими користується цей вузол, і створить для нас унікальні копії."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:472
msgid "Use this option to create unique copies of the resources for one node"
msgstr ""
"Використовуйте цей параметр для створення унікальних копій ресурсів для "
"одного вузла"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:476
msgid ""
"When you duplicate a node from the Scene tree, with :kbd:`Ctrl + D` (:kbd:"
"`Cmd + D` on macOS), it shares its resources with the original node. You "
"need to use ``Make Sub-Resources Unique`` before you can tweak the resources "
"without affecting the source node."
msgstr ""
"Коли ви дублюєте вузол з дерева сцена, з допомогою :kbd:`Ctrl + D` (:kbd:"
"`Cmd + D` на macOS), оригінальний вузол ділиться своїми ресурсами з "
"дублікатом. Вам потрібно скористатися параметром ``Зробити суб-ресурси "
"унікальними``, перш ніж ви зможете налаштувати ресурси дублікату, не "
"впливаючи на оригінальний вузол."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:481
msgid ""
"Scroll down to the ``Custom Font`` section and open ``Font``. Lower the "
"``Size`` to a smaller value like ``20`` or ``22``. You may also need to "
"adjust the ``Bottom`` spacing value to align the text's baseline with the EP "
"label on the left."
msgstr ""
"Прокрутіть униз до розділу``Custom Font`` та відкрийте ``Font``. Зменшіть "
"значення ``Size`` до меншого значення, наприклад ``20``, або ``22``. "
"Можливо, вам також знадобиться відрегулювати значення інтервалу ``Bottom`` "
"для вирівнювання базової лінії тексту з міткою EP зліва."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:488
msgid "The EP Count widget, with a smaller font than its HP counterpart"
msgstr "Віджет EP Count з меншим шрифтом, ніж його аналог HP"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:490
msgid ""
"Now, select the ``TextureProgress`` node. Drag the ``energy_bar_bg.png`` "
"file onto the ``Under`` slot and do the same for ``energy_bar_fill.png`` and "
"drop it onto the ``Progress`` texture slot."
msgstr ""
"Тепер виберіть вузол ``TextureProgress``. Перетягніть ``energy_bar_bg.png`` "
"файл у гніздо ``Under`` і зробіть те саме для ``energy_bar_fill.png`` та "
"перетягніть його на гніздо текстури ``Progress``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:494
msgid ""
"You can resize the node vertically so that its bounding rectangle fits the "
"gauge. Do the same with the ``Count`` node until its size aligns with that "
"of the bar. Because the minimal size of ``TextureProgress`` is set based on "
"its textures, you won't be able to downsize the ``Count`` node below that. "
"That is also the size the ``Bar`` container will have. You may downscale "
"this one as well."
msgstr ""
"Ви можете змінити розмір вузла по вертикалі, щоб його обмежувальний "
"прямокутник відповідав показнику. Зробіть те ж саме з вузлом ``Count``, щоб "
"його розмір вирівнявся з розміром шкали. Оскільки мінімальний розмір "
"``TextureProgress`` встановлений на основі його текстур, ви не зможете "
"зменшити розмір вузла ``Count`` менше нього. Такий же розмір буде мати "
"контейнер ``Bar``. Ви також можете зменшити його масштаб."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:501
msgid ""
"Last but not least, the ``Background`` container has a minimum size that "
"makes it a bit large. Select it and in the ``Rect`` section, change the "
"``Min Size`` property down to ``80`` pixels. It should resize automatically "
"and the ``Title`` and ``Number`` nodes should reposition as well."
msgstr ""
"І останнє, але не менш важливе, контейнер ``Background`` має мінімальний "
"розмір, що робить його трохи більшим. Виберіть його та в розділі ``Rect`` "
"змініть властивість ``Min Size`` до ``80`` пікселів. Він повинен змінити "
"розмір автоматично разом із вузлами ``Title`` та ``Number``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:509
msgid "The Count looks better now it's a bit smaller"
msgstr "Count виглядає тепер краще тому, що став трохи менший"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:513
msgid ""
"The Count node's size affects the position of the TextureProgress. As we'll "
"align our bars vertically in a moment, we're better off using the Counter's "
"left margin to resize our EP label. This way both the EnergyBar's Count and "
"the LifeBar's Count nodes are one hundred pixels wide, so both gauges will "
"align perfectly."
msgstr ""
"Розмір вузла Count впливає на положення TextureProgress. Поки ми не "
"вирівняли наші смуги вертикально, нам краще використовувати лівий край "
"Counter для зміни розміру нашої мітки EP. Таким чином, і Count від "
"EnergyBar, і Count від LifeBar шириною сто пікселів, тому обидва показники "
"будуть ідеально вирівнюватися."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:520
msgid "Prepare the bomb and emerald counters"
msgstr "Підготовка лічильників бомб та смарагдів"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:522
msgid ""
"Let us now take care of the counters. Go to ``Scene -> New Inherited Scene`` "
"and select the ``Counter.tscn`` as a base. Rename the root node as "
"``BombCounter`` too. Save the new scene as ``BombCounter.tscn``. That's all "
"for this scene."
msgstr ""
"Давайте тепер подбаємо про лічильники. Перейдіть до ``Сцена -> Нова "
"успадкована сцена`` та виберіть ``Counter.tscn``, як основу. Перейменуйте "
"кореневий вузол на ``BombCounter``. Збережіть нову сцену як ``BombCounter."
"tscn``. Це все для цієї сцени."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:529
msgid "The bomb counter is the same as the original Counter scene"
msgstr "Лічильник бомб такий же, як і в оригінальній сцені Counter"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:531
msgid ""
"Go to ``Scene -> New Inherited Scene`` again and select ``Counter.tscn`` "
"once more. Rename the root node ``EmeraldCounter`` and save the scene as "
"``EmeraldCounter.tscn``. For this one, we mainly need to replace the bomb "
"icon with the emerald icon. In the FileSystem tab, drag the ``emeralds_icon."
"png`` onto the ``Icon`` node's ``Texture`` slot. ``Icon`` already anchors to "
"the right edge of the ``Background`` node so we can change its position and "
"it will scale and reposition with the ``EmeraldCounter`` container. Shift "
"the emerald icon a bit to the right and down. Use the Arrow Keys on the "
"keyboard to nudge its position. Save, and we're done with all the UI "
"elements."
msgstr ""
"Перейдіть знову до ``Сцена -> Нова успадкована сцена`` і виберіть ``Counter."
"tscn`` ще раз. Перейменуйте кореневий вузол на ``EmeraldCounter`` і "
"збережіть сцену як ``EmeraldCounter.tscn``. Тут нам потрібно замінити значок "
"бомби на значок смарагду. З панелі Файлова система перетягніть "
"``emeralds_icon.png`` на гніздо ``Texture`` вузла ``Icon``. ``Icon`` вже "
"прив'язаний до правого краю вузла ``Background``, ми можемо змінити його "
"положення, і він змінить масштаб та переміститься разом з контейнером "
"``EmeraldCounter``. Зсуньте значок смарагду трохи праворуч і вниз за "
"допомогою кнопок зі стрілками на клавіатурі. Збережіть сцену. І на цьому ми "
"закінчили з усіма елементами інтерфейсу."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:544
msgid "The emerald counter should look something like this"
msgstr "Лічильник смарагдів повинен виглядати приблизно так"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:547
msgid "Add the UI components to the final GUI"
msgstr ""
"Додавання компонентів інтерфейсу до кінцевого GUI (графічного інтерфейсу)"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:549
msgid ""
"Time to add all the UI elements to the main GUI scene. Open the ``GUI.tscn`` "
"scene again, and delete the ``Bar`` and ``Counter`` nodes. In the FileSystem "
"dock, find the ``LifeBar.tscn`` and drag and drop it onto the ``Bars`` "
"container in the scene tree. Do the same for the ``EnergyBar``. You should "
"see them align vertically."
msgstr ""
"Час додати всі елементи інтерфейсу до основної сцени GUI. Знову відкрийте "
"сцену ``GUI.tscn`` і видаліть вузли ``Bar`` та ``Counter``. На панелі "
"Файлова система знайдіть ``LifeBar.tscn`` і перетягніть його на контейнер "
"``Bars`` у дереві сцен. Зробіть те ж саме з ``EnergyBar.tscn``. Вони повинні "
"вирівнятися по вертикалі."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:557
msgid "The LifeBar and the EnergyBar align automatically"
msgstr "LifeBar та EnergyBar автоматично вирівнюються"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:559
msgid ""
"Now, drag and drop the ``BombCounter.tscn`` and ``EmeraldCounter.tscn`` "
"scenes onto the ``Counters`` node. They'll resize automatically."
msgstr ""
"Тепер перетягніть сцени ``BombCounter.tscn`` і ``EmeraldCounter.tscn`` на "
"вузол ``Counters``. Вони автоматично змінять розмір."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:564
msgid "The nodes resize to take all the available vertical space"
msgstr "Вузли змінюють розмір, щоб зайняти весь наявний вертикальний простір"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:566
msgid ""
"To let the ``EmeraldCounter`` and ``BombCounter`` use the size we defined in "
"``Counter.tscn``, we need to change the ``Size Flags`` on the ``Counters`` "
"container. Select the ``Counters`` node and unfold the ``Size Flags`` "
"section in the Inspector. Uncheck the ``Fill`` tag for the ``Vertical`` "
"property, and check ``Shrink Center`` so the container centers inside the "
"``HBoxContainer``."
msgstr ""
"Щоб дозволити ``EmeraldCounter`` та ``BombCounter`` використовувати розмір, "
"визначений нами в ``Counter.tscn``, нам потрібно змінити ``Size Flags`` у "
"контейнері ``Counters``. Виберіть вузол ``Counters`` і розгорніть розділ "
"``Size Flags`` в Інспекторі. Зніміть прапорець ``Fill`` для властивості "
"``Vertical`` та встановіть ``Shrink Center``, щоб контейнер знаходиться в "
"центрі ."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:575
msgid "Now both counters have a decent size"
msgstr "Тепер обидва лічильники мають правильний розмір"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:579
msgid ""
"Change the ``Min Size`` property of the ``Counters`` container to control "
"the height of the counters' background."
msgstr ""
"Змініть властивість ``Min Size`` контейнера ``Counters``, щоб контролювати "
"висоту фону лічильників."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:582
msgid ""
"We have one small issue left with the EP label on the EnergyBar: the 2 bars "
"should align vertically. Click the icon next to the ``EnergyBar`` node to "
"open its scene. Select the ``Count`` node and scroll down to the ``Custom "
"Constants`` section. Add a ``Margin Left`` of ``20``. In the ``Rect`` "
"section set the node's ``Min Size`` back to 100, the same value as on the "
"LifeBar. The ``Count`` should now have some margin on the left. If you save "
"and go back to the GUI scene, it will be aligned vertically with the "
"``LifeBar``."
msgstr ""
"У нас залишилася одна невелика проблема з міткою EP на EnergyBar: 2 шкали "
"повинні розташовуватися вертикально. Клацніть піктограму сцени поруч із "
"вузлом ``EnergyBar``, щоб відкрити його сцену. Виберіть ``Count`` вузол і "
"прокрутіть вниз до розділу ``Custom Constants``. Там змініть ``Margin Left`` "
"на ``20``. У розділі ``Rect`` встановіть ``Min Size`` вузла назад на 100, те "
"саме значення, що і в LifeBar. Тепер ``Count`` має деякий відступ зліва. "
"Якщо ви збережете сцену та повернетесь до сцени GUI, він буде вирівняний "
"вертикально з ``LifeBar``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:593
msgid "The 2 bars align perfectly"
msgstr "2 шкали ідеально вирівнюються"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:597
msgid ""
"We could have set up the ``EnergyBar`` this way a few moments ago. But this "
"shows you that you can go back to any scene anytime, tweak it, and see the "
"changes propagate through the project!"
msgstr ""
"Ми могли так налаштувати ``EnergyBar`` раніше. Але тепер ви знаєте, що "
"можете будь-коли повернутися до будь-якої сцени, налаштувати її та побачити, "
"як зміни вплинуть на увесь проєкт!"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:602
msgid "Place the GUI onto the game's mockup"
msgstr "Розміщення графічного інтерфейсу на макеті гри"

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:604
msgid ""
"To wrap up the tutorial we're going to insert the GUI onto the game's mockup "
"scene."
msgstr "На завершення уроку, ми вставимо графічний інтерфейс в макет гри."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:607
msgid "Head to the FileSystem dock and open ``LevelMockup.tscn``."
msgstr "Перейдіть на панель Файлова система та відкрийте ``LevelMockup.tscn``."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:609
msgid ""
"Drag-and-drop the ``GUI.tscn`` scene right below the ``bg`` node and above "
"the ``Characters``. The GUI will scale to fit the entire viewport. Head to "
"the Layout menu and select the ``Center Top`` option so it anchors to the "
"top edge of the game window. Then resize the GUI to make it as small as "
"possible vertically. Now you can see how the interface looks in the context "
"of the game."
msgstr ""
"Перетягніть сцену ``GUI.tscn`` прямо під вузол ``bg``, але вище "
"``Characters``. Графічний інтерфейс буде масштабуватись, щоб відповідати "
"всій області перегляду. Перейдіть до меню Макет і виберіть варіант ``За "
"центром згори``, щоб він прив'язався до верхнього краю вікна гри. Потім "
"змініть розмір GUI, щоб зробити його якомога меншим по вертикалі. Тепер ви "
"можете побачити, як виглядає інтерфейс у контексті гри."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:616
msgid ""
"Congratulations for getting to the end of this long tutorial. You can find "
"the final project here: :download:`ui_gui_design.zip <files/ui_gui_design."
"zip>`."
msgstr ""
"Вітаємо з завершенням цього довгого уроку. Ви можете знайти готовий проєкт "
"тут:`ui_gui_design.zip <files/ui_gui_design.zip>`."

#: ../../docs/getting_started/step_by_step/ui_game_user_interface.rst:625
msgid ""
"**A final note about Responsive Design**. If you resize the GUI, you'll see "
"the nodes move, but the textures and text won't scale. The GUI also has a "
"minimum size, based on the textures inside of it. In games, we don't need "
"the interface to be as flexible as that of a website. You almost never want "
"to support both landscape and portrait screen orientations. It's one or the "
"other. In landscape orientation, the most common ratios range from 4:3 to "
"16:9. They are close to one another. That's why it's enough for the GUI "
"elements to only move horizontally when we change the window size."
msgstr ""
"**Заключна примітка про чутливий дизайн**. Якщо змінити розмір графічного "
"інтерфейсу, ви побачите, що вузли рухаються, але текстури та текст не будуть "
"масштабуватися. GUI також має мінімальний розмір, виходячи з текстур "
"всередині нього. В іграх нам не потрібно, щоб інтерфейс був настільки "
"гнучким, як веб-сайт. Ви майже ніколи не будете підтримувати орієнтацію "
"екрану як ландшафтну, так і портретну. Це те й інше. У ландшафтній "
"орієнтації найпоширеніші співвідношення коливаються від 4: 3 до 16: 9. Вони "
"близькі один одному. Ось чому для елементів графічного інтерфейсу досить "
"переміщатися горизонтально лише тоді, коли ми змінюємо розмір вікна."
