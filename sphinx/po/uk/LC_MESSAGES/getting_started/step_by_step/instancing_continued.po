# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-06 14:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:4
msgid "Instancing (continued)"
msgstr "Instancing (продовження)"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:7
msgid "Recap"
msgstr "Коротке повторення"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:9
msgid "Instancing has many handy uses. At a glance, with instancing you have:"
msgstr "Instancing має багато корисних застосувань. Завдяки йому ви маєте:"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:11
msgid "The ability to subdivide scenes and make them easier to manage."
msgstr "Можливість розподілити сцени та полегшити керування ними."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:12
msgid "A tool to manage and edit multiple node instances at once."
msgstr ""
"Інструмент для управління та редагування декількох екземплярів вузлів "
"одночасно."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:13
msgid ""
"A way to organize and embed complex game flows or even UIs (in Godot, UI "
"Elements are nodes, too)."
msgstr ""
"Спосіб організації та вбудовування складних ігрових потоків, або, навіть, "
"інтерфейсів користувача (у Godot елементи інтерфейсу також є вузлами)."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:17
msgid "Design language"
msgstr "Стиль проектування"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:19
msgid ""
"But the greatest strength that comes with instancing scenes is that it works "
"as an excellent design language. This distinguishes Godot from all the other "
"engines out there. Godot was designed from the ground up around this concept."
msgstr ""
"Але найбільша сила використання екземплярів сцен, полягає в тому, що це "
"чудовий стиль проектування. Це відрізняє Godot від усіх інших редакторів. "
"Godot був розроблений з нуля саме навколо цієї концепції."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:24
msgid ""
"When making games with Godot, the recommended approach is to dismiss most "
"common design patterns, such as MVC or Entity-Relationship diagrams, and "
"instead think about your scenes in a more natural way. Start by imagining "
"the visible elements in your game, the ones that can be named not just by a "
"programmer, but by anyone."
msgstr ""
"При створенні ігор з Godot, рекомендується відмовитись від найбільш "
"поширених моделей проектування, таких як діаграми MVC, або Entity-"
"Relationship, а замість цього продумати свої сцени більш природним чином. "
"Почніть з уявлення видимих елементів у вашій грі, тих, які може назвати не "
"просто програміст, а будь-хто."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:30
msgid "For example, here's how a simple shooter game could be imagined:"
msgstr "Наприклад, ось як можна уявити просту гру стрілялки:"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:34
msgid ""
"You can come up with a diagram like this for almost any kind of game. Write "
"down the parts of the game that you can visualize, and then add arrows to "
"represent ownership of one component by another."
msgstr ""
"Ви можете створити подібну схему майже для будь-якої гри. Запишіть частини "
"гри, які ви можете візуалізувати, а потім протягніть стрілки, щоб зрозуміти "
"які компоненти, яким будуть належати."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:38
msgid ""
"Once you have a diagram like this, the recommended process for making a game "
"is to create a scene for each element listed in the diagram. You'll use "
"instancing (either by code or directly in the editor) for the ownership "
"relationships."
msgstr ""
"Після того як ви намалюєте таку діаграму, рекомендований процес створення "
"гри - це створення сцени для кожного елемента, перерахованого на діаграмі. "
"Ви будете використовувати створення екземплярів (чи в коді, чи безпосередньо "
"в редакторі) для побудови ієрархії відносин."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:42
msgid ""
"A lot of time spent in programming games (or software in general) is on "
"designing an architecture and fitting game components to that architecture. "
"Designing based on scenes replaces that approach and makes development much "
"faster and more straightforward, allowing you to concentrate on the game "
"logic itself. Because most game components map directly to a scene, using a "
"design based on scene instantiation means little other architectural code is "
"needed."
msgstr ""
"Багато часу в програмуванні ігор (та і взагалі в розробці програм) "
"витрачається на проектування архітектури та підлагодження ігрових "
"компонентів до цієї архітектури. Проектування на основі сцен замінює такий "
"підхід і робить розробку набагато швидшою і простішою, дозволяючи "
"сконцентруватися на логіці гри. Оскільки більшість ігрових компонентів "
"відображаються безпосередньо на сцені, проектування на основі інстансування "
"сцен, означає, що інший архітектурний код не потрібен."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:48
msgid ""
"Let's take a look at one more, somewhat more complex, example of an open-"
"world type game with lots of assets and nested elements:"
msgstr ""
"Давайте розглянемо ще один, дещо складніший, приклад гри відкритого типу з "
"великою кількістю ресурсів та вкладених елементів:"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:53
msgid ""
"Take a look at the room element. Let's say we started there. We could make a "
"couple of different room scenes, with different arrangements of furniture "
"(also scenes) in them. Later, we could make a house scene, connecting rooms "
"to make up its interior."
msgstr ""
"Погляньте на елемент кімнати. Скажімо, ми там почали. Ми могли б зробити "
"кілька різних сцен кімнати з різним розташуванням меблів (також сцен) в них. "
"Пізніше ми могли б зробити сцену будинку, з'єднавши кімнати, щоб скласти "
"його інтер'єр."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:58
msgid ""
"Then, we could make a citadel scene, which is made out of many instanced "
"houses. Then, we could start working on the world map terrain, adding the "
"citadel onto it."
msgstr ""
"Потім ми могли б зробити сцену цитаделі, яка зроблена з багатьох екземплярів "
"будинків. Далі ми могли б почати працювати над місцевою картою світу, "
"додавши на неї цитадель."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:62
msgid ""
"Later, we could create scenes that represent guards (and other NPCs) and add "
"them to the citadel as well. As a result, they would be indirectly added to "
"the overall game world."
msgstr ""
"Пізніше ми могли б створити сцени, які представляють охоронців (та інших "
"NPC) і додати їх до цитаделі. Як результат, вони будуть опосередковано "
"додані до загального ігрового світу."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:66
msgid ""
"With Godot, it's easy to iterate on your game like this, as all you need to "
"do is create and instance more scenes. Furthermore, the editor UI is "
"designed to be user friendly for programmers and non-programmers alike. A "
"typical team development process can involve 2D or 3D artists, level "
"designers, game designers, and animators, all working with the editor "
"interface."
msgstr ""
"З Godot легко відтворити гру, схожу на цю, адже все, що вам потрібно "
"зробити, це створити та інстансувати більше сцен. Крім того, інтерфейс "
"редактора побудований так, щоб ним було зручно користуватися, як "
"програмістам, так і не програмістам. Типовий склад команди розробки може "
"залучати 2D, або 3D, художників, дизайнерів рівнів, дизайнерів ігор та "
"аніматорів, які працюють з інтерфейсом редактора."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:73
msgid "Information overload!"
msgstr "Інформаційне перевантаження!"

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:75
msgid ""
"This has been a lot of high level information dropped on you all at once. "
"However, the important part of this tutorial was to create an awareness of "
"how scenes and instancing are used in real projects."
msgstr ""
"Тут було дуже багато нової інформації, яка звалилася на вас вся відразу. "
"Однак важливою частиною цього уроку було створення усвідомлення того, як "
"сцени та вставка їх екземплярів використовуються в реальних проектах."

#: ../../docs/getting_started/step_by_step/instancing_continued.rst:79
msgid ""
"Everything discussed here will become second nature to you once you start "
"making games and putting these concepts into practice. For now, don't worry "
"about it too much, and go on to the next tutorial!"
msgstr ""
"Все, що тут обговорювалося, стане для вас другою суттю, як тільки ви почнете "
"робити ігри та втілювати в життя ці поняття. Поки що не переймайтеся цим, і "
"переходите до наступного уроку!"
