# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-08 12:36+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:4
msgid "C# API differences to GDScript"
msgstr "C# API 與 GDScript 的不同"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:6
msgid "This is a (incomplete) list of API differences between C# and GDScript."
msgstr "本頁列出了 (不完整的) C# 與 GDScript 間的 API 差異。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:9
msgid "General differences"
msgstr "一般差異"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:11
msgid ""
"As explained in the :ref:`doc_c_sharp`, C# generally uses ``PascalCase`` "
"instead of the ``snake_case`` used in GDScript and C++."
msgstr ""
"如同在 :ref:`doc_c_sharp` 中解釋的一樣，C# 一般會使用 ``PascalCase`` 而不是 "
"GDScript 與 C++ 所使用的 ``snake_case`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:15
msgid "Global scope"
msgstr "全域作用域"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:17
msgid ""
"Global functions and some constants had to be moved to classes, since C# "
"does not allow declaring them in namespaces. Most global constants were "
"moved to their own enums."
msgstr ""
"全域函式與一些常數被移到類別裡了，因為 C# 不允許在命名空間中定義這些函式與常"
"數。大部分全域常數都被移到各自的列舉類型中了。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:22
msgid "Constants"
msgstr "常數"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:24
msgid ""
"Global constants were moved to their own enums. For example, ``ERR_*`` "
"constants were moved to the ``Error`` enum."
msgstr ""
"全域常數移至其各自的列舉類型。例如， ``ERR_*`` 常數移動到了 ``Error`` 列舉類"
"型中。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:27
msgid "Special cases:"
msgstr "特例："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:30
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:59
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:221
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:236
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:248
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:259
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:267
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:282
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:294
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:351
msgid "GDScript"
msgstr "\\ GDScript"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:30
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:59
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:221
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:236
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:248
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:259
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:267
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:282
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:294
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:351
msgid "C#"
msgstr "\\ C#"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:32
msgid "``SPKEY``"
msgstr "``SPKEY``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:32
msgid "``GD.SpKey``"
msgstr "``GD.SpKey``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:33
msgid "``TYPE_*``"
msgstr "``TYPE_*``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:33
msgid "``Variant.Type`` enum"
msgstr "``Variant.Type`` 列舉類型"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:34
msgid "``OP_*``"
msgstr "``OP_*``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:34
msgid "``Variant.Operator`` enum"
msgstr "``Variant.Operator`` 列舉類型"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:38
msgid "Math functions"
msgstr "數學函式"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:40
msgid ""
"Math global functions, like ``abs``, ``acos``, ``asin``, ``atan`` and "
"``atan2``, are located under ``Mathf`` as ``Abs``, ``Acos``, ``Asin``, "
"``Atan`` and ``Atan2``. The ``PI`` constant can be found as ``Mathf.Pi``."
msgstr ""
"數學全域函式，如 ``abs``, ``acos``, ``asin``, ``atan`` 與 ``atan2``，都放在"
"了 ``Mathf`` 下，命名為 ``Abs``, ``Acos``, ``Asin``, ``Atan`` 與 "
"``Atan2`` 。 ``PI`` 常數則為 ``Mathf.Pi`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:45
msgid "Random functions"
msgstr "隨機數函式"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:47
msgid ""
"Random global functions, like ``rand_range`` and ``rand_seed``, are located "
"under ``GD``. Example: ``GD.RandRange`` and ``GD.RandSeed``."
msgstr ""
"隨機數全域函式，如 ``rand_range`` 與 ``rand_seed`` ，都放在 ``GD`` 底下。"
"如： ``GD.RandRange`` 與 ``GD.RandSeed`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:51
msgid "Other functions"
msgstr "其他函式"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:53
msgid ""
"Many other global functions like ``print`` and ``var2str`` are located under "
"``GD``. Example: ``GD.Print`` and ``GD.Var2Str``."
msgstr ""
"許多其他的全域函式，如 ``print`` 與 ``var2str`` 都放在 ``GD`` 底下。如 ``GD."
"Print`` 與 ``GD.Var2Str`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:56
msgid "Exceptions:"
msgstr "例外："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:61
msgid "``weakref(obj)``"
msgstr "``weakref(obj)``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:61
msgid "``Object.WeakRef(obj)``"
msgstr "``Object.WeakRef(obj)``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:62
msgid "``is_instance_valid(obj)``"
msgstr "``is_instance_valid(obj)``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:62
msgid "``Object.IsInstanceValid(obj)``"
msgstr "``Object.IsInstanceValid(obj)``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:66
msgid "Tips"
msgstr "提示"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:68
msgid ""
"Sometimes it can be useful to use the ``using static`` directive. This "
"directive allows to access the members and nested types of a class without "
"specifying the class name."
msgstr ""
"有時候，使用 ``using static`` 指示詞也很有用。使用這個指示詞就可以存取類別的"
"成員與巢狀型別而無需指定類別名稱。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:71
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:92
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:154
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:165
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:177
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:335
msgid "Example:"
msgstr "範例："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:86
msgid "Export keyword"
msgstr "匯出關鍵字"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:88
msgid ""
"Use the ``[Export]`` attribute instead of the GDScript ``export`` keyword. "
"This attribute can also be provided with optional :ref:"
"`PropertyHint<enum_@GlobalScope_PropertyHint>` and ``hintString`` "
"parameters. Default values can be set by assigning a value."
msgstr ""
"使用 ``[Export]`` 屬性來取代 GDScript 中的 ``export`` 關鍵字。這個屬性也可以"
"加上可選的 :ref:`PropertyHint<enum_@GlobalScope_PropertyHint>` 與 "
"``hintString`` 參數。預設值可以通過指派數值來設定。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:114
msgid "Signal keyword"
msgstr "訊號關鍵字"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:116
msgid ""
"Use the ``[Signal]`` attribute to declare a signal instead of the GDScript "
"``signal`` keyword. This attribute should be used on a `delegate`, whose "
"name signature will be used to define the signal."
msgstr ""
"使用 ``[Signal]`` 屬性來取代 GDScript 中的 ``signal`` 關鍵字宣告訊號。這個屬"
"性也可以用在 **delegate`` 上，其名稱簽名會用來定義訊號。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:124
msgid "See also: :ref:`doc_c_sharp_signals`."
msgstr "參見 :ref:`c_sharp_signals` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:127
#, fuzzy
msgid "`onready` keyword"
msgstr "Onready 關鍵字"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:129
msgid ""
"GDScript has the ability to defer the initialization of a member variable "
"until the ready function is called with `onready` (cf. :ref:"
"`doc_gdscript_onready_keyword`). For example:"
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:137
msgid ""
"However C# does not have this ability. To achieve the same effect you need "
"to do this."
msgstr ""

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:149
msgid "Singletons"
msgstr "單例"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:151
msgid ""
"Singletons are available as static classes rather than using the singleton "
"pattern. This is to make code less verbose than it would be with an "
"``Instance`` property."
msgstr ""
"單例為靜態類別，而不是使用單例模式。這樣可以讓程式碼比起使用 ``Instance`` 屬"
"性來得簡單。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:160
msgid ""
"However, in some very rare cases this is not enough. For example, you may "
"want to access a member from the base class ``Godot.Object``, like "
"``Connect``. For such use cases we provide a static property named "
"``Singleton`` that returns the singleton instance. The type of this instance "
"is ``Godot.Object``."
msgstr ""
"但，在某些罕見情況下，這樣還不夠。如，我們可能需要存取基礎類型 ``Godot."
"Object`` 中的成員，如 ``Connect`` 。這種情況下，可以使用一個靜態屬性，名為 "
"``Singleton`` ，這個屬性會回傳單例實體。該實體的型別為 ``Godot.Object`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:172
msgid "String"
msgstr "字串"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:174
msgid ""
"Use ``System.String`` (``string``). Most of Godot's String methods are "
"provided by the ``StringExtensions`` class as extension methods."
msgstr ""
"使用 ``System.String`` (``string``) 。大多數 Godot 的字串方法都由 "
"``StringExtensions`` 類別作為擴充方法提供。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:184
msgid "There are a few differences, though:"
msgstr "雖然有一些不同的地方："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:186
msgid ""
"``erase``: Strings are immutable in C#, so we cannot modify the string "
"passed to the extension method. For this reason, ``Erase`` was added as an "
"extension method of ``StringBuilder`` instead of string. Alternatively, you "
"can use ``string.Remove``."
msgstr ""
"``erase``：在 C# 中的字串是不可變的，所以若傳到擴充方法中的字串無法修改。因"
"此，``Erase`` 方法被新增到 ``StringBuilder`` 中作為擴充方法，而非字串。或者也"
"可使用 ``string.Remove`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:190
msgid ""
"``IsSubsequenceOf``/``IsSubsequenceOfi``: An additional method is provided, "
"which is an overload of ``IsSubsequenceOf``, allowing you to explicitly "
"specify case sensitivity:"
msgstr ""
"``IsSubsequenceOf``/``IsSubsequenceOfi`` ：有另一個方法，為一個 "
"``IsSubsequenceOf`` 的重載，可以顯示指定區分大小寫："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:201
msgid ""
"``Match``/``Matchn``/``ExprMatch``: An additional method is provided besides "
"``Match`` and ``Matchn``, which allows you to explicitly specify case "
"sensitivity:"
msgstr ""
"``Match``/``Matchn``/``ExprMatch`` ：除了 ``Match`` 與 ``Matchn`` 之外還提供"
"了一個額外的方法，用來明確指定區分大小寫："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:212
msgid "Basis"
msgstr "\\ Basis"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:214
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Basis()`` initializes all primitive members to their default value. Use "
"``Basis.Identity`` for the equivalent of ``Basis()`` in GDScript and C++."
msgstr ""
"在 C# 中，結構為無參數的建置函式。因此 ``new Basis()`` 會初始化所有原始成員並"
"設為預設值。使用 ``Basis.Identity`` 與 GDScript 與 C++ 中的 ``Basis()`` 等"
"效。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:218
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:264
msgid "The following method was converted to a property with a different name:"
msgstr "下列方法轉換成了名稱不同的屬性："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:223
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:239
msgid "``get_scale()``"
msgstr "``get_scale()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:223
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:239
msgid "``Scale``"
msgstr "``Scale``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:227
msgid "Transform2D"
msgstr "\\ Transform2D"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:229
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Transform2D()`` initializes all primitive members to their default value. "
"Please use ``Transform2D.Identity`` for the equivalent of ``Transform2D()`` "
"in GDScript and C++."
msgstr ""
"在 C# 中，結構為無參數的建置函式。因此，``new Transform2D()`` 會初始化所有原"
"始成員並設為預設值。請使用 ``Transform2D.Identity`` 來達成與 GDScript 或 C++ "
"中 ``Transform2D()`` 同等的效果。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:233
msgid ""
"The following methods were converted to properties with their respective "
"names changed:"
msgstr "下列各個方法皆轉換為屬性並更改其名稱："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:238
msgid "``get_rotation()``"
msgstr "``get_rotation()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:238
msgid "``Rotation``"
msgstr "``Rotation``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:243
msgid "Plane"
msgstr "\\ Plane"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:245
msgid ""
"The following method was converted to a property with a *slightly* different "
"name:"
msgstr "下列方法被轉換成了名稱 **稍微** 不同的屬性："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:250
msgid "``center()``"
msgstr "``center()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:250
msgid "``Center``"
msgstr "``Center``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:254
msgid "Rect2"
msgstr "\\ Rect2"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:256
msgid ""
"The following field was converted to a property with a *slightly* different "
"name:"
msgstr "下列欄位被轉換成了名稱 **稍微** 不同的屬性："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:261
msgid "``end``"
msgstr "``end``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:261
msgid "``End``"
msgstr "``End``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:269
msgid "``get_area()``"
msgstr "``get_area()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:269
msgid "``Area``"
msgstr "``Area``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:273
msgid "Quat"
msgstr "\\ Quat"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:275
msgid ""
"Structs cannot have parameterless constructors in C#. Therefore, ``new "
"Quat()`` initializes all primitive members to their default value. Please "
"use ``Quat.Identity`` for the equivalent of ``Quat()`` in GDScript and C++."
msgstr ""
"在 C# 中，結構為無參數的建置函式。因此，``new Quat()`` 會初始化所有原始成員並"
"設為預設值。請使用 ``Quat.Identity`` 來達到與 GDScript 或 C++ 中 ``Quat()`` "
"同等的效果。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:279
msgid ""
"The following methods were converted to a property with a different name:"
msgstr "下列方法被換成了不同名稱的屬性："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:284
msgid "``length()``"
msgstr "``length()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:284
msgid "``Length``"
msgstr "``Length``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:285
msgid "``length_squared()``"
msgstr "``length_squared()``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:285
msgid "``LengthSquared``"
msgstr "``LengthSquared``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:289
msgid "Array"
msgstr "陣列"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:291
msgid ""
"*This is temporary. PoolArrays will need their own types to be used the way "
"they are meant to.*"
msgstr ""
"**本表為暫定。各個 PoolArray 需要定義各自的型別才能以其原定的方式使用。**"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:296
msgid "``Array``"
msgstr "``Array``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:296
msgid "``Godot.Collections.Array``"
msgstr "``Godot.Collections.Array``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:297
msgid "``PoolIntArray``"
msgstr "``PoolIntArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:297
msgid "``int[]``"
msgstr "``int[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:298
msgid "``PoolByteArray``"
msgstr "``PoolByteArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:298
msgid "``byte[]``"
msgstr "``byte[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:299
msgid "``PoolFloatArray``"
msgstr "``PoolFloatArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:299
msgid "``float[]``"
msgstr "``float[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:300
msgid "``PoolStringArray``"
msgstr "``PoolStringArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:300
msgid "``String[]``"
msgstr "``String[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:301
msgid "``PoolColorArray``"
msgstr "``PoolColorArray``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:301
msgid "``Color[]``"
msgstr "``Color[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:302
msgid "``PoolVector2Array``"
msgstr "``PoolVector2Array``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:302
msgid "``Vector2[]``"
msgstr "``Vector2[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:303
msgid "``PoolVector3Array``"
msgstr "``PoolVector3Array``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:303
msgid "``Vector3[]``"
msgstr "``Vector3[]``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:306
msgid ""
"``Godot.Collections.Array<T>`` is a type-safe wrapper around ``Godot."
"Collections.Array``. Use the ``Godot.Collections.Array<T>(Godot.Collections."
"Array)`` constructor to create one."
msgstr ""
"``Godot.Collections.Array<T>`` 為類別安全版的 ``Godot.Collections.Array`` 封"
"裝。可使用 ``Godot.Collections.Array<T>(Godot.Collections.Array)`` 建置函式來"
"建立。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:310
msgid "Dictionary"
msgstr "字典"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:312
msgid "Use ``Godot.Collections.Dictionary``."
msgstr "使用 ``Godot.Collections.Dictionary`` 。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:314
msgid ""
"``Godot.Collections.Dictionary<T>`` is a type-safe wrapper around ``Godot."
"Collections.Dictionary``. Use the ``Godot.Collections.Dictionary<T>(Godot."
"Collections.Dictionary)`` constructor to create one."
msgstr ""
"``Godot.Collections.Dictionary<T>`` 是型別安全版的 ``Godot.Collections."
"Dictionary`` 封裝。使用 ``Godot.Collections.Dictionary<T>(Godot.Collections."
"Dictionary)`` 建置函式來建立。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:318
msgid "Variant"
msgstr "Variant"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:320
msgid "``System.Object`` (``object``) is used instead of ``Variant``."
msgstr "使用 ``System.Object`` (``object``) 來代替``Variant``."

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:323
msgid "Communicating with other scripting languages"
msgstr "與其他腳本語言溝通"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:325
msgid "This is explained extensively in :ref:`doc_cross_language_scripting`."
msgstr "本主題於 :ref:`doc_cross_language_scripting` 中詳細說明。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:328
msgid "Yield"
msgstr "\\ Yield"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:330
msgid ""
"Something similar to GDScript's ``yield`` with a single parameter can be "
"achieved with C#'s `yield keyword <https://docs.microsoft.com/en-US/dotnet/"
"csharp/language-reference/keywords/yield>`_."
msgstr ""
"可以使用 C# 的 `yield 關鍵字 <https://docs.microsoft.com/zh-tw/dotnet/csharp/"
"language-reference/keywords/yield>`_ 來達到與在 GDScript 使用有單一參數的 "
"``yield`` 相同的功能。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:333
msgid ""
"The equivalent of yield on signal can be achieved with async/await and "
"``Godot.Object.ToSignal``."
msgstr ""
"對訊號的 yield 可以使用 async/await 與 ``Godot.Object.ToSignal`` 來達到同等效"
"果。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:343
msgid "Other differences"
msgstr "其他差異"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:345
msgid ""
"``preload``, as it works in GDScript, is not available in C#. Use ``GD."
"Load`` or ``ResourceLoader.Load`` instead."
msgstr ""
"在 GDScript 中可用的 ``preload`` 無法於 C# 中使用。請使用 ``GD.Load`` 或 "
"``ResourceLoader.Load`` 代替。"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:348
msgid "Other differences:"
msgstr "其他差異："

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:353
msgid "``Color8``"
msgstr "``Color8``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:353
msgid "``Color.Color8``"
msgstr "``Color.Color8``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:354
msgid "``is_inf``"
msgstr "``is_inf``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:354
msgid "``float.IsInfinity``"
msgstr "``float.IsInfinity``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:355
msgid "``is_nan``"
msgstr "``is_nan``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:355
msgid "``float.IsNaN``"
msgstr "``float.IsNaN``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:356
msgid "``dict2inst``"
msgstr "``dict2inst``"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:356
#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:357
msgid "TODO"
msgstr "TODO 待補"

#: ../../docs/getting_started/scripting/c_sharp/c_sharp_differences.rst:357
msgid "``inst2dict``"
msgstr "``inst2dict``"
