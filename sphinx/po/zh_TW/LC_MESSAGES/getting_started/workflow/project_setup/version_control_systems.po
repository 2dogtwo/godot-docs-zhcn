# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2021, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine 3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 15:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:4
msgid "Version Control Systems"
msgstr "版本控制系統"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:7
msgid "Introduction"
msgstr "簡介"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:9
msgid ""
"Godot aims to be VCS friendly and generate mostly readable and mergeable "
"files. Godot also supports the use of version control systems in the editor "
"itself. However, VCS in the editor requires a plugin for the specific VCS "
"you are using. VCS can be setup or shut down in the editor under **Project > "
"Version Control**."
msgstr ""
"Godot 旨在對 VCS 友善並儘量產生高可讀性與可合併的檔案。Godot 也支援在編輯器中"
"使用版本控制系統。但在編輯器中使用版本控制系統需要安裝對應的外掛。可於 **[專"
"案] > [版本控制]** 中設定或關閉版本控制系統。"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:17
msgid "Official Git plugin"
msgstr "官方 Git 外掛"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:19
msgid ""
"Using Git from inside the editor is supported with an official plugin. You "
"can find the latest releases `here <https://github.com/godotengine/godot-git-"
"plugin/releases>`__ (it is not available in the asset library). "
"Documentation on how to use the Git plugin can be found `here <https://"
"github.com/godotengine/godot-git-plugin/wiki>`__."
msgstr ""
"可以使用官方外掛來在編輯器中使用 Git。可於 `此處 <https://github.com/"
"godotengine/godot-git-plugin/releases>`__ 取得最新版本 (該外掛不在素材庫中)。"
"關於如何使用 Git 外掛的說明文件可參考 `此處 (英文) <https://github.com/"
"godotengine/godot-git-plugin/wiki>`__ 。"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:27
msgid "Files to exclude from VCS"
msgstr "在版本控制系統中忽略的檔案"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:29
msgid "There are some folders Godot creates you should have your VCS ignore:"
msgstr "有一些 Godot 建立的資料夾應該於版本控制系統中忽略："

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:31
msgid ""
"``.import/``: This folder stores all the files it imports automatically "
"based on your source assets and their import flags."
msgstr "``.import/`` ：依據原始素材與其旗標，自動保存所有匯入的檔案。"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:33
msgid ""
"``*.translation``: These files are binary imported translations generated "
"from CSV files."
msgstr "``*.translation`` ：依據 CSV 檔產生，二進位匯入的翻譯。"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:34
msgid ""
"``export_presets.cfg``: This file contains all the export presets for the "
"project, including sensitive information such as Android keystore "
"credentials."
msgstr ""
"``export_presets.cfg`` ：內有專案的所有匯出預設設定，包含機敏資訊如 Android "
"金鑰儲存區認證。"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:36
msgid ""
"``.mono/``: This folder stores automatically-generated Mono files. It only "
"exists in projects that use the Mono version of Godot."
msgstr ""
"``.mono/`` ：儲存自動產生的 Mono 檔案。只在專案使用 Mono 版本的 Godot 時會有"
"此資料夾。"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:40
msgid "Working with Git on Windows"
msgstr "在 Windows 上使用 Git"

#: ../../docs/getting_started/workflow/project_setup/version_control_systems.rst:42
msgid ""
"Most Git for Windows clients are configured with the ``core.autocrlf`` set "
"to ``true``. This can lead to files unnecessarily being marked as modified "
"by Git due to their line endings being converted automatically. It is better "
"to set this option as::"
msgstr ""
"Windows 上大多數的 Git 用戶端都會將 ``core.autocrlf`` 設為 ``true`` 。這個設"
"定會使檔案被 Git 標記為已修改，因為這些檔案的行結尾會自動被轉換。最好更改這個"
"選項："
