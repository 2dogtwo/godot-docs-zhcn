# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 18:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "TSCN file format"
msgstr "TSCN 檔案格式"

#, fuzzy
msgid ""
"The TSCN (text scene) file format represents a single scene tree inside "
"Godot. Unlike binary SCN files, TSCN files have the advantage of being "
"mostly human-readable and easy for version control systems to manage."
msgstr ""
"TSCN (Text SCeNe) 檔案格式代表 Godot 內的單一節點樹。TSCN 檔具有人類可讀取且"
"適合用於版本控制系統的特點。匯出時，TSCN 檔會被編譯為保存在 .import 資料夾內"
"的二進位格式 ``.scn`` 檔，以減少資料大小並加速載入。"

#, fuzzy
msgid ""
"The ESCN (exported scene) file format is identical to the TSCN file format, "
"but is used to indicate to Godot that the file has been exported from "
"another program and should not be edited by the user from within Godot. "
"Unlike SCN and TSCN files, during import, ESCN files are compiled to binary "
"SCN files stored inside the ``.godot/imported/`` folder. This reduces the "
"data size and speeds up loading, as binary formats are faster to load "
"compared to text-based formats."
msgstr ""
"ESCN (Exported SCeNe) 的檔案格式與 TSCN 檔案格式完全相容，但對 Godot 來說則表"
"示該檔案是從另一個程式匯出的，且無法從 Godot 內進行編輯。"

msgid ""
"To make files more compact, properties equal to the default value are not "
"stored in scene/resource files. It is possible to write them manually, but "
"they will be discarded when saving the file."
msgstr ""

msgid ""
"For those looking for a complete description, the parsing is handled in the "
"file `resource_format_text.cpp <https://github.com/godotengine/godot/blob/"
"master/scene/resources/resource_format_text.cpp>`_ in the "
"``ResourceFormatLoaderText`` class."
msgstr ""
"若需要完整的說明，請參考 ``ResourceFormatLoaderText`` 中負責剖析該格式的 "
"`resource_format_text.cpp <https://github.com/godotengine/godot/blob/master/"
"scene/resources/resource_format_text.cpp>`_ 檔案。"

msgid ""
"The scene and resource file formats have changed significantly in Godot 4, "
"with the introduction of string-based UIDs to replace incremental integer "
"IDs."
msgstr ""

msgid ""
"Mesh, skeleton and animation data is also stored differently compared to "
"Godot 3. You can read about some of the changes in this article: `Animation "
"data rework for 4.0 <https://godotengine.org/article/animation-data-"
"redesign-40/>`__"
msgstr ""

msgid ""
"Scenes and resources saved with Godot 4.x contain ``format=3`` in their "
"header, whereas Godot 3.x uses ``format=2`` instead."
msgstr ""

msgid "File structure"
msgstr "檔案結構"

msgid "There are five main sections inside the TSCN file:"
msgstr "在 TSCN 檔中主要有五個區塊："

#, fuzzy
msgid "File descriptor"
msgstr "檔案描述元"

msgid "External resources"
msgstr "外部資源"

msgid "Internal resources"
msgstr "內部資源"

msgid "Nodes"
msgstr "節點"

msgid "Connections"
msgstr "連接"

#, fuzzy
msgid ""
"The file descriptor looks like ``[gd_scene load_steps=4 format=3 uid=\"uid://"
"cecaux1sm7mo0\"]`` and should be the first entry in the file. The "
"``load_steps`` parameter is equal to the total amount of resources (internal "
"and external) plus one (for the file itself). If the file has no resources, "
"``load_steps`` is omitted. The engine will still load the file correctly if "
"``load_steps`` is incorrect, but this will affect loading bars and any other "
"piece of code relying on that value."
msgstr ""
"檔案描述資源類似 ``[gd_scene load_steps=1 format=2]`` ，且應放在檔案的最前"
"面。``load_steps`` 參數 (理論上) 應為該檔案內含資源的數量。但，實務上，該值為"
"多少應該無影響。"

msgid ""
"``uid`` is an unique string-based identifier representing the scene. This is "
"used by the engine to track files that are moved around, even while the "
"editor is closed. Scripts can also load UID-based resources using the "
"``uid://`` path prefix to avoid relying on filesystem paths. This makes it "
"possible to move around a file in the project, but still be able to load it "
"in scripts without having to modify the script. Godot does not use external "
"files to keep track of IDs, which means no central metadata storage location "
"is required within the project. See `this pull request <https://github.com/"
"godotengine/godot/pull/50786>`__ for detailed information."
msgstr ""

#, fuzzy
msgid ""
"These sections should appear in order, but it can be hard to distinguish "
"them. The only difference between them is the first element in the heading "
"for all of the items in the section. For example, the heading of all "
"external resources should start with ``[ext_resource ...]``."
msgstr ""
"這些區塊應照會順序排列，但要區分出各個段落可能有點困難。在這些區塊間的主要差"
"異就是各個段落中所有項目標題的第一項元素。舉例來說，所有外部資源的標題都應以 "
"``[ext_resource ......]`` 開頭。"

#, fuzzy
msgid ""
"A TSCN file may contain single-line comments starting with a semicolon (``;"
"``). However, comments will be discarded when saving the file using the "
"Godot editor. Whitespace within a TSCN file is not significant (except "
"within strings), but extraneous whitespace will be discarded when saving the "
"file."
msgstr ""
"TSCN 檔案可以包含以分號 (``;``) 開頭的單行註解。但，以 Godot 編輯器保存時會移"
"除註解。"

msgid "Entries inside the file"
msgstr "檔案內的項目"

#, fuzzy
msgid ""
"A heading looks like ``[<resource_type> key1=value1 key2=value2 "
"key3=value3 ...]`` where resource_type is one of:"
msgstr ""
"當 resource_type 為下列其一時，標題看起來會像 ``[<resource_type> key=value "
"key=value key=value ...]`` ："

msgid "``ext_resource``"
msgstr "\\ ``ext_resource``"

msgid "``sub_resource``"
msgstr "\\ ``sub_resource``"

msgid "``node``"
msgstr "\\ ``node``"

msgid "``connection``"
msgstr "\\ ``connection``"

#, fuzzy
msgid ""
"Below every heading comes zero or more ``key = value`` pairs. The values can "
"be complex datatypes such as Arrays, Transforms, Colors, and so on. For "
"example, a Node3D looks like:"
msgstr ""
"在每個標題後都會有 0 或多個 ``key = value`` 索引鍵／值組。數值可以是複雜的資"
"料型別，如 Array, Transform, Color …等。舉例來說，Spatial 節點可能會類似："

msgid "The scene tree"
msgstr "場景樹"

#, fuzzy
msgid ""
"The scene tree is made up of… nodes! The heading of each node consists of "
"its name, parent and (most of the time) a type. For example: ``[node "
"name=\"PlayerCamera\" type=\"Camera\" parent=\"Player/Head\"]``"
msgstr ""
"場景樹是由……節點構成的！各個節點的標題都是由名稱、母節點與 (大多數時候還會"
"有) 型別所組成的。如， ``[node type=\"Camera\" name=\"PlayerCamera\" "
"parent=\"Player/Head\"]``"

msgid "Other valid keywords include:"
msgstr "其他有效的關鍵字包含："

msgid "``instance``"
msgstr "\\ ``instance``"

msgid "``instance_placeholder``"
msgstr "\\ ``instance_placeholder``"

msgid "``owner``"
msgstr "\\ ``owner``"

msgid ""
"``index`` (sets the order of appearance in the tree; if absent, inherited "
"nodes will take precedence over plain ones)"
msgstr ""

msgid "``groups``"
msgstr "\\ ``groups``"

#, fuzzy
msgid ""
"The first node in the file, which is also the scene root, must **not** have "
"a ``parent=\"Path/To/Node\"`` entry in its heading. All scene files should "
"have exactly *one* scene root. If it doesn't, Godot will fail to import the "
"file. The parent path of other nodes should be absolute, but shouldn't "
"contain the scene root's name. If the node is a direct child of the scene "
"root, the path should be ``\".\"``. Here is an example scene tree (but "
"without any node content):"
msgstr ""
"檔案中的第一個節點同時也是根節點，該節點的標題不得包含 ``parent=Path/To/"
"Node`` 項目。所有的場景檔案都必須只有 **一個** 根節點，否則 Godot 將無法匯入"
"該檔案。其他結點的母級節點必須使用絕對路徑，但不得包含場景的根名稱。若某個節"
"點為場景根節點的直接子節點，則路徑為 `「 . 」``。下列為範例場景樹 (但無任何節"
"點內容)："

msgid ""
"To make the file structure easier to grasp, you can saving a file with any "
"given node or resource then inspect it yourself in an external editor. You "
"can also make incremental changes in the Godot editor, and keep an external "
"text editor open on the ``.tscn`` or ``.tres`` file with auto-reload enabled "
"to see what changes."
msgstr ""

msgid ""
"Here is an example of a scene containing a RigidBody3D-based ball with "
"collision, visuals (mesh + light) and a camera parented to the RigidBody3D:"
msgstr ""

msgid "NodePath"
msgstr "\\ NodePath"

#, fuzzy
msgid ""
"A tree structure is not enough to represent the whole scene. Godot uses a "
"``NodePath(Path/To/Node)`` structure to refer to another node or attribute "
"of the node anywhere in the scene tree. Paths are relative to the current "
"node, with ``NodePath(\".\")`` pointing to the current node and "
"``NodePath(\"\")`` pointing to no node at all."
msgstr ""
"使用樹狀結構並無法代表完整的場景。Godot 使用 ``NodePath(Path/To/Node)`` 結構"
"來參照場景樹中的某個節點或節點的屬性。舉例來說，MeshInstance 使用 "
"``NodePoint()`` 來指向其骨架。同樣地，動畫軌使用 ``NodePath()`` 來指向動畫的"
"節點屬性。"

#, fuzzy
msgid ""
"For instance, MeshInstance3D uses ``NodePath()`` to point to its skeleton. "
"Likewise, Animation tracks use ``NodePath()`` to point to node properties to "
"animate."
msgstr ""
"使用樹狀結構並無法代表完整的場景。Godot 使用 ``NodePath(Path/To/Node)`` 結構"
"來參照場景樹中的某個節點或節點的屬性。舉例來說，MeshInstance 使用 "
"``NodePoint()`` 來指向其骨架。同樣地，動畫軌使用 ``NodePath()`` 來指向動畫的"
"節點屬性。"

msgid ""
"NodePath can also point to a property using a ``:property_name`` suffix, and "
"even point to a specific component for vector, transform and color types. "
"This is used by Animation resources to point to specific properties to "
"animate. For example, ``NodePath(\"MeshInstance3D:scale.x\")`` points to the "
"``x`` component of the ``scale`` Vector3 property in MeshInstance3D."
msgstr ""

msgid ""
"For example, the ``skeleton`` property in the MeshInstance3D node called "
"``mesh`` points to its parent, ``Armature01``:"
msgstr ""

#, fuzzy
msgid "Skeleton3D"
msgstr "骨架"

#, fuzzy
msgid ""
"The :ref:`class_Skeleton3D` node inherits the Node3D node, but may alsohave "
"a list of bones described in key-value pairs in the format ``bones/<id>/"
"<attribute> = value``. The bone attributes consist of:"
msgstr ""
"Skeleton 節點繼承自 Spatial 節點，但同時 Skeleton 也以 ``bones/Id/"
"Attribute=Value`` 這樣的格式來儲存一組索引鍵／值格式的骨頭列表。骨頭屬性由下"
"列這幾個屬性構成："

msgid "``position``: Vector3"
msgstr ""

#, fuzzy
msgid "``rotation``: Quaternion"
msgstr "``Rotation``"

msgid "``scale``: Vector3"
msgstr ""

msgid ""
"These attributes are all optional. For instance, a bone may only define "
"``position`` or ``rotation`` without defining the other properties."
msgstr ""

msgid "Here's an example of a skeleton node with two bones:"
msgstr "下列為有兩個骨頭的骨骼節點範例："

#, fuzzy
msgid "BoneAttachment3D"
msgstr "\\ BoneAttachment"

#, fuzzy
msgid ""
"The :ref:`class_BoneAttachment3D` node is an intermediate node to describe "
"some node being parented to a single bone in a Skeleton node. The "
"BoneAttachment has a ``bone_name = \"name of bone\"`` property, as well as a "
"property for the matching bone index."
msgstr ""
"BoneAttachment 節點為用來描述某個節點屬於某 Skeleton 節點的單一骨頭之子節點。"
"BoneAttachment 有一個 ``bone_name=NameOfBone`` 屬性，而對應為母節點的骨頭之 "
"``bound_children`` 列表中則有 BoneAttachment 節點。"

#, fuzzy
msgid ""
"An example of a :ref:`class_Marker3D` node parented to a bone in Skeleton:"
msgstr "下列為 Skeleton 中有骨頭母節點的 MeshInstance 範例："

msgid "AnimationPlayer"
msgstr "\\ AnimationPlayer"

msgid ""
"The :ref:`class_AnimationPlayer` node works with one or more animation "
"libraries stored in :ref:`class_AnimationLibrary` resources. An animation "
"library is a collection of individual :ref:`class_Animation` resources, "
"whose structure is documented :ref:`here <doc_tscn_animation>`."
msgstr ""

msgid ""
"This split between animations themselves and animation libraries was done in "
"Godot 4, so that animations can be imported separately from 3D meshes, which "
"is a common workflow in 3D animation software. See the `original pull "
"request <https://github.com/godotengine/godot/pull/59980>`__ for details."
msgstr ""

msgid ""
"If the library name is empty, then it acts acts the unique source of "
"animations for this AnimationPlayer. This allows using ``<animation_name>`` "
"directly to play animations from script. If you name the library, then you "
"must play it as ``<library_name>/<animation_name>``. This ensures backwards "
"compatibility and keeps the existing workflow if you don't want to use "
"multiple animation libraries."
msgstr ""

msgid "Resources"
msgstr "資源"

#, fuzzy
msgid ""
"Resources are components that make up the nodes. For example, a "
"MeshInstance3D node will have an accompanying ArrayMesh resource. The "
"ArrayMesh resource may be either internal or external to the TSCN file."
msgstr ""
"資源是組成各個節點的元件。舉例來說，MeshInstance 節點中會有附帶的 ArrayMesh "
"資源。該 ArrayMesh 資源可以在 TSCN 檔的內部或外部。"

msgid ""
"References to the resources are handled by unique string-based IDs in the "
"resource's heading. This is different from the ``uid`` property, which each "
"external resource also has (but subresources don't)."
msgstr ""

#, fuzzy
msgid ""
"External resources and internal resources are referred to with "
"``ExtResource(\"id\")`` and ``SubResource(\"id\")``, respectively. Because "
"there have different methods to refer to internal and external resources, "
"you can have the same ID for both an internal and external resource."
msgstr ""
"資源的參照是以資源標題中的 ``id`` 數字來參照的。外部資源與內部資源分別使用 "
"``ExtResource(id)`` 與 ``SubResource(id)`` 來參照。由於用來參照內部與外部資源"
"有不同的方法，因此同一個 ID 可能參照到不同的內部或外部資源。"

#, fuzzy
msgid ""
"For example, to refer to the resource ``[ext_resource type=\"Material\" "
"uid=\"uid://c4cp0al3ljsjv\" path=\"res://material.tres\" id=\"1_7bt6s\"]``, "
"you would use ``ExtResource(\"1_7bt6s\")``."
msgstr ""
"舉例來說，若要參照到資源 ``[ext_resource id=3 type=\"PackedScene\" "
"path=....]`` ，則可使用 ``ExtResource(3)`` 。"

#, fuzzy
msgid ""
"External resources are links to resources not contained within the TSCN file "
"itself. An external resource consists of a path, a type, an UID (used to map "
"its filesystem location to an unique identifier) and an ID (used to refer to "
"the resource in the scene file)."
msgstr ""
"外部資源會連結不包含 TSCN 檔自身的資源。外部資源由路徑、型別與 ID 組成。"

msgid ""
"Godot always generates absolute paths relative to the resource directory and "
"thus prefixed with ``res://``, but paths relative to the TSCN file's "
"location are also valid."
msgstr ""
"Godot 會產生相對於資源目錄的絕對路徑，並以 ``res://`` 開頭。但也可以使用相對"
"於 TSCN 檔位置的相對路徑。"

msgid "Some example external resources are:"
msgstr "一些外部資源的範例："

#, fuzzy
msgid ""
"Like TSCN files, a TRES file may contain single-line comments starting with "
"a semicolon (``;``). However, comments will be discarded when saving the "
"resource using the Godot editor. Whitespace within a TRES file is not "
"significant (except within strings), but extraneous whitespace will be "
"discarded when saving the file."
msgstr ""
"與 TSCN 檔類似，TRES 檔可以包含使用分號 (``;``) 開頭的單行註解。但，在使用 "
"Godot 編輯器保存資源時，註解會被移除。"

msgid ""
"A TSCN file can contain meshes, materials and other data. These are "
"contained in the *internal resources* section of the file. The heading for "
"an internal resource looks similar to those of external resources, except "
"that it doesn't have a path. Internal resources also have ``key=value`` "
"pairs under each heading. For example, a capsule collision shape looks like:"
msgstr ""
"一個 TSCN 檔可以包含網格、材質與其他資料。這些資料都放在 TSCN 檔中的 **內部資"
"源** 區塊中。內部資源區塊的標題看起來與外部資源的標題類似，但內部資源的標題不"
"含路徑。內部資源中的各個標題中也有 ``key=value`` 索引鍵／值組。舉例來說，膠囊"
"型碰撞區域會像這樣："

msgid ""
"Some internal resources contain links to other internal resources (such as a "
"mesh having a material). In this case, the referring resource must appear "
"*before* the reference to it. This means that order matters in the file's "
"internal resources section."
msgstr ""
"有的內部資源會包含指向另一個內部資源的連結 (如網格會具有材質)。這種情況下，被"
"參照的資源的資源必須要放在參照 **之前** 。這表示，在 TSCN 檔中，要注意檔案內"
"部資源區塊的順序。"

msgid "ArrayMesh"
msgstr ""

msgid ""
"An ArrayMesh consists of several surfaces contained in the ``_surfaces`` "
"array (notice the leading underscore). Each surface's data is stored in a "
"dictionary with the following keys:"
msgstr ""

msgid ""
"``aabb``: The computed axis-aligned bounding box for visibility. ``Mesh."
"PrimitiveType`` Godot enum. ``0`` = points, ``1`` = lines, ``2`` = line "
"strip, ``3`` = triangles (most common), ``4`` = triangle strip."
msgstr ""

msgid ""
"``attribute_data``: Vertex attribute data, such as normals, tangents, vertex "
"colors, UV1, UV2 and custom vertex data."
msgstr ""

msgid ""
"``bone_aabbs``: The axis-aligned bounding box of each bone for visibility."
msgstr ""

msgid "``format``: The surface's buffer format."
msgstr ""

msgid ""
"``index_count``: The number of indices in the surface. This must match "
"``index_data``'s size."
msgstr ""

msgid ""
"``index_data``: The index data, which determines which vertices from "
"``vertex_data`` are drawn."
msgstr ""

msgid ""
"``lods``: Level of detail variations, stored as an array. Each LOD level "
"represents two values in the array. The first value is the percentage of "
"screen space the LOD level is most suited for (edge length); the second "
"value is the list of indices that should be drawn for the given LOD level."
msgstr ""

msgid "``material``: The material used when drawing the surface."
msgstr ""

msgid ""
"``name``: The surface's name. This can be used in scripts and is imported "
"from 3D DCCs."
msgstr ""

msgid "``primitive``: The surface's primitive type, matching the"
msgstr ""

msgid "``skin_data``: Bone weight data."
msgstr ""

msgid ""
"``vertex_count``: Number of vertices in the surface. This must match "
"``vertex_data``'s size."
msgstr ""

msgid "``vertex_data``: The vertex position data."
msgstr ""

msgid ""
"Here's an example of an ArrayMesh saved to its own ``.tres`` file. Some "
"fields were shortened with ``...`` for brevity:"
msgstr ""

msgid "Animation"
msgstr "動畫"

#, fuzzy
msgid "Each animation has the following properties:"
msgstr "有下列事項需注意："

msgid ""
"``length``: The animation's length in seconds. Note that keyframes may be "
"placed outside the ``[0; length]`` interval, but they may have no effect "
"depending on the interpolation mode chosen."
msgstr ""

msgid ""
"``loop_mode``: ``0`` = no looping, ``1`` = wrap-around looping, ``2`` = "
"clamped looping."
msgstr ""

msgid ""
"``step``: The step size to use when editing this animation in the editor. "
"This is only used in the editor; it doesn't affect animation playback in any "
"way."
msgstr ""

#, fuzzy
msgid ""
"Each track is described by a list of key-value pairs in the format ``tracks/"
"<id>/<attribute>``. Each track includes:"
msgstr ""
"每個軌道都是由一組索引鍵／值配對所組成的，其格式為 ``tracks/Id/Attribute`` 。"
"每個軌道都包含了："

msgid ""
"``type``: The track's type. This defines what kind of properties may be "
"animated by this track, and how it'll be exposed to the user in the editor. "
"Valid types are ``value`` (generic property track), ``position_3d``, "
"``rotation_3d``, ``scale_3d``, ``blend_shape`` (optimized 3D animation "
"tracks), ``method`` (method call tracks), ``bezier`` (Bezier curve tracks), "
"``audio`` (audio playback tracks), ``animation`` (tracks that play other "
"animations)."
msgstr ""

msgid ""
"``imported``: ``true`` if the track was created from an imported 3D scene, "
"``false`` if it was manually created by the user in the Godot editor or "
"using a script."
msgstr ""

msgid ""
"``enabled``: ``true`` if the track is effective, ``false`` if it was "
"disabled in the editor."
msgstr ""

msgid ""
"``path``: Path to the node property that will be affected by the track. The "
"property is written after the node path with a ``:`` separator."
msgstr ""

msgid ""
"``interp``: The interpolation mode to use. ``0`` = nearest, ``1`` = linear, "
"``2`` = cubic, ``3`` = linear angle, ``4`` = cubic angle."
msgstr ""

msgid ""
"``loop_wrap``: ``true`` if the track is designed to wrap around when the "
"animation is looping, ``false`` if the track clamps to the first/last "
"keyframes."
msgstr ""

msgid ""
"``keys``: The animation track's values. This attribute's structure depends "
"on the ``type``."
msgstr ""

msgid ""
"Here is a scene containing an AnimationPlayer that scales down a cube over "
"time using a generic property track. The AnimationLibrary workflow was not "
"used, so the animation library has an empty name (but the animation is still "
"given a ``scale_down`` name). Note that the ``RESET`` track was not created "
"in this AnimationPlayer for brevity:"
msgstr ""

msgid ""
"For generic property ``value`` tracks, ``keys`` is a dictionary containing 3 "
"arrays with positions in ``times`` (PackedFloat32Array), easing values in "
"``transitions`` (PackedFloat32Array) and values in ``values`` (Array). There "
"is an additional ``update`` property, which is an integer with the values "
"``0`` = continuous, ``1`` = discrete, ``2`` = capture."
msgstr ""

msgid ""
"Here is a second Animation resource that makes use of the 3D Position and 3D "
"Rotation tracks. These tracks (in addition to the 3D Scale track) replace "
"Transform tracks from Godot 3. They are optimized for fast playback and can "
"optionally be compressed."
msgstr ""

msgid ""
"The downside of these optimized track types is that they can't use custom "
"easing values. Instead, all keyframes use linear interpolation. That said, "
"you can still opt for using nearest or cubic interpolation for all keyframes "
"in a given track by changing the track's interpolation mode."
msgstr ""

msgid ""
"For 3D position, rotation and scale tracks, ``keys`` is a PackedFloat32Array "
"with all values stored in a sequence."
msgstr ""

msgid ""
"In the visual guide below, ``T`` is the keyframe's time in seconds since the "
"start of the animation, ``E`` is the keyframe's transition (currently always "
"``1``). For 3D position and scale tracks, ``X``, ``Y``, ``Z`` are the "
"Vector3's coordinates. For 3D rotation tracks, ``X``, ``Y``, ``Z`` and ``W`` "
"are the Quaternion's coordinates."
msgstr ""

msgid "Translation status"
msgstr "翻譯狀態"
