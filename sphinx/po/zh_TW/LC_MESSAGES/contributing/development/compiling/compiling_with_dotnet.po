# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-present Juan Linietsky, Ariel Manzur and the Godot community (CC BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-18 18:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#, fuzzy
msgid "Compiling with .NET"
msgstr "通過 Mono 進行編譯"

msgid "Requirements"
msgstr "系統需求"

msgid "`.NET SDK 6.0+ <https://dotnet.microsoft.com/download>`_"
msgstr ""

msgid ""
"You can use ``dotnet --info`` to check which .NET SDK versions are installed."
msgstr ""

#, fuzzy
msgid "Enable the .NET module"
msgstr "開啟 Mono 模組"

msgid ""
"C# support for Godot has historically used the `Mono <https://www.mono-"
"project.com/>`_ runtime instead of the `.NET Runtime <https://github.com/"
"dotnet/runtime>`_ and internally many things are still named ``mono`` "
"instead of ``dotnet`` or otherwise referred to as ``mono``."
msgstr ""

#, fuzzy
msgid ""
"By default, the .NET module is disabled when building. To enable it, add the "
"option ``module_mono_enabled=yes`` to the SCons command line, while "
"otherwise following the instructions for building the desired Godot binaries."
msgstr ""
"預設情況下，Mono 模組在建置時沒有被啟用。若要開啟 Mono 模組，請在 SCons 命令"
"行加上 ``module_mono_enabled=yes`` 選項。"

msgid "Generate the glue"
msgstr "產生 Glue"

#, fuzzy
msgid ""
"Parts of the sources of the managed libraries are generated from the "
"ClassDB. These source files must be generated before building the managed "
"libraries. They can be generated by any .NET-enabled Godot editor binary by "
"running it with the parameters ``--headless --generate-mono-glue`` followed "
"by the path to an output directory. This path must be ``modules/mono/glue`` "
"in the Godot directory::"
msgstr ""
"建置完成後，需要使用 ``--generate-mono-glue`` 參數接上輸出路徑來執行編譯好的"
"可執行檔。該路徑必須為 Godot 資料夾中的 ``modules/mono/glue`` ："

#, fuzzy
msgid ""
"This command will tell Godot to generate the C# bindings for the Godot API "
"at ``modules/mono/glue/GodotSharp/GodotSharp/Generated``, and the C# "
"bindings for the editor tools at ``modules/mono/glue/GodotSharp/"
"GodotSharpEditor/Generated``. Once these files are generated, you can build "
"Godot's managed libraries for all the desired targets without having to "
"repeat this process."
msgstr ""
"該指令會讓 Godot 產生 ``modules/mono/glue/mono_glue.gen.cpp`` 檔案，以及用於 "
"Godot API 的 C# 解決方案，位於 ``modules/mono/glue/Managed/Generated`` 。產生"
"好這些檔案後，就可以為所有需要的建置目標建置 Godot，而無需重複此一過程。"

#, fuzzy
msgid ""
"``<godot_binary>`` refers to the editor binary you compiled with the .NET "
"module enabled. Its exact name will differ based on your system and "
"configuration, but should be of the form ``bin/godot.<platform>.editor."
"<arch>.mono``, e.g. ``bin/godot.linuxbsd.editor.x86_64.mono`` or ``bin/godot."
"windows.editor.x86_32.mono.exe``. Be especially aware of the **.mono** "
"suffix! If you've previously compiled Godot without .NET support, you might "
"have similarly named binaries without this suffix. These binaries can't be "
"used to generate the .NET glue."
msgstr ""
"``<godot_binary>`` 表示剛才啟用 Mono 模組編譯出來的 Tools 二進位檔。實際的名"
"稱會依據作業系統與設定檔而定，但格式應該是 ``bin/godot.<平台>.tools.<位元>."
"mono`` ，如 ``bin/godot.x11.tools.64.mono`` 或 ``bin/godot.windows.tools.64."
"mono.exe`` 。但請特別注意最後的 **mono** ！若剛才編譯 Godot 時沒有啟用 Mono "
"支援，則產生的二進位檔後面不會有 mono，且將無法用於產生 Mono Glue。"

msgid ""
"The glue sources must be regenerated every time the ClassDB-registered API "
"changes. That is, for example, when a new method is registered to the "
"scripting API or one of the parameters of such a method changes. Godot will "
"print an error at startup if there is an API mismatch between ClassDB and "
"the glue sources."
msgstr ""
"每次更改註冊在 ClassDB 上的 API 時都必須重新產生 Glue 原始檔。這種情況如，向"
"腳本 API 註冊新方法或其中一個向 ClassDB 註冊的方法需要更改參數時。若 ClassDB "
"與 Glue 原始檔註冊的 API 有出入，Godot 會在啟動時顯示錯誤。"

#, fuzzy
msgid "Building the managed libraries"
msgstr "繫結外部函式庫"

msgid ""
"Once you have generated the .NET glue, you can build the managed libraries "
"with the ``build_assemblies.py`` script::"
msgstr ""

#, fuzzy
msgid ""
"If everything went well, the ``GodotSharp`` directory, containing the "
"managed libraries, should have been created in the ``bin`` directory."
msgstr ""
"如果沒遇到問題的話，除了一般的輸出之外，SCons 還會在 ``bin`` 資料夾中建立下列"
"檔案："

msgid ""
"By default, all development builds share a version number, which can cause "
"some issues with caching of the NuGet packages. To solve this issue either "
"use ``GODOT_VERSION_STATUS`` to give every build a unique version or delete "
"``GodotNuGetFallbackFolder`` after every build to clear the package cache."
msgstr ""

#, fuzzy
msgid ""
"Unlike \"classical\" Godot builds, when building with the .NET module "
"enabled (and depending on the target platform), a data directory may be "
"created both for the editor and for exported projects. This directory is "
"important for proper functioning and must be distributed together with "
"Godot. More details about this directory in :ref:`Data "
"directory<compiling_with_dotnet_data_directory>`."
msgstr ""
"與「經典」Godot 建置不同，當建置啟用了 Mono 模組 (並根據不同的目標平台)，有可"
"能會為編輯器與匯出樣板產生資料目錄。該資料夾對於能否正常使用 Godot 來說很重"
"要，在發佈 Godot 時必須一同發佈。有關該資料夾的詳情請參考 :ref:`資料目錄 "
"<compiling_with_mono_data_directory>` 。"

#, fuzzy
msgid "Build Platform"
msgstr "支援平台"

msgid ""
"Provide the ``--godot-platform=<platform>`` argument to control for which "
"platform specific the libraries are built. Omit this argument to build for "
"the current system."
msgstr ""

msgid ""
"This currently only controls the inclusion of the support for Visual Studio "
"as an external editor, the libraries are otherwise identical."
msgstr ""

#, fuzzy
msgid "NuGet packages"
msgstr "在 Godot 中使用 NuGet 套件"

msgid ""
"The API assemblies, source generators, and custom MSBuild project SDK are "
"distributed as NuGet packages. This is all transparent to the user, but it "
"can make things complicated during development."
msgstr ""

msgid ""
"In order to use Godot with a development version of those packages, a local "
"NuGet source must be created where MSBuild can find them. This can be done "
"with the .NET CLI:"
msgstr ""

msgid ""
"The Godot NuGet packages must be added to that local source. Additionally, "
"we must make sure there are no other versions of the package in the NuGet "
"cache, as MSBuild may pick one of those instead."
msgstr ""

msgid ""
"In order to simplify this process, the ``build_assemblies.py`` script "
"provides the following ``--push-nupkgs-local`` option:"
msgstr ""

msgid ""
"This option ensures the packages will be added to the specified local NuGet "
"source and that conflicting versions of the package are removed from the "
"NuGet cache. It's recommended to always use this option when building the C# "
"solutions during development to avoid mistakes."
msgstr ""

msgid "Double Precision Support (REAL_T_IS_DOUBLE)"
msgstr ""

msgid ""
"When building Godot with double precision support, i.e. the "
"``precision=double`` argument for scons, the managed libraries must be "
"adjusted to match by passing the ``--precision=double`` argument:"
msgstr ""

msgid "Examples"
msgstr "範例"

msgid "Example (Windows)"
msgstr "範例 (Windows)"

#, fuzzy
msgid "Example (Linux, \\*BSD)"
msgstr "X11 (Linux, \\*BSD)"

msgid "Data directory"
msgstr "資料目錄"

#, fuzzy
msgid ""
"The data directory is a dependency for Godot binaries built with the .NET "
"module enabled. It contains important files for the correct functioning of "
"Godot. It must be distributed together with the Godot executable."
msgstr ""
"資料目錄在 Godot 二進位檔編譯時啟用 Mono 目錄時的相依性。該資料夾包含了一些重"
"要的檔案，且會影響 Godot 能否正確運作。在發佈 Godot 執行檔時必須一同發佈。"

msgid "Editor"
msgstr "編輯器"

msgid ""
"The name of the data directory for the Godot editor will always be "
"``GodotSharp``. This directory contains an ``Api`` subdirectory with the "
"Godot API assemblies and a ``Tools`` subdirectory with the tools required by "
"the editor, like the ``GodotTools`` assemblies and its dependencies."
msgstr ""

msgid ""
"On macOS, if the Godot editor is distributed as a bundle, the ``GodotSharp`` "
"directory may be placed in the ``<bundle_name>.app/Contents/Resources/`` "
"directory inside the bundle."
msgstr ""

msgid "Export templates"
msgstr "匯出樣板"

#, fuzzy
msgid ""
"The data directory for exported projects is generated by the editor during "
"the export. It is named ``data_<APPNAME>_<ARCH>``, where ``<APPNAME>`` is "
"the application name as specified in the project setting ``application/"
"config/name`` and ``<ARCH>`` is the current architecture of the export."
msgstr ""
"該資料夾必須以其原始名稱與 Godot 匯出樣板放在一起。匯出專案時，Godot 也會將該"
"資料夾複製到遊戲可執行檔旁，並將資料夾名稱改為 ``data_<APPNAME>`` ，其中， "
"``<APPNAME>`` 為在專案設定 ``application/config/name`` 中設定的應用程式名稱。"

msgid ""
"In the case of multi-architecture exports multiple such data directories "
"will be generated."
msgstr ""

msgid "Command-line options"
msgstr "命令行選項"

#, fuzzy
msgid ""
"The following is the list of command-line options available when building "
"with the .NET module:"
msgstr "下列為在建置 Mono 模組時可用的命令行選項："

msgid "**module_mono_enabled**\\ =yes | **no**"
msgstr "\\ **module_mono_enabled**\\ =yes | **no**"

#, fuzzy
msgid "Build Godot with the .NET module enabled."
msgstr "開啟 Mono 模組來建置 Godot。"

msgid "Translation status"
msgstr "翻譯狀態"
