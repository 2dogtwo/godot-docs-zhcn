:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ConcavePolygonShape3D.xml.

.. _class_ConcavePolygonShape3D:

ConcavePolygonShape3D
=====================

**Inherits:** :ref:`Shape3D<class_Shape3D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

用于物理碰撞的 3D 三角网格形状。

.. rst-class:: classref-introduction-group

Description
-----------

一种用于物理模拟的三维三角网格形状。通常用于为 :ref:`CollisionShape3D<class_CollisionShape3D>` 提供形状。

作为一组相互连接的三角形， **ConcavePolygonShape3D** 是最自由配置的单一三维形状之一。它可以用于形成任何性质的多面体，甚至是不封闭体积的形状。然而，即使相互连接的三角形封闭了一个体积， :ref:`ConvexPolygonShape3D<class_ConvexPolygonShape3D>` 仍然是\ *中空*\ 的，这常常使其不适用于物理模拟或碰撞检测。

\ **注意：**\ 当用于碰撞计算时， **ConcavePolygonShape3D** 旨在与静态的 :ref:`CollisionShape3D<class_CollisionShape3D>` 节点一起使用，如 :ref:`StaticBody3D<class_StaticBody3D>` 。并且可能不适用于处于除静态外的其他模式下的 :ref:`CharacterBody3D<class_CharacterBody3D>` 或 :ref:`RigidBody3D<class_RigidBody3D>` 。

\ **警告：**\ 当移动速度较快时，较小的物体有可能穿过该形状。这是因为在一帧中，物理体可能在形状的“外部”，而在下一帧中可能在其“内部”。 **ConcavePolygonShape3D** 是中空的，因此不会检测到碰撞。

\ **性能：**\ 由于其复杂性， **ConcavePolygonShape3D** 是用于检测三维碰撞的形状中最慢的。它的使用通常应限制在关卡几何体上。对于凸几何体，应使用 :ref:`ConvexPolygonShape3D<class_ConvexPolygonShape3D>` 。对于需要凹碰撞的动态物体，可以使用多个 :ref:`ConvexPolygonShape3D<class_ConvexPolygonShape3D>` 通过凸分解来表示其碰撞；请参阅 :ref:`ConvexPolygonShape3D<class_ConvexPolygonShape3D>` 的文档以获取指示。

.. rst-class:: classref-introduction-group

Tutorials
---------

- `3D 物理测试演示 <https://godotengine.org/asset-library/asset/675>`__

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-------------------------+------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>` | :ref:`backface_collision<class_ConcavePolygonShape3D_property_backface_collision>` | ``false`` |
   +-------------------------+------------------------------------------------------------------------------------+-----------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`get_faces<class_ConcavePolygonShape3D_method_get_faces>` **(** **)** |const|                                                   |
   +-----------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`set_faces<class_ConcavePolygonShape3D_method_set_faces>` **(** :ref:`PackedVector3Array<class_PackedVector3Array>` faces **)** |
   +-----------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_ConcavePolygonShape3D_property_backface_collision:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **backface_collision** = ``false``

.. rst-class:: classref-property-setget

- void **set_backface_collision_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_backface_collision_enabled** **(** **)**

如果设置为 ``true``\ ，则碰撞会发生在凹形面的两侧。否则，它们只会沿着面法线发生。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_ConcavePolygonShape3D_method_get_faces:

.. rst-class:: classref-method

:ref:`PackedVector3Array<class_PackedVector3Array>` **get_faces** **(** **)** |const|

以顶点数组的形式返回三角网格形状中的面。该（长度能被三整除的）数组自然三三分组；每组中的三个顶点定义一个三角形。

.. rst-class:: classref-item-separator

----

.. _class_ConcavePolygonShape3D_method_set_faces:

.. rst-class:: classref-method

void **set_faces** **(** :ref:`PackedVector3Array<class_PackedVector3Array>` faces **)**

根据顶点数组设置三角网格形状的面。\ ``faces`` 数组应更多由若干三元组构成，每三个顶点定义一个三角形。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
