:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/FontVariation.xml.

.. _class_FontVariation:

FontVariation
=============

**Inherits:** :ref:`Font<class_Font>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

字体的变体，提供额外的设置。

.. rst-class:: classref-introduction-group

Description
-----------

提供 OpenType 变体，模拟的粗体/斜体，以及 OpenType 特性和额外间距等额外的字体设置。

要使用模拟的粗体变体：


.. tabs::

 .. code-tab:: gdscript

    var fv = FontVariation.new()
    fv.set_base_font(load("res://BarlowCondensed-Regular.ttf"))
    fv.set_variation_embolden(1.2)
    $Label.add_theme_font_override("font", fv)
    $Label.add_theme_font_size_override("font_size", 64)

 .. code-tab:: csharp

    var fv = new FontVariation();
    fv.SetBaseFont(ResourceLoader.Load<FontFile>("res://BarlowCondensed-Regular.ttf"));
    fv.SetVariationEmbolden(1.2);
    GetNode("Label").AddThemeFontOverride("font", fv);
    GetNode("Label").AddThemeFontSizeOverride("font_size", 64);



要设置多个变体轴的坐标：

::

    var fv = FontVariation.new();
    var ts = TextServerManager.get_primary_interface()
    fv.base_font = load("res://BarlowCondensed-Regular.ttf")
    fv.variation_opentype = { ts.name_to_tag("wght"): 900, ts.name_to_tag("custom_hght"): 900 }

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Font<class_Font>`               | :ref:`base_font<class_FontVariation_property_base_font>`                       |                                   |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Dictionary<class_Dictionary>`   | :ref:`opentype_features<class_FontVariation_property_opentype_features>`       | ``{}``                            |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`                 | :ref:`spacing_bottom<class_FontVariation_property_spacing_bottom>`             | ``0``                             |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`                 | :ref:`spacing_glyph<class_FontVariation_property_spacing_glyph>`               | ``0``                             |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`                 | :ref:`spacing_space<class_FontVariation_property_spacing_space>`               | ``0``                             |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`                 | :ref:`spacing_top<class_FontVariation_property_spacing_top>`                   | ``0``                             |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`float<class_float>`             | :ref:`variation_embolden<class_FontVariation_property_variation_embolden>`     | ``0.0``                           |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`                 | :ref:`variation_face_index<class_FontVariation_property_variation_face_index>` | ``0``                             |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Dictionary<class_Dictionary>`   | :ref:`variation_opentype<class_FontVariation_property_variation_opentype>`     | ``{}``                            |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Transform2D<class_Transform2D>` | :ref:`variation_transform<class_FontVariation_property_variation_transform>`   | ``Transform2D(1, 0, 0, 1, 0, 0)`` |
   +---------------------------------------+--------------------------------------------------------------------------------+-----------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`set_spacing<class_FontVariation_method_set_spacing>` **(** :ref:`SpacingType<enum_TextServer_SpacingType>` spacing, :ref:`int<class_int>` value **)** |
   +------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_FontVariation_property_base_font:

.. rst-class:: classref-property

:ref:`Font<class_Font>` **base_font**

.. rst-class:: classref-property-setget

- void **set_base_font** **(** :ref:`Font<class_Font>` value **)**
- :ref:`Font<class_Font>` **get_base_font** **(** **)**

用于创建变体的基础字体。如果未设置，则使用默认的 :ref:`Theme<class_Theme>` 字体。

.. rst-class:: classref-item-separator

----

.. _class_FontVariation_property_opentype_features:

.. rst-class:: classref-property

:ref:`Dictionary<class_Dictionary>` **opentype_features** = ``{}``

.. rst-class:: classref-property-setget

- void **set_opentype_features** **(** :ref:`Dictionary<class_Dictionary>` value **)**
- :ref:`Dictionary<class_Dictionary>` **get_opentype_features** **(** **)**

一组 OpenType 功能标签。更多信息：\ `OpenType 功能标签 <https://docs.microsoft.com/en-us/typography/opentype/spec/featuretags>`__\ 。

.. rst-class:: classref-item-separator

----

.. _class_FontVariation_property_spacing_bottom:

.. rst-class:: classref-property

:ref:`int<class_int>` **spacing_bottom** = ``0``

.. rst-class:: classref-property-setget

- void **set_spacing** **(** :ref:`SpacingType<enum_TextServer_SpacingType>` spacing, :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_spacing** **(** **)**

行底部的额外间距，单位为像素。

.. rst-class:: classref-item-separator

----

.. _class_FontVariation_property_spacing_glyph:

.. rst-class:: classref-property

:ref:`int<class_int>` **spacing_glyph** = ``0``

.. rst-class:: classref-property-setget

- void **set_spacing** **(** :ref:`SpacingType<enum_TextServer_SpacingType>` spacing, :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_spacing** **(** **)**

图形字形之间的额外间距。

.. rst-class:: classref-item-separator

----

.. _class_FontVariation_property_spacing_space:

.. rst-class:: classref-property

:ref:`int<class_int>` **spacing_space** = ``0``

.. rst-class:: classref-property-setget

- void **set_spacing** **(** :ref:`SpacingType<enum_TextServer_SpacingType>` spacing, :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_spacing** **(** **)**

空格字形的额外宽度。

.. rst-class:: classref-item-separator

----

.. _class_FontVariation_property_spacing_top:

.. rst-class:: classref-property

:ref:`int<class_int>` **spacing_top** = ``0``

.. rst-class:: classref-property-setget

- void **set_spacing** **(** :ref:`SpacingType<enum_TextServer_SpacingType>` spacing, :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_spacing** **(** **)**

行顶部的额外间距，单位为像素。

.. rst-class:: classref-item-separator

----

.. _class_FontVariation_property_variation_embolden:

.. rst-class:: classref-property

:ref:`float<class_float>` **variation_embolden** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_variation_embolden** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_variation_embolden** **(** **)**

如果不等于零，则加粗字体轮廓。负值会减小轮廓厚度。

\ **注意：**\ 加粗字体可能有自相交的轮廓，这将阻止 MSDF 字体和 :ref:`TextMesh<class_TextMesh>` 正常工作。

.. rst-class:: classref-item-separator

----

.. _class_FontVariation_property_variation_face_index:

.. rst-class:: classref-property

:ref:`int<class_int>` **variation_face_index** = ``0``

.. rst-class:: classref-property-setget

- void **set_variation_face_index** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_variation_face_index** **(** **)**

在 TrueType / OpenType 集合文件中的活动字体索引。

.. rst-class:: classref-item-separator

----

.. _class_FontVariation_property_variation_opentype:

.. rst-class:: classref-property

:ref:`Dictionary<class_Dictionary>` **variation_opentype** = ``{}``

.. rst-class:: classref-property-setget

- void **set_variation_opentype** **(** :ref:`Dictionary<class_Dictionary>` value **)**
- :ref:`Dictionary<class_Dictionary>` **get_variation_opentype** **(** **)**

字体 OpenType 变体坐标。详见：\ `OpenType 变体标签 <https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg>`__\ 。

\ **注意：**\ 这个 :ref:`Dictionary<class_Dictionary>` 使用 OpenType 标签作为键。变体轴既可以用标签来标识（\ ``int``\ ），也可以用名称来标识（\ ``string``\ ）。有些轴可以通过多个名称来访问。例如，\ ``wght`` 和 ``weight`` 引用的是同一个轴。而标签则是唯一的。要在名称和标签之间转换，请使用 :ref:`TextServer.name_to_tag<class_TextServer_method_name_to_tag>` 和 :ref:`TextServer.tag_to_name<class_TextServer_method_tag_to_name>`\ 。

\ **注意：**\ 要获取字体的可用变体轴，请使用 :ref:`Font.get_supported_variation_list<class_Font_method_get_supported_variation_list>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_FontVariation_property_variation_transform:

.. rst-class:: classref-property

:ref:`Transform2D<class_Transform2D>` **variation_transform** = ``Transform2D(1, 0, 0, 1, 0, 0)``

.. rst-class:: classref-property-setget

- void **set_variation_transform** **(** :ref:`Transform2D<class_Transform2D>` value **)**
- :ref:`Transform2D<class_Transform2D>` **get_variation_transform** **(** **)**

应用于字体轮廓的 2D 变换，可用于倾斜、翻转和旋转字形。

例如，要通过倾斜来模拟斜体字体，请应用以下变换 ``Transform2D(1.0, slant, 0.0, 1.0, 0.0, 0.0)``\ 。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_FontVariation_method_set_spacing:

.. rst-class:: classref-method

void **set_spacing** **(** :ref:`SpacingType<enum_TextServer_SpacingType>` spacing, :ref:`int<class_int>` value **)**

Sets the spacing for ``spacing`` (see :ref:`SpacingType<enum_TextServer_SpacingType>`) to ``value`` in pixels (not relative to the font size).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
