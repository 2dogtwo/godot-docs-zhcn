:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Bone2D.xml.

.. _class_Bone2D:

Bone2D
======

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

与 :ref:`Skeleton2D<class_Skeleton2D>` 一起使用的关节，能够控制并动画其他节点。

.. rst-class:: classref-introduction-group

Description
-----------

**Bone2D** 层级结构可以绑定到 :ref:`Skeleton2D<class_Skeleton2D>` 上，控制并动画其他 :ref:`Node2D<class_Node2D>` 节点。

你可以使用 **Bone2D** 和 :ref:`Skeleton2D<class_Skeleton2D>` 节点对使用 :ref:`Polygon2D<class_Polygon2D>` UV 编辑器创建的 2D 网格进行动画。

每个骨骼都有一个 :ref:`rest<class_Bone2D_property_rest>` 变换，你可以用 :ref:`apply_rest<class_Bone2D_method_apply_rest>` 来重置到这个变换。这些放松姿势是相对于骨骼的父节点而言的。

如果在编辑器中，你可以使用菜单选项设置整个骨架的放松姿势，从代码中，你需要遍历骨骼来设置它们各自的放松姿势。

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------------+-----------------------------------------+-----------------------------------+
   | :ref:`Transform2D<class_Transform2D>` | :ref:`rest<class_Bone2D_property_rest>` | ``Transform2D(0, 0, 0, 0, 0, 0)`` |
   +---------------------------------------+-----------------------------------------+-----------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                  | :ref:`apply_rest<class_Bone2D_method_apply_rest>` **(** **)**                                                                                        |
   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`               | :ref:`get_autocalculate_length_and_angle<class_Bone2D_method_get_autocalculate_length_and_angle>` **(** **)** |const|                                |
   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`             | :ref:`get_bone_angle<class_Bone2D_method_get_bone_angle>` **(** **)** |const|                                                                        |
   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                 | :ref:`get_index_in_skeleton<class_Bone2D_method_get_index_in_skeleton>` **(** **)** |const|                                                          |
   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`             | :ref:`get_length<class_Bone2D_method_get_length>` **(** **)** |const|                                                                                |
   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Transform2D<class_Transform2D>` | :ref:`get_skeleton_rest<class_Bone2D_method_get_skeleton_rest>` **(** **)** |const|                                                                  |
   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                  | :ref:`set_autocalculate_length_and_angle<class_Bone2D_method_set_autocalculate_length_and_angle>` **(** :ref:`bool<class_bool>` auto_calculate **)** |
   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                  | :ref:`set_bone_angle<class_Bone2D_method_set_bone_angle>` **(** :ref:`float<class_float>` angle **)**                                                |
   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                  | :ref:`set_length<class_Bone2D_method_set_length>` **(** :ref:`float<class_float>` length **)**                                                       |
   +---------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Bone2D_property_rest:

.. rst-class:: classref-property

:ref:`Transform2D<class_Transform2D>` **rest** = ``Transform2D(0, 0, 0, 0, 0, 0)``

.. rst-class:: classref-property-setget

- void **set_rest** **(** :ref:`Transform2D<class_Transform2D>` value **)**
- :ref:`Transform2D<class_Transform2D>` **get_rest** **(** **)**

骨骼的放松变换。你可以使用 :ref:`apply_rest<class_Bone2D_method_apply_rest>` 将节点的变换重置为这个值。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Bone2D_method_apply_rest:

.. rst-class:: classref-method

void **apply_rest** **(** **)**

将节点当前的变换存储在 :ref:`rest<class_Bone2D_property_rest>` 中。

.. rst-class:: classref-item-separator

----

.. _class_Bone2D_method_get_autocalculate_length_and_angle:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **get_autocalculate_length_and_angle** **(** **)** |const|

如果该 **Bone2D** 存在骨骼子节点，则返回是否要使用第一个 **Bone2D** 子节点自动计算其长度和骨骼角度。如果没有 **Bone2D** 子节点，则无法自动计算这些值，会打印一条警告。

.. rst-class:: classref-item-separator

----

.. _class_Bone2D_method_get_bone_angle:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_bone_angle** **(** **)** |const|

返回 **Bone2D** 中骨骼的角度。

\ **注意：**\ 这与 **Bone2D** 的旋转不同。骨骼角度是小工具显示的骨骼旋转，不受 **Bone2D** 的 :ref:`Node2D.transform<class_Node2D_property_transform>` 的影响。

.. rst-class:: classref-item-separator

----

.. _class_Bone2D_method_get_index_in_skeleton:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_index_in_skeleton** **(** **)** |const|

返回节点在整个骨架中的索引号。见 :ref:`Skeleton2D<class_Skeleton2D>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Bone2D_method_get_length:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_length** **(** **)** |const|

返回 **Bone2D** 节点中骨骼的长度。

.. rst-class:: classref-item-separator

----

.. _class_Bone2D_method_get_skeleton_rest:

.. rst-class:: classref-method

:ref:`Transform2D<class_Transform2D>` **get_skeleton_rest** **(** **)** |const|

如果节点没有父节点，返回节点的 :ref:`rest<class_Bone2D_property_rest>` ``Transform2D``\ ，或者返回它相对于父节点的放松姿势。

.. rst-class:: classref-item-separator

----

.. _class_Bone2D_method_set_autocalculate_length_and_angle:

.. rst-class:: classref-method

void **set_autocalculate_length_and_angle** **(** :ref:`bool<class_bool>` auto_calculate **)**

当设置为 ``true`` 时，该 **Bone2D** 节点将尝试使用第一个子 **Bone2D** 节点（如果存在）自动计算骨骼角度和长度。如果不存在子节点，\ **Bone2D** 将无法自动计算这些值，并将输出一条警告。

.. rst-class:: classref-item-separator

----

.. _class_Bone2D_method_set_bone_angle:

.. rst-class:: classref-method

void **set_bone_angle** **(** :ref:`float<class_float>` angle **)**

Sets the bone angle for the **Bone2D**. This is typically set to the rotation from the **Bone2D** to a child **Bone2D** node.

\ **Note:** This is different from the **Bone2D**'s rotation. The bone's angle is the rotation of the bone shown by the gizmo, which is unaffected by the **Bone2D**'s :ref:`Node2D.transform<class_Node2D_property_transform>`.

.. rst-class:: classref-item-separator

----

.. _class_Bone2D_method_set_length:

.. rst-class:: classref-method

void **set_length** **(** :ref:`float<class_float>` length **)**

设置该 **Bone2D** 中骨骼的长度。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
