:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorInspectorPlugin.xml.

.. _class_EditorInspectorPlugin:

EditorInspectorPlugin
=====================

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

插件，用于在检查器上添加自定义属性编辑器。

.. rst-class:: classref-introduction-group

Description
-----------

**EditorInspectorPlugin** 允许将自定义属性编辑器添加到 :ref:`EditorInspector<class_EditorInspector>`\ 。

当编辑对象时，会调用 :ref:`_can_handle<class_EditorInspectorPlugin_method__can_handle>` 函数，如果支持该对象类型，则必须返回 ``true``\ 。

如果支持，函数 :ref:`_parse_begin<class_EditorInspectorPlugin_method__parse_begin>` 将被调用，允许在类的开头放置自定义控件。

随后，为每个类别和属性调用 :ref:`_parse_category<class_EditorInspectorPlugin_method__parse_category>` 和 :ref:`_parse_property<class_EditorInspectorPlugin_method__parse_property>`\ 。它们也提供了向检查器添加自定义控件的能力。

最后，将调用 :ref:`_parse_end<class_EditorInspectorPlugin_method__parse_end>`\ 。

在这些调用中的每一个，都可以调用“add”函数。

要使用 **EditorInspectorPlugin**\ ，首先使用 :ref:`EditorPlugin.add_inspector_plugin<class_EditorPlugin_method_add_inspector_plugin>` 方法注册它。

.. rst-class:: classref-introduction-group

Tutorials
---------

- :doc:`检查器插件 <../tutorials/plugins/editor/inspector_plugins>`

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>` | :ref:`_can_handle<class_EditorInspectorPlugin_method__can_handle>` **(** :ref:`Object<class_Object>` object **)** |virtual| |const|                                                                                                                                                                                                                                                                                                                              |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`_parse_begin<class_EditorInspectorPlugin_method__parse_begin>` **(** :ref:`Object<class_Object>` object **)** |virtual|                                                                                                                                                                                                                                                                                                                                    |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`_parse_category<class_EditorInspectorPlugin_method__parse_category>` **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` category **)** |virtual|                                                                                                                                                                                                                                                                                        |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`_parse_end<class_EditorInspectorPlugin_method__parse_end>` **(** :ref:`Object<class_Object>` object **)** |virtual|                                                                                                                                                                                                                                                                                                                                        |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`_parse_group<class_EditorInspectorPlugin_method__parse_group>` **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` group **)** |virtual|                                                                                                                                                                                                                                                                                                 |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>` | :ref:`_parse_property<class_EditorInspectorPlugin_method__parse_property>` **(** :ref:`Object<class_Object>` object, :ref:`Variant.Type<enum_@GlobalScope_Variant.Type>` type, :ref:`String<class_String>` name, :ref:`PropertyHint<enum_@GlobalScope_PropertyHint>` hint_type, :ref:`String<class_String>` hint_string, |bitfield|\<:ref:`PropertyUsageFlags<enum_@GlobalScope_PropertyUsageFlags>`\> usage_flags, :ref:`bool<class_bool>` wide **)** |virtual| |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`add_custom_control<class_EditorInspectorPlugin_method_add_custom_control>` **(** :ref:`Control<class_Control>` control **)**                                                                                                                                                                                                                                                                                                                               |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`add_property_editor<class_EditorInspectorPlugin_method_add_property_editor>` **(** :ref:`String<class_String>` property, :ref:`Control<class_Control>` editor, :ref:`bool<class_bool>` add_to_end=false **)**                                                                                                                                                                                                                                              |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`add_property_editor_for_multiple_properties<class_EditorInspectorPlugin_method_add_property_editor_for_multiple_properties>` **(** :ref:`String<class_String>` label, :ref:`PackedStringArray<class_PackedStringArray>` properties, :ref:`Control<class_Control>` editor **)**                                                                                                                                                                             |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_EditorInspectorPlugin_method__can_handle:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **_can_handle** **(** :ref:`Object<class_Object>` object **)** |virtual| |const|

如果此插件可以处理此对象返回 ``true``\ 。

.. rst-class:: classref-item-separator

----

.. _class_EditorInspectorPlugin_method__parse_begin:

.. rst-class:: classref-method

void **_parse_begin** **(** :ref:`Object<class_Object>` object **)** |virtual|

可以将控件添加在 ``object`` 的属性列表开头时调用。

.. rst-class:: classref-item-separator

----

.. _class_EditorInspectorPlugin_method__parse_category:

.. rst-class:: classref-method

void **_parse_category** **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` category **)** |virtual|

可以将控件添加在 ``object`` 属性列表中的某个分类开头时调用。

.. rst-class:: classref-item-separator

----

.. _class_EditorInspectorPlugin_method__parse_end:

.. rst-class:: classref-method

void **_parse_end** **(** :ref:`Object<class_Object>` object **)** |virtual|

可以将控件添加在 ``object`` 的属性列表末尾时调用。

.. rst-class:: classref-item-separator

----

.. _class_EditorInspectorPlugin_method__parse_group:

.. rst-class:: classref-method

void **_parse_group** **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` group **)** |virtual|

可以将控件添加在 ``object`` 属性列表的某个分组或子分组的开头时调用。

.. rst-class:: classref-item-separator

----

.. _class_EditorInspectorPlugin_method__parse_property:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **_parse_property** **(** :ref:`Object<class_Object>` object, :ref:`Variant.Type<enum_@GlobalScope_Variant.Type>` type, :ref:`String<class_String>` name, :ref:`PropertyHint<enum_@GlobalScope_PropertyHint>` hint_type, :ref:`String<class_String>` hint_string, |bitfield|\<:ref:`PropertyUsageFlags<enum_@GlobalScope_PropertyUsageFlags>`\> usage_flags, :ref:`bool<class_bool>` wide **)** |virtual|

可以为 ``object`` 的属性列表添加针对属性的编辑器时调用。这些编辑器必须继承 :ref:`EditorProperty<class_EditorProperty>`\ 。返回 ``true`` 会移除该属性的内置编辑器，否则会在内置编辑器之前插入自定义编辑器。

.. rst-class:: classref-item-separator

----

.. _class_EditorInspectorPlugin_method_add_custom_control:

.. rst-class:: classref-method

void **add_custom_control** **(** :ref:`Control<class_Control>` control **)**

添加自定义控件，它不一定是属性编辑器。

.. rst-class:: classref-item-separator

----

.. _class_EditorInspectorPlugin_method_add_property_editor:

.. rst-class:: classref-method

void **add_property_editor** **(** :ref:`String<class_String>` property, :ref:`Control<class_Control>` editor, :ref:`bool<class_bool>` add_to_end=false **)**

为单独的属性添加属性编辑器。\ ``editor`` 控件必须扩展 :ref:`EditorProperty<class_EditorProperty>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_EditorInspectorPlugin_method_add_property_editor_for_multiple_properties:

.. rst-class:: classref-method

void **add_property_editor_for_multiple_properties** **(** :ref:`String<class_String>` label, :ref:`PackedStringArray<class_PackedStringArray>` properties, :ref:`Control<class_Control>` editor **)**

添加能够修改多个属性的编辑器。\ ``editor`` 控件必须扩展 :ref:`EditorProperty<class_EditorProperty>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
