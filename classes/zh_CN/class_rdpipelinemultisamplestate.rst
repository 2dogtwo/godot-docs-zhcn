:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RDPipelineMultisampleState.xml.

.. _class_RDPipelineMultisampleState:

RDPipelineMultisampleState
==========================

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

管线的多重采样状态（由 :ref:`RenderingDevice<class_RenderingDevice>` 使用）。

.. rst-class:: classref-introduction-group

Description
-----------

**RDPipelineMultisampleState** 控制的是在使用 :ref:`RenderingDevice<class_RenderingDevice>` 进行渲染时，如何进行多重采样和超采样抗锯齿。

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                    | :ref:`enable_alpha_to_coverage<class_RDPipelineMultisampleState_property_enable_alpha_to_coverage>` | ``false`` |
   +------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                    | :ref:`enable_alpha_to_one<class_RDPipelineMultisampleState_property_enable_alpha_to_one>`           | ``false`` |
   +------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                                    | :ref:`enable_sample_shading<class_RDPipelineMultisampleState_property_enable_sample_shading>`       | ``false`` |
   +------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
   | :ref:`float<class_float>`                                  | :ref:`min_sample_shading<class_RDPipelineMultisampleState_property_min_sample_shading>`             | ``0.0``   |
   +------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
   | :ref:`TextureSamples<enum_RenderingDevice_TextureSamples>` | :ref:`sample_count<class_RDPipelineMultisampleState_property_sample_count>`                         | ``0``     |
   +------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+
   | :ref:`int[]<class_int>`                                    | :ref:`sample_masks<class_RDPipelineMultisampleState_property_sample_masks>`                         | ``[]``    |
   +------------------------------------------------------------+-----------------------------------------------------------------------------------------------------+-----------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_RDPipelineMultisampleState_property_enable_alpha_to_coverage:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **enable_alpha_to_coverage** = ``false``

.. rst-class:: classref-property-setget

- void **set_enable_alpha_to_coverage** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_enable_alpha_to_coverage** **(** **)**

如果为 ``true``\ ，则启用 Alpha 为覆盖面。此时会根据片段的第一个颜色输出的 Alpha 分量生成临时的覆盖值。这样就能够让 Alpha 透明使用多重采样抗锯齿。

.. rst-class:: classref-item-separator

----

.. _class_RDPipelineMultisampleState_property_enable_alpha_to_one:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **enable_alpha_to_one** = ``false``

.. rst-class:: classref-property-setget

- void **set_enable_alpha_to_one** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_enable_alpha_to_one** **(** **)**

如果为 ``true``\ ，则会将 Alpha 强制为 ``0.0`` 或 ``1.0``\ 。这样就能够让 Alpha 透明抗锯齿后的边缘更锐利。仅在 :ref:`enable_alpha_to_coverage<class_RDPipelineMultisampleState_property_enable_alpha_to_coverage>` 为 ``true`` 时有效。

.. rst-class:: classref-item-separator

----

.. _class_RDPipelineMultisampleState_property_enable_sample_shading:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **enable_sample_shading** = ``false``

.. rst-class:: classref-property-setget

- void **set_enable_sample_shading** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_enable_sample_shading** **(** **)**

如果为 ``true``\ ，则会启用逐样本着色，使用 SSAA 代替 MSAA。这样能够提供更高质量的抗锯齿，支持透明边缘（Alpha 裁剪）。性能消耗很高。另见 :ref:`min_sample_shading<class_RDPipelineMultisampleState_property_min_sample_shading>`\ 。详见\ `逐样本着色 Vulkan 文档 <https://registry.khronos.org/vulkan/specs/1.3-extensions/html/vkspec.html#primsrast-sampleshading>`__\ 。

.. rst-class:: classref-item-separator

----

.. _class_RDPipelineMultisampleState_property_min_sample_shading:

.. rst-class:: classref-property

:ref:`float<class_float>` **min_sample_shading** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_min_sample_shading** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_min_sample_shading** **(** **)**

:ref:`sample_count<class_RDPipelineMultisampleState_property_sample_count>` 的乘数，决定每个片段执行多少次采样。必须在 ``0.0`` 和 ``1.0`` 之间（含端点）。仅在 :ref:`enable_sample_shading<class_RDPipelineMultisampleState_property_enable_sample_shading>` 为 ``true`` 时有效。如果 :ref:`min_sample_shading<class_RDPipelineMultisampleState_property_min_sample_shading>` 为 ``1.0``\ ，则片段调用必须仅从覆盖索引样本中读取。如果 :ref:`enable_sample_shading<class_RDPipelineMultisampleState_property_enable_sample_shading>` *不是* ``1.0``\ ，则不能对平铺图像进行访问。

.. rst-class:: classref-item-separator

----

.. _class_RDPipelineMultisampleState_property_sample_count:

.. rst-class:: classref-property

:ref:`TextureSamples<enum_RenderingDevice_TextureSamples>` **sample_count** = ``0``

.. rst-class:: classref-property-setget

- void **set_sample_count** **(** :ref:`TextureSamples<enum_RenderingDevice_TextureSamples>` value **)**
- :ref:`TextureSamples<enum_RenderingDevice_TextureSamples>` **get_sample_count** **(** **)**

要进行 MSAA 采样的数量（如果 :ref:`enable_sample_shading<class_RDPipelineMultisampleState_property_enable_sample_shading>` 为 ``true`` 则为 SSAA 采样）。值越高，抗锯齿效果越好，但会以性能为代价。

.. rst-class:: classref-item-separator

----

.. _class_RDPipelineMultisampleState_property_sample_masks:

.. rst-class:: classref-property

:ref:`int[]<class_int>` **sample_masks** = ``[]``

.. rst-class:: classref-property-setget

- void **set_sample_masks** **(** :ref:`int[]<class_int>` value **)**
- :ref:`int[]<class_int>` **get_sample_masks** **(** **)**

The sample mask array. See the `sample mask Vulkan documentation <https://registry.khronos.org/vulkan/specs/1.3-extensions/html/vkspec.html#fragops-samplemask>`__ for more details.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
