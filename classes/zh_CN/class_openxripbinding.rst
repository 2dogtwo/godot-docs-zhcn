:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/openxr/doc_classes/OpenXRIPBinding.xml.

.. _class_OpenXRIPBinding:

OpenXRIPBinding
===============

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

定义 :ref:`OpenXRAction<class_OpenXRAction>` 和 XR 输入或输出之间的绑定。

.. rst-class:: classref-introduction-group

Description
-----------

该绑定资源将一个 :ref:`OpenXRAction<class_OpenXRAction>` 绑定到输入或输出。由于大多数控制器都有由相同交互配置处理的左手和右手版本，我们可以指定多个绑定。例如，一个动作“开火”可以同时被绑定到“/user/hand/left/input/trigger”和“/user/hand/right/input/trigger”。

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------------------------+------------------------------------------------------+-------------------------+
   | :ref:`OpenXRAction<class_OpenXRAction>`           | :ref:`action<class_OpenXRIPBinding_property_action>` |                         |
   +---------------------------------------------------+------------------------------------------------------+-------------------------+
   | :ref:`PackedStringArray<class_PackedStringArray>` | :ref:`paths<class_OpenXRIPBinding_property_paths>`   | ``PackedStringArray()`` |
   +---------------------------------------------------+------------------------------------------------------+-------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------+-------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`add_path<class_OpenXRIPBinding_method_add_path>` **(** :ref:`String<class_String>` path **)**         |
   +-------------------------+-------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`   | :ref:`get_path_count<class_OpenXRIPBinding_method_get_path_count>` **(** **)** |const|                      |
   +-------------------------+-------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>` | :ref:`has_path<class_OpenXRIPBinding_method_has_path>` **(** :ref:`String<class_String>` path **)** |const| |
   +-------------------------+-------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`remove_path<class_OpenXRIPBinding_method_remove_path>` **(** :ref:`String<class_String>` path **)**   |
   +-------------------------+-------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_OpenXRIPBinding_property_action:

.. rst-class:: classref-property

:ref:`OpenXRAction<class_OpenXRAction>` **action**

.. rst-class:: classref-property-setget

- void **set_action** **(** :ref:`OpenXRAction<class_OpenXRAction>` value **)**
- :ref:`OpenXRAction<class_OpenXRAction>` **get_action** **(** **)**

绑定到这些路径的 :ref:`OpenXRAction<class_OpenXRAction>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRIPBinding_property_paths:

.. rst-class:: classref-property

:ref:`PackedStringArray<class_PackedStringArray>` **paths** = ``PackedStringArray()``

.. rst-class:: classref-property-setget

- void **set_paths** **(** :ref:`PackedStringArray<class_PackedStringArray>` value **)**
- :ref:`PackedStringArray<class_PackedStringArray>` **get_paths** **(** **)**

定义该设备上绑定的输入或输出的路径。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_OpenXRIPBinding_method_add_path:

.. rst-class:: classref-method

void **add_path** **(** :ref:`String<class_String>` path **)**

为该绑定添加输入/输出路径。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRIPBinding_method_get_path_count:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_path_count** **(** **)** |const|

获取该绑定中输入/输出路径的数量。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRIPBinding_method_has_path:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **has_path** **(** :ref:`String<class_String>` path **)** |const|

如果该输入/输出路径是该绑定的一部分，则返回 ``true``\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRIPBinding_method_remove_path:

.. rst-class:: classref-method

void **remove_path** **(** :ref:`String<class_String>` path **)**

从该绑定中移除该输入/输出路径。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
