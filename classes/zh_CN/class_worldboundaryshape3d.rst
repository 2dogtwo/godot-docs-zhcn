:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/WorldBoundaryShape3D.xml.

.. _class_WorldBoundaryShape3D:

WorldBoundaryShape3D
====================

**Inherits:** :ref:`Shape3D<class_Shape3D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

用于物理碰撞的 3D 空间边界（半空间）形状。

.. rst-class:: classref-introduction-group

Description
-----------

3D 世界边界形状，应当用于物理用途。\ **WorldBoundaryShape3D** 本质上和无限平面类似，能够强制所有物理体都保持在它的上方。哪个方向是“上方”由该平面 :ref:`plane<class_WorldBoundaryShape3D_property_plane>` 的法线确定，这个方向在编辑器中由平面上方的一条线表示。用例是无限的平坦地面。

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------+---------------------------------------------------------+-----------------------+
   | :ref:`Plane<class_Plane>` | :ref:`plane<class_WorldBoundaryShape3D_property_plane>` | ``Plane(0, 1, 0, 0)`` |
   +---------------------------+---------------------------------------------------------+-----------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_WorldBoundaryShape3D_property_plane:

.. rst-class:: classref-property

:ref:`Plane<class_Plane>` **plane** = ``Plane(0, 1, 0, 0)``

.. rst-class:: classref-property-setget

- void **set_plane** **(** :ref:`Plane<class_Plane>` value **)**
- :ref:`Plane<class_Plane>` **get_plane** **(** **)**

该 **WorldBoundaryShape3D** 用于碰撞的 :ref:`Plane<class_Plane>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
