:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicsDirectSpaceState3D.xml.

.. _class_PhysicsDirectSpaceState3D:

PhysicsDirectSpaceState3D
=========================

**Inherits:** :ref:`Object<class_Object>`

**Inherited By:** :ref:`PhysicsDirectSpaceState3DExtension<class_PhysicsDirectSpaceState3DExtension>`

提供对 :ref:`PhysicsServer3D<class_PhysicsServer3D>` 中物理空间的直接访问。

.. rst-class:: classref-introduction-group

Description
-----------

提供对 :ref:`PhysicsServer3D<class_PhysicsServer3D>` 中物理空间的直接访问。主要用于对驻留在给定空间中的对象和区域进行查询。

.. rst-class:: classref-introduction-group

Tutorials
---------

- :doc:`物理介绍 <../tutorials/physics/physics_introduction>`

- :doc:`发射射线 <../tutorials/physics/ray-casting>`

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PackedFloat32Array<class_PackedFloat32Array>` | :ref:`cast_motion<class_PhysicsDirectSpaceState3D_method_cast_motion>` **(** :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` parameters **)**                                               |
   +-----------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3[]<class_Vector3>`                     | :ref:`collide_shape<class_PhysicsDirectSpaceState3D_method_collide_shape>` **(** :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` parameters, :ref:`int<class_int>` max_results=32 **)**     |
   +-----------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Dictionary<class_Dictionary>`                 | :ref:`get_rest_info<class_PhysicsDirectSpaceState3D_method_get_rest_info>` **(** :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` parameters **)**                                           |
   +-----------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Dictionary[]<class_Dictionary>`               | :ref:`intersect_point<class_PhysicsDirectSpaceState3D_method_intersect_point>` **(** :ref:`PhysicsPointQueryParameters3D<class_PhysicsPointQueryParameters3D>` parameters, :ref:`int<class_int>` max_results=32 **)** |
   +-----------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Dictionary<class_Dictionary>`                 | :ref:`intersect_ray<class_PhysicsDirectSpaceState3D_method_intersect_ray>` **(** :ref:`PhysicsRayQueryParameters3D<class_PhysicsRayQueryParameters3D>` parameters **)**                                               |
   +-----------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Dictionary[]<class_Dictionary>`               | :ref:`intersect_shape<class_PhysicsDirectSpaceState3D_method_intersect_shape>` **(** :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` parameters, :ref:`int<class_int>` max_results=32 **)** |
   +-----------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_PhysicsDirectSpaceState3D_method_cast_motion:

.. rst-class:: classref-method

:ref:`PackedFloat32Array<class_PackedFloat32Array>` **cast_motion** **(** :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` parameters **)**

检查 :ref:`Shape3D<class_Shape3D>` 在不发生碰撞的情况下可以移动多远。查询的所有参数，包括形状，都通过 :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` 对象提供。

返回一个数组，其中包含运动的安全和不安全比例（介于 0 和 1 之间）。安全比例是在不发生碰撞的情况下可以进行的运动的最大分数。不安全比例是发生碰撞必须移动的距离的最小分数。如果没有检测到碰撞，将返回 ``[1.0, 1.0]`` 的结果。

\ **注意：**\ 该形状已经与之发生碰撞的任何 :ref:`Shape3D<class_Shape3D>`\ ，例如在内部的，将被忽略。使用 :ref:`collide_shape<class_PhysicsDirectSpaceState3D_method_collide_shape>` 来确定该形状已经与之发生碰撞的 :ref:`Shape3D<class_Shape3D>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsDirectSpaceState3D_method_collide_shape:

.. rst-class:: classref-method

:ref:`Vector3[]<class_Vector3>` **collide_shape** **(** :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` parameters, :ref:`int<class_int>` max_results=32 **)**

检查通过 :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` 对象给出的一个形状与该空间的交点。结果数组包含该形状与另一个形状相交处的点的列表。与 :ref:`intersect_shape<class_PhysicsDirectSpaceState3D_method_intersect_shape>` 一样，可以限制返回结果的数量以节省处理时间。

返回的点是接触点对的一个列表。对于每一对，第一个是在 :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` 对象中传递的形状，第二个是来自物理空间的碰撞形状。

\ **注意：**\ 该方法不考虑对象的 ``motion`` 属性。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsDirectSpaceState3D_method_get_rest_info:

.. rst-class:: classref-method

:ref:`Dictionary<class_Dictionary>` **get_rest_info** **(** :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` parameters **)**

检查通过 :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` 对象给出的形状与该空间的交点。如果它与多个形状发生碰撞，则选择最近的一个。返回的对象是一个包含以下字段的字典：

\ ``collider_id``\ ：该碰撞对象的 ID。

\ ``linear_velocity``\ ：该碰撞对象的速度 :ref:`Vector3<class_Vector3>`\ 。如果对象是一个 :ref:`Area3D<class_Area3D>`\ ，则结果为 ``(0, 0, 0)``\ 。

\ ``normal``\ ：该交点处物体的表面法线。

\ ``point``\ ：该相交点。

\ ``rid``\ ：该相交对象的 :ref:`RID<class_RID>`\ 。

\ ``shape``\ ：该碰撞形状的形状索引。

如果该形状没有与任何东西相交，则返回一个空字典。

\ **注意：**\ 该方法不考虑对象的 ``motion`` 属性。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsDirectSpaceState3D_method_intersect_point:

.. rst-class:: classref-method

:ref:`Dictionary[]<class_Dictionary>` **intersect_point** **(** :ref:`PhysicsPointQueryParameters3D<class_PhysicsPointQueryParameters3D>` parameters, :ref:`int<class_int>` max_results=32 **)**

检查点是否在任何实体形状内。位置和其他参数通过 :ref:`PhysicsPointQueryParameters3D<class_PhysicsPointQueryParameters3D>` 定义。点所在的形状会以数组的形式返回，该数组包含有以下字段的字典：

\ ``collider``\ ：碰撞对象。

\ ``collider_id``\ ：碰撞对象的 ID。

\ ``rid``\ ：相交对象的\ :ref:`RID<class_RID>`\ 。

\ ``shape``\ ：碰撞形状的形状索引。

可以使用 ``max_results`` 参数限制相交的数量，以减少处理时间。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsDirectSpaceState3D_method_intersect_ray:

.. rst-class:: classref-method

:ref:`Dictionary<class_Dictionary>` **intersect_ray** **(** :ref:`PhysicsRayQueryParameters3D<class_PhysicsRayQueryParameters3D>` parameters **)**

Intersects a ray in a given space. Ray position and other parameters are defined through :ref:`PhysicsRayQueryParameters3D<class_PhysicsRayQueryParameters3D>`. The returned object is a dictionary with the following fields:

\ ``collider``: The colliding object.

\ ``collider_id``: The colliding object's ID.

\ ``normal``: The object's surface normal at the intersection point, or ``Vector3(0, 0, 0)`` if the ray starts inside the shape and :ref:`PhysicsRayQueryParameters3D.hit_from_inside<class_PhysicsRayQueryParameters3D_property_hit_from_inside>` is ``true``.

\ ``position``: The intersection point.

\ ``face_index``: The face index at the intersection point.

\ **Note:** Returns a valid number only if the intersected shape is a :ref:`ConcavePolygonShape3D<class_ConcavePolygonShape3D>`. Otherwise, ``-1`` is returned.

\ ``rid``: The intersecting object's :ref:`RID<class_RID>`.

\ ``shape``: The shape index of the colliding shape.

If the ray did not intersect anything, then an empty dictionary is returned instead.

.. rst-class:: classref-item-separator

----

.. _class_PhysicsDirectSpaceState3D_method_intersect_shape:

.. rst-class:: classref-method

:ref:`Dictionary[]<class_Dictionary>` **intersect_shape** **(** :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` parameters, :ref:`int<class_int>` max_results=32 **)**

检查通过 :ref:`PhysicsShapeQueryParameters3D<class_PhysicsShapeQueryParameters3D>` 对象给出的形状与空间的交点。相交的形状在包含具有以下字段的字典的数组中返回：

\ ``collider``\ ：碰撞对象。

\ ``collider_id``\ ：碰撞对象的 ID。

\ ``rid``\ ：相交对象的 :ref:`RID<class_RID>`\ 。

\ ``shape``\ ：碰撞形状的形状索引。

可以使用 ``max_results`` 参数限制相交的数量，以减少处理时间。

\ **注意：**\ 该方法不考虑对象的 ``motion`` 属性。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
