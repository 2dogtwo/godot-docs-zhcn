:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ShaderInclude.xml.

.. _class_ShaderInclude:

ShaderInclude
=============

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

着色器代码片段，能够在 :ref:`Shader<class_Shader>` 中使用 ``#include`` 引入。

.. rst-class:: classref-introduction-group

Description
-----------

着色器头文件，保存时使用 ``.gdshaderinc`` 扩展名。这个类能够用于定义自定义着色器代码片段，在 :ref:`Shader<class_Shader>` 中可以使用预处理器指令 ``#include`` 加上文件路径引入（例如 ``#include "res://shader_lib.gdshaderinc"``\ ）。代码片段本身不必是有效的着色器。

.. rst-class:: classref-introduction-group

Tutorials
---------

- :doc:`着色器预处理器 <../tutorials/shaders/shader_reference/shader_preprocessor>`

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------+------------------------------------------------+--------+
   | :ref:`String<class_String>` | :ref:`code<class_ShaderInclude_property_code>` | ``""`` |
   +-----------------------------+------------------------------------------------+--------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_ShaderInclude_property_code:

.. rst-class:: classref-property

:ref:`String<class_String>` **code** = ``""``

.. rst-class:: classref-property-setget

- void **set_code** **(** :ref:`String<class_String>` value **)**
- :ref:`String<class_String>` **get_code** **(** **)**

返回着色器头文件的代码。返回的文本是用户所编写的内容，不是内部使用的完整生成的代码。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
