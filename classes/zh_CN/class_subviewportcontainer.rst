:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SubViewportContainer.xml.

.. _class_SubViewportContainer:

SubViewportContainer
====================

**Inherits:** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

用于显示 :ref:`SubViewport<class_SubViewport>` 内容的容器。

.. rst-class:: classref-introduction-group

Description
-----------

显示其 :ref:`SubViewport<class_SubViewport>` 子节点内容的容器。除非启用 :ref:`stretch<class_SubViewportContainer_property_stretch>`\ ，否则会使用 :ref:`SubViewport<class_SubViewport>` 的大小作为最小尺寸。

\ **注意：**\ 更改 **SubViewportContainer** 的 :ref:`Control.scale<class_Control_property_scale>`\ ，将导致其内容出现扭曲。要更改其视觉大小，并且不造成失真，请改为调整节点的边距（如果还不在容器中）。

\ **注意：**\ 该 **SubViewportContainer** 会将鼠标进入和鼠标退出通知转发到子视口。

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +------------------------------------------+---------------------------------------------------------------------------+---------------------------------------------------------------------+
   | :ref:`FocusMode<enum_Control_FocusMode>` | focus_mode                                                                | ``1`` (overrides :ref:`Control<class_Control_property_focus_mode>`) |
   +------------------------------------------+---------------------------------------------------------------------------+---------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`stretch<class_SubViewportContainer_property_stretch>`               | ``false``                                                           |
   +------------------------------------------+---------------------------------------------------------------------------+---------------------------------------------------------------------+
   | :ref:`int<class_int>`                    | :ref:`stretch_shrink<class_SubViewportContainer_property_stretch_shrink>` | ``1``                                                               |
   +------------------------------------------+---------------------------------------------------------------------------+---------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_SubViewportContainer_property_stretch:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **stretch** = ``false``

.. rst-class:: classref-property-setget

- void **set_stretch** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_stretch_enabled** **(** **)**

如果为 ``true``\ ，子视口将自动调整为该控件的大小。

\ **注意：**\ 如果为 ``true``\ ，则会禁止手动改变其子节点的 :ref:`SubViewport.size<class_SubViewport_property_size>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_SubViewportContainer_property_stretch_shrink:

.. rst-class:: classref-property

:ref:`int<class_int>` **stretch_shrink** = ``1``

.. rst-class:: classref-property-setget

- void **set_stretch_shrink** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_stretch_shrink** **(** **)**

将子视口的有效分辨率除以该值，同时保持比例。可以用来加速渲染。

例如子视口的大小为 1280×720，当 :ref:`stretch_shrink<class_SubViewportContainer_property_stretch_shrink>` 被设置为 ``2`` 时，将以 640×360 渲染，同时在该容器中占据相同大小。

\ **注意：**\ :ref:`stretch<class_SubViewportContainer_property_stretch>` 必须为 ``true``\ ，才能使此属性生效。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
