:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Texture2DArray.xml.

.. _class_Texture2DArray:

Texture2DArray
==============

**Inherits:** :ref:`ImageTextureLayered<class_ImageTextureLayered>` **<** :ref:`TextureLayered<class_TextureLayered>` **<** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

由多个独立图像构成的单个纹理资源。每个图像的尺寸和 mipmap 级别数都相同。

.. rst-class:: classref-introduction-group

Description
-----------

Texture2DArray 与 Texture3D 不同：Texture2DArray 不支持在 :ref:`Image<class_Image>` 之间进行三线性插值，即不会进行混合。另见 :ref:`Cubemap<class_Cubemap>` 和 :ref:`CubemapArray<class_CubemapArray>`\ ，这些纹理数组具有针对立方体贴图设计的函数。

Texture2DArray 与 :ref:`AtlasTexture<class_AtlasTexture>` 也不同：Texture2DArray 中的图形都是单独处理的。而在图集中，区域（即单张图像）的大小可以不同。此外，你通常会需要围绕区域添加边距，防止 UV 映射意外进入多个区域。多级渐远纹理 mipmap 也是一样：每一层的 mipmap 链都是单独处理的。而在图集中，需要在片段着色器中手动切片。

要自己创建这样的纹理文件，请使用 Godot 编辑器导入预设重新导入图像文件。

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +---------------------------------+-----------------------------------------------------------------------------------------------+
   | :ref:`Resource<class_Resource>` | :ref:`create_placeholder<class_Texture2DArray_method_create_placeholder>` **(** **)** |const| |
   +---------------------------------+-----------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Texture2DArray_method_create_placeholder:

.. rst-class:: classref-method

:ref:`Resource<class_Resource>` **create_placeholder** **(** **)** |const|

创建该资源的占位符版本（\ :ref:`PlaceholderTexture2DArray<class_PlaceholderTexture2DArray>`\ ）。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
