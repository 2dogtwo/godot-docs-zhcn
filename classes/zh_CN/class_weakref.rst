:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/WeakRef.xml.

.. _class_WeakRef:

WeakRef
=======

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

存放 :ref:`Object<class_Object>`\ 。如果该对象为 :ref:`RefCounted<class_RefCounted>`\ ，则不会影响其引用计数。

.. rst-class:: classref-introduction-group

Description
-----------

弱引用可以存放 :ref:`RefCounted<class_RefCounted>`\ ，但不会影响其引用计数。可以使用 :ref:`@GlobalScope.weakref<class_@GlobalScope_method_weakref>` 创建 :ref:`Object<class_Object>` 的弱引用。如果该对象不是引用，弱引用仍然有效，只是对这个对象没有任何影响。弱引用在多个类的变量相互引用的情况下很有用。如果没有弱引用，使用这些类可能会导致内存泄漏，因为这两个引用会阻止彼此被释放。将部分变量设置为弱引用可以防止这种循环依赖，让引用能够被释放。

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------------+------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>` | :ref:`get_ref<class_WeakRef_method_get_ref>` **(** **)** |const| |
   +-------------------------------+------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_WeakRef_method_get_ref:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **get_ref** **(** **)** |const|

返回这个弱引用所引用的 :ref:`Object<class_Object>`\ 。如果该对象不复存在，则返回 ``null``\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
