:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SpringArm3D.xml.

.. _class_SpringArm3D:

SpringArm3D
===========

**Inherits:** :ref:`Node3D<class_Node3D>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

能够动态地将子节点朝碰撞点移动的 3D 射线投射。

.. rst-class:: classref-introduction-group

Description
-----------

**SpringArm3D** casts a ray or a shape along its Z axis and moves all its direct children to the collision point, with an optional margin. This is useful for 3rd person cameras that move closer to the player when inside a tight space (you may need to exclude the player's collider from the **SpringArm3D**'s collision check).

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-------------------------------+------------------------------------------------------------------+----------+
   | :ref:`int<class_int>`         | :ref:`collision_mask<class_SpringArm3D_property_collision_mask>` | ``1``    |
   +-------------------------------+------------------------------------------------------------------+----------+
   | :ref:`float<class_float>`     | :ref:`margin<class_SpringArm3D_property_margin>`                 | ``0.01`` |
   +-------------------------------+------------------------------------------------------------------+----------+
   | :ref:`Shape3D<class_Shape3D>` | :ref:`shape<class_SpringArm3D_property_shape>`                   |          |
   +-------------------------------+------------------------------------------------------------------+----------+
   | :ref:`float<class_float>`     | :ref:`spring_length<class_SpringArm3D_property_spring_length>`   | ``1.0``  |
   +-------------------------------+------------------------------------------------------------------+----------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +---------------------------+----------------------------------------------------------------------------------------------------------------------+
   | void                      | :ref:`add_excluded_object<class_SpringArm3D_method_add_excluded_object>` **(** :ref:`RID<class_RID>` RID **)**       |
   +---------------------------+----------------------------------------------------------------------------------------------------------------------+
   | void                      | :ref:`clear_excluded_objects<class_SpringArm3D_method_clear_excluded_objects>` **(** **)**                           |
   +---------------------------+----------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>` | :ref:`get_hit_length<class_SpringArm3D_method_get_hit_length>` **(** **)**                                           |
   +---------------------------+----------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`   | :ref:`remove_excluded_object<class_SpringArm3D_method_remove_excluded_object>` **(** :ref:`RID<class_RID>` RID **)** |
   +---------------------------+----------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_SpringArm3D_property_collision_mask:

.. rst-class:: classref-property

:ref:`int<class_int>` **collision_mask** = ``1``

.. rst-class:: classref-property-setget

- void **set_collision_mask** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_collision_mask** **(** **)**

碰撞检测的目标层。更多信息请参阅文档中的\ `《碰撞层与遮罩》 <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__\ 。

.. rst-class:: classref-item-separator

----

.. _class_SpringArm3D_property_margin:

.. rst-class:: classref-property

:ref:`float<class_float>` **margin** = ``0.01``

.. rst-class:: classref-property-setget

- void **set_margin** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_margin** **(** **)**

进行碰撞检测时，会给出 SpringArm3D 的一个候选长度。

然后将边距减去该长度，并将该平移应用于该 SpringArm3D 的子对象。

当 SpringArm3D 有一个 :ref:`Camera3D<class_Camera3D>` 作为子节点时，该边距很有用：如果没有边距，该 :ref:`Camera3D<class_Camera3D>` 将被放置在准确的碰撞点上；而有边距时，该 :ref:`Camera3D<class_Camera3D>` 将被放置在靠近碰撞点的地方。

.. rst-class:: classref-item-separator

----

.. _class_SpringArm3D_property_shape:

.. rst-class:: classref-property

:ref:`Shape3D<class_Shape3D>` **shape**

.. rst-class:: classref-property-setget

- void **set_shape** **(** :ref:`Shape3D<class_Shape3D>` value **)**
- :ref:`Shape3D<class_Shape3D>` **get_shape** **(** **)**

用于该 SpringArm3D 的 :ref:`Shape3D<class_Shape3D>`\ 。

当该形状被设置后，SpringArm3D 将在其 z 轴上投射该 :ref:`Shape3D<class_Shape3D>`\ ，而不是执行一个射线投射。

.. rst-class:: classref-item-separator

----

.. _class_SpringArm3D_property_spring_length:

.. rst-class:: classref-property

:ref:`float<class_float>` **spring_length** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_length** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_length** **(** **)**

SpringArm3D 的最大范围。这用作内部使用的射线和形状投射的长度，以计算 SpringArm3D 子节点的所需位置。

要了解有关如何执行形状投射或射线投射的更多信息，请参阅 :ref:`PhysicsDirectSpaceState3D<class_PhysicsDirectSpaceState3D>` 文档。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_SpringArm3D_method_add_excluded_object:

.. rst-class:: classref-method

void **add_excluded_object** **(** :ref:`RID<class_RID>` RID **)**

将具有给定 :ref:`RID<class_RID>` 的 :ref:`PhysicsBody3D<class_PhysicsBody3D>` 对象，添加到从碰撞检查中排除的 :ref:`PhysicsBody3D<class_PhysicsBody3D>` 对象列表中。

.. rst-class:: classref-item-separator

----

.. _class_SpringArm3D_method_clear_excluded_objects:

.. rst-class:: classref-method

void **clear_excluded_objects** **(** **)**

清空碰撞检测排除 :ref:`PhysicsBody3D<class_PhysicsBody3D>` 对象的列表。

.. rst-class:: classref-item-separator

----

.. _class_SpringArm3D_method_get_hit_length:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_hit_length** **(** **)**

返回弹簧臂的当前长度。

.. rst-class:: classref-item-separator

----

.. _class_SpringArm3D_method_remove_excluded_object:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **remove_excluded_object** **(** :ref:`RID<class_RID>` RID **)**

从碰撞检测排除 :ref:`PhysicsBody3D<class_PhysicsBody3D>` 对象的列表中移除给定的 :ref:`RID<class_RID>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
