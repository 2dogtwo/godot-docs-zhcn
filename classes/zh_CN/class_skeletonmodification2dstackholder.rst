:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SkeletonModification2DStackHolder.xml.

.. _class_SkeletonModification2DStackHolder:

SkeletonModification2DStackHolder
=================================

**Inherits:** :ref:`SkeletonModification2D<class_SkeletonModification2D>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

存放并执行 :ref:`SkeletonModificationStack2D<class_SkeletonModificationStack2D>` 的修改器。

.. rst-class:: classref-introduction-group

Description
-----------

这种 :ref:`SkeletonModification2D<class_SkeletonModification2D>` 可以存放对 :ref:`SkeletonModificationStack2D<class_SkeletonModificationStack2D>` 的引用，让你能够对单个 :ref:`Skeleton2D<class_Skeleton2D>` 使用多个修改器栈。

\ **注意：**\ :ref:`SkeletonModificationStack2D<class_SkeletonModificationStack2D>` 中所存放的修改器只有在各自的执行模式与 SkeletonModification2DStackHolder 的执行模式匹配时才会执行。

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`SkeletonModificationStack2D<class_SkeletonModificationStack2D>` | :ref:`get_held_modification_stack<class_SkeletonModification2DStackHolder_method_get_held_modification_stack>` **(** **)** |const|                                                                                       |
   +-----------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                  | :ref:`set_held_modification_stack<class_SkeletonModification2DStackHolder_method_set_held_modification_stack>` **(** :ref:`SkeletonModificationStack2D<class_SkeletonModificationStack2D>` held_modification_stack **)** |
   +-----------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_SkeletonModification2DStackHolder_method_get_held_modification_stack:

.. rst-class:: classref-method

:ref:`SkeletonModificationStack2D<class_SkeletonModificationStack2D>` **get_held_modification_stack** **(** **)** |const|

返回该修改器中存放的 :ref:`SkeletonModificationStack2D<class_SkeletonModificationStack2D>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_SkeletonModification2DStackHolder_method_set_held_modification_stack:

.. rst-class:: classref-method

void **set_held_modification_stack** **(** :ref:`SkeletonModificationStack2D<class_SkeletonModificationStack2D>` held_modification_stack **)**

设置该修改器中存放的 :ref:`SkeletonModificationStack2D<class_SkeletonModificationStack2D>`\ 。这个修改器栈会在该修改器执行时执行。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
