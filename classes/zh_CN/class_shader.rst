:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Shader.xml.

.. _class_Shader:

Shader
======

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`VisualShader<class_VisualShader>`

用 Godot 着色语言实现的着色器。

.. rst-class:: classref-introduction-group

Description
-----------

用 Godot 着色语言实现的自定义着色器程序，使用 ``.gdshader`` 扩展名保存。

这个类由 :ref:`ShaderMaterial<class_ShaderMaterial>` 使用，能够让你编写渲染可视项目或更新粒子信息时的自定义行为。详细解释和用法请参考下列教程链接。

.. rst-class:: classref-introduction-group

Tutorials
---------

- :doc:`着色器文档索引 <../tutorials/shaders/index>`

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------+-----------------------------------------+--------+
   | :ref:`String<class_String>` | :ref:`code<class_Shader_property_code>` | ``""`` |
   +-----------------------------+-----------------------------------------+--------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`get_default_texture_parameter<class_Shader_method_get_default_texture_parameter>` **(** :ref:`StringName<class_StringName>` name, :ref:`int<class_int>` index=0 **)** |const|                                    |
   +-----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Mode<enum_Shader_Mode>`     | :ref:`get_mode<class_Shader_method_get_mode>` **(** **)** |const|                                                                                                                                                      |
   +-----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Array<class_Array>`         | :ref:`get_shader_uniform_list<class_Shader_method_get_shader_uniform_list>` **(** :ref:`bool<class_bool>` get_groups=false **)**                                                                                       |
   +-----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                              | :ref:`set_default_texture_parameter<class_Shader_method_set_default_texture_parameter>` **(** :ref:`StringName<class_StringName>` name, :ref:`Texture2D<class_Texture2D>` texture, :ref:`int<class_int>` index=0 **)** |
   +-----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_Shader_Mode:

.. rst-class:: classref-enumeration

enum **Mode**:

.. _class_Shader_constant_MODE_SPATIAL:

.. rst-class:: classref-enumeration-constant

:ref:`Mode<enum_Shader_Mode>` **MODE_SPATIAL** = ``0``

用于绘制所有 3D 对象的模式。

.. _class_Shader_constant_MODE_CANVAS_ITEM:

.. rst-class:: classref-enumeration-constant

:ref:`Mode<enum_Shader_Mode>` **MODE_CANVAS_ITEM** = ``1``

用于绘制所有 2D 对象的模式。

.. _class_Shader_constant_MODE_PARTICLES:

.. rst-class:: classref-enumeration-constant

:ref:`Mode<enum_Shader_Mode>` **MODE_PARTICLES** = ``2``

用于基于每个粒子计算粒子信息的模式。不用于绘图。

.. _class_Shader_constant_MODE_SKY:

.. rst-class:: classref-enumeration-constant

:ref:`Mode<enum_Shader_Mode>` **MODE_SKY** = ``3``

用于绘制天空的模式。仅适用于附加到 :ref:`Sky<class_Sky>` 对象的着色器。

.. _class_Shader_constant_MODE_FOG:

.. rst-class:: classref-enumeration-constant

:ref:`Mode<enum_Shader_Mode>` **MODE_FOG** = ``4``

用于设置体积雾效果的颜色和密度的模式。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Shader_property_code:

.. rst-class:: classref-property

:ref:`String<class_String>` **code** = ``""``

.. rst-class:: classref-property-setget

- void **set_code** **(** :ref:`String<class_String>` value **)**
- :ref:`String<class_String>` **get_code** **(** **)**

返回用户编写的着色器代码，而不是内部使用的完整生成代码。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Shader_method_get_default_texture_parameter:

.. rst-class:: classref-method

:ref:`Texture2D<class_Texture2D>` **get_default_texture_parameter** **(** :ref:`StringName<class_StringName>` name, :ref:`int<class_int>` index=0 **)** |const|

返回被设置为指定参数的默认值的纹理。

\ **注意：**\ ``name`` 必须与代码中的 uniform 名称完全匹配。

\ **注意：**\ 如果使用采样器数组，则使用 ``index`` 访问指定的纹理。

.. rst-class:: classref-item-separator

----

.. _class_Shader_method_get_mode:

.. rst-class:: classref-method

:ref:`Mode<enum_Shader_Mode>` **get_mode** **(** **)** |const|

返回着色器的着色器模式。

.. rst-class:: classref-item-separator

----

.. _class_Shader_method_get_shader_uniform_list:

.. rst-class:: classref-method

:ref:`Array<class_Array>` **get_shader_uniform_list** **(** :ref:`bool<class_bool>` get_groups=false **)**

获取可以赋值给 :ref:`ShaderMaterial<class_ShaderMaterial>` 的着色器 uniform 列表，可用于 :ref:`ShaderMaterial.set_shader_parameter<class_ShaderMaterial_method_set_shader_parameter>` 和 :ref:`ShaderMaterial.get_shader_parameter<class_ShaderMaterial_method_get_shader_parameter>`\ 。返回的参数包含在字典内，与 :ref:`Object.get_property_list<class_Object_method_get_property_list>` 返回的格式类似。

如果参数 ``get_groups`` 为 true，则会提供参数分组提示。

.. rst-class:: classref-item-separator

----

.. _class_Shader_method_set_default_texture_parameter:

.. rst-class:: classref-method

void **set_default_texture_parameter** **(** :ref:`StringName<class_StringName>` name, :ref:`Texture2D<class_Texture2D>` texture, :ref:`int<class_int>` index=0 **)**

设置要与纹理 uniform 一起使用的默认纹理。如果未在 :ref:`ShaderMaterial<class_ShaderMaterial>` 中设置纹理，则使用该默认值。

\ **注意：**\ ``name`` 必须与代码中的 uniform 名称完全匹配。

\ **注意：**\ 如果使用采样器数组，则使用 ``index`` 访问指定的纹理。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
