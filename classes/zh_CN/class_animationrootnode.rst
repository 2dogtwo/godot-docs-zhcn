:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AnimationRootNode.xml.

.. _class_AnimationRootNode:

AnimationRootNode
=================

**Inherits:** :ref:`AnimationNode<class_AnimationNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`AnimationNodeAnimation<class_AnimationNodeAnimation>`, :ref:`AnimationNodeBlendSpace1D<class_AnimationNodeBlendSpace1D>`, :ref:`AnimationNodeBlendSpace2D<class_AnimationNodeBlendSpace2D>`, :ref:`AnimationNodeBlendTree<class_AnimationNodeBlendTree>`, :ref:`AnimationNodeStateMachine<class_AnimationNodeStateMachine>`

包含一个或多个复合动画的 :ref:`AnimationNode<class_AnimationNode>` 的基类。通常用于 :ref:`AnimationTree.tree_root<class_AnimationTree_property_tree_root>`\ 。

.. rst-class:: classref-introduction-group

Description
-----------

**AnimationRootNode** 是存放完整动画的 :ref:`AnimationNode<class_AnimationNode>` 的基类。完整动画指的是 :ref:`AnimationNodeBlendTree<class_AnimationNodeBlendTree>` 中 :ref:`AnimationNodeOutput<class_AnimationNodeOutput>` 的输出，或者其他 **AnimationRootNode** 的输出。可以在 :ref:`AnimationTree.tree_root<class_AnimationTree_property_tree_root>` 或其他 **AnimationRootNode** 中使用。

内置根节点有 :ref:`AnimationNodeBlendTree<class_AnimationNodeBlendTree>`\ （能够使用不同的模式将节点进行混合）、\ :ref:`AnimationNodeStateMachine<class_AnimationNodeStateMachine>`\ （能够使用状态机模式配置节点之间的混合和过渡）、\ :ref:`AnimationNodeBlendSpace2D<class_AnimationNodeBlendSpace2D>`\ （能够在\ **三个** :ref:`AnimationNode<class_AnimationNode>` 之间进行线性混合)、\ :ref:`AnimationNodeBlendSpace1D<class_AnimationNodeBlendSpace1D>`\ （能够在\ **两个** :ref:`AnimationNode<class_AnimationNode>` 之间进行线性混合）等。

.. rst-class:: classref-introduction-group

Tutorials
---------

- :doc:`使用 AnimationTree <../tutorials/animation/animation_tree>`

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
