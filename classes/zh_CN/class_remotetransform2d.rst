:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RemoteTransform2D.xml.

.. _class_RemoteTransform2D:

RemoteTransform2D
=================

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

RemoteTransform2D 会将自己的 :ref:`Transform2D<class_Transform2D>` 推送到场景中另一个派生自 :ref:`CanvasItem<class_CanvasItem>` 的节点。

.. rst-class:: classref-introduction-group

Description
-----------

RemoteTransform2D 会将自己的 :ref:`Transform2D<class_Transform2D>` 推送到场景中另一个派生自 :ref:`CanvasItem<class_CanvasItem>` 的节点（称为远程节点）。

可以设置更新另一个节点的位置、旋转和/或比例。可以使用全局坐标，也可以使用局部坐标。

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------+----------------------------------------------------------------------------------------+------------------+
   | :ref:`NodePath<class_NodePath>` | :ref:`remote_path<class_RemoteTransform2D_property_remote_path>`                       | ``NodePath("")`` |
   +---------------------------------+----------------------------------------------------------------------------------------+------------------+
   | :ref:`bool<class_bool>`         | :ref:`update_position<class_RemoteTransform2D_property_update_position>`               | ``true``         |
   +---------------------------------+----------------------------------------------------------------------------------------+------------------+
   | :ref:`bool<class_bool>`         | :ref:`update_rotation<class_RemoteTransform2D_property_update_rotation>`               | ``true``         |
   +---------------------------------+----------------------------------------------------------------------------------------+------------------+
   | :ref:`bool<class_bool>`         | :ref:`update_scale<class_RemoteTransform2D_property_update_scale>`                     | ``true``         |
   +---------------------------------+----------------------------------------------------------------------------------------+------------------+
   | :ref:`bool<class_bool>`         | :ref:`use_global_coordinates<class_RemoteTransform2D_property_use_global_coordinates>` | ``true``         |
   +---------------------------------+----------------------------------------------------------------------------------------+------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +------+------------------------------------------------------------------------------------------+
   | void | :ref:`force_update_cache<class_RemoteTransform2D_method_force_update_cache>` **(** **)** |
   +------+------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_RemoteTransform2D_property_remote_path:

.. rst-class:: classref-property

:ref:`NodePath<class_NodePath>` **remote_path** = ``NodePath("")``

.. rst-class:: classref-property-setget

- void **set_remote_node** **(** :ref:`NodePath<class_NodePath>` value **)**
- :ref:`NodePath<class_NodePath>` **get_remote_node** **(** **)**

到远程节点的 :ref:`NodePath<class_NodePath>`\ ，相对于 RemoteTransform2D 在场景中的位置。

.. rst-class:: classref-item-separator

----

.. _class_RemoteTransform2D_property_update_position:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **update_position** = ``true``

.. rst-class:: classref-property-setget

- void **set_update_position** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_update_position** **(** **)**

如果为 ``true``\ ，则更新远程节点的位置。

.. rst-class:: classref-item-separator

----

.. _class_RemoteTransform2D_property_update_rotation:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **update_rotation** = ``true``

.. rst-class:: classref-property-setget

- void **set_update_rotation** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_update_rotation** **(** **)**

如果为 ``true``\ ，则更新远程节点的旋转。

.. rst-class:: classref-item-separator

----

.. _class_RemoteTransform2D_property_update_scale:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **update_scale** = ``true``

.. rst-class:: classref-property-setget

- void **set_update_scale** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_update_scale** **(** **)**

如果为 ``true``\ ，则更新远程节点的比例。

.. rst-class:: classref-item-separator

----

.. _class_RemoteTransform2D_property_use_global_coordinates:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **use_global_coordinates** = ``true``

.. rst-class:: classref-property-setget

- void **set_use_global_coordinates** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_use_global_coordinates** **(** **)**

如果为 ``true``\ ，则使用全局坐标。如果 ``false``\ ，则使用本地坐标。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_RemoteTransform2D_method_force_update_cache:

.. rst-class:: classref-method

void **force_update_cache** **(** **)**

**RemoteTransform2D** 缓存了远程节点。如果远程节点消失了，它可能不会通知；\ :ref:`force_update_cache<class_RemoteTransform2D_method_force_update_cache>` 强制它再次更新缓存。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
