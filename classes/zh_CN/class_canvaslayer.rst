:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/CanvasLayer.xml.

.. _class_CanvasLayer:

CanvasLayer
===========

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`ParallaxBackground<class_ParallaxBackground>`

用于 2D 场景中的对象的独立渲染的节点。

.. rst-class:: classref-introduction-group

Description
-----------

**CanvasLayer** 的直接或间接子节点中，派生自 :ref:`CanvasItem<class_CanvasItem>` 的节点会在该图层中进行绘制。图层是定义绘制顺序的数字索引。默认 2D 场景使用的索引为 ``0``\ ，因此索引为 ``-1`` 的 **CanvasLayer** 会在下方绘制，而索引为 ``1`` 的 **CanvasLayer** 会在上方绘制。无论节点在图层中的 :ref:`CanvasItem.z_index<class_CanvasItem_property_z_index>` 是多少，这一顺序都成立。

\ **CanvasLayer** 可以隐藏，也可以跟随视口。因此常用于血条等 HUD（位于 ``1`` 或更高的图层上）和背景（位于 ``-1`` 或更低的图层上）。

\ **注意：**\ 嵌入式 :ref:`Window<class_Window>` 位于 ``1024`` 图层。位于 ``1025`` 或更高图层的 :ref:`CanvasItem<class_CanvasItem>` 会显示在嵌入式窗口之上。

\ **注意：**\ 每个 **CanvasLayer** 都是在一个特定的 :ref:`Viewport<class_Viewport>` 中绘制的，不能在多个 :ref:`Viewport<class_Viewport>` 之间共享，见 :ref:`custom_viewport<class_CanvasLayer_property_custom_viewport>`\ 。使用多个 :ref:`Viewport<class_Viewport>` 时，例如分屏游戏中，你需要为每个想要绘制的 :ref:`Viewport<class_Viewport>` 创建一个单独的 **CanvasLayer**\ 。

.. rst-class:: classref-introduction-group

Tutorials
---------

- :doc:`Viewport 和画布变换 <../tutorials/2d/2d_transforms>`

- :doc:`画布层 <../tutorials/2d/canvas_layers>`

- `2D Dodge The Creeps 演示 <https://godotengine.org/asset-library/asset/515>`__

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Node<class_Node>`               | :ref:`custom_viewport<class_CanvasLayer_property_custom_viewport>`                 |                                   |
   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`bool<class_bool>`               | :ref:`follow_viewport_enabled<class_CanvasLayer_property_follow_viewport_enabled>` | ``false``                         |
   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`float<class_float>`             | :ref:`follow_viewport_scale<class_CanvasLayer_property_follow_viewport_scale>`     | ``1.0``                           |
   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`                 | :ref:`layer<class_CanvasLayer_property_layer>`                                     | ``1``                             |
   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Vector2<class_Vector2>`         | :ref:`offset<class_CanvasLayer_property_offset>`                                   | ``Vector2(0, 0)``                 |
   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`float<class_float>`             | :ref:`rotation<class_CanvasLayer_property_rotation>`                               | ``0.0``                           |
   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Vector2<class_Vector2>`         | :ref:`scale<class_CanvasLayer_property_scale>`                                     | ``Vector2(1, 1)``                 |
   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Transform2D<class_Transform2D>` | :ref:`transform<class_CanvasLayer_property_transform>`                             | ``Transform2D(1, 0, 0, 1, 0, 0)`` |
   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`bool<class_bool>`               | :ref:`visible<class_CanvasLayer_property_visible>`                                 | ``true``                          |
   +---------------------------------------+------------------------------------------------------------------------------------+-----------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +---------------------------------------+----------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                 | :ref:`get_canvas<class_CanvasLayer_method_get_canvas>` **(** **)** |const|                   |
   +---------------------------------------+----------------------------------------------------------------------------------------------+
   | :ref:`Transform2D<class_Transform2D>` | :ref:`get_final_transform<class_CanvasLayer_method_get_final_transform>` **(** **)** |const| |
   +---------------------------------------+----------------------------------------------------------------------------------------------+
   | void                                  | :ref:`hide<class_CanvasLayer_method_hide>` **(** **)**                                       |
   +---------------------------------------+----------------------------------------------------------------------------------------------+
   | void                                  | :ref:`show<class_CanvasLayer_method_show>` **(** **)**                                       |
   +---------------------------------------+----------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_CanvasLayer_signal_visibility_changed:

.. rst-class:: classref-signal

**visibility_changed** **(** **)**

当该层的可见性发生变化时触发。请参阅 :ref:`visible<class_CanvasLayer_property_visible>`\ 。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_CanvasLayer_property_custom_viewport:

.. rst-class:: classref-property

:ref:`Node<class_Node>` **custom_viewport**

.. rst-class:: classref-property-setget

- void **set_custom_viewport** **(** :ref:`Node<class_Node>` value **)**
- :ref:`Node<class_Node>` **get_custom_viewport** **(** **)**

分配给该 **CanvasLayer** 的自定义 :ref:`Viewport<class_Viewport>` 节点。如果为 ``null``\ ，则使用默认的视口。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_property_follow_viewport_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **follow_viewport_enabled** = ``false``

.. rst-class:: classref-property-setget

- void **set_follow_viewport** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_following_viewport** **(** **)**

启用时，该 **CanvasLayer** 会使用视口的变换，所以它会随相机移动，而不是保持在屏幕上的某个固定位置。

与 :ref:`follow_viewport_scale<class_CanvasLayer_property_follow_viewport_scale>` 配合可以实现伪 3D 效果。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_property_follow_viewport_scale:

.. rst-class:: classref-property

:ref:`float<class_float>` **follow_viewport_scale** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_follow_viewport_scale** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_follow_viewport_scale** **(** **)**

使用 :ref:`follow_viewport_enabled<class_CanvasLayer_property_follow_viewport_enabled>` 时缩放图层。移入到前景的图层应具有增加的缩放，而移入到背景的图层应具有减小的缩放。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_property_layer:

.. rst-class:: classref-property

:ref:`int<class_int>` **layer** = ``1``

.. rst-class:: classref-property-setget

- void **set_layer** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_layer** **(** **)**

绘制顺序的图层索引。较低值绘制在较高值之后。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_property_offset:

.. rst-class:: classref-property

:ref:`Vector2<class_Vector2>` **offset** = ``Vector2(0, 0)``

.. rst-class:: classref-property-setget

- void **set_offset** **(** :ref:`Vector2<class_Vector2>` value **)**
- :ref:`Vector2<class_Vector2>` **get_offset** **(** **)**

图层的基本偏移量。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_property_rotation:

.. rst-class:: classref-property

:ref:`float<class_float>` **rotation** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_rotation** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_rotation** **(** **)**

图层的旋转弧度。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_property_scale:

.. rst-class:: classref-property

:ref:`Vector2<class_Vector2>` **scale** = ``Vector2(1, 1)``

.. rst-class:: classref-property-setget

- void **set_scale** **(** :ref:`Vector2<class_Vector2>` value **)**
- :ref:`Vector2<class_Vector2>` **get_scale** **(** **)**

图层的缩放。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_property_transform:

.. rst-class:: classref-property

:ref:`Transform2D<class_Transform2D>` **transform** = ``Transform2D(1, 0, 0, 1, 0, 0)``

.. rst-class:: classref-property-setget

- void **set_transform** **(** :ref:`Transform2D<class_Transform2D>` value **)**
- :ref:`Transform2D<class_Transform2D>` **get_transform** **(** **)**

图层的变换。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_property_visible:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **visible** = ``true``

.. rst-class:: classref-property-setget

- void **set_visible** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_visible** **(** **)**

为 ``false`` 时，该 **CanvasLayer** 下的所有 :ref:`CanvasItem<class_CanvasItem>` 都会被隐藏。

与 :ref:`CanvasItem.visible<class_CanvasItem_property_visible>` 不同，\ **CanvasLayer** 的显示与否不会传播到其内部的层。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_CanvasLayer_method_get_canvas:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **get_canvas** **(** **)** |const|

返回此层使用的画布的 RID。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_method_get_final_transform:

.. rst-class:: classref-method

:ref:`Transform2D<class_Transform2D>` **get_final_transform** **(** **)** |const|

返回从 **CanvasLayer** 坐标系到 :ref:`Viewport<class_Viewport>` 坐标系的变换。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_method_hide:

.. rst-class:: classref-method

void **hide** **(** **)**

隐藏该 **CanvasLayer** 下的所有 :ref:`CanvasItem<class_CanvasItem>`\ 。相当于将 :ref:`visible<class_CanvasLayer_property_visible>` 设为 ``false``\ 。

.. rst-class:: classref-item-separator

----

.. _class_CanvasLayer_method_show:

.. rst-class:: classref-method

void **show** **(** **)**

显示该 **CanvasLayer** 下的所有 :ref:`CanvasItem<class_CanvasItem>`\ 。相当于将 :ref:`visible<class_CanvasLayer_property_visible>` 设为 ``true``\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
