:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/InputEventShortcut.xml.

.. _class_InputEventShortcut:

InputEventShortcut
==================

**Inherits:** :ref:`InputEvent<class_InputEvent>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

代表触发的键盘快捷键 :ref:`Shortcut<class_Shortcut>`\ 。

.. rst-class:: classref-introduction-group

Description
-----------

InputEventShortcut 是一种可以在 :ref:`Node._unhandled_key_input<class_Node_method__unhandled_key_input>` 中收到的特殊事件。通常由编辑器的“命令面板”发送，用于触发动作，但也可以使用 :ref:`Viewport.push_input<class_Viewport_method_push_input>` 手动发送。

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------+-------------------------------------------------------------+
   | :ref:`Shortcut<class_Shortcut>` | :ref:`shortcut<class_InputEventShortcut_property_shortcut>` |
   +---------------------------------+-------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_InputEventShortcut_property_shortcut:

.. rst-class:: classref-property

:ref:`Shortcut<class_Shortcut>` **shortcut**

.. rst-class:: classref-property-setget

- void **set_shortcut** **(** :ref:`Shortcut<class_Shortcut>` value **)**
- :ref:`Shortcut<class_Shortcut>` **get_shortcut** **(** **)**

这个事件代表的 :ref:`Shortcut<class_Shortcut>`\ 。它的 :ref:`Shortcut.matches_event<class_Shortcut_method_matches_event>` 方法对这个事件始终返回 ``true``\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
