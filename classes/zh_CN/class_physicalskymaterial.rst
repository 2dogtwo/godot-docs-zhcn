:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicalSkyMaterial.xml.

.. _class_PhysicalSkyMaterial:

PhysicalSkyMaterial
===================

**Inherits:** :ref:`Material<class_Material>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

A material that defines a sky for a :ref:`Sky<class_Sky>` resource by a set of physical properties.

.. rst-class:: classref-introduction-group

Description
-----------

该 **PhysicalSkyMaterial** 使用 Preetham 解析日光模型，根据物理属性绘制一个天空。这会产生比 :ref:`ProceduralSkyMaterial<class_ProceduralSkyMaterial>` 更加逼真的天空，但速度稍慢且灵活性较差。

该 **PhysicalSkyMaterial** 仅支持一个太阳。太阳的颜色、能量、和方向，取自场景树中的第一个 :ref:`DirectionalLight3D<class_DirectionalLight3D>`\ 。

由于它基于一个日光模型，所以随着日落的结束，天空会逐渐变黑。如果想要一个完整的白天/黑夜循环，则必须通过将其转换为一个 :ref:`ShaderMaterial<class_ShaderMaterial>`\ ，并将一个夜空直接添加到生成的着色器中以添加一个夜空。

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`float<class_float>`         | :ref:`energy_multiplier<class_PhysicalSkyMaterial_property_energy_multiplier>`       | ``1.0``                          |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`ground_color<class_PhysicalSkyMaterial_property_ground_color>`                 | ``Color(0.1, 0.07, 0.034, 1)``   |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`float<class_float>`         | :ref:`mie_coefficient<class_PhysicalSkyMaterial_property_mie_coefficient>`           | ``0.005``                        |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`mie_color<class_PhysicalSkyMaterial_property_mie_color>`                       | ``Color(0.69, 0.729, 0.812, 1)`` |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`float<class_float>`         | :ref:`mie_eccentricity<class_PhysicalSkyMaterial_property_mie_eccentricity>`         | ``0.8``                          |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`night_sky<class_PhysicalSkyMaterial_property_night_sky>`                       |                                  |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`float<class_float>`         | :ref:`rayleigh_coefficient<class_PhysicalSkyMaterial_property_rayleigh_coefficient>` | ``2.0``                          |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`rayleigh_color<class_PhysicalSkyMaterial_property_rayleigh_color>`             | ``Color(0.3, 0.405, 0.6, 1)``    |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`float<class_float>`         | :ref:`sun_disk_scale<class_PhysicalSkyMaterial_property_sun_disk_scale>`             | ``1.0``                          |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`float<class_float>`         | :ref:`turbidity<class_PhysicalSkyMaterial_property_turbidity>`                       | ``10.0``                         |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`bool<class_bool>`           | :ref:`use_debanding<class_PhysicalSkyMaterial_property_use_debanding>`               | ``true``                         |
   +-----------------------------------+--------------------------------------------------------------------------------------+----------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_PhysicalSkyMaterial_property_energy_multiplier:

.. rst-class:: classref-property

:ref:`float<class_float>` **energy_multiplier** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_energy_multiplier** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_energy_multiplier** **(** **)**

天空整体亮度的乘数。数值越高，天空就越亮。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_ground_color:

.. rst-class:: classref-property

:ref:`Color<class_Color>` **ground_color** = ``Color(0.1, 0.07, 0.034, 1)``

.. rst-class:: classref-property-setget

- void **set_ground_color** **(** :ref:`Color<class_Color>` value **)**
- :ref:`Color<class_Color>` **get_ground_color** **(** **)**

调制天空下半部分的 :ref:`Color<class_Color>`\ ，这部分代表地面。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_mie_coefficient:

.. rst-class:: classref-property

:ref:`float<class_float>` **mie_coefficient** = ``0.005``

.. rst-class:: classref-property-setget

- void **set_mie_coefficient** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_mie_coefficient** **(** **)**

控制天空中\ `米氏散射 <https://zh.wikipedia.org/wiki/%E7%B1%B3%E6%B0%8F%E6%95%A3%E5%B0%84>`__\ 的强度。米氏散射是光与较大的粒子（例如水）碰撞的结果。在地球上，米氏散射的结果是太阳和地平线周围的颜色发白。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_mie_color:

.. rst-class:: classref-property

:ref:`Color<class_Color>` **mie_color** = ``Color(0.69, 0.729, 0.812, 1)``

.. rst-class:: classref-property-setget

- void **set_mie_color** **(** :ref:`Color<class_Color>` value **)**
- :ref:`Color<class_Color>` **get_mie_color** **(** **)**

控制天空中\ `米氏散射 <https://zh.wikipedia.org/wiki/%E7%B1%B3%E6%B0%8F%E6%95%A3%E5%B0%84>`__\ 效果的 :ref:`Color<class_Color>`\ 。虽然在物理上并不准确，但可以创造出看上去像的外星球的天空。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_mie_eccentricity:

.. rst-class:: classref-property

:ref:`float<class_float>` **mie_eccentricity** = ``0.8``

.. rst-class:: classref-property-setget

- void **set_mie_eccentricity** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_mie_eccentricity** **(** **)**

控制\ `米氏散射 <https://zh.wikipedia.org/wiki/%E7%B1%B3%E6%B0%8F%E6%95%A3%E5%B0%84>`__\ 的方向。值为 ``1`` 表示当光照到粒子时会直接穿过。值为\ ``-1`` 表示所有的光都是向后散射的。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_night_sky:

.. rst-class:: classref-property

:ref:`Texture2D<class_Texture2D>` **night_sky**

.. rst-class:: classref-property-setget

- void **set_night_sky** **(** :ref:`Texture2D<class_Texture2D>` value **)**
- :ref:`Texture2D<class_Texture2D>` **get_night_sky** **(** **)**

用于夜空的 :ref:`Texture2D<class_Texture2D>`\ 。会添加到天空中，所以足够亮的话在白天也可能会看到。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_rayleigh_coefficient:

.. rst-class:: classref-property

:ref:`float<class_float>` **rayleigh_coefficient** = ``2.0``

.. rst-class:: classref-property-setget

- void **set_rayleigh_coefficient** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_rayleigh_coefficient** **(** **)**

控制\ `瑞利散射 <https://zh.wikipedia.org/zh/%E7%91%9E%E5%88%A9%E6%95%A3%E5%B0%84>`__\ 的强度。瑞利散射是光与较小粒子碰撞的结果，是天空呈蓝色的原因。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_rayleigh_color:

.. rst-class:: classref-property

:ref:`Color<class_Color>` **rayleigh_color** = ``Color(0.3, 0.405, 0.6, 1)``

.. rst-class:: classref-property-setget

- void **set_rayleigh_color** **(** :ref:`Color<class_Color>` value **)**
- :ref:`Color<class_Color>` **get_rayleigh_color** **(** **)**

控制\ `瑞利散射 <https://zh.wikipedia.org/zh/%E7%91%9E%E5%88%A9%E6%95%A3%E5%B0%84>`__\ 的 :ref:`Color<class_Color>`\ 。虽然在物理上并不准确，但可以创造出看上去像的外星球的天空。例如，将其设为红色 :ref:`Color<class_Color>`\ ，可以得到火星大气的外观，日落时为蓝色。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_sun_disk_scale:

.. rst-class:: classref-property

:ref:`float<class_float>` **sun_disk_scale** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_sun_disk_scale** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_sun_disk_scale** **(** **)**

设置太阳圆盘的大小。默认值基于从地球对太阳的感知大小。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_turbidity:

.. rst-class:: classref-property

:ref:`float<class_float>` **turbidity** = ``10.0``

.. rst-class:: classref-property-setget

- void **set_turbidity** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_turbidity** **(** **)**

设置大气的厚度。高浊度会产生雾状外观的大气，而低浊度会产生更清晰的大气。

.. rst-class:: classref-item-separator

----

.. _class_PhysicalSkyMaterial_property_use_debanding:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **use_debanding** = ``true``

.. rst-class:: classref-property-setget

- void **set_use_debanding** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_use_debanding** **(** **)**

如果为 ``true``\ ，则启用去色带。去色带会增加少量噪点，这有助于减少天空中颜色的平滑变化而出现的色带。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
