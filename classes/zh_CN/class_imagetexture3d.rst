:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ImageTexture3D.xml.

.. _class_ImageTexture3D:

ImageTexture3D
==============

**Inherits:** :ref:`Texture3D<class_Texture3D>` **<** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

具有 3 个维度的纹理。

.. rst-class:: classref-introduction-group

Description
-----------

**ImageTexture3D** 是一种具有宽度、高度、和深度的三维 :ref:`ImageTexture<class_ImageTexture>`\ 。另请参阅 :ref:`ImageTextureLayered<class_ImageTextureLayered>`\ 。

3D 纹理通常用于存储 :ref:`FogMaterial<class_FogMaterial>` 的密度图、\ :ref:`Environment<class_Environment>` 的色彩校正 LUT、\ :ref:`GPUParticlesAttractorVectorField3D<class_GPUParticlesAttractorVectorField3D>` 的矢量场、和 :ref:`GPUParticlesCollisionSDF3D<class_GPUParticlesCollisionSDF3D>` 的碰撞图。3D 纹理也可用于自定义着色器。

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>` | :ref:`create<class_ImageTexture3D_method_create>` **(** :ref:`Format<enum_Image_Format>` format, :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`int<class_int>` depth, :ref:`bool<class_bool>` use_mipmaps, :ref:`Image[]<class_Image>` data **)** |
   +---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                  | :ref:`update<class_ImageTexture3D_method_update>` **(** :ref:`Image[]<class_Image>` data **)**                                                                                                                                                                       |
   +---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_ImageTexture3D_method_create:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **create** **(** :ref:`Format<enum_Image_Format>` format, :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`int<class_int>` depth, :ref:`bool<class_bool>` use_mipmaps, :ref:`Image[]<class_Image>` data **)**

创建具有指定 ``width``\ 、\ ``height`` 和 ``depth`` 的 **ImageTexture3D**\ 。请参阅 :ref:`Format<enum_Image_Format>` 了解 ``format`` 选项。如果 ``use_mipmaps`` 为 ``true``\ ，则为该 **ImageTexture3D** 生成 Mipmaps。

.. rst-class:: classref-item-separator

----

.. _class_ImageTexture3D_method_update:

.. rst-class:: classref-method

void **update** **(** :ref:`Image[]<class_Image>` data **)**

将纹理的现有数据替换为 ``data`` 中指定的图层。\ ``data`` 的大小必须与用于 :ref:`create<class_ImageTexture3D_method_create>` 的参数一致。换句话说，不能通过调用 :ref:`update<class_ImageTexture3D_method_update>` 来调整纹理的大小或改变其格式。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
