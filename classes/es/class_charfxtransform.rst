:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CharFXTransform.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CharFXTransform:

CharFXTransform
===============

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Controla cómo se mostrará un personaje individual en un :ref:`RichTextEffect<class_RichTextEffect>`.

Descripción
----------------------

Al establecer varias propiedades en este objeto, puede controlar cómo se mostrarán los caracteres individuales en un :ref:`RichTextEffect<class_RichTextEffect>`.

Tutoriales
--------------------

- :doc:`../tutorials/ui/bbcode_in_richtextlabel`

- `https://github.com/Eoin-ONeill-Yokai/Godot-Rich-Text-Effect-Test-Project <https://github.com/Eoin-ONeill-Yokai/Godot-Rich-Text-Effect-Test-Project>`__

Propiedades
----------------------

+-------------------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`               | :ref:`absolute_index<class_CharFXTransform_property_absolute_index>` | ``0``                   |
+-------------------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`               | :ref:`character<class_CharFXTransform_property_character>`           | ``0``                   |
+-------------------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`           | :ref:`color<class_CharFXTransform_property_color>`                   | ``Color( 0, 0, 0, 1 )`` |
+-------------------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`           | :ref:`elapsed_time<class_CharFXTransform_property_elapsed_time>`     | ``0.0``                 |
+-------------------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`Dictionary<class_Dictionary>` | :ref:`env<class_CharFXTransform_property_env>`                       | ``{}``                  |
+-------------------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`       | :ref:`offset<class_CharFXTransform_property_offset>`                 | ``Vector2( 0, 0 )``     |
+-------------------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`               | :ref:`relative_index<class_CharFXTransform_property_relative_index>` | ``0``                   |
+-------------------------------------+----------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`             | :ref:`visible<class_CharFXTransform_property_visible>`               | ``true``                |
+-------------------------------------+----------------------------------------------------------------------+-------------------------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_CharFXTransform_property_absolute_index:

- :ref:`int<class_int>` **absolute_index**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_absolute_index(value) |
+-----------+---------------------------+
| *Getter*  | get_absolute_index()      |
+-----------+---------------------------+

El índice del carácter actual (a partir de 0). Establecer esta propiedad no afectará al dibujo.

----

.. _class_CharFXTransform_property_character:

- :ref:`int<class_int>` **character**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_character(value) |
+-----------+----------------------+
| *Getter*  | get_character()      |
+-----------+----------------------+

El código Unicode que el carácter usará. Esto sólo afecta a los caracteres no blancos. El :ref:`@GDScript.ord<class_@GDScript_method_ord>` puede ser útil aquí. Por ejemplo, lo siguiente reemplazará todos los caracteres con asteriscos:

::

    # "Char_fx" es el parámetro CharFXTransform de "process_custom_fx()`.
    # Ver la documentación de RichTextEffect para más detalles.
    char_fx.character = ord("*")

----

.. _class_CharFXTransform_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_color(value)        |
+-----------+-------------------------+
| *Getter*  | get_color()             |
+-----------+-------------------------+

El color con el que se dibujará el carácter.

----

.. _class_CharFXTransform_property_elapsed_time:

- :ref:`float<class_float>` **elapsed_time**

+-----------+-------------------------+
| *Default* | ``0.0``                 |
+-----------+-------------------------+
| *Setter*  | set_elapsed_time(value) |
+-----------+-------------------------+
| *Getter*  | get_elapsed_time()      |
+-----------+-------------------------+

The time elapsed since the :ref:`RichTextLabel<class_RichTextLabel>` was added to the scene tree (in seconds). Time stops when the :ref:`RichTextLabel<class_RichTextLabel>` is paused (see :ref:`Node.pause_mode<class_Node_property_pause_mode>`). Resets when the text in the :ref:`RichTextLabel<class_RichTextLabel>` is changed.

\ **Note:** Time still passes while the :ref:`RichTextLabel<class_RichTextLabel>` is hidden.

----

.. _class_CharFXTransform_property_env:

- :ref:`Dictionary<class_Dictionary>` **env**

+-----------+------------------------+
| *Default* | ``{}``                 |
+-----------+------------------------+
| *Setter*  | set_environment(value) |
+-----------+------------------------+
| *Getter*  | get_environment()      |
+-----------+------------------------+

Contiene los argumentos pasados en la etiqueta de apertura de BBCode. Por defecto, los argumentos son cadenas; si su contenido coincide con un tipo como :ref:`bool<class_bool>`, :ref:`int<class_int>` o :ref:`float<class_float>`, se convertirán automáticamente. Los códigos de color en la forma ``#rrggbb`` o ``#rgb`` se convertirán en un :ref:`Color<class_Color>` opaco. Los argumentos de string pueden no contener espacios, incluso si son citados. Si están presentes, las comillas también estarán presentes en la string final.

Por ejemplo, la etiqueta de apertura de BBCode ``[example foo=hello bar=true baz=42 color=#ffffff]`` se asignará al siguiente :ref:`Dictionary<class_Dictionary>`:

::

    {"foo": "hola", "bar": true, "baz": 42, "color": Color(1, 1, 1, 1)}

----

.. _class_CharFXTransform_property_offset:

- :ref:`Vector2<class_Vector2>` **offset**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_offset(value)   |
+-----------+---------------------+
| *Getter*  | get_offset()        |
+-----------+---------------------+

La posición de desplazamiento con el que el carácter será dibujado (en píxeles).

----

.. _class_CharFXTransform_property_relative_index:

- :ref:`int<class_int>` **relative_index**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_relative_index(value) |
+-----------+---------------------------+
| *Getter*  | get_relative_index()      |
+-----------+---------------------------+

El índice del carácter actual (a partir de 0). Establecer esta propiedad no afectará al dibujo.

----

.. _class_CharFXTransform_property_visible:

- :ref:`bool<class_bool>` **visible**

+-----------+-----------------------+
| *Default* | ``true``              |
+-----------+-----------------------+
| *Setter*  | set_visibility(value) |
+-----------+-----------------------+
| *Getter*  | is_visible()          |
+-----------+-----------------------+

Si ``true``, el carácter será dibujado. Si ``false``, el carácter se ocultará. Los caracteres alrededor de los caracteres ocultos se posicionarán para tomar el espacio de los caracteres ocultos. Si no se desea esto, establezca su :ref:`color<class_CharFXTransform_property_color>` a ``Color(1, 1, 1, 0)`` en su lugar.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
