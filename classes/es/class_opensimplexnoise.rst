:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the OpenSimplexNoise.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_OpenSimplexNoise:

OpenSimplexNoise
================

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Generador de ruido basado en Open Simplex.

Descripción
----------------------

Este recurso le permite configurar y tomar muestras de un espacio de ruido fractal. He aquí un breve ejemplo de uso que configura un OpenSimplexNoise y obtiene muestras en varias posiciones y dimensiones:

::

    var ruido = OpenSimplexNoise.new()
    
    # Configurar
    ruido.seed = randi()
    ruido.octaves = 4
    ruido.period = 20.0
    ruido.persistence = 0.8
    
    # Muestra
    print("Valores:")
    print(ruido.get_noise_2d(1.0, 1.0))
    print(ruido.get_noise_3d(0.5, 3.0, 15.0))
    print(ruido.get_noise_4d(0.5, 1.9, 4.7, 0.0))

Propiedades
----------------------

+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`lacunarity<class_OpenSimplexNoise_property_lacunarity>`   | ``2.0``  |
+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`int<class_int>`     | :ref:`octaves<class_OpenSimplexNoise_property_octaves>`         | ``3``    |
+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`period<class_OpenSimplexNoise_property_period>`           | ``64.0`` |
+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`persistence<class_OpenSimplexNoise_property_persistence>` | ``0.5``  |
+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`int<class_int>`     | :ref:`seed<class_OpenSimplexNoise_property_seed>`               | ``0``    |
+---------------------------+-----------------------------------------------------------------+----------+

Métodos
--------------

+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>` | :ref:`get_image<class_OpenSimplexNoise_method_get_image>` **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`Vector2<class_Vector2>` noise_offset=Vector2( 0, 0 ) **)** |const|    |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_1d<class_OpenSimplexNoise_method_get_noise_1d>` **(** :ref:`float<class_float>` x **)** |const|                                                                                        |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_2d<class_OpenSimplexNoise_method_get_noise_2d>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)** |const|                                                           |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_2dv<class_OpenSimplexNoise_method_get_noise_2dv>` **(** :ref:`Vector2<class_Vector2>` pos **)** |const|                                                                                |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_3d<class_OpenSimplexNoise_method_get_noise_3d>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z **)** |const|                              |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_3dv<class_OpenSimplexNoise_method_get_noise_3dv>` **(** :ref:`Vector3<class_Vector3>` pos **)** |const|                                                                                |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_4d<class_OpenSimplexNoise_method_get_noise_4d>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z, :ref:`float<class_float>` w **)** |const| |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>` | :ref:`get_seamless_image<class_OpenSimplexNoise_method_get_seamless_image>` **(** :ref:`int<class_int>` size **)** |const|                                                                             |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_OpenSimplexNoise_property_lacunarity:

- :ref:`float<class_float>` **lacunarity**

+-----------+-----------------------+
| *Default* | ``2.0``               |
+-----------+-----------------------+
| *Setter*  | set_lacunarity(value) |
+-----------+-----------------------+
| *Getter*  | get_lacunarity()      |
+-----------+-----------------------+

Diferencia de período entre :ref:`octaves<class_OpenSimplexNoise_property_octaves>`.

----

.. _class_OpenSimplexNoise_property_octaves:

- :ref:`int<class_int>` **octaves**

+-----------+--------------------+
| *Default* | ``3``              |
+-----------+--------------------+
| *Setter*  | set_octaves(value) |
+-----------+--------------------+
| *Getter*  | get_octaves()      |
+-----------+--------------------+

Número de capas de ruido de OpenSimplex que se muestrean para obtener el ruido fractal. Los valores más altos dan como resultado un ruido más detallado, pero tardan más tiempo en generarse.

\ **Nota:** El máximo valor permitido es 9.

----

.. _class_OpenSimplexNoise_property_period:

- :ref:`float<class_float>` **period**

+-----------+-------------------+
| *Default* | ``64.0``          |
+-----------+-------------------+
| *Setter*  | set_period(value) |
+-----------+-------------------+
| *Getter*  | get_period()      |
+-----------+-------------------+

Período de la octava base. Un período más bajo da como resultado un ruido de mayor frecuencia (más valor cambia a través de la misma distancia).

----

.. _class_OpenSimplexNoise_property_persistence:

- :ref:`float<class_float>` **persistence**

+-----------+------------------------+
| *Default* | ``0.5``                |
+-----------+------------------------+
| *Setter*  | set_persistence(value) |
+-----------+------------------------+
| *Getter*  | get_persistence()      |
+-----------+------------------------+

Factor de contribución de las diferentes octavas. Un valor de ``persistence`` de 1 significa que todas las octavas tienen la misma contribución, un valor de 0,5 significa que cada octava contribuye la mitad que la anterior.

----

.. _class_OpenSimplexNoise_property_seed:

- :ref:`int<class_int>` **seed**

+-----------+-----------------+
| *Default* | ``0``           |
+-----------+-----------------+
| *Setter*  | set_seed(value) |
+-----------+-----------------+
| *Getter*  | get_seed()      |
+-----------+-----------------+

La semilla usada para generar valores aleatorios, diferentes semillas generarán diferentes mapas de ruido.

Descripciones de Métodos
------------------------------------------------

.. _class_OpenSimplexNoise_method_get_image:

- :ref:`Image<class_Image>` **get_image** **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`Vector2<class_Vector2>` noise_offset=Vector2( 0, 0 ) **)** |const|

Generate a noise image in :ref:`Image.FORMAT_L8<class_Image_constant_FORMAT_L8>` format with the requested ``width`` and ``height``, based on the current noise parameters. If ``noise_offset`` is specified, then the offset value is used as the coordinates of the top-left corner of the generated noise.

----

.. _class_OpenSimplexNoise_method_get_noise_1d:

- :ref:`float<class_float>` **get_noise_1d** **(** :ref:`float<class_float>` x **)** |const|

Devuelve el valor de ruido 1D ``[-1,1]`` en la coordenada x dada.

\ **Nota:** Este método devuelve realmente el valor de ruido 2D ``[-1,1]`` con el valor fijo de la coordenada y 0,0.

----

.. _class_OpenSimplexNoise_method_get_noise_2d:

- :ref:`float<class_float>` **get_noise_2d** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)** |const|

Devuelve el valor de ruido 2D ``[-1,1]`` en la posición dada.

----

.. _class_OpenSimplexNoise_method_get_noise_2dv:

- :ref:`float<class_float>` **get_noise_2dv** **(** :ref:`Vector2<class_Vector2>` pos **)** |const|

Devuelve el valor de ruido 2D ``[-1,1]`` en la posición dada.

----

.. _class_OpenSimplexNoise_method_get_noise_3d:

- :ref:`float<class_float>` **get_noise_3d** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z **)** |const|

Devuelve el valor de ruido 3D ``[-1,1]`` en la posición dada.

----

.. _class_OpenSimplexNoise_method_get_noise_3dv:

- :ref:`float<class_float>` **get_noise_3dv** **(** :ref:`Vector3<class_Vector3>` pos **)** |const|

Devuelve el valor de ruido 3D ``[-1,1]`` en la posición dada.

----

.. _class_OpenSimplexNoise_method_get_noise_4d:

- :ref:`float<class_float>` **get_noise_4d** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z, :ref:`float<class_float>` w **)** |const|

Devuelve el valor de ruido 4D ``[-1,1]`` en la posición dada.

----

.. _class_OpenSimplexNoise_method_get_seamless_image:

- :ref:`Image<class_Image>` **get_seamless_image** **(** :ref:`int<class_int>` size **)** |const|

Generate a tileable noise image in :ref:`Image.FORMAT_L8<class_Image_constant_FORMAT_L8>` format, based on the current noise parameters. Generated seamless images are always square (``size`` × ``size``).

\ **Note:** Seamless noise has a lower contrast compared to non-seamless noise. This is due to the way noise uses higher dimensions for generating seamless noise.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
