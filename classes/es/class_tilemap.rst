:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TileMap.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TileMap:

TileMap
=======

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Nodo para mapas basados en tiles 2D.

Descripción
----------------------

Node for 2D tile-based maps. Tilemaps use a :ref:`TileSet<class_TileSet>` which contain a list of tiles (textures plus optional collision, navigation, and/or occluder shapes) which are used to create grid-based maps.

When doing physics queries against the tilemap, the cell coordinates are encoded as ``metadata`` for each detected collision shape returned by methods such as :ref:`Physics2DDirectSpaceState.intersect_shape<class_Physics2DDirectSpaceState_method_intersect_shape>`, :ref:`Physics2DDirectBodyState.get_contact_collider_shape_metadata<class_Physics2DDirectBodyState_method_get_contact_collider_shape_metadata>`, etc.

Tutoriales
--------------------

- :doc:`Using Tilemaps <../tutorials/2d/using_tilemaps>`

- `2D Platformer Demo <https://godotengine.org/asset-library/asset/120>`__

- `2D Isometric Demo <https://godotengine.org/asset-library/asset/112>`__

- `2D Hexagonal Demo <https://godotengine.org/asset-library/asset/111>`__

- `2D Navigation Astar Demo <https://godotengine.org/asset-library/asset/519>`__

- `2D Role Playing Game Demo <https://godotengine.org/asset-library/asset/520>`__

- `2D Kinematic Character Demo <https://godotengine.org/asset-library/asset/113>`__

Propiedades
----------------------

+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`cell_clip_uv<class_TileMap_property_cell_clip_uv>`                       | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`Transform2D<class_Transform2D>`      | :ref:`cell_custom_transform<class_TileMap_property_cell_custom_transform>`     | ``Transform2D( 64, 0, 0, 64, 0, 0 )`` |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`HalfOffset<enum_TileMap_HalfOffset>` | :ref:`cell_half_offset<class_TileMap_property_cell_half_offset>`               | ``2``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`int<class_int>`                      | :ref:`cell_quadrant_size<class_TileMap_property_cell_quadrant_size>`           | ``16``                                |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`Vector2<class_Vector2>`              | :ref:`cell_size<class_TileMap_property_cell_size>`                             | ``Vector2( 64, 64 )``                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`TileOrigin<enum_TileMap_TileOrigin>` | :ref:`cell_tile_origin<class_TileMap_property_cell_tile_origin>`               | ``0``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`cell_y_sort<class_TileMap_property_cell_y_sort>`                         | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`centered_textures<class_TileMap_property_centered_textures>`             | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`float<class_float>`                  | :ref:`collision_bounce<class_TileMap_property_collision_bounce>`               | ``0.0``                               |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`float<class_float>`                  | :ref:`collision_friction<class_TileMap_property_collision_friction>`           | ``1.0``                               |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`int<class_int>`                      | :ref:`collision_layer<class_TileMap_property_collision_layer>`                 | ``1``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`int<class_int>`                      | :ref:`collision_mask<class_TileMap_property_collision_mask>`                   | ``1``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`collision_use_kinematic<class_TileMap_property_collision_use_kinematic>` | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`collision_use_parent<class_TileMap_property_collision_use_parent>`       | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`compatibility_mode<class_TileMap_property_compatibility_mode>`           | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`Mode<enum_TileMap_Mode>`             | :ref:`mode<class_TileMap_property_mode>`                                       | ``0``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`int<class_int>`                      | :ref:`occluder_light_mask<class_TileMap_property_occluder_light_mask>`         | ``1``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`show_collision<class_TileMap_property_show_collision>`                   | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`TileSet<class_TileSet>`              | :ref:`tile_set<class_TileMap_property_tile_set>`                               |                                       |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+

Métodos
--------------

+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear<class_TileMap_method_clear>` **(** **)**                                                                                                                                                                                                                                                                       |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`fix_invalid_tiles<class_TileMap_method_fix_invalid_tiles>` **(** **)**                                                                                                                                                                                                                                               |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_cell<class_TileMap_method_get_cell>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                                                        |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_cell_autotile_coord<class_TileMap_method_get_cell_autotile_coord>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                          |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_cellv<class_TileMap_method_get_cellv>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                                                                                                                                                                                                                |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_collision_layer_bit<class_TileMap_method_get_collision_layer_bit>` **(** :ref:`int<class_int>` bit **)** |const|                                                                                                                                                                                                 |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_collision_mask_bit<class_TileMap_method_get_collision_mask_bit>` **(** :ref:`int<class_int>` bit **)** |const|                                                                                                                                                                                                   |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`     | :ref:`get_used_cells<class_TileMap_method_get_used_cells>` **(** **)** |const|                                                                                                                                                                                                                                             |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`     | :ref:`get_used_cells_by_id<class_TileMap_method_get_used_cells_by_id>` **(** :ref:`int<class_int>` id **)** |const|                                                                                                                                                                                                        |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`get_used_rect<class_TileMap_method_get_used_rect>` **(** **)**                                                                                                                                                                                                                                                       |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_cell_transposed<class_TileMap_method_is_cell_transposed>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_cell_x_flipped<class_TileMap_method_is_cell_x_flipped>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                                      |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_cell_y_flipped<class_TileMap_method_is_cell_y_flipped>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                                      |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`map_to_world<class_TileMap_method_map_to_world>` **(** :ref:`Vector2<class_Vector2>` map_position, :ref:`bool<class_bool>` ignore_half_ofs=false **)** |const|                                                                                                                                                       |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_cell<class_TileMap_method_set_cell>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` tile, :ref:`bool<class_bool>` flip_x=false, :ref:`bool<class_bool>` flip_y=false, :ref:`bool<class_bool>` transpose=false, :ref:`Vector2<class_Vector2>` autotile_coord=Vector2( 0, 0 ) **)** |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_cellv<class_TileMap_method_set_cellv>` **(** :ref:`Vector2<class_Vector2>` position, :ref:`int<class_int>` tile, :ref:`bool<class_bool>` flip_x=false, :ref:`bool<class_bool>` flip_y=false, :ref:`bool<class_bool>` transpose=false **)**                                                                       |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_collision_layer_bit<class_TileMap_method_set_collision_layer_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**                                                                                                                                                                          |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_collision_mask_bit<class_TileMap_method_set_collision_mask_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**                                                                                                                                                                            |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`update_bitmask_area<class_TileMap_method_update_bitmask_area>` **(** :ref:`Vector2<class_Vector2>` position **)**                                                                                                                                                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`update_bitmask_region<class_TileMap_method_update_bitmask_region>` **(** :ref:`Vector2<class_Vector2>` start=Vector2( 0, 0 ), :ref:`Vector2<class_Vector2>` end=Vector2( 0, 0 ) **)**                                                                                                                                |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`update_dirty_quadrants<class_TileMap_method_update_dirty_quadrants>` **(** **)**                                                                                                                                                                                                                                     |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`world_to_map<class_TileMap_method_world_to_map>` **(** :ref:`Vector2<class_Vector2>` world_position **)** |const|                                                                                                                                                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Señales
--------------

.. _class_TileMap_signal_settings_changed:

- **settings_changed** **(** **)**

Emitido cuando la configuración de un mapa de tiles ha cambiado.

Enumeraciones
--------------------------

.. _enum_TileMap_Mode:

.. _class_TileMap_constant_MODE_SQUARE:

.. _class_TileMap_constant_MODE_ISOMETRIC:

.. _class_TileMap_constant_MODE_CUSTOM:

enum **Mode**:

- **MODE_SQUARE** = **0** --- Modo de orientación ortogonal.

- **MODE_ISOMETRIC** = **1** --- Modo de orientación isométrica.

- **MODE_CUSTOM** = **2** --- Modo de orientación personalizada.

----

.. _enum_TileMap_HalfOffset:

.. _class_TileMap_constant_HALF_OFFSET_X:

.. _class_TileMap_constant_HALF_OFFSET_Y:

.. _class_TileMap_constant_HALF_OFFSET_DISABLED:

.. _class_TileMap_constant_HALF_OFFSET_NEGATIVE_X:

.. _class_TileMap_constant_HALF_OFFSET_NEGATIVE_Y:

enum **HalfOffset**:

- **HALF_OFFSET_X** = **0** --- Medio desplazamiento en la coordenada X.

- **HALF_OFFSET_Y** = **1** --- Medio desplazamiento en la coordenada Y.

- **HALF_OFFSET_DISABLED** = **2** --- Medio desplazamiento desactivado.

- **HALF_OFFSET_NEGATIVE_X** = **3** --- Desplazamiento medio en la coordenada X (negativo).

- **HALF_OFFSET_NEGATIVE_Y** = **4** --- Medio desplazamiento en la coordenada Y (negativo).

----

.. _enum_TileMap_TileOrigin:

.. _class_TileMap_constant_TILE_ORIGIN_TOP_LEFT:

.. _class_TileMap_constant_TILE_ORIGIN_CENTER:

.. _class_TileMap_constant_TILE_ORIGIN_BOTTOM_LEFT:

enum **TileOrigin**:

- **TILE_ORIGIN_TOP_LEFT** = **0** --- Origen del tile en su esquina superior izquierda.

- **TILE_ORIGIN_CENTER** = **1** --- El origen del tile en su centro.

- **TILE_ORIGIN_BOTTOM_LEFT** = **2** --- Origen del tile en su esquina inferior izquierda.

Constantes
--------------------

.. _class_TileMap_constant_INVALID_CELL:

- **INVALID_CELL** = **-1** --- Devuelto cuando una celda no existe.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_TileMap_property_cell_clip_uv:

- :ref:`bool<class_bool>` **cell_clip_uv**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_clip_uv(value) |
+-----------+--------------------+
| *Getter*  | get_clip_uv()      |
+-----------+--------------------+

Si ``true``, los UV de la celda serán recortados.

----

.. _class_TileMap_property_cell_custom_transform:

- :ref:`Transform2D<class_Transform2D>` **cell_custom_transform**

+-----------+---------------------------------------+
| *Default* | ``Transform2D( 64, 0, 0, 64, 0, 0 )`` |
+-----------+---------------------------------------+
| *Setter*  | set_custom_transform(value)           |
+-----------+---------------------------------------+
| *Getter*  | get_custom_transform()                |
+-----------+---------------------------------------+

La :ref:`Transform2D<class_Transform2D>` personalizada para ser aplicada a las celdas del TileMap.

----

.. _class_TileMap_property_cell_half_offset:

- :ref:`HalfOffset<enum_TileMap_HalfOffset>` **cell_half_offset**

+-----------+------------------------+
| *Default* | ``2``                  |
+-----------+------------------------+
| *Setter*  | set_half_offset(value) |
+-----------+------------------------+
| *Getter*  | get_half_offset()      |
+-----------+------------------------+

Cantidad para compensar las tiles alternadas. Ver :ref:`HalfOffset<enum_TileMap_HalfOffset>` para los posibles valores.

----

.. _class_TileMap_property_cell_quadrant_size:

- :ref:`int<class_int>` **cell_quadrant_size**

+-----------+--------------------------+
| *Default* | ``16``                   |
+-----------+--------------------------+
| *Setter*  | set_quadrant_size(value) |
+-----------+--------------------------+
| *Getter*  | get_quadrant_size()      |
+-----------+--------------------------+

El tamaño del cuadrante del TileMap. Optimiza el dibujo por lotes, usando trozos de este tamaño.

----

.. _class_TileMap_property_cell_size:

- :ref:`Vector2<class_Vector2>` **cell_size**

+-----------+-----------------------+
| *Default* | ``Vector2( 64, 64 )`` |
+-----------+-----------------------+
| *Setter*  | set_cell_size(value)  |
+-----------+-----------------------+
| *Getter*  | get_cell_size()       |
+-----------+-----------------------+

El tamaño de la celda del TileMap.

----

.. _class_TileMap_property_cell_tile_origin:

- :ref:`TileOrigin<enum_TileMap_TileOrigin>` **cell_tile_origin**

+-----------+------------------------+
| *Default* | ``0``                  |
+-----------+------------------------+
| *Setter*  | set_tile_origin(value) |
+-----------+------------------------+
| *Getter*  | get_tile_origin()      |
+-----------+------------------------+

Posición para el origen del tile. Ver :ref:`TileOrigin<enum_TileMap_TileOrigin>` para los posibles valores.

----

.. _class_TileMap_property_cell_y_sort:

- :ref:`bool<class_bool>` **cell_y_sort**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_y_sort_mode(value)   |
+-----------+--------------------------+
| *Getter*  | is_y_sort_mode_enabled() |
+-----------+--------------------------+

If ``true``, the TileMap's direct children will be drawn in order of their Y coordinate.

----

.. _class_TileMap_property_centered_textures:

- :ref:`bool<class_bool>` **centered_textures**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_centered_textures(value)   |
+-----------+--------------------------------+
| *Getter*  | is_centered_textures_enabled() |
+-----------+--------------------------------+

Si ``true``, las texturas se centrarán en el centro de cada tile. Esto es útil para ciertos modos isométricos o de arriba hacia abajo cuando las texturas se hacen más grandes o más pequeñas que las tiles (por ejemplo, para evitar el parpadeo en los bordes de las tiles). El desplazamiento se sigue aplicando, pero desde el centro de la tile. Si se utiliza, se ignora :ref:`compatibility_mode<class_TileMap_property_compatibility_mode>`.

Si ``false``, la posición de la textura comienza en la esquina superior izquierda a menos que :ref:`compatibility_mode<class_TileMap_property_compatibility_mode>` esté activado.

----

.. _class_TileMap_property_collision_bounce:

- :ref:`float<class_float>` **collision_bounce**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_collision_bounce(value) |
+-----------+-----------------------------+
| *Getter*  | get_collision_bounce()      |
+-----------+-----------------------------+

Valor de rebote para las colisiones de cuerpos estáticos (ver ``collision_use_kinematic``).

----

.. _class_TileMap_property_collision_friction:

- :ref:`float<class_float>` **collision_friction**

+-----------+-------------------------------+
| *Default* | ``1.0``                       |
+-----------+-------------------------------+
| *Setter*  | set_collision_friction(value) |
+-----------+-------------------------------+
| *Getter*  | get_collision_friction()      |
+-----------+-------------------------------+

Valor de fricción para colisiones de cuerpos estáticos (ver ``collision_use_kinematic``).

----

.. _class_TileMap_property_collision_layer:

- :ref:`int<class_int>` **collision_layer**

+-----------+----------------------------+
| *Default* | ``1``                      |
+-----------+----------------------------+
| *Setter*  | set_collision_layer(value) |
+-----------+----------------------------+
| *Getter*  | get_collision_layer()      |
+-----------+----------------------------+

The collision layer(s) for all colliders in the TileMap. See `Collision layers and masks <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_TileMap_property_collision_mask:

- :ref:`int<class_int>` **collision_mask**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_collision_mask(value) |
+-----------+---------------------------+
| *Getter*  | get_collision_mask()      |
+-----------+---------------------------+

The collision mask(s) for all colliders in the TileMap. See `Collision layers and masks <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_TileMap_property_collision_use_kinematic:

- :ref:`bool<class_bool>` **collision_use_kinematic**

+-----------+------------------------------------+
| *Default* | ``false``                          |
+-----------+------------------------------------+
| *Setter*  | set_collision_use_kinematic(value) |
+-----------+------------------------------------+
| *Getter*  | get_collision_use_kinematic()      |
+-----------+------------------------------------+

Si ``true``, las colisiones de TileMap se manejarán como un cuerpo cinematico. Si ``false``, las colisiones se manejarán como un cuerpo estático.

----

.. _class_TileMap_property_collision_use_parent:

- :ref:`bool<class_bool>` **collision_use_parent**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_collision_use_parent(value) |
+-----------+---------------------------------+
| *Getter*  | get_collision_use_parent()      |
+-----------+---------------------------------+

Si ``true``, la forma de colisión de este tilemap se añadirá a la forma de colisión del padre. El padre tiene que ser un :ref:`CollisionObject2D<class_CollisionObject2D>`.

----

.. _class_TileMap_property_compatibility_mode:

- :ref:`bool<class_bool>` **compatibility_mode**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_compatibility_mode(value)   |
+-----------+---------------------------------+
| *Getter*  | is_compatibility_mode_enabled() |
+-----------+---------------------------------+

Si ``true``, se mantiene la compatibilidad con los tilemaps realizados en Godot 3.1 o anteriores (las texturas se mueven cuando cambia el origen del tile y giran si el tamaño de la textura no es homogéneo). Este modo presenta problemas al realizar operaciones de colocación de ``flip_h``, ``flip_v`` y ``transpose`` sobre tiles isométricas no homogéneas (por ejemplo, 2:1), en las que la textura podría no coincidir con la colisión, por lo que no se recomienda para las tiles isométricas o no cuadradas.

Si ``false``, las texturas no se mueven al realizar las operaciones ``flip_h``, ``flip_v`` si no se utiliza el offset, ni al cambiar el origen de la tile.

El modo de compatibilidad no funciona con la opción :ref:`centered_textures<class_TileMap_property_centered_textures>`, porque desplazar las texturas con la opción :ref:`cell_tile_origin<class_TileMap_property_cell_tile_origin>` o en tiles irregulares no es relevante al centrar esas texturas.

----

.. _class_TileMap_property_mode:

- :ref:`Mode<enum_TileMap_Mode>` **mode**

+-----------+-----------------+
| *Default* | ``0``           |
+-----------+-----------------+
| *Setter*  | set_mode(value) |
+-----------+-----------------+
| *Getter*  | get_mode()      |
+-----------+-----------------+

El modo de orientación de TileMap. Vea :ref:`Mode<enum_TileMap_Mode>` para los posibles valores.

----

.. _class_TileMap_property_occluder_light_mask:

- :ref:`int<class_int>` **occluder_light_mask**

+-----------+--------------------------------+
| *Default* | ``1``                          |
+-----------+--------------------------------+
| *Setter*  | set_occluder_light_mask(value) |
+-----------+--------------------------------+
| *Getter*  | get_occluder_light_mask()      |
+-----------+--------------------------------+

La máscara de luz asignada a todos los oclusores de luz en el TileMap. Los oclusores de luz del TileSet arrojarán sombras sólo de los Light2D que tengan la misma máscara de luz.

----

.. _class_TileMap_property_show_collision:

- :ref:`bool<class_bool>` **show_collision**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_show_collision(value)   |
+-----------+-----------------------------+
| *Getter*  | is_show_collision_enabled() |
+-----------+-----------------------------+

If ``true``, collision shapes are visible in the editor. Doesn't affect collision shapes visibility at runtime. To show collision shapes at runtime, enable **Visible Collision Shapes** in the **Debug** menu instead.

----

.. _class_TileMap_property_tile_set:

- :ref:`TileSet<class_TileSet>` **tile_set**

+----------+--------------------+
| *Setter* | set_tileset(value) |
+----------+--------------------+
| *Getter* | get_tileset()      |
+----------+--------------------+

El :ref:`TileSet<class_TileSet>` asignado.

Descripciones de Métodos
------------------------------------------------

.. _class_TileMap_method_clear:

- void **clear** **(** **)**

Limpia todas las celdas.

----

.. _class_TileMap_method_fix_invalid_tiles:

- void **fix_invalid_tiles** **(** **)**

Despeja las celdas que no existen en el tileset.

----

.. _class_TileMap_method_get_cell:

- :ref:`int<class_int>` **get_cell** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

Devuelve el índice de tile de la celda dada. Si no existe ningún tile en la celda, devuelve :ref:`INVALID_CELL<class_TileMap_constant_INVALID_CELL>`.

----

.. _class_TileMap_method_get_cell_autotile_coord:

- :ref:`Vector2<class_Vector2>` **get_cell_autotile_coord** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

Devuelve la coordenada (columna y fila sutil) de la variación autotile en el tileset. Devuelve un vector cero si la celda no tiene autotiling.

----

.. _class_TileMap_method_get_cellv:

- :ref:`int<class_int>` **get_cellv** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

Devuelve el índice de tile de la célula dado por un Vector2. Si no existe ningún tile en la celda, devuelve :ref:`INVALID_CELL<class_TileMap_constant_INVALID_CELL>`.

----

.. _class_TileMap_method_get_collision_layer_bit:

- :ref:`bool<class_bool>` **get_collision_layer_bit** **(** :ref:`int<class_int>` bit **)** |const|

Devuelve ``true`` si el bit de la capa de colisión dada está fijado.

----

.. _class_TileMap_method_get_collision_mask_bit:

- :ref:`bool<class_bool>` **get_collision_mask_bit** **(** :ref:`int<class_int>` bit **)** |const|

Devuelve ``true`` si el bit de la máscara de colisión dada está configurado.

----

.. _class_TileMap_method_get_used_cells:

- :ref:`Array<class_Array>` **get_used_cells** **(** **)** |const|

Devuelve una array :ref:`Vector2<class_Vector2>` con las posiciones de todas las celdas que contienen un tile del conjunto de tileset (es decir, un índice de tile diferente de ``-1``).

----

.. _class_TileMap_method_get_used_cells_by_id:

- :ref:`Array<class_Array>` **get_used_cells_by_id** **(** :ref:`int<class_int>` id **)** |const|

Returns an array of all cells with the given tile index specified in ``id``.

----

.. _class_TileMap_method_get_used_rect:

- :ref:`Rect2<class_Rect2>` **get_used_rect** **(** **)**

Devuelve un rectángulo que encierra los tiles usados (no vacíos) del mapa.

----

.. _class_TileMap_method_is_cell_transposed:

- :ref:`bool<class_bool>` **is_cell_transposed** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

Devuelve ``true`` si la celda dada se transpone, es decir, los ejes X e Y se intercambian.

----

.. _class_TileMap_method_is_cell_x_flipped:

- :ref:`bool<class_bool>` **is_cell_x_flipped** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

Devuelve ``true`` si la celda dada se voltea en el eje X.

----

.. _class_TileMap_method_is_cell_y_flipped:

- :ref:`bool<class_bool>` **is_cell_y_flipped** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

Devuelve ``true`` si la celda dada se voltea en el eje Y.

----

.. _class_TileMap_method_map_to_world:

- :ref:`Vector2<class_Vector2>` **map_to_world** **(** :ref:`Vector2<class_Vector2>` map_position, :ref:`bool<class_bool>` ignore_half_ofs=false **)** |const|

Returns the local position of the top left corner of the cell corresponding to the given tilemap (grid-based) coordinates.

To get the global position, use :ref:`Node2D.to_global<class_Node2D_method_to_global>`:

::

    var local_position = my_tilemap.map_to_world(map_position)
    var global_position = my_tilemap.to_global(local_position)

Optionally, the tilemap's half offset can be ignored.

----

.. _class_TileMap_method_set_cell:

- void **set_cell** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` tile, :ref:`bool<class_bool>` flip_x=false, :ref:`bool<class_bool>` flip_y=false, :ref:`bool<class_bool>` transpose=false, :ref:`Vector2<class_Vector2>` autotile_coord=Vector2( 0, 0 ) **)**

Sets the tile index for the cell given by a Vector2.

An index of ``-1`` clears the cell.

Optionally, the tile can also be flipped, transposed, or given autotile coordinates. The autotile coordinate refers to the column and row of the subtile.

\ **Note:** Data such as navigation polygons and collision shapes are not immediately updated for performance reasons.

If you need these to be immediately updated, you can call :ref:`update_dirty_quadrants<class_TileMap_method_update_dirty_quadrants>`.

Overriding this method also overrides it internally, allowing custom logic to be implemented when tiles are placed/removed:

::

    func set_cell(x, y, tile, flip_x=false, flip_y=false, transpose=false, autotile_coord=Vector2()):
        # Write your custom logic here.
        # To call the default method:
        .set_cell(x, y, tile, flip_x, flip_y, transpose, autotile_coord)

----

.. _class_TileMap_method_set_cellv:

- void **set_cellv** **(** :ref:`Vector2<class_Vector2>` position, :ref:`int<class_int>` tile, :ref:`bool<class_bool>` flip_x=false, :ref:`bool<class_bool>` flip_y=false, :ref:`bool<class_bool>` transpose=false **)**

Establece el índice de tiles para la celda dada.

Un índice de ``-1`` borra la celda.

Opcionalmente, la tile también puede ser volteada o transpuesta.

\ **Nota:** Los datos como los polígonos de navegación y las formas de colisión no se actualizan inmediatamente por razones de rendimiento.

Si necesitas que se actualicen inmediatamente, puedes llamar a :ref:`update_dirty_quadrants<class_TileMap_method_update_dirty_quadrants>`.

----

.. _class_TileMap_method_set_collision_layer_bit:

- void **set_collision_layer_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

Establece el bit de la capa de colisión dada.

----

.. _class_TileMap_method_set_collision_mask_bit:

- void **set_collision_mask_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

Establece el bit de la máscara de colisión dada.

----

.. _class_TileMap_method_update_bitmask_area:

- void **update_bitmask_area** **(** :ref:`Vector2<class_Vector2>` position **)**

Aplica las reglas de autotiling a la célula (y sus células adyacentes) referidas por sus coordenadas X e Y basadas en la cuadrícula.

----

.. _class_TileMap_method_update_bitmask_region:

- void **update_bitmask_region** **(** :ref:`Vector2<class_Vector2>` start=Vector2( 0, 0 ), :ref:`Vector2<class_Vector2>` end=Vector2( 0, 0 ) **)**

Aplica las reglas de autotiling a las celdas de la región dada (especificadas por las coordenadas X e Y de la cuadrícula).

Llamar con parámetros inválidos (o que faltan) aplica las reglas de autocalibración para todo el mapa de tilemap.

----

.. _class_TileMap_method_update_dirty_quadrants:

- void **update_dirty_quadrants** **(** **)**

Actualiza los cuadrantes del mapa de tiles, permitiendo que cosas como la navegación y las formas de colisión se usen inmediatamente si se modifican.

----

.. _class_TileMap_method_world_to_map:

- :ref:`Vector2<class_Vector2>` **world_to_map** **(** :ref:`Vector2<class_Vector2>` world_position **)** |const|

Returns the tilemap (grid-based) coordinates corresponding to the given local position.

To use this with a global position, first determine the local position with :ref:`Node2D.to_local<class_Node2D_method_to_local>`:

::

    var local_position = my_tilemap.to_local(global_position)
    var map_position = my_tilemap.world_to_map(local_position)

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
