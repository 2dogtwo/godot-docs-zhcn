:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the AtlasTexture.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AtlasTexture:

AtlasTexture
============

**Inherits:** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Crops out one part of a texture, such as a texture from a texture atlas.

Descripción
----------------------

:ref:`Texture<class_Texture>` resource that crops out one part of the :ref:`atlas<class_AtlasTexture_property_atlas>` texture, defined by :ref:`region<class_AtlasTexture_property_region>`. The main use case is cropping out textures from a texture atlas, which is a big texture file that packs multiple smaller textures. Consists of a :ref:`Texture<class_Texture>` for the :ref:`atlas<class_AtlasTexture_property_atlas>`, a :ref:`region<class_AtlasTexture_property_region>` that defines the area of :ref:`atlas<class_AtlasTexture_property_atlas>` to use, and a :ref:`margin<class_AtlasTexture_property_margin>` that defines the border width.

\ ``AtlasTexture`` cannot be used in an :ref:`AnimatedTexture<class_AnimatedTexture>`, cannot be tiled in nodes such as :ref:`TextureRect<class_TextureRect>`, and does not work properly if used inside of other ``AtlasTexture`` resources. Multiple ``AtlasTexture`` resources can be used to crop multiple textures from the atlas. Using a texture atlas helps to optimize video memory costs and render calls compared to using multiple small files.

\ **Note:** AtlasTextures don't support repetition. The :ref:`Texture.FLAG_REPEAT<class_Texture_constant_FLAG_REPEAT>` and :ref:`Texture.FLAG_MIRRORED_REPEAT<class_Texture_constant_FLAG_MIRRORED_REPEAT>` flags are ignored when using an AtlasTexture.

Propiedades
----------------------

+-------------------------------+-------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`Texture<class_Texture>` | :ref:`atlas<class_AtlasTexture_property_atlas>`             |                                                                |
+-------------------------------+-------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`filter_clip<class_AtlasTexture_property_filter_clip>` | ``false``                                                      |
+-------------------------------+-------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`int<class_int>`         | flags                                                       | ``0`` (overrides :ref:`Texture<class_Texture_property_flags>`) |
+-------------------------------+-------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`margin<class_AtlasTexture_property_margin>`           | ``Rect2( 0, 0, 0, 0 )``                                        |
+-------------------------------+-------------------------------------------------------------+----------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`region<class_AtlasTexture_property_region>`           | ``Rect2( 0, 0, 0, 0 )``                                        |
+-------------------------------+-------------------------------------------------------------+----------------------------------------------------------------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_AtlasTexture_property_atlas:

- :ref:`Texture<class_Texture>` **atlas**

+----------+------------------+
| *Setter* | set_atlas(value) |
+----------+------------------+
| *Getter* | get_atlas()      |
+----------+------------------+

The texture that contains the atlas. Can be any :ref:`Texture<class_Texture>` subtype.

----

.. _class_AtlasTexture_property_filter_clip:

- :ref:`bool<class_bool>` **filter_clip**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_filter_clip(value) |
+-----------+------------------------+
| *Getter*  | has_filter_clip()      |
+-----------+------------------------+

Si ``true``, recorta el area fuera de la region para evitar el sangrado de pixeles de textura alrededor.

----

.. _class_AtlasTexture_property_margin:

- :ref:`Rect2<class_Rect2>` **margin**

+-----------+-------------------------+
| *Default* | ``Rect2( 0, 0, 0, 0 )`` |
+-----------+-------------------------+
| *Setter*  | set_margin(value)       |
+-----------+-------------------------+
| *Getter*  | get_margin()            |
+-----------+-------------------------+

El margen alrededor de la region. El parametro :ref:`Rect2<class_Rect2>`\ :ref:`Rect2.size<class_Rect2_property_size>` ( "w" y "h" en el editor) cambia el tamaño de la textura para que encaje dentro del margen.

----

.. _class_AtlasTexture_property_region:

- :ref:`Rect2<class_Rect2>` **region**

+-----------+-------------------------+
| *Default* | ``Rect2( 0, 0, 0, 0 )`` |
+-----------+-------------------------+
| *Setter*  | set_region(value)       |
+-----------+-------------------------+
| *Getter*  | get_region()            |
+-----------+-------------------------+

La region utilizada del AtlasTexture.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
