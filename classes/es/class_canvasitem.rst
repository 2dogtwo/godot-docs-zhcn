:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CanvasItem.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CanvasItem:

CanvasItem
==========

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`Control<class_Control>`, :ref:`Node2D<class_Node2D>`

Clase base de cualquier cosa 2D.

Descripción
----------------------

Clase base de cualquier cosa 2D. Los objetos de Canvas se colocan en un árbol; los niños heredan y extienden la la transformada de su padre. ``CanvasItem`` se extiende por :ref:`Control<class_Control>` para cualquier cosa relacionada con la GUI, y por :ref:`Node2D<class_Node2D>` para cualquier cosa relacionada con el motor 2D.

Cualquier ``CanvasItem`` puede dibujar. Para ello, se debe llamar a :ref:`update<class_CanvasItem_method_update>`, luego se recibirá :ref:`NOTIFICATION_DRAW<class_CanvasItem_constant_NOTIFICATION_DRAW>` en tiempo de inactividad para solicitar el redibujo. Debido a esto, los elementos de canvas no necesitan ser redibujados en cada cuadro, mejorando el rendimiento significativamente. Se proporcionan varias funciones para dibujar en el ``CanvasItem`` (ver las funciones ``draw_*``). Sin embargo, sólo pueden utilizarse dentro de las funciones virtuales :ref:`Object._notification<class_Object_method__notification>`, de señal o :ref:`_draw<class_CanvasItem_method__draw>`.

Los elementos de Canvas se dibujan en orden del árbol. Por defecto, los niños están encima de sus padres, por lo que una raíz ``CanvasItem`` se dibujará detrás de todo. Este comportamiento puede ser cambiado por cada elemento.

Un ``CanvasItem`` también puede ser escondido, lo que también esconderá a sus hijos. Proporciona muchas maneras de cambiar parámetros como la modulación (para sí mismo y sus hijos) y la auto-modulación (sólo para sí mismo), así como su modo de mezcla.

En última instancia, se puede solicitar una notificación de transformación, que notificará al nodo que su posición global ha cambiado en caso de que el árbol padre haya cambiado.

\ **Nota:** A menos que se especifique lo contrario, todos los métodos que tienen parámetros de ángulo deben tener ángulos especificados como *radianes*. Para convertir los grados a radianes, use :ref:`@GDScript.deg2rad<class_@GDScript_method_deg2rad>`.

Tutoriales
--------------------

- :doc:`Viewport and canvas transforms <../tutorials/2d/2d_transforms>`

- :doc:`Custom drawing in 2D <../tutorials/2d/custom_drawing_in_2d>`

- `Audio Spectrum Demo <https://godotengine.org/asset-library/asset/528>`__

Propiedades
----------------------

+---------------------------------+---------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`           | :ref:`light_mask<class_CanvasItem_property_light_mask>`                   | ``1``                   |
+---------------------------------+---------------------------------------------------------------------------+-------------------------+
| :ref:`Material<class_Material>` | :ref:`material<class_CanvasItem_property_material>`                       |                         |
+---------------------------------+---------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`       | :ref:`modulate<class_CanvasItem_property_modulate>`                       | ``Color( 1, 1, 1, 1 )`` |
+---------------------------------+---------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`       | :ref:`self_modulate<class_CanvasItem_property_self_modulate>`             | ``Color( 1, 1, 1, 1 )`` |
+---------------------------------+---------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`         | :ref:`show_behind_parent<class_CanvasItem_property_show_behind_parent>`   | ``false``               |
+---------------------------------+---------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`         | :ref:`show_on_top<class_CanvasItem_property_show_on_top>`                 |                         |
+---------------------------------+---------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`         | :ref:`use_parent_material<class_CanvasItem_property_use_parent_material>` | ``false``               |
+---------------------------------+---------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`         | :ref:`visible<class_CanvasItem_property_visible>`                         | ``true``                |
+---------------------------------+---------------------------------------------------------------------------+-------------------------+

Métodos
--------------

+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`_draw<class_CanvasItem_method__draw>` **(** **)** |virtual|                                                                                                                                                                                                                                                                                                                                |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_arc<class_CanvasItem_method_draw_arc>` **(** :ref:`Vector2<class_Vector2>` center, :ref:`float<class_float>` radius, :ref:`float<class_float>` start_angle, :ref:`float<class_float>` end_angle, :ref:`int<class_int>` point_count, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**                             |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`draw_char<class_CanvasItem_method_draw_char>` **(** :ref:`Font<class_Font>` font, :ref:`Vector2<class_Vector2>` position, :ref:`String<class_String>` char, :ref:`String<class_String>` next, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ) **)**                                                                                                                                 |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_circle<class_CanvasItem_method_draw_circle>` **(** :ref:`Vector2<class_Vector2>` position, :ref:`float<class_float>` radius, :ref:`Color<class_Color>` color **)**                                                                                                                                                                                                                    |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_colored_polygon<class_CanvasItem_method_draw_colored_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`Color<class_Color>` color, :ref:`PoolVector2Array<class_PoolVector2Array>` uvs=PoolVector2Array(  ), :ref:`Texture<class_Texture>` texture=null, :ref:`Texture<class_Texture>` normal_map=null, :ref:`bool<class_bool>` antialiased=false **)**    |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_line<class_CanvasItem_method_draw_line>` **(** :ref:`Vector2<class_Vector2>` from, :ref:`Vector2<class_Vector2>` to, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**                                                                                                                                            |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_mesh<class_CanvasItem_method_draw_mesh>` **(** :ref:`Mesh<class_Mesh>` mesh, :ref:`Texture<class_Texture>` texture, :ref:`Texture<class_Texture>` normal_map=null, :ref:`Transform2D<class_Transform2D>` transform=Transform2D( 1, 0, 0, 1, 0, 0 ), :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ) **)**                                                                      |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_multiline<class_CanvasItem_method_draw_multiline>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**                                                                                                                                                |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_multiline_colors<class_CanvasItem_method_draw_multiline_colors>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`PoolColorArray<class_PoolColorArray>` colors, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**                                                                                                               |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_multimesh<class_CanvasItem_method_draw_multimesh>` **(** :ref:`MultiMesh<class_MultiMesh>` multimesh, :ref:`Texture<class_Texture>` texture, :ref:`Texture<class_Texture>` normal_map=null **)**                                                                                                                                                                                      |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_polygon<class_CanvasItem_method_draw_polygon>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`PoolColorArray<class_PoolColorArray>` colors, :ref:`PoolVector2Array<class_PoolVector2Array>` uvs=PoolVector2Array(  ), :ref:`Texture<class_Texture>` texture=null, :ref:`Texture<class_Texture>` normal_map=null, :ref:`bool<class_bool>` antialiased=false **)** |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_polyline<class_CanvasItem_method_draw_polyline>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**                                                                                                                                                  |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_polyline_colors<class_CanvasItem_method_draw_polyline_colors>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`PoolColorArray<class_PoolColorArray>` colors, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**                                                                                                                 |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_primitive<class_CanvasItem_method_draw_primitive>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`PoolColorArray<class_PoolColorArray>` colors, :ref:`PoolVector2Array<class_PoolVector2Array>` uvs, :ref:`Texture<class_Texture>` texture=null, :ref:`float<class_float>` width=1.0, :ref:`Texture<class_Texture>` normal_map=null **)**                        |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_rect<class_CanvasItem_method_draw_rect>` **(** :ref:`Rect2<class_Rect2>` rect, :ref:`Color<class_Color>` color, :ref:`bool<class_bool>` filled=true, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**                                                                                                                                             |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_set_transform<class_CanvasItem_method_draw_set_transform>` **(** :ref:`Vector2<class_Vector2>` position, :ref:`float<class_float>` rotation, :ref:`Vector2<class_Vector2>` scale **)**                                                                                                                                                                                                |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_set_transform_matrix<class_CanvasItem_method_draw_set_transform_matrix>` **(** :ref:`Transform2D<class_Transform2D>` xform **)**                                                                                                                                                                                                                                                      |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_string<class_CanvasItem_method_draw_string>` **(** :ref:`Font<class_Font>` font, :ref:`Vector2<class_Vector2>` position, :ref:`String<class_String>` text, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`int<class_int>` clip_w=-1 **)**                                                                                                                              |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_style_box<class_CanvasItem_method_draw_style_box>` **(** :ref:`StyleBox<class_StyleBox>` style_box, :ref:`Rect2<class_Rect2>` rect **)**                                                                                                                                                                                                                                              |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_texture<class_CanvasItem_method_draw_texture>` **(** :ref:`Texture<class_Texture>` texture, :ref:`Vector2<class_Vector2>` position, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`Texture<class_Texture>` normal_map=null **)**                                                                                                                                       |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_texture_rect<class_CanvasItem_method_draw_texture_rect>` **(** :ref:`Texture<class_Texture>` texture, :ref:`Rect2<class_Rect2>` rect, :ref:`bool<class_bool>` tile, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null **)**                                                              |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`draw_texture_rect_region<class_CanvasItem_method_draw_texture_rect_region>` **(** :ref:`Texture<class_Texture>` texture, :ref:`Rect2<class_Rect2>` rect, :ref:`Rect2<class_Rect2>` src_rect, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null, :ref:`bool<class_bool>` clip_uv=true **)**    |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`force_update_transform<class_CanvasItem_method_force_update_transform>` **(** **)**                                                                                                                                                                                                                                                                                                        |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                 | :ref:`get_canvas<class_CanvasItem_method_get_canvas>` **(** **)** |const|                                                                                                                                                                                                                                                                                                                        |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                 | :ref:`get_canvas_item<class_CanvasItem_method_get_canvas_item>` **(** **)** |const|                                                                                                                                                                                                                                                                                                              |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`get_canvas_transform<class_CanvasItem_method_get_canvas_transform>` **(** **)** |const|                                                                                                                                                                                                                                                                                                    |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`get_global_mouse_position<class_CanvasItem_method_get_global_mouse_position>` **(** **)** |const|                                                                                                                                                                                                                                                                                          |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`get_global_transform<class_CanvasItem_method_get_global_transform>` **(** **)** |const|                                                                                                                                                                                                                                                                                                    |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`get_global_transform_with_canvas<class_CanvasItem_method_get_global_transform_with_canvas>` **(** **)** |const|                                                                                                                                                                                                                                                                            |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`get_local_mouse_position<class_CanvasItem_method_get_local_mouse_position>` **(** **)** |const|                                                                                                                                                                                                                                                                                            |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`get_transform<class_CanvasItem_method_get_transform>` **(** **)** |const|                                                                                                                                                                                                                                                                                                                  |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`             | :ref:`get_viewport_rect<class_CanvasItem_method_get_viewport_rect>` **(** **)** |const|                                                                                                                                                                                                                                                                                                          |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`get_viewport_transform<class_CanvasItem_method_get_viewport_transform>` **(** **)** |const|                                                                                                                                                                                                                                                                                                |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`World2D<class_World2D>`         | :ref:`get_world_2d<class_CanvasItem_method_get_world_2d>` **(** **)** |const|                                                                                                                                                                                                                                                                                                                    |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`hide<class_CanvasItem_method_hide>` **(** **)**                                                                                                                                                                                                                                                                                                                                            |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_local_transform_notification_enabled<class_CanvasItem_method_is_local_transform_notification_enabled>` **(** **)** |const|                                                                                                                                                                                                                                                              |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_set_as_toplevel<class_CanvasItem_method_is_set_as_toplevel>` **(** **)** |const|                                                                                                                                                                                                                                                                                                        |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_transform_notification_enabled<class_CanvasItem_method_is_transform_notification_enabled>` **(** **)** |const|                                                                                                                                                                                                                                                                          |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_visible_in_tree<class_CanvasItem_method_is_visible_in_tree>` **(** **)** |const|                                                                                                                                                                                                                                                                                                        |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`make_canvas_position_local<class_CanvasItem_method_make_canvas_position_local>` **(** :ref:`Vector2<class_Vector2>` screen_point **)** |const|                                                                                                                                                                                                                                             |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`InputEvent<class_InputEvent>`   | :ref:`make_input_local<class_CanvasItem_method_make_input_local>` **(** :ref:`InputEvent<class_InputEvent>` event **)** |const|                                                                                                                                                                                                                                                                  |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_as_toplevel<class_CanvasItem_method_set_as_toplevel>` **(** :ref:`bool<class_bool>` enable **)**                                                                                                                                                                                                                                                                                       |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_notify_local_transform<class_CanvasItem_method_set_notify_local_transform>` **(** :ref:`bool<class_bool>` enable **)**                                                                                                                                                                                                                                                                 |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`set_notify_transform<class_CanvasItem_method_set_notify_transform>` **(** :ref:`bool<class_bool>` enable **)**                                                                                                                                                                                                                                                                             |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`show<class_CanvasItem_method_show>` **(** **)**                                                                                                                                                                                                                                                                                                                                            |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`update<class_CanvasItem_method_update>` **(** **)**                                                                                                                                                                                                                                                                                                                                        |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Señales
--------------

.. _class_CanvasItem_signal_draw:

- **draw** **(** **)**

Emitido cuando el ``CanvasItem`` debe ser dibujado de nuevo. Esto sólo puede ser conectado en tiempo real, ya que en diferido no se podrá dibujar.

----

.. _class_CanvasItem_signal_hide:

- **hide** **(** **)**

Emitido al ocultarse.

----

.. _class_CanvasItem_signal_item_rect_changed:

- **item_rect_changed** **(** **)**

Emitted when the item's :ref:`Rect2<class_Rect2>` boundaries (position or size) have changed, or when an action is taking place that may have impacted these boundaries (e.g. changing :ref:`Sprite.texture<class_Sprite_property_texture>`).

----

.. _class_CanvasItem_signal_visibility_changed:

- **visibility_changed** **(** **)**

Emitido cuando la visibilidad (oculta/visible) cambia.

Enumeraciones
--------------------------

.. _enum_CanvasItem_BlendMode:

.. _class_CanvasItem_constant_BLEND_MODE_MIX:

.. _class_CanvasItem_constant_BLEND_MODE_ADD:

.. _class_CanvasItem_constant_BLEND_MODE_SUB:

.. _class_CanvasItem_constant_BLEND_MODE_MUL:

.. _class_CanvasItem_constant_BLEND_MODE_PREMULT_ALPHA:

.. _class_CanvasItem_constant_BLEND_MODE_DISABLED:

enum **BlendMode**:

- **BLEND_MODE_MIX** = **0** --- Modo de mezcla. Se supone que los colores son independientes del valor alfa (opacidad).

- **BLEND_MODE_ADD** = **1** --- Modo de mezcla de añadidos.

- **BLEND_MODE_SUB** = **2** --- Modo de mezcla de substracción.

- **BLEND_MODE_MUL** = **3** --- Modo de mezcla multiplicativo.

- **BLEND_MODE_PREMULT_ALPHA** = **4** --- Modo de mezcla Mix. Se supone que los colores se premultiplican por el valor alfa (opacidad).

- **BLEND_MODE_DISABLED** = **5** --- Disables blending mode. Colors including alpha are written as-is. Only applicable for render targets with a transparent background. No lighting will be applied.

Constantes
--------------------

.. _class_CanvasItem_constant_NOTIFICATION_TRANSFORM_CHANGED:

.. _class_CanvasItem_constant_NOTIFICATION_DRAW:

.. _class_CanvasItem_constant_NOTIFICATION_VISIBILITY_CHANGED:

.. _class_CanvasItem_constant_NOTIFICATION_ENTER_CANVAS:

.. _class_CanvasItem_constant_NOTIFICATION_EXIT_CANVAS:

- **NOTIFICATION_TRANSFORM_CHANGED** = **2000** --- La transformada del ``CanvasItem`` ha cambiado. Esta notificación sólo se recibe si está habilitada por :ref:`set_notify_transform<class_CanvasItem_method_set_notify_transform>` o :ref:`set_notify_local_transform<class_CanvasItem_method_set_notify_local_transform>`.

- **NOTIFICATION_DRAW** = **30** --- Se solicita al ``CanvasItem`` que dibuje.

- **NOTIFICATION_VISIBILITY_CHANGED** = **31** --- La visibilidad del ``CanvasItem`` ha cambiado.

- **NOTIFICATION_ENTER_CANVAS** = **32** --- El ``CanvasItem`` ha entrado en el canvas.

- **NOTIFICATION_EXIT_CANVAS** = **33** --- El ``CanvasItem`` ha salido del canvas.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_CanvasItem_property_light_mask:

- :ref:`int<class_int>` **light_mask**

+-----------+-----------------------+
| *Default* | ``1``                 |
+-----------+-----------------------+
| *Setter*  | set_light_mask(value) |
+-----------+-----------------------+
| *Getter*  | get_light_mask()      |
+-----------+-----------------------+

Las capas de renderización en las que este ``CanvasItem`` responde a los nodos :ref:`Light2D<class_Light2D>`.

----

.. _class_CanvasItem_property_material:

- :ref:`Material<class_Material>` **material**

+----------+---------------------+
| *Setter* | set_material(value) |
+----------+---------------------+
| *Getter* | get_material()      |
+----------+---------------------+

El material aplicado a las texturas en este ``CanvasItem``.

----

.. _class_CanvasItem_property_modulate:

- :ref:`Color<class_Color>` **modulate**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_modulate(value)     |
+-----------+-------------------------+
| *Getter*  | get_modulate()          |
+-----------+-------------------------+

El color aplicado a las texturas en este ``CanvasItem``.

----

.. _class_CanvasItem_property_self_modulate:

- :ref:`Color<class_Color>` **self_modulate**

+-----------+--------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )``  |
+-----------+--------------------------+
| *Setter*  | set_self_modulate(value) |
+-----------+--------------------------+
| *Getter*  | get_self_modulate()      |
+-----------+--------------------------+

El color aplicado a las texturas en este ``CanvasItem``. Esto no es heredado por los hijos de ``CanvasItem``.

----

.. _class_CanvasItem_property_show_behind_parent:

- :ref:`bool<class_bool>` **show_behind_parent**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_draw_behind_parent(value)   |
+-----------+---------------------------------+
| *Getter*  | is_draw_behind_parent_enabled() |
+-----------+---------------------------------+

Si ``true``, el objeto se dibuja detrás de su padre.

----

.. _class_CanvasItem_property_show_on_top:

- :ref:`bool<class_bool>` **show_on_top**

Si ``true``, el objeto se dibuja encima de su padre.

----

.. _class_CanvasItem_property_use_parent_material:

- :ref:`bool<class_bool>` **use_parent_material**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_use_parent_material(value) |
+-----------+--------------------------------+
| *Getter*  | get_use_parent_material()      |
+-----------+--------------------------------+

Si ``true``, la propiedad del :ref:`material<class_CanvasItem_property_material>` de ``CanvasItem`` se utiliza como el material para este elemento.

----

.. _class_CanvasItem_property_visible:

- :ref:`bool<class_bool>` **visible**

+-----------+--------------------+
| *Default* | ``true``           |
+-----------+--------------------+
| *Setter*  | set_visible(value) |
+-----------+--------------------+
| *Getter*  | is_visible()       |
+-----------+--------------------+

Si ``true``, se dibuja este ``CanvasItem``. El nodo sólo es visible si todos sus antecedentes también lo son (en otras palabras, :ref:`is_visible_in_tree<class_CanvasItem_method_is_visible_in_tree>` debe devolver ``true``).

\ **Nota:** Para los controles que heredan :ref:`Popup<class_Popup>`, la forma correcta de hacerlos visibles es llamar a una de las múltiples funciones ``popup*()`` en su lugar.

Descripciones de Métodos
------------------------------------------------

.. _class_CanvasItem_method__draw:

- void **_draw** **(** **)** |virtual|

Función sobreescribible llamada por el motor (si está definida) para dibujar el objeto canvas.

----

.. _class_CanvasItem_method_draw_arc:

- void **draw_arc** **(** :ref:`Vector2<class_Vector2>` center, :ref:`float<class_float>` radius, :ref:`float<class_float>` start_angle, :ref:`float<class_float>` end_angle, :ref:`int<class_int>` point_count, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**

Dibuja un arco entre los ángulos dados. Cuanto mayor sea el valor de ``point_count``, más suave será la curva.

----

.. _class_CanvasItem_method_draw_char:

- :ref:`float<class_float>` **draw_char** **(** :ref:`Font<class_Font>` font, :ref:`Vector2<class_Vector2>` position, :ref:`String<class_String>` char, :ref:`String<class_String>` next, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ) **)**

Dibuja un carácter de cadena usando una fuente personalizada. Devuelve el avance, dependiendo del ancho del carácter y del kerning con un opcional siguiente carácter.

----

.. _class_CanvasItem_method_draw_circle:

- void **draw_circle** **(** :ref:`Vector2<class_Vector2>` position, :ref:`float<class_float>` radius, :ref:`Color<class_Color>` color **)**

Dibuja un círculo de color.

----

.. _class_CanvasItem_method_draw_colored_polygon:

- void **draw_colored_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`Color<class_Color>` color, :ref:`PoolVector2Array<class_PoolVector2Array>` uvs=PoolVector2Array(  ), :ref:`Texture<class_Texture>` texture=null, :ref:`Texture<class_Texture>` normal_map=null, :ref:`bool<class_bool>` antialiased=false **)**

Dibuja un polígono coloreado de cualquier cantidad de puntos, convexo o cóncavo.

----

.. _class_CanvasItem_method_draw_line:

- void **draw_line** **(** :ref:`Vector2<class_Vector2>` from, :ref:`Vector2<class_Vector2>` to, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**

Draws a line from a 2D point to another, with a given color and width. It can be optionally antialiased.

----

.. _class_CanvasItem_method_draw_mesh:

- void **draw_mesh** **(** :ref:`Mesh<class_Mesh>` mesh, :ref:`Texture<class_Texture>` texture, :ref:`Texture<class_Texture>` normal_map=null, :ref:`Transform2D<class_Transform2D>` transform=Transform2D( 1, 0, 0, 1, 0, 0 ), :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ) **)**

Dibuja una :ref:`Mesh<class_Mesh>` en 2D, usando la textura proporcionada. Ver :ref:`MeshInstance2D<class_MeshInstance2D>` para la documentación relacionada.

----

.. _class_CanvasItem_method_draw_multiline:

- void **draw_multiline** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**

Draws multiple, parallel lines with a uniform ``color``.

\ **Note:** ``width`` and ``antialiased`` are currently not implemented and have no effect.

----

.. _class_CanvasItem_method_draw_multiline_colors:

- void **draw_multiline_colors** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`PoolColorArray<class_PoolColorArray>` colors, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**

Draws multiple, parallel lines with a uniform ``width`` and segment-by-segment coloring. Colors assigned to line segments match by index between ``points`` and ``colors``.

\ **Note:** ``width`` and ``antialiased`` are currently not implemented and have no effect.

----

.. _class_CanvasItem_method_draw_multimesh:

- void **draw_multimesh** **(** :ref:`MultiMesh<class_MultiMesh>` multimesh, :ref:`Texture<class_Texture>` texture, :ref:`Texture<class_Texture>` normal_map=null **)**

Dibuja una :ref:`MultiMesh<class_MultiMesh>` en 2D con la textura proporcionada. Ver :ref:`MultiMeshInstance2D<class_MultiMeshInstance2D>` para la documentación relacionada.

----

.. _class_CanvasItem_method_draw_polygon:

- void **draw_polygon** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`PoolColorArray<class_PoolColorArray>` colors, :ref:`PoolVector2Array<class_PoolVector2Array>` uvs=PoolVector2Array(  ), :ref:`Texture<class_Texture>` texture=null, :ref:`Texture<class_Texture>` normal_map=null, :ref:`bool<class_bool>` antialiased=false **)**

Dibuja un polígono de cualquier cantidad de puntos, convexo o cóncavo.

----

.. _class_CanvasItem_method_draw_polyline:

- void **draw_polyline** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`Color<class_Color>` color, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**

Draws interconnected line segments with a uniform ``color`` and ``width`` and optional antialiasing.

----

.. _class_CanvasItem_method_draw_polyline_colors:

- void **draw_polyline_colors** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`PoolColorArray<class_PoolColorArray>` colors, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**

Draws interconnected line segments with a uniform ``width``, segment-by-segment coloring, and optional antialiasing. Colors assigned to line segments match by index between ``points`` and ``colors``.

----

.. _class_CanvasItem_method_draw_primitive:

- void **draw_primitive** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` points, :ref:`PoolColorArray<class_PoolColorArray>` colors, :ref:`PoolVector2Array<class_PoolVector2Array>` uvs, :ref:`Texture<class_Texture>` texture=null, :ref:`float<class_float>` width=1.0, :ref:`Texture<class_Texture>` normal_map=null **)**

Draws a custom primitive. 1 point for a point, 2 points for a line, 3 points for a triangle and 4 points for a quad.

----

.. _class_CanvasItem_method_draw_rect:

- void **draw_rect** **(** :ref:`Rect2<class_Rect2>` rect, :ref:`Color<class_Color>` color, :ref:`bool<class_bool>` filled=true, :ref:`float<class_float>` width=1.0, :ref:`bool<class_bool>` antialiased=false **)**

Draws a rectangle. If ``filled`` is ``true``, the rectangle will be filled with the ``color`` specified. If ``filled`` is ``false``, the rectangle will be drawn as a stroke with the ``color`` and ``width`` specified. If ``antialiased`` is ``true``, the lines will be antialiased.

\ **Note:** ``width`` and ``antialiased`` are only effective if ``filled`` is ``false``.

----

.. _class_CanvasItem_method_draw_set_transform:

- void **draw_set_transform** **(** :ref:`Vector2<class_Vector2>` position, :ref:`float<class_float>` rotation, :ref:`Vector2<class_Vector2>` scale **)**

Establece una transformación personalizada para el dibujo a través de los componentes. Todo lo que se dibuje después será transformado por esto.

----

.. _class_CanvasItem_method_draw_set_transform_matrix:

- void **draw_set_transform_matrix** **(** :ref:`Transform2D<class_Transform2D>` xform **)**

Establece una transformación personalizada para dibujar a través de la matriz. Todo lo que se dibuje después será transformado por esto.

----

.. _class_CanvasItem_method_draw_string:

- void **draw_string** **(** :ref:`Font<class_Font>` font, :ref:`Vector2<class_Vector2>` position, :ref:`String<class_String>` text, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`int<class_int>` clip_w=-1 **)**

Draws ``text`` using the specified ``font`` at the ``position`` (bottom-left corner using the baseline of the font). The text will have its color multiplied by ``modulate``. If ``clip_w`` is greater than or equal to 0, the text will be clipped if it exceeds the specified width.

\ **Example using the default project font:**\ 

::

    # If using this method in a script that redraws constantly, move the
    # `default_font` declaration to a member variable assigned in `_ready()`
    # so the Control is only created once.
    var default_font = Control.new().get_font("font")
    draw_string(default_font, Vector2(64, 64), "Hello world")

See also :ref:`Font.draw<class_Font_method_draw>`.

----

.. _class_CanvasItem_method_draw_style_box:

- void **draw_style_box** **(** :ref:`StyleBox<class_StyleBox>` style_box, :ref:`Rect2<class_Rect2>` rect **)**

Dibuja un rectángulo con estilo.

----

.. _class_CanvasItem_method_draw_texture:

- void **draw_texture** **(** :ref:`Texture<class_Texture>` texture, :ref:`Vector2<class_Vector2>` position, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`Texture<class_Texture>` normal_map=null **)**

Dibuja una textura en una posición determinada.

----

.. _class_CanvasItem_method_draw_texture_rect:

- void **draw_texture_rect** **(** :ref:`Texture<class_Texture>` texture, :ref:`Rect2<class_Rect2>` rect, :ref:`bool<class_bool>` tile, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null **)**

Dibuja un rectángulo con textura en una posición determinada, opcionalmente modulada por un color. Si ``transpose`` es ``true``, la textura tendrá sus coordenadas X e Y intercambiadas.

----

.. _class_CanvasItem_method_draw_texture_rect_region:

- void **draw_texture_rect_region** **(** :ref:`Texture<class_Texture>` texture, :ref:`Rect2<class_Rect2>` rect, :ref:`Rect2<class_Rect2>` src_rect, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null, :ref:`bool<class_bool>` clip_uv=true **)**

Dibuja una región de rectángulo con textura en una posición determinada, opcionalmente modulada por un color. Si ``transpose`` es ``true``, la textura tendrá sus coordenadas X e Y intercambiadas.

----

.. _class_CanvasItem_method_force_update_transform:

- void **force_update_transform** **(** **)**

Obliga a la transformación a actualizarse. Los cambios en la física de las transformaciones no son instantáneos por razones de rendimiento. Las transformaciones se acumulan y luego se fijan. Usa esto si necesitas una transformación actualizada cuando hagas operaciones de física.

----

.. _class_CanvasItem_method_get_canvas:

- :ref:`RID<class_RID>` **get_canvas** **(** **)** |const|

Devuelve el :ref:`RID<class_RID>` del canvas :ref:`World2D<class_World2D>` donde el objeto esta contenido.

----

.. _class_CanvasItem_method_get_canvas_item:

- :ref:`RID<class_RID>` **get_canvas_item** **(** **)** |const|

Returns the canvas item RID used by :ref:`VisualServer<class_VisualServer>` for this item.

----

.. _class_CanvasItem_method_get_canvas_transform:

- :ref:`Transform2D<class_Transform2D>` **get_canvas_transform** **(** **)** |const|

Devuelve la matriz de transformación de este objeto canvas.

----

.. _class_CanvasItem_method_get_global_mouse_position:

- :ref:`Vector2<class_Vector2>` **get_global_mouse_position** **(** **)** |const|

Devuelve la posición global del ratón.

----

.. _class_CanvasItem_method_get_global_transform:

- :ref:`Transform2D<class_Transform2D>` **get_global_transform** **(** **)** |const|

Devuelve la matriz de transformación global de este objeto.

----

.. _class_CanvasItem_method_get_global_transform_with_canvas:

- :ref:`Transform2D<class_Transform2D>` **get_global_transform_with_canvas** **(** **)** |const|

Devuelve la matriz de transformación global de este objeto en relación con el canvas.

----

.. _class_CanvasItem_method_get_local_mouse_position:

- :ref:`Vector2<class_Vector2>` **get_local_mouse_position** **(** **)** |const|

Devuelve la posición del ratón relativa a la posición de este objeto.

----

.. _class_CanvasItem_method_get_transform:

- :ref:`Transform2D<class_Transform2D>` **get_transform** **(** **)** |const|

Devuelve la matriz de transformación de este objecto.

----

.. _class_CanvasItem_method_get_viewport_rect:

- :ref:`Rect2<class_Rect2>` **get_viewport_rect** **(** **)** |const|

Devuelve los límites del viewport como un :ref:`Rect2<class_Rect2>`.Devuelve los límites del viewport como un :ref:`Rect2<class_Rect2>`.

----

.. _class_CanvasItem_method_get_viewport_transform:

- :ref:`Transform2D<class_Transform2D>` **get_viewport_transform** **(** **)** |const|

Devuelve la transformación de este objeto en relación con el viewport.

----

.. _class_CanvasItem_method_get_world_2d:

- :ref:`World2D<class_World2D>` **get_world_2d** **(** **)** |const|

Devuelve el :ref:`World2D<class_World2D>` donde está este objeto.

----

.. _class_CanvasItem_method_hide:

- void **hide** **(** **)**

Ocultar el ``CanvasItem`` si es visible actualmente.

----

.. _class_CanvasItem_method_is_local_transform_notification_enabled:

- :ref:`bool<class_bool>` **is_local_transform_notification_enabled** **(** **)** |const|

Devuelve ``true`` si se comunican notificaciones de transformación local a los hijos.

----

.. _class_CanvasItem_method_is_set_as_toplevel:

- :ref:`bool<class_bool>` **is_set_as_toplevel** **(** **)** |const|

Devuelve ``true`` si el nodo está configurado como de nivel superior. Ver :ref:`set_as_toplevel<class_CanvasItem_method_set_as_toplevel>`.

----

.. _class_CanvasItem_method_is_transform_notification_enabled:

- :ref:`bool<class_bool>` **is_transform_notification_enabled** **(** **)** |const|

Devuelve ``true`` si las notificaciones de transformación global se comunican a los hijos.

----

.. _class_CanvasItem_method_is_visible_in_tree:

- :ref:`bool<class_bool>` **is_visible_in_tree** **(** **)** |const|

Devuelve ``true`` si el nodo está presente en el :ref:`SceneTree<class_SceneTree>`, su propiedad :ref:`visible<class_CanvasItem_property_visible>` es ``true`` y todos sus antecedentes también son visibles. Si algún antecedente está oculto, este nodo no será visible en el árbol de la escena.

----

.. _class_CanvasItem_method_make_canvas_position_local:

- :ref:`Vector2<class_Vector2>` **make_canvas_position_local** **(** :ref:`Vector2<class_Vector2>` screen_point **)** |const|

Asigna ``screen_point`` como la nueva transformación local de este nodo.

----

.. _class_CanvasItem_method_make_input_local:

- :ref:`InputEvent<class_InputEvent>` **make_input_local** **(** :ref:`InputEvent<class_InputEvent>` event **)** |const|

Las transformaciones emitidas por los ``event``\ s de entrada se aplican en el espacio local en lugar del espacio global.

----

.. _class_CanvasItem_method_set_as_toplevel:

- void **set_as_toplevel** **(** :ref:`bool<class_bool>` enable **)**

Si ``enable`` es ``true``, el nodo no heredará su transformación de los objetos del canvas padre.

----

.. _class_CanvasItem_method_set_notify_local_transform:

- void **set_notify_local_transform** **(** :ref:`bool<class_bool>` enable **)**

Si ``enable`` es ``true``, los hijos serán actualizados con datos de transformación local.

----

.. _class_CanvasItem_method_set_notify_transform:

- void **set_notify_transform** **(** :ref:`bool<class_bool>` enable **)**

Si ``enable`` es ``true``, los hijos serán actualizados con los datos de transformación global.

----

.. _class_CanvasItem_method_show:

- void **show** **(** **)**

Muestra el ``CanvasItem`` si está actualmente oculto. Para los controles que heredan :ref:`Popup<class_Popup>`, la forma correcta de hacerlos visibles es llamar a una de las múltiples funciones ``popup*()`` en su lugar.

----

.. _class_CanvasItem_method_update:

- void **update** **(** **)**

Pone en la cola el ``CanvasItem`` para la actualización. La :ref:`NOTIFICATION_DRAW<class_CanvasItem_constant_NOTIFICATION_DRAW>` será llamada en tiempo de inactividad para solicitar el redibujado.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
