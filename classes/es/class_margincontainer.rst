:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the MarginContainer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_MarginContainer:

MarginContainer
===============

**Inherits:** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Un simple contenedor de margen.

Descripción
----------------------

Adds a top, left, bottom, and right margin to all :ref:`Control<class_Control>` nodes that are direct children of the container. To control the ``MarginContainer``'s margin, use the ``margin_*`` theme properties listed below.

\ **Note:** Be careful, :ref:`Control<class_Control>` margin values are different than the constant margin values. If you want to change the custom margin values of the ``MarginContainer`` by code, you should use the following examples:

::

    # This code sample assumes the current script is extending MarginContainer.
    var margin_value = 100
    add_constant_override("margin_top", margin_value)
    add_constant_override("margin_left", margin_value)
    add_constant_override("margin_bottom", margin_value)
    add_constant_override("margin_right", margin_value)

Propiedades del Theme
------------------------------------------

+-----------------------+--------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`margin_bottom<class_MarginContainer_theme_constant_margin_bottom>` | ``0`` |
+-----------------------+--------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`margin_left<class_MarginContainer_theme_constant_margin_left>`     | ``0`` |
+-----------------------+--------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`margin_right<class_MarginContainer_theme_constant_margin_right>`   | ``0`` |
+-----------------------+--------------------------------------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`margin_top<class_MarginContainer_theme_constant_margin_top>`       | ``0`` |
+-----------------------+--------------------------------------------------------------------------+-------+

Theme Property Descriptions
---------------------------

.. _class_MarginContainer_theme_constant_margin_bottom:

- :ref:`int<class_int>` **margin_bottom**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

Todos los hijos directos de ``MarginContainer`` tendrán un margen inferior de ``margin_bottom`` píxeles.

----

.. _class_MarginContainer_theme_constant_margin_left:

- :ref:`int<class_int>` **margin_left**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

Todos los hijos directos de ``MarginContainer`` tendrán un margen izquierdo de ``margin_left`` píxeles.

----

.. _class_MarginContainer_theme_constant_margin_right:

- :ref:`int<class_int>` **margin_right**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

Todos los hijos directos de ``MarginContainer`` tendrán un margen derecho de ``margin_right`` píxeles.

----

.. _class_MarginContainer_theme_constant_margin_top:

- :ref:`int<class_int>` **margin_top**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

Todos los hijos directos de ``MarginContainer`` tendrán un margen superior de ``margin_top`` píxeles.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
