:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Physics2DDirectBodyState.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Physics2DDirectBodyState:

Physics2DDirectBodyState
========================

**Inherits:** :ref:`Object<class_Object>`

Direct access object to a physics body in the :ref:`Physics2DServer<class_Physics2DServer>`.

Descripción
----------------------

Proporciona acceso directo a un cuerpo físico en el :ref:`Physics2DServer<class_Physics2DServer>`, permitiendo cambios seguros en las propiedades físicas. Este objeto pasa a través de la llamada de estado directo de los cuerpos rígidos/característicos, y está destinado a cambiar el estado directo de ese cuerpo. Ver :ref:`RigidBody2D._integrate_forces<class_RigidBody2D_method__integrate_forces>`.

Tutoriales
--------------------

- :doc:`Physics introduction <../tutorials/physics/physics_introduction>`

- :doc:`Ray-casting <../tutorials/physics/ray-casting>`

Propiedades
----------------------

+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`angular_velocity<class_Physics2DDirectBodyState_property_angular_velocity>`     |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`inverse_inertia<class_Physics2DDirectBodyState_property_inverse_inertia>`       |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`inverse_mass<class_Physics2DDirectBodyState_property_inverse_mass>`             |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`linear_velocity<class_Physics2DDirectBodyState_property_linear_velocity>`       |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`sleeping<class_Physics2DDirectBodyState_property_sleeping>`                     |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`step<class_Physics2DDirectBodyState_property_step>`                             |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`total_angular_damp<class_Physics2DDirectBodyState_property_total_angular_damp>` |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`total_gravity<class_Physics2DDirectBodyState_property_total_gravity>`           |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`total_linear_damp<class_Physics2DDirectBodyState_property_total_linear_damp>`   |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`transform<class_Physics2DDirectBodyState_property_transform>`                   |
+---------------------------------------+---------------------------------------------------------------------------------------+

Métodos
--------------

+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`add_central_force<class_Physics2DDirectBodyState_method_add_central_force>` **(** :ref:`Vector2<class_Vector2>` force **)**                                                       |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`add_force<class_Physics2DDirectBodyState_method_add_force>` **(** :ref:`Vector2<class_Vector2>` offset, :ref:`Vector2<class_Vector2>` force **)**                                 |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`add_torque<class_Physics2DDirectBodyState_method_add_torque>` **(** :ref:`float<class_float>` torque **)**                                                                        |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`apply_central_impulse<class_Physics2DDirectBodyState_method_apply_central_impulse>` **(** :ref:`Vector2<class_Vector2>` impulse **)**                                             |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`apply_impulse<class_Physics2DDirectBodyState_method_apply_impulse>` **(** :ref:`Vector2<class_Vector2>` offset, :ref:`Vector2<class_Vector2>` impulse **)**                       |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`apply_torque_impulse<class_Physics2DDirectBodyState_method_apply_torque_impulse>` **(** :ref:`float<class_float>` impulse **)**                                                   |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`get_contact_collider<class_Physics2DDirectBodyState_method_get_contact_collider>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                           |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`get_contact_collider_id<class_Physics2DDirectBodyState_method_get_contact_collider_id>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                     |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Object<class_Object>`                                       | :ref:`get_contact_collider_object<class_Physics2DDirectBodyState_method_get_contact_collider_object>` **(** :ref:`int<class_int>` contact_idx **)** |const|                             |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_contact_collider_position<class_Physics2DDirectBodyState_method_get_contact_collider_position>` **(** :ref:`int<class_int>` contact_idx **)** |const|                         |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`get_contact_collider_shape<class_Physics2DDirectBodyState_method_get_contact_collider_shape>` **(** :ref:`int<class_int>` contact_idx **)** |const|                               |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                                     | :ref:`get_contact_collider_shape_metadata<class_Physics2DDirectBodyState_method_get_contact_collider_shape_metadata>` **(** :ref:`int<class_int>` contact_idx **)** |const|             |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_contact_collider_velocity_at_position<class_Physics2DDirectBodyState_method_get_contact_collider_velocity_at_position>` **(** :ref:`int<class_int>` contact_idx **)** |const| |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`get_contact_count<class_Physics2DDirectBodyState_method_get_contact_count>` **(** **)** |const|                                                                                   |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_contact_local_normal<class_Physics2DDirectBodyState_method_get_contact_local_normal>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                   |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_contact_local_position<class_Physics2DDirectBodyState_method_get_contact_local_position>` **(** :ref:`int<class_int>` contact_idx **)** |const|                               |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`get_contact_local_shape<class_Physics2DDirectBodyState_method_get_contact_local_shape>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                     |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Physics2DDirectSpaceState<class_Physics2DDirectSpaceState>` | :ref:`get_space_state<class_Physics2DDirectBodyState_method_get_space_state>` **(** **)**                                                                                               |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_velocity_at_local_position<class_Physics2DDirectBodyState_method_get_velocity_at_local_position>` **(** :ref:`Vector2<class_Vector2>` local_position **)** |const|            |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`integrate_forces<class_Physics2DDirectBodyState_method_integrate_forces>` **(** **)**                                                                                             |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_Physics2DDirectBodyState_property_angular_velocity:

- :ref:`float<class_float>` **angular_velocity**

+----------+-----------------------------+
| *Setter* | set_angular_velocity(value) |
+----------+-----------------------------+
| *Getter* | get_angular_velocity()      |
+----------+-----------------------------+

The body's rotational velocity in *radians* per second.

----

.. _class_Physics2DDirectBodyState_property_inverse_inertia:

- :ref:`float<class_float>` **inverse_inertia**

+----------+-----------------------+
| *Getter* | get_inverse_inertia() |
+----------+-----------------------+

El inverso de la inercia del cuerpo.

----

.. _class_Physics2DDirectBodyState_property_inverse_mass:

- :ref:`float<class_float>` **inverse_mass**

+----------+--------------------+
| *Getter* | get_inverse_mass() |
+----------+--------------------+

El inverso de la masa del cuerpo.

----

.. _class_Physics2DDirectBodyState_property_linear_velocity:

- :ref:`Vector2<class_Vector2>` **linear_velocity**

+----------+----------------------------+
| *Setter* | set_linear_velocity(value) |
+----------+----------------------------+
| *Getter* | get_linear_velocity()      |
+----------+----------------------------+

The body's linear velocity in pixels per second.

----

.. _class_Physics2DDirectBodyState_property_sleeping:

- :ref:`bool<class_bool>` **sleeping**

+----------+------------------------+
| *Setter* | set_sleep_state(value) |
+----------+------------------------+
| *Getter* | is_sleeping()          |
+----------+------------------------+

Si ``true``, este cuerpo está actualmente durmiendo (no está activo).

----

.. _class_Physics2DDirectBodyState_property_step:

- :ref:`float<class_float>` **step**

+----------+------------+
| *Getter* | get_step() |
+----------+------------+

El paso temporal (delta) utilizado para la simulación.

----

.. _class_Physics2DDirectBodyState_property_total_angular_damp:

- :ref:`float<class_float>` **total_angular_damp**

+----------+--------------------------+
| *Getter* | get_total_angular_damp() |
+----------+--------------------------+

La velocidad a la que el cuerpo deja de girar, si no hay otras fuerzas que lo muevan.

----

.. _class_Physics2DDirectBodyState_property_total_gravity:

- :ref:`Vector2<class_Vector2>` **total_gravity**

+----------+---------------------+
| *Getter* | get_total_gravity() |
+----------+---------------------+

El vector de gravedad total que se aplica actualmente a este cuerpo.

----

.. _class_Physics2DDirectBodyState_property_total_linear_damp:

- :ref:`float<class_float>` **total_linear_damp**

+----------+-------------------------+
| *Getter* | get_total_linear_damp() |
+----------+-------------------------+

La velocidad a la que el cuerpo deja de moverse, si no hay otras fuerzas que lo muevan.

----

.. _class_Physics2DDirectBodyState_property_transform:

- :ref:`Transform2D<class_Transform2D>` **transform**

+----------+----------------------+
| *Setter* | set_transform(value) |
+----------+----------------------+
| *Getter* | get_transform()      |
+----------+----------------------+

La matriz de transformación del cuerpo.

Descripciones de Métodos
------------------------------------------------

.. _class_Physics2DDirectBodyState_method_add_central_force:

- void **add_central_force** **(** :ref:`Vector2<class_Vector2>` force **)**

Añade una fuerza direccional constante sin afectar a la rotación.

----

.. _class_Physics2DDirectBodyState_method_add_force:

- void **add_force** **(** :ref:`Vector2<class_Vector2>` offset, :ref:`Vector2<class_Vector2>` force **)**

Añade una fuerza posicionada al cuerpo. Tanto la fuerza como el desplazamiento del origen del cuerpo están en coordenadas globales.

----

.. _class_Physics2DDirectBodyState_method_add_torque:

- void **add_torque** **(** :ref:`float<class_float>` torque **)**

Añade una fuerza de rotación constante.

----

.. _class_Physics2DDirectBodyState_method_apply_central_impulse:

- void **apply_central_impulse** **(** :ref:`Vector2<class_Vector2>` impulse **)**

Aplica un impulso direccional sin afectar a la rotación.

----

.. _class_Physics2DDirectBodyState_method_apply_impulse:

- void **apply_impulse** **(** :ref:`Vector2<class_Vector2>` offset, :ref:`Vector2<class_Vector2>` impulse **)**

Aplica un impulso posicionado al cuerpo. ¡Un impulso es independiente del tiempo! Aplicar un impulso en cada cuadro resultaría en una fuerza dependiente del cuadro. Por esta razón, sólo debe utilizarse cuando se simulan impactos únicos (de lo contrario, utilice las funciones "_force"). El desplazamiento utiliza la rotación del sistema de coordenadas globales, pero está centrado en el origen del objeto.

----

.. _class_Physics2DDirectBodyState_method_apply_torque_impulse:

- void **apply_torque_impulse** **(** :ref:`float<class_float>` impulse **)**

Aplica un impulso de rotación al cuerpo.

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider:

- :ref:`RID<class_RID>` **get_contact_collider** **(** :ref:`int<class_int>` contact_idx **)** |const|

Devuelve el :ref:`RID<class_RID>` del colisionador.

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_id:

- :ref:`int<class_int>` **get_contact_collider_id** **(** :ref:`int<class_int>` contact_idx **)** |const|

Devuelve la identificación del objeto del colisionador.

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_object:

- :ref:`Object<class_Object>` **get_contact_collider_object** **(** :ref:`int<class_int>` contact_idx **)** |const|

Devuelve el objeto del colisionador. Esto depende de cómo fue creado (devolverá un nodo de la escena si tal fue usado para crearlo).

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_position:

- :ref:`Vector2<class_Vector2>` **get_contact_collider_position** **(** :ref:`int<class_int>` contact_idx **)** |const|

Devuelve la posición de contacto en el colisionador.

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_shape:

- :ref:`int<class_int>` **get_contact_collider_shape** **(** :ref:`int<class_int>` contact_idx **)** |const|

Devuelve el índice de forma del colisionador.

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_shape_metadata:

- :ref:`Variant<class_Variant>` **get_contact_collider_shape_metadata** **(** :ref:`int<class_int>` contact_idx **)** |const|

Returns the collided shape's metadata. This metadata is different from :ref:`Object.get_meta<class_Object_method_get_meta>`, and is set with :ref:`Physics2DServer.shape_set_data<class_Physics2DServer_method_shape_set_data>`.

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_velocity_at_position:

- :ref:`Vector2<class_Vector2>` **get_contact_collider_velocity_at_position** **(** :ref:`int<class_int>` contact_idx **)** |const|

Devuelve el vector de velocidad lineal en el punto de contacto del colisionador.

----

.. _class_Physics2DDirectBodyState_method_get_contact_count:

- :ref:`int<class_int>` **get_contact_count** **(** **)** |const|

Devuelve el número de contactos que este cuerpo tiene con otros cuerpos.

\ **Nota:** Por defecto, esto devuelve 0 a menos que los cuerpos estén configurados para monitorear los contactos. Ver :ref:`RigidBody2D.contact_monitor<class_RigidBody2D_property_contact_monitor>`.

----

.. _class_Physics2DDirectBodyState_method_get_contact_local_normal:

- :ref:`Vector2<class_Vector2>` **get_contact_local_normal** **(** :ref:`int<class_int>` contact_idx **)** |const|

Devuelve la normalidad local en el punto de contacto.

----

.. _class_Physics2DDirectBodyState_method_get_contact_local_position:

- :ref:`Vector2<class_Vector2>` **get_contact_local_position** **(** :ref:`int<class_int>` contact_idx **)** |const|

Devuelve la posición local del punto de contacto.

----

.. _class_Physics2DDirectBodyState_method_get_contact_local_shape:

- :ref:`int<class_int>` **get_contact_local_shape** **(** :ref:`int<class_int>` contact_idx **)** |const|

Devuelve el índice de forma local de la colisión.

----

.. _class_Physics2DDirectBodyState_method_get_space_state:

- :ref:`Physics2DDirectSpaceState<class_Physics2DDirectSpaceState>` **get_space_state** **(** **)**

Devuelve el estado actual del espacio, útil para las consultas.

----

.. _class_Physics2DDirectBodyState_method_get_velocity_at_local_position:

- :ref:`Vector2<class_Vector2>` **get_velocity_at_local_position** **(** :ref:`Vector2<class_Vector2>` local_position **)** |const|

Returns the body's velocity at the given relative position, including both translation and rotation.

----

.. _class_Physics2DDirectBodyState_method_integrate_forces:

- void **integrate_forces** **(** **)**

Llama al código de integración de fuerzas incorporado.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
