:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the WeakRef.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_WeakRef:

WeakRef
=======

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Sostiene un :ref:`Object<class_Object>`, pero no contribuye al conteo de referencia si el objeto es una referencia.

Descripción
----------------------

Un weakref puede sostener una :ref:`Reference<class_Reference>`, sin contribuir al contador de referencia. Un weakref puede ser creado a partir de un :ref:`Object<class_Object>` usando :ref:`@GDScript.weakref<class_@GDScript_method_weakref>`. Si este objeto no es una referencia, weakref sigue funcionando, sin embargo, no tiene ningún efecto sobre el objeto. Los weakrefs son útiles en los casos en que múltiples clases tienen variables que se refieren unas a otras. Sin weakrefs, el uso de estas clases podría conducir a fugas de memoria, ya que ambas referencias impiden que se libere la otra. Haciendo parte de las variables un weakref puede prevenir esta dependencia cíclica, y permite que las referencias sean liberadas.

Métodos
--------------

+-------------------------------+------------------------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`get_ref<class_WeakRef_method_get_ref>` **(** **)** |const| |
+-------------------------------+------------------------------------------------------------------+

Descripciones de Métodos
------------------------------------------------

.. _class_WeakRef_method_get_ref:

- :ref:`Variant<class_Variant>` **get_ref** **(** **)** |const|

Devuelve el :ref:`Object<class_Object>` al que se refiere este weakref.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
