:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ResourcePreloader.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ResourcePreloader:

ResourcePreloader
=================

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Nodo Precargador de Recursos.

Descripción
----------------------

Este nodo se utiliza para precargar subrecursos dentro de una escena, de modo que cuando se carga la escena, todos los recursos están listos para ser utilizados y pueden ser recuperados del precargador.

GDScript tiene un método simplificado incorporado :ref:`@GDScript.preload<class_@GDScript_method_preload>` que puede ser usado en la mayoría de las situaciones, dejando el uso de ``ResourcePreloader`` para escenarios más avanzados.

Métodos
--------------

+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`add_resource<class_ResourcePreloader_method_add_resource>` **(** :ref:`String<class_String>` name, :ref:`Resource<class_Resource>` resource **)**  |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Resource<class_Resource>`               | :ref:`get_resource<class_ResourcePreloader_method_get_resource>` **(** :ref:`String<class_String>` name **)** |const|                                    |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_resource_list<class_ResourcePreloader_method_get_resource_list>` **(** **)** |const|                                                           |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_resource<class_ResourcePreloader_method_has_resource>` **(** :ref:`String<class_String>` name **)** |const|                                    |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`remove_resource<class_ResourcePreloader_method_remove_resource>` **(** :ref:`String<class_String>` name **)**                                      |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`rename_resource<class_ResourcePreloader_method_rename_resource>` **(** :ref:`String<class_String>` name, :ref:`String<class_String>` newname **)** |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Métodos
------------------------------------------------

.. _class_ResourcePreloader_method_add_resource:

- void **add_resource** **(** :ref:`String<class_String>` name, :ref:`Resource<class_Resource>` resource **)**

Añade un recurso al precargador con el ``name`` dado. Si un recurso con el ``name`` dado ya existe, el nuevo recurso será renombrado a "``name`` N" donde N es un número incremental que comienza en 2.

----

.. _class_ResourcePreloader_method_get_resource:

- :ref:`Resource<class_Resource>` **get_resource** **(** :ref:`String<class_String>` name **)** |const|

Devuelve el recurso asociado a ``name``.

----

.. _class_ResourcePreloader_method_get_resource_list:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_resource_list** **(** **)** |const|

Devuelve la lista de recursos dentro del precargador.

----

.. _class_ResourcePreloader_method_has_resource:

- :ref:`bool<class_bool>` **has_resource** **(** :ref:`String<class_String>` name **)** |const|

Devuelve ``true`` si el precargador contiene un recurso asociado a ``name``.

----

.. _class_ResourcePreloader_method_remove_resource:

- void **remove_resource** **(** :ref:`String<class_String>` name **)**

Elimina el recurso asociado a ``name`` del precargador.

----

.. _class_ResourcePreloader_method_rename_resource:

- void **rename_resource** **(** :ref:`String<class_String>` name, :ref:`String<class_String>` newname **)**

Renombra un recurso dentro del precargador de ``name`` a ``newname``.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
