:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Vector2.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Vector2:

Vector2
=======

Vector used for 2D math.

Descripción
----------------------

2-element structure that can be used to represent positions in 2D space or any other pair of numeric values.

\ **Note:** In a boolean context, a Vector2 will evaluate to ``false`` if it's equal to ``Vector2(0, 0)``. Otherwise, a Vector2 will always evaluate to ``true``.

Tutoriales
--------------------

- :doc:`Math tutorial index <../tutorials/math/index>`

- :doc:`Vector math <../tutorials/math/vector_math>`

- :doc:`Advanced vector math <../tutorials/math/vectors_advanced>`

- `3Blue1Brown Essence of Linear Algebra <https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab>`__

- `Matrix Transform Demo <https://godotengine.org/asset-library/asset/584>`__

- `All 2D Demos <https://github.com/godotengine/godot-demo-projects/tree/master/2d>`__

Propiedades
----------------------

+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`x<class_Vector2_property_x>` | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`y<class_Vector2_property_y>` | ``0.0`` |
+---------------------------+------------------------------------+---------+

Métodos
--------------

+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`Vector2<class_Vector2_method_Vector2>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)**                                                                                                         |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`abs<class_Vector2_method_abs>` **(** **)**                                                                                                                                                                          |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`angle<class_Vector2_method_angle>` **(** **)**                                                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`angle_to<class_Vector2_method_angle_to>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                                               |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`angle_to_point<class_Vector2_method_angle_to_point>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                                   |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`aspect<class_Vector2_method_aspect>` **(** **)**                                                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`bounce<class_Vector2_method_bounce>` **(** :ref:`Vector2<class_Vector2>` n **)**                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`ceil<class_Vector2_method_ceil>` **(** **)**                                                                                                                                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`clamped<class_Vector2_method_clamped>` **(** :ref:`float<class_float>` length **)**                                                                                                                                 |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`cross<class_Vector2_method_cross>` **(** :ref:`Vector2<class_Vector2>` with **)**                                                                                                                                   |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`cubic_interpolate<class_Vector2_method_cubic_interpolate>` **(** :ref:`Vector2<class_Vector2>` b, :ref:`Vector2<class_Vector2>` pre_a, :ref:`Vector2<class_Vector2>` post_b, :ref:`float<class_float>` weight **)** |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`direction_to<class_Vector2_method_direction_to>` **(** :ref:`Vector2<class_Vector2>` b **)**                                                                                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`distance_squared_to<class_Vector2_method_distance_squared_to>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                         |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`distance_to<class_Vector2_method_distance_to>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                                         |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`dot<class_Vector2_method_dot>` **(** :ref:`Vector2<class_Vector2>` with **)**                                                                                                                                       |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`floor<class_Vector2_method_floor>` **(** **)**                                                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_equal_approx<class_Vector2_method_is_equal_approx>` **(** :ref:`Vector2<class_Vector2>` v **)**                                                                                                                  |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_normalized<class_Vector2_method_is_normalized>` **(** **)**                                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`length<class_Vector2_method_length>` **(** **)**                                                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`length_squared<class_Vector2_method_length_squared>` **(** **)**                                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`limit_length<class_Vector2_method_limit_length>` **(** :ref:`float<class_float>` length=1.0 **)**                                                                                                                   |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`linear_interpolate<class_Vector2_method_linear_interpolate>` **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)**                                                                         |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`move_toward<class_Vector2_method_move_toward>` **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` delta **)**                                                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`normalized<class_Vector2_method_normalized>` **(** **)**                                                                                                                                                            |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`posmod<class_Vector2_method_posmod>` **(** :ref:`float<class_float>` mod **)**                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`posmodv<class_Vector2_method_posmodv>` **(** :ref:`Vector2<class_Vector2>` modv **)**                                                                                                                               |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`project<class_Vector2_method_project>` **(** :ref:`Vector2<class_Vector2>` b **)**                                                                                                                                  |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`reflect<class_Vector2_method_reflect>` **(** :ref:`Vector2<class_Vector2>` n **)**                                                                                                                                  |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`rotated<class_Vector2_method_rotated>` **(** :ref:`float<class_float>` phi **)**                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`round<class_Vector2_method_round>` **(** **)**                                                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`sign<class_Vector2_method_sign>` **(** **)**                                                                                                                                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`slerp<class_Vector2_method_slerp>` **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)**                                                                                                   |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`slide<class_Vector2_method_slide>` **(** :ref:`Vector2<class_Vector2>` n **)**                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`snapped<class_Vector2_method_snapped>` **(** :ref:`Vector2<class_Vector2>` by **)**                                                                                                                                 |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`tangent<class_Vector2_method_tangent>` **(** **)**                                                                                                                                                                  |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Constantes
--------------------

.. _class_Vector2_constant_AXIS_X:

.. _class_Vector2_constant_AXIS_Y:

.. _class_Vector2_constant_ZERO:

.. _class_Vector2_constant_ONE:

.. _class_Vector2_constant_INF:

.. _class_Vector2_constant_LEFT:

.. _class_Vector2_constant_RIGHT:

.. _class_Vector2_constant_UP:

.. _class_Vector2_constant_DOWN:

- **AXIS_X** = **0** --- Valor enumerado para el eje X.

- **AXIS_Y** = **1** --- Valor enumerado para el eje Y.

- **ZERO** = **Vector2( 0, 0 )** --- Vector cero, un vector con todos los componentes ajustados a ``0``.

- **ONE** = **Vector2( 1, 1 )** --- Un vector, un vector con todos los componentes ajustados a ``1``.

- **INF** = **Vector2( inf, inf )** --- Vector infinito, un vector con todos los componentes ajustados a :ref:`@GDScript.INF<class_@GDScript_constant_INF>`.

- **LEFT** = **Vector2( -1, 0 )** --- Vector de la unidad izquierda. Representa la dirección de la izquierda.

- **RIGHT** = **Vector2( 1, 0 )** --- Vector de la unidad derecha. Representa la dirección de la derecha.

- **UP** = **Vector2( 0, -1 )** --- Vector de la unidad superior. Y está abajo en 2D, por lo que este vector apunta -Y.

- **DOWN** = **Vector2( 0, 1 )** --- Vector de la unidad de descenso. Y está abajo en 2D, así que este vector apunta a +Y.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_Vector2_property_x:

- :ref:`float<class_float>` **x**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

El componente X del vector. También se puede acceder utilizando la posición del índice ``[0]``.

----

.. _class_Vector2_property_y:

- :ref:`float<class_float>` **y**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

El componente Y del vector. También se puede acceder usando la posición del índice ``[1]``.

Descripciones de Métodos
------------------------------------------------

.. _class_Vector2_method_Vector2:

- :ref:`Vector2<class_Vector2>` **Vector2** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)**

Constructs a new Vector2 from the given ``x`` and ``y``.

----

.. _class_Vector2_method_abs:

- :ref:`Vector2<class_Vector2>` **abs** **(** **)**

Devuelve un nuevo vector con todos los componentes en valores absolutos (es decir, positivos).

----

.. _class_Vector2_method_angle:

- :ref:`float<class_float>` **angle** **(** **)**

Returns this vector's angle with respect to the positive X axis, or ``(1, 0)`` vector, in radians.

For example, ``Vector2.RIGHT.angle()`` will return zero, ``Vector2.DOWN.angle()`` will return ``PI / 2`` (a quarter turn, or 90 degrees), and ``Vector2(1, -1).angle()`` will return ``-PI / 4`` (a negative eighth turn, or -45 degrees).

\ `Illustration of the returned angle. <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle.png>`__\ 

Equivalent to the result of :ref:`@GDScript.atan2<class_@GDScript_method_atan2>` when called with the vector's :ref:`y<class_Vector2_property_y>` and :ref:`x<class_Vector2_property_x>` as parameters: ``atan2(y, x)``.

----

.. _class_Vector2_method_angle_to:

- :ref:`float<class_float>` **angle_to** **(** :ref:`Vector2<class_Vector2>` to **)**

Returns the angle to the given vector, in radians.

\ `Illustration of the returned angle. <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle_to.png>`__

----

.. _class_Vector2_method_angle_to_point:

- :ref:`float<class_float>` **angle_to_point** **(** :ref:`Vector2<class_Vector2>` to **)**

Returns the angle between the line connecting the two points and the X axis, in radians.

\ `Illustration of the returned angle. <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle_to_point.png>`__

----

.. _class_Vector2_method_aspect:

- :ref:`float<class_float>` **aspect** **(** **)**

Devuelve la relación de aspecto de este vector, la relación de :ref:`x<class_Vector2_property_x>` a :ref:`y<class_Vector2_property_y>`.

----

.. _class_Vector2_method_bounce:

- :ref:`Vector2<class_Vector2>` **bounce** **(** :ref:`Vector2<class_Vector2>` n **)**

Devuelve el vector "rebotado" de un plano definido por la normalidad dada.

----

.. _class_Vector2_method_ceil:

- :ref:`Vector2<class_Vector2>` **ceil** **(** **)**

Devuelve el vector con todos los componentes redondeados hacia arriba (hacia el infinito positivo).

----

.. _class_Vector2_method_clamped:

- :ref:`Vector2<class_Vector2>` **clamped** **(** :ref:`float<class_float>` length **)**

Deprecated, please use :ref:`limit_length<class_Vector2_method_limit_length>` instead.

Returns the vector with a maximum length by limiting its length to ``length``.

----

.. _class_Vector2_method_cross:

- :ref:`float<class_float>` **cross** **(** :ref:`Vector2<class_Vector2>` with **)**

Devuelve el producto cruzado de este vector y ``with``.

----

.. _class_Vector2_method_cubic_interpolate:

- :ref:`Vector2<class_Vector2>` **cubic_interpolate** **(** :ref:`Vector2<class_Vector2>` b, :ref:`Vector2<class_Vector2>` pre_a, :ref:`Vector2<class_Vector2>` post_b, :ref:`float<class_float>` weight **)**

Cubically interpolates between this vector and ``b`` using ``pre_a`` and ``post_b`` as handles, and returns the result at position ``weight``. ``weight`` is on the range of 0.0 to 1.0, representing the amount of interpolation.

----

.. _class_Vector2_method_direction_to:

- :ref:`Vector2<class_Vector2>` **direction_to** **(** :ref:`Vector2<class_Vector2>` b **)**

Returns the normalized vector pointing from this vector to ``b``. This is equivalent to using ``(b - a).normalized()``.

----

.. _class_Vector2_method_distance_squared_to:

- :ref:`float<class_float>` **distance_squared_to** **(** :ref:`Vector2<class_Vector2>` to **)**

Devuelve la distancia cuadrada entre este vector y ``b``.

Este método funciona más rápido que el :ref:`distance_to<class_Vector2_method_distance_to>`, por lo que es preferible si necesitas comparar vectores o necesitas la distancia al cuadrado para alguna fórmula.

----

.. _class_Vector2_method_distance_to:

- :ref:`float<class_float>` **distance_to** **(** :ref:`Vector2<class_Vector2>` to **)**

Devuelve la distancia entre este vector y ``to``.

----

.. _class_Vector2_method_dot:

- :ref:`float<class_float>` **dot** **(** :ref:`Vector2<class_Vector2>` with **)**

Devuelve el producto escalar de este vector y ``with``. Esto puede ser usado para comparar el ángulo entre dos vectores. Por ejemplo, esto puede ser usado para determinar si un enemigo está de cara al jugador.

El producto escalar será ``0`` para un ángulo recto (90 grados), mayor que 0 para ángulos más estrechos que 90 grados y menor que 0 para ángulos más anchos que 90 grados.

Cuando se utilizan vectores unitarios (normalizados), el resultado siempre estará entre ``-1.0`` (ángulo de 180 grados) cuando los vectores estén orientados en direcciones opuestas, y ``1.0`` (ángulo de 0 grados) cuando los vectores estén alineados.

\ **Nota: ** ``a.dot(b)`` es equivalente a ``b.dot(a)``.

----

.. _class_Vector2_method_floor:

- :ref:`Vector2<class_Vector2>` **floor** **(** **)**

Devuelve el vector con todos los componentes redondeados hacia abajo (hacia el infinito negativo).

----

.. _class_Vector2_method_is_equal_approx:

- :ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Vector2<class_Vector2>` v **)**

Devuelve ``true`` si este vector y ``v`` son aproximadamente iguales, ejecutando :ref:`@GDScript.is_equal_approx<class_@GDScript_method_is_equal_approx>` en cada componente.

----

.. _class_Vector2_method_is_normalized:

- :ref:`bool<class_bool>` **is_normalized** **(** **)**

Returns ``true`` if the vector is normalized, ``false`` otherwise.

----

.. _class_Vector2_method_length:

- :ref:`float<class_float>` **length** **(** **)**

Devuelve la longitud (magnitud) de este vector.

----

.. _class_Vector2_method_length_squared:

- :ref:`float<class_float>` **length_squared** **(** **)**

Devuelve la longitud cuadrada (magnitud cuadrada) de este vector.

Este método funciona más rápido que el :ref:`length<class_Vector2_method_length>`, por lo que es preferible si necesitas comparar vectores o necesitas la distancia al cuadrado para alguna fórmula.

----

.. _class_Vector2_method_limit_length:

- :ref:`Vector2<class_Vector2>` **limit_length** **(** :ref:`float<class_float>` length=1.0 **)**

Devuelve el vector con una longitud máxima limitando su longitud a ``length``.

----

.. _class_Vector2_method_linear_interpolate:

- :ref:`Vector2<class_Vector2>` **linear_interpolate** **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)**

Returns the result of the linear interpolation between this vector and ``to`` by amount ``weight``. ``weight`` is on the range of 0.0 to 1.0, representing the amount of interpolation.

----

.. _class_Vector2_method_move_toward:

- :ref:`Vector2<class_Vector2>` **move_toward** **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` delta **)**

Mueve el vector hacia ``a`` por la cantidad fija de ``delta``.

----

.. _class_Vector2_method_normalized:

- :ref:`Vector2<class_Vector2>` **normalized** **(** **)**

Devuelve el vector escalado a la longitud de la unidad. Equivalente a ``v / v.length()``.

----

.. _class_Vector2_method_posmod:

- :ref:`Vector2<class_Vector2>` **posmod** **(** :ref:`float<class_float>` mod **)**

Devuelve un vector compuesto por el :ref:`@GDScript.fposmod<class_@GDScript_method_fposmod>` de los componentes de este vector y el ``mod``.

----

.. _class_Vector2_method_posmodv:

- :ref:`Vector2<class_Vector2>` **posmodv** **(** :ref:`Vector2<class_Vector2>` modv **)**

Devuelve un vector compuesto por el :ref:`@GDScript.fposmod<class_@GDScript_method_fposmod>` de los componentes de este vector y los componentes del ``modv``.

----

.. _class_Vector2_method_project:

- :ref:`Vector2<class_Vector2>` **project** **(** :ref:`Vector2<class_Vector2>` b **)**

Devuelve el vector proyectado sobre el vector ``b``.

----

.. _class_Vector2_method_reflect:

- :ref:`Vector2<class_Vector2>` **reflect** **(** :ref:`Vector2<class_Vector2>` n **)**

Devuelve el vector reflejado desde un plano definido por la normal dada.

----

.. _class_Vector2_method_rotated:

- :ref:`Vector2<class_Vector2>` **rotated** **(** :ref:`float<class_float>` phi **)**

Devuelve el vector rotado por ``phi`` radianes. Ver también :ref:`@GDScript.deg2rad<class_@GDScript_method_deg2rad>`.

----

.. _class_Vector2_method_round:

- :ref:`Vector2<class_Vector2>` **round** **(** **)**

Devuelve el vector con todos los componentes redondeados al entero más cercano, con los casos intermedios redondeados desde cero.

----

.. _class_Vector2_method_sign:

- :ref:`Vector2<class_Vector2>` **sign** **(** **)**

Returns the vector with each component set to one or negative one, depending on the signs of the components. If a component is zero, it returns positive one.

----

.. _class_Vector2_method_slerp:

- :ref:`Vector2<class_Vector2>` **slerp** **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)**

Returns the result of spherical linear interpolation between this vector and ``to``, by amount ``weight``. ``weight`` is on the range of 0.0 to 1.0, representing the amount of interpolation.

\ **Note:** Both vectors must be normalized.

----

.. _class_Vector2_method_slide:

- :ref:`Vector2<class_Vector2>` **slide** **(** :ref:`Vector2<class_Vector2>` n **)**

Devuelve este vector deslizado a lo largo de un plano definido por la normalidad dada.

----

.. _class_Vector2_method_snapped:

- :ref:`Vector2<class_Vector2>` **snapped** **(** :ref:`Vector2<class_Vector2>` by **)**

Devuelve este vector con cada componente ajustado al múltiplo más cercano de ``step``. Esto también puede ser usado para redondear a un número arbitrario de decimales.

----

.. _class_Vector2_method_tangent:

- :ref:`Vector2<class_Vector2>` **tangent** **(** **)**

Devuelve un vector perpendicular girado 90 grados en sentido contrario a las agujas del reloj en comparación con el original, con la misma longitud.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
