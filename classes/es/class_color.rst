:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Color.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Color:

Color
=====

Color en formato RGBA usando reales en el rango de 0 a 1.

Descripción
----------------------

A color represented by red, green, blue, and alpha (RGBA) components. The alpha component is often used for transparency. Values are in floating-point and usually range from 0 to 1. Some properties (such as CanvasItem.modulate) may accept values greater than 1 (overbright or HDR colors).

You can also create a color from standardized color names by using :ref:`@GDScript.ColorN<class_@GDScript_method_ColorN>` or directly using the color constants defined here. The standardized color set is based on the `X11 color names <https://en.wikipedia.org/wiki/X11_color_names>`__.

If you want to supply values in a range of 0 to 255, you should use :ref:`@GDScript.Color8<class_@GDScript_method_Color8>`.

\ **Note:** In a boolean context, a Color will evaluate to ``false`` if it's equal to ``Color(0, 0, 0, 1)`` (opaque black). Otherwise, a Color will always evaluate to ``true``.

\ `Color constants cheatsheet <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/color_constants.png>`__

Tutoriales
--------------------

- `2D GD Paint Demo <https://godotengine.org/asset-library/asset/517>`__

- `Tween Demo <https://godotengine.org/asset-library/asset/146>`__

- `GUI Drag And Drop Demo <https://godotengine.org/asset-library/asset/133>`__

Propiedades
----------------------

+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`a<class_Color_property_a>`   | ``1.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`int<class_int>`     | :ref:`a8<class_Color_property_a8>` | ``255`` |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`b<class_Color_property_b>`   | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`int<class_int>`     | :ref:`b8<class_Color_property_b8>` | ``0``   |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`g<class_Color_property_g>`   | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`int<class_int>`     | :ref:`g8<class_Color_property_g8>` | ``0``   |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`h<class_Color_property_h>`   | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`r<class_Color_property_r>`   | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`int<class_int>`     | :ref:`r8<class_Color_property_r8>` | ``0``   |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`s<class_Color_property_s>`   | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`v<class_Color_property_v>`   | ``0.0`` |
+---------------------------+------------------------------------+---------+

Métodos
--------------

+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`Color<class_Color_method_Color>` **(** :ref:`String<class_String>` from **)**                                                                                             |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`Color<class_Color_method_Color>` **(** :ref:`int<class_int>` from **)**                                                                                                   |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`Color<class_Color_method_Color>` **(** :ref:`float<class_float>` r, :ref:`float<class_float>` g, :ref:`float<class_float>` b **)**                                        |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`Color<class_Color_method_Color>` **(** :ref:`float<class_float>` r, :ref:`float<class_float>` g, :ref:`float<class_float>` b, :ref:`float<class_float>` a **)**           |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`blend<class_Color_method_blend>` **(** :ref:`Color<class_Color>` over **)**                                                                                               |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`contrasted<class_Color_method_contrasted>` **(** **)**                                                                                                                    |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`darkened<class_Color_method_darkened>` **(** :ref:`float<class_float>` amount **)**                                                                                       |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`from_hsv<class_Color_method_from_hsv>` **(** :ref:`float<class_float>` h, :ref:`float<class_float>` s, :ref:`float<class_float>` v, :ref:`float<class_float>` a=1.0 **)** |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`   | :ref:`get_luminance<class_Color_method_get_luminance>` **(** **)**                                                                                                              |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`   | :ref:`gray<class_Color_method_gray>` **(** **)**                                                                                                                                |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`inverted<class_Color_method_inverted>` **(** **)**                                                                                                                        |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`     | :ref:`is_equal_approx<class_Color_method_is_equal_approx>` **(** :ref:`Color<class_Color>` color **)**                                                                          |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`lightened<class_Color_method_lightened>` **(** :ref:`float<class_float>` amount **)**                                                                                     |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`   | :ref:`linear_interpolate<class_Color_method_linear_interpolate>` **(** :ref:`Color<class_Color>` to, :ref:`float<class_float>` weight **)**                                     |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`to_abgr32<class_Color_method_to_abgr32>` **(** **)**                                                                                                                      |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`to_abgr64<class_Color_method_to_abgr64>` **(** **)**                                                                                                                      |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`to_argb32<class_Color_method_to_argb32>` **(** **)**                                                                                                                      |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`to_argb64<class_Color_method_to_argb64>` **(** **)**                                                                                                                      |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>` | :ref:`to_html<class_Color_method_to_html>` **(** :ref:`bool<class_bool>` with_alpha=true **)**                                                                                  |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`to_rgba32<class_Color_method_to_rgba32>` **(** **)**                                                                                                                      |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`       | :ref:`to_rgba64<class_Color_method_to_rgba64>` **(** **)**                                                                                                                      |
+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Constantes
--------------------

.. _class_Color_constant_aliceblue:

.. _class_Color_constant_antiquewhite:

.. _class_Color_constant_aqua:

.. _class_Color_constant_aquamarine:

.. _class_Color_constant_azure:

.. _class_Color_constant_beige:

.. _class_Color_constant_bisque:

.. _class_Color_constant_black:

.. _class_Color_constant_blanchedalmond:

.. _class_Color_constant_blue:

.. _class_Color_constant_blueviolet:

.. _class_Color_constant_brown:

.. _class_Color_constant_burlywood:

.. _class_Color_constant_cadetblue:

.. _class_Color_constant_chartreuse:

.. _class_Color_constant_chocolate:

.. _class_Color_constant_coral:

.. _class_Color_constant_cornflower:

.. _class_Color_constant_cornsilk:

.. _class_Color_constant_crimson:

.. _class_Color_constant_cyan:

.. _class_Color_constant_darkblue:

.. _class_Color_constant_darkcyan:

.. _class_Color_constant_darkgoldenrod:

.. _class_Color_constant_darkgray:

.. _class_Color_constant_darkgreen:

.. _class_Color_constant_darkkhaki:

.. _class_Color_constant_darkmagenta:

.. _class_Color_constant_darkolivegreen:

.. _class_Color_constant_darkorange:

.. _class_Color_constant_darkorchid:

.. _class_Color_constant_darkred:

.. _class_Color_constant_darksalmon:

.. _class_Color_constant_darkseagreen:

.. _class_Color_constant_darkslateblue:

.. _class_Color_constant_darkslategray:

.. _class_Color_constant_darkturquoise:

.. _class_Color_constant_darkviolet:

.. _class_Color_constant_deeppink:

.. _class_Color_constant_deepskyblue:

.. _class_Color_constant_dimgray:

.. _class_Color_constant_dodgerblue:

.. _class_Color_constant_firebrick:

.. _class_Color_constant_floralwhite:

.. _class_Color_constant_forestgreen:

.. _class_Color_constant_fuchsia:

.. _class_Color_constant_gainsboro:

.. _class_Color_constant_ghostwhite:

.. _class_Color_constant_gold:

.. _class_Color_constant_goldenrod:

.. _class_Color_constant_gray:

.. _class_Color_constant_green:

.. _class_Color_constant_greenyellow:

.. _class_Color_constant_honeydew:

.. _class_Color_constant_hotpink:

.. _class_Color_constant_indianred:

.. _class_Color_constant_indigo:

.. _class_Color_constant_ivory:

.. _class_Color_constant_khaki:

.. _class_Color_constant_lavender:

.. _class_Color_constant_lavenderblush:

.. _class_Color_constant_lawngreen:

.. _class_Color_constant_lemonchiffon:

.. _class_Color_constant_lightblue:

.. _class_Color_constant_lightcoral:

.. _class_Color_constant_lightcyan:

.. _class_Color_constant_lightgoldenrod:

.. _class_Color_constant_lightgray:

.. _class_Color_constant_lightgreen:

.. _class_Color_constant_lightpink:

.. _class_Color_constant_lightsalmon:

.. _class_Color_constant_lightseagreen:

.. _class_Color_constant_lightskyblue:

.. _class_Color_constant_lightslategray:

.. _class_Color_constant_lightsteelblue:

.. _class_Color_constant_lightyellow:

.. _class_Color_constant_lime:

.. _class_Color_constant_limegreen:

.. _class_Color_constant_linen:

.. _class_Color_constant_magenta:

.. _class_Color_constant_maroon:

.. _class_Color_constant_mediumaquamarine:

.. _class_Color_constant_mediumblue:

.. _class_Color_constant_mediumorchid:

.. _class_Color_constant_mediumpurple:

.. _class_Color_constant_mediumseagreen:

.. _class_Color_constant_mediumslateblue:

.. _class_Color_constant_mediumspringgreen:

.. _class_Color_constant_mediumturquoise:

.. _class_Color_constant_mediumvioletred:

.. _class_Color_constant_midnightblue:

.. _class_Color_constant_mintcream:

.. _class_Color_constant_mistyrose:

.. _class_Color_constant_moccasin:

.. _class_Color_constant_navajowhite:

.. _class_Color_constant_navyblue:

.. _class_Color_constant_oldlace:

.. _class_Color_constant_olive:

.. _class_Color_constant_olivedrab:

.. _class_Color_constant_orange:

.. _class_Color_constant_orangered:

.. _class_Color_constant_orchid:

.. _class_Color_constant_palegoldenrod:

.. _class_Color_constant_palegreen:

.. _class_Color_constant_paleturquoise:

.. _class_Color_constant_palevioletred:

.. _class_Color_constant_papayawhip:

.. _class_Color_constant_peachpuff:

.. _class_Color_constant_peru:

.. _class_Color_constant_pink:

.. _class_Color_constant_plum:

.. _class_Color_constant_powderblue:

.. _class_Color_constant_purple:

.. _class_Color_constant_rebeccapurple:

.. _class_Color_constant_red:

.. _class_Color_constant_rosybrown:

.. _class_Color_constant_royalblue:

.. _class_Color_constant_saddlebrown:

.. _class_Color_constant_salmon:

.. _class_Color_constant_sandybrown:

.. _class_Color_constant_seagreen:

.. _class_Color_constant_seashell:

.. _class_Color_constant_sienna:

.. _class_Color_constant_silver:

.. _class_Color_constant_skyblue:

.. _class_Color_constant_slateblue:

.. _class_Color_constant_slategray:

.. _class_Color_constant_snow:

.. _class_Color_constant_springgreen:

.. _class_Color_constant_steelblue:

.. _class_Color_constant_tan:

.. _class_Color_constant_teal:

.. _class_Color_constant_thistle:

.. _class_Color_constant_tomato:

.. _class_Color_constant_transparent:

.. _class_Color_constant_turquoise:

.. _class_Color_constant_violet:

.. _class_Color_constant_webgray:

.. _class_Color_constant_webgreen:

.. _class_Color_constant_webmaroon:

.. _class_Color_constant_webpurple:

.. _class_Color_constant_wheat:

.. _class_Color_constant_white:

.. _class_Color_constant_whitesmoke:

.. _class_Color_constant_yellow:

.. _class_Color_constant_yellowgreen:

- **aliceblue** = **Color( 0.94, 0.97, 1, 1 )** --- El color azul Alicia.

- **antiquewhite** = **Color( 0.98, 0.92, 0.84, 1 )** --- Color blanco antiguo.

- **aqua** = **Color( 0, 1, 1, 1 )** --- Color agua.

- **aquamarine** = **Color( 0.5, 1, 0.83, 1 )** --- Color aguamarina.

- **azure** = **Color( 0.94, 1, 1, 1 )** --- Color Azure.

- **beige** = **Color( 0.96, 0.96, 0.86, 1 )** --- Color beige.

- **bisque** = **Color( 1, 0.89, 0.77, 1 )** --- Color bizcocho.

- **black** = **Color( 0, 0, 0, 1 )** --- Color negro.

- **blanchedalmond** = **Color( 1, 0.92, 0.8, 1 )** --- Color almendra blanca.

- **blue** = **Color( 0, 0, 1, 1 )** --- Color azul.

- **blueviolet** = **Color( 0.54, 0.17, 0.89, 1 )** --- Color azul violáceo.

- **brown** = **Color( 0.65, 0.16, 0.16, 1 )** --- Color marrón.

- **burlywood** = **Color( 0.87, 0.72, 0.53, 1 )** --- El color de la madera fuerte.

- **cadetblue** = **Color( 0.37, 0.62, 0.63, 1 )** --- Color azul cadete.

- **chartreuse** = **Color( 0.5, 1, 0, 1 )** --- Color cartujo.

- **chocolate** = **Color( 0.82, 0.41, 0.12, 1 )** --- Color chocolate.

- **coral** = **Color( 1, 0.5, 0.31, 1 )** --- Color coral.

- **cornflower** = **Color( 0.39, 0.58, 0.93, 1 )** --- Color aciano.

- **cornsilk** = **Color( 1, 0.97, 0.86, 1 )** --- Color de seda de maíz.

- **crimson** = **Color( 0.86, 0.08, 0.24, 1 )** --- Color carmesí.

- **cyan** = **Color( 0, 1, 1, 1 )** --- Color cian.

- **darkblue** = **Color( 0, 0, 0.55, 1 )** --- Color azul oscuro.

- **darkcyan** = **Color( 0, 0.55, 0.55, 1 )** --- Color cian oscuro.

- **darkgoldenrod** = **Color( 0.72, 0.53, 0.04, 1 )** --- Color de vara dorada oscura.

- **darkgray** = **Color( 0.66, 0.66, 0.66, 1 )** --- Color gris oscuro.

- **darkgreen** = **Color( 0, 0.39, 0, 1 )** --- Color verde oscuro.

- **darkkhaki** = **Color( 0.74, 0.72, 0.42, 1 )** --- Color caqui oscuro.

- **darkmagenta** = **Color( 0.55, 0, 0.55, 1 )** --- Color magenta oscuro.

- **darkolivegreen** = **Color( 0.33, 0.42, 0.18, 1 )** --- Color verde oliva oscuro.

- **darkorange** = **Color( 1, 0.55, 0, 1 )** --- Color naranja oscuro.

- **darkorchid** = **Color( 0.6, 0.2, 0.8, 1 )** --- Color de orquídea oscura.

- **darkred** = **Color( 0.55, 0, 0, 1 )** --- Color rojo oscuro.

- **darksalmon** = **Color( 0.91, 0.59, 0.48, 1 )** --- Color salmón oscuro.

- **darkseagreen** = **Color( 0.56, 0.74, 0.56, 1 )** --- Color verde mar oscuro.

- **darkslateblue** = **Color( 0.28, 0.24, 0.55, 1 )** --- Color azul pizarra oscuro.

- **darkslategray** = **Color( 0.18, 0.31, 0.31, 1 )** --- Color gris pizarra oscuro.

- **darkturquoise** = **Color( 0, 0.81, 0.82, 1 )** --- Color turquesa oscuro.

- **darkviolet** = **Color( 0.58, 0, 0.83, 1 )** --- Color violeta oscuro.

- **deeppink** = **Color( 1, 0.08, 0.58, 1 )** --- Color rosa intenso.

- **deepskyblue** = **Color( 0, 0.75, 1, 1 )** --- Color azul cielo profundo.

- **dimgray** = **Color( 0.41, 0.41, 0.41, 1 )** --- Color gris oscuro.

- **dodgerblue** = **Color( 0.12, 0.56, 1, 1 )** --- Color azul de los Dodgers.

- **firebrick** = **Color( 0.7, 0.13, 0.13, 1 )** --- Color de ladrillo de fuego.

- **floralwhite** = **Color( 1, 0.98, 0.94, 1 )** --- Color blanco floral.

- **forestgreen** = **Color( 0.13, 0.55, 0.13, 1 )** --- Color verde del bosque.

- **fuchsia** = **Color( 1, 0, 1, 1 )** --- Color fucsia.

- **gainsboro** = **Color( 0.86, 0.86, 0.86, 1 )** --- Color Gainsboro.

- **ghostwhite** = **Color( 0.97, 0.97, 1, 1 )** --- Color blanco fantasma.

- **gold** = **Color( 1, 0.84, 0, 1 )** --- Color oro.

- **goldenrod** = **Color( 0.85, 0.65, 0.13, 1 )** --- Color de la vara de oro.

- **gray** = **Color( 0.75, 0.75, 0.75, 1 )** --- Color gris.

- **green** = **Color( 0, 1, 0, 1 )** --- Color verde.

- **greenyellow** = **Color( 0.68, 1, 0.18, 1 )** --- Color amarillo verde.

- **honeydew** = **Color( 0.94, 1, 0.94, 1 )** --- Color melón.

- **hotpink** = **Color( 1, 0.41, 0.71, 1 )** --- Color rosa vivo.

- **indianred** = **Color( 0.8, 0.36, 0.36, 1 )** --- Color rojo indio.

- **indigo** = **Color( 0.29, 0, 0.51, 1 )** --- Color índigo.

- **ivory** = **Color( 1, 1, 0.94, 1 )** --- Color marfil.

- **khaki** = **Color( 0.94, 0.9, 0.55, 1 )** --- Color caqui.

- **lavender** = **Color( 0.9, 0.9, 0.98, 1 )** --- Color lavanda.

- **lavenderblush** = **Color( 1, 0.94, 0.96, 1 )** --- Color de rubor lavanda.

- **lawngreen** = **Color( 0.49, 0.99, 0, 1 )** --- Color verde césped.

- **lemonchiffon** = **Color( 1, 0.98, 0.8, 1 )** --- Color chifón limón.

- **lightblue** = **Color( 0.68, 0.85, 0.9, 1 )** --- Color azul claro.

- **lightcoral** = **Color( 0.94, 0.5, 0.5, 1 )** --- Color coral claro.

- **lightcyan** = **Color( 0.88, 1, 1, 1 )** --- Color cian claro.

- **lightgoldenrod** = **Color( 0.98, 0.98, 0.82, 1 )** --- Color de vara de oro claro.

- **lightgray** = **Color( 0.83, 0.83, 0.83, 1 )** --- Color gris claro.

- **lightgreen** = **Color( 0.56, 0.93, 0.56, 1 )** --- Color verde claro.

- **lightpink** = **Color( 1, 0.71, 0.76, 1 )** --- Color rosa claro.

- **lightsalmon** = **Color( 1, 0.63, 0.48, 1 )** --- Color salmón claro.

- **lightseagreen** = **Color( 0.13, 0.7, 0.67, 1 )** --- Color verde mar claro.

- **lightskyblue** = **Color( 0.53, 0.81, 0.98, 1 )** --- Color azul celeste.

- **lightslategray** = **Color( 0.47, 0.53, 0.6, 1 )** --- Color gris pizarra claro.

- **lightsteelblue** = **Color( 0.69, 0.77, 0.87, 1 )** --- Color azul acero claro.

- **lightyellow** = **Color( 1, 1, 0.88, 1 )** --- Color amarillo claro.

- **lime** = **Color( 0, 1, 0, 1 )** --- Color lima.

- **limegreen** = **Color( 0.2, 0.8, 0.2, 1 )** --- Color verde lima.

- **linen** = **Color( 0.98, 0.94, 0.9, 1 )** --- Color lino.

- **magenta** = **Color( 1, 0, 1, 1 )** --- Color magenta.

- **maroon** = **Color( 0.69, 0.19, 0.38, 1 )** --- Color granate.

- **mediumaquamarine** = **Color( 0.4, 0.8, 0.67, 1 )** --- Color aguamarina medio.

- **mediumblue** = **Color( 0, 0, 0.8, 1 )** --- Color azul medio.

- **mediumorchid** = **Color( 0.73, 0.33, 0.83, 1 )** --- Color de orquídea medio.

- **mediumpurple** = **Color( 0.58, 0.44, 0.86, 1 )** --- Color púrpura medio.

- **mediumseagreen** = **Color( 0.24, 0.7, 0.44, 1 )** --- Color verde marino medio.

- **mediumslateblue** = **Color( 0.48, 0.41, 0.93, 1 )** --- Color azul pizarra medio.

- **mediumspringgreen** = **Color( 0, 0.98, 0.6, 1 )** --- Color verde primaveral medio.

- **mediumturquoise** = **Color( 0.28, 0.82, 0.8, 1 )** --- Color turquesa medio.

- **mediumvioletred** = **Color( 0.78, 0.08, 0.52, 1 )** --- Color rojo violáceo medio.

- **midnightblue** = **Color( 0.1, 0.1, 0.44, 1 )** --- Color azul medianoche.

- **mintcream** = **Color( 0.96, 1, 0.98, 1 )** --- Color crema de menta.

- **mistyrose** = **Color( 1, 0.89, 0.88, 1 )** --- Color rosa niebla.

- **moccasin** = **Color( 1, 0.89, 0.71, 1 )** --- Color mocasín.

- **navajowhite** = **Color( 1, 0.87, 0.68, 1 )** --- Color blanco navajo.

- **navyblue** = **Color( 0, 0, 0.5, 1 )** --- Color azul marino.

- **oldlace** = **Color( 0.99, 0.96, 0.9, 1 )** --- Color de encaje antiguo.

- **olive** = **Color( 0.5, 0.5, 0, 1 )** --- Color oliva.

- **olivedrab** = **Color( 0.42, 0.56, 0.14, 1 )** --- Color aceituna monótono.

- **orange** = **Color( 1, 0.65, 0, 1 )** --- Color naranja.

- **orangered** = **Color( 1, 0.27, 0, 1 )** --- Color rojo anaranjado.

- **orchid** = **Color( 0.85, 0.44, 0.84, 1 )** --- Color orquídea.

- **palegoldenrod** = **Color( 0.93, 0.91, 0.67, 1 )** --- Color de vara de oro pálido.

- **palegreen** = **Color( 0.6, 0.98, 0.6, 1 )** --- Color verde pálido.

- **paleturquoise** = **Color( 0.69, 0.93, 0.93, 1 )** --- Color turquesa pálido.

- **palevioletred** = **Color( 0.86, 0.44, 0.58, 1 )** --- Color rojo violeta pálido.

- **papayawhip** = **Color( 1, 0.94, 0.84, 1 )** --- Color del látigo de papaya.

- **peachpuff** = **Color( 1, 0.85, 0.73, 1 )** --- Color melocotón.

- **peru** = **Color( 0.8, 0.52, 0.25, 1 )** --- Color Perú.

- **pink** = **Color( 1, 0.75, 0.8, 1 )** --- Color rosa.

- **plum** = **Color( 0.87, 0.63, 0.87, 1 )** --- Color ciruela.

- **powderblue** = **Color( 0.69, 0.88, 0.9, 1 )** --- Color azul de polvo.

- **purple** = **Color( 0.63, 0.13, 0.94, 1 )** --- Color púrpura.

- **rebeccapurple** = **Color( 0.4, 0.2, 0.6, 1 )** --- Color púrpura de Rebecca.

- **red** = **Color( 1, 0, 0, 1 )** --- Color rojo.

- **rosybrown** = **Color( 0.74, 0.56, 0.56, 1 )** --- Color marrón rosado.

- **royalblue** = **Color( 0.25, 0.41, 0.88, 1 )** --- Color azul real.

- **saddlebrown** = **Color( 0.55, 0.27, 0.07, 1 )** --- Color marrón silla de montar.

- **salmon** = **Color( 0.98, 0.5, 0.45, 1 )** --- Color salmón.

- **sandybrown** = **Color( 0.96, 0.64, 0.38, 1 )** --- Color marrón arenoso.

- **seagreen** = **Color( 0.18, 0.55, 0.34, 1 )** --- Color verde mar.

- **seashell** = **Color( 1, 0.96, 0.93, 1 )** --- Color de la concha marina.

- **sienna** = **Color( 0.63, 0.32, 0.18, 1 )** --- Color siena.

- **silver** = **Color( 0.75, 0.75, 0.75, 1 )** --- Color plata.

- **skyblue** = **Color( 0.53, 0.81, 0.92, 1 )** --- Color azul cielo.

- **slateblue** = **Color( 0.42, 0.35, 0.8, 1 )** --- Color azul pizarra.

- **slategray** = **Color( 0.44, 0.5, 0.56, 1 )** --- Color gris pizarra.

- **snow** = **Color( 1, 0.98, 0.98, 1 )** --- Color nieve.

- **springgreen** = **Color( 0, 1, 0.5, 1 )** --- Color verde primaveral.

- **steelblue** = **Color( 0.27, 0.51, 0.71, 1 )** --- Color azul acero.

- **tan** = **Color( 0.82, 0.71, 0.55, 1 )** --- Color bronceado.

- **teal** = **Color( 0, 0.5, 0.5, 1 )** --- Color verde azulado.

- **thistle** = **Color( 0.85, 0.75, 0.85, 1 )** --- Color cardo.

- **tomato** = **Color( 1, 0.39, 0.28, 1 )** --- Color tomate.

- **transparent** = **Color( 1, 1, 1, 0 )** --- Color transparente (blanco sin alfa).

- **turquoise** = **Color( 0.25, 0.88, 0.82, 1 )** --- Color turquesa.

- **violet** = **Color( 0.93, 0.51, 0.93, 1 )** --- Color violeta.

- **webgray** = **Color( 0.5, 0.5, 0.5, 1 )** --- Color gris web.

- **webgreen** = **Color( 0, 0.5, 0, 1 )** --- Color verde web.

- **webmaroon** = **Color( 0.5, 0, 0, 1 )** --- Color granate web.

- **webpurple** = **Color( 0.5, 0, 0.5, 1 )** --- Color púrpura web.

- **wheat** = **Color( 0.96, 0.87, 0.7, 1 )** --- Color trigo.

- **white** = **Color( 1, 1, 1, 1 )** --- Color blanco.

- **whitesmoke** = **Color( 0.96, 0.96, 0.96, 1 )** --- Color humo blanco.

- **yellow** = **Color( 1, 1, 0, 1 )** --- Color amarillo.

- **yellowgreen** = **Color( 0.6, 0.8, 0.2, 1 )** --- Color verde amarillo.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_Color_property_a:

- :ref:`float<class_float>` **a**

+-----------+---------+
| *Default* | ``1.0`` |
+-----------+---------+

El componente alfa (transparencia) del color, típicamente en el rango de 0 a 1.

----

.. _class_Color_property_a8:

- :ref:`int<class_int>` **a8**

+-----------+---------+
| *Default* | ``255`` |
+-----------+---------+

Envoltura para :ref:`a<class_Color_property_a>` que utiliza el rango de 0 a 255 en lugar de 0 a 1.

----

.. _class_Color_property_b:

- :ref:`float<class_float>` **b**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

El componente azul del color, típicamente en el rango de 0 a 1.

----

.. _class_Color_property_b8:

- :ref:`int<class_int>` **b8**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

Envoltura para :ref:`b<class_Color_property_b>` que utiliza el rango de 0 a 255 en lugar de 0 a 1.

----

.. _class_Color_property_g:

- :ref:`float<class_float>` **g**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

El componente verde del color, típicamente en el rango de 0 a 1.

----

.. _class_Color_property_g8:

- :ref:`int<class_int>` **g8**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

Envoltura para :ref:`g<class_Color_property_g>` que utiliza el rango de 0 a 255 en lugar de 0 a 1.

----

.. _class_Color_property_h:

- :ref:`float<class_float>` **h**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

El tono del HSV de este color, en el rango de 0 a 1..

----

.. _class_Color_property_r:

- :ref:`float<class_float>` **r**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

El componente rojo del color, típicamente en el rango de 0 a 1.

----

.. _class_Color_property_r8:

- :ref:`int<class_int>` **r8**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

Envoltura para :ref:`r<class_Color_property_r>` que utiliza el rango de 0 a 255 en lugar de 0 a 1.

----

.. _class_Color_property_s:

- :ref:`float<class_float>` **s**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

La saturación del HSV de este color, en el rango de 0 a 1.

----

.. _class_Color_property_v:

- :ref:`float<class_float>` **v**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

El valor HSV (brillo) de este color, en el rango de 0 a 1.

Descripciones de Métodos
------------------------------------------------

.. _class_Color_method_Color:

- :ref:`Color<class_Color>` **Color** **(** :ref:`String<class_String>` from **)**

Construye un color a partir de una cadena de color hexadecimal HTML en formato ARGB o RGB. Véase también :ref:`@GDScript.ColorN<class_@GDScript_method_ColorN>`.

::

    # Cada uno de los siguientes crea el mismo color RGBA(178, 217, 10, 255).
    var c1 = Color("#ffb2d90a") # Formato ARGB con "#".
    var c2 = Color("ffb2d90a") # Formato ARGB.
    var c3 = Color("#b2d90a") # Formato RGB con "#".
    var c4 = Color("b2d90a") # Formato RGB.

----

- :ref:`Color<class_Color>` **Color** **(** :ref:`int<class_int>` from **)**

Constructs a color from a 32-bit integer in RGBA format (each byte represents a color channel).

::

    var c = Color(274) # Similar to Color(0.0, 0.0, 0.004, 0.07)

----

- :ref:`Color<class_Color>` **Color** **(** :ref:`float<class_float>` r, :ref:`float<class_float>` g, :ref:`float<class_float>` b **)**

Constructs a color from RGB values, typically between 0 and 1. Alpha will be 1.

::

    var color = Color(0.2, 1.0, 0.7) # Similar to Color8(51, 255, 178, 255)

----

- :ref:`Color<class_Color>` **Color** **(** :ref:`float<class_float>` r, :ref:`float<class_float>` g, :ref:`float<class_float>` b, :ref:`float<class_float>` a **)**

Constructs a color from RGBA values, typically between 0 and 1.

::

    var color = Color(0.2, 1.0, 0.7, 0.8) # Similar to Color8(51, 255, 178, 204)

----

.. _class_Color_method_blend:

- :ref:`Color<class_Color>` **blend** **(** :ref:`Color<class_Color>` over **)**

Devuelve un nuevo color resultante de mezclar este color con otro. Si el color es opaco, el resultado también es opaco. El segundo color puede tener un rango de valores alfa.

::

    var bg = Color(0.0, 1.0, 0.0, 0.5) # Verde con alfa a 50%
    var fg = Color(1.0, 0.0, 0.0, 0.5) # Rojo con alfa a 50%
    var blended_color = bg.blend(fg) # Marron con alfa a 75%

----

.. _class_Color_method_contrasted:

- :ref:`Color<class_Color>` **contrasted** **(** **)**

Devuelve el color más contrastado.

::

    var c = Color(0.3, 0.4, 0.9)
    var color_constrastado = c.contrasted() # Equivalente a RGBA(204, 229, 102, 255)

----

.. _class_Color_method_darkened:

- :ref:`Color<class_Color>` **darkened** **(** :ref:`float<class_float>` amount **)**

Devuelve un nuevo color resultante de oscurecer este color en el porcentaje especificado (proporción de 0 a 1).

::

    var verde = Color(0.0, 1.0, 0.0)
    var verdeoscuro = green.darkened(0.2) # 20% más oscuro que el verde

----

.. _class_Color_method_from_hsv:

- :ref:`Color<class_Color>` **from_hsv** **(** :ref:`float<class_float>` h, :ref:`float<class_float>` s, :ref:`float<class_float>` v, :ref:`float<class_float>` a=1.0 **)**

Construye un color a partir de un perfil de HSV. ``h``, ``s``, y ``v`` son valores entre 0 y 1.

::

    var c = Color.from_hsv(0.58, 0.5, 0.79, 0.8) # Equivalente a HSV(210, 50, 79, 0.8) or Color8(100, 151, 201, 0.8)

----

.. _class_Color_method_get_luminance:

- :ref:`float<class_float>` **get_luminance** **(** **)**

Returns the luminance of the color in the ``[0.0, 1.0]`` range.

This is useful when determining light or dark color. Colors with a luminance smaller than 0.5 can be generally considered dark.

----

.. _class_Color_method_gray:

- :ref:`float<class_float>` **gray** **(** **)**

Returns the color's grayscale representation.

The gray value is calculated as ``(r + g + b) / 3``.

::

    var c = Color(0.2, 0.45, 0.82)
    var gray = c.gray() # A value of 0.466667

----

.. _class_Color_method_inverted:

- :ref:`Color<class_Color>` **inverted** **(** **)**

Returns the inverted color ``(1 - r, 1 - g, 1 - b, a)``.

::

    var color = Color(0.3, 0.4, 0.9)
    var inverted_color = color.inverted() # Equivalent to Color(0.7, 0.6, 0.1)

----

.. _class_Color_method_is_equal_approx:

- :ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Color<class_Color>` color **)**

Devuelve ``true`` si este color y ``color`` son aproximadamente iguales, ejecutando :ref:`@GDScript.is_equal_approx<class_@GDScript_method_is_equal_approx>` en cada componente.

----

.. _class_Color_method_lightened:

- :ref:`Color<class_Color>` **lightened** **(** :ref:`float<class_float>` amount **)**

Devuelve un nuevo color resultante de hacer este color más claro en el porcentaje especificado (proporción de 0 a 1).

::

    var verde = Color(0.0, 1.0, 0.0)
    var verdeclaro = green.lightened(0.2) # 20% más claro que el verde regular

----

.. _class_Color_method_linear_interpolate:

- :ref:`Color<class_Color>` **linear_interpolate** **(** :ref:`Color<class_Color>` to, :ref:`float<class_float>` weight **)**

Returns the linear interpolation with another color. The interpolation factor ``weight`` is between 0 and 1.

::

    var c1 = Color(1.0, 0.0, 0.0)
    var c2 = Color(0.0, 1.0, 0.0)
    var li_c = c1.linear_interpolate(c2, 0.5) # Equivalent to Color(0.5, 0.5, 0.0)

----

.. _class_Color_method_to_abgr32:

- :ref:`int<class_int>` **to_abgr32** **(** **)**

Returns the color converted to a 32-bit integer in ABGR format (each byte represents a color channel). ABGR is the reversed version of the default format.

::

    var color = Color(1, 0.5, 0.2)
    print(color.to_abgr32()) # Prints 4281565439

----

.. _class_Color_method_to_abgr64:

- :ref:`int<class_int>` **to_abgr64** **(** **)**

Returns the color converted to a 64-bit integer in ABGR format (each word represents a color channel). ABGR is the reversed version of the default format.

::

    var color = Color(1, 0.5, 0.2)
    print(color.to_abgr64()) # Prints -225178692812801

----

.. _class_Color_method_to_argb32:

- :ref:`int<class_int>` **to_argb32** **(** **)**

Returns the color converted to a 32-bit integer in ARGB format (each byte represents a color channel). ARGB is more compatible with DirectX.

::

    var color = Color(1, 0.5, 0.2)
    print(color.to_argb32()) # Prints 4294934323

----

.. _class_Color_method_to_argb64:

- :ref:`int<class_int>` **to_argb64** **(** **)**

Returns the color converted to a 64-bit integer in ARGB format (each word represents a color channel). ARGB is more compatible with DirectX.

::

    var color = Color(1, 0.5, 0.2)
    print(color.to_argb64()) # Prints -2147470541

----

.. _class_Color_method_to_html:

- :ref:`String<class_String>` **to_html** **(** :ref:`bool<class_bool>` with_alpha=true **)**

Devuelve la cadena de color hexadecimal HTML del color en formato ARGB (ex: ``ff34f822``).

Poniendo ``with_alpha`` en ``false`` se excluye el alfa de la cadena hexadecimal.

::

    var c = Color(1, 1, 1, 0.5)
    var s1 = c.to_html() # Devuelve "7fffffff"
    var s2 = c.to_html(false) # Devuelve "ffffff"

----

.. _class_Color_method_to_rgba32:

- :ref:`int<class_int>` **to_rgba32** **(** **)**

Returns the color converted to a 32-bit integer in RGBA format (each byte represents a color channel). RGBA is Godot's default format.

::

    var color = Color(1, 0.5, 0.2)
    print(color.to_rgba32()) # Prints 4286526463

----

.. _class_Color_method_to_rgba64:

- :ref:`int<class_int>` **to_rgba64** **(** **)**

Returns the color converted to a 64-bit integer in RGBA format (each word represents a color channel). RGBA is Godot's default format.

::

    var color = Color(1, 0.5, 0.2)
    print(color.to_rgba64()) # Prints -140736629309441

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
