:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TCP_Server.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TCP_Server:

TCP_Server
==========

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Un servidor TCP.

Descripción
----------------------

Un servidor TCP. Escucha las conexiones en un puerto y devuelve un :ref:`StreamPeerTCP<class_StreamPeerTCP>` cuando recibe una conexión entrante.

Métodos
--------------

+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                   | :ref:`is_connection_available<class_TCP_Server_method_is_connection_available>` **(** **)** |const|                                |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                   | :ref:`is_listening<class_TCP_Server_method_is_listening>` **(** **)** |const|                                                      |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`     | :ref:`listen<class_TCP_Server_method_listen>` **(** :ref:`int<class_int>` port, :ref:`String<class_String>` bind_address="*" **)** |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`stop<class_TCP_Server_method_stop>` **(** **)**                                                                              |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`StreamPeerTCP<class_StreamPeerTCP>` | :ref:`take_connection<class_TCP_Server_method_take_connection>` **(** **)**                                                        |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Métodos
------------------------------------------------

.. _class_TCP_Server_method_is_connection_available:

- :ref:`bool<class_bool>` **is_connection_available** **(** **)** |const|

Devuelve ``true`` si hay una conexión disponible para tomar.

----

.. _class_TCP_Server_method_is_listening:

- :ref:`bool<class_bool>` **is_listening** **(** **)** |const|

Devuelve ``true`` si el servidor está actualmente a la escucha de las conexiones.

----

.. _class_TCP_Server_method_listen:

- :ref:`Error<enum_@GlobalScope_Error>` **listen** **(** :ref:`int<class_int>` port, :ref:`String<class_String>` bind_address="*" **)**

Escucha en el ``port`` que se une a ``bind_address``.

Si ``bind_address`` está configurado como ``"*"`` (por defecto), el servidor escuchará en todas las direcciones disponibles (tanto IPv4 como IPv6).

Si ``bind_address`` está configurado como ``"0.0.0.0"`` (para IPv4) o ``"::"`` (para IPv6), el servidor escuchará todas las direcciones disponibles que coincidan con ese tipo de IP.

Si ``bind_address`` se establece en cualquier dirección válida (por ejemplo, ``"192.168.1.101"``, ``"::1"``, etc.), el servidor sólo escuchará en la interfaz con esas direcciones (o fallará si no existe una interfaz con la dirección indicada).

----

.. _class_TCP_Server_method_stop:

- void **stop** **(** **)**

Para de escuchar.

----

.. _class_TCP_Server_method_take_connection:

- :ref:`StreamPeerTCP<class_StreamPeerTCP>` **take_connection** **(** **)**

Si hay una conexión disponible, devuelve un StreamPeerTCP con la conexión.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
