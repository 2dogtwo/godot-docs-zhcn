:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TextureProgress.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TextureProgress:

TextureProgress
===============

**Inherits:** :ref:`Range<class_Range>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Barra de progreso basada en la textura. Útil para cargar pantallas y barras de vida o resistencia.

Descripción
----------------------

TextureProgress funciona como :ref:`ProgressBar<class_ProgressBar>`, pero utiliza hasta 3 texturas en lugar del recurso :ref:`Theme<class_Theme>` de Godot. Se puede utilizar para crear barras de progreso horizontales, verticales y radiales.

Propiedades
----------------------

+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`fill_mode<class_TextureProgress_property_fill_mode>`                             | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`MouseFilter<enum_Control_MouseFilter>` | mouse_filter                                                                           | ``1`` (overrides :ref:`Control<class_Control_property_mouse_filter>`) |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`bool<class_bool>`                      | :ref:`nine_patch_stretch<class_TextureProgress_property_nine_patch_stretch>`           | ``false``                                                             |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                | :ref:`radial_center_offset<class_TextureProgress_property_radial_center_offset>`       | ``Vector2( 0, 0 )``                                                   |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`float<class_float>`                    | :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>`         | ``360.0``                                                             |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`float<class_float>`                    | :ref:`radial_initial_angle<class_TextureProgress_property_radial_initial_angle>`       | ``0.0``                                                               |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`stretch_margin_bottom<class_TextureProgress_property_stretch_margin_bottom>`     | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`stretch_margin_left<class_TextureProgress_property_stretch_margin_left>`         | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`stretch_margin_right<class_TextureProgress_property_stretch_margin_right>`       | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`stretch_margin_top<class_TextureProgress_property_stretch_margin_top>`           | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                | :ref:`texture_over<class_TextureProgress_property_texture_over>`                       |                                                                       |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                | :ref:`texture_progress<class_TextureProgress_property_texture_progress>`               |                                                                       |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                | :ref:`texture_progress_offset<class_TextureProgress_property_texture_progress_offset>` | ``Vector2( 0, 0 )``                                                   |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                | :ref:`texture_under<class_TextureProgress_property_texture_under>`                     |                                                                       |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Color<class_Color>`                    | :ref:`tint_over<class_TextureProgress_property_tint_over>`                             | ``Color( 1, 1, 1, 1 )``                                               |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Color<class_Color>`                    | :ref:`tint_progress<class_TextureProgress_property_tint_progress>`                     | ``Color( 1, 1, 1, 1 )``                                               |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Color<class_Color>`                    | :ref:`tint_under<class_TextureProgress_property_tint_under>`                           | ``Color( 1, 1, 1, 1 )``                                               |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+

Métodos
--------------

+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>` | :ref:`get_stretch_margin<class_TextureProgress_method_get_stretch_margin>` **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin **)** |const|                      |
+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                  | :ref:`set_stretch_margin<class_TextureProgress_method_set_stretch_margin>` **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin, :ref:`int<class_int>` value **)** |
+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumeraciones
--------------------------

.. _enum_TextureProgress_FillMode:

.. _class_TextureProgress_constant_FILL_LEFT_TO_RIGHT:

.. _class_TextureProgress_constant_FILL_RIGHT_TO_LEFT:

.. _class_TextureProgress_constant_FILL_TOP_TO_BOTTOM:

.. _class_TextureProgress_constant_FILL_BOTTOM_TO_TOP:

.. _class_TextureProgress_constant_FILL_CLOCKWISE:

.. _class_TextureProgress_constant_FILL_COUNTER_CLOCKWISE:

.. _class_TextureProgress_constant_FILL_BILINEAR_LEFT_AND_RIGHT:

.. _class_TextureProgress_constant_FILL_BILINEAR_TOP_AND_BOTTOM:

.. _class_TextureProgress_constant_FILL_CLOCKWISE_AND_COUNTER_CLOCKWISE:

enum **FillMode**:

- **FILL_LEFT_TO_RIGHT** = **0** --- El :ref:`texture_progress<class_TextureProgress_property_texture_progress>` se llena de izquierda a derecha.

- **FILL_RIGHT_TO_LEFT** = **1** --- El :ref:`texture_progress<class_TextureProgress_property_texture_progress>` se llena de derecha a izquierda.

- **FILL_TOP_TO_BOTTOM** = **2** --- El :ref:`texture_progress<class_TextureProgress_property_texture_progress>` se llena de arriba a abajo.

- **FILL_BOTTOM_TO_TOP** = **3** --- El :ref:`texture_progress<class_TextureProgress_property_texture_progress>` se llena de abajo a arriba.

- **FILL_CLOCKWISE** = **4** --- Convierte el nodo en una barra radial. El :ref:`texture_progress<class_TextureProgress_property_texture_progress>` se llena en el sentido de las agujas del reloj. Vea :ref:`radial_center_offset<class_TextureProgress_property_radial_center_offset>`, :ref:`radial_initial_angle<class_TextureProgress_property_radial_initial_angle>` y :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>` para controlar la forma en que la barra se llena.

- **FILL_COUNTER_CLOCKWISE** = **5** --- Convierte el nodo en una barra radial. El :ref:`texture_progress<class_TextureProgress_property_texture_progress>` se llena en sentido contrario a las agujas del reloj. Ver :ref:`radial_center_offset<class_TextureProgress_property_radial_center_offset>`, :ref:`radial_initial_angle<class_TextureProgress_property_radial_initial_angle>` y :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>` para controlar la forma en que la barra se llena.

- **FILL_BILINEAR_LEFT_AND_RIGHT** = **6** --- El :ref:`texture_progress<class_TextureProgress_property_texture_progress>` se llena desde el centro, expandiéndose tanto hacia la izquierda como hacia la derecha.

- **FILL_BILINEAR_TOP_AND_BOTTOM** = **7** --- El :ref:`texture_progress<class_TextureProgress_property_texture_progress>` se llena desde el centro, expandiéndose tanto hacia arriba como hacia abajo.

- **FILL_CLOCKWISE_AND_COUNTER_CLOCKWISE** = **8** --- Convierte el nodo en una barra radial. El :ref:`texture_progress<class_TextureProgress_property_texture_progress>` se llena radialmente desde el centro, expandiéndose tanto en sentido horario como antihorario. Vea :ref:`radial_center_offset<class_TextureProgress_property_radial_center_offset>`, :ref:`radial_initial_angle<class_TextureProgress_property_radial_initial_angle>` y :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>` para controlar la forma en que la barra se llena.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_TextureProgress_property_fill_mode:

- :ref:`int<class_int>` **fill_mode**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_fill_mode(value) |
+-----------+----------------------+
| *Getter*  | get_fill_mode()      |
+-----------+----------------------+

La dirección de llenado. Ver :ref:`FillMode<enum_TextureProgress_FillMode>` para los posibles valores.

----

.. _class_TextureProgress_property_nine_patch_stretch:

- :ref:`bool<class_bool>` **nine_patch_stretch**

+-----------+-------------------------------+
| *Default* | ``false``                     |
+-----------+-------------------------------+
| *Setter*  | set_nine_patch_stretch(value) |
+-----------+-------------------------------+
| *Getter*  | get_nine_patch_stretch()      |
+-----------+-------------------------------+

Si ``true``, Godot trata las texturas de la barra como en :ref:`NinePatchRect<class_NinePatchRect>`. Usa las propiedades de ``stretch_margin_*`` como en :ref:`stretch_margin_bottom<class_TextureProgress_property_stretch_margin_bottom>` para configurar la cuadrícula de 3×3 del nueve parche. Cuando se utiliza un :ref:`fill_mode<class_TextureProgress_property_fill_mode>` radial, este ajuste permitirá el estiramiento.

----

.. _class_TextureProgress_property_radial_center_offset:

- :ref:`Vector2<class_Vector2>` **radial_center_offset**

+-----------+---------------------------------+
| *Default* | ``Vector2( 0, 0 )``             |
+-----------+---------------------------------+
| *Setter*  | set_radial_center_offset(value) |
+-----------+---------------------------------+
| *Getter*  | get_radial_center_offset()      |
+-----------+---------------------------------+

Desplaza :ref:`texture_progress<class_TextureProgress_property_texture_progress>` si :ref:`fill_mode<class_TextureProgress_property_fill_mode>` es :ref:`FILL_CLOCKWISE<class_TextureProgress_constant_FILL_CLOCKWISE>` o :ref:`FILL_COUNTER_CLOCKWISE<class_TextureProgress_constant_FILL_COUNTER_CLOCKWISE>`.

----

.. _class_TextureProgress_property_radial_fill_degrees:

- :ref:`float<class_float>` **radial_fill_degrees**

+-----------+-------------------------+
| *Default* | ``360.0``               |
+-----------+-------------------------+
| *Setter*  | set_fill_degrees(value) |
+-----------+-------------------------+
| *Getter*  | get_fill_degrees()      |
+-----------+-------------------------+

Límite superior para el relleno de :ref:`texture_progress<class_TextureProgress_property_texture_progress>` si el :ref:`fill_mode<class_TextureProgress_property_fill_mode>` es :ref:`FILL_CLOCKWISE<class_TextureProgress_constant_FILL_CLOCKWISE>` o :ref:`FILL_COUNTER_CLOCKWISE<class_TextureProgress_constant_FILL_COUNTER_CLOCKWISE>`. Cuando el ``value`` del nodo es igual a su ``max_value``, la textura se rellena hasta este ángulo.

Ver :ref:`Range.value<class_Range_property_value>`, :ref:`Range.max_value<class_Range_property_max_value>`.

----

.. _class_TextureProgress_property_radial_initial_angle:

- :ref:`float<class_float>` **radial_initial_angle**

+-----------+---------------------------------+
| *Default* | ``0.0``                         |
+-----------+---------------------------------+
| *Setter*  | set_radial_initial_angle(value) |
+-----------+---------------------------------+
| *Getter*  | get_radial_initial_angle()      |
+-----------+---------------------------------+

Ángulo inicial para el relleno de :ref:`texture_progress<class_TextureProgress_property_texture_progress>` si :ref:`fill_mode<class_TextureProgress_property_fill_mode>` es :ref:`FILL_CLOCKWISE<class_TextureProgress_constant_FILL_CLOCKWISE>` o :ref:`FILL_COUNTER_CLOCKWISE<class_TextureProgress_constant_FILL_COUNTER_CLOCKWISE>`. Cuando el ``value`` del nodo es igual a su ``min_value``, la textura no se muestra en absoluto. Cuando el ``value`` aumenta, la textura se llena y tiende hacia :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>`.

----

.. _class_TextureProgress_property_stretch_margin_bottom:

- :ref:`int<class_int>` **stretch_margin_bottom**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_stretch_margin(value) |
+-----------+---------------------------+
| *Getter*  | get_stretch_margin()      |
+-----------+---------------------------+

La altura de la fila inferior del 9-patch. Un margen de 16 significa que las esquinas y el lado inferior del 9-patch tendrán una altura de 16 píxeles. Puede establecer los 4 valores de margen individualmente para crear paneles con bordes no uniformes.

----

.. _class_TextureProgress_property_stretch_margin_left:

- :ref:`int<class_int>` **stretch_margin_left**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_stretch_margin(value) |
+-----------+---------------------------+
| *Getter*  | get_stretch_margin()      |
+-----------+---------------------------+

El ancho de la columna izquierda del 9-patch.

----

.. _class_TextureProgress_property_stretch_margin_right:

- :ref:`int<class_int>` **stretch_margin_right**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_stretch_margin(value) |
+-----------+---------------------------+
| *Getter*  | get_stretch_margin()      |
+-----------+---------------------------+

El ancho de la columna derecha del 9-patch.

----

.. _class_TextureProgress_property_stretch_margin_top:

- :ref:`int<class_int>` **stretch_margin_top**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_stretch_margin(value) |
+-----------+---------------------------+
| *Getter*  | get_stretch_margin()      |
+-----------+---------------------------+

La altura de la fila superior del 9-patch.

----

.. _class_TextureProgress_property_texture_over:

- :ref:`Texture<class_Texture>` **texture_over**

+----------+-------------------------+
| *Setter* | set_over_texture(value) |
+----------+-------------------------+
| *Getter* | get_over_texture()      |
+----------+-------------------------+

:ref:`Texture<class_Texture>` that draws over the progress bar. Use it to add highlights or an upper-frame that hides part of :ref:`texture_progress<class_TextureProgress_property_texture_progress>`.

----

.. _class_TextureProgress_property_texture_progress:

- :ref:`Texture<class_Texture>` **texture_progress**

+----------+-----------------------------+
| *Setter* | set_progress_texture(value) |
+----------+-----------------------------+
| *Getter* | get_progress_texture()      |
+----------+-----------------------------+

:ref:`Texture<class_Texture>` that clips based on the node's ``value`` and :ref:`fill_mode<class_TextureProgress_property_fill_mode>`. As ``value`` increased, the texture fills up. It shows entirely when ``value`` reaches ``max_value``. It doesn't show at all if ``value`` is equal to ``min_value``.

The ``value`` property comes from :ref:`Range<class_Range>`. See :ref:`Range.value<class_Range_property_value>`, :ref:`Range.min_value<class_Range_property_min_value>`, :ref:`Range.max_value<class_Range_property_max_value>`.

----

.. _class_TextureProgress_property_texture_progress_offset:

- :ref:`Vector2<class_Vector2>` **texture_progress_offset**

+-----------+------------------------------------+
| *Default* | ``Vector2( 0, 0 )``                |
+-----------+------------------------------------+
| *Setter*  | set_texture_progress_offset(value) |
+-----------+------------------------------------+
| *Getter*  | get_texture_progress_offset()      |
+-----------+------------------------------------+

The offset of :ref:`texture_progress<class_TextureProgress_property_texture_progress>`. Useful for :ref:`texture_over<class_TextureProgress_property_texture_over>` and :ref:`texture_under<class_TextureProgress_property_texture_under>` with fancy borders, to avoid transparent margins in your progress texture.

----

.. _class_TextureProgress_property_texture_under:

- :ref:`Texture<class_Texture>` **texture_under**

+----------+--------------------------+
| *Setter* | set_under_texture(value) |
+----------+--------------------------+
| *Getter* | get_under_texture()      |
+----------+--------------------------+

:ref:`Texture<class_Texture>` that draws under the progress bar. The bar's background.

----

.. _class_TextureProgress_property_tint_over:

- :ref:`Color<class_Color>` **tint_over**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_tint_over(value)    |
+-----------+-------------------------+
| *Getter*  | get_tint_over()         |
+-----------+-------------------------+

Multiplica el color de la textura ``texture_over`` de la barra. El efecto es similar al de :ref:`CanvasItem.modulate<class_CanvasItem_property_modulate>`, excepto que sólo afecta a esta textura específica en lugar de a todo el nodo.

----

.. _class_TextureProgress_property_tint_progress:

- :ref:`Color<class_Color>` **tint_progress**

+-----------+--------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )``  |
+-----------+--------------------------+
| *Setter*  | set_tint_progress(value) |
+-----------+--------------------------+
| *Getter*  | get_tint_progress()      |
+-----------+--------------------------+

Multiplica el color de la textura ``texture_progress`` de la barra.

----

.. _class_TextureProgress_property_tint_under:

- :ref:`Color<class_Color>` **tint_under**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_tint_under(value)   |
+-----------+-------------------------+
| *Getter*  | get_tint_under()        |
+-----------+-------------------------+

Multiplica el color de la textura ``texture_under`` de la barra.

Descripciones de Métodos
------------------------------------------------

.. _class_TextureProgress_method_get_stretch_margin:

- :ref:`int<class_int>` **get_stretch_margin** **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin **)** |const|

----

.. _class_TextureProgress_method_set_stretch_margin:

- void **set_stretch_margin** **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin, :ref:`int<class_int>` value **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
