:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the WebSocketMultiplayerPeer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_WebSocketMultiplayerPeer:

WebSocketMultiplayerPeer
========================

**Inherits:** :ref:`NetworkedMultiplayerPeer<class_NetworkedMultiplayerPeer>` **<** :ref:`PacketPeer<class_PacketPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`WebSocketClient<class_WebSocketClient>`, :ref:`WebSocketServer<class_WebSocketServer>`

Clase base para el servidor y cliente de WebSocket.

Descripción
----------------------

Clase base para el servidor y el cliente de WebSocket, lo que permite utilizarlos como par de red para la :ref:`MultiplayerAPI<class_MultiplayerAPI>`.

Propiedades
----------------------

+-----------------------------------------------------------------+------------------------+-----------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                         | refuse_new_connections | ``false`` (overrides :ref:`NetworkedMultiplayerPeer<class_NetworkedMultiplayerPeer_property_refuse_new_connections>`) |
+-----------------------------------------------------------------+------------------------+-----------------------------------------------------------------------------------------------------------------------+
| :ref:`TransferMode<enum_NetworkedMultiplayerPeer_TransferMode>` | transfer_mode          | ``2`` (overrides :ref:`NetworkedMultiplayerPeer<class_NetworkedMultiplayerPeer_property_transfer_mode>`)              |
+-----------------------------------------------------------------+------------------------+-----------------------------------------------------------------------------------------------------------------------+

Métodos
--------------

+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`WebSocketPeer<class_WebSocketPeer>` | :ref:`get_peer<class_WebSocketMultiplayerPeer_method_get_peer>` **(** :ref:`int<class_int>` peer_id **)** |const|                                                                                                                                            |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`     | :ref:`set_buffers<class_WebSocketMultiplayerPeer_method_set_buffers>` **(** :ref:`int<class_int>` input_buffer_size_kb, :ref:`int<class_int>` input_max_packets, :ref:`int<class_int>` output_buffer_size_kb, :ref:`int<class_int>` output_max_packets **)** |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Señales
--------------

.. _class_WebSocketMultiplayerPeer_signal_peer_packet:

- **peer_packet** **(** :ref:`int<class_int>` peer_source **)**

Emitido cuando se recibe un paquete de un compañero.

\ **Nota:** Esta señal sólo se emite cuando el cliente o el servidor está configurado para utilizar la API multijugador de Godot.

Descripciones de Métodos
------------------------------------------------

.. _class_WebSocketMultiplayerPeer_method_get_peer:

- :ref:`WebSocketPeer<class_WebSocketPeer>` **get_peer** **(** :ref:`int<class_int>` peer_id **)** |const|

Devuelve el :ref:`WebSocketPeer<class_WebSocketPeer>` asociado al ``peer_id`` dado.

----

.. _class_WebSocketMultiplayerPeer_method_set_buffers:

- :ref:`Error<enum_@GlobalScope_Error>` **set_buffers** **(** :ref:`int<class_int>` input_buffer_size_kb, :ref:`int<class_int>` input_max_packets, :ref:`int<class_int>` output_buffer_size_kb, :ref:`int<class_int>` output_max_packets **)**

Configura el tamaño de los buffers para este par de WebSocket. Los valores por defecto pueden ser especificados en la Configuración del Proyecto bajo ``network/limits``. Para el servidor, los valores se refieren a cada par conectado.

Los dos primeros parámetros definen el tamaño y los límites de los paquetes en cola del buffer de entrada, los dos últimos del buffer de salida.

Los tamaños del buffer se expresan en KiB, por lo que ``4 = 2^12 = 4096 bytes``. Todos los parámetros se redondearán a la potencia más cercana de dos.

\ **Nota:** Las exportaciones en HTML5 sólo utilizan el buffer de entrada ya que el de salida es manejado por los navegadores.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
