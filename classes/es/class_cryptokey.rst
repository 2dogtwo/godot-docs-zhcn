:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CryptoKey.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CryptoKey:

CryptoKey
=========

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Una clave criptográfica (RSA).

Descripción
----------------------

La clase CryptoKey representa una clave criptográfica. Las claves pueden ser cargadas y guardadas como cualquier otro :ref:`Resource<class_Resource>`.

Pueden utilizarse para generar un :ref:`X509Certificate<class_X509Certificate>` autofirmado a través del :ref:`Crypto.generate_self_signed_certificate<class_Crypto_method_generate_self_signed_certificate>` y como clave privada en el :ref:`StreamPeerSSL.accept_stream<class_StreamPeerSSL_method_accept_stream>` junto con el certificado correspondiente.

\ **Nota:** No está disponible en los exportados en HTML5.

Métodos
--------------

+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_public_only<class_CryptoKey_method_is_public_only>` **(** **)** |const|                                                                               |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>` | :ref:`load<class_CryptoKey_method_load>` **(** :ref:`String<class_String>` path, :ref:`bool<class_bool>` public_only=false **)**                               |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>` | :ref:`load_from_string<class_CryptoKey_method_load_from_string>` **(** :ref:`String<class_String>` string_key, :ref:`bool<class_bool>` public_only=false **)** |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>` | :ref:`save<class_CryptoKey_method_save>` **(** :ref:`String<class_String>` path, :ref:`bool<class_bool>` public_only=false **)**                               |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`           | :ref:`save_to_string<class_CryptoKey_method_save_to_string>` **(** :ref:`bool<class_bool>` public_only=false **)**                                             |
+---------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Métodos
------------------------------------------------

.. _class_CryptoKey_method_is_public_only:

- :ref:`bool<class_bool>` **is_public_only** **(** **)** |const|

Devuelve ``true`` si esta CryptoKey sólo tiene la parte pública, y no la privada.

----

.. _class_CryptoKey_method_load:

- :ref:`Error<enum_@GlobalScope_Error>` **load** **(** :ref:`String<class_String>` path, :ref:`bool<class_bool>` public_only=false **)**

Loads a key from ``path``. If ``public_only`` is ``true``, only the public key will be loaded.

\ **Note:** ``path`` should be a "\*.pub" file if ``public_only`` is ``true``, a "\*.key" file otherwise.

----

.. _class_CryptoKey_method_load_from_string:

- :ref:`Error<enum_@GlobalScope_Error>` **load_from_string** **(** :ref:`String<class_String>` string_key, :ref:`bool<class_bool>` public_only=false **)**

Carga una clave de la ``string`` dada. Si ``public_only`` es ``true``, sólo se cargará la clave pública.

----

.. _class_CryptoKey_method_save:

- :ref:`Error<enum_@GlobalScope_Error>` **save** **(** :ref:`String<class_String>` path, :ref:`bool<class_bool>` public_only=false **)**

Saves a key to the given ``path``. If ``public_only`` is ``true``, only the public key will be saved.

\ **Note:** ``path`` should be a "\*.pub" file if ``public_only`` is ``true``, a "\*.key" file otherwise.

----

.. _class_CryptoKey_method_save_to_string:

- :ref:`String<class_String>` **save_to_string** **(** :ref:`bool<class_bool>` public_only=false **)**

Devuelve una string que contiene la clave en formato PEM. Si ``public_only`` es ``true``, sólo se incluirá la clave pública.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
