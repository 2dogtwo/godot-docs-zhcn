:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Transform2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Transform2D:

Transform2D
===========

Transformada 2D (matriz 2×3).

Descripción
----------------------

2×3 matrix (2 rows, 3 columns) used for 2D linear transformations. It can represent transformations such as translation, rotation, or scaling. It consists of three :ref:`Vector2<class_Vector2>` values: :ref:`x<class_Transform2D_property_x>`, :ref:`y<class_Transform2D_property_y>`, and the :ref:`origin<class_Transform2D_property_origin>`.

For more information, read the "Matrices and transforms" documentation article.

Tutoriales
--------------------

- :doc:`Math tutorial index <../tutorials/math/index>`

- :doc:`Matrices and transforms <../tutorials/math/matrices_and_transforms>`

- `Matrix Transform Demo <https://godotengine.org/asset-library/asset/584>`__

- `2.5D Demo <https://godotengine.org/asset-library/asset/583>`__

Propiedades
----------------------

+-------------------------------+--------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`origin<class_Transform2D_property_origin>` | ``Vector2( 0, 0 )`` |
+-------------------------------+--------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`x<class_Transform2D_property_x>`           | ``Vector2( 1, 0 )`` |
+-------------------------------+--------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`y<class_Transform2D_property_y>`           | ``Vector2( 0, 1 )`` |
+-------------------------------+--------------------------------------------------+---------------------+

Métodos
--------------

+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`Transform2D<class_Transform2D_method_Transform2D>` **(** :ref:`Transform<class_Transform>` from **)**                                                                           |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`Transform2D<class_Transform2D_method_Transform2D>` **(** :ref:`Vector2<class_Vector2>` x_axis, :ref:`Vector2<class_Vector2>` y_axis, :ref:`Vector2<class_Vector2>` origin **)** |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`Transform2D<class_Transform2D_method_Transform2D>` **(** :ref:`float<class_float>` rotation, :ref:`Vector2<class_Vector2>` position **)**                                       |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`affine_inverse<class_Transform2D_method_affine_inverse>` **(** **)**                                                                                                            |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`basis_xform<class_Transform2D_method_basis_xform>` **(** :ref:`Vector2<class_Vector2>` v **)**                                                                                  |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`basis_xform_inv<class_Transform2D_method_basis_xform_inv>` **(** :ref:`Vector2<class_Vector2>` v **)**                                                                          |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`get_origin<class_Transform2D_method_get_origin>` **(** **)**                                                                                                                    |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`get_rotation<class_Transform2D_method_get_rotation>` **(** **)**                                                                                                                |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`get_scale<class_Transform2D_method_get_scale>` **(** **)**                                                                                                                      |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`interpolate_with<class_Transform2D_method_interpolate_with>` **(** :ref:`Transform2D<class_Transform2D>` transform, :ref:`float<class_float>` weight **)**                      |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`inverse<class_Transform2D_method_inverse>` **(** **)**                                                                                                                          |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`is_equal_approx<class_Transform2D_method_is_equal_approx>` **(** :ref:`Transform2D<class_Transform2D>` transform **)**                                                          |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`orthonormalized<class_Transform2D_method_orthonormalized>` **(** **)**                                                                                                          |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`rotated<class_Transform2D_method_rotated>` **(** :ref:`float<class_float>` phi **)**                                                                                            |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`scaled<class_Transform2D_method_scaled>` **(** :ref:`Vector2<class_Vector2>` scale **)**                                                                                        |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`translated<class_Transform2D_method_translated>` **(** :ref:`Vector2<class_Vector2>` offset **)**                                                                               |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`         | :ref:`xform<class_Transform2D_method_xform>` **(** :ref:`Variant<class_Variant>` v **)**                                                                                              |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`         | :ref:`xform_inv<class_Transform2D_method_xform_inv>` **(** :ref:`Variant<class_Variant>` v **)**                                                                                      |
+---------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Constantes
--------------------

.. _class_Transform2D_constant_IDENTITY:

.. _class_Transform2D_constant_FLIP_X:

.. _class_Transform2D_constant_FLIP_Y:

- **IDENTITY** = **Transform2D( 1, 0, 0, 1, 0, 0 )** --- La identidad ``Transform2D`` sin traducción, rotación o escalamiento aplicado. Cuando se aplica a otras estructuras de datos, :ref:`IDENTITY<class_Transform2D_constant_IDENTITY>` no realiza ninguna transformación.

- **FLIP_X** = **Transform2D( -1, 0, 0, 1, 0, 0 )** --- El ``Transform2D`` que volteará algo a lo largo del eje X.

- **FLIP_Y** = **Transform2D( 1, 0, 0, -1, 0, 0 )** --- El ``Transform2D`` que volteará algo a lo largo del eje Y.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_Transform2D_property_origin:

- :ref:`Vector2<class_Vector2>` **origin**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+

El vector de origen (columna 2, la tercera columna). Equivalente al índice del indice ``2``. El vector de origen representa la traslación.

----

.. _class_Transform2D_property_x:

- :ref:`Vector2<class_Vector2>` **x**

+-----------+---------------------+
| *Default* | ``Vector2( 1, 0 )`` |
+-----------+---------------------+

El vector X de la matriz base (columna 0). Equivalente al índice de la matriz ``0``.

----

.. _class_Transform2D_property_y:

- :ref:`Vector2<class_Vector2>` **y**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 1 )`` |
+-----------+---------------------+

El vector Y de la matriz base (columna 1). Equivalente al índice de la matriz ``1``.

Descripciones de Métodos
------------------------------------------------

.. _class_Transform2D_method_Transform2D:

- :ref:`Transform2D<class_Transform2D>` **Transform2D** **(** :ref:`Transform<class_Transform>` from **)**

Construye la transformada a partir de una 3D :ref:`Transform<class_Transform>`.

----

- :ref:`Transform2D<class_Transform2D>` **Transform2D** **(** :ref:`Vector2<class_Vector2>` x_axis, :ref:`Vector2<class_Vector2>` y_axis, :ref:`Vector2<class_Vector2>` origin **)**

Construye la transformación a partir de 3 valores de :ref:`Vector2<class_Vector2>` que representan :ref:`x<class_Transform2D_property_x>`, :ref:`y<class_Transform2D_property_y>`, y el :ref:`origin<class_Transform2D_property_origin>` (los tres vectores de la columna).

----

- :ref:`Transform2D<class_Transform2D>` **Transform2D** **(** :ref:`float<class_float>` rotation, :ref:`Vector2<class_Vector2>` position **)**

Construye la transformada a partir de un ángulo (en radianes) y posición dados.

----

.. _class_Transform2D_method_affine_inverse:

- :ref:`Transform2D<class_Transform2D>` **affine_inverse** **(** **)**

Devuelve el inverso de la transformada, bajo el supuesto de que la transformación se compone de rotación, escalado y traslación.

----

.. _class_Transform2D_method_basis_xform:

- :ref:`Vector2<class_Vector2>` **basis_xform** **(** :ref:`Vector2<class_Vector2>` v **)**

Devuelve un vector transformado (multiplicado) por la matriz base.

Este método no tiene en cuenta la translación (el vector de origen.

----

.. _class_Transform2D_method_basis_xform_inv:

- :ref:`Vector2<class_Vector2>` **basis_xform_inv** **(** :ref:`Vector2<class_Vector2>` v **)**

Devuelve un vector transformado (multiplicado) por la matriz de base inversa.

Este método no tiene en cuenta la traducción (el vector de origen).

----

.. _class_Transform2D_method_get_origin:

- :ref:`Vector2<class_Vector2>` **get_origin** **(** **)**

Devuelve el origen de la transformada (translación).

----

.. _class_Transform2D_method_get_rotation:

- :ref:`float<class_float>` **get_rotation** **(** **)**

Devuelve la rotación de la transformada (en radianes).

----

.. _class_Transform2D_method_get_scale:

- :ref:`Vector2<class_Vector2>` **get_scale** **(** **)**

Devuelve la escala.

----

.. _class_Transform2D_method_interpolate_with:

- :ref:`Transform2D<class_Transform2D>` **interpolate_with** **(** :ref:`Transform2D<class_Transform2D>` transform, :ref:`float<class_float>` weight **)**

Returns a transform interpolated between this transform and another by a given ``weight`` (on the range of 0.0 to 1.0).

----

.. _class_Transform2D_method_inverse:

- :ref:`Transform2D<class_Transform2D>` **inverse** **(** **)**

Devuelve el inverso de la transformada, bajo el supuesto de que la transformación se compone de rotación y traslación (sin escalamiento, utilice :ref:`affine_inverse<class_Transform2D_method_affine_inverse>` para las transformadas con escalamiento).

----

.. _class_Transform2D_method_is_equal_approx:

- :ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Transform2D<class_Transform2D>` transform **)**

Devuelve ``true`` si esta transformada y ``transform`` son aproximadamente iguales, llamando a ``is_equal_approx`` en cada componente.

----

.. _class_Transform2D_method_orthonormalized:

- :ref:`Transform2D<class_Transform2D>` **orthonormalized** **(** **)**

Devuelve la transformada con la base ortogonal (90 grados), y los vectores del eje normalizado (escala de 1 o -1).

----

.. _class_Transform2D_method_rotated:

- :ref:`Transform2D<class_Transform2D>` **rotated** **(** :ref:`float<class_float>` phi **)**

Gira la transformación por el ángulo dado (en radianes), usando la multiplicación de la matriz.

----

.. _class_Transform2D_method_scaled:

- :ref:`Transform2D<class_Transform2D>` **scaled** **(** :ref:`Vector2<class_Vector2>` scale **)**

Escala la transformación por el factor de escala dado, usando la multiplicación de la matriz.

----

.. _class_Transform2D_method_translated:

- :ref:`Transform2D<class_Transform2D>` **translated** **(** :ref:`Vector2<class_Vector2>` offset **)**

Traduce la transformación por el desplazamiento dado, relativo a los vectores base de la transformación.

A diferencia de :ref:`rotated<class_Transform2D_method_rotated>` y :ref:`scaled<class_Transform2D_method_scaled>`, éste no utiliza la multiplicación de la matriz.

----

.. _class_Transform2D_method_xform:

- :ref:`Variant<class_Variant>` **xform** **(** :ref:`Variant<class_Variant>` v **)**

Transforms the given :ref:`Vector2<class_Vector2>`, :ref:`Rect2<class_Rect2>`, or :ref:`PoolVector2Array<class_PoolVector2Array>` by this transform.

----

.. _class_Transform2D_method_xform_inv:

- :ref:`Variant<class_Variant>` **xform_inv** **(** :ref:`Variant<class_Variant>` v **)**

Inverse-transforms the given :ref:`Vector2<class_Vector2>`, :ref:`Rect2<class_Rect2>`, or :ref:`PoolVector2Array<class_PoolVector2Array>` by this transform, under the assumption that the transformation is composed of rotation and translation (no scaling). Equivalent to calling ``inverse().xform(v)`` on this transform. For affine transformations (e.g. with scaling) see :ref:`affine_inverse<class_Transform2D_method_affine_inverse>` method.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
