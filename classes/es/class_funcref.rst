:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the FuncRef.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_FuncRef:

FuncRef
=======

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Referencia a una función en un objeto.

Descripción
----------------------

En GDScript, las funciones no son *objetos de primera clase*. Esto significa que es imposible almacenarlas directamente como variables, devolverlas desde otra función, o pasarlas como argumentos.

Sin embargo, al crear una ``FuncRef`` usando la función :ref:`@GDScript.funcref<class_@GDScript_method_funcref>`, se puede crear, pasar y llamar una referencia a una función en un objeto dado.

Propiedades
----------------------

+-----------------------------+--------------------------------------------------+--------+
| :ref:`String<class_String>` | :ref:`function<class_FuncRef_property_function>` | ``""`` |
+-----------------------------+--------------------------------------------------+--------+

Métodos
--------------

+-------------------------------+---------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`call_func<class_FuncRef_method_call_func>` **(** ... **)** |vararg|                               |
+-------------------------------+---------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>` | :ref:`call_funcv<class_FuncRef_method_call_funcv>` **(** :ref:`Array<class_Array>` arg_array **)**      |
+-------------------------------+---------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_valid<class_FuncRef_method_is_valid>` **(** **)** |const|                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_instance<class_FuncRef_method_set_instance>` **(** :ref:`Object<class_Object>` instance **)** |
+-------------------------------+---------------------------------------------------------------------------------------------------------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_FuncRef_property_function:

- :ref:`String<class_String>` **function**

+-----------+---------------------+
| *Default* | ``""``              |
+-----------+---------------------+
| *Setter*  | set_function(value) |
+-----------+---------------------+
| *Getter*  | get_function()      |
+-----------+---------------------+

The name of the referenced function.

Descripciones de Métodos
------------------------------------------------

.. _class_FuncRef_method_call_func:

- :ref:`Variant<class_Variant>` **call_func** **(** ... **)** |vararg|

Calls the referenced function previously set in :ref:`function<class_FuncRef_property_function>` or :ref:`@GDScript.funcref<class_@GDScript_method_funcref>`.

----

.. _class_FuncRef_method_call_funcv:

- :ref:`Variant<class_Variant>` **call_funcv** **(** :ref:`Array<class_Array>` arg_array **)**

Calls the referenced function previously set in :ref:`function<class_FuncRef_property_function>` or :ref:`@GDScript.funcref<class_@GDScript_method_funcref>`. Contrarily to :ref:`call_func<class_FuncRef_method_call_func>`, this method does not support a variable number of arguments but expects all parameters to be passed via a single :ref:`Array<class_Array>`.

----

.. _class_FuncRef_method_is_valid:

- :ref:`bool<class_bool>` **is_valid** **(** **)** |const|

Devuelve si el objeto todavía existe y tiene la función asignada.

----

.. _class_FuncRef_method_set_instance:

- void **set_instance** **(** :ref:`Object<class_Object>` instance **)**

El objeto que contiene la función referida. Este objeto debe ser de un tipo realmente heredado de :ref:`Object<class_Object>`, no de un tipo interno como :ref:`int<class_int>`, :ref:`Vector2<class_Vector2>` o :ref:`Dictionary<class_Dictionary>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
