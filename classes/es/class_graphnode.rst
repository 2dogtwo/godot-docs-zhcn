:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the GraphNode.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GraphNode:

GraphNode
=========

**Inherits:** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Un GraphNode es un contenedor con potencialmente varias ranuras de entrada y salida que permiten conexiones entre los GraphNodes. Las ranuras pueden tener tipos diferentes e incompatibles.

Descripción
----------------------

A GraphNode is a container. Each GraphNode can have several input and output slots, sometimes referred to as ports, allowing connections between GraphNodes. To add a slot to GraphNode, add any :ref:`Control<class_Control>`-derived child node to it.

After adding at least one child to GraphNode new sections will be automatically created in the Inspector called 'Slot'. When 'Slot' is expanded you will see list with index number for each slot. You can click on each of them to expand further.

In the Inspector you can enable (show) or disable (hide) slots. By default, all slots are disabled so you may not see any slots on your GraphNode initially. You can assign a type to each slot. Only slots of the same type will be able to connect to each other. You can also assign colors to slots. A tuple of input and output slots is defined for each GUI element included in the GraphNode. Input connections are on the left and output connections are on the right side of GraphNode. Only enabled slots are counted as connections.

Propiedades
----------------------

+----------------------------------------+--------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                | :ref:`comment<class_GraphNode_property_comment>`       | ``false``           |
+----------------------------------------+--------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`          | :ref:`offset<class_GraphNode_property_offset>`         | ``Vector2( 0, 0 )`` |
+----------------------------------------+--------------------------------------------------------+---------------------+
| :ref:`Overlay<enum_GraphNode_Overlay>` | :ref:`overlay<class_GraphNode_property_overlay>`       | ``0``               |
+----------------------------------------+--------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                | :ref:`resizable<class_GraphNode_property_resizable>`   | ``false``           |
+----------------------------------------+--------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                | :ref:`selected<class_GraphNode_property_selected>`     | ``false``           |
+----------------------------------------+--------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                | :ref:`show_close<class_GraphNode_property_show_close>` | ``false``           |
+----------------------------------------+--------------------------------------------------------+---------------------+
| :ref:`String<class_String>`            | :ref:`title<class_GraphNode_property_title>`           | ``""``              |
+----------------------------------------+--------------------------------------------------------+---------------------+

Métodos
--------------

+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear_all_slots<class_GraphNode_method_clear_all_slots>` **(** **)**                                                                                                                                                                                                                                                                                                                                         |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear_slot<class_GraphNode_method_clear_slot>` **(** :ref:`int<class_int>` idx **)**                                                                                                                                                                                                                                                                                                                         |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`     | :ref:`get_connection_input_color<class_GraphNode_method_get_connection_input_color>` **(** :ref:`int<class_int>` idx **)**                                                                                                                                                                                                                                                                                         |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_connection_input_count<class_GraphNode_method_get_connection_input_count>` **(** **)**                                                                                                                                                                                                                                                                                                                   |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_connection_input_position<class_GraphNode_method_get_connection_input_position>` **(** :ref:`int<class_int>` idx **)**                                                                                                                                                                                                                                                                                   |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_connection_input_type<class_GraphNode_method_get_connection_input_type>` **(** :ref:`int<class_int>` idx **)**                                                                                                                                                                                                                                                                                           |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`     | :ref:`get_connection_output_color<class_GraphNode_method_get_connection_output_color>` **(** :ref:`int<class_int>` idx **)**                                                                                                                                                                                                                                                                                       |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_connection_output_count<class_GraphNode_method_get_connection_output_count>` **(** **)**                                                                                                                                                                                                                                                                                                                 |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_connection_output_position<class_GraphNode_method_get_connection_output_position>` **(** :ref:`int<class_int>` idx **)**                                                                                                                                                                                                                                                                                 |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_connection_output_type<class_GraphNode_method_get_connection_output_type>` **(** :ref:`int<class_int>` idx **)**                                                                                                                                                                                                                                                                                         |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`     | :ref:`get_slot_color_left<class_GraphNode_method_get_slot_color_left>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                                                                                                                                                                               |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Color<class_Color>`     | :ref:`get_slot_color_right<class_GraphNode_method_get_slot_color_right>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                                                                                                                                                                             |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_slot_type_left<class_GraphNode_method_get_slot_type_left>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                                                                                                                                                                                 |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_slot_type_right<class_GraphNode_method_get_slot_type_right>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                                                                                                                                                                               |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_slot_enabled_left<class_GraphNode_method_is_slot_enabled_left>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                                                                                                                                                                             |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_slot_enabled_right<class_GraphNode_method_is_slot_enabled_right>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                                                                                                                                                                           |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_slot<class_GraphNode_method_set_slot>` **(** :ref:`int<class_int>` idx, :ref:`bool<class_bool>` enable_left, :ref:`int<class_int>` type_left, :ref:`Color<class_Color>` color_left, :ref:`bool<class_bool>` enable_right, :ref:`int<class_int>` type_right, :ref:`Color<class_Color>` color_right, :ref:`Texture<class_Texture>` custom_left=null, :ref:`Texture<class_Texture>` custom_right=null **)** |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_slot_color_left<class_GraphNode_method_set_slot_color_left>` **(** :ref:`int<class_int>` idx, :ref:`Color<class_Color>` color_left **)**                                                                                                                                                                                                                                                                 |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_slot_color_right<class_GraphNode_method_set_slot_color_right>` **(** :ref:`int<class_int>` idx, :ref:`Color<class_Color>` color_right **)**                                                                                                                                                                                                                                                              |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_slot_enabled_left<class_GraphNode_method_set_slot_enabled_left>` **(** :ref:`int<class_int>` idx, :ref:`bool<class_bool>` enable_left **)**                                                                                                                                                                                                                                                              |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_slot_enabled_right<class_GraphNode_method_set_slot_enabled_right>` **(** :ref:`int<class_int>` idx, :ref:`bool<class_bool>` enable_right **)**                                                                                                                                                                                                                                                           |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_slot_type_left<class_GraphNode_method_set_slot_type_left>` **(** :ref:`int<class_int>` idx, :ref:`int<class_int>` type_left **)**                                                                                                                                                                                                                                                                        |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_slot_type_right<class_GraphNode_method_set_slot_type_right>` **(** :ref:`int<class_int>` idx, :ref:`int<class_int>` type_right **)**                                                                                                                                                                                                                                                                     |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Propiedades del Theme
------------------------------------------

+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`       | :ref:`close_color<class_GraphNode_theme_color_close_color>`      | ``Color( 0, 0, 0, 1 )`` |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`       | :ref:`resizer_color<class_GraphNode_theme_color_resizer_color>`  | ``Color( 0, 0, 0, 1 )`` |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`       | :ref:`title_color<class_GraphNode_theme_color_title_color>`      | ``Color( 0, 0, 0, 1 )`` |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`           | :ref:`close_offset<class_GraphNode_theme_constant_close_offset>` | ``18``                  |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`           | :ref:`port_offset<class_GraphNode_theme_constant_port_offset>`   | ``3``                   |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`           | :ref:`separation<class_GraphNode_theme_constant_separation>`     | ``1``                   |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`           | :ref:`title_offset<class_GraphNode_theme_constant_title_offset>` | ``20``                  |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`Font<class_Font>`         | :ref:`title_font<class_GraphNode_theme_font_title_font>`         |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`close<class_GraphNode_theme_icon_close>`                   |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`port<class_GraphNode_theme_icon_port>`                     |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`resizer<class_GraphNode_theme_icon_resizer>`               |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`breakpoint<class_GraphNode_theme_style_breakpoint>`        |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`comment<class_GraphNode_theme_style_comment>`              |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`commentfocus<class_GraphNode_theme_style_commentfocus>`    |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`defaultfocus<class_GraphNode_theme_style_defaultfocus>`    |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`defaultframe<class_GraphNode_theme_style_defaultframe>`    |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`frame<class_GraphNode_theme_style_frame>`                  |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`position<class_GraphNode_theme_style_position>`            |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`selectedframe<class_GraphNode_theme_style_selectedframe>`  |                         |
+---------------------------------+------------------------------------------------------------------+-------------------------+

Señales
--------------

.. _class_GraphNode_signal_close_request:

- **close_request** **(** **)**

Emitido cuando se solicita el cierre del GraphNode. Ocurre al hacer clic en el botón de cierre (ver :ref:`show_close<class_GraphNode_property_show_close>`).

----

.. _class_GraphNode_signal_dragged:

- **dragged** **(** :ref:`Vector2<class_Vector2>` from, :ref:`Vector2<class_Vector2>` to **)**

Se emite cuando se arrastra el GraphNode.

----

.. _class_GraphNode_signal_offset_changed:

- **offset_changed** **(** **)**

Emitido cuando se mueve el GraphNode.

----

.. _class_GraphNode_signal_raise_request:

- **raise_request** **(** **)**

Emitido cuando se solicita que el GraphNode se muestre sobre otros. Ocurre al enfocar (hacer clic en) el GraphNode.

----

.. _class_GraphNode_signal_resize_request:

- **resize_request** **(** :ref:`Vector2<class_Vector2>` new_minsize **)**

Emitido cuando se pide que el GraphNode sea redimensionado. Ocurre al arrastrar el mango de redimensionamiento (ver :ref:`resizable<class_GraphNode_property_resizable>`).

----

.. _class_GraphNode_signal_slot_updated:

- **slot_updated** **(** :ref:`int<class_int>` idx **)**

Emitted when any GraphNode's slot is updated.

Enumeraciones
--------------------------

.. _enum_GraphNode_Overlay:

.. _class_GraphNode_constant_OVERLAY_DISABLED:

.. _class_GraphNode_constant_OVERLAY_BREAKPOINT:

.. _class_GraphNode_constant_OVERLAY_POSITION:

enum **Overlay**:

- **OVERLAY_DISABLED** = **0** --- No se muestra ninguna capa superpuesta.

- **OVERLAY_BREAKPOINT** = **1** --- Muestra la capa superpuesta establecida en la propiedad del tema ``breakpoint``.

- **OVERLAY_POSITION** = **2** --- Muestra la capa superpuesta establecida en la propiedad del tema ``position``.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_GraphNode_property_comment:

- :ref:`bool<class_bool>` **comment**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_comment(value) |
+-----------+--------------------+
| *Getter*  | is_comment()       |
+-----------+--------------------+

Si ``true``, el GraphNode es un nodo de comentario.

----

.. _class_GraphNode_property_offset:

- :ref:`Vector2<class_Vector2>` **offset**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_offset(value)   |
+-----------+---------------------+
| *Getter*  | get_offset()        |
+-----------+---------------------+

El desplazamiento del GraphNode, relativo al desplazamiento del :ref:`GraphEdit<class_GraphEdit>`.

\ **Nota:** No puedes usar la posición directamente, ya que :ref:`GraphEdit<class_GraphEdit>` es un :ref:`Container<class_Container>`.

----

.. _class_GraphNode_property_overlay:

- :ref:`Overlay<enum_GraphNode_Overlay>` **overlay**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_overlay(value) |
+-----------+--------------------+
| *Getter*  | get_overlay()      |
+-----------+--------------------+

Establece la superposición que se muestra sobre el GraphNode. Ver :ref:`Overlay<enum_GraphNode_Overlay>`.

----

.. _class_GraphNode_property_resizable:

- :ref:`bool<class_bool>` **resizable**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_resizable(value) |
+-----------+----------------------+
| *Getter*  | is_resizable()       |
+-----------+----------------------+

Si ``true``, el usuario puede cambiar el tamaño del GraphNode.

\ **Nota:** Arrastrando el manejador sólo se emitirá la señal :ref:`resize_request<class_GraphNode_signal_resize_request>`, el GraphNode necesita ser redimensionado manualmente.

----

.. _class_GraphNode_property_selected:

- :ref:`bool<class_bool>` **selected**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_selected(value) |
+-----------+---------------------+
| *Getter*  | is_selected()       |
+-----------+---------------------+

Si ``true``, se selecciona el GraphNode.

----

.. _class_GraphNode_property_show_close:

- :ref:`bool<class_bool>` **show_close**

+-----------+------------------------------+
| *Default* | ``false``                    |
+-----------+------------------------------+
| *Setter*  | set_show_close_button(value) |
+-----------+------------------------------+
| *Getter*  | is_close_button_visible()    |
+-----------+------------------------------+

Si ``true``, el botón de cerrado será visible.

\ **Nota:** Al pulsarlo sólo se emitirá la señal :ref:`close_request<class_GraphNode_signal_close_request>`, el GraphNode debe ser eliminado manualmente.

----

.. _class_GraphNode_property_title:

- :ref:`String<class_String>` **title**

+-----------+------------------+
| *Default* | ``""``           |
+-----------+------------------+
| *Setter*  | set_title(value) |
+-----------+------------------+
| *Getter*  | get_title()      |
+-----------+------------------+

El texto que se muestra en la barra de título del GraphNode.

Descripciones de Métodos
------------------------------------------------

.. _class_GraphNode_method_clear_all_slots:

- void **clear_all_slots** **(** **)**

Deshabilita todas las ranuras de entrada y salida del GraphNode.

----

.. _class_GraphNode_method_clear_slot:

- void **clear_slot** **(** :ref:`int<class_int>` idx **)**

Desactiva la ranura de entrada y salida cuyo índice es ``idx``.

----

.. _class_GraphNode_method_get_connection_input_color:

- :ref:`Color<class_Color>` **get_connection_input_color** **(** :ref:`int<class_int>` idx **)**

Returns the :ref:`Color<class_Color>` of the input connection ``idx``.

----

.. _class_GraphNode_method_get_connection_input_count:

- :ref:`int<class_int>` **get_connection_input_count** **(** **)**

Devuelve el número de ranuras de entrada (conexiones) habilitadas al GraphNode.

----

.. _class_GraphNode_method_get_connection_input_position:

- :ref:`Vector2<class_Vector2>` **get_connection_input_position** **(** :ref:`int<class_int>` idx **)**

Devuelve la posición de la conexión de entrada ``idx``.

----

.. _class_GraphNode_method_get_connection_input_type:

- :ref:`int<class_int>` **get_connection_input_type** **(** :ref:`int<class_int>` idx **)**

Devuelve el tipo de la conexión de entrada ``idx``.

----

.. _class_GraphNode_method_get_connection_output_color:

- :ref:`Color<class_Color>` **get_connection_output_color** **(** :ref:`int<class_int>` idx **)**

Returns the :ref:`Color<class_Color>` of the output connection ``idx``.

----

.. _class_GraphNode_method_get_connection_output_count:

- :ref:`int<class_int>` **get_connection_output_count** **(** **)**

Devuelve el número de ranuras de salida (conexiones) habilitadas del GraphNode.

----

.. _class_GraphNode_method_get_connection_output_position:

- :ref:`Vector2<class_Vector2>` **get_connection_output_position** **(** :ref:`int<class_int>` idx **)**

Devuelve la posición de la conexión de salida ``idx``.

----

.. _class_GraphNode_method_get_connection_output_type:

- :ref:`int<class_int>` **get_connection_output_type** **(** :ref:`int<class_int>` idx **)**

Devuelve el tipo de la conexión de salida ``idx``.

----

.. _class_GraphNode_method_get_slot_color_left:

- :ref:`Color<class_Color>` **get_slot_color_left** **(** :ref:`int<class_int>` idx **)** |const|

Returns the left (input) :ref:`Color<class_Color>` of the slot ``idx``.

----

.. _class_GraphNode_method_get_slot_color_right:

- :ref:`Color<class_Color>` **get_slot_color_right** **(** :ref:`int<class_int>` idx **)** |const|

Returns the right (output) :ref:`Color<class_Color>` of the slot ``idx``.

----

.. _class_GraphNode_method_get_slot_type_left:

- :ref:`int<class_int>` **get_slot_type_left** **(** :ref:`int<class_int>` idx **)** |const|

Returns the left (input) type of the slot ``idx``.

----

.. _class_GraphNode_method_get_slot_type_right:

- :ref:`int<class_int>` **get_slot_type_right** **(** :ref:`int<class_int>` idx **)** |const|

Returns the right (output) type of the slot ``idx``.

----

.. _class_GraphNode_method_is_slot_enabled_left:

- :ref:`bool<class_bool>` **is_slot_enabled_left** **(** :ref:`int<class_int>` idx **)** |const|

Returns ``true`` if left (input) side of the slot ``idx`` is enabled.

----

.. _class_GraphNode_method_is_slot_enabled_right:

- :ref:`bool<class_bool>` **is_slot_enabled_right** **(** :ref:`int<class_int>` idx **)** |const|

Returns ``true`` if right (output) side of the slot ``idx`` is enabled.

----

.. _class_GraphNode_method_set_slot:

- void **set_slot** **(** :ref:`int<class_int>` idx, :ref:`bool<class_bool>` enable_left, :ref:`int<class_int>` type_left, :ref:`Color<class_Color>` color_left, :ref:`bool<class_bool>` enable_right, :ref:`int<class_int>` type_right, :ref:`Color<class_Color>` color_right, :ref:`Texture<class_Texture>` custom_left=null, :ref:`Texture<class_Texture>` custom_right=null **)**

Sets properties of the slot with ID ``idx``.

If ``enable_left``/``right``, a port will appear and the slot will be able to be connected from this side.

\ ``type_left``/``right`` is an arbitrary type of the port. Only ports with the same type values can be connected.

\ ``color_left``/``right`` is the tint of the port's icon on this side.

\ ``custom_left``/``right`` is a custom texture for this side's port.

\ **Note:** This method only sets properties of the slot. To create the slot, add a :ref:`Control<class_Control>`-derived child to the GraphNode.

Individual properties can be set using one of the ``set_slot_*`` methods. You must enable at least one side of the slot to do so.

----

.. _class_GraphNode_method_set_slot_color_left:

- void **set_slot_color_left** **(** :ref:`int<class_int>` idx, :ref:`Color<class_Color>` color_left **)**

Sets the :ref:`Color<class_Color>` of the left (input) side of the slot ``idx`` to ``color_left``.

----

.. _class_GraphNode_method_set_slot_color_right:

- void **set_slot_color_right** **(** :ref:`int<class_int>` idx, :ref:`Color<class_Color>` color_right **)**

Sets the :ref:`Color<class_Color>` of the right (output) side of the slot ``idx`` to ``color_right``.

----

.. _class_GraphNode_method_set_slot_enabled_left:

- void **set_slot_enabled_left** **(** :ref:`int<class_int>` idx, :ref:`bool<class_bool>` enable_left **)**

Toggles the left (input) side of the slot ``idx``. If ``enable_left`` is ``true``, a port will appear on the left side and the slot will be able to be connected from this side.

----

.. _class_GraphNode_method_set_slot_enabled_right:

- void **set_slot_enabled_right** **(** :ref:`int<class_int>` idx, :ref:`bool<class_bool>` enable_right **)**

Toggles the right (output) side of the slot ``idx``. If ``enable_right`` is ``true``, a port will appear on the right side and the slot will be able to be connected from this side.

----

.. _class_GraphNode_method_set_slot_type_left:

- void **set_slot_type_left** **(** :ref:`int<class_int>` idx, :ref:`int<class_int>` type_left **)**

Sets the left (input) type of the slot ``idx`` to ``type_left``.

----

.. _class_GraphNode_method_set_slot_type_right:

- void **set_slot_type_right** **(** :ref:`int<class_int>` idx, :ref:`int<class_int>` type_right **)**

Sets the right (output) type of the slot ``idx`` to ``type_right``.

Theme Property Descriptions
---------------------------

.. _class_GraphNode_theme_color_close_color:

- :ref:`Color<class_Color>` **close_color**

+-----------+-------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )`` |
+-----------+-------------------------+

La modulación de color aplicada al icono del botón de cierre.

----

.. _class_GraphNode_theme_color_resizer_color:

- :ref:`Color<class_Color>` **resizer_color**

+-----------+-------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )`` |
+-----------+-------------------------+

La modulación de color aplicada al icono de redimensionamiento.

----

.. _class_GraphNode_theme_color_title_color:

- :ref:`Color<class_Color>` **title_color**

+-----------+-------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )`` |
+-----------+-------------------------+

El color del texto del título.

----

.. _class_GraphNode_theme_constant_close_offset:

- :ref:`int<class_int>` **close_offset**

+-----------+--------+
| *Default* | ``18`` |
+-----------+--------+

El desplazamiento vertical del botón de cierre.

----

.. _class_GraphNode_theme_constant_port_offset:

- :ref:`int<class_int>` **port_offset**

+-----------+-------+
| *Default* | ``3`` |
+-----------+-------+

Desplazamiento horizontal de los puertos.

----

.. _class_GraphNode_theme_constant_separation:

- :ref:`int<class_int>` **separation**

+-----------+-------+
| *Default* | ``1`` |
+-----------+-------+

La distancia vertical entre los puertos.

----

.. _class_GraphNode_theme_constant_title_offset:

- :ref:`int<class_int>` **title_offset**

+-----------+--------+
| *Default* | ``20`` |
+-----------+--------+

Desplazamiento vertical del texto del título.

----

.. _class_GraphNode_theme_font_title_font:

- :ref:`Font<class_Font>` **title_font**

Fuente usada para el texto del título.

----

.. _class_GraphNode_theme_icon_close:

- :ref:`Texture<class_Texture>` **close**

El icono del botón de cierre, visible cuando :ref:`show_close<class_GraphNode_property_show_close>` está activado.

----

.. _class_GraphNode_theme_icon_port:

- :ref:`Texture<class_Texture>` **port**

El icono utilizado para representar los puertos.

----

.. _class_GraphNode_theme_icon_resizer:

- :ref:`Texture<class_Texture>` **resizer**

El icono utilizado para el redimensionamiento, visible cuando está activado el :ref:`resizable<class_GraphNode_property_resizable>`.

----

.. _class_GraphNode_theme_style_breakpoint:

- :ref:`StyleBox<class_StyleBox>` **breakpoint**

El fondo utilizado cuando :ref:`overlay<class_GraphNode_property_overlay>` se establece en :ref:`OVERLAY_BREAKPOINT<class_GraphNode_constant_OVERLAY_BREAKPOINT>`.

----

.. _class_GraphNode_theme_style_comment:

- :ref:`StyleBox<class_StyleBox>` **comment**

El :ref:`StyleBox<class_StyleBox>` utilizado cuando el :ref:`comment<class_GraphNode_property_comment>` está activado.

----

.. _class_GraphNode_theme_style_commentfocus:

- :ref:`StyleBox<class_StyleBox>` **commentfocus**

El :ref:`StyleBox<class_StyleBox>` utilizado cuando el :ref:`comment<class_GraphNode_property_comment>` está habilitado y el ``GraphNode`` está enfocado.

----

.. _class_GraphNode_theme_style_defaultfocus:

- :ref:`StyleBox<class_StyleBox>` **defaultfocus**

----

.. _class_GraphNode_theme_style_defaultframe:

- :ref:`StyleBox<class_StyleBox>` **defaultframe**

----

.. _class_GraphNode_theme_style_frame:

- :ref:`StyleBox<class_StyleBox>` **frame**

El fondo por defecto para ``GraphNode``.

----

.. _class_GraphNode_theme_style_position:

- :ref:`StyleBox<class_StyleBox>` **position**

El fondo utilizado cuando :ref:`overlay<class_GraphNode_property_overlay>` se establece en :ref:`OVERLAY_POSITION<class_GraphNode_constant_OVERLAY_POSITION>`.

----

.. _class_GraphNode_theme_style_selectedframe:

- :ref:`StyleBox<class_StyleBox>` **selectedframe**

El fondo utilizado cuando se selecciona el ``GraphNode``.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
