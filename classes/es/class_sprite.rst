:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Sprite.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Sprite:

Sprite
======

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Nodo de sprites de propósito general.

Descripción
----------------------

Un nodo que muestra una textura 2D. La textura mostrada puede ser una región de una textura de atlas más grande, o un cuadro de una animación de hoja de sprite.

Tutoriales
--------------------

- `Instancing Demo <https://godotengine.org/asset-library/asset/148>`__

Propiedades
----------------------

+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`centered<class_Sprite_property_centered>`                     | ``true``                |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`flip_h<class_Sprite_property_flip_h>`                         | ``false``               |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`flip_v<class_Sprite_property_flip_v>`                         | ``false``               |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`         | :ref:`frame<class_Sprite_property_frame>`                           | ``0``                   |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`frame_coords<class_Sprite_property_frame_coords>`             | ``Vector2( 0, 0 )``     |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`         | :ref:`hframes<class_Sprite_property_hframes>`                       | ``1``                   |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>` | :ref:`normal_map<class_Sprite_property_normal_map>`                 |                         |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`offset<class_Sprite_property_offset>`                         | ``Vector2( 0, 0 )``     |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`region_enabled<class_Sprite_property_region_enabled>`         | ``false``               |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`region_filter_clip<class_Sprite_property_region_filter_clip>` | ``false``               |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`region_rect<class_Sprite_property_region_rect>`               | ``Rect2( 0, 0, 0, 0 )`` |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>` | :ref:`texture<class_Sprite_property_texture>`                       |                         |
+-------------------------------+---------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`         | :ref:`vframes<class_Sprite_property_vframes>`                       | ``1``                   |
+-------------------------------+---------------------------------------------------------------------+-------------------------+

Métodos
--------------

+---------------------------+-------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>` | :ref:`get_rect<class_Sprite_method_get_rect>` **(** **)** |const|                                                 |
+---------------------------+-------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`is_pixel_opaque<class_Sprite_method_is_pixel_opaque>` **(** :ref:`Vector2<class_Vector2>` pos **)** |const| |
+---------------------------+-------------------------------------------------------------------------------------------------------------------+

Señales
--------------

.. _class_Sprite_signal_frame_changed:

- **frame_changed** **(** **)**

Emitido cuando el :ref:`frame<class_Sprite_property_frame>` cambia.

----

.. _class_Sprite_signal_texture_changed:

- **texture_changed** **(** **)**

Emitido cuando la :ref:`texture<class_Sprite_property_texture>` cambia.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_Sprite_property_centered:

- :ref:`bool<class_bool>` **centered**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_centered(value) |
+-----------+---------------------+
| *Getter*  | is_centered()       |
+-----------+---------------------+

Si ``true``, la textura se centra.

----

.. _class_Sprite_property_flip_h:

- :ref:`bool<class_bool>` **flip_h**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_flip_h(value) |
+-----------+-------------------+
| *Getter*  | is_flipped_h()    |
+-----------+-------------------+

Si ``true``, la textura se voltea horizontalmente.

----

.. _class_Sprite_property_flip_v:

- :ref:`bool<class_bool>` **flip_v**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_flip_v(value) |
+-----------+-------------------+
| *Getter*  | is_flipped_v()    |
+-----------+-------------------+

Si ``true``, la textura se voltea verticalmente.

----

.. _class_Sprite_property_frame:

- :ref:`int<class_int>` **frame**

+-----------+------------------+
| *Default* | ``0``            |
+-----------+------------------+
| *Setter*  | set_frame(value) |
+-----------+------------------+
| *Getter*  | get_frame()      |
+-----------+------------------+

Current frame to display from sprite sheet. :ref:`hframes<class_Sprite_property_hframes>` or :ref:`vframes<class_Sprite_property_vframes>` must be greater than 1.

----

.. _class_Sprite_property_frame_coords:

- :ref:`Vector2<class_Vector2>` **frame_coords**

+-----------+-------------------------+
| *Default* | ``Vector2( 0, 0 )``     |
+-----------+-------------------------+
| *Setter*  | set_frame_coords(value) |
+-----------+-------------------------+
| *Getter*  | get_frame_coords()      |
+-----------+-------------------------+

Coordinates of the frame to display from sprite sheet. This is as an alias for the :ref:`frame<class_Sprite_property_frame>` property. :ref:`hframes<class_Sprite_property_hframes>` or :ref:`vframes<class_Sprite_property_vframes>` must be greater than 1.

----

.. _class_Sprite_property_hframes:

- :ref:`int<class_int>` **hframes**

+-----------+--------------------+
| *Default* | ``1``              |
+-----------+--------------------+
| *Setter*  | set_hframes(value) |
+-----------+--------------------+
| *Getter*  | get_hframes()      |
+-----------+--------------------+

El número de columnas en la hoja de sprites.

----

.. _class_Sprite_property_normal_map:

- :ref:`Texture<class_Texture>` **normal_map**

+----------+-----------------------+
| *Setter* | set_normal_map(value) |
+----------+-----------------------+
| *Getter* | get_normal_map()      |
+----------+-----------------------+

The normal map gives depth to the Sprite.

\ **Note:** Godot expects the normal map to use X+, Y-, and Z+ coordinates. See `this page <http://wiki.polycount.com/wiki/Normal_Map_Technical_Details#Common_Swizzle_Coordinates>`__ for a comparison of normal map coordinates expected by popular engines.

----

.. _class_Sprite_property_offset:

- :ref:`Vector2<class_Vector2>` **offset**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_offset(value)   |
+-----------+---------------------+
| *Getter*  | get_offset()        |
+-----------+---------------------+

El desplazamiento al dibujar de la textura.

----

.. _class_Sprite_property_region_enabled:

- :ref:`bool<class_bool>` **region_enabled**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_region(value) |
+-----------+-------------------+
| *Getter*  | is_region()       |
+-----------+-------------------+

Si ``true``, la textura se corta de una textura de atlas más grande. Ver :ref:`region_rect<class_Sprite_property_region_rect>`.

----

.. _class_Sprite_property_region_filter_clip:

- :ref:`bool<class_bool>` **region_filter_clip**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_region_filter_clip(value)   |
+-----------+---------------------------------+
| *Getter*  | is_region_filter_clip_enabled() |
+-----------+---------------------------------+

Si ``true``, los píxeles más externos se desdibujan.

----

.. _class_Sprite_property_region_rect:

- :ref:`Rect2<class_Rect2>` **region_rect**

+-----------+-------------------------+
| *Default* | ``Rect2( 0, 0, 0, 0 )`` |
+-----------+-------------------------+
| *Setter*  | set_region_rect(value)  |
+-----------+-------------------------+
| *Getter*  | get_region_rect()       |
+-----------+-------------------------+

La región de la textura del atlas a mostrar. :ref:`region_enabled<class_Sprite_property_region_enabled>` debe ser ``true``.

----

.. _class_Sprite_property_texture:

- :ref:`Texture<class_Texture>` **texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

:ref:`Texture<class_Texture>` object to draw.

----

.. _class_Sprite_property_vframes:

- :ref:`int<class_int>` **vframes**

+-----------+--------------------+
| *Default* | ``1``              |
+-----------+--------------------+
| *Setter*  | set_vframes(value) |
+-----------+--------------------+
| *Getter*  | get_vframes()      |
+-----------+--------------------+

El número de filas en la hoja de sprites.

Descripciones de Métodos
------------------------------------------------

.. _class_Sprite_method_get_rect:

- :ref:`Rect2<class_Rect2>` **get_rect** **(** **)** |const|

Returns a :ref:`Rect2<class_Rect2>` representing the Sprite's boundary in local coordinates. Can be used to detect if the Sprite was clicked. Example:

::

    func _input(event):
        if event is InputEventMouseButton and event.pressed and event.button_index == BUTTON_LEFT:
            if get_rect().has_point(to_local(event.position)):
                print("A click!")

----

.. _class_Sprite_method_is_pixel_opaque:

- :ref:`bool<class_bool>` **is_pixel_opaque** **(** :ref:`Vector2<class_Vector2>` pos **)** |const|

Devuelve ``true``, si el píxel en la posición dada es opaco y ``false`` en otro caso.

\ **Nota:** También devuelve ``false``, si la textura del sprite es ``null`` o si la posición dada es inválida.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
