:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the int.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_int:

int
===

Tipo entero interno.

Descripción
----------------------

Tipo entero de 64 bits con signo.

Puede tomar valores en el intervalo ``[-2^63, 2^63 - 1]``, es decir, ``[-9223372036854775808, 9223372036854775807]``. Si se superan esos límites, se puede supera.

\ ``int`` es un tipo de :ref:`Variant<class_Variant>`, y por lo tanto se utilizará cuando se asigne un valor entero a una :ref:`Variant<class_Variant>`. También se puede hacer cumplir con la pista del tipo ``: int``.

::

    var mi_variable = 0 # entero, valor 0.
    mi_variable += 4.2 # real, valor 4.2.
    var mi_entero: int = 1 # entero, valor 1.
    mi_entero = 4.2 # entero, valor 4, el valor entero es implicitamente transformado a 4.
    mi_entero = int("6.7") # entero, valor 6, La string es implicitamente transformada a un entero.
    
    var max_entero = 9223372036854775807
    print(max_entero) # 9223372036854775807, OK.
    max_entero += 1
    print(max_entero) # -9223372036854775808, se sobrepasa y se comienza por el menor valor posible

Métodos
--------------

+-----------------------+-------------------------------------------------------------------------------+
| :ref:`int<class_int>` | :ref:`int<class_int_method_int>` **(** :ref:`bool<class_bool>` from **)**     |
+-----------------------+-------------------------------------------------------------------------------+
| :ref:`int<class_int>` | :ref:`int<class_int_method_int>` **(** :ref:`float<class_float>` from **)**   |
+-----------------------+-------------------------------------------------------------------------------+
| :ref:`int<class_int>` | :ref:`int<class_int_method_int>` **(** :ref:`String<class_String>` from **)** |
+-----------------------+-------------------------------------------------------------------------------+

Descripciones de Métodos
------------------------------------------------

.. _class_int_method_int:

- :ref:`int<class_int>` **int** **(** :ref:`bool<class_bool>` from **)**

Transforma un valor :ref:`bool<class_bool>` a un valor entero, ``int(true)`` será igual a 1 y ``int(false)`` será igual a 0.

----

- :ref:`int<class_int>` **int** **(** :ref:`float<class_float>` from **)**

Cast a float value to an integer value, this method simply removes the number fractions (i.e. rounds ``from`` towards zero), so for example ``int(2.7)`` will be equals to 2, ``int(0.1)`` will be equals to 0 and ``int(-2.7)`` will be equals to -2. This operation is also called truncation.

----

- :ref:`int<class_int>` **int** **(** :ref:`String<class_String>` from **)**

Transforma un valor :ref:`String<class_String>` a un valor entero, este método es un analizador de enteros de una cadena, por lo que llamar a este método con una cadena de enteros inválida devolverá 0, una cadena válida será algo así como ``'1.7'``. Este método ignorará todos los caracteres no numéricos, por lo que al llamar a ``int('1e3')`` devolverá 13.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
