:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the AnimationNodeBlendTree.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AnimationNodeBlendTree:

AnimationNodeBlendTree
======================

**Inherits:** :ref:`AnimationRootNode<class_AnimationRootNode>` **<** :ref:`AnimationNode<class_AnimationNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

:ref:`AnimationTree<class_AnimationTree>` es un recurso de nodos que contiene muchos nodos de tipo mezcla.

Descripción
----------------------

Este nodo puede contener un subárbol de cualquier otro tipo de nodos de mezcla, como mix, blend2, blend3, one shot, etc. Esta es una de los nodos raíces más utilizados.

Tutoriales
--------------------

- :doc:`../tutorials/animation/animation_tree`

Propiedades
----------------------

+-------------------------------+-------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`graph_offset<class_AnimationNodeBlendTree_property_graph_offset>` | ``Vector2( 0, 0 )`` |
+-------------------------------+-------------------------------------------------------------------------+---------------------+

Métodos
--------------

+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`add_node<class_AnimationNodeBlendTree_method_add_node>` **(** :ref:`String<class_String>` name, :ref:`AnimationNode<class_AnimationNode>` node, :ref:`Vector2<class_Vector2>` position=Vector2( 0, 0 ) **)** |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`connect_node<class_AnimationNodeBlendTree_method_connect_node>` **(** :ref:`String<class_String>` input_node, :ref:`int<class_int>` input_index, :ref:`String<class_String>` output_node **)**               |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`disconnect_node<class_AnimationNodeBlendTree_method_disconnect_node>` **(** :ref:`String<class_String>` input_node, :ref:`int<class_int>` input_index **)**                                                  |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`AnimationNode<class_AnimationNode>` | :ref:`get_node<class_AnimationNodeBlendTree_method_get_node>` **(** :ref:`String<class_String>` name **)** |const|                                                                                                 |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`             | :ref:`get_node_position<class_AnimationNodeBlendTree_method_get_node_position>` **(** :ref:`String<class_String>` name **)** |const|                                                                               |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                   | :ref:`has_node<class_AnimationNodeBlendTree_method_has_node>` **(** :ref:`String<class_String>` name **)** |const|                                                                                                 |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`remove_node<class_AnimationNodeBlendTree_method_remove_node>` **(** :ref:`String<class_String>` name **)**                                                                                                   |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`rename_node<class_AnimationNodeBlendTree_method_rename_node>` **(** :ref:`String<class_String>` name, :ref:`String<class_String>` new_name **)**                                                             |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`set_node_position<class_AnimationNodeBlendTree_method_set_node_position>` **(** :ref:`String<class_String>` name, :ref:`Vector2<class_Vector2>` position **)**                                               |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Constantes
--------------------

.. _class_AnimationNodeBlendTree_constant_CONNECTION_OK:

.. _class_AnimationNodeBlendTree_constant_CONNECTION_ERROR_NO_INPUT:

.. _class_AnimationNodeBlendTree_constant_CONNECTION_ERROR_NO_INPUT_INDEX:

.. _class_AnimationNodeBlendTree_constant_CONNECTION_ERROR_NO_OUTPUT:

.. _class_AnimationNodeBlendTree_constant_CONNECTION_ERROR_SAME_NODE:

.. _class_AnimationNodeBlendTree_constant_CONNECTION_ERROR_CONNECTION_EXISTS:

- **CONNECTION_OK** = **0** --- La conexion tuvo éxito.

- **CONNECTION_ERROR_NO_INPUT** = **1** --- El nodo entrada es ``null``.

- **CONNECTION_ERROR_NO_INPUT_INDEX** = **2** --- El puerto de entrada especificado está fuera de rango.

- **CONNECTION_ERROR_NO_OUTPUT** = **3** --- El nodo salida es ``null``.

- **CONNECTION_ERROR_SAME_NODE** = **4** --- Los nodos de entrada y salida son los mismos.

- **CONNECTION_ERROR_CONNECTION_EXISTS** = **5** --- La conexion ya existe.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_AnimationNodeBlendTree_property_graph_offset:

- :ref:`Vector2<class_Vector2>` **graph_offset**

+-----------+-------------------------+
| *Default* | ``Vector2( 0, 0 )``     |
+-----------+-------------------------+
| *Setter*  | set_graph_offset(value) |
+-----------+-------------------------+
| *Getter*  | get_graph_offset()      |
+-----------+-------------------------+

El dezplazamiento global de todos los subnodos.

Descripciones de Métodos
------------------------------------------------

.. _class_AnimationNodeBlendTree_method_add_node:

- void **add_node** **(** :ref:`String<class_String>` name, :ref:`AnimationNode<class_AnimationNode>` node, :ref:`Vector2<class_Vector2>` position=Vector2( 0, 0 ) **)**

Añade un :ref:`AnimationNode<class_AnimationNode>` en la\ ``position`` dada. El ``name`` se utiliza para identificar el subnodo creado a posteriori.

----

.. _class_AnimationNodeBlendTree_method_connect_node:

- void **connect_node** **(** :ref:`String<class_String>` input_node, :ref:`int<class_int>` input_index, :ref:`String<class_String>` output_node **)**

Conecta la salida de un :ref:`AnimationNode<class_AnimationNode>` como entrada de otro :ref:`AnimationNode<class_AnimationNode>`, en el puerto de entrada especificado por ``input_index``.

----

.. _class_AnimationNodeBlendTree_method_disconnect_node:

- void **disconnect_node** **(** :ref:`String<class_String>` input_node, :ref:`int<class_int>` input_index **)**

Desconecta el nodo conectado a la entrada especificada.

----

.. _class_AnimationNodeBlendTree_method_get_node:

- :ref:`AnimationNode<class_AnimationNode>` **get_node** **(** :ref:`String<class_String>` name **)** |const|

Devuelve el subnodo con el ``name`` especificado.

----

.. _class_AnimationNodeBlendTree_method_get_node_position:

- :ref:`Vector2<class_Vector2>` **get_node_position** **(** :ref:`String<class_String>` name **)** |const|

Devuelve la posición del subnodo con el ``name`` especificado.

----

.. _class_AnimationNodeBlendTree_method_has_node:

- :ref:`bool<class_bool>` **has_node** **(** :ref:`String<class_String>` name **)** |const|

Devuelve ``true`` si existe un subnodo con el ``name`` especificado.

----

.. _class_AnimationNodeBlendTree_method_remove_node:

- void **remove_node** **(** :ref:`String<class_String>` name **)**

Elimina un subnodo.

----

.. _class_AnimationNodeBlendTree_method_rename_node:

- void **rename_node** **(** :ref:`String<class_String>` name, :ref:`String<class_String>` new_name **)**

Cambia el nombre de un subnodo.

----

.. _class_AnimationNodeBlendTree_method_set_node_position:

- void **set_node_position** **(** :ref:`String<class_String>` name, :ref:`Vector2<class_Vector2>` position **)**

Modifica la posición de un subnodo.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
