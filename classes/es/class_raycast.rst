:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RayCast.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RayCast:

RayCast
=======

**Inherits:** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Busca el objeto más cercano que intersecta un rayo.

Descripción
----------------------

A RayCast represents a line from its origin to its destination position, ``cast_to``. It is used to query the 3D space in order to find the closest object along the path of the ray.

RayCast can ignore some objects by adding them to the exception list via ``add_exception`` or by setting proper filtering with collision layers and masks.

RayCast can be configured to report collisions with :ref:`Area<class_Area>`\ s (:ref:`collide_with_areas<class_RayCast_property_collide_with_areas>`) and/or :ref:`PhysicsBody<class_PhysicsBody>`\ s (:ref:`collide_with_bodies<class_RayCast_property_collide_with_bodies>`).

Only enabled raycasts will be able to query the space and report collisions.

RayCast calculates intersection every physics frame (see :ref:`Node<class_Node>`), and the result is cached so it can be used later until the next frame. If multiple queries are required between physics frames (or during the same frame), use :ref:`force_raycast_update<class_RayCast_method_force_raycast_update>` after adjusting the raycast.

Tutoriales
--------------------

- :doc:`Ray-casting <../tutorials/physics/ray-casting>`

- `3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__

Propiedades
----------------------

+-------------------------------+----------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`cast_to<class_RayCast_property_cast_to>`                                   | ``Vector3( 0, -1, 0 )`` |
+-------------------------------+----------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`collide_with_areas<class_RayCast_property_collide_with_areas>`             | ``false``               |
+-------------------------------+----------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`collide_with_bodies<class_RayCast_property_collide_with_bodies>`           | ``true``                |
+-------------------------------+----------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`         | :ref:`collision_mask<class_RayCast_property_collision_mask>`                     | ``1``                   |
+-------------------------------+----------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`     | :ref:`debug_shape_custom_color<class_RayCast_property_debug_shape_custom_color>` | ``Color( 0, 0, 0, 1 )`` |
+-------------------------------+----------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`     | :ref:`debug_shape_thickness<class_RayCast_property_debug_shape_thickness>`       | ``2.0``                 |
+-------------------------------+----------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`enabled<class_RayCast_property_enabled>`                                   | ``false``               |
+-------------------------------+----------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`       | :ref:`exclude_parent<class_RayCast_property_exclude_parent>`                     | ``true``                |
+-------------------------------+----------------------------------------------------------------------------------+-------------------------+

Métodos
--------------

+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`add_exception<class_RayCast_method_add_exception>` **(** :ref:`Object<class_Object>` node **)**                                           |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`add_exception_rid<class_RayCast_method_add_exception_rid>` **(** :ref:`RID<class_RID>` rid **)**                                          |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear_exceptions<class_RayCast_method_clear_exceptions>` **(** **)**                                                                      |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`force_raycast_update<class_RayCast_method_force_raycast_update>` **(** **)**                                                              |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Object<class_Object>`   | :ref:`get_collider<class_RayCast_method_get_collider>` **(** **)** |const|                                                                      |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_collider_shape<class_RayCast_method_get_collider_shape>` **(** **)** |const|                                                          |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_collision_mask_bit<class_RayCast_method_get_collision_mask_bit>` **(** :ref:`int<class_int>` bit **)** |const|                        |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`get_collision_normal<class_RayCast_method_get_collision_normal>` **(** **)** |const|                                                      |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`get_collision_point<class_RayCast_method_get_collision_point>` **(** **)** |const|                                                        |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_colliding<class_RayCast_method_is_colliding>` **(** **)** |const|                                                                      |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`remove_exception<class_RayCast_method_remove_exception>` **(** :ref:`Object<class_Object>` node **)**                                     |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`remove_exception_rid<class_RayCast_method_remove_exception_rid>` **(** :ref:`RID<class_RID>` rid **)**                                    |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_collision_mask_bit<class_RayCast_method_set_collision_mask_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)** |
+-------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_RayCast_property_cast_to:

- :ref:`Vector3<class_Vector3>` **cast_to**

+-----------+-------------------------+
| *Default* | ``Vector3( 0, -1, 0 )`` |
+-----------+-------------------------+
| *Setter*  | set_cast_to(value)      |
+-----------+-------------------------+
| *Getter*  | get_cast_to()           |
+-----------+-------------------------+

El punto de destino del rayo, relativo a la ``position`` del RayCast.

----

.. _class_RayCast_property_collide_with_areas:

- :ref:`bool<class_bool>` **collide_with_areas**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_collide_with_areas(value)   |
+-----------+---------------------------------+
| *Getter*  | is_collide_with_areas_enabled() |
+-----------+---------------------------------+

If ``true``, collision with :ref:`Area<class_Area>`\ s will be reported.

----

.. _class_RayCast_property_collide_with_bodies:

- :ref:`bool<class_bool>` **collide_with_bodies**

+-----------+----------------------------------+
| *Default* | ``true``                         |
+-----------+----------------------------------+
| *Setter*  | set_collide_with_bodies(value)   |
+-----------+----------------------------------+
| *Getter*  | is_collide_with_bodies_enabled() |
+-----------+----------------------------------+

If ``true``, collision with :ref:`PhysicsBody<class_PhysicsBody>`\ s will be reported.

----

.. _class_RayCast_property_collision_mask:

- :ref:`int<class_int>` **collision_mask**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_collision_mask(value) |
+-----------+---------------------------+
| *Getter*  | get_collision_mask()      |
+-----------+---------------------------+

The ray's collision mask. Only objects in at least one collision layer enabled in the mask will be detected. See `Collision layers and masks <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_RayCast_property_debug_shape_custom_color:

- :ref:`Color<class_Color>` **debug_shape_custom_color**

+-----------+-------------------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )``             |
+-----------+-------------------------------------+
| *Setter*  | set_debug_shape_custom_color(value) |
+-----------+-------------------------------------+
| *Getter*  | get_debug_shape_custom_color()      |
+-----------+-------------------------------------+

The custom color to use to draw the shape in the editor and at run-time if **Visible Collision Shapes** is enabled in the **Debug** menu. This color will be highlighted at run-time if the ``RayCast`` is colliding with something.

If set to ``Color(0.0, 0.0, 0.0)`` (by default), the color set in :ref:`ProjectSettings.debug/shapes/collision/shape_color<class_ProjectSettings_property_debug/shapes/collision/shape_color>` is used.

----

.. _class_RayCast_property_debug_shape_thickness:

- :ref:`float<class_float>` **debug_shape_thickness**

+-----------+----------------------------------+
| *Default* | ``2.0``                          |
+-----------+----------------------------------+
| *Setter*  | set_debug_shape_thickness(value) |
+-----------+----------------------------------+
| *Getter*  | get_debug_shape_thickness()      |
+-----------+----------------------------------+

If set to ``1``, a line is used as the debug shape. Otherwise, a truncated pyramid is drawn to represent the ``RayCast``. Requires **Visible Collision Shapes** to be enabled in the **Debug** menu for the debug shape to be visible at run-time.

----

.. _class_RayCast_property_enabled:

- :ref:`bool<class_bool>` **enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_enabled(value) |
+-----------+--------------------+
| *Getter*  | is_enabled()       |
+-----------+--------------------+

Si ``true``, se informará de las colisiones.

----

.. _class_RayCast_property_exclude_parent:

- :ref:`bool<class_bool>` **exclude_parent**

+-----------+--------------------------------+
| *Default* | ``true``                       |
+-----------+--------------------------------+
| *Setter*  | set_exclude_parent_body(value) |
+-----------+--------------------------------+
| *Getter*  | get_exclude_parent_body()      |
+-----------+--------------------------------+

If ``true``, collisions will be ignored for this RayCast's immediate parent.

Descripciones de Métodos
------------------------------------------------

.. _class_RayCast_method_add_exception:

- void **add_exception** **(** :ref:`Object<class_Object>` node **)**

Añade una excepción de colisión para que el rayo no informe de las colisiones con el nodo especificado.

----

.. _class_RayCast_method_add_exception_rid:

- void **add_exception_rid** **(** :ref:`RID<class_RID>` rid **)**

Añade una excepción de colisión para que el rayo no reporte colisiones con el :ref:`RID<class_RID>` especificado.

----

.. _class_RayCast_method_clear_exceptions:

- void **clear_exceptions** **(** **)**

Elimina todas las excepciones de colisión para este rayo.

----

.. _class_RayCast_method_force_raycast_update:

- void **force_raycast_update** **(** **)**

Updates the collision information for the ray.

Use this method to update the collision information immediately instead of waiting for the next ``_physics_process`` call, for example if the ray or its parent has changed state.

\ **Note:** ``enabled`` is not required for this to work.

----

.. _class_RayCast_method_get_collider:

- :ref:`Object<class_Object>` **get_collider** **(** **)** |const|

Devuelve el primer objeto que el rayo intersecta, o ``null`` si no hay ningún objeto que intersecte el rayo (es decir, :ref:`is_colliding<class_RayCast_method_is_colliding>` devuelve ``false``).

----

.. _class_RayCast_method_get_collider_shape:

- :ref:`int<class_int>` **get_collider_shape** **(** **)** |const|

Devuelve el ID de la forma del primer objeto que el rayo intersecta, o ``0`` si no hay ningún objeto que intersecte el rayo (es decir, :ref:`is_colliding<class_RayCast_method_is_colliding>` devuelve ``false``).

----

.. _class_RayCast_method_get_collision_mask_bit:

- :ref:`bool<class_bool>` **get_collision_mask_bit** **(** :ref:`int<class_int>` bit **)** |const|

Devuelve ``true`` si el índice de bits pasado está activado.

\ **Nota:** Los índices de bits van de 0 a 19.

----

.. _class_RayCast_method_get_collision_normal:

- :ref:`Vector3<class_Vector3>` **get_collision_normal** **(** **)** |const|

Devuelve la normalidad de la forma del objeto que se intersecta en el punto de colisión.

----

.. _class_RayCast_method_get_collision_point:

- :ref:`Vector3<class_Vector3>` **get_collision_point** **(** **)** |const|

Devuelve el punto de colisión en el que el rayo intersecta el objeto más cercano.

\ **Nota:** Este punto está en el sistema de coordenadas **global**.

----

.. _class_RayCast_method_is_colliding:

- :ref:`bool<class_bool>` **is_colliding** **(** **)** |const|

Devuelve si algún objeto se cruza con el vector del rayo (considerando la longitud del vector).

----

.. _class_RayCast_method_remove_exception:

- void **remove_exception** **(** :ref:`Object<class_Object>` node **)**

Elimina una excepción de colisión para que el rayo informe de las colisiones con el nodo especificado.

----

.. _class_RayCast_method_remove_exception_rid:

- void **remove_exception_rid** **(** :ref:`RID<class_RID>` rid **)**

Elimina una excepción de colisión para que el rayo reporte colisiones con el :ref:`RID<class_RID>` especificado.

----

.. _class_RayCast_method_set_collision_mask_bit:

- void **set_collision_mask_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

Establece el índice de bits pasado al ``value`` pasado.

\ **Nota:** Los índices de bits van de 0 a 19.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
