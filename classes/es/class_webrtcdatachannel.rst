:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the WebRTCDataChannel.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_WebRTCDataChannel:

WebRTCDataChannel
=================

**Inherits:** :ref:`PacketPeer<class_PacketPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`WebRTCDataChannelGDNative<class_WebRTCDataChannelGDNative>`



Propiedades
----------------------

+----------------------------------------------------+----------------------------------------------------------------+-------+
| :ref:`WriteMode<enum_WebRTCDataChannel_WriteMode>` | :ref:`write_mode<class_WebRTCDataChannel_property_write_mode>` | ``1`` |
+----------------------------------------------------+----------------------------------------------------------------+-------+

Métodos
--------------

+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| void                                                     | :ref:`close<class_WebRTCDataChannel_method_close>` **(** **)**                                               |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                    | :ref:`get_buffered_amount<class_WebRTCDataChannel_method_get_buffered_amount>` **(** **)** |const|           |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                    | :ref:`get_id<class_WebRTCDataChannel_method_get_id>` **(** **)** |const|                                     |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                              | :ref:`get_label<class_WebRTCDataChannel_method_get_label>` **(** **)** |const|                               |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                    | :ref:`get_max_packet_life_time<class_WebRTCDataChannel_method_get_max_packet_life_time>` **(** **)** |const| |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                    | :ref:`get_max_retransmits<class_WebRTCDataChannel_method_get_max_retransmits>` **(** **)** |const|           |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                              | :ref:`get_protocol<class_WebRTCDataChannel_method_get_protocol>` **(** **)** |const|                         |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`ChannelState<enum_WebRTCDataChannel_ChannelState>` | :ref:`get_ready_state<class_WebRTCDataChannel_method_get_ready_state>` **(** **)** |const|                   |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`is_negotiated<class_WebRTCDataChannel_method_is_negotiated>` **(** **)** |const|                       |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`is_ordered<class_WebRTCDataChannel_method_is_ordered>` **(** **)** |const|                             |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                    | :ref:`poll<class_WebRTCDataChannel_method_poll>` **(** **)**                                                 |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`was_string_packet<class_WebRTCDataChannel_method_was_string_packet>` **(** **)** |const|               |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+

Enumeraciones
--------------------------

.. _enum_WebRTCDataChannel_WriteMode:

.. _class_WebRTCDataChannel_constant_WRITE_MODE_TEXT:

.. _class_WebRTCDataChannel_constant_WRITE_MODE_BINARY:

enum **WriteMode**:

- **WRITE_MODE_TEXT** = **0** --- Indica al canal que mande los datos como texto. Un compañero externo (non-Godot) lo recibiría como una cadena.

- **WRITE_MODE_BINARY** = **1** --- Le dice al canal que envíe datos por este canal en binario. Un par externo (no Godot) recibiría esto como un buffer o blob del array.

----

.. _enum_WebRTCDataChannel_ChannelState:

.. _class_WebRTCDataChannel_constant_STATE_CONNECTING:

.. _class_WebRTCDataChannel_constant_STATE_OPEN:

.. _class_WebRTCDataChannel_constant_STATE_CLOSING:

.. _class_WebRTCDataChannel_constant_STATE_CLOSED:

enum **ChannelState**:

- **STATE_CONNECTING** = **0** --- El canal fue creado, pero todavía está tratando de conectarse.

- **STATE_OPEN** = **1** --- El canal está actualmente abierto, y los datos pueden fluir sobre él.

- **STATE_CLOSING** = **2** --- El canal se está cerrando, no se aceptarán nuevos mensajes, pero los que ya están en cola serán eliminados.

- **STATE_CLOSED** = **3** --- El canal se cerró, o la conexión falló.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_WebRTCDataChannel_property_write_mode:

- :ref:`WriteMode<enum_WebRTCDataChannel_WriteMode>` **write_mode**

+-----------+-----------------------+
| *Default* | ``1``                 |
+-----------+-----------------------+
| *Setter*  | set_write_mode(value) |
+-----------+-----------------------+
| *Getter*  | get_write_mode()      |
+-----------+-----------------------+

Modo de transferencia a usar cuando se mande el paquete de salido. Puede ser texto o binario.

Descripciones de Métodos
------------------------------------------------

.. _class_WebRTCDataChannel_method_close:

- void **close** **(** **)**

Cierra este canal de datos, notificando al otro par.

----

.. _class_WebRTCDataChannel_method_get_buffered_amount:

- :ref:`int<class_int>` **get_buffered_amount** **(** **)** |const|

Returns the number of bytes currently queued to be sent over this channel.

----

.. _class_WebRTCDataChannel_method_get_id:

- :ref:`int<class_int>` **get_id** **(** **)** |const|

Devuelve el id asignado a este canal durante la creación (o auto-asignado durante la negociación).

Si el canal no se negocia fuera de banda, el id sólo estará disponible después de que se establezca la conexión (devolverá ``65535`` hasta entonces).

----

.. _class_WebRTCDataChannel_method_get_label:

- :ref:`String<class_String>` **get_label** **(** **)** |const|

Devuelve la etiqueta asignada al canal durante su creación.

----

.. _class_WebRTCDataChannel_method_get_max_packet_life_time:

- :ref:`int<class_int>` **get_max_packet_life_time** **(** **)** |const|

Devuelve el valor ``maxPacketLifeTime`` asignado a este canal durante la creación.

Será ``65535`` si no se especifica.

----

.. _class_WebRTCDataChannel_method_get_max_retransmits:

- :ref:`int<class_int>` **get_max_retransmits** **(** **)** |const|

Devuelve el valor ``maxRetransmits`` asignado a este canal durante la creación.

Será ``65535`` si no se especifica.

----

.. _class_WebRTCDataChannel_method_get_protocol:

- :ref:`String<class_String>` **get_protocol** **(** **)** |const|

Devuelve el sub-protocolo asignado a este canal durante la creación. Una string vacía si no se especifica.

----

.. _class_WebRTCDataChannel_method_get_ready_state:

- :ref:`ChannelState<enum_WebRTCDataChannel_ChannelState>` **get_ready_state** **(** **)** |const|

Devuelve el estado actual del canal, ver :ref:`ChannelState<enum_WebRTCDataChannel_ChannelState>`.

----

.. _class_WebRTCDataChannel_method_is_negotiated:

- :ref:`bool<class_bool>` **is_negotiated** **(** **)** |const|

Devuelve ``true`` si este canal fue creado con una configuración fuera de banda.

----

.. _class_WebRTCDataChannel_method_is_ordered:

- :ref:`bool<class_bool>` **is_ordered** **(** **)** |const|

Devuelve ``true`` si este canal fue creado con el pedido activado (por defecto).

----

.. _class_WebRTCDataChannel_method_poll:

- :ref:`Error<enum_@GlobalScope_Error>` **poll** **(** **)**

Reservado, pero sin uso de momento.

----

.. _class_WebRTCDataChannel_method_was_string_packet:

- :ref:`bool<class_bool>` **was_string_packet** **(** **)** |const|

Devuelve ``true`` si el último paquete recibido se transfirió como texto. Ver :ref:`write_mode<class_WebRTCDataChannel_property_write_mode>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
