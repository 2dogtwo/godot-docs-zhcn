:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the GridMap.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GridMap:

GridMap
=======

**Inherits:** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Nodo para mapas en 3D basados en tiles.

Descripción
----------------------

GridMap lets you place meshes on a grid interactively. It works both from the editor and from scripts, which can help you create in-game level editors.

GridMaps use a :ref:`MeshLibrary<class_MeshLibrary>` which contains a list of tiles. Each tile is a mesh with materials plus optional collision and navigation shapes.

A GridMap contains a collection of cells. Each grid cell refers to a tile in the :ref:`MeshLibrary<class_MeshLibrary>`. All cells in the map have the same dimensions.

Internally, a GridMap is split into a sparse collection of octants for efficient rendering and physics processing. Every octant has the same dimensions and can contain several cells.

\ **Note:** GridMap doesn't extend :ref:`VisualInstance<class_VisualInstance>` and therefore can't be hidden or cull masked based on :ref:`VisualInstance.layers<class_VisualInstance_property_layers>`. If you make a light not affect the first layer, the whole GridMap won't be lit by the light in question.

Tutoriales
--------------------

- :doc:`Using gridmaps <../tutorials/3d/using_gridmaps>`

- `3D Platformer Demo <https://godotengine.org/asset-library/asset/125>`__

- `3D Kinematic Character Demo <https://godotengine.org/asset-library/asset/126>`__

Propiedades
----------------------

+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`bool<class_bool>`               | :ref:`cell_center_x<class_GridMap_property_cell_center_x>`           | ``true``               |
+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`bool<class_bool>`               | :ref:`cell_center_y<class_GridMap_property_cell_center_y>`           | ``true``               |
+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`bool<class_bool>`               | :ref:`cell_center_z<class_GridMap_property_cell_center_z>`           | ``true``               |
+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`int<class_int>`                 | :ref:`cell_octant_size<class_GridMap_property_cell_octant_size>`     | ``8``                  |
+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`float<class_float>`             | :ref:`cell_scale<class_GridMap_property_cell_scale>`                 | ``1.0``                |
+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`Vector3<class_Vector3>`         | :ref:`cell_size<class_GridMap_property_cell_size>`                   | ``Vector3( 2, 2, 2 )`` |
+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`int<class_int>`                 | :ref:`collision_layer<class_GridMap_property_collision_layer>`       | ``1``                  |
+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`int<class_int>`                 | :ref:`collision_mask<class_GridMap_property_collision_mask>`         | ``1``                  |
+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`MeshLibrary<class_MeshLibrary>` | :ref:`mesh_library<class_GridMap_property_mesh_library>`             |                        |
+---------------------------------------+----------------------------------------------------------------------+------------------------+
| :ref:`bool<class_bool>`               | :ref:`use_in_baked_light<class_GridMap_property_use_in_baked_light>` | ``false``              |
+---------------------------------------+----------------------------------------------------------------------+------------------------+

Métodos
--------------

+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear<class_GridMap_method_clear>` **(** **)**                                                                                                                                                            |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear_baked_meshes<class_GridMap_method_clear_baked_meshes>` **(** **)**                                                                                                                                  |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`         | :ref:`get_bake_mesh_instance<class_GridMap_method_get_bake_mesh_instance>` **(** :ref:`int<class_int>` idx **)**                                                                                                |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`     | :ref:`get_bake_meshes<class_GridMap_method_get_bake_meshes>` **(** **)**                                                                                                                                        |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_cell_item<class_GridMap_method_get_cell_item>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z **)** |const|                                                          |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_cell_item_orientation<class_GridMap_method_get_cell_item_orientation>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z **)** |const|                                  |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_collision_layer_bit<class_GridMap_method_get_collision_layer_bit>` **(** :ref:`int<class_int>` bit **)** |const|                                                                                      |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_collision_mask_bit<class_GridMap_method_get_collision_mask_bit>` **(** :ref:`int<class_int>` bit **)** |const|                                                                                        |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`     | :ref:`get_meshes<class_GridMap_method_get_meshes>` **(** **)**                                                                                                                                                  |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`     | :ref:`get_used_cells<class_GridMap_method_get_used_cells>` **(** **)** |const|                                                                                                                                  |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`make_baked_meshes<class_GridMap_method_make_baked_meshes>` **(** :ref:`bool<class_bool>` gen_lightmap_uv=false, :ref:`float<class_float>` lightmap_uv_texel_size=0.1 **)**                                |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`map_to_world<class_GridMap_method_map_to_world>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z **)** |const|                                                            |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`resource_changed<class_GridMap_method_resource_changed>` **(** :ref:`Resource<class_Resource>` resource **)**                                                                                             |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_cell_item<class_GridMap_method_set_cell_item>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z, :ref:`int<class_int>` item, :ref:`int<class_int>` orientation=0 **)** |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_clip<class_GridMap_method_set_clip>` **(** :ref:`bool<class_bool>` enabled, :ref:`bool<class_bool>` clipabove=true, :ref:`int<class_int>` floor=0, Vector3.Axis axis=0 **)**                          |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_collision_layer_bit<class_GridMap_method_set_collision_layer_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**                                                               |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_collision_mask_bit<class_GridMap_method_set_collision_mask_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**                                                                 |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`world_to_map<class_GridMap_method_world_to_map>` **(** :ref:`Vector3<class_Vector3>` pos **)** |const|                                                                                                    |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Señales
--------------

.. _class_GridMap_signal_cell_size_changed:

- **cell_size_changed** **(** :ref:`Vector3<class_Vector3>` cell_size **)**

Emitido cuando :ref:`cell_size<class_GridMap_property_cell_size>` cambia.

Constantes
--------------------

.. _class_GridMap_constant_INVALID_CELL_ITEM:

- **INVALID_CELL_ITEM** = **-1** --- Elemento celular inválido que puede ser usado en :ref:`set_cell_item<class_GridMap_method_set_cell_item>` para borrar células (o representar una célula vacía en :ref:`get_cell_item<class_GridMap_method_get_cell_item>`).

Descripciones de Propiedades
--------------------------------------------------------

.. _class_GridMap_property_cell_center_x:

- :ref:`bool<class_bool>` **cell_center_x**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_center_x(value) |
+-----------+---------------------+
| *Getter*  | get_center_x()      |
+-----------+---------------------+

Si ``true``, los elementos de la cuadrícula se centran en el eje X.

----

.. _class_GridMap_property_cell_center_y:

- :ref:`bool<class_bool>` **cell_center_y**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_center_y(value) |
+-----------+---------------------+
| *Getter*  | get_center_y()      |
+-----------+---------------------+

Si ``true``, los elementos de la cuadrícula se centran en el eje Y.

----

.. _class_GridMap_property_cell_center_z:

- :ref:`bool<class_bool>` **cell_center_z**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_center_z(value) |
+-----------+---------------------+
| *Getter*  | get_center_z()      |
+-----------+---------------------+

Si ``true``, los elementos de la cuadrícula se centran en el eje Z.

----

.. _class_GridMap_property_cell_octant_size:

- :ref:`int<class_int>` **cell_octant_size**

+-----------+------------------------+
| *Default* | ``8``                  |
+-----------+------------------------+
| *Setter*  | set_octant_size(value) |
+-----------+------------------------+
| *Getter*  | get_octant_size()      |
+-----------+------------------------+

El tamaño de cada octante medido en número de celdas. Esto se aplica a los tres ejes.

----

.. _class_GridMap_property_cell_scale:

- :ref:`float<class_float>` **cell_scale**

+-----------+-----------------------+
| *Default* | ``1.0``               |
+-----------+-----------------------+
| *Setter*  | set_cell_scale(value) |
+-----------+-----------------------+
| *Getter*  | get_cell_scale()      |
+-----------+-----------------------+

La escala de los elementos de celda.

Esto no afecta al tamaño de las celdas de la cuadrícula en sí, sólo a los ítems en ellas. Esto puede ser usado para hacer que los elementos de la celda se superpongan a sus vecinos.

----

.. _class_GridMap_property_cell_size:

- :ref:`Vector3<class_Vector3>` **cell_size**

+-----------+------------------------+
| *Default* | ``Vector3( 2, 2, 2 )`` |
+-----------+------------------------+
| *Setter*  | set_cell_size(value)   |
+-----------+------------------------+
| *Getter*  | get_cell_size()        |
+-----------+------------------------+

Las dimensiones de las celdas de rejilla.

Esto no afecta al tamaño de las mallas. Ver :ref:`cell_scale<class_GridMap_property_cell_scale>`.

----

.. _class_GridMap_property_collision_layer:

- :ref:`int<class_int>` **collision_layer**

+-----------+----------------------------+
| *Default* | ``1``                      |
+-----------+----------------------------+
| *Setter*  | set_collision_layer(value) |
+-----------+----------------------------+
| *Getter*  | get_collision_layer()      |
+-----------+----------------------------+

Las capas físicas en las que se encuentra este GridMap.

Los GridMaps actúan como cuerpos estáticos, lo que significa que no son afectados por la gravedad u otras fuerzas. Sólo afectan a otros cuerpos físicos que colisionan con ellos.

----

.. _class_GridMap_property_collision_mask:

- :ref:`int<class_int>` **collision_mask**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_collision_mask(value) |
+-----------+---------------------------+
| *Getter*  | get_collision_mask()      |
+-----------+---------------------------+

The physics layers this GridMap detects collisions in. See `Collision layers and masks <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_GridMap_property_mesh_library:

- :ref:`MeshLibrary<class_MeshLibrary>` **mesh_library**

+----------+-------------------------+
| *Setter* | set_mesh_library(value) |
+----------+-------------------------+
| *Getter* | get_mesh_library()      |
+----------+-------------------------+

La :ref:`MeshLibrary<class_MeshLibrary>` asignada.

----

.. _class_GridMap_property_use_in_baked_light:

- :ref:`bool<class_bool>` **use_in_baked_light**

+-----------+-------------------------------+
| *Default* | ``false``                     |
+-----------+-------------------------------+
| *Setter*  | set_use_in_baked_light(value) |
+-----------+-------------------------------+
| *Getter*  | get_use_in_baked_light()      |
+-----------+-------------------------------+

Controls whether this GridMap will be baked in a :ref:`BakedLightmap<class_BakedLightmap>` or not.

Descripciones de Métodos
------------------------------------------------

.. _class_GridMap_method_clear:

- void **clear** **(** **)**

Despeja todas las celdas.

----

.. _class_GridMap_method_clear_baked_meshes:

- void **clear_baked_meshes** **(** **)**

----

.. _class_GridMap_method_get_bake_mesh_instance:

- :ref:`RID<class_RID>` **get_bake_mesh_instance** **(** :ref:`int<class_int>` idx **)**

----

.. _class_GridMap_method_get_bake_meshes:

- :ref:`Array<class_Array>` **get_bake_meshes** **(** **)**

Returns an array of :ref:`ArrayMesh<class_ArrayMesh>`\ es and :ref:`Transform<class_Transform>` references of all bake meshes that exist within the current GridMap.

----

.. _class_GridMap_method_get_cell_item:

- :ref:`int<class_int>` **get_cell_item** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z **)** |const|

The :ref:`MeshLibrary<class_MeshLibrary>` item index located at the grid-based X, Y and Z coordinates. If the cell is empty, :ref:`INVALID_CELL_ITEM<class_GridMap_constant_INVALID_CELL_ITEM>` will be returned.

----

.. _class_GridMap_method_get_cell_item_orientation:

- :ref:`int<class_int>` **get_cell_item_orientation** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z **)** |const|

The orientation of the cell at the grid-based X, Y and Z coordinates. -1 is returned if the cell is empty.

----

.. _class_GridMap_method_get_collision_layer_bit:

- :ref:`bool<class_bool>` **get_collision_layer_bit** **(** :ref:`int<class_int>` bit **)** |const|

Devuelve un bit individual en el :ref:`collision_layer<class_GridMap_property_collision_layer>`.

----

.. _class_GridMap_method_get_collision_mask_bit:

- :ref:`bool<class_bool>` **get_collision_mask_bit** **(** :ref:`int<class_int>` bit **)** |const|

Devuelve un bit individual en la :ref:`collision_mask<class_GridMap_property_collision_mask>`.

----

.. _class_GridMap_method_get_meshes:

- :ref:`Array<class_Array>` **get_meshes** **(** **)**

Devuelve un array referencias de :ref:`Transform<class_Transform>` y :ref:`Mesh<class_Mesh>` correspondientes a las celdas no vacías de la cuadrícula. Las transformaciones se especifican en el espacio del mundo.

----

.. _class_GridMap_method_get_used_cells:

- :ref:`Array<class_Array>` **get_used_cells** **(** **)** |const|

Devuelve un array de :ref:`Vector3<class_Vector3>` con las coordenadas de la celda no vacía en el mapa de la cuadrícula.

----

.. _class_GridMap_method_make_baked_meshes:

- void **make_baked_meshes** **(** :ref:`bool<class_bool>` gen_lightmap_uv=false, :ref:`float<class_float>` lightmap_uv_texel_size=0.1 **)**

----

.. _class_GridMap_method_map_to_world:

- :ref:`Vector3<class_Vector3>` **map_to_world** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z **)** |const|

Devuelve la posición de una celda de la cuadrícula en el espacio de coordenadas locales del mapa de la cuadrícula.

----

.. _class_GridMap_method_resource_changed:

- void **resource_changed** **(** :ref:`Resource<class_Resource>` resource **)**

----

.. _class_GridMap_method_set_cell_item:

- void **set_cell_item** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` z, :ref:`int<class_int>` item, :ref:`int<class_int>` orientation=0 **)**

Sets the mesh index for the cell referenced by its grid-based X, Y and Z coordinates.

A negative item index such as :ref:`INVALID_CELL_ITEM<class_GridMap_constant_INVALID_CELL_ITEM>` will clear the cell.

Optionally, the item's orientation can be passed. For valid orientation values, see :ref:`Basis.get_orthogonal_index<class_Basis_method_get_orthogonal_index>`.

----

.. _class_GridMap_method_set_clip:

- void **set_clip** **(** :ref:`bool<class_bool>` enabled, :ref:`bool<class_bool>` clipabove=true, :ref:`int<class_int>` floor=0, Vector3.Axis axis=0 **)**

----

.. _class_GridMap_method_set_collision_layer_bit:

- void **set_collision_layer_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

Establece un bit individual en el :ref:`collision_layer<class_GridMap_property_collision_layer>`.

----

.. _class_GridMap_method_set_collision_mask_bit:

- void **set_collision_mask_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

Establece un bit individual en la :ref:`collision_mask<class_GridMap_property_collision_mask>`.

----

.. _class_GridMap_method_world_to_map:

- :ref:`Vector3<class_Vector3>` **world_to_map** **(** :ref:`Vector3<class_Vector3>` pos **)** |const|

Devuelve las coordenadas de la celda de la cuadrícula que contiene el punto dado.

\ ``pos`` debería estar en el espacio de coordenadas locales del GridMap.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
