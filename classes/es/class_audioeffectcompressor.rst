:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the AudioEffectCompressor.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AudioEffectCompressor:

AudioEffectCompressor
=====================

**Inherits:** :ref:`AudioEffect<class_AudioEffect>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Añade un efecto de audio de compresion al bus de audio.

Reduces los sonidos que exceden un cierto umbral de sonido, suaviza la dinamica y aumenta el volumen total.

Descripción
----------------------

El compresor de rango dinamico disminuye el nivel de sonido cuando la amplitud se va por encima de cierto umbral en decibelios. Uno de los principales usos de un compresor es para incrementar el rango dinamico recortado tan poco como sea posible( cuando el sonido pasa los 0dB).

El compresor tiene muchos usos en la mezcla:

- En el bus Maestro comprime la salida completa (Aunque un :ref:`AudioEffectLimiter<class_AudioEffectLimiter>` es probablemente mejor).

- En los canales de voces asegura que los sonidos estan balanceados lo maximo posible.

-Encadenado. Esto puede reducir el nivel de sonido encadenado con otro bus de audio para la deteccion de umbral. Esta tecnica es comun en la mezcla de videojuegos del nivel de musica y SFX mientras que las voces son escuchadas.

- Acentua transitorios usando un ataque amplio, haciendo los efectos mas contundentes.

Propiedades
----------------------

+-----------------------------+--------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`   | :ref:`attack_us<class_AudioEffectCompressor_property_attack_us>`   | ``20.0``  |
+-----------------------------+--------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`   | :ref:`gain<class_AudioEffectCompressor_property_gain>`             | ``0.0``   |
+-----------------------------+--------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`   | :ref:`mix<class_AudioEffectCompressor_property_mix>`               | ``1.0``   |
+-----------------------------+--------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`   | :ref:`ratio<class_AudioEffectCompressor_property_ratio>`           | ``4.0``   |
+-----------------------------+--------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`   | :ref:`release_ms<class_AudioEffectCompressor_property_release_ms>` | ``250.0`` |
+-----------------------------+--------------------------------------------------------------------+-----------+
| :ref:`String<class_String>` | :ref:`sidechain<class_AudioEffectCompressor_property_sidechain>`   | ``""``    |
+-----------------------------+--------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`   | :ref:`threshold<class_AudioEffectCompressor_property_threshold>`   | ``0.0``   |
+-----------------------------+--------------------------------------------------------------------+-----------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_AudioEffectCompressor_property_attack_us:

- :ref:`float<class_float>` **attack_us**

+-----------+----------------------+
| *Default* | ``20.0``             |
+-----------+----------------------+
| *Setter*  | set_attack_us(value) |
+-----------+----------------------+
| *Getter*  | get_attack_us()      |
+-----------+----------------------+

Tiempo de reaccion del compreso cuando la señal excede el umbral, en microsegundos. El valor puede variar entre 20 y 2000.

----

.. _class_AudioEffectCompressor_property_gain:

- :ref:`float<class_float>` **gain**

+-----------+-----------------+
| *Default* | ``0.0``         |
+-----------+-----------------+
| *Setter*  | set_gain(value) |
+-----------+-----------------+
| *Getter*  | get_gain()      |
+-----------+-----------------+

Ganancia aplicada a la señal de salida.

----

.. _class_AudioEffectCompressor_property_mix:

- :ref:`float<class_float>` **mix**

+-----------+----------------+
| *Default* | ``1.0``        |
+-----------+----------------+
| *Setter*  | set_mix(value) |
+-----------+----------------+
| *Getter*  | get_mix()      |
+-----------+----------------+

Balance entre la señal original y el efecto de señal. Valores pueden variar desde 0 (totalmente seco) a 1 (totalmente humedo).

----

.. _class_AudioEffectCompressor_property_ratio:

- :ref:`float<class_float>` **ratio**

+-----------+------------------+
| *Default* | ``4.0``          |
+-----------+------------------+
| *Setter*  | set_ratio(value) |
+-----------+------------------+
| *Getter*  | get_ratio()      |
+-----------+------------------+

La cantidad de compresion aplicada al audio una ves pasa el nivel del umbral. A mas alto el ratio, mas compresion a las partes altas se hara. Valores se encuentran entre 1 y 48.

----

.. _class_AudioEffectCompressor_property_release_ms:

- :ref:`float<class_float>` **release_ms**

+-----------+-----------------------+
| *Default* | ``250.0``             |
+-----------+-----------------------+
| *Setter*  | set_release_ms(value) |
+-----------+-----------------------+
| *Getter*  | get_release_ms()      |
+-----------+-----------------------+

Tiempo de retraso del compresor para parar de reducir la señal despues de que el nivel caiga por debajo del umbral, en milisegundos. El valor puede variar entre 20 y 2000.

----

.. _class_AudioEffectCompressor_property_sidechain:

- :ref:`String<class_String>` **sidechain**

+-----------+----------------------+
| *Default* | ``""``               |
+-----------+----------------------+
| *Setter*  | set_sidechain(value) |
+-----------+----------------------+
| *Getter*  | get_sidechain()      |
+-----------+----------------------+

Reduce el nivel de sonido usando otro bus de audio para la deteccion del umbral.

----

.. _class_AudioEffectCompressor_property_threshold:

- :ref:`float<class_float>` **threshold**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_threshold(value) |
+-----------+----------------------+
| *Getter*  | get_threshold()      |
+-----------+----------------------+

El nivel por encima por el cual la compresion es aplicada al audio. El valor puede variar entre -60 y 0.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
