:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Curve3D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Curve3D:

Curve3D
=======

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Describe una curva de Bézier en el espacio 3D.

Descripción
----------------------

This class describes a Bézier curve in 3D space. It is mainly used to give a shape to a :ref:`Path<class_Path>`, but can be manually sampled for other purposes.

It keeps a cache of precalculated points along the curve, to speed up further calculations.

Propiedades
----------------------

+---------------------------+--------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`bake_interval<class_Curve3D_property_bake_interval>`         | ``0.2``  |
+---------------------------+--------------------------------------------------------------------+----------+
| :ref:`bool<class_bool>`   | :ref:`up_vector_enabled<class_Curve3D_property_up_vector_enabled>` | ``true`` |
+---------------------------+--------------------------------------------------------------------+----------+

Métodos
--------------

+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`add_point<class_Curve3D_method_add_point>` **(** :ref:`Vector3<class_Vector3>` position, :ref:`Vector3<class_Vector3>` in=Vector3( 0, 0, 0 ), :ref:`Vector3<class_Vector3>` out=Vector3( 0, 0, 0 ), :ref:`int<class_int>` at_position=-1 **)** |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`clear_points<class_Curve3D_method_clear_points>` **(** **)**                                                                                                                                                                                   |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`get_baked_length<class_Curve3D_method_get_baked_length>` **(** **)** |const|                                                                                                                                                                   |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolVector3Array<class_PoolVector3Array>` | :ref:`get_baked_points<class_Curve3D_method_get_baked_points>` **(** **)** |const|                                                                                                                                                                   |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolRealArray<class_PoolRealArray>`       | :ref:`get_baked_tilts<class_Curve3D_method_get_baked_tilts>` **(** **)** |const|                                                                                                                                                                     |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolVector3Array<class_PoolVector3Array>` | :ref:`get_baked_up_vectors<class_Curve3D_method_get_baked_up_vectors>` **(** **)** |const|                                                                                                                                                           |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`get_closest_offset<class_Curve3D_method_get_closest_offset>` **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|                                                                                                                        |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`get_closest_point<class_Curve3D_method_get_closest_point>` **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|                                                                                                                          |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`get_point_count<class_Curve3D_method_get_point_count>` **(** **)** |const|                                                                                                                                                                     |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`get_point_in<class_Curve3D_method_get_point_in>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                                 |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`get_point_out<class_Curve3D_method_get_point_out>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                               |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`get_point_position<class_Curve3D_method_get_point_position>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                     |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                       | :ref:`get_point_tilt<class_Curve3D_method_get_point_tilt>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                             |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`interpolate<class_Curve3D_method_interpolate>` **(** :ref:`int<class_int>` idx, :ref:`float<class_float>` t **)** |const|                                                                                                                      |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`interpolate_baked<class_Curve3D_method_interpolate_baked>` **(** :ref:`float<class_float>` offset, :ref:`bool<class_bool>` cubic=false **)** |const|                                                                                           |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`interpolate_baked_up_vector<class_Curve3D_method_interpolate_baked_up_vector>` **(** :ref:`float<class_float>` offset, :ref:`bool<class_bool>` apply_tilt=false **)** |const|                                                                  |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`interpolatef<class_Curve3D_method_interpolatef>` **(** :ref:`float<class_float>` fofs **)** |const|                                                                                                                                            |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`remove_point<class_Curve3D_method_remove_point>` **(** :ref:`int<class_int>` idx **)**                                                                                                                                                         |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`set_point_in<class_Curve3D_method_set_point_in>` **(** :ref:`int<class_int>` idx, :ref:`Vector3<class_Vector3>` position **)**                                                                                                                 |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`set_point_out<class_Curve3D_method_set_point_out>` **(** :ref:`int<class_int>` idx, :ref:`Vector3<class_Vector3>` position **)**                                                                                                               |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`set_point_position<class_Curve3D_method_set_point_position>` **(** :ref:`int<class_int>` idx, :ref:`Vector3<class_Vector3>` position **)**                                                                                                     |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`set_point_tilt<class_Curve3D_method_set_point_tilt>` **(** :ref:`int<class_int>` idx, :ref:`float<class_float>` tilt **)**                                                                                                                     |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolVector3Array<class_PoolVector3Array>` | :ref:`tessellate<class_Curve3D_method_tessellate>` **(** :ref:`int<class_int>` max_stages=5, :ref:`float<class_float>` tolerance_degrees=4 **)** |const|                                                                                             |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_Curve3D_property_bake_interval:

- :ref:`float<class_float>` **bake_interval**

+-----------+--------------------------+
| *Default* | ``0.2``                  |
+-----------+--------------------------+
| *Setter*  | set_bake_interval(value) |
+-----------+--------------------------+
| *Getter*  | get_bake_interval()      |
+-----------+--------------------------+

La distancia en metros entre dos puntos cacheados adyacentes. Cambiarlo obliga a recomponer la caché la próxima vez que se llame a la función :ref:`get_baked_points<class_Curve3D_method_get_baked_points>` o :ref:`get_baked_length<class_Curve3D_method_get_baked_length>`. Cuanto más pequeña sea la distancia, más puntos en el cache y más memoria consumirá, así que úsala con cuidado.

----

.. _class_Curve3D_property_up_vector_enabled:

- :ref:`bool<class_bool>` **up_vector_enabled**

+-----------+------------------------------+
| *Default* | ``true``                     |
+-----------+------------------------------+
| *Setter*  | set_up_vector_enabled(value) |
+-----------+------------------------------+
| *Getter*  | is_up_vector_enabled()       |
+-----------+------------------------------+

If ``true``, the curve will bake up vectors used for orientation. This is used when :ref:`PathFollow.rotation_mode<class_PathFollow_property_rotation_mode>` is set to :ref:`PathFollow.ROTATION_ORIENTED<class_PathFollow_constant_ROTATION_ORIENTED>`. Changing it forces the cache to be recomputed.

Descripciones de Métodos
------------------------------------------------

.. _class_Curve3D_method_add_point:

- void **add_point** **(** :ref:`Vector3<class_Vector3>` position, :ref:`Vector3<class_Vector3>` in=Vector3( 0, 0, 0 ), :ref:`Vector3<class_Vector3>` out=Vector3( 0, 0, 0 ), :ref:`int<class_int>` at_position=-1 **)**

Añade un punto a una curva en la posición ``position``, con puntos de control ``in`` y ``out``.

Si se da ``at_position``, el punto se inserta antes del número de punto ``at_position``, desplazando ese punto (y todos los puntos posteriores) después del punto insertado. Si no se da ``at_position``, o es un valor ilegal (``at_position <0`` o ``at_position >= [method get_point_count]``), el punto se añadirá al final de la lista de puntos.

----

.. _class_Curve3D_method_clear_points:

- void **clear_points** **(** **)**

Elimina todos los puntos de la curva.

----

.. _class_Curve3D_method_get_baked_length:

- :ref:`float<class_float>` **get_baked_length** **(** **)** |const|

Devuelve la longitud total de la curva, basada en los puntos cacheados. Si se le da suficiente densidad (ver :ref:`bake_interval<class_Curve3D_property_bake_interval>`), debe ser bastante aproximada.

----

.. _class_Curve3D_method_get_baked_points:

- :ref:`PoolVector3Array<class_PoolVector3Array>` **get_baked_points** **(** **)** |const|

Returns the cache of points as a :ref:`PoolVector3Array<class_PoolVector3Array>`.

----

.. _class_Curve3D_method_get_baked_tilts:

- :ref:`PoolRealArray<class_PoolRealArray>` **get_baked_tilts** **(** **)** |const|

Returns the cache of tilts as a :ref:`PoolRealArray<class_PoolRealArray>`.

----

.. _class_Curve3D_method_get_baked_up_vectors:

- :ref:`PoolVector3Array<class_PoolVector3Array>` **get_baked_up_vectors** **(** **)** |const|

Returns the cache of up vectors as a :ref:`PoolVector3Array<class_PoolVector3Array>`.

If :ref:`up_vector_enabled<class_Curve3D_property_up_vector_enabled>` is ``false``, the cache will be empty.

----

.. _class_Curve3D_method_get_closest_offset:

- :ref:`float<class_float>` **get_closest_offset** **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|

Devuelve el desplazamiento más cercano a ``to_point``. Este desplazamiento está destinado a ser utilizado en :ref:`interpolate_baked<class_Curve3D_method_interpolate_baked>` o :ref:`interpolate_baked_up_vector<class_Curve3D_method_interpolate_baked_up_vector>`.

\ ``to_point`` debe estar en el espacio local de esta curva.

----

.. _class_Curve3D_method_get_closest_point:

- :ref:`Vector3<class_Vector3>` **get_closest_point** **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|

Returns the closest baked point (in curve's local space) to ``to_point``.

\ ``to_point`` must be in this curve's local space.

----

.. _class_Curve3D_method_get_point_count:

- :ref:`int<class_int>` **get_point_count** **(** **)** |const|

Devuelve el número de puntos que describen la curva.

----

.. _class_Curve3D_method_get_point_in:

- :ref:`Vector3<class_Vector3>` **get_point_in** **(** :ref:`int<class_int>` idx **)** |const|

Returns the position of the control point leading to the vertex ``idx``. The returned position is relative to the vertex ``idx``. If the index is out of bounds, the function sends an error to the console, and returns ``(0, 0, 0)``.

----

.. _class_Curve3D_method_get_point_out:

- :ref:`Vector3<class_Vector3>` **get_point_out** **(** :ref:`int<class_int>` idx **)** |const|

Returns the position of the control point leading out of the vertex ``idx``. The returned position is relative to the vertex ``idx``. If the index is out of bounds, the function sends an error to the console, and returns ``(0, 0, 0)``.

----

.. _class_Curve3D_method_get_point_position:

- :ref:`Vector3<class_Vector3>` **get_point_position** **(** :ref:`int<class_int>` idx **)** |const|

Devuelve la posición del vértice ``idx``. Si el índice está fuera de los límites, la función envía un error a la consola, y devuelve ``(0, 0, 0)``.

----

.. _class_Curve3D_method_get_point_tilt:

- :ref:`float<class_float>` **get_point_tilt** **(** :ref:`int<class_int>` idx **)** |const|

Devuelve el ángulo de inclinación en radianes para el punto ``idx``. Si el índice está fuera de los límites, la función envía un error a la consola, y devuelve ``0``.

----

.. _class_Curve3D_method_interpolate:

- :ref:`Vector3<class_Vector3>` **interpolate** **(** :ref:`int<class_int>` idx, :ref:`float<class_float>` t **)** |const|

Devuelve la posición entre el vértice ``idx`` y el vértice ``idx + 1``, donde ``t`` controla si el punto es el primer vértice (``t = 0.0``), el último vértice (``t = 1.0``), o en medio. Los valores de ``t`` fuera del rango (``0.0 >= t <=1``) dan resultados extraños, pero predecibles.

Si ``idx`` está fuera de los límites se trunca al primer o último vértice, y ``t`` se ignora. Si la curva no tiene puntos, la función envía un error a la consola, y devuelve ``(0, 0, 0)``.

----

.. _class_Curve3D_method_interpolate_baked:

- :ref:`Vector3<class_Vector3>` **interpolate_baked** **(** :ref:`float<class_float>` offset, :ref:`bool<class_bool>` cubic=false **)** |const|

Returns a point within the curve at position ``offset``, where ``offset`` is measured as a distance in 3D units along the curve.

To do that, it finds the two cached points where the ``offset`` lies between, then interpolates the values. This interpolation is cubic if ``cubic`` is set to ``true``, or linear if set to ``false``.

Cubic interpolation tends to follow the curves better, but linear is faster (and often, precise enough).

----

.. _class_Curve3D_method_interpolate_baked_up_vector:

- :ref:`Vector3<class_Vector3>` **interpolate_baked_up_vector** **(** :ref:`float<class_float>` offset, :ref:`bool<class_bool>` apply_tilt=false **)** |const|

Devuelve un vector ascendente dentro de la curva en la posición ``offset``, donde ``offset`` se mide como una distancia en unidades 3D a lo largo de la curva.

Para ello, encuentra los dos vectores ascendentes donde se encuentra el ``offset`` entre ellos, y luego interpola los valores. Si ``apply_tilt`` es ``true``, se aplica una inclinación interpolada al vector interpolado hacia arriba.

Si la curva no tiene vectores ascendentes, la función envía un error a la consola, y devuelve ``(0, 1, 0)``.

----

.. _class_Curve3D_method_interpolatef:

- :ref:`Vector3<class_Vector3>` **interpolatef** **(** :ref:`float<class_float>` fofs **)** |const|

Devuelve la posición en el vértice ``fofs``. Llama a :ref:`interpolate<class_Curve3D_method_interpolate>` usando la parte entera de ``fofs`` como ``idx``, y su parte fraccionaria como ``t``.

----

.. _class_Curve3D_method_remove_point:

- void **remove_point** **(** :ref:`int<class_int>` idx **)**

Suprime el punto ``idx`` de la curva. Envía un error a la consola si ``idx`` está fuera de los límites.

----

.. _class_Curve3D_method_set_point_in:

- void **set_point_in** **(** :ref:`int<class_int>` idx, :ref:`Vector3<class_Vector3>` position **)**

Sets the position of the control point leading to the vertex ``idx``. If the index is out of bounds, the function sends an error to the console. The position is relative to the vertex.

----

.. _class_Curve3D_method_set_point_out:

- void **set_point_out** **(** :ref:`int<class_int>` idx, :ref:`Vector3<class_Vector3>` position **)**

Sets the position of the control point leading out of the vertex ``idx``. If the index is out of bounds, the function sends an error to the console. The position is relative to the vertex.

----

.. _class_Curve3D_method_set_point_position:

- void **set_point_position** **(** :ref:`int<class_int>` idx, :ref:`Vector3<class_Vector3>` position **)**

Establece la posición del vértice ``idx``. Si el índice está fuera de los límites, la función envía un error a la consola.

----

.. _class_Curve3D_method_set_point_tilt:

- void **set_point_tilt** **(** :ref:`int<class_int>` idx, :ref:`float<class_float>` tilt **)**

Sets the tilt angle in radians for the point ``idx``. If the index is out of bounds, the function sends an error to the console.

The tilt controls the rotation along the look-at axis an object traveling the path would have. In the case of a curve controlling a :ref:`PathFollow<class_PathFollow>`, this tilt is an offset over the natural tilt the :ref:`PathFollow<class_PathFollow>` calculates.

----

.. _class_Curve3D_method_tessellate:

- :ref:`PoolVector3Array<class_PoolVector3Array>` **tessellate** **(** :ref:`int<class_int>` max_stages=5, :ref:`float<class_float>` tolerance_degrees=4 **)** |const|

Devuelve una lista de puntos a lo largo de la curva, con una densidad de puntos controlada por la curvatura. Es decir, las partes más curvadas tendrán más puntos que las partes más rectas.

Esta aproximación hace segmentos rectos entre cada punto, luego subdivide esos segmentos hasta que la forma resultante es lo suficientemente similar.

\ ``max_stages`` controla cuántas subdivisiones puede afrontar un segmento de curva antes de que se considere suficientemente aproximado. Cada subdivisión divide el segmento por la mitad, por lo que las 5 etapas predeterminadas pueden significar hasta 32 subdivisiones por segmento de curva. Aumenta con cuidado!

\ ``tolerance_degrees`` controla cuántos grados puede desviarse el punto medio de un segmento de la curva real, antes de que el segmento tenga que ser subdividido.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
