:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ResourceFormatSaver.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ResourceFormatSaver:

ResourceFormatSaver
===================

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Guarda un tipo de recurso específico en un archivo.

Descripción
----------------------

El motor puede ahorrar recursos cuando lo haces desde el editor, o cuando usas el botón :ref:`ResourceSaver<class_ResourceSaver>`. Esto se logra gracias a los múltiples ``ResourceFormatSaver``, cada uno de los cuales maneja su propio formato y es llamado automáticamente por el motor.

Por defecto, Godot guarda recursos como ``.tres`` (basado en texto), ``.res`` (binario) u otro formato incorporado, pero puedes elegir crear tu propio formato extendiendo esta clase. Asegúrate de respetar los tipos y valores de retorno documentados. Debes darle un nombre de clase global con ``class_name`` para que se registre. Al igual que los ResourceFormatSavers incorporados, se llamará automáticamente cuando se guarden los recursos de su(s) tipo(s) reconocido(s). También puedes implementar un :ref:`ResourceFormatLoader<class_ResourceFormatLoader>`.

Métodos
--------------

+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_recognized_extensions<class_ResourceFormatSaver_method_get_recognized_extensions>` **(** :ref:`Resource<class_Resource>` resource **)** |virtual|                      |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`recognize<class_ResourceFormatSaver_method_recognize>` **(** :ref:`Resource<class_Resource>` resource **)** |virtual|                                                      |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`save<class_ResourceFormatSaver_method_save>` **(** :ref:`String<class_String>` path, :ref:`Resource<class_Resource>` resource, :ref:`int<class_int>` flags **)** |virtual| |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Métodos
------------------------------------------------

.. _class_ResourceFormatSaver_method_get_recognized_extensions:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_recognized_extensions** **(** :ref:`Resource<class_Resource>` resource **)** |virtual|

Devuelve la lista de extensiones disponibles para guardar el objeto de recurso, siempre que se reconozca (véase :ref:`recognize<class_ResourceFormatSaver_method_recognize>`).

----

.. _class_ResourceFormatSaver_method_recognize:

- :ref:`bool<class_bool>` **recognize** **(** :ref:`Resource<class_Resource>` resource **)** |virtual|

Devuelve si el objeto de recurso dado puede ser salvado por este salvador.

----

.. _class_ResourceFormatSaver_method_save:

- :ref:`int<class_int>` **save** **(** :ref:`String<class_String>` path, :ref:`Resource<class_Resource>` resource, :ref:`int<class_int>` flags **)** |virtual|

Guarda el objeto de recurso dado en un archivo en la ``path`` de destino. ``flags`` es una máscara de bits compuesta con constantes :ref:`SaverFlags<enum_ResourceSaver_SaverFlags>`.

Devuelve :ref:`@GlobalScope.OK<class_@GlobalScope_constant_OK>` en caso de éxito, o una constante :ref:`Error<enum_@GlobalScope_Error>` en caso de fracaso.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
