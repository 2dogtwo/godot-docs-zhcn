:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisibilityNotifier2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisibilityNotifier2D:

VisibilityNotifier2D
====================

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`VisibilityEnabler2D<class_VisibilityEnabler2D>`

Detecta aproximadamente cuando el nodo es visible en la pantalla.

Descripción
----------------------

El VisibilityNotifier2D detecta cuando es visible en la pantalla. También notifica cuando su rectángulo delimitador entra o sale de la pantalla o de un viewport.

Si desea que los nodos se deshabiliten automáticamente cuando salen de la pantalla, use :ref:`VisibilityEnabler2D<class_VisibilityEnabler2D>` en su lugar.

\ **Nota:** Por razones de rendimiento, VisibilityNotifier2D utiliza una heurística aproximada con una precisión determinada por :ref:`ProjectSettings.world/2d/cell_size<class_ProjectSettings_property_world/2d/cell_size>`. Si necesita una comprobación precisa de la visibilidad, utilice otro método como añadir un nodo :ref:`Area2D<class_Area2D>` como hijo de un nodo :ref:`Camera2D<class_Camera2D>`.

Tutoriales
--------------------

- `2D Dodge The Creeps Demo <https://godotengine.org/asset-library/asset/515>`__

Propiedades
----------------------

+---------------------------+-------------------------------------------------------+-------------------------------+
| :ref:`Rect2<class_Rect2>` | :ref:`rect<class_VisibilityNotifier2D_property_rect>` | ``Rect2( -10, -10, 20, 20 )`` |
+---------------------------+-------------------------------------------------------+-------------------------------+

Métodos
--------------

+-------------------------+-----------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_on_screen<class_VisibilityNotifier2D_method_is_on_screen>` **(** **)** |const| |
+-------------------------+-----------------------------------------------------------------------------------------+

Señales
--------------

.. _class_VisibilityNotifier2D_signal_screen_entered:

- **screen_entered** **(** **)**

Emitido cuando el VisibilityNotifier2D entra en la pantalla.

----

.. _class_VisibilityNotifier2D_signal_screen_exited:

- **screen_exited** **(** **)**

Emitido cuando el VisibilityNotifier2D sale de la pantalla.

----

.. _class_VisibilityNotifier2D_signal_viewport_entered:

- **viewport_entered** **(** :ref:`Viewport<class_Viewport>` viewport **)**

Emitido cuando el VisibilityNotifier2D entra en la vista de un :ref:`Viewport<class_Viewport>`.

----

.. _class_VisibilityNotifier2D_signal_viewport_exited:

- **viewport_exited** **(** :ref:`Viewport<class_Viewport>` viewport **)**

Emitido cuando el VisibilityNotifier2D sale de la vista de un :ref:`Viewport<class_Viewport>`.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_VisibilityNotifier2D_property_rect:

- :ref:`Rect2<class_Rect2>` **rect**

+-----------+-------------------------------+
| *Default* | ``Rect2( -10, -10, 20, 20 )`` |
+-----------+-------------------------------+
| *Setter*  | set_rect(value)               |
+-----------+-------------------------------+
| *Getter*  | get_rect()                    |
+-----------+-------------------------------+

El rectángulo delimitador del VisibilityNotifier2D.

Descripciones de Métodos
------------------------------------------------

.. _class_VisibilityNotifier2D_method_is_on_screen:

- :ref:`bool<class_bool>` **is_on_screen** **(** **)** |const|

Si ``true``, el rectángulo delimitador está en la pantalla.

\ **Nota:** Se necesita un fotograma para evaluar la visibilidad del nodo una vez añadido al árbol de la escena, por lo que este método devolverá ``false`` justo después de ser instanciado, aun si está en pantalla en el pase de dibujado.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
