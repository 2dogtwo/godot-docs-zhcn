:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the RemoteTransform2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RemoteTransform2D:

RemoteTransform2D
=================

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

RemoteTransform2D empuja su propio :ref:`Transform2D<class_Transform2D>` a otro Nodo derivado de :ref:`CanvasItem<class_CanvasItem>` en la escena.

Descripción
----------------------

RemoteTransform2D empuja su propio :ref:`Transform2D<class_Transform2D>` a otro Nodo derivado de :ref:`CanvasItem<class_CanvasItem>` (llamado el nodo remoto) en la escena.

Puede ser configurado para actualizar la posición, rotación y/o escala de otro Nodo. Puede usar tanto coordenadas globales como locales.

Propiedades
----------------------

+---------------------------------+----------------------------------------------------------------------------------------+------------------+
| :ref:`NodePath<class_NodePath>` | :ref:`remote_path<class_RemoteTransform2D_property_remote_path>`                       | ``NodePath("")`` |
+---------------------------------+----------------------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`update_position<class_RemoteTransform2D_property_update_position>`               | ``true``         |
+---------------------------------+----------------------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`update_rotation<class_RemoteTransform2D_property_update_rotation>`               | ``true``         |
+---------------------------------+----------------------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`update_scale<class_RemoteTransform2D_property_update_scale>`                     | ``true``         |
+---------------------------------+----------------------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`use_global_coordinates<class_RemoteTransform2D_property_use_global_coordinates>` | ``true``         |
+---------------------------------+----------------------------------------------------------------------------------------+------------------+

Métodos
--------------

+------+------------------------------------------------------------------------------------------+
| void | :ref:`force_update_cache<class_RemoteTransform2D_method_force_update_cache>` **(** **)** |
+------+------------------------------------------------------------------------------------------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_RemoteTransform2D_property_remote_path:

- :ref:`NodePath<class_NodePath>` **remote_path**

+-----------+------------------------+
| *Default* | ``NodePath("")``       |
+-----------+------------------------+
| *Setter*  | set_remote_node(value) |
+-----------+------------------------+
| *Getter*  | get_remote_node()      |
+-----------+------------------------+

El :ref:`NodePath<class_NodePath>` al nodo remoto, relativo a la posición del RemoteTransform2D en la escena.

----

.. _class_RemoteTransform2D_property_update_position:

- :ref:`bool<class_bool>` **update_position**

+-----------+----------------------------+
| *Default* | ``true``                   |
+-----------+----------------------------+
| *Setter*  | set_update_position(value) |
+-----------+----------------------------+
| *Getter*  | get_update_position()      |
+-----------+----------------------------+

Si ``true``, la posición del nodo remoto se actualiza.

----

.. _class_RemoteTransform2D_property_update_rotation:

- :ref:`bool<class_bool>` **update_rotation**

+-----------+----------------------------+
| *Default* | ``true``                   |
+-----------+----------------------------+
| *Setter*  | set_update_rotation(value) |
+-----------+----------------------------+
| *Getter*  | get_update_rotation()      |
+-----------+----------------------------+

Si ``true``, la rotación del nodo remoto se actualiza.

----

.. _class_RemoteTransform2D_property_update_scale:

- :ref:`bool<class_bool>` **update_scale**

+-----------+-------------------------+
| *Default* | ``true``                |
+-----------+-------------------------+
| *Setter*  | set_update_scale(value) |
+-----------+-------------------------+
| *Getter*  | get_update_scale()      |
+-----------+-------------------------+

Si ``true``, la rotación del nodo remoto se actualiza.

----

.. _class_RemoteTransform2D_property_use_global_coordinates:

- :ref:`bool<class_bool>` **use_global_coordinates**

+-----------+-----------------------------------+
| *Default* | ``true``                          |
+-----------+-----------------------------------+
| *Setter*  | set_use_global_coordinates(value) |
+-----------+-----------------------------------+
| *Getter*  | get_use_global_coordinates()      |
+-----------+-----------------------------------+

Si ``true``, se utilizan las coordenadas globales. Si ``false``, se utilizan las coordenadas locales.

Descripciones de Métodos
------------------------------------------------

.. _class_RemoteTransform2D_method_force_update_cache:

- void **force_update_cache** **(** **)**

``RemoteTransform2D`` almacena el nodo remoto. Puede que no se dé cuenta si el nodo remoto desaparece; :ref:`force_update_cache<class_RemoteTransform2D_method_force_update_cache>` le obliga a actualizar la caché de nuevo.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
