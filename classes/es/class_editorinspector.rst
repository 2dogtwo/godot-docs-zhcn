:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the EditorInspector.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_EditorInspector:

EditorInspector
===============

**Inherits:** :ref:`ScrollContainer<class_ScrollContainer>` **<** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Una pestaña que se utiliza para editar las propiedades del nodo seleccionado.

Descripción
----------------------

The editor inspector is by default located on the right-hand side of the editor. It's used to edit the properties of the selected node. For example, you can select a node such as :ref:`Sprite<class_Sprite>` then edit its transform through the inspector tool. The editor inspector is an essential tool in the game development workflow.

\ **Note:** This class shouldn't be instantiated directly. Instead, access the singleton using :ref:`EditorInterface.get_inspector<class_EditorInterface_method_get_inspector>`.

Propiedades
----------------------

+-------------------------+---------------------------+--------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | scroll_horizontal_enabled | ``false`` (overrides :ref:`ScrollContainer<class_ScrollContainer_property_scroll_horizontal_enabled>`) |
+-------------------------+---------------------------+--------------------------------------------------------------------------------------------------------+

Métodos
--------------

+------+------------------------------------------------------------------+
| void | :ref:`refresh<class_EditorInspector_method_refresh>` **(** **)** |
+------+------------------------------------------------------------------+

Señales
--------------

.. _class_EditorInspector_signal_object_id_selected:

- **object_id_selected** **(** :ref:`int<class_int>` id **)**

Emitido cuando se ha pulsado el botón de edición de un :ref:`Object<class_Object>` en el inspector. Esto se utiliza principalmente en el inspector de árbol de escena remota.

----

.. _class_EditorInspector_signal_property_edited:

- **property_edited** **(** :ref:`String<class_String>` property **)**

Emitido cuando una propiedad es editada en el inspector.

----

.. _class_EditorInspector_signal_property_keyed:

- **property_keyed** **(** :ref:`String<class_String>` property **)**

Emitido cuando una propiedad es puesta en clave por el inspector. Las propiedades pueden ser tecleadas haciendo clic en el icono "tecla" junto a una propiedad cuando el panel de animación se conmuta.

----

.. _class_EditorInspector_signal_property_selected:

- **property_selected** **(** :ref:`String<class_String>` property **)**

Emitido cuando una propiedad es seleccionada en el inspector.

----

.. _class_EditorInspector_signal_property_toggled:

- **property_toggled** **(** :ref:`String<class_String>` property, :ref:`bool<class_bool>` checked **)**

Emitido cuando una propiedad booleana se conmuta en el inspector.

\ **Nota:** Esta señal nunca se emite si la propiedad interna ``autoclear`` está activada. Dado que esta propiedad siempre está activada en el inspector del editor, esta señal nunca es emitida por el propio editor.

----

.. _class_EditorInspector_signal_resource_selected:

- **resource_selected** **(** :ref:`Object<class_Object>` res, :ref:`String<class_String>` prop **)**

Emitido cuando se selecciona un recurso en el inspector.

----

.. _class_EditorInspector_signal_restart_requested:

- **restart_requested** **(** **)**

Emitido cuando una propiedad que requiere un reinicio para ser aplicada es editada en el inspector. Esto sólo se usa en los ajustes del proyecto y en los ajustes del editor.

Descripciones de Métodos
------------------------------------------------

.. _class_EditorInspector_method_refresh:

- void **refresh** **(** **)**

Refresca al inspector.

\ **Nota:** Para ahorrar recursos de la CPU, llamar a este método no hará nada si el tiempo especificado en el ajuste del editor ``docks/property_editor/auto_refresh_interval`` no ha pasado aún desde la última vez que se llamó a este método. (Por defecto, este intervalo está establecido en 0,3 segundos.)

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
