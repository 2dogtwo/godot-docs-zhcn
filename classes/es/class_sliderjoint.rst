:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the SliderJoint.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SliderJoint:

SliderJoint
===========

**Inherits:** :ref:`Joint<class_Joint>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Slider between two PhysicsBodies in 3D.

Descripción
----------------------

Slides across the X axis of the pivot object. See also :ref:`Generic6DOFJoint<class_Generic6DOFJoint>`.

Propiedades
----------------------

+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_limit/damping<class_SliderJoint_property_angular_limit/damping>`             | ``0.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_limit/lower_angle<class_SliderJoint_property_angular_limit/lower_angle>`     | ``0.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_limit/restitution<class_SliderJoint_property_angular_limit/restitution>`     | ``0.7``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_limit/softness<class_SliderJoint_property_angular_limit/softness>`           | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_limit/upper_angle<class_SliderJoint_property_angular_limit/upper_angle>`     | ``0.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_motion/damping<class_SliderJoint_property_angular_motion/damping>`           | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_motion/restitution<class_SliderJoint_property_angular_motion/restitution>`   | ``0.7``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_motion/softness<class_SliderJoint_property_angular_motion/softness>`         | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_ortho/damping<class_SliderJoint_property_angular_ortho/damping>`             | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_ortho/restitution<class_SliderJoint_property_angular_ortho/restitution>`     | ``0.7``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`angular_ortho/softness<class_SliderJoint_property_angular_ortho/softness>`           | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_limit/damping<class_SliderJoint_property_linear_limit/damping>`               | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_limit/lower_distance<class_SliderJoint_property_linear_limit/lower_distance>` | ``-1.0`` |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_limit/restitution<class_SliderJoint_property_linear_limit/restitution>`       | ``0.7``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_limit/softness<class_SliderJoint_property_linear_limit/softness>`             | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_limit/upper_distance<class_SliderJoint_property_linear_limit/upper_distance>` | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_motion/damping<class_SliderJoint_property_linear_motion/damping>`             | ``0.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_motion/restitution<class_SliderJoint_property_linear_motion/restitution>`     | ``0.7``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_motion/softness<class_SliderJoint_property_linear_motion/softness>`           | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_ortho/damping<class_SliderJoint_property_linear_ortho/damping>`               | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_ortho/restitution<class_SliderJoint_property_linear_ortho/restitution>`       | ``0.7``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`linear_ortho/softness<class_SliderJoint_property_linear_ortho/softness>`             | ``1.0``  |
+---------------------------+--------------------------------------------------------------------------------------------+----------+

Métodos
--------------

+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_param<class_SliderJoint_method_get_param>` **(** :ref:`Param<enum_SliderJoint_Param>` param **)** |const|                          |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param<class_SliderJoint_method_set_param>` **(** :ref:`Param<enum_SliderJoint_Param>` param, :ref:`float<class_float>` value **)** |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+

Enumeraciones
--------------------------

.. _enum_SliderJoint_Param:

.. _class_SliderJoint_constant_PARAM_LINEAR_LIMIT_UPPER:

.. _class_SliderJoint_constant_PARAM_LINEAR_LIMIT_LOWER:

.. _class_SliderJoint_constant_PARAM_LINEAR_LIMIT_SOFTNESS:

.. _class_SliderJoint_constant_PARAM_LINEAR_LIMIT_RESTITUTION:

.. _class_SliderJoint_constant_PARAM_LINEAR_LIMIT_DAMPING:

.. _class_SliderJoint_constant_PARAM_LINEAR_MOTION_SOFTNESS:

.. _class_SliderJoint_constant_PARAM_LINEAR_MOTION_RESTITUTION:

.. _class_SliderJoint_constant_PARAM_LINEAR_MOTION_DAMPING:

.. _class_SliderJoint_constant_PARAM_LINEAR_ORTHOGONAL_SOFTNESS:

.. _class_SliderJoint_constant_PARAM_LINEAR_ORTHOGONAL_RESTITUTION:

.. _class_SliderJoint_constant_PARAM_LINEAR_ORTHOGONAL_DAMPING:

.. _class_SliderJoint_constant_PARAM_ANGULAR_LIMIT_UPPER:

.. _class_SliderJoint_constant_PARAM_ANGULAR_LIMIT_LOWER:

.. _class_SliderJoint_constant_PARAM_ANGULAR_LIMIT_SOFTNESS:

.. _class_SliderJoint_constant_PARAM_ANGULAR_LIMIT_RESTITUTION:

.. _class_SliderJoint_constant_PARAM_ANGULAR_LIMIT_DAMPING:

.. _class_SliderJoint_constant_PARAM_ANGULAR_MOTION_SOFTNESS:

.. _class_SliderJoint_constant_PARAM_ANGULAR_MOTION_RESTITUTION:

.. _class_SliderJoint_constant_PARAM_ANGULAR_MOTION_DAMPING:

.. _class_SliderJoint_constant_PARAM_ANGULAR_ORTHOGONAL_SOFTNESS:

.. _class_SliderJoint_constant_PARAM_ANGULAR_ORTHOGONAL_RESTITUTION:

.. _class_SliderJoint_constant_PARAM_ANGULAR_ORTHOGONAL_DAMPING:

.. _class_SliderJoint_constant_PARAM_MAX:

enum **Param**:

- **PARAM_LINEAR_LIMIT_UPPER** = **0** --- La máxima diferencia entre los puntos de pivote en su eje X antes de que se produzca la amortiguación.

- **PARAM_LINEAR_LIMIT_LOWER** = **1** --- La diferencia mínima entre los puntos de pivote en su eje X antes de que se produzca la amortiguación.

- **PARAM_LINEAR_LIMIT_SOFTNESS** = **2** --- Un factor aplicado al movimiento a través del eje del deslizador una vez que se superan los límites. Cuanto más bajo, más lento es el movimiento.

- **PARAM_LINEAR_LIMIT_RESTITUTION** = **3** --- La cantidad de la restitución una vez que se superen los límites. Cuanto más bajo, más energía de velocidad se pierde.

- **PARAM_LINEAR_LIMIT_DAMPING** = **4** --- La cantidad de amortiguación una vez que se superan los límites del deslizador.

- **PARAM_LINEAR_MOTION_SOFTNESS** = **5** --- Un factor aplicado al movimiento a través del eje del deslizador mientras el deslizador esté en los límites. Cuanto más bajo, más lento es el movimiento.

- **PARAM_LINEAR_MOTION_RESTITUTION** = **6** --- La cantidad de restitución dentro de los límites del deslizador.

- **PARAM_LINEAR_MOTION_DAMPING** = **7** --- La cantidad de amortiguación dentro de los límites del deslizador.

- **PARAM_LINEAR_ORTHOGONAL_SOFTNESS** = **8** --- Un factor aplicado al movimiento a través de ejes ortogonales al deslizador.

- **PARAM_LINEAR_ORTHOGONAL_RESTITUTION** = **9** --- La cantidad de restitución cuando el movimiento es a través de ejes ortogonales al deslizador.

- **PARAM_LINEAR_ORTHOGONAL_DAMPING** = **10** --- La cantidad de amortiguación cuando el movimiento es a través de ejes ortogonales al deslizador.

- **PARAM_ANGULAR_LIMIT_UPPER** = **11** --- El límite superior de rotación en el deslizador.

- **PARAM_ANGULAR_LIMIT_LOWER** = **12** --- El límite inferior de rotación en el deslizador.

- **PARAM_ANGULAR_LIMIT_SOFTNESS** = **13** --- Un factor que se aplica a toda la rotación una vez superado el límite.

- **PARAM_ANGULAR_LIMIT_RESTITUTION** = **14** --- La cantidad de restitución de la rotación cuando se supera el límite.

- **PARAM_ANGULAR_LIMIT_DAMPING** = **15** --- La cantidad de amortiguación de la rotación cuando se supera el límite.

- **PARAM_ANGULAR_MOTION_SOFTNESS** = **16** --- Un factor que se aplica a toda la rotación una vez superado el límite.

- **PARAM_ANGULAR_MOTION_RESTITUTION** = **17** --- La cantidad de restitución de la rotación en los límites.

- **PARAM_ANGULAR_MOTION_DAMPING** = **18** --- La cantidad de amortiguación de la rotación en los límites.

- **PARAM_ANGULAR_ORTHOGONAL_SOFTNESS** = **19** --- Un factor aplicado a toda la rotación a través de los ejes ortogonales al deslizador.

- **PARAM_ANGULAR_ORTHOGONAL_RESTITUTION** = **20** --- La cantidad de restitución de la rotación a través de ejes ortogonales al deslizador.

- **PARAM_ANGULAR_ORTHOGONAL_DAMPING** = **21** --- La cantidad de amortiguación de la rotación a través de ejes ortogonales al deslizador.

- **PARAM_MAX** = **22** --- Representa el tamaño del enum :ref:`Param<enum_SliderJoint_Param>`.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_SliderJoint_property_angular_limit/damping:

- :ref:`float<class_float>` **angular_limit/damping**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de amortiguación de la rotación cuando se supera el límite.

Un valor de amortiguación menor permite que una rotación iniciada por el cuerpo A viaje al cuerpo B más lentamente.

----

.. _class_SliderJoint_property_angular_limit/lower_angle:

- :ref:`float<class_float>` **angular_limit/lower_angle**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

El límite inferior de rotación en el deslizador.

----

.. _class_SliderJoint_property_angular_limit/restitution:

- :ref:`float<class_float>` **angular_limit/restitution**

+-----------+------------------+
| *Default* | ``0.7``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de restitución de la rotación cuando se supera el límite.

No afecta a la amortiguación.

----

.. _class_SliderJoint_property_angular_limit/softness:

- :ref:`float<class_float>` **angular_limit/softness**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Un factor que se aplica a toda la rotación una vez superado el límite.

Hace que toda la rotación sea más lenta cuando está entre 0 y 1.

----

.. _class_SliderJoint_property_angular_limit/upper_angle:

- :ref:`float<class_float>` **angular_limit/upper_angle**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

El límite superior de rotación en el deslizador.

----

.. _class_SliderJoint_property_angular_motion/damping:

- :ref:`float<class_float>` **angular_motion/damping**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de amortiguación de la rotación en los límites.

----

.. _class_SliderJoint_property_angular_motion/restitution:

- :ref:`float<class_float>` **angular_motion/restitution**

+-----------+------------------+
| *Default* | ``0.7``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de restitución de la rotación en los límites.

----

.. _class_SliderJoint_property_angular_motion/softness:

- :ref:`float<class_float>` **angular_motion/softness**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Un factor que se aplica a toda la rotación una vez superado el límite.

----

.. _class_SliderJoint_property_angular_ortho/damping:

- :ref:`float<class_float>` **angular_ortho/damping**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de amortiguación de la rotación a través de ejes ortogonales al deslizador.

----

.. _class_SliderJoint_property_angular_ortho/restitution:

- :ref:`float<class_float>` **angular_ortho/restitution**

+-----------+------------------+
| *Default* | ``0.7``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de restitución de la rotación a través de ejes ortogonales al deslizador.

----

.. _class_SliderJoint_property_angular_ortho/softness:

- :ref:`float<class_float>` **angular_ortho/softness**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Un factor aplicado a toda la rotación a través de los ejes ortogonales al deslizador.

----

.. _class_SliderJoint_property_linear_limit/damping:

- :ref:`float<class_float>` **linear_limit/damping**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de amortiguación que ocurre una vez que se supera el límite definido por :ref:`linear_limit/lower_distance<class_SliderJoint_property_linear_limit/lower_distance>` y :ref:`linear_limit/upper_distance<class_SliderJoint_property_linear_limit/upper_distance>`.

----

.. _class_SliderJoint_property_linear_limit/lower_distance:

- :ref:`float<class_float>` **linear_limit/lower_distance**

+-----------+------------------+
| *Default* | ``-1.0``         |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La diferencia mínima entre los puntos de pivote en su eje X antes de que se produzca la amortiguación.

----

.. _class_SliderJoint_property_linear_limit/restitution:

- :ref:`float<class_float>` **linear_limit/restitution**

+-----------+------------------+
| *Default* | ``0.7``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

El monto de la restitución una vez que se superen los límites. Cuanto más bajo, más energía de velocidad se pierde.

----

.. _class_SliderJoint_property_linear_limit/softness:

- :ref:`float<class_float>` **linear_limit/softness**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Un factor aplicado al movimiento a través del eje del deslizador una vez que se superan los límites. Cuanto más bajo, más lento es el movimiento.

----

.. _class_SliderJoint_property_linear_limit/upper_distance:

- :ref:`float<class_float>` **linear_limit/upper_distance**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La máxima diferencia entre los puntos de pivote en su eje X antes de que se produzca la amortiguación.

----

.. _class_SliderJoint_property_linear_motion/damping:

- :ref:`float<class_float>` **linear_motion/damping**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de amortiguación dentro de los límites del deslizador.

----

.. _class_SliderJoint_property_linear_motion/restitution:

- :ref:`float<class_float>` **linear_motion/restitution**

+-----------+------------------+
| *Default* | ``0.7``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de restitución dentro de los límites del deslizador.

----

.. _class_SliderJoint_property_linear_motion/softness:

- :ref:`float<class_float>` **linear_motion/softness**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Un factor aplicado al movimiento a través del eje del deslizador mientras el deslizador esté en los límites. Cuanto más bajo, más lento es el movimiento.

----

.. _class_SliderJoint_property_linear_ortho/damping:

- :ref:`float<class_float>` **linear_ortho/damping**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de amortiguación cuando el movimiento es a través de ejes ortogonales al deslizador.

----

.. _class_SliderJoint_property_linear_ortho/restitution:

- :ref:`float<class_float>` **linear_ortho/restitution**

+-----------+------------------+
| *Default* | ``0.7``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La cantidad de restitución cuando el movimiento es a través de ejes ortogonales al deslizador.

----

.. _class_SliderJoint_property_linear_ortho/softness:

- :ref:`float<class_float>` **linear_ortho/softness**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Un factor aplicado al movimiento a través de ejes ortogonales al deslizador.

Descripciones de Métodos
------------------------------------------------

.. _class_SliderJoint_method_get_param:

- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint_Param>` param **)** |const|

----

.. _class_SliderJoint_method_set_param:

- void **set_param** **(** :ref:`Param<enum_SliderJoint_Param>` param, :ref:`float<class_float>` value **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
