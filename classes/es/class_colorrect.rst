:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the ColorRect.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ColorRect:

ColorRect
=========

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Rectángulo coloreado.

Descripción
----------------------

Displays a rectangle filled with a solid :ref:`color<class_ColorRect_property_color>`. If you need to display the border alone, consider using :ref:`ReferenceRect<class_ReferenceRect>` instead.

Tutoriales
--------------------

- `2D Dodge The Creeps Demo <https://godotengine.org/asset-library/asset/515>`__

Propiedades
----------------------

+---------------------------+----------------------------------------------+-------------------------+
| :ref:`Color<class_Color>` | :ref:`color<class_ColorRect_property_color>` | ``Color( 1, 1, 1, 1 )`` |
+---------------------------+----------------------------------------------+-------------------------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_ColorRect_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_frame_color(value)  |
+-----------+-------------------------+
| *Getter*  | get_frame_color()       |
+-----------+-------------------------+

El color de relleno.

::

    $ColorRect.color = Color(1, 0, 0, 1) # Establece el color de ColorRect a rojo.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
