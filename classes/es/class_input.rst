:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Input.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Input:

Input
=====

**Inherits:** :ref:`Object<class_Object>`

Un singleton que se ocupa de las entradas.

Descripción
----------------------

Un singleton que se ocupa de las entradas. Esto incluye pulsaciones de teclas, botones del ratón y movimiento, joypads y acciones de entrada. Las acciones y sus eventos se pueden configurar en la pestaña **Mapa de entradas** en el **Proyecto > Configuración del proyecto**, o con la clase :ref:`InputMap<class_InputMap>`.

Tutoriales
--------------------

- :doc:`Inputs tutorial index <../tutorials/inputs/index>`

- `2D Dodge The Creeps Demo <https://godotengine.org/asset-library/asset/515>`__

- `3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__

Métodos
--------------

+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`action_press<class_Input_method_action_press>` **(** :ref:`String<class_String>` action, :ref:`float<class_float>` strength=1.0 **)**                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`action_release<class_Input_method_action_release>` **(** :ref:`String<class_String>` action **)**                                                                                                                                                                      |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`add_joy_mapping<class_Input_method_add_joy_mapping>` **(** :ref:`String<class_String>` mapping, :ref:`bool<class_bool>` update_existing=false **)**                                                                                                                    |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`flush_buffered_events<class_Input_method_flush_buffered_events>` **(** **)**                                                                                                                                                                                           |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`              | :ref:`get_accelerometer<class_Input_method_get_accelerometer>` **(** **)** |const|                                                                                                                                                                                           |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                  | :ref:`get_action_raw_strength<class_Input_method_get_action_raw_strength>` **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|                                                                                                       |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                  | :ref:`get_action_strength<class_Input_method_get_action_strength>` **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|                                                                                                               |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                  | :ref:`get_axis<class_Input_method_get_axis>` **(** :ref:`String<class_String>` negative_action, :ref:`String<class_String>` positive_action **)** |const|                                                                                                                    |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`                  | :ref:`get_connected_joypads<class_Input_method_get_connected_joypads>` **(** **)**                                                                                                                                                                                           |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`CursorShape<enum_Input_CursorShape>` | :ref:`get_current_cursor_shape<class_Input_method_get_current_cursor_shape>` **(** **)** |const|                                                                                                                                                                             |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`              | :ref:`get_gravity<class_Input_method_get_gravity>` **(** **)** |const|                                                                                                                                                                                                       |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`              | :ref:`get_gyroscope<class_Input_method_get_gyroscope>` **(** **)** |const|                                                                                                                                                                                                   |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                  | :ref:`get_joy_axis<class_Input_method_get_joy_axis>` **(** :ref:`int<class_int>` device, :ref:`int<class_int>` axis **)** |const|                                                                                                                                            |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`get_joy_axis_index_from_string<class_Input_method_get_joy_axis_index_from_string>` **(** :ref:`String<class_String>` axis **)**                                                                                                                                        |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                | :ref:`get_joy_axis_string<class_Input_method_get_joy_axis_string>` **(** :ref:`int<class_int>` axis_index **)**                                                                                                                                                              |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`get_joy_button_index_from_string<class_Input_method_get_joy_button_index_from_string>` **(** :ref:`String<class_String>` button **)**                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                | :ref:`get_joy_button_string<class_Input_method_get_joy_button_string>` **(** :ref:`int<class_int>` button_index **)**                                                                                                                                                        |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                | :ref:`get_joy_guid<class_Input_method_get_joy_guid>` **(** :ref:`int<class_int>` device **)** |const|                                                                                                                                                                        |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                | :ref:`get_joy_name<class_Input_method_get_joy_name>` **(** :ref:`int<class_int>` device **)**                                                                                                                                                                                |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                  | :ref:`get_joy_vibration_duration<class_Input_method_get_joy_vibration_duration>` **(** :ref:`int<class_int>` device **)**                                                                                                                                                    |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`              | :ref:`get_joy_vibration_strength<class_Input_method_get_joy_vibration_strength>` **(** :ref:`int<class_int>` device **)**                                                                                                                                                    |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`              | :ref:`get_last_mouse_speed<class_Input_method_get_last_mouse_speed>` **(** **)** |const|                                                                                                                                                                                     |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`              | :ref:`get_magnetometer<class_Input_method_get_magnetometer>` **(** **)** |const|                                                                                                                                                                                             |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                      | :ref:`get_mouse_button_mask<class_Input_method_get_mouse_button_mask>` **(** **)** |const|                                                                                                                                                                                   |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`MouseMode<enum_Input_MouseMode>`     | :ref:`get_mouse_mode<class_Input_method_get_mouse_mode>` **(** **)** |const|                                                                                                                                                                                                 |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`              | :ref:`get_vector<class_Input_method_get_vector>` **(** :ref:`String<class_String>` negative_x, :ref:`String<class_String>` positive_x, :ref:`String<class_String>` negative_y, :ref:`String<class_String>` positive_y, :ref:`float<class_float>` deadzone=-1.0 **)** |const| |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_action_just_pressed<class_Input_method_is_action_just_pressed>` **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|                                                                                                         |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_action_just_released<class_Input_method_is_action_just_released>` **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|                                                                                                       |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_action_pressed<class_Input_method_is_action_pressed>` **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|                                                                                                                   |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_joy_button_pressed<class_Input_method_is_joy_button_pressed>` **(** :ref:`int<class_int>` device, :ref:`int<class_int>` button **)** |const|                                                                                                                        |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_joy_known<class_Input_method_is_joy_known>` **(** :ref:`int<class_int>` device **)**                                                                                                                                                                                |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_key_pressed<class_Input_method_is_key_pressed>` **(** :ref:`int<class_int>` scancode **)** |const|                                                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_mouse_button_pressed<class_Input_method_is_mouse_button_pressed>` **(** :ref:`int<class_int>` button **)** |const|                                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`is_physical_key_pressed<class_Input_method_is_physical_key_pressed>` **(** :ref:`int<class_int>` scancode **)** |const|                                                                                                                                                |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`joy_connection_changed<class_Input_method_joy_connection_changed>` **(** :ref:`int<class_int>` device, :ref:`bool<class_bool>` connected, :ref:`String<class_String>` name, :ref:`String<class_String>` guid **)**                                                     |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`parse_input_event<class_Input_method_parse_input_event>` **(** :ref:`InputEvent<class_InputEvent>` event **)**                                                                                                                                                         |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`remove_joy_mapping<class_Input_method_remove_joy_mapping>` **(** :ref:`String<class_String>` guid **)**                                                                                                                                                                |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`set_accelerometer<class_Input_method_set_accelerometer>` **(** :ref:`Vector3<class_Vector3>` value **)**                                                                                                                                                               |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`set_custom_mouse_cursor<class_Input_method_set_custom_mouse_cursor>` **(** :ref:`Resource<class_Resource>` image, :ref:`CursorShape<enum_Input_CursorShape>` shape=0, :ref:`Vector2<class_Vector2>` hotspot=Vector2( 0, 0 ) **)**                                      |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`set_default_cursor_shape<class_Input_method_set_default_cursor_shape>` **(** :ref:`CursorShape<enum_Input_CursorShape>` shape=0 **)**                                                                                                                                  |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`set_gravity<class_Input_method_set_gravity>` **(** :ref:`Vector3<class_Vector3>` value **)**                                                                                                                                                                           |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`set_gyroscope<class_Input_method_set_gyroscope>` **(** :ref:`Vector3<class_Vector3>` value **)**                                                                                                                                                                       |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`set_magnetometer<class_Input_method_set_magnetometer>` **(** :ref:`Vector3<class_Vector3>` value **)**                                                                                                                                                                 |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`set_mouse_mode<class_Input_method_set_mouse_mode>` **(** :ref:`MouseMode<enum_Input_MouseMode>` mode **)**                                                                                                                                                             |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`set_use_accumulated_input<class_Input_method_set_use_accumulated_input>` **(** :ref:`bool<class_bool>` enable **)**                                                                                                                                                    |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`start_joy_vibration<class_Input_method_start_joy_vibration>` **(** :ref:`int<class_int>` device, :ref:`float<class_float>` weak_magnitude, :ref:`float<class_float>` strong_magnitude, :ref:`float<class_float>` duration=0 **)**                                      |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`stop_joy_vibration<class_Input_method_stop_joy_vibration>` **(** :ref:`int<class_int>` device **)**                                                                                                                                                                    |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`vibrate_handheld<class_Input_method_vibrate_handheld>` **(** :ref:`int<class_int>` duration_ms=500 **)**                                                                                                                                                               |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                       | :ref:`warp_mouse_position<class_Input_method_warp_mouse_position>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                                                                              |
+--------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Señales
--------------

.. _class_Input_signal_joy_connection_changed:

- **joy_connection_changed** **(** :ref:`int<class_int>` device, :ref:`bool<class_bool>` connected **)**

Se emite cuando se ha conectado o desconectado un dispositivo joypad.

Enumeraciones
--------------------------

.. _enum_Input_MouseMode:

.. _class_Input_constant_MOUSE_MODE_VISIBLE:

.. _class_Input_constant_MOUSE_MODE_HIDDEN:

.. _class_Input_constant_MOUSE_MODE_CAPTURED:

.. _class_Input_constant_MOUSE_MODE_CONFINED:

enum **MouseMode**:

- **MOUSE_MODE_VISIBLE** = **0** --- Hace que el cursor del ratón sea visible si está oculto.

- **MOUSE_MODE_HIDDEN** = **1** --- Hace que el cursor del ratón se oculte si es visible.

- **MOUSE_MODE_CAPTURED** = **2** --- Captures the mouse. The mouse will be hidden and its position locked at the center of the screen.

\ **Note:** If you want to process the mouse's movement in this mode, you need to use :ref:`InputEventMouseMotion.relative<class_InputEventMouseMotion_property_relative>`.

- **MOUSE_MODE_CONFINED** = **3** --- Hace visible el cursor del ratón pero lo limita a la ventana del juego.

----

.. _enum_Input_CursorShape:

.. _class_Input_constant_CURSOR_ARROW:

.. _class_Input_constant_CURSOR_IBEAM:

.. _class_Input_constant_CURSOR_POINTING_HAND:

.. _class_Input_constant_CURSOR_CROSS:

.. _class_Input_constant_CURSOR_WAIT:

.. _class_Input_constant_CURSOR_BUSY:

.. _class_Input_constant_CURSOR_DRAG:

.. _class_Input_constant_CURSOR_CAN_DROP:

.. _class_Input_constant_CURSOR_FORBIDDEN:

.. _class_Input_constant_CURSOR_VSIZE:

.. _class_Input_constant_CURSOR_HSIZE:

.. _class_Input_constant_CURSOR_BDIAGSIZE:

.. _class_Input_constant_CURSOR_FDIAGSIZE:

.. _class_Input_constant_CURSOR_MOVE:

.. _class_Input_constant_CURSOR_VSPLIT:

.. _class_Input_constant_CURSOR_HSPLIT:

.. _class_Input_constant_CURSOR_HELP:

enum **CursorShape**:

- **CURSOR_ARROW** = **0** --- Cursor de la flecha. Cursor puntero estándar y predeterminado.

- **CURSOR_IBEAM** = **1** --- Cursor del rayo I. Normalmente se usa para mostrar dónde aparecerá el cursor de texto cuando se haga clic con el ratón.

- **CURSOR_POINTING_HAND** = **2** --- Apuntando con el cursor de la mano. Normalmente se usa para indicar que el puntero está sobre un enlace u otro elemento interactivo.

- **CURSOR_CROSS** = **3** --- Cursor en cruz. Normalmente aparece sobre las regiones en las que se puede realizar una operación de dibujo o para realizar selecciones.

- **CURSOR_WAIT** = **4** --- Espera el cursor. Indica que la aplicación está ocupada realizando una operación. La forma del cursor indica que la aplicación sigue siendo utilizable durante la operación.

- **CURSOR_BUSY** = **5** --- Cursor ocupado. Indica que la aplicación está ocupada realizando una operación. Esta forma de cursor denota que la aplicación no es utilizable durante la operación (por ejemplo, algo está bloqueando su hilo principal).

- **CURSOR_DRAG** = **6** --- Cursor de arrastre. Normalmente se muestra cuando se arrastra algo.

- **CURSOR_CAN_DROP** = **7** --- Puede soltar el cursor. Normalmente se muestra cuando se arrastra algo para indicar que se puede soltar en la posición actual.

- **CURSOR_FORBIDDEN** = **8** --- Cursor prohibido. Indica que la acción actual está prohibida (por ejemplo, al arrastrar algo) o que el control en una posición está desactivado.

- **CURSOR_VSIZE** = **9** --- Cursor del ratón de tamaño vertical. Una flecha vertical de doble punta. Le dice al usuario que puede cambiar el tamaño de la ventana o del panel verticalmente.

- **CURSOR_HSIZE** = **10** --- Cursor del ratón de tamaño horizontal. Una flecha horizontal de doble cabeza. Le dice al usuario que puede cambiar el tamaño de la ventana o del panel horizontalmente.

- **CURSOR_BDIAGSIZE** = **11** --- La ventana cambia el tamaño del cursor del ratón. El cursor es una flecha de doble punta que va de abajo a la izquierda a arriba a la derecha. Le dice al usuario que puede cambiar el tamaño de la ventana o del panel tanto horizontal como verticalmente.

- **CURSOR_FDIAGSIZE** = **12** --- La ventana cambia el tamaño del cursor del ratón. El cursor es una flecha de doble punta que va de arriba a la izquierda a abajo a la derecha, lo opuesto a :ref:`CURSOR_BDIAGSIZE<class_Input_constant_CURSOR_BDIAGSIZE>`. Le dice al usuario que puede cambiar el tamaño de la ventana o del panel tanto horizontal como verticalmente.

- **CURSOR_MOVE** = **13** --- Mueve el cursor. Indica que algo puede ser movido.

- **CURSOR_VSPLIT** = **14** --- Cursor del ratón dividido verticalmente. En Windows, es lo mismo que :ref:`CURSOR_VSIZE<class_Input_constant_CURSOR_VSIZE>`.

- **CURSOR_HSPLIT** = **15** --- Cursor del ratón dividido horizontalmente. En Windows, es lo mismo que :ref:`CURSOR_HSIZE<class_Input_constant_CURSOR_HSIZE>`.

- **CURSOR_HELP** = **16** --- Cursor de ayuda. Normalmente un signo de interrogación.

Descripciones de Métodos
------------------------------------------------

.. _class_Input_method_action_press:

- void **action_press** **(** :ref:`String<class_String>` action, :ref:`float<class_float>` strength=1.0 **)**

Esto simulará pulsar la acción específica.

La fuerza puede ser usada para acciones no booleanas, está entre 0 y 1 representando la intensidad de la acción dada.

\ **Nota:** Este método no causará ninguna llamada al :ref:`Node._input<class_Node_method__input>`. Está pensado para ser usado con :ref:`is_action_pressed<class_Input_method_is_action_pressed>` y :ref:`is_action_just_pressed<class_Input_method_is_action_just_pressed>`. Si quieres simular ``_input``, usa en su lugar :ref:`parse_input_event<class_Input_method_parse_input_event>`.

----

.. _class_Input_method_action_release:

- void **action_release** **(** :ref:`String<class_String>` action **)**

Si la acción especificada ya está presionada, esto la liberará.

----

.. _class_Input_method_add_joy_mapping:

- void **add_joy_mapping** **(** :ref:`String<class_String>` mapping, :ref:`bool<class_bool>` update_existing=false **)**

Añade una nueva entrada de mapeo (en formato SDL2) a la base de datos de mapeo. Opcionalmente actualiza los dispositivos ya conectados.

----

.. _class_Input_method_flush_buffered_events:

- void **flush_buffered_events** **(** **)**

Sends all input events which are in the current buffer to the game loop. These events may have been buffered as a result of accumulated input (:ref:`set_use_accumulated_input<class_Input_method_set_use_accumulated_input>`) or agile input flushing (:ref:`ProjectSettings.input_devices/buffering/agile_event_flushing<class_ProjectSettings_property_input_devices/buffering/agile_event_flushing>`).

The engine will already do this itself at key execution points (at least once per frame). However, this can be useful in advanced cases where you want precise control over the timing of event handling.

----

.. _class_Input_method_get_accelerometer:

- :ref:`Vector3<class_Vector3>` **get_accelerometer** **(** **)** |const|

Returns the acceleration of the device's accelerometer sensor, if the device has one. Otherwise, the method returns :ref:`Vector3.ZERO<class_Vector3_constant_ZERO>`.

Note this method returns an empty :ref:`Vector3<class_Vector3>` when running from the editor even when your device has an accelerometer. You must export your project to a supported device to read values from the accelerometer.

\ **Note:** This method only works on iOS, Android, and UWP. On other platforms, it always returns :ref:`Vector3.ZERO<class_Vector3_constant_ZERO>`. On Android the unit of measurement for each axis is m/s² while on iOS and UWP it's a multiple of the Earth's gravitational acceleration ``g`` (~9.81 m/s²).

----

.. _class_Input_method_get_action_raw_strength:

- :ref:`float<class_float>` **get_action_raw_strength** **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|

Returns a value between 0 and 1 representing the raw intensity of the given action, ignoring the action's deadzone. In most cases, you should use :ref:`get_action_strength<class_Input_method_get_action_strength>` instead.

If ``exact`` is ``false``, it ignores the input modifiers for :ref:`InputEventKey<class_InputEventKey>` and :ref:`InputEventMouseButton<class_InputEventMouseButton>` events, and the direction for :ref:`InputEventJoypadMotion<class_InputEventJoypadMotion>` events.

----

.. _class_Input_method_get_action_strength:

- :ref:`float<class_float>` **get_action_strength** **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|

Returns a value between 0 and 1 representing the intensity of the given action. In a joypad, for example, the further away the axis (analog sticks or L2, R2 triggers) is from the dead zone, the closer the value will be to 1. If the action is mapped to a control that has no axis as the keyboard, the value returned will be 0 or 1.

If ``exact`` is ``false``, it ignores the input modifiers for :ref:`InputEventKey<class_InputEventKey>` and :ref:`InputEventMouseButton<class_InputEventMouseButton>` events, and the direction for :ref:`InputEventJoypadMotion<class_InputEventJoypadMotion>` events.

----

.. _class_Input_method_get_axis:

- :ref:`float<class_float>` **get_axis** **(** :ref:`String<class_String>` negative_action, :ref:`String<class_String>` positive_action **)** |const|

Get axis input by specifying two actions, one negative and one positive.

This is a shorthand for writing ``Input.get_action_strength("positive_action") - Input.get_action_strength("negative_action")``.

----

.. _class_Input_method_get_connected_joypads:

- :ref:`Array<class_Array>` **get_connected_joypads** **(** **)**

Devuelve un :ref:`Array<class_Array>` que contiene los Ids de los dispositivos de todos los joypads conectados actualmente.

----

.. _class_Input_method_get_current_cursor_shape:

- :ref:`CursorShape<enum_Input_CursorShape>` **get_current_cursor_shape** **(** **)** |const|

Devuelve la forma del cursor actualmente asignada (véase :ref:`CursorShape<enum_Input_CursorShape>`).

----

.. _class_Input_method_get_gravity:

- :ref:`Vector3<class_Vector3>` **get_gravity** **(** **)** |const|

Returns the gravity of the device's accelerometer sensor, if the device has one. Otherwise, the method returns :ref:`Vector3.ZERO<class_Vector3_constant_ZERO>`.

\ **Note:** This method only works on Android and iOS. On other platforms, it always returns :ref:`Vector3.ZERO<class_Vector3_constant_ZERO>`. On Android the unit of measurement for each axis is m/s² while on iOS it's a multiple of the Earth's gravitational acceleration ``g`` (~9.81 m/s²).

----

.. _class_Input_method_get_gyroscope:

- :ref:`Vector3<class_Vector3>` **get_gyroscope** **(** **)** |const|

Returns the rotation rate in rad/s around a device's X, Y, and Z axes of the gyroscope sensor, if the device has one. Otherwise, the method returns :ref:`Vector3.ZERO<class_Vector3_constant_ZERO>`.

\ **Note:** This method only works on Android and iOS. On other platforms, it always returns :ref:`Vector3.ZERO<class_Vector3_constant_ZERO>`.

----

.. _class_Input_method_get_joy_axis:

- :ref:`float<class_float>` **get_joy_axis** **(** :ref:`int<class_int>` device, :ref:`int<class_int>` axis **)** |const|

Returns the current value of the joypad axis at given index (see :ref:`JoystickList<enum_@GlobalScope_JoystickList>`).

----

.. _class_Input_method_get_joy_axis_index_from_string:

- :ref:`int<class_int>` **get_joy_axis_index_from_string** **(** :ref:`String<class_String>` axis **)**

Devuelve el índice del nombre del eje suministrado.

----

.. _class_Input_method_get_joy_axis_string:

- :ref:`String<class_String>` **get_joy_axis_string** **(** :ref:`int<class_int>` axis_index **)**

Receives a :ref:`JoystickList<enum_@GlobalScope_JoystickList>` axis and returns its equivalent name as a string.

----

.. _class_Input_method_get_joy_button_index_from_string:

- :ref:`int<class_int>` **get_joy_button_index_from_string** **(** :ref:`String<class_String>` button **)**

Devuelve el índice del nombre del botón proporcionado.

----

.. _class_Input_method_get_joy_button_string:

- :ref:`String<class_String>` **get_joy_button_string** **(** :ref:`int<class_int>` button_index **)**

Receives a gamepad button from :ref:`JoystickList<enum_@GlobalScope_JoystickList>` and returns its equivalent name as a string.

----

.. _class_Input_method_get_joy_guid:

- :ref:`String<class_String>` **get_joy_guid** **(** :ref:`int<class_int>` device **)** |const|

Devuelve una GUID de dispositivo compatible con SDL2 en las plataformas que usan remapeo de gamepad. Devuelve ``"Default Gamepad"`` de otra manera.

----

.. _class_Input_method_get_joy_name:

- :ref:`String<class_String>` **get_joy_name** **(** :ref:`int<class_int>` device **)**

Devuelve el nombre del joypad en el índice del dispositivo especificado.

----

.. _class_Input_method_get_joy_vibration_duration:

- :ref:`float<class_float>` **get_joy_vibration_duration** **(** :ref:`int<class_int>` device **)**

Devuelve la duración del efecto de la vibración actual en segundos.

----

.. _class_Input_method_get_joy_vibration_strength:

- :ref:`Vector2<class_Vector2>` **get_joy_vibration_strength** **(** :ref:`int<class_int>` device **)**

Devuelve la fuerza de la vibración del joypad: x es la fuerza del motor débil, e y es la fuerza del motor fuerte.

----

.. _class_Input_method_get_last_mouse_speed:

- :ref:`Vector2<class_Vector2>` **get_last_mouse_speed** **(** **)** |const|

Devuelve la velocidad del ratón, la última vez que se movió el cursor, y esto hasta el siguiente fotograma donde el ratón se mueve. Esto significa que aunque el ratón no se mueva, esta función seguirá devolviendo el valor del último movimiento.

----

.. _class_Input_method_get_magnetometer:

- :ref:`Vector3<class_Vector3>` **get_magnetometer** **(** **)** |const|

Returns the magnetic field strength in micro-Tesla for all axes of the device's magnetometer sensor, if the device has one. Otherwise, the method returns :ref:`Vector3.ZERO<class_Vector3_constant_ZERO>`.

\ **Note:** This method only works on Android, iOS and UWP. On other platforms, it always returns :ref:`Vector3.ZERO<class_Vector3_constant_ZERO>`.

----

.. _class_Input_method_get_mouse_button_mask:

- :ref:`int<class_int>` **get_mouse_button_mask** **(** **)** |const|

Devuelve los botones del ratón como una máscara de bits. Si se pulsan varios botones del ratón al mismo tiempo, los bits se suman.

----

.. _class_Input_method_get_mouse_mode:

- :ref:`MouseMode<enum_Input_MouseMode>` **get_mouse_mode** **(** **)** |const|

Devuelve el modo de ratón. Vea las constantes para más información.

----

.. _class_Input_method_get_vector:

- :ref:`Vector2<class_Vector2>` **get_vector** **(** :ref:`String<class_String>` negative_x, :ref:`String<class_String>` positive_x, :ref:`String<class_String>` negative_y, :ref:`String<class_String>` positive_y, :ref:`float<class_float>` deadzone=-1.0 **)** |const|

Gets an input vector by specifying four actions for the positive and negative X and Y axes.

This method is useful when getting vector input, such as from a joystick, directional pad, arrows, or WASD. The vector has its length limited to 1 and has a circular deadzone, which is useful for using vector input as movement.

By default, the deadzone is automatically calculated from the average of the action deadzones. However, you can override the deadzone to be whatever you want (on the range of 0 to 1).

----

.. _class_Input_method_is_action_just_pressed:

- :ref:`bool<class_bool>` **is_action_just_pressed** **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|

Returns ``true`` when the user starts pressing the action event, meaning it's ``true`` only on the frame that the user pressed down the button.

This is useful for code that needs to run only once when an action is pressed, instead of every frame while it's pressed.

If ``exact`` is ``false``, it ignores the input modifiers for :ref:`InputEventKey<class_InputEventKey>` and :ref:`InputEventMouseButton<class_InputEventMouseButton>` events, and the direction for :ref:`InputEventJoypadMotion<class_InputEventJoypadMotion>` events.

----

.. _class_Input_method_is_action_just_released:

- :ref:`bool<class_bool>` **is_action_just_released** **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|

Returns ``true`` when the user stops pressing the action event, meaning it's ``true`` only on the frame that the user released the button.

If ``exact`` is ``false``, it ignores the input modifiers for :ref:`InputEventKey<class_InputEventKey>` and :ref:`InputEventMouseButton<class_InputEventMouseButton>` events, and the direction for :ref:`InputEventJoypadMotion<class_InputEventJoypadMotion>` events.

----

.. _class_Input_method_is_action_pressed:

- :ref:`bool<class_bool>` **is_action_pressed** **(** :ref:`String<class_String>` action, :ref:`bool<class_bool>` exact=false **)** |const|

Returns ``true`` if you are pressing the action event. Note that if an action has multiple buttons assigned and more than one of them is pressed, releasing one button will release the action, even if some other button assigned to this action is still pressed.

If ``exact`` is ``false``, it ignores the input modifiers for :ref:`InputEventKey<class_InputEventKey>` and :ref:`InputEventMouseButton<class_InputEventMouseButton>` events, and the direction for :ref:`InputEventJoypadMotion<class_InputEventJoypadMotion>` events.

----

.. _class_Input_method_is_joy_button_pressed:

- :ref:`bool<class_bool>` **is_joy_button_pressed** **(** :ref:`int<class_int>` device, :ref:`int<class_int>` button **)** |const|

Returns ``true`` if you are pressing the joypad button (see :ref:`JoystickList<enum_@GlobalScope_JoystickList>`).

----

.. _class_Input_method_is_joy_known:

- :ref:`bool<class_bool>` **is_joy_known** **(** :ref:`int<class_int>` device **)**

Returns ``true`` if the system knows the specified device. This means that it sets all button and axis indices exactly as defined in :ref:`JoystickList<enum_@GlobalScope_JoystickList>`. Unknown joypads are not expected to match these constants, but you can still retrieve events from them.

----

.. _class_Input_method_is_key_pressed:

- :ref:`bool<class_bool>` **is_key_pressed** **(** :ref:`int<class_int>` scancode **)** |const|

Returns ``true`` if you are pressing the key. You can pass a :ref:`KeyList<enum_@GlobalScope_KeyList>` constant.

----

.. _class_Input_method_is_mouse_button_pressed:

- :ref:`bool<class_bool>` **is_mouse_button_pressed** **(** :ref:`int<class_int>` button **)** |const|

Devuelve ``true`` si se pulsa el botón del ratón especificado con :ref:`ButtonList<enum_@GlobalScope_ButtonList>`.

----

.. _class_Input_method_is_physical_key_pressed:

- :ref:`bool<class_bool>` **is_physical_key_pressed** **(** :ref:`int<class_int>` scancode **)** |const|

Returns ``true`` if you are pressing the key in the physical location on the 101/102-key US QWERTY keyboard. You can pass a :ref:`KeyList<enum_@GlobalScope_KeyList>` constant.

----

.. _class_Input_method_joy_connection_changed:

- void **joy_connection_changed** **(** :ref:`int<class_int>` device, :ref:`bool<class_bool>` connected, :ref:`String<class_String>` name, :ref:`String<class_String>` guid **)**

Notifica al singleton ``Input`` que una conexión ha cambiado, para actualizar el estado del índice del ``device``.

Este índice se utiliza internamente y no debería tener que ser llamado desde los scripts de usuario. Véase :ref:`joy_connection_changed<class_Input_signal_joy_connection_changed>` para la señal emitida cuando se activa internamente.

----

.. _class_Input_method_parse_input_event:

- void **parse_input_event** **(** :ref:`InputEvent<class_InputEvent>` event **)**

Alimenta un :ref:`InputEvent<class_InputEvent>` al juego. Puede ser usado para disparar artificialmente eventos de entrada desde el código. También genera llamadas de :ref:`Node._input<class_Node_method__input>`.

Ejemplo:

::

    var evento = InputEventAction.new()
    evento.action = "ui_cancel"
    evento.pressed = true
    Input.parse_input_event(evento)

----

.. _class_Input_method_remove_joy_mapping:

- void **remove_joy_mapping** **(** :ref:`String<class_String>` guid **)**

Elimina todos los mapeos de la base de datos interna que coincidan con la GUID dada.

----

.. _class_Input_method_set_accelerometer:

- void **set_accelerometer** **(** :ref:`Vector3<class_Vector3>` value **)**

Sets the acceleration value of the accelerometer sensor. Can be used for debugging on devices without a hardware sensor, for example in an editor on a PC.

\ **Note:** This value can be immediately overwritten by the hardware sensor value on Android and iOS.

----

.. _class_Input_method_set_custom_mouse_cursor:

- void **set_custom_mouse_cursor** **(** :ref:`Resource<class_Resource>` image, :ref:`CursorShape<enum_Input_CursorShape>` shape=0, :ref:`Vector2<class_Vector2>` hotspot=Vector2( 0, 0 ) **)**

Establece una imagen personalizada del cursor del ratón, que sólo es visible dentro de la ventana del juego. También se puede especificar el punto de acceso. Al pasar ``null`` al parámetro de la imagen se restablece el cursor del sistema. Ver :ref:`CursorShape<enum_Input_CursorShape>` para la lista de formas.

\ ``image`` debe ser inferior a 256×256.

\ ``hotspot`` debe estar dentro del tamaño de ``image``.

\ **Nota: ** :ref:`AnimatedTexture<class_AnimatedTexture>`\ s no están soportados como cursores de ratón personalizados. Si se utiliza una :ref:`AnimatedTexture<class_AnimatedTexture>`, sólo se mostrará el primer fotograma.

\ **Nota:** Sólo se admiten las imágenes importadas con los modos de compresión **SinPerdida**, **ConPerdida** o **SinCompresion**. El modo de compresión **Video RAM** no puede utilizarse para cursores personalizados.

----

.. _class_Input_method_set_default_cursor_shape:

- void **set_default_cursor_shape** **(** :ref:`CursorShape<enum_Input_CursorShape>` shape=0 **)**

Establece la forma del cursor por defecto para ser usado en la vista en lugar de la :ref:`CURSOR_ARROW<class_Input_constant_CURSOR_ARROW>`.

\ **Nota:** Si quieres cambiar la forma del cursor por defecto para los nodos de :ref:`Control<class_Control>`, usa :ref:`Control.mouse_default_cursor_shape<class_Control_property_mouse_default_cursor_shape>` en su lugar.

\ **Nota:** Este método genera un :ref:`InputEventMouseMotion<class_InputEventMouseMotion>` para actualizar el cursor inmediatamente.

----

.. _class_Input_method_set_gravity:

- void **set_gravity** **(** :ref:`Vector3<class_Vector3>` value **)**

Sets the gravity value of the accelerometer sensor. Can be used for debugging on devices without a hardware sensor, for example in an editor on a PC.

\ **Note:** This value can be immediately overwritten by the hardware sensor value on Android and iOS.

----

.. _class_Input_method_set_gyroscope:

- void **set_gyroscope** **(** :ref:`Vector3<class_Vector3>` value **)**

Sets the value of the rotation rate of the gyroscope sensor. Can be used for debugging on devices without a hardware sensor, for example in an editor on a PC.

\ **Note:** This value can be immediately overwritten by the hardware sensor value on Android and iOS.

----

.. _class_Input_method_set_magnetometer:

- void **set_magnetometer** **(** :ref:`Vector3<class_Vector3>` value **)**

Sets the value of the magnetic field of the magnetometer sensor. Can be used for debugging on devices without a hardware sensor, for example in an editor on a PC.

\ **Note:** This value can be immediately overwritten by the hardware sensor value on Android and iOS.

----

.. _class_Input_method_set_mouse_mode:

- void **set_mouse_mode** **(** :ref:`MouseMode<enum_Input_MouseMode>` mode **)**

Establece el modo del ratón. Vea las constantes para más información.

----

.. _class_Input_method_set_use_accumulated_input:

- void **set_use_accumulated_input** **(** :ref:`bool<class_bool>` enable **)**

Habilita o deshabilita la acumulación de eventos de entrada similares enviados por el sistema operativo. Cuando la acumulación de entrada está activada, todos los eventos de entrada generados durante una trama se fusionarán y se emitirán cuando la trama se termine de renderizar. Por lo tanto, esto limita el número de llamadas del método de entrada por segundo al FPS de renderización.

La acumulación de entrada está habilitada por defecto. Se puede desactivar para obtener una entrada ligeramente más precisa/reactiva a costa de un mayor uso de la CPU. En aplicaciones donde se requiere dibujar líneas a mano alzada, la acumulación de entrada generalmente debe deshabilitarse mientras el usuario está dibujando la línea para obtener resultados que sigan de cerca la entrada real.

----

.. _class_Input_method_start_joy_vibration:

- void **start_joy_vibration** **(** :ref:`int<class_int>` device, :ref:`float<class_float>` weak_magnitude, :ref:`float<class_float>` strong_magnitude, :ref:`float<class_float>` duration=0 **)**

Empieza a vibrar el joypad. Los joypads suelen tener dos motores de vibración, uno fuerte y otro débil. ``weak_magnitude`` es la fuerza del motor débil (entre 0 y 1) y ``strong_magnitude`` es la fuerza del motor fuerte (entre 0 y 1). ``duración`` es la duración del efecto en segundos (una duración de 0 intentará reproducir la vibración indefinidamente).

\ **Nota:** No todos los equipos son compatibles con las duraciones de efecto largas; se recomienda reiniciar un efecto si tiene que ser reproducido durante más de unos pocos segundos.

----

.. _class_Input_method_stop_joy_vibration:

- void **stop_joy_vibration** **(** :ref:`int<class_int>` device **)**

Detiene la vibración del joypad.

----

.. _class_Input_method_vibrate_handheld:

- void **vibrate_handheld** **(** :ref:`int<class_int>` duration_ms=500 **)**

Vibrate Android and iOS devices.

\ **Note:** It needs ``VIBRATE`` permission for Android at export settings. iOS does not support duration.

----

.. _class_Input_method_warp_mouse_position:

- void **warp_mouse_position** **(** :ref:`Vector2<class_Vector2>` to **)**

Establece la posición del ratón en el vector especificado.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
