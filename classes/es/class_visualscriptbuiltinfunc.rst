:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisualScriptBuiltinFunc.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualScriptBuiltinFunc:

VisualScriptBuiltinFunc
=======================

**Inherits:** :ref:`VisualScriptNode<class_VisualScriptNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Un nodo Visual Script usado para llamar a las funciones incorporadas.

Descripción
----------------------

Una función incorporada usada dentro de un :ref:`VisualScript<class_VisualScript>`. Suele ser una función matemática o una función de utilidad.

Ver también :ref:`@GDScript<class_@GDScript>`, para las mismas funciones en el lenguaje GDScript.

Propiedades
----------------------

+--------------------------------------------------------------+------------------------------------------------------------------+-------+
| :ref:`BuiltinFunc<enum_VisualScriptBuiltinFunc_BuiltinFunc>` | :ref:`function<class_VisualScriptBuiltinFunc_property_function>` | ``0`` |
+--------------------------------------------------------------+------------------------------------------------------------------+-------+

Enumeraciones
--------------------------

.. _enum_VisualScriptBuiltinFunc_BuiltinFunc:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SIN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_COS:

.. _class_VisualScriptBuiltinFunc_constant_MATH_TAN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SINH:

.. _class_VisualScriptBuiltinFunc_constant_MATH_COSH:

.. _class_VisualScriptBuiltinFunc_constant_MATH_TANH:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ASIN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ACOS:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ATAN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ATAN2:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SQRT:

.. _class_VisualScriptBuiltinFunc_constant_MATH_FMOD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_FPOSMOD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_FLOOR:

.. _class_VisualScriptBuiltinFunc_constant_MATH_CEIL:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ROUND:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ABS:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SIGN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_POW:

.. _class_VisualScriptBuiltinFunc_constant_MATH_LOG:

.. _class_VisualScriptBuiltinFunc_constant_MATH_EXP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ISNAN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ISINF:

.. _class_VisualScriptBuiltinFunc_constant_MATH_EASE:

.. _class_VisualScriptBuiltinFunc_constant_MATH_DECIMALS:

.. _class_VisualScriptBuiltinFunc_constant_MATH_STEPIFY:

.. _class_VisualScriptBuiltinFunc_constant_MATH_LERP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_INVERSE_LERP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANGE_LERP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_MOVE_TOWARD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_DECTIME:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANDOMIZE:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RAND:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANDF:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANDOM:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SEED:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANDSEED:

.. _class_VisualScriptBuiltinFunc_constant_MATH_DEG2RAD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RAD2DEG:

.. _class_VisualScriptBuiltinFunc_constant_MATH_LINEAR2DB:

.. _class_VisualScriptBuiltinFunc_constant_MATH_DB2LINEAR:

.. _class_VisualScriptBuiltinFunc_constant_MATH_POLAR2CARTESIAN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_CARTESIAN2POLAR:

.. _class_VisualScriptBuiltinFunc_constant_MATH_WRAP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_WRAPF:

.. _class_VisualScriptBuiltinFunc_constant_LOGIC_MAX:

.. _class_VisualScriptBuiltinFunc_constant_LOGIC_MIN:

.. _class_VisualScriptBuiltinFunc_constant_LOGIC_CLAMP:

.. _class_VisualScriptBuiltinFunc_constant_LOGIC_NEAREST_PO2:

.. _class_VisualScriptBuiltinFunc_constant_OBJ_WEAKREF:

.. _class_VisualScriptBuiltinFunc_constant_FUNC_FUNCREF:

.. _class_VisualScriptBuiltinFunc_constant_TYPE_CONVERT:

.. _class_VisualScriptBuiltinFunc_constant_TYPE_OF:

.. _class_VisualScriptBuiltinFunc_constant_TYPE_EXISTS:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_CHAR:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_STR:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_PRINT:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_PRINTERR:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_PRINTRAW:

.. _class_VisualScriptBuiltinFunc_constant_VAR_TO_STR:

.. _class_VisualScriptBuiltinFunc_constant_STR_TO_VAR:

.. _class_VisualScriptBuiltinFunc_constant_VAR_TO_BYTES:

.. _class_VisualScriptBuiltinFunc_constant_BYTES_TO_VAR:

.. _class_VisualScriptBuiltinFunc_constant_COLORN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SMOOTHSTEP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_POSMOD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_LERP_ANGLE:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_ORD:

.. _class_VisualScriptBuiltinFunc_constant_FUNC_MAX:

enum **BuiltinFunc**:

- **MATH_SIN** = **0** --- Devuelve el seno de la entrada.

- **MATH_COS** = **1** --- Devuelve el coseno de la entrada.

- **MATH_TAN** = **2** --- Devuelve la tangente de la entrada.

- **MATH_SINH** = **3** --- Devuelve el seno hiperbólico de la entrada.

- **MATH_COSH** = **4** --- Devuelve el coseno hiperbólico de la entrada.

- **MATH_TANH** = **5** --- Devuelve la tangente hiperbólica de la entrada.

- **MATH_ASIN** = **6** --- Devuelve el arco sinusoidal de la entrada.

- **MATH_ACOS** = **7** --- Devuelve el arco coseno de la entrada.

- **MATH_ATAN** = **8** --- Devuelve el arco tangente de la entrada.

- **MATH_ATAN2** = **9** --- Devuelve el arco tangente de la entrada, usando los signos de ambos parámetros para determinar el ángulo exacto.

- **MATH_SQRT** = **10** --- Devuelve la raíz cuadrada de la entrada.

- **MATH_FMOD** = **11** --- Devuelve el resto de una entrada dividida por la otra, usando números reales.

- **MATH_FPOSMOD** = **12** --- Devuelve el resto positivo de una entrada dividido por la otra, usando números reales.

- **MATH_FLOOR** = **13** --- Devuelve la entrada redondeada hacia abajo.

- **MATH_CEIL** = **14** --- Devuelve la entrada redondeada hacia arriba.

- **MATH_ROUND** = **15** --- Devuelve la entrada redondeada al entero más cercano.

- **MATH_ABS** = **16** --- Devuelve el valor absoluto de la entrada.

- **MATH_SIGN** = **17** --- Devuelve el signo de la entrada, convirtiéndolo en 1, -1, o 0. Útil para determinar si la entrada es positiva o negativa.

- **MATH_POW** = **18** --- Devuelve la entrada elevada a una potencia determinada.

- **MATH_LOG** = **19** --- Devuelve el logaritmo natural de la entrada. Tenga en cuenta que esta no es la típica función de logaritmo de base 10 que utilizan las calculadoras.

- **MATH_EXP** = **20** --- Devuelve la constante matemática **e** elevada a la potencia especificada de la entrada. **e** tiene un valor aproximado de 2.71828.

- **MATH_ISNAN** = **21** --- Devuelve si la entrada es NaN (No es un número) o no. El NaN se produce normalmente dividiendo 0 por 0, aunque existen otras formas.

- **MATH_ISINF** = **22** --- Devuelve si la entrada es un número de real infinito o no. El infinito se produce normalmente dividiendo un número por 0, aunque existen otras formas.

- **MATH_EASE** = **23** --- Función easing, basada en exponente. 0 es constante, 1 es lineal, 0 a 1 es ease-in, mayor de 1 es ease-out, -1 a 0 es out-in, y menor que -1 es in-out.

- **MATH_DECIMALS** = **24** --- Devuelve el número de lugares de los dígitos después del decimal que ocurre el primer dígito no cero.

- **MATH_STEPIFY** = **25** --- Devuelve la entrada ajustada a un paso determinado.

- **MATH_LERP** = **26** --- Devuelve un número interpolado linealmente entre las dos primeras entradas, basado en la tercera entrada. Utiliza la fórmula ``a + (a - b) * t``.

- **MATH_INVERSE_LERP** = **27**

- **MATH_RANGE_LERP** = **28**

- **MATH_MOVE_TOWARD** = **29** --- Mueve el número hacia un valor, basado en la tercera entrada.

- **MATH_DECTIME** = **30** --- Devuelve el resultado de ``value`` disminuido por ``step`` \* ``amount``.

- **MATH_RANDOMIZE** = **31** --- Aleatoriza la semilla (o el estado interno) del generador de números aleatorios. La implementación actual resiembra usando un número basado en el tiempo.

- **MATH_RAND** = **32** --- Devuelve un valor entero aleatorio de 32 bits. Para obtener un valor aleatorio entre 0 y N (donde N es menor que 2^32 - 1), se puede utilizar con la función resto.

- **MATH_RANDF** = **33** --- Devuelve un valor de real aleatorio entre 0 y 1. Para obtener un valor aleatorio entre 0 y N, puedes usarlo con la multiplicación.

- **MATH_RANDOM** = **34** --- Devuelve un valor de real aleatorio entre las dos entradas.

- **MATH_SEED** = **35** --- Coloca la semilla para el generador de números aleatorios.

- **MATH_RANDSEED** = **36** --- Devuelve un valor aleatorio de la semilla dada, junto con la nueva semilla.

- **MATH_DEG2RAD** = **37** --- Convierte la entrada de grados a radianes.

- **MATH_RAD2DEG** = **38** --- Convierte la entrada de radianes a grados.

- **MATH_LINEAR2DB** = **39** --- Convierte la entrada de volumen lineal a volumen en decibelios.

- **MATH_DB2LINEAR** = **40** --- Convierte la entrada de volumen en decibelios a volumen lineal.

- **MATH_POLAR2CARTESIAN** = **41** --- Convierte un punto 2D expresado en el sistema de coordenadas polares (una distancia del origen ``r`` y un ángulo ``th``) en el sistema de coordenadas cartesianas (ejes X e Y).

- **MATH_CARTESIAN2POLAR** = **42** --- Convierte un punto 2D expresado en el sistema de coordenadas cartesianas (ejes X e Y) en el sistema de coordenadas polares (una distancia del origen y un ángulo).

- **MATH_WRAP** = **43**

- **MATH_WRAPF** = **44**

- **LOGIC_MAX** = **45** --- Devuelve el mayor de los dos números, también conocido como su máximo.

- **LOGIC_MIN** = **46** --- Devuelve el menor de los dos números, también conocido como su mínimo.

- **LOGIC_CLAMP** = **47** --- Devuelve la entrada sujetada dentro del rango dado, asegurando que el resultado nunca esté fuera de él. Equivalente a ``min(max(input, range_low), range_high)``.

- **LOGIC_NEAREST_PO2** = **48** --- Devuelve la potencia más cercana de 2 a la entrada.

- **OBJ_WEAKREF** = **49** --- Crea un :ref:`WeakRef<class_WeakRef>` a partir de la entrada.

- **FUNC_FUNCREF** = **50** --- Crea un :ref:`FuncRef<class_FuncRef>` a partir de la entrada.

- **TYPE_CONVERT** = **51** --- Convierte entre tipos.

- **TYPE_OF** = **52** --- Devuelve el tipo de la entrada como un entero. Comprueba :ref:`Variant.Type<enum_@GlobalScope_Variant.Type>` para los números enteros que pueden ser devueltos.

- **TYPE_EXISTS** = **53** --- Comprueba si un tipo está registrado en la :ref:`ClassDB<class_ClassDB>`.

- **TEXT_CHAR** = **54** --- Devuelve un personaje con el valor ascii dado.

- **TEXT_STR** = **55** --- Convierte la entrada en una string.

- **TEXT_PRINT** = **56** --- Imprime la string dada en la ventana de salida.

- **TEXT_PRINTERR** = **57** --- Imprime la string dada a la salida de error estándar.

- **TEXT_PRINTRAW** = **58** --- Imprime la string dada a la salida de error estándar, sin añadir una nueva linea.

- **VAR_TO_STR** = **59** --- Serializa una :ref:`Variant<class_Variant>` a una string.

- **STR_TO_VAR** = **60** --- Deserializa una :ref:`Variant<class_Variant>` de una string serializada usando :ref:`VAR_TO_STR<class_VisualScriptBuiltinFunc_constant_VAR_TO_STR>`.

- **VAR_TO_BYTES** = **61** --- Serialize a :ref:`Variant<class_Variant>` to a :ref:`PoolByteArray<class_PoolByteArray>`.

- **BYTES_TO_VAR** = **62** --- Deserialize a :ref:`Variant<class_Variant>` from a :ref:`PoolByteArray<class_PoolByteArray>` serialized using :ref:`VAR_TO_BYTES<class_VisualScriptBuiltinFunc_constant_VAR_TO_BYTES>`.

- **COLORN** = **63** --- Devuelve el :ref:`Color<class_Color>` con el nombre y el alfa que va de 0 a 1.

\ **Nota:** Los nombres están definidos en ``color_names.inc``.

- **MATH_SMOOTHSTEP** = **64** --- Devuelve un número interpolado suavemente entre las dos primeras entradas, basado en la tercera entrada. Similar a :ref:`MATH_LERP<class_VisualScriptBuiltinFunc_constant_MATH_LERP>`, pero interpola más rápido al principio y más lento al final. Usando la fórmula de interpolación de Hermite:

::

    var t = clamp((weight - from) / (to - from), 0.0, 1.0)
    return t * t * (3.0 - 2.0 * t)

- **MATH_POSMOD** = **65**

- **MATH_LERP_ANGLE** = **66**

- **TEXT_ORD** = **67**

- **FUNC_MAX** = **68** --- Representa el tamaño del enum :ref:`BuiltinFunc<enum_VisualScriptBuiltinFunc_BuiltinFunc>`.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_VisualScriptBuiltinFunc_property_function:

- :ref:`BuiltinFunc<enum_VisualScriptBuiltinFunc_BuiltinFunc>` **function**

+-----------+-----------------+
| *Default* | ``0``           |
+-----------+-----------------+
| *Setter*  | set_func(value) |
+-----------+-----------------+
| *Getter*  | get_func()      |
+-----------+-----------------+

La función a ser ejecutada.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
