:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the TextureRect.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TextureRect:

TextureRect
===========

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Control para dibujar texturas.

Descripción
----------------------

Used to draw icons and sprites in a user interface. The texture's placement can be controlled with the :ref:`stretch_mode<class_TextureRect_property_stretch_mode>` property. It can scale, tile, or stay centered inside its bounding rectangle.

\ **Note:** You should enable :ref:`flip_v<class_TextureRect_property_flip_v>` when using a TextureRect to display a :ref:`ViewportTexture<class_ViewportTexture>`. Alternatively, you can enable :ref:`Viewport.render_target_v_flip<class_Viewport_property_render_target_v_flip>` on the Viewport. Otherwise, the image will appear upside down.

Tutoriales
--------------------

- `3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__

Propiedades
----------------------

+--------------------------------------------------+--------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`bool<class_bool>`                          | :ref:`expand<class_TextureRect_property_expand>`             | ``false``                                                             |
+--------------------------------------------------+--------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`bool<class_bool>`                          | :ref:`flip_h<class_TextureRect_property_flip_h>`             | ``false``                                                             |
+--------------------------------------------------+--------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`bool<class_bool>`                          | :ref:`flip_v<class_TextureRect_property_flip_v>`             | ``false``                                                             |
+--------------------------------------------------+--------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`MouseFilter<enum_Control_MouseFilter>`     | mouse_filter                                                 | ``1`` (overrides :ref:`Control<class_Control_property_mouse_filter>`) |
+--------------------------------------------------+--------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`StretchMode<enum_TextureRect_StretchMode>` | :ref:`stretch_mode<class_TextureRect_property_stretch_mode>` | ``0``                                                                 |
+--------------------------------------------------+--------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                    | :ref:`texture<class_TextureRect_property_texture>`           |                                                                       |
+--------------------------------------------------+--------------------------------------------------------------+-----------------------------------------------------------------------+

Enumeraciones
--------------------------

.. _enum_TextureRect_StretchMode:

.. _class_TextureRect_constant_STRETCH_SCALE_ON_EXPAND:

.. _class_TextureRect_constant_STRETCH_SCALE:

.. _class_TextureRect_constant_STRETCH_TILE:

.. _class_TextureRect_constant_STRETCH_KEEP:

.. _class_TextureRect_constant_STRETCH_KEEP_CENTERED:

.. _class_TextureRect_constant_STRETCH_KEEP_ASPECT:

.. _class_TextureRect_constant_STRETCH_KEEP_ASPECT_CENTERED:

.. _class_TextureRect_constant_STRETCH_KEEP_ASPECT_COVERED:

enum **StretchMode**:

- **STRETCH_SCALE_ON_EXPAND** = **0** --- Escala para ajustarse al rectángulo delimitador del nodo, sólo si ``expand`` es ``true``. Por defecto ``stretch_mode``, para compatibilidad hacia atrás. Hasta que no pongas ``expand`` en ``true``, la textura se comportará como :ref:`STRETCH_KEEP<class_TextureRect_constant_STRETCH_KEEP>`.

- **STRETCH_SCALE** = **1** --- Escala para ajustarse al rectángulo delimitador del nodo.

- **STRETCH_TILE** = **2** --- Tile dentro del rectángulo delimitador del nodo.

- **STRETCH_KEEP** = **3** --- La textura mantiene su tamaño original y se mantiene en la esquina superior izquierda del rectángulo delimitador.

- **STRETCH_KEEP_CENTERED** = **4** --- La textura mantiene su tamaño original y permanece centrado en el rectángulo delimitador del nodo.

- **STRETCH_KEEP_ASPECT** = **5** --- Escala la textura para que se ajuste al rectángulo delimitador del nodo, pero mantén la relación de aspecto de la textura.

- **STRETCH_KEEP_ASPECT_CENTERED** = **6** --- Escala la textura para que se ajuste al rectángulo delimitador del nodo, céntrarlo y mantenga su relación de aspecto.

- **STRETCH_KEEP_ASPECT_COVERED** = **7** --- Escala la textura para que el lado más corto se ajuste al rectángulo delimitador. El otro lado se ajusta a los límites del nodo.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_TextureRect_property_expand:

- :ref:`bool<class_bool>` **expand**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_expand(value) |
+-----------+-------------------+
| *Getter*  | has_expand()      |
+-----------+-------------------+

Si ``true``, la textura se escala para ajustarse a su rectángulo delimitador.

----

.. _class_TextureRect_property_flip_h:

- :ref:`bool<class_bool>` **flip_h**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_flip_h(value) |
+-----------+-------------------+
| *Getter*  | is_flipped_h()    |
+-----------+-------------------+

Si ``true``, la textura se voltea horizontalmente.

----

.. _class_TextureRect_property_flip_v:

- :ref:`bool<class_bool>` **flip_v**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_flip_v(value) |
+-----------+-------------------+
| *Getter*  | is_flipped_v()    |
+-----------+-------------------+

Si ``true``, la textura se voltea verticalmente.

----

.. _class_TextureRect_property_stretch_mode:

- :ref:`StretchMode<enum_TextureRect_StretchMode>` **stretch_mode**

+-----------+-------------------------+
| *Default* | ``0``                   |
+-----------+-------------------------+
| *Setter*  | set_stretch_mode(value) |
+-----------+-------------------------+
| *Getter*  | get_stretch_mode()      |
+-----------+-------------------------+

Controla el comportamiento de la textura al redimensionar el rectángulo de delimitación del nodo. Ver :ref:`StretchMode<enum_TextureRect_StretchMode>`.

----

.. _class_TextureRect_property_texture:

- :ref:`Texture<class_Texture>` **texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

The node's :ref:`Texture<class_Texture>` resource.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
