:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the OS.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_OS:

OS
==

**Inherits:** :ref:`Object<class_Object>`

Funciones del sistema operativo.

Descripción
----------------------

Funciones del sistema operativo. El sistema operativo envuelve las funciones más comunes para comunicarse con el host del sistema operativo, como el portapapeles, el controlador de vídeo, la fecha y la hora, los temporizadores, las variables de entorno, la ejecución de binarios, la línea de comandos, etc.

Tutoriales
--------------------

- `OS Test Demo <https://godotengine.org/asset-library/asset/677>`__

Propiedades
----------------------

+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`String<class_String>`                         | :ref:`clipboard<class_OS_property_clipboard>`                                                         | ``""``              |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                               | :ref:`current_screen<class_OS_property_current_screen>`                                               | ``0``               |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`delta_smoothing<class_OS_property_delta_smoothing>`                                             | ``true``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                               | :ref:`exit_code<class_OS_property_exit_code>`                                                         | ``0``               |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`keep_screen_on<class_OS_property_keep_screen_on>`                                               | ``true``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`low_processor_usage_mode<class_OS_property_low_processor_usage_mode>`                           | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                               | :ref:`low_processor_usage_mode_sleep_usec<class_OS_property_low_processor_usage_mode_sleep_usec>`     | ``6900``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`max_window_size<class_OS_property_max_window_size>`                                             | ``Vector2( 0, 0 )`` |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`min_window_size<class_OS_property_min_window_size>`                                             | ``Vector2( 0, 0 )`` |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`ScreenOrientation<enum_OS_ScreenOrientation>` | :ref:`screen_orientation<class_OS_property_screen_orientation>`                                       | ``0``               |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`String<class_String>`                         | :ref:`tablet_driver<class_OS_property_tablet_driver>`                                                 | ``""``              |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`vsync_enabled<class_OS_property_vsync_enabled>`                                                 | ``true``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`vsync_via_compositor<class_OS_property_vsync_via_compositor>`                                   | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_borderless<class_OS_property_window_borderless>`                                         | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_fullscreen<class_OS_property_window_fullscreen>`                                         | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_maximized<class_OS_property_window_maximized>`                                           | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_minimized<class_OS_property_window_minimized>`                                           | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_per_pixel_transparency_enabled<class_OS_property_window_per_pixel_transparency_enabled>` | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`window_position<class_OS_property_window_position>`                                             | ``Vector2( 0, 0 )`` |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_resizable<class_OS_property_window_resizable>`                                           | ``true``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`window_size<class_OS_property_window_size>`                                                     | ``Vector2( 0, 0 )`` |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+

Métodos
--------------

+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`alert<class_OS_method_alert>` **(** :ref:`String<class_String>` text, :ref:`String<class_String>` title="Alert!" **)**                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`can_draw<class_OS_method_can_draw>` **(** **)** |const|                                                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`can_use_threads<class_OS_method_can_use_threads>` **(** **)** |const|                                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`center_window<class_OS_method_center_window>` **(** **)**                                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`close_midi_inputs<class_OS_method_close_midi_inputs>` **(** **)**                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`crash<class_OS_method_crash>` **(** :ref:`String<class_String>` message **)**                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`delay_msec<class_OS_method_delay_msec>` **(** :ref:`int<class_int>` msec **)** |const|                                                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`delay_usec<class_OS_method_delay_usec>` **(** :ref:`int<class_int>` usec **)** |const|                                                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`dump_memory_to_file<class_OS_method_dump_memory_to_file>` **(** :ref:`String<class_String>` file **)**                                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`dump_resources_to_file<class_OS_method_dump_resources_to_file>` **(** :ref:`String<class_String>` file **)**                                                                                                                                                     |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`execute<class_OS_method_execute>` **(** :ref:`String<class_String>` path, :ref:`PoolStringArray<class_PoolStringArray>` arguments, :ref:`bool<class_bool>` blocking=true, :ref:`Array<class_Array>` output=[  ], :ref:`bool<class_bool>` read_stderr=false **)** |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`find_scancode_from_string<class_OS_method_find_scancode_from_string>` **(** :ref:`String<class_String>` string **)** |const|                                                                                                                                     |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_audio_driver_count<class_OS_method_get_audio_driver_count>` **(** **)** |const|                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_audio_driver_name<class_OS_method_get_audio_driver_name>` **(** :ref:`int<class_int>` driver **)** |const|                                                                                                                                                   |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_cache_dir<class_OS_method_get_cache_dir>` **(** **)** |const|                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_cmdline_args<class_OS_method_get_cmdline_args>` **(** **)**                                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_config_dir<class_OS_method_get_config_dir>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_connected_midi_inputs<class_OS_method_get_connected_midi_inputs>` **(** **)**                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`VideoDriver<enum_OS_VideoDriver>`       | :ref:`get_current_video_driver<class_OS_method_get_current_video_driver>` **(** **)** |const|                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_data_dir<class_OS_method_get_data_dir>` **(** **)** |const|                                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_date<class_OS_method_get_date>` **(** :ref:`bool<class_bool>` utc=false **)** |const|                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_datetime<class_OS_method_get_datetime>` **(** :ref:`bool<class_bool>` utc=false **)** |const|                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_datetime_from_unix_time<class_OS_method_get_datetime_from_unix_time>` **(** :ref:`int<class_int>` unix_time_val **)** |const|                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_dynamic_memory_usage<class_OS_method_get_dynamic_memory_usage>` **(** **)** |const|                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_environment<class_OS_method_get_environment>` **(** :ref:`String<class_String>` variable **)** |const|                                                                                                                                                       |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_executable_path<class_OS_method_get_executable_path>` **(** **)** |const|                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_granted_permissions<class_OS_method_get_granted_permissions>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                 | :ref:`get_ime_selection<class_OS_method_get_ime_selection>` **(** **)** |const|                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_ime_text<class_OS_method_get_ime_text>` **(** **)** |const|                                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_latin_keyboard_variant<class_OS_method_get_latin_keyboard_variant>` **(** **)** |const|                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_locale<class_OS_method_get_locale>` **(** **)** |const|                                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_locale_language<class_OS_method_get_locale_language>` **(** **)** |const|                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_main_thread_id<class_OS_method_get_main_thread_id>` **(** **)** |const|                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_model_name<class_OS_method_get_model_name>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_name<class_OS_method_get_name>` **(** **)** |const|                                                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_native_handle<class_OS_method_get_native_handle>` **(** :ref:`HandleType<enum_OS_HandleType>` handle_type **)**                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_power_percent_left<class_OS_method_get_power_percent_left>` **(** **)**                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_power_seconds_left<class_OS_method_get_power_seconds_left>` **(** **)**                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PowerState<enum_OS_PowerState>`         | :ref:`get_power_state<class_OS_method_get_power_state>` **(** **)**                                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_process_id<class_OS_method_get_process_id>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_processor_count<class_OS_method_get_processor_count>` **(** **)** |const|                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                 | :ref:`get_real_window_size<class_OS_method_get_real_window_size>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_scancode_string<class_OS_method_get_scancode_string>` **(** :ref:`int<class_int>` code **)** |const|                                                                                                                                                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_screen_count<class_OS_method_get_screen_count>` **(** **)** |const|                                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_screen_dpi<class_OS_method_get_screen_dpi>` **(** :ref:`int<class_int>` screen=-1 **)** |const|                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`get_screen_max_scale<class_OS_method_get_screen_max_scale>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                 | :ref:`get_screen_position<class_OS_method_get_screen_position>` **(** :ref:`int<class_int>` screen=-1 **)** |const|                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`get_screen_scale<class_OS_method_get_screen_scale>` **(** :ref:`int<class_int>` screen=-1 **)** |const|                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                 | :ref:`get_screen_size<class_OS_method_get_screen_size>` **(** :ref:`int<class_int>` screen=-1 **)** |const|                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_splash_tick_msec<class_OS_method_get_splash_tick_msec>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_static_memory_peak_usage<class_OS_method_get_static_memory_peak_usage>` **(** **)** |const|                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_static_memory_usage<class_OS_method_get_static_memory_usage>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_system_dir<class_OS_method_get_system_dir>` **(** :ref:`SystemDir<enum_OS_SystemDir>` dir, :ref:`bool<class_bool>` shared_storage=true **)** |const|                                                                                                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_system_time_msecs<class_OS_method_get_system_time_msecs>` **(** **)** |const|                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_system_time_secs<class_OS_method_get_system_time_secs>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_tablet_driver_count<class_OS_method_get_tablet_driver_count>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_tablet_driver_name<class_OS_method_get_tablet_driver_name>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_thread_caller_id<class_OS_method_get_thread_caller_id>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_ticks_msec<class_OS_method_get_ticks_msec>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_ticks_usec<class_OS_method_get_ticks_usec>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_time<class_OS_method_get_time>` **(** :ref:`bool<class_bool>` utc=false **)** |const|                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_time_zone_info<class_OS_method_get_time_zone_info>` **(** **)** |const|                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_unique_id<class_OS_method_get_unique_id>` **(** **)** |const|                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_unix_time<class_OS_method_get_unix_time>` **(** **)** |const|                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_unix_time_from_datetime<class_OS_method_get_unix_time_from_datetime>` **(** :ref:`Dictionary<class_Dictionary>` datetime **)** |const|                                                                                                                       |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_user_data_dir<class_OS_method_get_user_data_dir>` **(** **)** |const|                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_video_driver_count<class_OS_method_get_video_driver_count>` **(** **)** |const|                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_video_driver_name<class_OS_method_get_video_driver_name>` **(** :ref:`VideoDriver<enum_OS_VideoDriver>` driver **)** |const|                                                                                                                                 |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_virtual_keyboard_height<class_OS_method_get_virtual_keyboard_height>` **(** **)**                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`                     | :ref:`get_window_safe_area<class_OS_method_get_window_safe_area>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`global_menu_add_item<class_OS_method_global_menu_add_item>` **(** :ref:`String<class_String>` menu, :ref:`String<class_String>` label, :ref:`Variant<class_Variant>` id, :ref:`Variant<class_Variant>` meta **)**                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`global_menu_add_separator<class_OS_method_global_menu_add_separator>` **(** :ref:`String<class_String>` menu **)**                                                                                                                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`global_menu_clear<class_OS_method_global_menu_clear>` **(** :ref:`String<class_String>` menu **)**                                                                                                                                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`global_menu_remove_item<class_OS_method_global_menu_remove_item>` **(** :ref:`String<class_String>` menu, :ref:`int<class_int>` idx **)**                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_environment<class_OS_method_has_environment>` **(** :ref:`String<class_String>` variable **)** |const|                                                                                                                                                       |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_feature<class_OS_method_has_feature>` **(** :ref:`String<class_String>` tag_name **)** |const|                                                                                                                                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_touchscreen_ui_hint<class_OS_method_has_touchscreen_ui_hint>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_virtual_keyboard<class_OS_method_has_virtual_keyboard>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`hide_virtual_keyboard<class_OS_method_hide_virtual_keyboard>` **(** **)**                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_debug_build<class_OS_method_is_debug_build>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_ok_left_and_cancel_right<class_OS_method_is_ok_left_and_cancel_right>` **(** **)** |const|                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_scancode_unicode<class_OS_method_is_scancode_unicode>` **(** :ref:`int<class_int>` code **)** |const|                                                                                                                                                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_stdout_verbose<class_OS_method_is_stdout_verbose>` **(** **)** |const|                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_userfs_persistent<class_OS_method_is_userfs_persistent>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_window_always_on_top<class_OS_method_is_window_always_on_top>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_window_focused<class_OS_method_is_window_focused>` **(** **)** |const|                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`keyboard_get_current_layout<class_OS_method_keyboard_get_current_layout>` **(** **)** |const|                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`keyboard_get_layout_count<class_OS_method_keyboard_get_layout_count>` **(** **)** |const|                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`keyboard_get_layout_language<class_OS_method_keyboard_get_layout_language>` **(** :ref:`int<class_int>` index **)** |const|                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`keyboard_get_layout_name<class_OS_method_keyboard_get_layout_name>` **(** :ref:`int<class_int>` index **)** |const|                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`keyboard_set_current_layout<class_OS_method_keyboard_set_current_layout>` **(** :ref:`int<class_int>` index **)**                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`kill<class_OS_method_kill>` **(** :ref:`int<class_int>` pid **)**                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`move_window_to_foreground<class_OS_method_move_window_to_foreground>` **(** **)**                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`native_video_is_playing<class_OS_method_native_video_is_playing>` **(** **)**                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`native_video_pause<class_OS_method_native_video_pause>` **(** **)**                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`native_video_play<class_OS_method_native_video_play>` **(** :ref:`String<class_String>` path, :ref:`float<class_float>` volume, :ref:`String<class_String>` audio_track, :ref:`String<class_String>` subtitle_track **)**                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`native_video_stop<class_OS_method_native_video_stop>` **(** **)**                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`native_video_unpause<class_OS_method_native_video_unpause>` **(** **)**                                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`open_midi_inputs<class_OS_method_open_midi_inputs>` **(** **)**                                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`print_all_resources<class_OS_method_print_all_resources>` **(** :ref:`String<class_String>` tofile="" **)**                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`print_all_textures_by_size<class_OS_method_print_all_textures_by_size>` **(** **)**                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`print_resources_by_type<class_OS_method_print_resources_by_type>` **(** :ref:`PoolStringArray<class_PoolStringArray>` types **)**                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`print_resources_in_use<class_OS_method_print_resources_in_use>` **(** :ref:`bool<class_bool>` short=false **)**                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`request_attention<class_OS_method_request_attention>` **(** **)**                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`request_permission<class_OS_method_request_permission>` **(** :ref:`String<class_String>` name **)**                                                                                                                                                             |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`request_permissions<class_OS_method_request_permissions>` **(** **)**                                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`set_environment<class_OS_method_set_environment>` **(** :ref:`String<class_String>` variable, :ref:`String<class_String>` value **)** |const|                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_icon<class_OS_method_set_icon>` **(** :ref:`Image<class_Image>` icon **)**                                                                                                                                                                                   |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_ime_active<class_OS_method_set_ime_active>` **(** :ref:`bool<class_bool>` active **)**                                                                                                                                                                       |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_ime_position<class_OS_method_set_ime_position>` **(** :ref:`Vector2<class_Vector2>` position **)**                                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_native_icon<class_OS_method_set_native_icon>` **(** :ref:`String<class_String>` filename **)**                                                                                                                                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`set_thread_name<class_OS_method_set_thread_name>` **(** :ref:`String<class_String>` name **)**                                                                                                                                                                   |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_use_file_access_save_and_swap<class_OS_method_set_use_file_access_save_and_swap>` **(** :ref:`bool<class_bool>` enabled **)**                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_window_always_on_top<class_OS_method_set_window_always_on_top>` **(** :ref:`bool<class_bool>` enabled **)**                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_window_mouse_passthrough<class_OS_method_set_window_mouse_passthrough>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` region **)**                                                                                                                   |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_window_title<class_OS_method_set_window_title>` **(** :ref:`String<class_String>` title **)**                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`shell_open<class_OS_method_shell_open>` **(** :ref:`String<class_String>` uri **)**                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`show_virtual_keyboard<class_OS_method_show_virtual_keyboard>` **(** :ref:`String<class_String>` existing_text="", :ref:`bool<class_bool>` multiline=false **)**                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumeraciones
--------------------------

.. _enum_OS_VideoDriver:

.. _class_OS_constant_VIDEO_DRIVER_GLES2:

.. _class_OS_constant_VIDEO_DRIVER_GLES3:

enum **VideoDriver**:

- **VIDEO_DRIVER_GLES2** = **1** --- El GLES2 renderiza el backend. Utiliza OpenGL ES 2.0 en los dispositivos móviles, OpenGL 2.1 en las plataformas de escritorio y WebGL 1.0 en la web.

- **VIDEO_DRIVER_GLES3** = **0** --- The GLES3 rendering backend. It uses OpenGL ES 3.0 on mobile devices, OpenGL 3.3 on desktop platforms and WebGL 2.0 on the web.

----

.. _enum_OS_Weekday:

.. _class_OS_constant_DAY_SUNDAY:

.. _class_OS_constant_DAY_MONDAY:

.. _class_OS_constant_DAY_TUESDAY:

.. _class_OS_constant_DAY_WEDNESDAY:

.. _class_OS_constant_DAY_THURSDAY:

.. _class_OS_constant_DAY_FRIDAY:

.. _class_OS_constant_DAY_SATURDAY:

enum **Weekday**:

- **DAY_SUNDAY** = **0** --- Domingo.

- **DAY_MONDAY** = **1** --- Lunes.

- **DAY_TUESDAY** = **2** --- Martes.

- **DAY_WEDNESDAY** = **3** --- Miercoles.

- **DAY_THURSDAY** = **4** --- Jueves.

- **DAY_FRIDAY** = **5** --- Viernes.

- **DAY_SATURDAY** = **6** --- Sabado.

----

.. _enum_OS_Month:

.. _class_OS_constant_MONTH_JANUARY:

.. _class_OS_constant_MONTH_FEBRUARY:

.. _class_OS_constant_MONTH_MARCH:

.. _class_OS_constant_MONTH_APRIL:

.. _class_OS_constant_MONTH_MAY:

.. _class_OS_constant_MONTH_JUNE:

.. _class_OS_constant_MONTH_JULY:

.. _class_OS_constant_MONTH_AUGUST:

.. _class_OS_constant_MONTH_SEPTEMBER:

.. _class_OS_constant_MONTH_OCTOBER:

.. _class_OS_constant_MONTH_NOVEMBER:

.. _class_OS_constant_MONTH_DECEMBER:

enum **Month**:

- **MONTH_JANUARY** = **1** --- Enero.

- **MONTH_FEBRUARY** = **2** --- Febrero.

- **MONTH_MARCH** = **3** --- Marzo.

- **MONTH_APRIL** = **4** --- Abril.

- **MONTH_MAY** = **5** --- Mayo.

- **MONTH_JUNE** = **6** --- Junio.

- **MONTH_JULY** = **7** --- Julio.

- **MONTH_AUGUST** = **8** --- Agosto.

- **MONTH_SEPTEMBER** = **9** --- Septiembre.

- **MONTH_OCTOBER** = **10** --- Octubre.

- **MONTH_NOVEMBER** = **11** --- Noviembre.

- **MONTH_DECEMBER** = **12** --- Diciembre.

----

.. _enum_OS_HandleType:

.. _class_OS_constant_APPLICATION_HANDLE:

.. _class_OS_constant_DISPLAY_HANDLE:

.. _class_OS_constant_WINDOW_HANDLE:

.. _class_OS_constant_WINDOW_VIEW:

.. _class_OS_constant_OPENGL_CONTEXT:

enum **HandleType**:

- **APPLICATION_HANDLE** = **0** --- Application handle:

- Windows: ``HINSTANCE`` of the application

- MacOS: ``NSApplication*`` of the application (not yet implemented)

- Android: ``JNIEnv*`` of the application (not yet implemented)

- **DISPLAY_HANDLE** = **1** --- Display handle:

- Linux: ``X11::Display*`` for the display

- **WINDOW_HANDLE** = **2** --- Window handle:

- Windows: ``HWND`` of the main window

- Linux: ``X11::Window*`` of the main window

- MacOS: ``NSWindow*`` of the main window (not yet implemented)

- Android: ``jObject`` the main android activity (not yet implemented)

- **WINDOW_VIEW** = **3** --- Window view:

- Windows: ``HDC`` of the main window drawing context

- MacOS: ``NSView*`` of the main windows view (not yet implemented)

- **OPENGL_CONTEXT** = **4** --- OpenGL Context:

- Windows: ``HGLRC``\ 

- Linux: ``X11::GLXContext``\ 

- MacOS: ``NSOpenGLContext*`` (not yet implemented)

----

.. _enum_OS_ScreenOrientation:

.. _class_OS_constant_SCREEN_ORIENTATION_LANDSCAPE:

.. _class_OS_constant_SCREEN_ORIENTATION_PORTRAIT:

.. _class_OS_constant_SCREEN_ORIENTATION_REVERSE_LANDSCAPE:

.. _class_OS_constant_SCREEN_ORIENTATION_REVERSE_PORTRAIT:

.. _class_OS_constant_SCREEN_ORIENTATION_SENSOR_LANDSCAPE:

.. _class_OS_constant_SCREEN_ORIENTATION_SENSOR_PORTRAIT:

.. _class_OS_constant_SCREEN_ORIENTATION_SENSOR:

enum **ScreenOrientation**:

- **SCREEN_ORIENTATION_LANDSCAPE** = **0** --- Landscape screen orientation.

- **SCREEN_ORIENTATION_PORTRAIT** = **1** --- Portrait screen orientation.

- **SCREEN_ORIENTATION_REVERSE_LANDSCAPE** = **2** --- Reverse landscape screen orientation.

- **SCREEN_ORIENTATION_REVERSE_PORTRAIT** = **3** --- Reverse portrait screen orientation.

- **SCREEN_ORIENTATION_SENSOR_LANDSCAPE** = **4** --- Uses landscape or reverse landscape based on the hardware sensor.

- **SCREEN_ORIENTATION_SENSOR_PORTRAIT** = **5** --- Uses portrait or reverse portrait based on the hardware sensor.

- **SCREEN_ORIENTATION_SENSOR** = **6** --- Uses most suitable orientation based on the hardware sensor.

----

.. _enum_OS_SystemDir:

.. _class_OS_constant_SYSTEM_DIR_DESKTOP:

.. _class_OS_constant_SYSTEM_DIR_DCIM:

.. _class_OS_constant_SYSTEM_DIR_DOCUMENTS:

.. _class_OS_constant_SYSTEM_DIR_DOWNLOADS:

.. _class_OS_constant_SYSTEM_DIR_MOVIES:

.. _class_OS_constant_SYSTEM_DIR_MUSIC:

.. _class_OS_constant_SYSTEM_DIR_PICTURES:

.. _class_OS_constant_SYSTEM_DIR_RINGTONES:

enum **SystemDir**:

- **SYSTEM_DIR_DESKTOP** = **0** --- Ruta de directorio del escritorio.

- **SYSTEM_DIR_DCIM** = **1** --- Ruta del directorio DCIM (Digital Camera Images).

- **SYSTEM_DIR_DOCUMENTS** = **2** --- Ruta del directorio de documentos.

- **SYSTEM_DIR_DOWNLOADS** = **3** --- La ruta del directorio de descargas.

- **SYSTEM_DIR_MOVIES** = **4** --- La ruta del directorio de películas.

- **SYSTEM_DIR_MUSIC** = **5** --- Ruta del directorio de música.

- **SYSTEM_DIR_PICTURES** = **6** --- Ruta del directorio de fotos.

- **SYSTEM_DIR_RINGTONES** = **7** --- Ruta de directorio de tonos.

----

.. _enum_OS_PowerState:

.. _class_OS_constant_POWERSTATE_UNKNOWN:

.. _class_OS_constant_POWERSTATE_ON_BATTERY:

.. _class_OS_constant_POWERSTATE_NO_BATTERY:

.. _class_OS_constant_POWERSTATE_CHARGING:

.. _class_OS_constant_POWERSTATE_CHARGED:

enum **PowerState**:

- **POWERSTATE_UNKNOWN** = **0** --- Unknown powerstate.

- **POWERSTATE_ON_BATTERY** = **1** --- Unplugged, running on battery.

- **POWERSTATE_NO_BATTERY** = **2** --- Plugged in, no battery available.

- **POWERSTATE_CHARGING** = **3** --- Plugged in, battery charging.

- **POWERSTATE_CHARGED** = **4** --- Plugged in, battery fully charged.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_OS_property_clipboard:

- :ref:`String<class_String>` **clipboard**

+-----------+----------------------+
| *Default* | ``""``               |
+-----------+----------------------+
| *Setter*  | set_clipboard(value) |
+-----------+----------------------+
| *Getter*  | get_clipboard()      |
+-----------+----------------------+

The clipboard from the host OS. Might be unavailable on some platforms.

----

.. _class_OS_property_current_screen:

- :ref:`int<class_int>` **current_screen**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_current_screen(value) |
+-----------+---------------------------+
| *Getter*  | get_current_screen()      |
+-----------+---------------------------+

The current screen index (starting from 0).

----

.. _class_OS_property_delta_smoothing:

- :ref:`bool<class_bool>` **delta_smoothing**

+-----------+------------------------------+
| *Default* | ``true``                     |
+-----------+------------------------------+
| *Setter*  | set_delta_smoothing(value)   |
+-----------+------------------------------+
| *Getter*  | is_delta_smoothing_enabled() |
+-----------+------------------------------+

If ``true``, the engine filters the time delta measured between each frame, and attempts to compensate for random variation. This will only operate on systems where V-Sync is active.

----

.. _class_OS_property_exit_code:

- :ref:`int<class_int>` **exit_code**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_exit_code(value) |
+-----------+----------------------+
| *Getter*  | get_exit_code()      |
+-----------+----------------------+

El código de salida pasó al sistema operativo cuando el bucle principal sale. Por convención, un código de salida de ``0`` indica éxito mientras que un código de salida distinto de cero indica un error. Por razones de portabilidad, el código de salida debe establecerse entre 0 y 125 (inclusive).

\ **Nota:** Este valor se ignorará si se utiliza el :ref:`SceneTree.quit<class_SceneTree_method_quit>` con un argumento ``exit_code`` pasado.

----

.. _class_OS_property_keep_screen_on:

- :ref:`bool<class_bool>` **keep_screen_on**

+-----------+---------------------------+
| *Default* | ``true``                  |
+-----------+---------------------------+
| *Setter*  | set_keep_screen_on(value) |
+-----------+---------------------------+
| *Getter*  | is_keep_screen_on()       |
+-----------+---------------------------+

If ``true``, the engine tries to keep the screen on while the game is running. Useful on mobile.

----

.. _class_OS_property_low_processor_usage_mode:

- :ref:`bool<class_bool>` **low_processor_usage_mode**

+-----------+-------------------------------------+
| *Default* | ``false``                           |
+-----------+-------------------------------------+
| *Setter*  | set_low_processor_usage_mode(value) |
+-----------+-------------------------------------+
| *Getter*  | is_in_low_processor_usage_mode()    |
+-----------+-------------------------------------+

Si ``true``, el motor se optimiza para un bajo uso del procesador, sólo refrescando la pantalla si es necesario. Puede mejorar el consumo de la batería en el móvil.

----

.. _class_OS_property_low_processor_usage_mode_sleep_usec:

- :ref:`int<class_int>` **low_processor_usage_mode_sleep_usec**

+-----------+------------------------------------------------+
| *Default* | ``6900``                                       |
+-----------+------------------------------------------------+
| *Setter*  | set_low_processor_usage_mode_sleep_usec(value) |
+-----------+------------------------------------------------+
| *Getter*  | get_low_processor_usage_mode_sleep_usec()      |
+-----------+------------------------------------------------+

La cantidad de sueño entre cuadros cuando se activa el modo de uso del procesador bajo (en microsegundos). Valores más altos resultarán en un menor uso de la CPU.

----

.. _class_OS_property_max_window_size:

- :ref:`Vector2<class_Vector2>` **max_window_size**

+-----------+----------------------------+
| *Default* | ``Vector2( 0, 0 )``        |
+-----------+----------------------------+
| *Setter*  | set_max_window_size(value) |
+-----------+----------------------------+
| *Getter*  | get_max_window_size()      |
+-----------+----------------------------+

The maximum size of the window (without counting window manager decorations). Does not affect fullscreen mode. Set to ``(0, 0)`` to reset to the system default value.

----

.. _class_OS_property_min_window_size:

- :ref:`Vector2<class_Vector2>` **min_window_size**

+-----------+----------------------------+
| *Default* | ``Vector2( 0, 0 )``        |
+-----------+----------------------------+
| *Setter*  | set_min_window_size(value) |
+-----------+----------------------------+
| *Getter*  | get_min_window_size()      |
+-----------+----------------------------+

The minimum size of the window in pixels (without counting window manager decorations). Does not affect fullscreen mode. Set to ``(0, 0)`` to reset to the system's default value.

\ **Note:** By default, the project window has a minimum size of ``Vector2(64, 64)``. This prevents issues that can arise when the window is resized to a near-zero size.

----

.. _class_OS_property_screen_orientation:

- :ref:`ScreenOrientation<enum_OS_ScreenOrientation>` **screen_orientation**

+-----------+-------------------------------+
| *Default* | ``0``                         |
+-----------+-------------------------------+
| *Setter*  | set_screen_orientation(value) |
+-----------+-------------------------------+
| *Getter*  | get_screen_orientation()      |
+-----------+-------------------------------+

The current screen orientation.

----

.. _class_OS_property_tablet_driver:

- :ref:`String<class_String>` **tablet_driver**

+-----------+----------------------------------+
| *Default* | ``""``                           |
+-----------+----------------------------------+
| *Setter*  | set_current_tablet_driver(value) |
+-----------+----------------------------------+
| *Getter*  | get_current_tablet_driver()      |
+-----------+----------------------------------+

El actual controlador de la tableta en uso.

----

.. _class_OS_property_vsync_enabled:

- :ref:`bool<class_bool>` **vsync_enabled**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_use_vsync(value) |
+-----------+----------------------+
| *Getter*  | is_vsync_enabled()   |
+-----------+----------------------+

If ``true``, vertical synchronization (Vsync) is enabled.

----

.. _class_OS_property_vsync_via_compositor:

- :ref:`bool<class_bool>` **vsync_via_compositor**

+-----------+-----------------------------------+
| *Default* | ``false``                         |
+-----------+-----------------------------------+
| *Setter*  | set_vsync_via_compositor(value)   |
+-----------+-----------------------------------+
| *Getter*  | is_vsync_via_compositor_enabled() |
+-----------+-----------------------------------+

If ``true`` and ``vsync_enabled`` is true, the operating system's window compositor will be used for vsync when the compositor is enabled and the game is in windowed mode.

\ **Note:** This option is experimental and meant to alleviate stutter experienced by some users. However, some users have experienced a Vsync framerate halving (e.g. from 60 FPS to 30 FPS) when using it.

\ **Note:** This property is only implemented on Windows.

----

.. _class_OS_property_window_borderless:

- :ref:`bool<class_bool>` **window_borderless**

+-----------+------------------------------+
| *Default* | ``false``                    |
+-----------+------------------------------+
| *Setter*  | set_borderless_window(value) |
+-----------+------------------------------+
| *Getter*  | get_borderless_window()      |
+-----------+------------------------------+

If ``true``, removes the window frame.

\ **Note:** Setting ``window_borderless`` to ``false`` disables per-pixel transparency.

----

.. _class_OS_property_window_fullscreen:

- :ref:`bool<class_bool>` **window_fullscreen**

+-----------+------------------------------+
| *Default* | ``false``                    |
+-----------+------------------------------+
| *Setter*  | set_window_fullscreen(value) |
+-----------+------------------------------+
| *Getter*  | is_window_fullscreen()       |
+-----------+------------------------------+

If ``true``, the window is fullscreen.

----

.. _class_OS_property_window_maximized:

- :ref:`bool<class_bool>` **window_maximized**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_window_maximized(value) |
+-----------+-----------------------------+
| *Getter*  | is_window_maximized()       |
+-----------+-----------------------------+

If ``true``, the window is maximized.

----

.. _class_OS_property_window_minimized:

- :ref:`bool<class_bool>` **window_minimized**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_window_minimized(value) |
+-----------+-----------------------------+
| *Getter*  | is_window_minimized()       |
+-----------+-----------------------------+

If ``true``, the window is minimized.

----

.. _class_OS_property_window_per_pixel_transparency_enabled:

- :ref:`bool<class_bool>` **window_per_pixel_transparency_enabled**

+-----------+--------------------------------------------------+
| *Default* | ``false``                                        |
+-----------+--------------------------------------------------+
| *Setter*  | set_window_per_pixel_transparency_enabled(value) |
+-----------+--------------------------------------------------+
| *Getter*  | get_window_per_pixel_transparency_enabled()      |
+-----------+--------------------------------------------------+

If ``true``, the window background is transparent and the window frame is removed.

Use ``get_tree().get_root().set_transparent_background(true)`` to disable main viewport background rendering.

\ **Note:** This property has no effect if :ref:`ProjectSettings.display/window/per_pixel_transparency/allowed<class_ProjectSettings_property_display/window/per_pixel_transparency/allowed>` setting is disabled.

\ **Note:** This property is implemented on HTML5, Linux, macOS, Windows, and Android. It can't be changed at runtime for Android. Use :ref:`ProjectSettings.display/window/per_pixel_transparency/enabled<class_ProjectSettings_property_display/window/per_pixel_transparency/enabled>` to set it at startup instead.

----

.. _class_OS_property_window_position:

- :ref:`Vector2<class_Vector2>` **window_position**

+-----------+----------------------------+
| *Default* | ``Vector2( 0, 0 )``        |
+-----------+----------------------------+
| *Setter*  | set_window_position(value) |
+-----------+----------------------------+
| *Getter*  | get_window_position()      |
+-----------+----------------------------+

The window position relative to the screen, the origin is the top left corner, +Y axis goes to the bottom and +X axis goes to the right.

----

.. _class_OS_property_window_resizable:

- :ref:`bool<class_bool>` **window_resizable**

+-----------+-----------------------------+
| *Default* | ``true``                    |
+-----------+-----------------------------+
| *Setter*  | set_window_resizable(value) |
+-----------+-----------------------------+
| *Getter*  | is_window_resizable()       |
+-----------+-----------------------------+

If ``true``, the window is resizable by the user.

----

.. _class_OS_property_window_size:

- :ref:`Vector2<class_Vector2>` **window_size**

+-----------+------------------------+
| *Default* | ``Vector2( 0, 0 )``    |
+-----------+------------------------+
| *Setter*  | set_window_size(value) |
+-----------+------------------------+
| *Getter*  | get_window_size()      |
+-----------+------------------------+

The size of the window (without counting window manager decorations).

Descripciones de Métodos
------------------------------------------------

.. _class_OS_method_alert:

- void **alert** **(** :ref:`String<class_String>` text, :ref:`String<class_String>` title="Alert!" **)**

Displays a modal dialog box using the host OS' facilities. Execution is blocked until the dialog is closed.

----

.. _class_OS_method_can_draw:

- :ref:`bool<class_bool>` **can_draw** **(** **)** |const|

Returns ``true`` if the host OS allows drawing.

----

.. _class_OS_method_can_use_threads:

- :ref:`bool<class_bool>` **can_use_threads** **(** **)** |const|

Devuelve ``true`` si la plataforma de acogida actual está usando múltiples hilos.

----

.. _class_OS_method_center_window:

- void **center_window** **(** **)**

Centers the window on the screen if in windowed mode.

----

.. _class_OS_method_close_midi_inputs:

- void **close_midi_inputs** **(** **)**

Apaga el controlador MIDI del sistema.

\ **Nota:** Este método está implementado en Linux, macOS y Windows.

----

.. _class_OS_method_crash:

- void **crash** **(** :ref:`String<class_String>` message **)**

Crashes the engine (or the editor if called within a ``tool`` script). This should *only* be used for testing the system's crash handler, not for any other purpose. For general error reporting, use (in order of preference) :ref:`@GDScript.assert<class_@GDScript_method_assert>`, :ref:`@GDScript.push_error<class_@GDScript_method_push_error>` or :ref:`alert<class_OS_method_alert>`. See also :ref:`kill<class_OS_method_kill>`.

----

.. _class_OS_method_delay_msec:

- void **delay_msec** **(** :ref:`int<class_int>` msec **)** |const|

Delays execution of the current thread by ``msec`` milliseconds. ``msec`` must be greater than or equal to ``0``. Otherwise, :ref:`delay_msec<class_OS_method_delay_msec>` will do nothing and will print an error message.

\ **Note:** :ref:`delay_msec<class_OS_method_delay_msec>` is a *blocking* way to delay code execution. To delay code execution in a non-blocking way, see :ref:`SceneTree.create_timer<class_SceneTree_method_create_timer>`. Yielding with :ref:`SceneTree.create_timer<class_SceneTree_method_create_timer>` will delay the execution of code placed below the ``yield`` without affecting the rest of the project (or editor, for :ref:`EditorPlugin<class_EditorPlugin>`\ s and :ref:`EditorScript<class_EditorScript>`\ s).

\ **Note:** When :ref:`delay_msec<class_OS_method_delay_msec>` is called on the main thread, it will freeze the project and will prevent it from redrawing and registering input until the delay has passed. When using :ref:`delay_msec<class_OS_method_delay_msec>` as part of an :ref:`EditorPlugin<class_EditorPlugin>` or :ref:`EditorScript<class_EditorScript>`, it will freeze the editor but won't freeze the project if it is currently running (since the project is an independent child process).

----

.. _class_OS_method_delay_usec:

- void **delay_usec** **(** :ref:`int<class_int>` usec **)** |const|

Delays execution of the current thread by ``usec`` microseconds. ``usec`` must be greater than or equal to ``0``. Otherwise, :ref:`delay_usec<class_OS_method_delay_usec>` will do nothing and will print an error message.

\ **Note:** :ref:`delay_usec<class_OS_method_delay_usec>` is a *blocking* way to delay code execution. To delay code execution in a non-blocking way, see :ref:`SceneTree.create_timer<class_SceneTree_method_create_timer>`. Yielding with :ref:`SceneTree.create_timer<class_SceneTree_method_create_timer>` will delay the execution of code placed below the ``yield`` without affecting the rest of the project (or editor, for :ref:`EditorPlugin<class_EditorPlugin>`\ s and :ref:`EditorScript<class_EditorScript>`\ s).

\ **Note:** When :ref:`delay_usec<class_OS_method_delay_usec>` is called on the main thread, it will freeze the project and will prevent it from redrawing and registering input until the delay has passed. When using :ref:`delay_usec<class_OS_method_delay_usec>` as part of an :ref:`EditorPlugin<class_EditorPlugin>` or :ref:`EditorScript<class_EditorScript>`, it will freeze the editor but won't freeze the project if it is currently running (since the project is an independent child process).

----

.. _class_OS_method_dump_memory_to_file:

- void **dump_memory_to_file** **(** :ref:`String<class_String>` file **)**

Vuelca la lista de asignación de memoria a un archivo (sólo funciona en la depuración).

Formato de entrada por línea: "Dirección - Tamaño - Descripción".

----

.. _class_OS_method_dump_resources_to_file:

- void **dump_resources_to_file** **(** :ref:`String<class_String>` file **)**

Vuelca todos los recursos utilizados para archivar (sólo funciona en la depuración).

Formato de entrada por línea: "Tipo de recurso : Ubicación del recurso".

Al final del archivo hay una estadística de todos los tipos de recursos usados.

----

.. _class_OS_method_execute:

- :ref:`int<class_int>` **execute** **(** :ref:`String<class_String>` path, :ref:`PoolStringArray<class_PoolStringArray>` arguments, :ref:`bool<class_bool>` blocking=true, :ref:`Array<class_Array>` output=[  ], :ref:`bool<class_bool>` read_stderr=false **)**

Ejecute el archivo en la ruta dada con los argumentos pasados como un conjunto de strings. La resolución de la ruta de la plataforma tendrá lugar. El archivo resuelto debe existir y ser ejecutable.

Los argumentos se utilizan en el orden dado y separados por un espacio, así que ``OS.execute("ping", ["-w", "3", "godotengine.org"], false)`` resolverá a ``ping -w 3 godotengine.org`` en el shell del sistema.

Este método tiene un comportamiento ligeramente diferente basado en si el modo ``blocking`` está activado.

Si ``blocking`` es ``true``, el hilo de Godot detendrá su ejecución mientras espera que el proceso termine. La salida del shell del proceso se escribirá en el array ``output`` como una sola string. Cuando el proceso termine, el hilo de Godot reanudará su ejecución.

Si ``blocking`` es ``false``, el hilo de Godot continuará mientras se ejecuta el nuevo proceso. No es posible recuperar la salida del shell en modo no bloqueante, por lo que ``output`` estará vacío.

El valor de retorno también depende del modo de bloqueo. Cuando se bloquea, el método devolverá un código de salida del proceso. Cuando no se bloquea, el método devuelve un ID de proceso, que puedes usar para monitorizar el proceso (y potencialmente terminarlo con :ref:`kill<class_OS_method_kill>`). Si el proceso se bifurca (sin bloquear) o se abre (bloquea), el método devolverá ``-1`` u otro código de salida.

Ejemplo de modo de bloqueo y recuperación de la salida del shell:

::

    var output = []
    var exit_code = OS.execute("ls", ["-l", "/tmp"], true, output)

Ejemplo de modo no bloqueante, ejecutando otra instancia del proyecto y almacenando su ID de proceso:

::

    var pid = OS.execute(OS.get_executable_path(), [], false)

Si desea acceder a un shell incorporado o realizar un comando compuesto, se puede invocar un shell específico de la plataforma. Por ejemplo:

::

    OS.execute("CMD.exe", ["/C", "cd %TEMP% && dir"], true, output)

\ **Nota:** Este método está implementado en Android, iOS, Linux, macOS y Windows.

----

.. _class_OS_method_find_scancode_from_string:

- :ref:`int<class_int>` **find_scancode_from_string** **(** :ref:`String<class_String>` string **)** |const|

Returns the scancode of the given string (e.g. "Escape").

----

.. _class_OS_method_get_audio_driver_count:

- :ref:`int<class_int>` **get_audio_driver_count** **(** **)** |const|

Returns the total number of available audio drivers.

----

.. _class_OS_method_get_audio_driver_name:

- :ref:`String<class_String>` **get_audio_driver_name** **(** :ref:`int<class_int>` driver **)** |const|

Returns the audio driver name for the given index.

----

.. _class_OS_method_get_cache_dir:

- :ref:`String<class_String>` **get_cache_dir** **(** **)** |const|

Returns the *global* cache data directory according to the operating system's standards. On desktop platforms, this path can be overridden by setting the ``XDG_CACHE_HOME`` environment variable before starting the project. See :doc:`File paths in Godot projects <../tutorials/io/data_paths>` in the documentation for more information. See also :ref:`get_config_dir<class_OS_method_get_config_dir>` and :ref:`get_data_dir<class_OS_method_get_data_dir>`.

Not to be confused with :ref:`get_user_data_dir<class_OS_method_get_user_data_dir>`, which returns the *project-specific* user data path.

----

.. _class_OS_method_get_cmdline_args:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_cmdline_args** **(** **)**

Returns the command-line arguments passed to the engine.

Command-line arguments can be written in any form, including both ``--key value`` and ``--key=value`` forms so they can be properly parsed, as long as custom command-line arguments do not conflict with engine arguments.

You can also incorporate environment variables using the :ref:`get_environment<class_OS_method_get_environment>` method.

You can set :ref:`ProjectSettings.editor/main_run_args<class_ProjectSettings_property_editor/main_run_args>` to define command-line arguments to be passed by the editor when running the project.

Here's a minimal example on how to parse command-line arguments into a dictionary using the ``--key=value`` form for arguments:

::

    var arguments = {}
    for argument in OS.get_cmdline_args():
        if argument.find("=") > -1:
            var key_value = argument.split("=")
            arguments[key_value[0].lstrip("--")] = key_value[1]

----

.. _class_OS_method_get_config_dir:

- :ref:`String<class_String>` **get_config_dir** **(** **)** |const|

Returns the *global* user configuration directory according to the operating system's standards. On desktop platforms, this path can be overridden by setting the ``XDG_CONFIG_HOME`` environment variable before starting the project. See :doc:`File paths in Godot projects <../tutorials/io/data_paths>` in the documentation for more information. See also :ref:`get_cache_dir<class_OS_method_get_cache_dir>` and :ref:`get_data_dir<class_OS_method_get_data_dir>`.

Not to be confused with :ref:`get_user_data_dir<class_OS_method_get_user_data_dir>`, which returns the *project-specific* user data path.

----

.. _class_OS_method_get_connected_midi_inputs:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_connected_midi_inputs** **(** **)**

Devuelve una serie de nombres de dispositivos MIDI.

El array devuelto estará vacío si el controlador MIDI del sistema no ha sido previamente inicializado con :ref:`open_midi_inputs<class_OS_method_open_midi_inputs>`.

\ **Nota:** Este método está implementado en Linux, macOS y Windows.

----

.. _class_OS_method_get_current_video_driver:

- :ref:`VideoDriver<enum_OS_VideoDriver>` **get_current_video_driver** **(** **)** |const|

Returns the currently used video driver, using one of the values from :ref:`VideoDriver<enum_OS_VideoDriver>`.

----

.. _class_OS_method_get_data_dir:

- :ref:`String<class_String>` **get_data_dir** **(** **)** |const|

Returns the *global* user data directory according to the operating system's standards. On desktop platforms, this path can be overridden by setting the ``XDG_DATA_HOME`` environment variable before starting the project. See :doc:`File paths in Godot projects <../tutorials/io/data_paths>` in the documentation for more information. See also :ref:`get_cache_dir<class_OS_method_get_cache_dir>` and :ref:`get_config_dir<class_OS_method_get_config_dir>`.

Not to be confused with :ref:`get_user_data_dir<class_OS_method_get_user_data_dir>`, which returns the *project-specific* user data path.

----

.. _class_OS_method_get_date:

- :ref:`Dictionary<class_Dictionary>` **get_date** **(** :ref:`bool<class_bool>` utc=false **)** |const|

Deprecated, use :ref:`Time.get_date_dict_from_system<class_Time_method_get_date_dict_from_system>` instead.

Returns current date as a dictionary of keys: ``year``, ``month``, ``day``, ``weekday``, ``dst`` (Daylight Savings Time).

----

.. _class_OS_method_get_datetime:

- :ref:`Dictionary<class_Dictionary>` **get_datetime** **(** :ref:`bool<class_bool>` utc=false **)** |const|

Deprecated, use :ref:`Time.get_datetime_dict_from_system<class_Time_method_get_datetime_dict_from_system>` instead.

Returns current datetime as a dictionary of keys: ``year``, ``month``, ``day``, ``weekday``, ``dst`` (Daylight Savings Time), ``hour``, ``minute``, ``second``.

----

.. _class_OS_method_get_datetime_from_unix_time:

- :ref:`Dictionary<class_Dictionary>` **get_datetime_from_unix_time** **(** :ref:`int<class_int>` unix_time_val **)** |const|

Deprecated, use :ref:`Time.get_datetime_dict_from_unix_time<class_Time_method_get_datetime_dict_from_unix_time>` instead.

Gets a dictionary of time values corresponding to the given UNIX epoch time (in seconds).

The returned Dictionary's values will be the same as :ref:`get_datetime<class_OS_method_get_datetime>`, with the exception of Daylight Savings Time as it cannot be determined from the epoch.

----

.. _class_OS_method_get_dynamic_memory_usage:

- :ref:`int<class_int>` **get_dynamic_memory_usage** **(** **)** |const|

Returns the total amount of dynamic memory used (only works in debug).

----

.. _class_OS_method_get_environment:

- :ref:`String<class_String>` **get_environment** **(** :ref:`String<class_String>` variable **)** |const|

Returns the value of an environment variable. Returns an empty string if the environment variable doesn't exist.

\ **Note:** Double-check the casing of ``variable``. Environment variable names are case-sensitive on all platforms except Windows.

----

.. _class_OS_method_get_executable_path:

- :ref:`String<class_String>` **get_executable_path** **(** **)** |const|

Devuelve la ruta al ejecutable del motor actual.

----

.. _class_OS_method_get_granted_permissions:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_granted_permissions** **(** **)** |const|

With this function, you can get the list of dangerous permissions that have been granted to the Android application.

\ **Note:** This method is implemented on Android.

----

.. _class_OS_method_get_ime_selection:

- :ref:`Vector2<class_Vector2>` **get_ime_selection** **(** **)** |const|

Returns the IME cursor position (the currently-edited portion of the string) relative to the characters in the composition string.

\ :ref:`MainLoop.NOTIFICATION_OS_IME_UPDATE<class_MainLoop_constant_NOTIFICATION_OS_IME_UPDATE>` is sent to the application to notify it of changes to the IME cursor position.

\ **Note:** This method is implemented on macOS.

----

.. _class_OS_method_get_ime_text:

- :ref:`String<class_String>` **get_ime_text** **(** **)** |const|

Returns the IME intermediate composition string.

\ :ref:`MainLoop.NOTIFICATION_OS_IME_UPDATE<class_MainLoop_constant_NOTIFICATION_OS_IME_UPDATE>` is sent to the application to notify it of changes to the IME composition string.

\ **Note:** This method is implemented on macOS.

----

.. _class_OS_method_get_latin_keyboard_variant:

- :ref:`String<class_String>` **get_latin_keyboard_variant** **(** **)** |const|

Returns the current latin keyboard variant as a String.

Possible return values are: ``"QWERTY"``, ``"AZERTY"``, ``"QZERTY"``, ``"DVORAK"``, ``"NEO"``, ``"COLEMAK"`` or ``"ERROR"``.

\ **Note:** This method is implemented on Linux, macOS and Windows. Returns ``"QWERTY"`` on unsupported platforms.

----

.. _class_OS_method_get_locale:

- :ref:`String<class_String>` **get_locale** **(** **)** |const|

Returns the host OS locale as a string of the form ``language_Script_COUNTRY_VARIANT@extra``. If you want only the language code and not the fully specified locale from the OS, you can use :ref:`get_locale_language<class_OS_method_get_locale_language>`.

\ ``language`` - 2 or 3-letter `language code <https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes>`__, in lower case.

\ ``Script`` - optional, 4-letter `script code <https://en.wikipedia.org/wiki/ISO_15924>`__, in title case.

\ ``COUNTRY`` - optional, 2 or 3-letter `country code <https://en.wikipedia.org/wiki/ISO_3166-1>`__, in upper case.

\ ``VARIANT`` - optional, language variant, region and sort order. Variant can have any number of underscored keywords.

\ ``extra`` - optional, semicolon separated list of additional key words. Currency, calendar, sort order and numbering system information.

----

.. _class_OS_method_get_locale_language:

- :ref:`String<class_String>` **get_locale_language** **(** **)** |const|

Returns the host OS locale's 2 or 3-letter `language code <https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes>`__ as a string which should be consistent on all platforms. This is equivalent to extracting the ``language`` part of the :ref:`get_locale<class_OS_method_get_locale>` string.

This can be used to narrow down fully specified locale strings to only the "common" language code, when you don't need the additional information about country code or variants. For example, for a French Canadian user with ``fr_CA`` locale, this would return ``fr``.

----

.. _class_OS_method_get_main_thread_id:

- :ref:`int<class_int>` **get_main_thread_id** **(** **)** |const|

Returns the ID of the main thread. See :ref:`get_thread_caller_id<class_OS_method_get_thread_caller_id>`.

\ **Note:** Thread IDs are not deterministic and may be reused across application restarts.

----

.. _class_OS_method_get_model_name:

- :ref:`String<class_String>` **get_model_name** **(** **)** |const|

Devuelve el nombre del modelo del dispositivo actual.

\ **Nota:** Este método está implementado en Android e iOS. Devuelve ``"GenericDevice"`` en plataformas no soportadas.

----

.. _class_OS_method_get_name:

- :ref:`String<class_String>` **get_name** **(** **)** |const|

Devuelve el nombre del sistema operativo anfitrión. Los posibles valores son: ``"Android"``, ``"iOS"``, ``"HTML5"``, ``"OSX"``, ``"Server"``, ``"Windows"``, ``"UWP"``, ``"X11"``.

----

.. _class_OS_method_get_native_handle:

- :ref:`int<class_int>` **get_native_handle** **(** :ref:`HandleType<enum_OS_HandleType>` handle_type **)**

Returns internal structure pointers for use in GDNative plugins.

\ **Note:** This method is implemented on Linux and Windows (other OSs will soon be supported).

----

.. _class_OS_method_get_power_percent_left:

- :ref:`int<class_int>` **get_power_percent_left** **(** **)**

Returns the amount of battery left in the device as a percentage. Returns ``-1`` if power state is unknown.

\ **Note:** This method is implemented on Linux, macOS and Windows.

----

.. _class_OS_method_get_power_seconds_left:

- :ref:`int<class_int>` **get_power_seconds_left** **(** **)**

Returns an estimate of the time left in seconds before the device runs out of battery. Returns ``-1`` if power state is unknown.

\ **Note:** This method is implemented on Linux, macOS and Windows.

----

.. _class_OS_method_get_power_state:

- :ref:`PowerState<enum_OS_PowerState>` **get_power_state** **(** **)**

Returns the current state of the device regarding battery and power. See :ref:`PowerState<enum_OS_PowerState>` constants.

\ **Note:** This method is implemented on Linux, macOS and Windows.

----

.. _class_OS_method_get_process_id:

- :ref:`int<class_int>` **get_process_id** **(** **)** |const|

Devuelve la identificación del proceso del proyecto.

\ **Nota:** Este método está implementado en Android, iOS, Linux, macOS y Windows.

----

.. _class_OS_method_get_processor_count:

- :ref:`int<class_int>` **get_processor_count** **(** **)** |const|

Devuelve el número de hilos disponibles en el host.

----

.. _class_OS_method_get_real_window_size:

- :ref:`Vector2<class_Vector2>` **get_real_window_size** **(** **)** |const|

Returns the window size including decorations like window borders.

----

.. _class_OS_method_get_scancode_string:

- :ref:`String<class_String>` **get_scancode_string** **(** :ref:`int<class_int>` code **)** |const|

Returns the given scancode as a string (e.g. Return values: ``"Escape"``, ``"Shift+Escape"``).

See also :ref:`InputEventKey.scancode<class_InputEventKey_property_scancode>` and :ref:`InputEventKey.get_scancode_with_modifiers<class_InputEventKey_method_get_scancode_with_modifiers>`.

----

.. _class_OS_method_get_screen_count:

- :ref:`int<class_int>` **get_screen_count** **(** **)** |const|

Returns the number of displays attached to the host machine.

----

.. _class_OS_method_get_screen_dpi:

- :ref:`int<class_int>` **get_screen_dpi** **(** :ref:`int<class_int>` screen=-1 **)** |const|

Returns the dots per inch density of the specified screen. If ``screen`` is ``-1`` (the default value), the current screen will be used.

\ **Note:** On macOS, returned value is inaccurate if fractional display scaling mode is used.

\ **Note:** On Android devices, the actual screen densities are grouped into six generalized densities:

::

       ldpi - 120 dpi
       mdpi - 160 dpi
       hdpi - 240 dpi
      xhdpi - 320 dpi
     xxhdpi - 480 dpi
    xxxhdpi - 640 dpi

\ **Note:** This method is implemented on Android, Linux, macOS and Windows. Returns ``72`` on unsupported platforms.

----

.. _class_OS_method_get_screen_max_scale:

- :ref:`float<class_float>` **get_screen_max_scale** **(** **)** |const|

Devuelve el mayor factor de escala de todas las pantallas.

\ **Nota:** En macOS el valor devuelto es ``2.0`` si hay al menos una pantalla hiDPI (Retina) en el sistema, y ``1.0`` en todos los demás casos.

\ **Nota:** Este método está implementado en el MacOS.

----

.. _class_OS_method_get_screen_position:

- :ref:`Vector2<class_Vector2>` **get_screen_position** **(** :ref:`int<class_int>` screen=-1 **)** |const|

Returns the position of the specified screen by index. If ``screen`` is ``-1`` (the default value), the current screen will be used.

----

.. _class_OS_method_get_screen_scale:

- :ref:`float<class_float>` **get_screen_scale** **(** :ref:`int<class_int>` screen=-1 **)** |const|

Return the scale factor of the specified screen by index. If ``screen`` is ``-1`` (the default value), the current screen will be used.

\ **Note:** On macOS returned value is ``2.0`` for hiDPI (Retina) screen, and ``1.0`` for all other cases.

\ **Note:** This method is implemented on macOS.

----

.. _class_OS_method_get_screen_size:

- :ref:`Vector2<class_Vector2>` **get_screen_size** **(** :ref:`int<class_int>` screen=-1 **)** |const|

Returns the dimensions in pixels of the specified screen. If ``screen`` is ``-1`` (the default value), the current screen will be used.

----

.. _class_OS_method_get_splash_tick_msec:

- :ref:`int<class_int>` **get_splash_tick_msec** **(** **)** |const|

Devuelve el tiempo en milisegundos que tardó en aparecer el logo de inicio.

----

.. _class_OS_method_get_static_memory_peak_usage:

- :ref:`int<class_int>` **get_static_memory_peak_usage** **(** **)** |const|

Devuelve la cantidad máxima de memoria estática utilizada (sólo funciona en la depuración).

----

.. _class_OS_method_get_static_memory_usage:

- :ref:`int<class_int>` **get_static_memory_usage** **(** **)** |const|

Devuelve la cantidad de memoria estática que está siendo utilizada por el programa en bytes.

----

.. _class_OS_method_get_system_dir:

- :ref:`String<class_String>` **get_system_dir** **(** :ref:`SystemDir<enum_OS_SystemDir>` dir, :ref:`bool<class_bool>` shared_storage=true **)** |const|

Returns the actual path to commonly used folders across different platforms. Available locations are specified in :ref:`SystemDir<enum_OS_SystemDir>`.

\ **Note:** This method is implemented on Android, Linux, macOS and Windows.

\ **Note:** Shared storage is implemented on Android and allows to differentiate between app specific and shared directories. Shared directories have additional restrictions on Android.

----

.. _class_OS_method_get_system_time_msecs:

- :ref:`int<class_int>` **get_system_time_msecs** **(** **)** |const|

Returns the epoch time of the operating system in milliseconds.

----

.. _class_OS_method_get_system_time_secs:

- :ref:`int<class_int>` **get_system_time_secs** **(** **)** |const|

Returns the epoch time of the operating system in seconds.

----

.. _class_OS_method_get_tablet_driver_count:

- :ref:`int<class_int>` **get_tablet_driver_count** **(** **)** |const|

Devuelve el número total de controladores de tabletas disponibles.

\ **Nota:** Este método está implementado en Windows.

----

.. _class_OS_method_get_tablet_driver_name:

- :ref:`String<class_String>` **get_tablet_driver_name** **(** :ref:`int<class_int>` idx **)** |const|

Devuelve el nombre del controlador de la tableta para el índice dado.

\ **Nota:** Este método está implementado en Windows.

----

.. _class_OS_method_get_thread_caller_id:

- :ref:`int<class_int>` **get_thread_caller_id** **(** **)** |const|

Returns the ID of the current thread. This can be used in logs to ease debugging of multi-threaded applications.

\ **Note:** Thread IDs are not deterministic and may be reused across application restarts.

----

.. _class_OS_method_get_ticks_msec:

- :ref:`int<class_int>` **get_ticks_msec** **(** **)** |const|

Deprecated, use :ref:`Time.get_ticks_msec<class_Time_method_get_ticks_msec>` instead.

Returns the amount of time passed in milliseconds since the engine started.

----

.. _class_OS_method_get_ticks_usec:

- :ref:`int<class_int>` **get_ticks_usec** **(** **)** |const|

Deprecated, use :ref:`Time.get_ticks_usec<class_Time_method_get_ticks_usec>` instead.

Returns the amount of time passed in microseconds since the engine started.

----

.. _class_OS_method_get_time:

- :ref:`Dictionary<class_Dictionary>` **get_time** **(** :ref:`bool<class_bool>` utc=false **)** |const|

Deprecated, use :ref:`Time.get_time_dict_from_system<class_Time_method_get_time_dict_from_system>` instead.

Returns current time as a dictionary of keys: hour, minute, second.

----

.. _class_OS_method_get_time_zone_info:

- :ref:`Dictionary<class_Dictionary>` **get_time_zone_info** **(** **)** |const|

Devuelve la zona horaria actual como un diccionario con las teclas: sesgo y nombre.

----

.. _class_OS_method_get_unique_id:

- :ref:`String<class_String>` **get_unique_id** **(** **)** |const|

Returns a string that is unique to the device.

\ **Note:** This string may change without notice if the user reinstalls/upgrades their operating system or changes their hardware. This means it should generally not be used to encrypt persistent data as the data saved before an unexpected ID change would become inaccessible. The returned string may also be falsified using external programs, so do not rely on the string returned by :ref:`get_unique_id<class_OS_method_get_unique_id>` for security purposes.

\ **Note:** Returns an empty string on HTML5 and UWP, as this method isn't implemented on those platforms yet.

----

.. _class_OS_method_get_unix_time:

- :ref:`int<class_int>` **get_unix_time** **(** **)** |const|

Returns the current UNIX epoch timestamp in seconds.

\ **Important:** This is the system clock that the user can manually set. **Never use** this method for precise time calculation since its results are also subject to automatic adjustments by the operating system. **Always use** :ref:`get_ticks_usec<class_OS_method_get_ticks_usec>` or :ref:`get_ticks_msec<class_OS_method_get_ticks_msec>` for precise time calculation instead, since they are guaranteed to be monotonic (i.e. never decrease).

----

.. _class_OS_method_get_unix_time_from_datetime:

- :ref:`int<class_int>` **get_unix_time_from_datetime** **(** :ref:`Dictionary<class_Dictionary>` datetime **)** |const|

Gets an epoch time value from a dictionary of time values.

\ ``datetime`` must be populated with the following keys: ``year``, ``month``, ``day``, ``hour``, ``minute``, ``second``.

If the dictionary is empty ``0`` is returned. If some keys are omitted, they default to the equivalent values for the UNIX epoch timestamp 0 (1970-01-01 at 00:00:00 UTC).

You can pass the output from :ref:`get_datetime_from_unix_time<class_OS_method_get_datetime_from_unix_time>` directly into this function. Daylight Savings Time (``dst``), if present, is ignored.

----

.. _class_OS_method_get_user_data_dir:

- :ref:`String<class_String>` **get_user_data_dir** **(** **)** |const|

Returns the absolute directory path where user data is written (``user://``).

On Linux, this is ``~/.local/share/godot/app_userdata/[project_name]``, or ``~/.local/share/[custom_name]`` if ``use_custom_user_dir`` is set.

On macOS, this is ``~/Library/Application Support/Godot/app_userdata/[project_name]``, or ``~/Library/Application Support/[custom_name]`` if ``use_custom_user_dir`` is set.

On Windows, this is ``%APPDATA%\Godot\app_userdata\[project_name]``, or ``%APPDATA%\[custom_name]`` if ``use_custom_user_dir`` is set. ``%APPDATA%`` expands to ``%USERPROFILE%\AppData\Roaming``.

If the project name is empty, ``user://`` falls back to ``res://``.

Not to be confused with :ref:`get_data_dir<class_OS_method_get_data_dir>`, which returns the *global* (non-project-specific) user data directory.

----

.. _class_OS_method_get_video_driver_count:

- :ref:`int<class_int>` **get_video_driver_count** **(** **)** |const|

Returns the number of video drivers supported on the current platform.

----

.. _class_OS_method_get_video_driver_name:

- :ref:`String<class_String>` **get_video_driver_name** **(** :ref:`VideoDriver<enum_OS_VideoDriver>` driver **)** |const|

Returns the name of the video driver matching the given ``driver`` index. This index is a value from :ref:`VideoDriver<enum_OS_VideoDriver>`, and you can use :ref:`get_current_video_driver<class_OS_method_get_current_video_driver>` to get the current backend's index.

----

.. _class_OS_method_get_virtual_keyboard_height:

- :ref:`int<class_int>` **get_virtual_keyboard_height** **(** **)**

Devuelve la altura del teclado en pantalla en píxeles. Devuelve 0 si no hay teclado o si está oculto actualmente.

----

.. _class_OS_method_get_window_safe_area:

- :ref:`Rect2<class_Rect2>` **get_window_safe_area** **(** **)** |const|

Returns unobscured area of the window where interactive controls should be rendered.

----

.. _class_OS_method_global_menu_add_item:

- void **global_menu_add_item** **(** :ref:`String<class_String>` menu, :ref:`String<class_String>` label, :ref:`Variant<class_Variant>` id, :ref:`Variant<class_Variant>` meta **)**

Add a new item with text "label" to global menu. Use "_dock" menu to add item to the macOS dock icon menu.

\ **Note:** This method is implemented on macOS.

----

.. _class_OS_method_global_menu_add_separator:

- void **global_menu_add_separator** **(** :ref:`String<class_String>` menu **)**

Add a separator between items. Separators also occupy an index.

\ **Note:** This method is implemented on macOS.

----

.. _class_OS_method_global_menu_clear:

- void **global_menu_clear** **(** :ref:`String<class_String>` menu **)**

Clear the global menu, in effect removing all items.

\ **Note:** This method is implemented on macOS.

----

.. _class_OS_method_global_menu_remove_item:

- void **global_menu_remove_item** **(** :ref:`String<class_String>` menu, :ref:`int<class_int>` idx **)**

Removes the item at index "idx" from the global menu. Note that the indexes of items after the removed item are going to be shifted by one.

\ **Note:** This method is implemented on macOS.

----

.. _class_OS_method_has_environment:

- :ref:`bool<class_bool>` **has_environment** **(** :ref:`String<class_String>` variable **)** |const|

Returns ``true`` if the environment variable with the name ``variable`` exists.

\ **Note:** Double-check the casing of ``variable``. Environment variable names are case-sensitive on all platforms except Windows.

----

.. _class_OS_method_has_feature:

- :ref:`bool<class_bool>` **has_feature** **(** :ref:`String<class_String>` tag_name **)** |const|

Returns ``true`` if the feature for the given feature tag is supported in the currently running instance, depending on the platform, build etc. Can be used to check whether you're currently running a debug build, on a certain platform or arch, etc. Refer to the :doc:`Feature Tags <../tutorials/export/feature_tags>` documentation for more details.

\ **Note:** Tag names are case-sensitive.

----

.. _class_OS_method_has_touchscreen_ui_hint:

- :ref:`bool<class_bool>` **has_touchscreen_ui_hint** **(** **)** |const|

Returns ``true`` if the device has a touchscreen or emulates one.

----

.. _class_OS_method_has_virtual_keyboard:

- :ref:`bool<class_bool>` **has_virtual_keyboard** **(** **)** |const|

Returns ``true`` if the platform has a virtual keyboard, ``false`` otherwise.

----

.. _class_OS_method_hide_virtual_keyboard:

- void **hide_virtual_keyboard** **(** **)**

Oculta el teclado virtual si se muestra, no hace nada más.

----

.. _class_OS_method_is_debug_build:

- :ref:`bool<class_bool>` **is_debug_build** **(** **)** |const|

Devuelve ``true`` si el binario Godot utilizado para ejecutar el proyecto es una plantilla de exportación *debug*, o cuando se ejecuta en el editor.

Devuelve ``false`` si el binario de Godot utilizado para ejecutar el proyecto es una plantilla de exportación *release*.

Para comprobar si el binario Godot utilizado para ejecutar el proyecto es una plantilla de exportación (depuración o liberación), utiliza en su lugar ``OS.has_feature("standalone")``.

----

.. _class_OS_method_is_ok_left_and_cancel_right:

- :ref:`bool<class_bool>` **is_ok_left_and_cancel_right** **(** **)** |const|

Returns ``true`` if the **OK** button should appear on the left and **Cancel** on the right.

----

.. _class_OS_method_is_scancode_unicode:

- :ref:`bool<class_bool>` **is_scancode_unicode** **(** :ref:`int<class_int>` code **)** |const|

Returns ``true`` if the input scancode corresponds to a Unicode character.

----

.. _class_OS_method_is_stdout_verbose:

- :ref:`bool<class_bool>` **is_stdout_verbose** **(** **)** |const|

Devuelve ``true`` si el motor se ejecutó con ``-v`` (verbose stdout).

----

.. _class_OS_method_is_userfs_persistent:

- :ref:`bool<class_bool>` **is_userfs_persistent** **(** **)** |const|

Si ``true``, el sistema de archivos de ``user://`` es persistente, de modo que su estado es el mismo después de que un jugador abandona y comienza el juego de nuevo. Relevante para la plataforma HTML5, donde esta persistencia puede no estar disponible.

----

.. _class_OS_method_is_window_always_on_top:

- :ref:`bool<class_bool>` **is_window_always_on_top** **(** **)** |const|

Returns ``true`` if the window should always be on top of other windows.

----

.. _class_OS_method_is_window_focused:

- :ref:`bool<class_bool>` **is_window_focused** **(** **)** |const|

Returns ``true`` if the window is currently focused.

\ **Note:** Only implemented on desktop platforms. On other platforms, it will always return ``true``.

----

.. _class_OS_method_keyboard_get_current_layout:

- :ref:`int<class_int>` **keyboard_get_current_layout** **(** **)** |const|

Devuelve el índice de disposición del teclado activo.

\ **Nota:** Este método está implementado en Linux, macOS y Windows.

----

.. _class_OS_method_keyboard_get_layout_count:

- :ref:`int<class_int>` **keyboard_get_layout_count** **(** **)** |const|

Devuelve el número de disposiciones del teclado.

\ **Nota:** Este método está implementado en Linux, macOS y Windows.

----

.. _class_OS_method_keyboard_get_layout_language:

- :ref:`String<class_String>` **keyboard_get_layout_language** **(** :ref:`int<class_int>` index **)** |const|

Devuelve el código de idioma ISO-639/BCP-47 de la disposición del teclado en la posición ``index``.

\ **Nota:** Este método está implementado en Linux, macOS y Windows.

----

.. _class_OS_method_keyboard_get_layout_name:

- :ref:`String<class_String>` **keyboard_get_layout_name** **(** :ref:`int<class_int>` index **)** |const|

Devuelve el nombre localizado de la disposición del teclado en la posición ``index``.

\ **Nota:** Este método está implementado en Linux, macOS y Windows.

----

.. _class_OS_method_keyboard_set_current_layout:

- void **keyboard_set_current_layout** **(** :ref:`int<class_int>` index **)**

Establece una disposición de teclado activa.

\ **Nota:** Este método está implementado en Linux, macOS y Windows.

----

.. _class_OS_method_kill:

- :ref:`Error<enum_@GlobalScope_Error>` **kill** **(** :ref:`int<class_int>` pid **)**

Kill (terminate) the process identified by the given process ID (``pid``), e.g. the one returned by :ref:`execute<class_OS_method_execute>` in non-blocking mode. See also :ref:`crash<class_OS_method_crash>`.

\ **Note:** This method can also be used to kill processes that were not spawned by the game.

\ **Note:** This method is implemented on Android, iOS, Linux, macOS and Windows.

----

.. _class_OS_method_move_window_to_foreground:

- void **move_window_to_foreground** **(** **)**

Moves the window to the front.

\ **Note:** This method is implemented on Linux, macOS and Windows.

----

.. _class_OS_method_native_video_is_playing:

- :ref:`bool<class_bool>` **native_video_is_playing** **(** **)**

Returns ``true`` if native video is playing.

\ **Note:** This method is only implemented on iOS.

----

.. _class_OS_method_native_video_pause:

- void **native_video_pause** **(** **)**

Pauses native video playback.

\ **Note:** This method is only implemented on iOS.

----

.. _class_OS_method_native_video_play:

- :ref:`Error<enum_@GlobalScope_Error>` **native_video_play** **(** :ref:`String<class_String>` path, :ref:`float<class_float>` volume, :ref:`String<class_String>` audio_track, :ref:`String<class_String>` subtitle_track **)**

Plays native video from the specified path, at the given volume and with audio and subtitle tracks.

\ **Note:** This method is only implemented on iOS.

----

.. _class_OS_method_native_video_stop:

- void **native_video_stop** **(** **)**

Stops native video playback.

\ **Note:** This method is implemented on iOS.

----

.. _class_OS_method_native_video_unpause:

- void **native_video_unpause** **(** **)**

Resumes native video playback.

\ **Note:** This method is implemented on iOS.

----

.. _class_OS_method_open_midi_inputs:

- void **open_midi_inputs** **(** **)**

Inicializa el botón único para el controlador MIDI del sistema.

\ **Nota:** Este método está implementado en Linux, macOS y Windows.

----

.. _class_OS_method_print_all_resources:

- void **print_all_resources** **(** :ref:`String<class_String>` tofile="" **)**

Muestra todos los recursos del juego. Opcionalmente, la lista puede escribirse en un archivo especificando una ruta de archivo en ``tofile``.

----

.. _class_OS_method_print_all_textures_by_size:

- void **print_all_textures_by_size** **(** **)**

Muestra la lista de texturas cargadas ordenadas por tamaño en la memoria.

----

.. _class_OS_method_print_resources_by_type:

- void **print_resources_by_type** **(** :ref:`PoolStringArray<class_PoolStringArray>` types **)**

Muestra el número de recursos cargados por el juego de los tipos dados.

----

.. _class_OS_method_print_resources_in_use:

- void **print_resources_in_use** **(** :ref:`bool<class_bool>` short=false **)**

Muestra todos los recursos utilizados actualmente por el juego.

----

.. _class_OS_method_request_attention:

- void **request_attention** **(** **)**

Request the user attention to the window. It'll flash the taskbar button on Windows or bounce the dock icon on OSX.

\ **Note:** This method is implemented on Linux, macOS and Windows.

----

.. _class_OS_method_request_permission:

- :ref:`bool<class_bool>` **request_permission** **(** :ref:`String<class_String>` name **)**

Por el momento esta función sólo es utilizada por ``AudioDriverOpenSL`` para pedir permiso para ``RECORD_AUDIO`` en Android.

----

.. _class_OS_method_request_permissions:

- :ref:`bool<class_bool>` **request_permissions** **(** **)**

With this function, you can request dangerous permissions since normal permissions are automatically granted at install time in Android applications.

\ **Note:** This method is implemented on Android.

----

.. _class_OS_method_set_environment:

- :ref:`bool<class_bool>` **set_environment** **(** :ref:`String<class_String>` variable, :ref:`String<class_String>` value **)** |const|

Sets the value of the environment variable ``variable`` to ``value``. The environment variable will be set for the Godot process and any process executed with :ref:`execute<class_OS_method_execute>` after running :ref:`set_environment<class_OS_method_set_environment>`. The environment variable will *not* persist to processes run after the Godot process was terminated.

\ **Note:** Double-check the casing of ``variable``. Environment variable names are case-sensitive on all platforms except Windows.

----

.. _class_OS_method_set_icon:

- void **set_icon** **(** :ref:`Image<class_Image>` icon **)**

Sets the game's icon using an :ref:`Image<class_Image>` resource.

The same image is used for window caption, taskbar/dock and window selection dialog. Image is scaled as needed.

\ **Note:** This method is implemented on HTML5, Linux, macOS and Windows.

----

.. _class_OS_method_set_ime_active:

- void **set_ime_active** **(** :ref:`bool<class_bool>` active **)**

Sets whether IME input mode should be enabled.

If active IME handles key events before the application and creates an composition string and suggestion list.

Application can retrieve the composition status by using :ref:`get_ime_selection<class_OS_method_get_ime_selection>` and :ref:`get_ime_text<class_OS_method_get_ime_text>` functions.

Completed composition string is committed when input is finished.

\ **Note:** This method is implemented on Linux, macOS and Windows.

----

.. _class_OS_method_set_ime_position:

- void **set_ime_position** **(** :ref:`Vector2<class_Vector2>` position **)**

Sets position of IME suggestion list popup (in window coordinates).

\ **Note:** This method is implemented on Linux, macOS and Windows.

----

.. _class_OS_method_set_native_icon:

- void **set_native_icon** **(** :ref:`String<class_String>` filename **)**

Sets the game's icon using a multi-size platform-specific icon file (``*.ico`` on Windows and ``*.icns`` on macOS).

Appropriate size sub-icons are used for window caption, taskbar/dock and window selection dialog.

\ **Note:** This method is implemented on macOS and Windows.

----

.. _class_OS_method_set_thread_name:

- :ref:`Error<enum_@GlobalScope_Error>` **set_thread_name** **(** :ref:`String<class_String>` name **)**

Establece el nombre del hilo actual.

----

.. _class_OS_method_set_use_file_access_save_and_swap:

- void **set_use_file_access_save_and_swap** **(** :ref:`bool<class_bool>` enabled **)**

Permite guardar la copia de seguridad si ``enabled`` es ``true``.

----

.. _class_OS_method_set_window_always_on_top:

- void **set_window_always_on_top** **(** :ref:`bool<class_bool>` enabled **)**

Sets whether the window should always be on top.

\ **Note:** This method is implemented on Linux, macOS and Windows.

----

.. _class_OS_method_set_window_mouse_passthrough:

- void **set_window_mouse_passthrough** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` region **)**

Sets a polygonal region of the window which accepts mouse events. Mouse events outside the region will be passed through.

Passing an empty array will disable passthrough support (all mouse events will be intercepted by the window, which is the default behavior).

::

    # Set region, using Path2D node.
    OS.set_window_mouse_passthrough($Path2D.curve.get_baked_points())
    
    # Set region, using Polygon2D node.
    OS.set_window_mouse_passthrough($Polygon2D.polygon)
    
    # Reset region to default.
    OS.set_window_mouse_passthrough([])

\ **Note:** On Windows, the portion of a window that lies outside the region is not drawn, while on Linux and macOS it is.

\ **Note:** This method is implemented on Linux, macOS and Windows.

----

.. _class_OS_method_set_window_title:

- void **set_window_title** **(** :ref:`String<class_String>` title **)**

Sets the window title to the specified string.

\ **Note:** This should be used sporadically. Don't set this every frame, as that will negatively affect performance on some window managers.

\ **Note:** This method is implemented on HTML5, Linux, macOS and Windows.

----

.. _class_OS_method_shell_open:

- :ref:`Error<enum_@GlobalScope_Error>` **shell_open** **(** :ref:`String<class_String>` uri **)**

Requests the OS to open a resource with the most appropriate program. For example:

- ``OS.shell_open("C:\\Users\name\Downloads")`` on Windows opens the file explorer at the user's Downloads folder.

- ``OS.shell_open("https://godotengine.org")`` opens the default web browser on the official Godot website.

- ``OS.shell_open("mailto:example@example.com")`` opens the default email client with the "To" field set to ``example@example.com``. See `Customizing [code]mailto:[/code] Links <https://blog.escapecreative.com/customizing-mailto-links/>`__ for a list of fields that can be added.

Use :ref:`ProjectSettings.globalize_path<class_ProjectSettings_method_globalize_path>` to convert a ``res://`` or ``user://`` path into a system path for use with this method.

\ **Note:** This method is implemented on Android, iOS, HTML5, Linux, macOS and Windows.

----

.. _class_OS_method_show_virtual_keyboard:

- void **show_virtual_keyboard** **(** :ref:`String<class_String>` existing_text="", :ref:`bool<class_bool>` multiline=false **)**

Shows the virtual keyboard if the platform has one.

The ``existing_text`` parameter is useful for implementing your own :ref:`LineEdit<class_LineEdit>` or :ref:`TextEdit<class_TextEdit>`, as it tells the virtual keyboard what text has already been typed (the virtual keyboard uses it for auto-correct and predictions).

The ``multiline`` parameter needs to be set to ``true`` to be able to enter multiple lines of text, as in :ref:`TextEdit<class_TextEdit>`.

\ **Note:** This method is implemented on Android, iOS and UWP.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
