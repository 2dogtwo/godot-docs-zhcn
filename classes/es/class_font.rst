:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Font.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Font:

Font
====

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`BitmapFont<class_BitmapFont>`, :ref:`DynamicFont<class_DynamicFont>`

Soporte de fuentes y dibujos de texto internacionalizados.

Descripción
----------------------

Font contains a Unicode-compatible character set, as well as the ability to draw it with variable width, ascent, descent and kerning. For creating fonts from TTF files (or other font formats), see the editor support for fonts.

\ **Note:** If a :ref:`DynamicFont<class_DynamicFont>` doesn't contain a character used in a string, the character in question will be replaced with codepoint ``0xfffd`` if it's available in the :ref:`DynamicFont<class_DynamicFont>`. If this replacement character isn't available in the DynamicFont, the character will be hidden without displaying any replacement character in the string.

\ **Note:** If a :ref:`BitmapFont<class_BitmapFont>` doesn't contain a character used in a string, the character in question will be hidden without displaying any replacement character in the string.

\ **Note:** Unicode characters after ``0xffff`` (such as most emoji) are *not* supported on Windows. They will display as unknown characters instead. This will be resolved in Godot 4.0.

Métodos
--------------

+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`draw<class_Font_method_draw>` **(** :ref:`RID<class_RID>` canvas_item, :ref:`Vector2<class_Vector2>` position, :ref:`String<class_String>` string, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`int<class_int>` clip_w=-1, :ref:`Color<class_Color>` outline_modulate=Color( 1, 1, 1, 1 ) **)** |const| |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`draw_char<class_Font_method_draw_char>` **(** :ref:`RID<class_RID>` canvas_item, :ref:`Vector2<class_Vector2>` position, :ref:`int<class_int>` char, :ref:`int<class_int>` next=-1, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` outline=false **)** |const|                          |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_ascent<class_Font_method_get_ascent>` **(** **)** |const|                                                                                                                                                                                                                                                            |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_char_size<class_Font_method_get_char_size>` **(** :ref:`int<class_int>` char, :ref:`int<class_int>` next=0 **)** |const|                                                                                                                                                                                             |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_descent<class_Font_method_get_descent>` **(** **)** |const|                                                                                                                                                                                                                                                          |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_height<class_Font_method_get_height>` **(** **)** |const|                                                                                                                                                                                                                                                            |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_string_size<class_Font_method_get_string_size>` **(** :ref:`String<class_String>` string **)** |const|                                                                                                                                                                                                               |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_wordwrap_string_size<class_Font_method_get_wordwrap_string_size>` **(** :ref:`String<class_String>` string, :ref:`float<class_float>` width **)** |const|                                                                                                                                                            |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`has_outline<class_Font_method_has_outline>` **(** **)** |const|                                                                                                                                                                                                                                                          |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_distance_field_hint<class_Font_method_is_distance_field_hint>` **(** **)** |const|                                                                                                                                                                                                                                    |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`update_changes<class_Font_method_update_changes>` **(** **)**                                                                                                                                                                                                                                                            |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Métodos
------------------------------------------------

.. _class_Font_method_draw:

- void **draw** **(** :ref:`RID<class_RID>` canvas_item, :ref:`Vector2<class_Vector2>` position, :ref:`String<class_String>` string, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`int<class_int>` clip_w=-1, :ref:`Color<class_Color>` outline_modulate=Color( 1, 1, 1, 1 ) **)** |const|

Dibuja ``string`` en un elemento del lienzo utilizando la fuente en una posición determinada, con ``modulate`` color, y opcionalmente recortando el ancho. ``position`` especifica la línea de base, no la parte superior. Para dibujar desde la cima, *ascent* debe añadirse al eje Y.

Véase también :ref:`CanvasItem.draw_string<class_CanvasItem_method_draw_string>`.

----

.. _class_Font_method_draw_char:

- :ref:`float<class_float>` **draw_char** **(** :ref:`RID<class_RID>` canvas_item, :ref:`Vector2<class_Vector2>` position, :ref:`int<class_int>` char, :ref:`int<class_int>` next=-1, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` outline=false **)** |const|

Dibuja el carácter ``char`` en un elemento del canvas utilizando la fuente en una posición determinada, con ``modular`` color, y opcionalmente kerning si se pasa ``next``. recortando el ancho. ``position`` especifica la línea de base, no la parte superior. Para dibujar desde la cima, *ascent* debe añadirse al eje Y. Se devuelve el ancho utilizado por el carácter, lo que hace que esta función sea útil para dibujar cadenas carácter por carácter.

----

.. _class_Font_method_get_ascent:

- :ref:`float<class_float>` **get_ascent** **(** **)** |const|

Devuelve el ascenso de la fuente (número de píxeles por encima de la línea de base).

----

.. _class_Font_method_get_char_size:

- :ref:`Vector2<class_Vector2>` **get_char_size** **(** :ref:`int<class_int>` char, :ref:`int<class_int>` next=0 **)** |const|

Returns the size of a character, optionally taking kerning into account if the next character is provided. Note that the height returned is the font height (see :ref:`get_height<class_Font_method_get_height>`) and has no relation to the glyph height.

----

.. _class_Font_method_get_descent:

- :ref:`float<class_float>` **get_descent** **(** **)** |const|

Devuelve el descenso de la fuente (número de píxeles por debajo de la línea de base).

----

.. _class_Font_method_get_height:

- :ref:`float<class_float>` **get_height** **(** **)** |const|

Devuelve el descenso de la fuente (número de píxeles por debajo de la línea de base).

----

.. _class_Font_method_get_string_size:

- :ref:`Vector2<class_Vector2>` **get_string_size** **(** :ref:`String<class_String>` string **)** |const|

Returns the size of a string, taking kerning and advance into account. Note that the height returned is the font height (see :ref:`get_height<class_Font_method_get_height>`) and has no relation to the string.

----

.. _class_Font_method_get_wordwrap_string_size:

- :ref:`Vector2<class_Vector2>` **get_wordwrap_string_size** **(** :ref:`String<class_String>` string, :ref:`float<class_float>` width **)** |const|

Devuelve el tamaño que tendría la string con la envoltura de palabras habilitada con un ``width`` fijo.

----

.. _class_Font_method_has_outline:

- :ref:`bool<class_bool>` **has_outline** **(** **)** |const|

Devuelve ``true`` si la fuente tiene un contorno.

----

.. _class_Font_method_is_distance_field_hint:

- :ref:`bool<class_bool>` **is_distance_field_hint** **(** **)** |const|

----

.. _class_Font_method_update_changes:

- void **update_changes** **(** **)**

Después de editar una fuente (cambiar el tamaño, el ascenso, los caracteres, etc.). Llame a esta función para propagar los cambios a los controles que puedan utilizarla.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
