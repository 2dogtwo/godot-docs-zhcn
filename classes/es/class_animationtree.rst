:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the AnimationTree.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AnimationTree:

AnimationTree
=============

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Un nodo para ser usado para transiciones de animación avanzadas en un :ref:`AnimationPlayer<class_AnimationPlayer>`.

Descripción
----------------------

A node to be used for advanced animation transitions in an :ref:`AnimationPlayer<class_AnimationPlayer>`.

\ **Note:** When linked with an :ref:`AnimationPlayer<class_AnimationPlayer>`, several properties and methods of the corresponding :ref:`AnimationPlayer<class_AnimationPlayer>` will not function as expected. Playback and transitions should be handled using only the ``AnimationTree`` and its constituent :ref:`AnimationNode<class_AnimationNode>`\ (s). The :ref:`AnimationPlayer<class_AnimationPlayer>` node should be used solely for adding, deleting, and editing animations.

Tutoriales
--------------------

- :doc:`Using AnimationTree <../tutorials/animation/animation_tree>`

- `Third Person Shooter Demo <https://godotengine.org/asset-library/asset/678>`__

Propiedades
----------------------

+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`                                              | :ref:`active<class_AnimationTree_property_active>`                       | ``false``        |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`NodePath<class_NodePath>`                                      | :ref:`anim_player<class_AnimationTree_property_anim_player>`             | ``NodePath("")`` |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`AnimationProcessMode<enum_AnimationTree_AnimationProcessMode>` | :ref:`process_mode<class_AnimationTree_property_process_mode>`           | ``1``            |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`NodePath<class_NodePath>`                                      | :ref:`root_motion_track<class_AnimationTree_property_root_motion_track>` | ``NodePath("")`` |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`AnimationNode<class_AnimationNode>`                            | :ref:`tree_root<class_AnimationTree_property_tree_root>`                 |                  |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+

Métodos
--------------

+-----------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                              | :ref:`advance<class_AnimationTree_method_advance>` **(** :ref:`float<class_float>` delta **)**                                                              |
+-----------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform<class_Transform>` | :ref:`get_root_motion_transform<class_AnimationTree_method_get_root_motion_transform>` **(** **)** |const|                                                  |
+-----------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                              | :ref:`rename_parameter<class_AnimationTree_method_rename_parameter>` **(** :ref:`String<class_String>` old_name, :ref:`String<class_String>` new_name **)** |
+-----------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumeraciones
--------------------------

.. _enum_AnimationTree_AnimationProcessMode:

.. _class_AnimationTree_constant_ANIMATION_PROCESS_PHYSICS:

.. _class_AnimationTree_constant_ANIMATION_PROCESS_IDLE:

.. _class_AnimationTree_constant_ANIMATION_PROCESS_MANUAL:

enum **AnimationProcessMode**:

- **ANIMATION_PROCESS_PHYSICS** = **0** --- Las animaciones progresarán durante el fotograma de la física (es decir, :ref:`Node._physics_process<class_Node_method__physics_process>`).

- **ANIMATION_PROCESS_IDLE** = **1** --- Las animaciones progresarán durante el fotograma inactivo (es decir, :ref:`Node._process<class_Node_method__process>`).

- **ANIMATION_PROCESS_MANUAL** = **2** --- Las animaciones sólo progresarán manualmente (ver :ref:`advance<class_AnimationTree_method_advance>`).

Descripciones de Propiedades
--------------------------------------------------------

.. _class_AnimationTree_property_active:

- :ref:`bool<class_bool>` **active**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_active(value) |
+-----------+-------------------+
| *Getter*  | is_active()       |
+-----------+-------------------+

Si ``true``, el ``AnimationTree`` se procesará.

----

.. _class_AnimationTree_property_anim_player:

- :ref:`NodePath<class_NodePath>` **anim_player**

+-----------+-----------------------------+
| *Default* | ``NodePath("")``            |
+-----------+-----------------------------+
| *Setter*  | set_animation_player(value) |
+-----------+-----------------------------+
| *Getter*  | get_animation_player()      |
+-----------+-----------------------------+

La ruta al :ref:`AnimationPlayer<class_AnimationPlayer>` utilizada para la animacion.

----

.. _class_AnimationTree_property_process_mode:

- :ref:`AnimationProcessMode<enum_AnimationTree_AnimationProcessMode>` **process_mode**

+-----------+-------------------------+
| *Default* | ``1``                   |
+-----------+-------------------------+
| *Setter*  | set_process_mode(value) |
+-----------+-------------------------+
| *Getter*  | get_process_mode()      |
+-----------+-------------------------+

El modo de proceso de este ``AnimationTree``. Ver :ref:`AnimationProcessMode<enum_AnimationTree_AnimationProcessMode>` para los modos disponibles.

----

.. _class_AnimationTree_property_root_motion_track:

- :ref:`NodePath<class_NodePath>` **root_motion_track**

+-----------+------------------------------+
| *Default* | ``NodePath("")``             |
+-----------+------------------------------+
| *Setter*  | set_root_motion_track(value) |
+-----------+------------------------------+
| *Getter*  | get_root_motion_track()      |
+-----------+------------------------------+

The path to the Animation track used for root motion. Paths must be valid scene-tree paths to a node, and must be specified starting from the parent node of the node that will reproduce the animation. To specify a track that controls properties or bones, append its name after the path, separated by ``":"``. For example, ``"character/skeleton:ankle"`` or ``"character/mesh:transform/local"``.

If the track has type :ref:`Animation.TYPE_TRANSFORM<class_Animation_constant_TYPE_TRANSFORM>`, the transformation will be cancelled visually, and the animation will appear to stay in place. See also :ref:`get_root_motion_transform<class_AnimationTree_method_get_root_motion_transform>` and :ref:`RootMotionView<class_RootMotionView>`.

----

.. _class_AnimationTree_property_tree_root:

- :ref:`AnimationNode<class_AnimationNode>` **tree_root**

+----------+----------------------+
| *Setter* | set_tree_root(value) |
+----------+----------------------+
| *Getter* | get_tree_root()      |
+----------+----------------------+

El nodo de animación raíz de este ``AnimationTree``. Ver :ref:`AnimationNode<class_AnimationNode>`.

Descripciones de Métodos
------------------------------------------------

.. _class_AnimationTree_method_advance:

- void **advance** **(** :ref:`float<class_float>` delta **)**

Avanza manualmente las animaciones en el tiempo especificado (en segundos).

----

.. _class_AnimationTree_method_get_root_motion_transform:

- :ref:`Transform<class_Transform>` **get_root_motion_transform** **(** **)** |const|

Retrieve the motion of the :ref:`root_motion_track<class_AnimationTree_property_root_motion_track>` as a :ref:`Transform<class_Transform>` that can be used elsewhere. If :ref:`root_motion_track<class_AnimationTree_property_root_motion_track>` is not a path to a track of type :ref:`Animation.TYPE_TRANSFORM<class_Animation_constant_TYPE_TRANSFORM>`, returns an identity transformation. See also :ref:`root_motion_track<class_AnimationTree_property_root_motion_track>` and :ref:`RootMotionView<class_RootMotionView>`.

----

.. _class_AnimationTree_method_rename_parameter:

- void **rename_parameter** **(** :ref:`String<class_String>` old_name, :ref:`String<class_String>` new_name **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
