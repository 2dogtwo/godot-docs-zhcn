:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the String.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_String:

String
======

Clase String integrada.

Descripción
----------------------

Esta es la clase de string integrada (y la utilizada por GDScript). Soporta Unicode y proporciona todos los medios necesarios para el manejo de las strings. Las strings son contadas como referencia y usan un enfoque de copia sobre escritura, por lo que pasarlas es barato en recursos.

Tutoriales
--------------------

- :doc:`../tutorials/scripting/gdscript/gdscript_format_string`

Métodos
--------------

+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`bool<class_bool>` from **)**                                                                                      |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`int<class_int>` from **)**                                                                                        |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`float<class_float>` from **)**                                                                                    |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Vector2<class_Vector2>` from **)**                                                                                |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Rect2<class_Rect2>` from **)**                                                                                    |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Vector3<class_Vector3>` from **)**                                                                                |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Transform2D<class_Transform2D>` from **)**                                                                        |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Plane<class_Plane>` from **)**                                                                                    |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Quat<class_Quat>` from **)**                                                                                      |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`AABB<class_AABB>` from **)**                                                                                      |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Basis<class_Basis>` from **)**                                                                                    |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Transform<class_Transform>` from **)**                                                                            |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Color<class_Color>` from **)**                                                                                    |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`NodePath<class_NodePath>` from **)**                                                                              |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`RID<class_RID>` from **)**                                                                                        |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Dictionary<class_Dictionary>` from **)**                                                                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`Array<class_Array>` from **)**                                                                                    |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`PoolByteArray<class_PoolByteArray>` from **)**                                                                    |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`PoolIntArray<class_PoolIntArray>` from **)**                                                                      |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`PoolRealArray<class_PoolRealArray>` from **)**                                                                    |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`PoolStringArray<class_PoolStringArray>` from **)**                                                                |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` from **)**                                                              |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`PoolVector3Array<class_PoolVector3Array>` from **)**                                                              |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`String<class_String_method_String>` **(** :ref:`PoolColorArray<class_PoolColorArray>` from **)**                                                                  |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`begins_with<class_String_method_begins_with>` **(** :ref:`String<class_String>` text **)**                                                                        |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`bigrams<class_String_method_bigrams>` **(** **)**                                                                                                                 |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`c_escape<class_String_method_c_escape>` **(** **)**                                                                                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`c_unescape<class_String_method_c_unescape>` **(** **)**                                                                                                           |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`capitalize<class_String_method_capitalize>` **(** **)**                                                                                                           |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`casecmp_to<class_String_method_casecmp_to>` **(** :ref:`String<class_String>` to **)**                                                                            |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`count<class_String_method_count>` **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=0, :ref:`int<class_int>` to=0 **)**                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`countn<class_String_method_countn>` **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=0, :ref:`int<class_int>` to=0 **)**                        |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`dedent<class_String_method_dedent>` **(** **)**                                                                                                                   |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`empty<class_String_method_empty>` **(** **)**                                                                                                                     |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`ends_with<class_String_method_ends_with>` **(** :ref:`String<class_String>` text **)**                                                                            |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`erase<class_String_method_erase>` **(** :ref:`int<class_int>` position, :ref:`int<class_int>` chars **)**                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`find<class_String_method_find>` **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=0 **)**                                                        |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`find_last<class_String_method_find_last>` **(** :ref:`String<class_String>` what **)**                                                                            |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`findn<class_String_method_findn>` **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=0 **)**                                                      |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`format<class_String_method_format>` **(** :ref:`Variant<class_Variant>` values, :ref:`String<class_String>` placeholder="{_}" **)**                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_base_dir<class_String_method_get_base_dir>` **(** **)**                                                                                                       |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_basename<class_String_method_get_basename>` **(** **)**                                                                                                       |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_extension<class_String_method_get_extension>` **(** **)**                                                                                                     |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_file<class_String_method_get_file>` **(** **)**                                                                                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_slice<class_String_method_get_slice>` **(** :ref:`String<class_String>` delimiter, :ref:`int<class_int>` slice **)**                                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`hash<class_String_method_hash>` **(** **)**                                                                                                                       |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`hex_to_int<class_String_method_hex_to_int>` **(** **)**                                                                                                           |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`http_escape<class_String_method_http_escape>` **(** **)**                                                                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`http_unescape<class_String_method_http_unescape>` **(** **)**                                                                                                     |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`humanize_size<class_String_method_humanize_size>` **(** :ref:`int<class_int>` size **)**                                                                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`indent<class_String_method_indent>` **(** :ref:`String<class_String>` prefix **)**                                                                                |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`insert<class_String_method_insert>` **(** :ref:`int<class_int>` position, :ref:`String<class_String>` what **)**                                                  |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_abs_path<class_String_method_is_abs_path>` **(** **)**                                                                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_rel_path<class_String_method_is_rel_path>` **(** **)**                                                                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_subsequence_of<class_String_method_is_subsequence_of>` **(** :ref:`String<class_String>` text **)**                                                            |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_subsequence_ofi<class_String_method_is_subsequence_ofi>` **(** :ref:`String<class_String>` text **)**                                                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_valid_filename<class_String_method_is_valid_filename>` **(** **)**                                                                                             |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_valid_float<class_String_method_is_valid_float>` **(** **)**                                                                                                   |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_valid_hex_number<class_String_method_is_valid_hex_number>` **(** :ref:`bool<class_bool>` with_prefix=false **)**                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_valid_html_color<class_String_method_is_valid_html_color>` **(** **)**                                                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_valid_identifier<class_String_method_is_valid_identifier>` **(** **)**                                                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_valid_integer<class_String_method_is_valid_integer>` **(** **)**                                                                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_valid_ip_address<class_String_method_is_valid_ip_address>` **(** **)**                                                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`json_escape<class_String_method_json_escape>` **(** **)**                                                                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`left<class_String_method_left>` **(** :ref:`int<class_int>` position **)**                                                                                        |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`length<class_String_method_length>` **(** **)**                                                                                                                   |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`lstrip<class_String_method_lstrip>` **(** :ref:`String<class_String>` chars **)**                                                                                 |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`match<class_String_method_match>` **(** :ref:`String<class_String>` expr **)**                                                                                    |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`matchn<class_String_method_matchn>` **(** :ref:`String<class_String>` expr **)**                                                                                  |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolByteArray<class_PoolByteArray>`     | :ref:`md5_buffer<class_String_method_md5_buffer>` **(** **)**                                                                                                           |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`md5_text<class_String_method_md5_text>` **(** **)**                                                                                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`naturalnocasecmp_to<class_String_method_naturalnocasecmp_to>` **(** :ref:`String<class_String>` to **)**                                                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`nocasecmp_to<class_String_method_nocasecmp_to>` **(** :ref:`String<class_String>` to **)**                                                                        |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`ord_at<class_String_method_ord_at>` **(** :ref:`int<class_int>` at **)**                                                                                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`pad_decimals<class_String_method_pad_decimals>` **(** :ref:`int<class_int>` digits **)**                                                                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`pad_zeros<class_String_method_pad_zeros>` **(** :ref:`int<class_int>` digits **)**                                                                                |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`percent_decode<class_String_method_percent_decode>` **(** **)**                                                                                                   |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`percent_encode<class_String_method_percent_encode>` **(** **)**                                                                                                   |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`plus_file<class_String_method_plus_file>` **(** :ref:`String<class_String>` file **)**                                                                            |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`repeat<class_String_method_repeat>` **(** :ref:`int<class_int>` count **)**                                                                                       |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`replace<class_String_method_replace>` **(** :ref:`String<class_String>` what, :ref:`String<class_String>` forwhat **)**                                           |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`replacen<class_String_method_replacen>` **(** :ref:`String<class_String>` what, :ref:`String<class_String>` forwhat **)**                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`rfind<class_String_method_rfind>` **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=-1 **)**                                                     |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`rfindn<class_String_method_rfindn>` **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=-1 **)**                                                   |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`right<class_String_method_right>` **(** :ref:`int<class_int>` position **)**                                                                                      |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`rsplit<class_String_method_rsplit>` **(** :ref:`String<class_String>` delimiter, :ref:`bool<class_bool>` allow_empty=true, :ref:`int<class_int>` maxsplit=0 **)** |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`rstrip<class_String_method_rstrip>` **(** :ref:`String<class_String>` chars **)**                                                                                 |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolByteArray<class_PoolByteArray>`     | :ref:`sha1_buffer<class_String_method_sha1_buffer>` **(** **)**                                                                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`sha1_text<class_String_method_sha1_text>` **(** **)**                                                                                                             |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolByteArray<class_PoolByteArray>`     | :ref:`sha256_buffer<class_String_method_sha256_buffer>` **(** **)**                                                                                                     |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`sha256_text<class_String_method_sha256_text>` **(** **)**                                                                                                         |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`similarity<class_String_method_similarity>` **(** :ref:`String<class_String>` text **)**                                                                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`simplify_path<class_String_method_simplify_path>` **(** **)**                                                                                                     |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`split<class_String_method_split>` **(** :ref:`String<class_String>` delimiter, :ref:`bool<class_bool>` allow_empty=true, :ref:`int<class_int>` maxsplit=0 **)**   |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolRealArray<class_PoolRealArray>`     | :ref:`split_floats<class_String_method_split_floats>` **(** :ref:`String<class_String>` delimiter, :ref:`bool<class_bool>` allow_empty=true **)**                       |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`strip_edges<class_String_method_strip_edges>` **(** :ref:`bool<class_bool>` left=true, :ref:`bool<class_bool>` right=true **)**                                   |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`strip_escapes<class_String_method_strip_escapes>` **(** **)**                                                                                                     |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`substr<class_String_method_substr>` **(** :ref:`int<class_int>` from, :ref:`int<class_int>` len=-1 **)**                                                          |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolByteArray<class_PoolByteArray>`     | :ref:`to_ascii<class_String_method_to_ascii>` **(** **)**                                                                                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`to_float<class_String_method_to_float>` **(** **)**                                                                                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`to_int<class_String_method_to_int>` **(** **)**                                                                                                                   |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`to_lower<class_String_method_to_lower>` **(** **)**                                                                                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`to_upper<class_String_method_to_upper>` **(** **)**                                                                                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolByteArray<class_PoolByteArray>`     | :ref:`to_utf8<class_String_method_to_utf8>` **(** **)**                                                                                                                 |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolByteArray<class_PoolByteArray>`     | :ref:`to_wchar<class_String_method_to_wchar>` **(** **)**                                                                                                               |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`trim_prefix<class_String_method_trim_prefix>` **(** :ref:`String<class_String>` prefix **)**                                                                      |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`trim_suffix<class_String_method_trim_suffix>` **(** :ref:`String<class_String>` suffix **)**                                                                      |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`validate_node_name<class_String_method_validate_node_name>` **(** **)**                                                                                           |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`xml_escape<class_String_method_xml_escape>` **(** **)**                                                                                                           |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`xml_unescape<class_String_method_xml_unescape>` **(** **)**                                                                                                       |
+-----------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Descripciones de Métodos
------------------------------------------------

.. _class_String_method_String:

- :ref:`String<class_String>` **String** **(** :ref:`bool<class_bool>` from **)**

Construye una nueva String a partir del :ref:`bool<class_bool>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`int<class_int>` from **)**

Construye un nuevo String a partir del :ref:`int<class_int>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`float<class_float>` from **)**

Construye una nueva string a partir del :ref:`float<class_float>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`Vector2<class_Vector2>` from **)**

Construye una nueva string a partir del :ref:`Vector2<class_Vector2>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`Rect2<class_Rect2>` from **)**

Construye una nueva String a partir del :ref:`Rect2<class_Rect2>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`Vector3<class_Vector3>` from **)**

Construye una nueva String a partir del :ref:`Vector3<class_Vector3>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`Transform2D<class_Transform2D>` from **)**

Construye un nuevo String a partir del dado :ref:`Transform2D<class_Transform2D>`.

----

- :ref:`String<class_String>` **String** **(** :ref:`Plane<class_Plane>` from **)**

Construye una nueva String desde el :ref:`Plane<class_Plane>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`Quat<class_Quat>` from **)**

Construye una nueva String a partir del :ref:`Quat<class_Quat>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`AABB<class_AABB>` from **)**

Construye una nueva String a partir del :ref:`AABB<class_AABB>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`Basis<class_Basis>` from **)**

Construye una nueva String a partir de la :ref:`Basis<class_Basis>` dada.

----

- :ref:`String<class_String>` **String** **(** :ref:`Transform<class_Transform>` from **)**

Construye un nuevo String a partir de la :ref:`Transform<class_Transform>` dada.

----

- :ref:`String<class_String>` **String** **(** :ref:`Color<class_Color>` from **)**

Construye un nuevo String a partir del :ref:`Color<class_Color>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`NodePath<class_NodePath>` from **)**

Construye un nuevo String a partir del :ref:`NodePath<class_NodePath>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`RID<class_RID>` from **)**

Construye una nueva String a partir del :ref:`RID<class_RID>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`Dictionary<class_Dictionary>` from **)**

Construye un nuevo String a partir del :ref:`Dictionary<class_Dictionary>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`Array<class_Array>` from **)**

Construye un nuevo String a partir del :ref:`Array<class_Array>` dado.

----

- :ref:`String<class_String>` **String** **(** :ref:`PoolByteArray<class_PoolByteArray>` from **)**

Constructs a new String from the given :ref:`PoolByteArray<class_PoolByteArray>`.

----

- :ref:`String<class_String>` **String** **(** :ref:`PoolIntArray<class_PoolIntArray>` from **)**

Constructs a new String from the given :ref:`PoolIntArray<class_PoolIntArray>`.

----

- :ref:`String<class_String>` **String** **(** :ref:`PoolRealArray<class_PoolRealArray>` from **)**

Constructs a new String from the given :ref:`PoolRealArray<class_PoolRealArray>`.

----

- :ref:`String<class_String>` **String** **(** :ref:`PoolStringArray<class_PoolStringArray>` from **)**

Constructs a new String from the given :ref:`PoolStringArray<class_PoolStringArray>`.

----

- :ref:`String<class_String>` **String** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` from **)**

Constructs a new String from the given :ref:`PoolVector2Array<class_PoolVector2Array>`.

----

- :ref:`String<class_String>` **String** **(** :ref:`PoolVector3Array<class_PoolVector3Array>` from **)**

Constructs a new String from the given :ref:`PoolVector3Array<class_PoolVector3Array>`.

----

- :ref:`String<class_String>` **String** **(** :ref:`PoolColorArray<class_PoolColorArray>` from **)**

Constructs a new String from the given :ref:`PoolColorArray<class_PoolColorArray>`.

----

.. _class_String_method_begins_with:

- :ref:`bool<class_bool>` **begins_with** **(** :ref:`String<class_String>` text **)**

Devuelve ``true`` si la string comienza con la string dada.

----

.. _class_String_method_bigrams:

- :ref:`PoolStringArray<class_PoolStringArray>` **bigrams** **(** **)**

Devuelve los bigramas (pares de letras consecutivas) de esta string.

----

.. _class_String_method_c_escape:

- :ref:`String<class_String>` **c_escape** **(** **)**

Devuelve una copia de la string con caracteres especiales escapados usando el estándar del lenguaje C.

----

.. _class_String_method_c_unescape:

- :ref:`String<class_String>` **c_unescape** **(** **)**

Returns a copy of the string with escaped characters replaced by their meanings. Supported escape sequences are ``\'``, ``\"``, ``\?``, ``\\``, ``\a``, ``\b``, ``\f``, ``\n``, ``\r``, ``\t``, ``\v``.

\ **Note:** Unlike the GDScript parser, this method doesn't support the ``\uXXXX`` escape sequence.

----

.. _class_String_method_capitalize:

- :ref:`String<class_String>` **capitalize** **(** **)**

Cambia el caso de algunas cartas. Reemplaza los subrayados por espacios, añade espacios antes de los caracteres en mayúsculas, convierte todas las letras en minúsculas, luego pone en mayúsculas la primera letra y cada letra que sigue a un espacio. Para ``capitalize CamelCase mixed_with_underscores``, devolverá ``Capitalize Camel Case Mixed With Underscores``.

----

.. _class_String_method_casecmp_to:

- :ref:`int<class_int>` **casecmp_to** **(** :ref:`String<class_String>` to **)**

Performs a case-sensitive comparison to another string. Returns ``-1`` if less than, ``1`` if greater than, or ``0`` if equal. "less than" or "greater than" are determined by the `Unicode code points <https://en.wikipedia.org/wiki/List_of_Unicode_characters>`__ of each string, which roughly matches the alphabetical order.

\ **Behavior with different string lengths:** Returns ``1`` if the "base" string is longer than the ``to`` string or ``-1`` if the "base" string is shorter than the ``to`` string. Keep in mind this length is determined by the number of Unicode codepoints, *not* the actual visible characters.

\ **Behavior with empty strings:** Returns ``-1`` if the "base" string is empty, ``1`` if the ``to`` string is empty or ``0`` if both strings are empty.

To get a boolean result from a string comparison, use the ``==`` operator instead. See also :ref:`nocasecmp_to<class_String_method_nocasecmp_to>`.

----

.. _class_String_method_count:

- :ref:`int<class_int>` **count** **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=0, :ref:`int<class_int>` to=0 **)**

Devuelve el número de ocurrencias de la substring ``what`` entre las posiciones de ``from`` y ``to``. Si ``from`` y ``to`` es igual a 0 se utilizará la string completa. Si sólo ``a`` es igual a 0 se usará la substring restante.

----

.. _class_String_method_countn:

- :ref:`int<class_int>` **countn** **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=0, :ref:`int<class_int>` to=0 **)**

Devuelve el número de ocurrencias de la substring ``what`` (ignorando el caso) entre las posiciones de ``from`` y ``to``. Si ``from`` y ``to`` es igual a 0 se utilizará la string completa. Si sólo ``a`` es igual a 0 se usará la substring restante.

----

.. _class_String_method_dedent:

- :ref:`String<class_String>` **dedent** **(** **)**

Returns a copy of the string with indentation (leading tabs and spaces) removed. See also :ref:`indent<class_String_method_indent>` to add indentation.

----

.. _class_String_method_empty:

- :ref:`bool<class_bool>` **empty** **(** **)**

Devuelve ``true`` si la longitud de la string es igual a ``0``.

----

.. _class_String_method_ends_with:

- :ref:`bool<class_bool>` **ends_with** **(** :ref:`String<class_String>` text **)**

Devuelve ``true`` si la string termina con la string dada.

----

.. _class_String_method_erase:

- void **erase** **(** :ref:`int<class_int>` position, :ref:`int<class_int>` chars **)**

Borra los caracteres ``chars`` de la string que comienza con ``position``.

----

.. _class_String_method_find:

- :ref:`int<class_int>` **find** **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=0 **)**

Finds the first occurrence of a substring. Returns the starting position of the substring or ``-1`` if not found. Optionally, the initial search index can be passed.

\ **Note:** If you just want to know whether a string contains a substring, use the ``in`` operator as follows:

::

    # Will evaluate to `false`.
    if "i" in "team":
        pass

----

.. _class_String_method_find_last:

- :ref:`int<class_int>` **find_last** **(** :ref:`String<class_String>` what **)**

Finds the last occurrence of a substring. Returns the starting position of the substring or ``-1`` if not found.

----

.. _class_String_method_findn:

- :ref:`int<class_int>` **findn** **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=0 **)**

Finds the first occurrence of a substring, ignoring case. Returns the starting position of the substring or ``-1`` if not found. Optionally, the initial search index can be passed.

----

.. _class_String_method_format:

- :ref:`String<class_String>` **format** **(** :ref:`Variant<class_Variant>` values, :ref:`String<class_String>` placeholder="{_}" **)**

Formatea la string reemplazando todas las ocurrencias de ``placeholder`` por ``values``.

----

.. _class_String_method_get_base_dir:

- :ref:`String<class_String>` **get_base_dir** **(** **)**

Si la string es una ruta de archivo válida, devuelve el nombre del directorio base.

----

.. _class_String_method_get_basename:

- :ref:`String<class_String>` **get_basename** **(** **)**

Si la string es una ruta de archivo válida, devuelve la ruta de archivo completa sin la extensión.

----

.. _class_String_method_get_extension:

- :ref:`String<class_String>` **get_extension** **(** **)**

Returns the extension without the leading period character (``.``) if the string is a valid file name or path. If the string does not contain an extension, returns an empty string instead.

::

    print("/path/to/file.txt".get_extension())  # "txt"
    print("file.txt".get_extension())  # "txt"
    print("file.sample.txt".get_extension())  # "txt"
    print(".txt".get_extension())  # "txt"
    print("file.txt.".get_extension())  # "" (empty string)
    print("file.txt..".get_extension())  # "" (empty string)
    print("txt".get_extension())  # "" (empty string)
    print("".get_extension())  # "" (empty string)

----

.. _class_String_method_get_file:

- :ref:`String<class_String>` **get_file** **(** **)**

Si la string es una ruta de archivo válida, devuelve el nombre del archivo.

----

.. _class_String_method_get_slice:

- :ref:`String<class_String>` **get_slice** **(** :ref:`String<class_String>` delimiter, :ref:`int<class_int>` slice **)**

Splits a string using a ``delimiter`` and returns a substring at index ``slice``. Returns an empty string if the index doesn't exist.

This is a more performant alternative to :ref:`split<class_String_method_split>` for cases when you need only one element from the array at a fixed index.

Example:

::

    print("i/am/example/string".get_slice("/", 2)) # Prints 'example'.

----

.. _class_String_method_hash:

- :ref:`int<class_int>` **hash** **(** **)**

Hashea la string y devuelve un entero de 32 bits.

----

.. _class_String_method_hex_to_int:

- :ref:`int<class_int>` **hex_to_int** **(** **)**

Convierte una string que contiene un número hexadecimal en un entero. Se espera que las strings hexadecimales lleven el prefijo "``0x``", de lo contrario se devuelve ``0``.

::

    print("0xff".hex_to_int()) # Imprimir "255"

----

.. _class_String_method_http_escape:

- :ref:`String<class_String>` **http_escape** **(** **)**

Escapa (codifica) una string a un formato compatible con la URL. También conocido como 'codificación de URL'.

::

    print("https://example.org/?escaped=" + "Godot Engine:'docs'".http_escape())

----

.. _class_String_method_http_unescape:

- :ref:`String<class_String>` **http_unescape** **(** **)**

Desvincula (decodifica) una string en formato codificado de URL. También conocido como "decodificación de URL".

::

    print("https://example.org/?escaped=" + "Godot%20Motor%3A%27docs%27".http_unescape())

----

.. _class_String_method_humanize_size:

- :ref:`String<class_String>` **humanize_size** **(** :ref:`int<class_int>` size **)**

Convierte el ``size`` representado como número de bytes a un formato legible para el ser humano utilizando un conjunto de unidades de tamaño de datos internacionalizados, a saber: B, KiB, MiB, GiB, TiB, PiB, EiB. Nótese que la siguiente unidad más pequeña es escogida automáticamente para contener como máximo 1024 unidades.

::

    var bytes = 133790307
    var size = String.humanize_size(bytes)
    print(size) # imprime "127.5 MiB"

----

.. _class_String_method_indent:

- :ref:`String<class_String>` **indent** **(** :ref:`String<class_String>` prefix **)**

Returns a copy of the string with lines indented with ``prefix``.

For example, the string can be indented with two tabs using ``"\t\t"``, or four spaces using ``"    "``. The prefix can be any string so it can also be used to comment out strings with e.g. ``"# "``. See also :ref:`dedent<class_String_method_dedent>` to remove indentation.

\ **Note:** Empty lines are kept empty.

----

.. _class_String_method_insert:

- :ref:`String<class_String>` **insert** **(** :ref:`int<class_int>` position, :ref:`String<class_String>` what **)**

Devuelve una copia de la string con la substring ``what`` insertada en la posición dada.

----

.. _class_String_method_is_abs_path:

- :ref:`bool<class_bool>` **is_abs_path** **(** **)**

Si la string es una ruta a un archivo o directorio, devuelve ``true`` si la ruta es absoluta.

----

.. _class_String_method_is_rel_path:

- :ref:`bool<class_bool>` **is_rel_path** **(** **)**

Si la string es una ruta a un archivo o directorio, devuelve ``true`` si la ruta es relativa.

----

.. _class_String_method_is_subsequence_of:

- :ref:`bool<class_bool>` **is_subsequence_of** **(** :ref:`String<class_String>` text **)**

Devuelve ``true`` si esta string es una subsecuente de la string dada.

----

.. _class_String_method_is_subsequence_ofi:

- :ref:`bool<class_bool>` **is_subsequence_ofi** **(** :ref:`String<class_String>` text **)**

Devuelve ``true`` si esta string es una subsecuente de la string dada, sin considerar el caso.

----

.. _class_String_method_is_valid_filename:

- :ref:`bool<class_bool>` **is_valid_filename** **(** **)**

Devuelve ``true`` si esta string está libre de caracteres que no están permitidos en los nombres de los archivos, que son:

\ ``: / \ ? * " | % < >``

----

.. _class_String_method_is_valid_float:

- :ref:`bool<class_bool>` **is_valid_float** **(** **)**

Devuelve ``true`` si esta string contiene un real válido.

----

.. _class_String_method_is_valid_hex_number:

- :ref:`bool<class_bool>` **is_valid_hex_number** **(** :ref:`bool<class_bool>` with_prefix=false **)**

Devuelve ``true`` si esta string contiene un número hexadecimal válido. Si ``with_prefix`` es ``true``, entonces la validez del número hexadecimal está determinada por el prefijo ``0x``, por ejemplo: ``0xDEADC0DE``.

----

.. _class_String_method_is_valid_html_color:

- :ref:`bool<class_bool>` **is_valid_html_color** **(** **)**

Devuelve ``true`` si esta cadena contiene un color válido en notación HTML hexadecimal. Otras notaciones HTML como colores con nombre o colores ``hsl()`` no se consideran válidas por este método y devolverán ``false``.

----

.. _class_String_method_is_valid_identifier:

- :ref:`bool<class_bool>` **is_valid_identifier** **(** **)**

Devuelve ``true`` si esta string es un identificador válido. Un identificador válido sólo puede contener letras, dígitos y guiones bajos (``_``) y el primer carácter no puede ser un dígito.

----

.. _class_String_method_is_valid_integer:

- :ref:`bool<class_bool>` **is_valid_integer** **(** **)**

Devuelve ``true`` si esta string contiene un entero válido.

----

.. _class_String_method_is_valid_ip_address:

- :ref:`bool<class_bool>` **is_valid_ip_address** **(** **)**

Returns ``true`` if this string contains only a well-formatted IPv4 or IPv6 address. This method considers `reserved IP addresses <https://en.wikipedia.org/wiki/Reserved_IP_addresses>`__ such as ``0.0.0.0`` as valid.

----

.. _class_String_method_json_escape:

- :ref:`String<class_String>` **json_escape** **(** **)**

Devuelve una copia de la string con caracteres especiales escapados usando el estándar JSON.

----

.. _class_String_method_left:

- :ref:`String<class_String>` **left** **(** :ref:`int<class_int>` position **)**

Devuelve un número de caracteres de la izquierda de la string.

----

.. _class_String_method_length:

- :ref:`int<class_int>` **length** **(** **)**

Devuelve la cantidad de caracteres de la string.

----

.. _class_String_method_lstrip:

- :ref:`String<class_String>` **lstrip** **(** :ref:`String<class_String>` chars **)**

Returns a copy of the string with characters removed from the left. The ``chars`` argument is a string specifying the set of characters to be removed.

\ **Note:** The ``chars`` is not a prefix. See :ref:`trim_prefix<class_String_method_trim_prefix>` method that will remove a single prefix string rather than a set of characters.

----

.. _class_String_method_match:

- :ref:`bool<class_bool>` **match** **(** :ref:`String<class_String>` expr **)**

Hace una comparación simple con expresión que distingue entre mayúsculas y minúsculas, en la que ``"*"`` coincide con cero o más caracteres arbitrarios y ``"?"`` coincide con cualquier carácter individual excepto con un punto (``"."``).

----

.. _class_String_method_matchn:

- :ref:`bool<class_bool>` **matchn** **(** :ref:`String<class_String>` expr **)**

Hace una simple comparación expresión insensible a las mayúsculas y minúsculas, en la que ``"*"`` coincide con cero o más caracteres arbitrarios y ``"?"`` coincide con cualquier carácter individual excepto con un punto (``"."``).

----

.. _class_String_method_md5_buffer:

- :ref:`PoolByteArray<class_PoolByteArray>` **md5_buffer** **(** **)**

Devuelve el hash MD5 de la string como un conjunto de bytes.

----

.. _class_String_method_md5_text:

- :ref:`String<class_String>` **md5_text** **(** **)**

Devuelve el hash MD5 de la string como una string.

----

.. _class_String_method_naturalnocasecmp_to:

- :ref:`int<class_int>` **naturalnocasecmp_to** **(** :ref:`String<class_String>` to **)**

Performs a case-insensitive *natural order* comparison to another string. Returns ``-1`` if less than, ``1`` if greater than, or ``0`` if equal. "less than" or "greater than" are determined by the `Unicode code points <https://en.wikipedia.org/wiki/List_of_Unicode_characters>`__ of each string, which roughly matches the alphabetical order. Internally, lowercase characters will be converted to uppercase during the comparison.

When used for sorting, natural order comparison will order suites of numbers as expected by most people. If you sort the numbers from 1 to 10 using natural order, you will get ``[1, 2, 3, ...]`` instead of ``[1, 10, 2, 3, ...]``.

\ **Behavior with different string lengths:** Returns ``1`` if the "base" string is longer than the ``to`` string or ``-1`` if the "base" string is shorter than the ``to`` string. Keep in mind this length is determined by the number of Unicode codepoints, *not* the actual visible characters.

\ **Behavior with empty strings:** Returns ``-1`` if the "base" string is empty, ``1`` if the ``to`` string is empty or ``0`` if both strings are empty.

To get a boolean result from a string comparison, use the ``==`` operator instead. See also :ref:`nocasecmp_to<class_String_method_nocasecmp_to>` and :ref:`casecmp_to<class_String_method_casecmp_to>`.

----

.. _class_String_method_nocasecmp_to:

- :ref:`int<class_int>` **nocasecmp_to** **(** :ref:`String<class_String>` to **)**

Performs a case-insensitive comparison to another string. Returns ``-1`` if less than, ``1`` if greater than, or ``0`` if equal. "less than" or "greater than" are determined by the `Unicode code points <https://en.wikipedia.org/wiki/List_of_Unicode_characters>`__ of each string, which roughly matches the alphabetical order. Internally, lowercase characters will be converted to uppercase during the comparison.

\ **Behavior with different string lengths:** Returns ``1`` if the "base" string is longer than the ``to`` string or ``-1`` if the "base" string is shorter than the ``to`` string. Keep in mind this length is determined by the number of Unicode codepoints, *not* the actual visible characters.

\ **Behavior with empty strings:** Returns ``-1`` if the "base" string is empty, ``1`` if the ``to`` string is empty or ``0`` if both strings are empty.

To get a boolean result from a string comparison, use the ``==`` operator instead. See also :ref:`casecmp_to<class_String_method_casecmp_to>`.

----

.. _class_String_method_ord_at:

- :ref:`int<class_int>` **ord_at** **(** :ref:`int<class_int>` at **)**

Devuelve el código de caracteres en la posición ``at``.

----

.. _class_String_method_pad_decimals:

- :ref:`String<class_String>` **pad_decimals** **(** :ref:`int<class_int>` digits **)**

Formatea un número para tener un número exacto de ``digits`` después del punto decimal.

----

.. _class_String_method_pad_zeros:

- :ref:`String<class_String>` **pad_zeros** **(** :ref:`int<class_int>` digits **)**

Formatea un número para tener un número exacto de ``digits`` después del punto decimal.

----

.. _class_String_method_percent_decode:

- :ref:`String<class_String>` **percent_decode** **(** **)**

Decodificar una string de porcentaje codificado. Ver :ref:`percent_encode<class_String_method_percent_encode>`.

----

.. _class_String_method_percent_encode:

- :ref:`String<class_String>` **percent_encode** **(** **)**

Percent-encodes una string. Codifica los parámetros en una URL enviadon una solicitud HTTP GET (y los cuerpos de form-urlencoded POST requests).

----

.. _class_String_method_plus_file:

- :ref:`String<class_String>` **plus_file** **(** :ref:`String<class_String>` file **)**

Si la string es un camino, esto concatena ``file`` al final del string como un sub camino. Por ejemplo, ``"this/is".plus_file("path") == "this/is/path"``.

----

.. _class_String_method_repeat:

- :ref:`String<class_String>` **repeat** **(** :ref:`int<class_int>` count **)**

Devuelve la string original repetida varias veces. El número de repeticiones viene dado por el argumento.

----

.. _class_String_method_replace:

- :ref:`String<class_String>` **replace** **(** :ref:`String<class_String>` what, :ref:`String<class_String>` forwhat **)**

Reemplaza las ocurrencias de una substring que distingue entre mayúsculas y minúsculas con la dada dentro de la string.

----

.. _class_String_method_replacen:

- :ref:`String<class_String>` **replacen** **(** :ref:`String<class_String>` what, :ref:`String<class_String>` forwhat **)**

Reemplaza las ocurrencias de una substring insensible a las mayúsculas y minúsculas con la dada dentro de la string.

----

.. _class_String_method_rfind:

- :ref:`int<class_int>` **rfind** **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=-1 **)**

Performs a case-sensitive search for a substring, but starts from the end of the string instead of the beginning.

----

.. _class_String_method_rfindn:

- :ref:`int<class_int>` **rfindn** **(** :ref:`String<class_String>` what, :ref:`int<class_int>` from=-1 **)**

Performs a case-insensitive search for a substring, but starts from the end of the string instead of the beginning.

----

.. _class_String_method_right:

- :ref:`String<class_String>` **right** **(** :ref:`int<class_int>` position **)**

Devuelve el lado derecho de la string desde una posición determinada.

----

.. _class_String_method_rsplit:

- :ref:`PoolStringArray<class_PoolStringArray>` **rsplit** **(** :ref:`String<class_String>` delimiter, :ref:`bool<class_bool>` allow_empty=true, :ref:`int<class_int>` maxsplit=0 **)**

Divide la string por un string de ``delimiter`` y devuelve un array de substrings, empezando por la derecha.

Las divisiones en el array devuelto se ordenan en el mismo orden que la string original, de izquierda a derecha.

Si se especifica ``maxsplit``, define el número de divisiones a realizar desde la derecha hasta ``maxsplit``. El valor por defecto de 0 significa que todos los elementos se dividen, dando así el mismo resultado que :ref:`split<class_String_method_split>`.

Ejemplo:

::

    var some_string = "One,Two,Three,Four"
    var some_array = some_string.rsplit(",", true, 1)
    print(some_array.size()) # Imprime 2
    print(some_array[0]) # Imprime "Cuatro"
    print(some_array[1]) # Imprime "Three,Two,One"

----

.. _class_String_method_rstrip:

- :ref:`String<class_String>` **rstrip** **(** :ref:`String<class_String>` chars **)**

Returns a copy of the string with characters removed from the right. The ``chars`` argument is a string specifying the set of characters to be removed.

\ **Note:** The ``chars`` is not a suffix. See :ref:`trim_suffix<class_String_method_trim_suffix>` method that will remove a single suffix string rather than a set of characters.

----

.. _class_String_method_sha1_buffer:

- :ref:`PoolByteArray<class_PoolByteArray>` **sha1_buffer** **(** **)**

Devuelve el hash SHA-1 de la string como un conjunto de bytes.

----

.. _class_String_method_sha1_text:

- :ref:`String<class_String>` **sha1_text** **(** **)**

Devuelve el hash del SHA-1 de la string como una string.

----

.. _class_String_method_sha256_buffer:

- :ref:`PoolByteArray<class_PoolByteArray>` **sha256_buffer** **(** **)**

Devuelve el hash SHA-256 de la string como un array de bytes.

----

.. _class_String_method_sha256_text:

- :ref:`String<class_String>` **sha256_text** **(** **)**

Devuelve el hash SHA-256 de la string como una string.

----

.. _class_String_method_similarity:

- :ref:`float<class_float>` **similarity** **(** :ref:`String<class_String>` text **)**

Devuelve el índice de similitud del texto comparado con esta string. 1 significa totalmente similar y 0 significa totalmente diferente.

----

.. _class_String_method_simplify_path:

- :ref:`String<class_String>` **simplify_path** **(** **)**

Returns a simplified canonical path.

----

.. _class_String_method_split:

- :ref:`PoolStringArray<class_PoolStringArray>` **split** **(** :ref:`String<class_String>` delimiter, :ref:`bool<class_bool>` allow_empty=true, :ref:`int<class_int>` maxsplit=0 **)**

Splits the string by a ``delimiter`` string and returns an array of the substrings. The ``delimiter`` can be of any length.

If ``maxsplit`` is specified, it defines the number of splits to do from the left up to ``maxsplit``. The default value of ``0`` means that all items are split.

If you need only one element from the array at a specific index, :ref:`get_slice<class_String_method_get_slice>` is a more performant option.

Example:

::

    var some_string = "One,Two,Three,Four"
    var some_array = some_string.split(",", true, 1)
    print(some_array.size()) # Prints 2
    print(some_array[0]) # Prints "One"
    print(some_array[1]) # Prints "Two,Three,Four"

If you need to split strings with more complex rules, use the :ref:`RegEx<class_RegEx>` class instead.

----

.. _class_String_method_split_floats:

- :ref:`PoolRealArray<class_PoolRealArray>` **split_floats** **(** :ref:`String<class_String>` delimiter, :ref:`bool<class_bool>` allow_empty=true **)**

Divide la string en reales usando una string delimitadora y devuelve un array de las substrings..

Por ejemplo, ``"1,2.5,3"`` devolverá ``[1,2.5,3]`` si se divide por ``","``.

----

.. _class_String_method_strip_edges:

- :ref:`String<class_String>` **strip_edges** **(** :ref:`bool<class_bool>` left=true, :ref:`bool<class_bool>` right=true **)**

Devuelve una copia de la string despojada de cualquier carácter no imprimible (incluyendo tabulaciones, espacios y saltos de línea) al principio y al final. Los argumentos opcionales se utilizan para conmutar la eliminación de la string en los bordes izquierdo y derecho respectivamente

----

.. _class_String_method_strip_escapes:

- :ref:`String<class_String>` **strip_escapes** **(** **)**

Returns a copy of the string stripped of any escape character. These include all non-printable control characters of the first page of the ASCII table (< 32), such as tabulation (``\t`` in C) and newline (``\n`` and ``\r``) characters, but not spaces.

----

.. _class_String_method_substr:

- :ref:`String<class_String>` **substr** **(** :ref:`int<class_int>` from, :ref:`int<class_int>` len=-1 **)**

Devuelve parte de la string de la posición ``from`` con la longitud ``len``. El argumento ``len`` es opcional y usando ``-1`` devolverá los caracteres restantes de la posición dada.

----

.. _class_String_method_to_ascii:

- :ref:`PoolByteArray<class_PoolByteArray>` **to_ascii** **(** **)**

Converts the String (which is a character array) to :ref:`PoolByteArray<class_PoolByteArray>` (which is an array of bytes). The conversion is faster compared to :ref:`to_utf8<class_String_method_to_utf8>`, as this method assumes that all the characters in the String are ASCII characters.

----

.. _class_String_method_to_float:

- :ref:`float<class_float>` **to_float** **(** **)**

Convierte una cadena que contiene un número decimal en un ``float``.

----

.. _class_String_method_to_int:

- :ref:`int<class_int>` **to_int** **(** **)**

Convierte una string que contiene un número entero en un ``int``.

----

.. _class_String_method_to_lower:

- :ref:`String<class_String>` **to_lower** **(** **)**

Devuelve la string convertida en minúsculas.

----

.. _class_String_method_to_upper:

- :ref:`String<class_String>` **to_upper** **(** **)**

Devuelve la string convertida en mayúsculas.

----

.. _class_String_method_to_utf8:

- :ref:`PoolByteArray<class_PoolByteArray>` **to_utf8** **(** **)**

Converts the String (which is an array of characters) to :ref:`PoolByteArray<class_PoolByteArray>` (which is an array of bytes). The conversion is a bit slower than :ref:`to_ascii<class_String_method_to_ascii>`, but supports all UTF-8 characters. Therefore, you should prefer this function over :ref:`to_ascii<class_String_method_to_ascii>`.

----

.. _class_String_method_to_wchar:

- :ref:`PoolByteArray<class_PoolByteArray>` **to_wchar** **(** **)**

Converts the String (which is an array of characters) to :ref:`PoolByteArray<class_PoolByteArray>` (which is an array of bytes).

----

.. _class_String_method_trim_prefix:

- :ref:`String<class_String>` **trim_prefix** **(** :ref:`String<class_String>` prefix **)**

Elimina una determinada string desde el principio si empieza con ella o deja la string sin cambios.

----

.. _class_String_method_trim_suffix:

- :ref:`String<class_String>` **trim_suffix** **(** :ref:`String<class_String>` suffix **)**

Elimina una determinada string del final si termina con ella o deja la string sin cambios.

----

.. _class_String_method_validate_node_name:

- :ref:`String<class_String>` **validate_node_name** **(** **)**

Removes any characters from the string that are prohibited in :ref:`Node<class_Node>` names (``.`` ``:`` ``@`` ``/`` ``"``).

----

.. _class_String_method_xml_escape:

- :ref:`String<class_String>` **xml_escape** **(** **)**

Devuelve una copia de la string con caracteres especiales escapados usando el estándar XML.

----

.. _class_String_method_xml_unescape:

- :ref:`String<class_String>` **xml_unescape** **(** **)**

Devuelve una copia de la string con los caracteres escapados reemplazados por sus significados según el estándar XML.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
