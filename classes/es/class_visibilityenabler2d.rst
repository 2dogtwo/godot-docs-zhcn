:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisibilityEnabler2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisibilityEnabler2D:

VisibilityEnabler2D
===================

**Inherits:** :ref:`VisibilityNotifier2D<class_VisibilityNotifier2D>` **<** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Habilita ciertos nodos sólo cuando son aproximadamente visibles.

Descripción
----------------------

El VisibilityEnabler2D desactivará :ref:`RigidBody2D<class_RigidBody2D>`, :ref:`AnimationPlayer<class_AnimationPlayer>` y otros nodos cuando no sean visibles. Sólo afectará a los nodos con el mismo nodo raíz que el VisibilityEnabler2D, y al propio nodo raíz.

Si sólo quieres recibir notificaciones, usa :ref:`VisibilityNotifier2D<class_VisibilityNotifier2D>` en su lugar.

\ **Nota:** Por razones de rendimiento, VisibilityEnabler2D utiliza una heurística aproximada con una precisión determinada por :ref:`ProjectSettings.world/2d/cell_size<class_ProjectSettings_property_world/2d/cell_size>`. Si necesita una comprobación de visibilidad precisa, utilice otro método como añadir un nodo :ref:`Area2D<class_Area2D>` como hijo de un nodo :ref:`Camera2D<class_Camera2D>`.

\ **Nota:** VisibilityEnabler2D no afectará a los nodos añadidos después de la inicialización de la escena.

Propiedades
----------------------

+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`freeze_bodies<class_VisibilityEnabler2D_property_freeze_bodies>`                   | ``true``  |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`pause_animated_sprites<class_VisibilityEnabler2D_property_pause_animated_sprites>` | ``true``  |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`pause_animations<class_VisibilityEnabler2D_property_pause_animations>`             | ``true``  |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`pause_particles<class_VisibilityEnabler2D_property_pause_particles>`               | ``true``  |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`physics_process_parent<class_VisibilityEnabler2D_property_physics_process_parent>` | ``false`` |
+-------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`process_parent<class_VisibilityEnabler2D_property_process_parent>`                 | ``false`` |
+-------------------------+------------------------------------------------------------------------------------------+-----------+

Métodos
--------------

+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_enabler_enabled<class_VisibilityEnabler2D_method_is_enabler_enabled>` **(** :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` enabler **)** |const|            |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`set_enabler<class_VisibilityEnabler2D_method_set_enabler>` **(** :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` enabler, :ref:`bool<class_bool>` enabled **)** |
+-------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumeraciones
--------------------------

.. _enum_VisibilityEnabler2D_Enabler:

.. _class_VisibilityEnabler2D_constant_ENABLER_PAUSE_ANIMATIONS:

.. _class_VisibilityEnabler2D_constant_ENABLER_FREEZE_BODIES:

.. _class_VisibilityEnabler2D_constant_ENABLER_PAUSE_PARTICLES:

.. _class_VisibilityEnabler2D_constant_ENABLER_PARENT_PROCESS:

.. _class_VisibilityEnabler2D_constant_ENABLER_PARENT_PHYSICS_PROCESS:

.. _class_VisibilityEnabler2D_constant_ENABLER_PAUSE_ANIMATED_SPRITES:

.. _class_VisibilityEnabler2D_constant_ENABLER_MAX:

enum **Enabler**:

- **ENABLER_PAUSE_ANIMATIONS** = **0** --- Este habilitador hará una pausa en los nodos :ref:`AnimationPlayer<class_AnimationPlayer>`.

- **ENABLER_FREEZE_BODIES** = **1** --- Este habilitador congelará los nodos :ref:`RigidBody2D<class_RigidBody2D>`.

- **ENABLER_PAUSE_PARTICLES** = **2** --- This enabler will stop :ref:`Particles2D<class_Particles2D>` nodes.

- **ENABLER_PARENT_PROCESS** = **3** --- Este habilitador detendrá la función _process del padre.

- **ENABLER_PARENT_PHYSICS_PROCESS** = **4** --- Este habilitador detendrá la función del _physics_process del padre.

- **ENABLER_PAUSE_ANIMATED_SPRITES** = **5** --- This enabler will stop :ref:`AnimatedSprite<class_AnimatedSprite>` nodes animations.

- **ENABLER_MAX** = **6** --- Representa el tamaño del enum :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>`.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_VisibilityEnabler2D_property_freeze_bodies:

- :ref:`bool<class_bool>` **freeze_bodies**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

Si ``true``, los nodos de :ref:`RigidBody2D<class_RigidBody2D>` estarán en pausa.

----

.. _class_VisibilityEnabler2D_property_pause_animated_sprites:

- :ref:`bool<class_bool>` **pause_animated_sprites**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

If ``true``, :ref:`AnimatedSprite<class_AnimatedSprite>` nodes will be paused.

----

.. _class_VisibilityEnabler2D_property_pause_animations:

- :ref:`bool<class_bool>` **pause_animations**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

Si ``true``, los nodos de :ref:`AnimationPlayer<class_AnimationPlayer>` estarán en pausa.

----

.. _class_VisibilityEnabler2D_property_pause_particles:

- :ref:`bool<class_bool>` **pause_particles**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

If ``true``, :ref:`Particles2D<class_Particles2D>` nodes will be paused.

----

.. _class_VisibilityEnabler2D_property_physics_process_parent:

- :ref:`bool<class_bool>` **physics_process_parent**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

Si ``true``, el :ref:`Node._physics_process<class_Node_method__physics_process>` del padre se detendrá.

----

.. _class_VisibilityEnabler2D_property_process_parent:

- :ref:`bool<class_bool>` **process_parent**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

Si ``true``, el :ref:`Node._process<class_Node_method__process>` del padre se detendrá.

Descripciones de Métodos
------------------------------------------------

.. _class_VisibilityEnabler2D_method_is_enabler_enabled:

- :ref:`bool<class_bool>` **is_enabler_enabled** **(** :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` enabler **)** |const|

Devuelve si el habilitador identificado por la constante :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` dada está activo.

----

.. _class_VisibilityEnabler2D_method_set_enabler:

- void **set_enabler** **(** :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` enabler, :ref:`bool<class_bool>` enabled **)**

Establece el estado activo del activador identificado por una constante :ref:`Enabler<enum_VisibilityEnabler2D_Enabler>` dada.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
