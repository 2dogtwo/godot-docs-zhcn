:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the VisualShaderNodeCompare.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualShaderNodeCompare:

VisualShaderNodeCompare
=======================

**Inherits:** :ref:`VisualShaderNode<class_VisualShaderNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Una función de comparación para tipos comunes dentro del gráfico shader visual.

Descripción
----------------------

Compara ``a`` y ``b`` de :ref:`type<class_VisualShaderNodeCompare_property_type>` por :ref:`function<class_VisualShaderNodeCompare_property_function>`. Devuelve un escalar booleano. Se traduce a la instrucción ``if`` en código shader.

Propiedades
----------------------

+--------------------------------------------------------------------+--------------------------------------------------------------------+-------+
| :ref:`Condition<enum_VisualShaderNodeCompare_Condition>`           | :ref:`condition<class_VisualShaderNodeCompare_property_condition>` | ``0`` |
+--------------------------------------------------------------------+--------------------------------------------------------------------+-------+
| :ref:`Function<enum_VisualShaderNodeCompare_Function>`             | :ref:`function<class_VisualShaderNodeCompare_property_function>`   | ``0`` |
+--------------------------------------------------------------------+--------------------------------------------------------------------+-------+
| :ref:`ComparisonType<enum_VisualShaderNodeCompare_ComparisonType>` | :ref:`type<class_VisualShaderNodeCompare_property_type>`           | ``0`` |
+--------------------------------------------------------------------+--------------------------------------------------------------------+-------+

Enumeraciones
--------------------------

.. _enum_VisualShaderNodeCompare_ComparisonType:

.. _class_VisualShaderNodeCompare_constant_CTYPE_SCALAR:

.. _class_VisualShaderNodeCompare_constant_CTYPE_VECTOR:

.. _class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN:

.. _class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM:

enum **ComparisonType**:

- **CTYPE_SCALAR** = **0** --- Un escalar real.

- **CTYPE_VECTOR** = **1** --- Un tipo vector 3D.

- **CTYPE_BOOLEAN** = **2** --- Un tipo booleano.

- **CTYPE_TRANSFORM** = **3** --- Un tipo de transformada (``mat4``).

----

.. _enum_VisualShaderNodeCompare_Function:

.. _class_VisualShaderNodeCompare_constant_FUNC_EQUAL:

.. _class_VisualShaderNodeCompare_constant_FUNC_NOT_EQUAL:

.. _class_VisualShaderNodeCompare_constant_FUNC_GREATER_THAN:

.. _class_VisualShaderNodeCompare_constant_FUNC_GREATER_THAN_EQUAL:

.. _class_VisualShaderNodeCompare_constant_FUNC_LESS_THAN:

.. _class_VisualShaderNodeCompare_constant_FUNC_LESS_THAN_EQUAL:

enum **Function**:

- **FUNC_EQUAL** = **0** --- Comparación para la igualdad (``a == b``).

- **FUNC_NOT_EQUAL** = **1** --- Comparación de la desigualdad (``a != b``).

- **FUNC_GREATER_THAN** = **2** --- Comparación para mayores de (``a > b``). No se puede utilizar si el :ref:`type<class_VisualShaderNodeCompare_property_type>` se establece en :ref:`CTYPE_BOOLEAN<class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN>` o :ref:`CTYPE_TRANSFORM<class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM>`.

- **FUNC_GREATER_THAN_EQUAL** = **3** --- Comparación para mayor o igual (``a >= b``). No se puede utilizar si el :ref:`type<class_VisualShaderNodeCompare_property_type>` se establece en :ref:`CTYPE_BOOLEAN<class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN>` o :ref:`CTYPE_TRANSFORM<class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM>`.

- **FUNC_LESS_THAN** = **4** --- Comparación para menos de (``a < b``). No se puede utilizar si el :ref:`type<class_VisualShaderNodeCompare_property_type>` se establece en :ref:`CTYPE_BOOLEAN<class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN>` o :ref:`CTYPE_TRANSFORM<class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM>`.

- **FUNC_LESS_THAN_EQUAL** = **5** --- Comparison for less than or equal (``a < b``). Cannot be used if :ref:`type<class_VisualShaderNodeCompare_property_type>` set to :ref:`CTYPE_BOOLEAN<class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN>` or :ref:`CTYPE_TRANSFORM<class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM>`.

----

.. _enum_VisualShaderNodeCompare_Condition:

.. _class_VisualShaderNodeCompare_constant_COND_ALL:

.. _class_VisualShaderNodeCompare_constant_COND_ANY:

enum **Condition**:

- **COND_ALL** = **0** --- El resultado será cierto si todos los componentes del vector satisfacen la condición de comparación.

- **COND_ANY** = **1** --- El resultado será verdadero si cualquiera de los componentes del vector satisface la condición de comparación.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_VisualShaderNodeCompare_property_condition:

- :ref:`Condition<enum_VisualShaderNodeCompare_Condition>` **condition**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_condition(value) |
+-----------+----------------------+
| *Getter*  | get_condition()      |
+-----------+----------------------+

Condición extra que se aplica si :ref:`type<class_VisualShaderNodeCompare_property_type>` se establece en :ref:`CTYPE_VECTOR<class_VisualShaderNodeCompare_constant_CTYPE_VECTOR>`.

----

.. _class_VisualShaderNodeCompare_property_function:

- :ref:`Function<enum_VisualShaderNodeCompare_Function>` **function**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_function(value) |
+-----------+---------------------+
| *Getter*  | get_function()      |
+-----------+---------------------+

Una función de comparación. Ver :ref:`Function<enum_VisualShaderNodeCompare_Function>` para las opciones.

----

.. _class_VisualShaderNodeCompare_property_type:

- :ref:`ComparisonType<enum_VisualShaderNodeCompare_ComparisonType>` **type**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_comparison_type(value) |
+-----------+----------------------------+
| *Getter*  | get_comparison_type()      |
+-----------+----------------------------+

El tipo que se utilizará en la comparación. Véase :ref:`ComparisonType<enum_VisualShaderNodeCompare_ComparisonType>` para las opciones.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
