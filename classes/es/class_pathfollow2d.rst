:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the PathFollow2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_PathFollow2D:

PathFollow2D
============

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Una muestra de puntos para un :ref:`Path2D<class_Path2D>`.

Descripción
----------------------

Este nodo toma su padre :ref:`Path2D<class_Path2D>`, y devuelve las coordenadas de un punto dentro de él, dada una distancia del primer vértice.

Es útil para hacer que otros nodos sigan un camino, sin codificar el patrón de movimiento. Para ello, los nodos deben ser hijos de este nodo. Los nodos descendientes se moverán en consecuencia cuando se establezca un desplazamiento en este nodo.

Propiedades
----------------------

+---------------------------+---------------------------------------------------------------+----------+
| :ref:`bool<class_bool>`   | :ref:`cubic_interp<class_PathFollow2D_property_cubic_interp>` | ``true`` |
+---------------------------+---------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`h_offset<class_PathFollow2D_property_h_offset>`         | ``0.0``  |
+---------------------------+---------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`lookahead<class_PathFollow2D_property_lookahead>`       | ``4.0``  |
+---------------------------+---------------------------------------------------------------+----------+
| :ref:`bool<class_bool>`   | :ref:`loop<class_PathFollow2D_property_loop>`                 | ``true`` |
+---------------------------+---------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`offset<class_PathFollow2D_property_offset>`             | ``0.0``  |
+---------------------------+---------------------------------------------------------------+----------+
| :ref:`bool<class_bool>`   | :ref:`rotate<class_PathFollow2D_property_rotate>`             | ``true`` |
+---------------------------+---------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`unit_offset<class_PathFollow2D_property_unit_offset>`   | ``0.0``  |
+---------------------------+---------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`v_offset<class_PathFollow2D_property_v_offset>`         | ``0.0``  |
+---------------------------+---------------------------------------------------------------+----------+

Descripciones de Propiedades
--------------------------------------------------------

.. _class_PathFollow2D_property_cubic_interp:

- :ref:`bool<class_bool>` **cubic_interp**

+-----------+--------------------------------+
| *Default* | ``true``                       |
+-----------+--------------------------------+
| *Setter*  | set_cubic_interpolation(value) |
+-----------+--------------------------------+
| *Getter*  | get_cubic_interpolation()      |
+-----------+--------------------------------+

Si ``true``, la posición entre dos puntos cacheados se interpola cúbicamente, y linealmente en caso contrario.

Los puntos a lo largo de la :ref:`Curve2D<class_Curve2D>` del :ref:`Path2D<class_Path2D>` se precalculan antes de su uso, para cálculos más rápidos. El punto en el desplazamiento solicitado se calcula entonces interpolando entre dos puntos cacheados adyacentes. Esto puede presentar un problema si la curva hace giros bruscos, ya que los puntos cacheados pueden no seguir la curva lo suficientemente cerca.

Hay dos respuestas a este problema: o bien aumentar el número de puntos cacheados y aumentar el consumo de memoria, o bien hacer una interpolación cúbica entre dos puntos a costa de cálculos (ligeramente) más lentos.

----

.. _class_PathFollow2D_property_h_offset:

- :ref:`float<class_float>` **h_offset**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_h_offset(value) |
+-----------+---------------------+
| *Getter*  | get_h_offset()      |
+-----------+---------------------+

El nodo está desplazado a lo largo de la curva.

----

.. _class_PathFollow2D_property_lookahead:

- :ref:`float<class_float>` **lookahead**

+-----------+----------------------+
| *Default* | ``4.0``              |
+-----------+----------------------+
| *Setter*  | set_lookahead(value) |
+-----------+----------------------+
| *Getter*  | get_lookahead()      |
+-----------+----------------------+

Cuánto hay que mirar por delante de la curva para calcular la tangente si el nodo está rotando. Por ejemplo, miradas hacia delante más cortas llevarán a rotaciones más rápidas.

----

.. _class_PathFollow2D_property_loop:

- :ref:`bool<class_bool>` **loop**

+-----------+-----------------+
| *Default* | ``true``        |
+-----------+-----------------+
| *Setter*  | set_loop(value) |
+-----------+-----------------+
| *Getter*  | has_loop()      |
+-----------+-----------------+

Si ``true``, cualquier desplazamiento fuera de la longitud del camino se envolverá, en lugar de detenerse en los extremos. Úsalo para los caminos cíclicos.

----

.. _class_PathFollow2D_property_offset:

- :ref:`float<class_float>` **offset**

+-----------+-------------------+
| *Default* | ``0.0``           |
+-----------+-------------------+
| *Setter*  | set_offset(value) |
+-----------+-------------------+
| *Getter*  | get_offset()      |
+-----------+-------------------+

La distancia a lo largo del camino en píxeles.

----

.. _class_PathFollow2D_property_rotate:

- :ref:`bool<class_bool>` **rotate**

+-----------+-------------------+
| *Default* | ``true``          |
+-----------+-------------------+
| *Setter*  | set_rotate(value) |
+-----------+-------------------+
| *Getter*  | is_rotating()     |
+-----------+-------------------+

Si ``true``, este nodo rota para seguir el camino, haciendo que sus descendientes roten.

----

.. _class_PathFollow2D_property_unit_offset:

- :ref:`float<class_float>` **unit_offset**

+-----------+------------------------+
| *Default* | ``0.0``                |
+-----------+------------------------+
| *Setter*  | set_unit_offset(value) |
+-----------+------------------------+
| *Getter*  | get_unit_offset()      |
+-----------+------------------------+

La distancia a lo largo del camino como un número en el rango de 0,0 (para el primer vértice) a 1,0 (para el último). Esta es sólo otra forma de expresar el desplazamiento dentro del camino, ya que el desplazamiento suministrado se multiplica internamente por la longitud del camino.

----

.. _class_PathFollow2D_property_v_offset:

- :ref:`float<class_float>` **v_offset**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_v_offset(value) |
+-----------+---------------------+
| *Getter*  | get_v_offset()      |
+-----------+---------------------+

El nodo está desplazado perpendicularmente a la curva.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
