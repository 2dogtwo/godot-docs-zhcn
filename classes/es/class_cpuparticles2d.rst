:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the CPUParticles2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CPUParticles2D:

CPUParticles2D
==============

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Emisor de partículas 2D basado en la CPU.

Descripción
----------------------

CPU-based 2D particle node used to create a variety of particle systems and effects.

See also :ref:`Particles2D<class_Particles2D>`, which provides the same functionality with hardware acceleration, but may not run on older devices.

\ **Note:** Unlike :ref:`Particles2D<class_Particles2D>`, the visibility rect is generated on-the-fly and doesn't need to be configured by the user.

Tutoriales
--------------------

- :doc:`../tutorials/2d/particle_systems_2d`

Propiedades
----------------------

+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                   | :ref:`amount<class_CPUParticles2D_property_amount>`                                   | ``8``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angle<class_CPUParticles2D_property_angle>`                                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`angle_curve<class_CPUParticles2D_property_angle_curve>`                         |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angle_random<class_CPUParticles2D_property_angle_random>`                       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angular_velocity<class_CPUParticles2D_property_angular_velocity>`               | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`angular_velocity_curve<class_CPUParticles2D_property_angular_velocity_curve>`   |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`angular_velocity_random<class_CPUParticles2D_property_angular_velocity_random>` | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_offset<class_CPUParticles2D_property_anim_offset>`                         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`anim_offset_curve<class_CPUParticles2D_property_anim_offset_curve>`             |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_offset_random<class_CPUParticles2D_property_anim_offset_random>`           | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_speed<class_CPUParticles2D_property_anim_speed>`                           | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`anim_speed_curve<class_CPUParticles2D_property_anim_speed_curve>`               |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`anim_speed_random<class_CPUParticles2D_property_anim_speed_random>`             | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                               | :ref:`color<class_CPUParticles2D_property_color>`                                     | ``Color( 1, 1, 1, 1 )`` |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Gradient<class_Gradient>`                         | :ref:`color_initial_ramp<class_CPUParticles2D_property_color_initial_ramp>`           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Gradient<class_Gradient>`                         | :ref:`color_ramp<class_CPUParticles2D_property_color_ramp>`                           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`damping<class_CPUParticles2D_property_damping>`                                 | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`damping_curve<class_CPUParticles2D_property_damping_curve>`                     |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`damping_random<class_CPUParticles2D_property_damping_random>`                   | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                           | :ref:`direction<class_CPUParticles2D_property_direction>`                             | ``Vector2( 1, 0 )``     |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`DrawOrder<enum_CPUParticles2D_DrawOrder>`         | :ref:`draw_order<class_CPUParticles2D_property_draw_order>`                           | ``0``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`PoolColorArray<class_PoolColorArray>`             | :ref:`emission_colors<class_CPUParticles2D_property_emission_colors>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>`         | :ref:`emission_normals<class_CPUParticles2D_property_emission_normals>`               |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>`         | :ref:`emission_points<class_CPUParticles2D_property_emission_points>`                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                           | :ref:`emission_rect_extents<class_CPUParticles2D_property_emission_rect_extents>`     |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`EmissionShape<enum_CPUParticles2D_EmissionShape>` | :ref:`emission_shape<class_CPUParticles2D_property_emission_shape>`                   | ``0``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`emission_sphere_radius<class_CPUParticles2D_property_emission_sphere_radius>`   |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`emitting<class_CPUParticles2D_property_emitting>`                               | ``true``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`explosiveness<class_CPUParticles2D_property_explosiveness>`                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                   | :ref:`fixed_fps<class_CPUParticles2D_property_fixed_fps>`                             | ``0``                   |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`flag_align_y<class_CPUParticles2D_property_flag_align_y>`                       | ``false``               |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`fract_delta<class_CPUParticles2D_property_fract_delta>`                         | ``true``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                           | :ref:`gravity<class_CPUParticles2D_property_gravity>`                                 | ``Vector2( 0, 98 )``    |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`hue_variation<class_CPUParticles2D_property_hue_variation>`                     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`hue_variation_curve<class_CPUParticles2D_property_hue_variation_curve>`         |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`hue_variation_random<class_CPUParticles2D_property_hue_variation_random>`       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`initial_velocity<class_CPUParticles2D_property_initial_velocity>`               | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`initial_velocity_random<class_CPUParticles2D_property_initial_velocity_random>` | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`lifetime<class_CPUParticles2D_property_lifetime>`                               | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`lifetime_randomness<class_CPUParticles2D_property_lifetime_randomness>`         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`linear_accel<class_CPUParticles2D_property_linear_accel>`                       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`linear_accel_curve<class_CPUParticles2D_property_linear_accel_curve>`           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`linear_accel_random<class_CPUParticles2D_property_linear_accel_random>`         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`local_coords<class_CPUParticles2D_property_local_coords>`                       | ``true``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                           | :ref:`normalmap<class_CPUParticles2D_property_normalmap>`                             |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                 | :ref:`one_shot<class_CPUParticles2D_property_one_shot>`                               | ``false``               |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`orbit_velocity<class_CPUParticles2D_property_orbit_velocity>`                   | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`orbit_velocity_curve<class_CPUParticles2D_property_orbit_velocity_curve>`       |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`orbit_velocity_random<class_CPUParticles2D_property_orbit_velocity_random>`     | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`preprocess<class_CPUParticles2D_property_preprocess>`                           | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`radial_accel<class_CPUParticles2D_property_radial_accel>`                       | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`radial_accel_curve<class_CPUParticles2D_property_radial_accel_curve>`           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`radial_accel_random<class_CPUParticles2D_property_radial_accel_random>`         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`randomness<class_CPUParticles2D_property_randomness>`                           | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`scale_amount<class_CPUParticles2D_property_scale_amount>`                       | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`scale_amount_curve<class_CPUParticles2D_property_scale_amount_curve>`           |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`scale_amount_random<class_CPUParticles2D_property_scale_amount_random>`         | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`speed_scale<class_CPUParticles2D_property_speed_scale>`                         | ``1.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`spread<class_CPUParticles2D_property_spread>`                                   | ``45.0``                |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`tangential_accel<class_CPUParticles2D_property_tangential_accel>`               | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Curve<class_Curve>`                               | :ref:`tangential_accel_curve<class_CPUParticles2D_property_tangential_accel_curve>`   |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                               | :ref:`tangential_accel_random<class_CPUParticles2D_property_tangential_accel_random>` | ``0.0``                 |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                           | :ref:`texture<class_CPUParticles2D_property_texture>`                                 |                         |
+---------------------------------------------------------+---------------------------------------------------------------------------------------+-------------------------+

Métodos
--------------

+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`convert_from_particles<class_CPUParticles2D_method_convert_from_particles>` **(** :ref:`Node<class_Node>` particles **)**                                                       |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_param<class_CPUParticles2D_method_get_param>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|                                                     |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Curve<class_Curve>` | :ref:`get_param_curve<class_CPUParticles2D_method_get_param_curve>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|                                         |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_param_randomness<class_CPUParticles2D_method_get_param_randomness>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|                               |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`get_particle_flag<class_CPUParticles2D_method_get_particle_flag>` **(** :ref:`Flags<enum_CPUParticles2D_Flags>` flag **)** |const|                                              |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`restart<class_CPUParticles2D_method_restart>` **(** **)**                                                                                                                       |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param<class_CPUParticles2D_method_set_param>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`float<class_float>` value **)**                            |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**                |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>` **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`float<class_float>` randomness **)** |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_particle_flag<class_CPUParticles2D_method_set_particle_flag>` **(** :ref:`Flags<enum_CPUParticles2D_Flags>` flag, :ref:`bool<class_bool>` enable **)**                      |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumeraciones
--------------------------

.. _enum_CPUParticles2D_DrawOrder:

.. _class_CPUParticles2D_constant_DRAW_ORDER_INDEX:

.. _class_CPUParticles2D_constant_DRAW_ORDER_LIFETIME:

enum **DrawOrder**:

- **DRAW_ORDER_INDEX** = **0** --- Las partículas se dibujan en el orden en que se emiten.

- **DRAW_ORDER_LIFETIME** = **1** --- Las partículas se dibujan en orden según el tiempo de vida restante.

----

.. _enum_CPUParticles2D_Parameter:

.. _class_CPUParticles2D_constant_PARAM_INITIAL_LINEAR_VELOCITY:

.. _class_CPUParticles2D_constant_PARAM_ANGULAR_VELOCITY:

.. _class_CPUParticles2D_constant_PARAM_ORBIT_VELOCITY:

.. _class_CPUParticles2D_constant_PARAM_LINEAR_ACCEL:

.. _class_CPUParticles2D_constant_PARAM_RADIAL_ACCEL:

.. _class_CPUParticles2D_constant_PARAM_TANGENTIAL_ACCEL:

.. _class_CPUParticles2D_constant_PARAM_DAMPING:

.. _class_CPUParticles2D_constant_PARAM_ANGLE:

.. _class_CPUParticles2D_constant_PARAM_SCALE:

.. _class_CPUParticles2D_constant_PARAM_HUE_VARIATION:

.. _class_CPUParticles2D_constant_PARAM_ANIM_SPEED:

.. _class_CPUParticles2D_constant_PARAM_ANIM_OFFSET:

.. _class_CPUParticles2D_constant_PARAM_MAX:

enum **Parameter**:

- **PARAM_INITIAL_LINEAR_VELOCITY** = **0** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades iniciales de la velocidad.

- **PARAM_ANGULAR_VELOCITY** = **1** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de la velocidad angular.

- **PARAM_ORBIT_VELOCITY** = **2** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de la velocidad orbital.

- **PARAM_LINEAR_ACCEL** = **3** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de la aceleración lineal.

- **PARAM_RADIAL_ACCEL** = **4** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de la aceleración radial.

- **PARAM_TANGENTIAL_ACCEL** = **5** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de la aceleración tangencial.

- **PARAM_DAMPING** = **6** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de amortiguación.

- **PARAM_ANGLE** = **7** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de los ángulos.

- **PARAM_SCALE** = **8** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de la escala.

- **PARAM_HUE_VARIATION** = **9** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de la variación del tono.

- **PARAM_ANIM_SPEED** = **10** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de velocidad de la animación.

- **PARAM_ANIM_OFFSET** = **11** --- Utilízalo con :ref:`set_param<class_CPUParticles2D_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles2D_method_set_param_randomness>`, y :ref:`set_param_curve<class_CPUParticles2D_method_set_param_curve>` para establecer las propiedades de desplazamiento de la animación.

- **PARAM_MAX** = **12** --- Representa el tamaño del enum :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _enum_CPUParticles2D_Flags:

.. _class_CPUParticles2D_constant_FLAG_ALIGN_Y_TO_VELOCITY:

.. _class_CPUParticles2D_constant_FLAG_ROTATE_Y:

.. _class_CPUParticles2D_constant_FLAG_DISABLE_Z:

.. _class_CPUParticles2D_constant_FLAG_MAX:

enum **Flags**:

- **FLAG_ALIGN_Y_TO_VELOCITY** = **0** --- Utilízalo con :ref:`set_particle_flag<class_CPUParticles2D_method_set_particle_flag>` para establecer :ref:`flag_align_y<class_CPUParticles2D_property_flag_align_y>`.

- **FLAG_ROTATE_Y** = **1** --- Presente por coherencia con los nodos de partículas en 3D, no usado en 2D.

- **FLAG_DISABLE_Z** = **2** --- Presente por coherencia con los nodos de partículas en 3D, no usado en 2D.

- **FLAG_MAX** = **3** --- Representa el tamaño del enum :ref:`Flags<enum_CPUParticles2D_Flags>`.

----

.. _enum_CPUParticles2D_EmissionShape:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_POINT:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_SPHERE:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_RECTANGLE:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_POINTS:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_DIRECTED_POINTS:

.. _class_CPUParticles2D_constant_EMISSION_SHAPE_MAX:

enum **EmissionShape**:

- **EMISSION_SHAPE_POINT** = **0** --- Todas las partículas serán emitidas desde un único punto.

- **EMISSION_SHAPE_SPHERE** = **1** --- Se emitirán partículas en la superficie de una esfera aplanada en dos dimensiones.

- **EMISSION_SHAPE_RECTANGLE** = **2** --- Se emitirán partículas en el área de un rectángulo.

- **EMISSION_SHAPE_POINTS** = **3** --- Las partículas se emitirán en una posición elegida al azar entre :ref:`emission_points<class_CPUParticles2D_property_emission_points>`. El color de las partículas será modulado por :ref:`emission_colors<class_CPUParticles2D_property_emission_colors>`.

- **EMISSION_SHAPE_DIRECTED_POINTS** = **4** --- Las partículas se emitirán en una posición elegida al azar entre :ref:`emission_points<class_CPUParticles2D_property_emission_points>`. La velocidad y rotación de las partículas se fijarán en base a :ref:`emission_normals<class_CPUParticles2D_property_emission_normals>`. El color de las partículas será modulado por :ref:`emission_colors<class_CPUParticles2D_property_emission_colors>`.

- **EMISSION_SHAPE_MAX** = **5** --- Representa el tamaño del enum :ref:`EmissionShape<enum_CPUParticles2D_EmissionShape>`.

Descripciones de Propiedades
--------------------------------------------------------

.. _class_CPUParticles2D_property_amount:

- :ref:`int<class_int>` **amount**

+-----------+-------------------+
| *Default* | ``8``             |
+-----------+-------------------+
| *Setter*  | set_amount(value) |
+-----------+-------------------+
| *Getter*  | get_amount()      |
+-----------+-------------------+

The number of particles emitted in one emission cycle (corresponding to the :ref:`lifetime<class_CPUParticles2D_property_lifetime>`).

\ **Note:** Changing :ref:`amount<class_CPUParticles2D_property_amount>` will reset the particle emission, therefore removing all particles that were already emitted before changing :ref:`amount<class_CPUParticles2D_property_amount>`.

----

.. _class_CPUParticles2D_property_angle:

- :ref:`float<class_float>` **angle**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Rotación inicial aplicada a cada partícula, en grados.

----

.. _class_CPUParticles2D_property_angle_curve:

- :ref:`Curve<class_Curve>` **angle_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

La rotación de cada partícula será animada a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_angle_random:

- :ref:`float<class_float>` **angle_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Ratio de aleatoriedad de la rotación.

----

.. _class_CPUParticles2D_property_angular_velocity:

- :ref:`float<class_float>` **angular_velocity**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Initial angular velocity applied to each particle in *degrees* per second. Sets the speed of rotation of the particle.

----

.. _class_CPUParticles2D_property_angular_velocity_curve:

- :ref:`Curve<class_Curve>` **angular_velocity_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

La velocidad angular de cada partícula variará a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_angular_velocity_random:

- :ref:`float<class_float>` **angular_velocity_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Relación de aleatoriedad de la velocidad angular.

----

.. _class_CPUParticles2D_property_anim_offset:

- :ref:`float<class_float>` **anim_offset**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Desplazamiento de la animación de partículas.

----

.. _class_CPUParticles2D_property_anim_offset_curve:

- :ref:`Curve<class_Curve>` **anim_offset_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

El desplazamiento de la animación de cada partícula variará a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_anim_offset_random:

- :ref:`float<class_float>` **anim_offset_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

La animación desplaza la proporción de aleatoriedad.

----

.. _class_CPUParticles2D_property_anim_speed:

- :ref:`float<class_float>` **anim_speed**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Velocidad de animación de partículas.

----

.. _class_CPUParticles2D_property_anim_speed_curve:

- :ref:`Curve<class_Curve>` **anim_speed_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

La velocidad de animación de cada partícula variará a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_anim_speed_random:

- :ref:`float<class_float>` **anim_speed_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Ratio de aleatoriedad de la velocidad de la animación.

----

.. _class_CPUParticles2D_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_color(value)        |
+-----------+-------------------------+
| *Getter*  | get_color()             |
+-----------+-------------------------+

El color inicial de cada partícula. Si se define :ref:`texture<class_CPUParticles2D_property_texture>`, se multiplicará por este color.

----

.. _class_CPUParticles2D_property_color_initial_ramp:

- :ref:`Gradient<class_Gradient>` **color_initial_ramp**

+----------+-------------------------------+
| *Setter* | set_color_initial_ramp(value) |
+----------+-------------------------------+
| *Getter* | get_color_initial_ramp()      |
+----------+-------------------------------+

Each particle's initial color will vary along this :ref:`GradientTexture<class_GradientTexture>` (multiplied with :ref:`color<class_CPUParticles2D_property_color>`).

----

.. _class_CPUParticles2D_property_color_ramp:

- :ref:`Gradient<class_Gradient>` **color_ramp**

+----------+-----------------------+
| *Setter* | set_color_ramp(value) |
+----------+-----------------------+
| *Getter* | get_color_ramp()      |
+----------+-----------------------+

Each particle's color will vary along this :ref:`Gradient<class_Gradient>` (multiplied with :ref:`color<class_CPUParticles2D_property_color>`).

----

.. _class_CPUParticles2D_property_damping:

- :ref:`float<class_float>` **damping**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La velocidad a la que las partículas pierden velocidad.

----

.. _class_CPUParticles2D_property_damping_curve:

- :ref:`Curve<class_Curve>` **damping_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

La amortiguación variará a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_damping_random:

- :ref:`float<class_float>` **damping_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Amortiguando la proporción de aleatoriedad.

----

.. _class_CPUParticles2D_property_direction:

- :ref:`Vector2<class_Vector2>` **direction**

+-----------+----------------------+
| *Default* | ``Vector2( 1, 0 )``  |
+-----------+----------------------+
| *Setter*  | set_direction(value) |
+-----------+----------------------+
| *Getter*  | get_direction()      |
+-----------+----------------------+

Vector unitario que especifica la dirección de emisión de las partículas.

----

.. _class_CPUParticles2D_property_draw_order:

- :ref:`DrawOrder<enum_CPUParticles2D_DrawOrder>` **draw_order**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_draw_order(value) |
+-----------+-----------------------+
| *Getter*  | get_draw_order()      |
+-----------+-----------------------+

Orden de dibujo de las partículas. Utiliza los valores de :ref:`DrawOrder<enum_CPUParticles2D_DrawOrder>`.

----

.. _class_CPUParticles2D_property_emission_colors:

- :ref:`PoolColorArray<class_PoolColorArray>` **emission_colors**

+----------+----------------------------+
| *Setter* | set_emission_colors(value) |
+----------+----------------------------+
| *Getter* | get_emission_colors()      |
+----------+----------------------------+

Establece los :ref:`Color<class_Color>`\ s para modular las partículas al usar :ref:`EMISSION_SHAPE_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_POINTS>` o :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_CPUParticles2D_property_emission_normals:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **emission_normals**

+----------+-----------------------------+
| *Setter* | set_emission_normals(value) |
+----------+-----------------------------+
| *Getter* | get_emission_normals()      |
+----------+-----------------------------+

Establece la dirección en la que las partículas serán emitidas cuando se use :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_CPUParticles2D_property_emission_points:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **emission_points**

+----------+----------------------------+
| *Setter* | set_emission_points(value) |
+----------+----------------------------+
| *Getter* | get_emission_points()      |
+----------+----------------------------+

Establece las posiciones iniciales para generar partículas cuando se utiliza :ref:`EMISSION_SHAPE_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_POINTS>` o :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles2D_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

----

.. _class_CPUParticles2D_property_emission_rect_extents:

- :ref:`Vector2<class_Vector2>` **emission_rect_extents**

+----------+----------------------------------+
| *Setter* | set_emission_rect_extents(value) |
+----------+----------------------------------+
| *Getter* | get_emission_rect_extents()      |
+----------+----------------------------------+

La extensión del rectángulo si :ref:`emission_shape<class_CPUParticles2D_property_emission_shape>` se fija en :ref:`EMISSION_SHAPE_RECTANGLE<class_CPUParticles2D_constant_EMISSION_SHAPE_RECTANGLE>`.

----

.. _class_CPUParticles2D_property_emission_shape:

- :ref:`EmissionShape<enum_CPUParticles2D_EmissionShape>` **emission_shape**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_emission_shape(value) |
+-----------+---------------------------+
| *Getter*  | get_emission_shape()      |
+-----------+---------------------------+

Se emitirán partículas dentro de esta región. Ver :ref:`EmissionShape<enum_CPUParticles2D_EmissionShape>` para los posibles valores.

----

.. _class_CPUParticles2D_property_emission_sphere_radius:

- :ref:`float<class_float>` **emission_sphere_radius**

+----------+-----------------------------------+
| *Setter* | set_emission_sphere_radius(value) |
+----------+-----------------------------------+
| *Getter* | get_emission_sphere_radius()      |
+----------+-----------------------------------+

El radio de la esfera si :ref:`emission_shape<class_CPUParticles2D_property_emission_shape>` se fija en :ref:`EMISSION_SHAPE_SPHERE<class_CPUParticles2D_constant_EMISSION_SHAPE_SPHERE>`.

----

.. _class_CPUParticles2D_property_emitting:

- :ref:`bool<class_bool>` **emitting**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_emitting(value) |
+-----------+---------------------+
| *Getter*  | is_emitting()       |
+-----------+---------------------+

Si ``true``, se están emitiendo partículas.

----

.. _class_CPUParticles2D_property_explosiveness:

- :ref:`float<class_float>` **explosiveness**

+-----------+--------------------------------+
| *Default* | ``0.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_explosiveness_ratio(value) |
+-----------+--------------------------------+
| *Getter*  | get_explosiveness_ratio()      |
+-----------+--------------------------------+

La rapidez con la que se emiten las partículas en un ciclo de emisión. Si es mayor que ``0``, habrá una espacio de tiempo en las emisiones antes de que comience el siguiente ciclo.

----

.. _class_CPUParticles2D_property_fixed_fps:

- :ref:`int<class_int>` **fixed_fps**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_fixed_fps(value) |
+-----------+----------------------+
| *Getter*  | get_fixed_fps()      |
+-----------+----------------------+

La velocidad de fotogramas del sistema de partículas está fijada a un valor. Por ejemplo, cambiando el valor a 2 hará que las partículas se rendericen a 2 fotogramas por segundo. Ten en cuenta que esto no ralentiza la simulación del sistema de partículas en sí.

----

.. _class_CPUParticles2D_property_flag_align_y:

- :ref:`bool<class_bool>` **flag_align_y**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_particle_flag(value) |
+-----------+--------------------------+
| *Getter*  | get_particle_flag()      |
+-----------+--------------------------+

Alinea el eje Y de la partícula con la dirección de su velocidad.

----

.. _class_CPUParticles2D_property_fract_delta:

- :ref:`bool<class_bool>` **fract_delta**

+-----------+-----------------------------+
| *Default* | ``true``                    |
+-----------+-----------------------------+
| *Setter*  | set_fractional_delta(value) |
+-----------+-----------------------------+
| *Getter*  | get_fractional_delta()      |
+-----------+-----------------------------+

Si ``true``, resulta en un cálculo delta fraccionario que tiene un efecto de visualización de partículas más suave.

----

.. _class_CPUParticles2D_property_gravity:

- :ref:`Vector2<class_Vector2>` **gravity**

+-----------+----------------------+
| *Default* | ``Vector2( 0, 98 )`` |
+-----------+----------------------+
| *Setter*  | set_gravity(value)   |
+-----------+----------------------+
| *Getter*  | get_gravity()        |
+-----------+----------------------+

La gravedad aplicada a cada partícula.

----

.. _class_CPUParticles2D_property_hue_variation:

- :ref:`float<class_float>` **hue_variation**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Variación de tono inicial aplicada a cada partícula.

----

.. _class_CPUParticles2D_property_hue_variation_curve:

- :ref:`Curve<class_Curve>` **hue_variation_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

El tono de cada partícula variará a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_hue_variation_random:

- :ref:`float<class_float>` **hue_variation_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Relación de aleatoriedad de la variación del tono.

----

.. _class_CPUParticles2D_property_initial_velocity:

- :ref:`float<class_float>` **initial_velocity**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

La magnitud de la velocidad inicial de cada partícula. La dirección viene de :ref:`spread<class_CPUParticles2D_property_spread>` y la orientación del nodo.

----

.. _class_CPUParticles2D_property_initial_velocity_random:

- :ref:`float<class_float>` **initial_velocity_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Ratio de aleatoriedad de la velocidad inicial.

----

.. _class_CPUParticles2D_property_lifetime:

- :ref:`float<class_float>` **lifetime**

+-----------+---------------------+
| *Default* | ``1.0``             |
+-----------+---------------------+
| *Setter*  | set_lifetime(value) |
+-----------+---------------------+
| *Getter*  | get_lifetime()      |
+-----------+---------------------+

The amount of time each particle will exist (in seconds).

----

.. _class_CPUParticles2D_property_lifetime_randomness:

- :ref:`float<class_float>` **lifetime_randomness**

+-----------+--------------------------------+
| *Default* | ``0.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_lifetime_randomness(value) |
+-----------+--------------------------------+
| *Getter*  | get_lifetime_randomness()      |
+-----------+--------------------------------+

El ratio de aleatoriedad del tiempo de vida de las partículas.

----

.. _class_CPUParticles2D_property_linear_accel:

- :ref:`float<class_float>` **linear_accel**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Aceleración lineal aplicada a cada partícula en la dirección del movimiento.

----

.. _class_CPUParticles2D_property_linear_accel_curve:

- :ref:`Curve<class_Curve>` **linear_accel_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

La aceleración lineal de cada partícula variará a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_linear_accel_random:

- :ref:`float<class_float>` **linear_accel_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Ratio de aleatoriedad de aceleración lineal.

----

.. _class_CPUParticles2D_property_local_coords:

- :ref:`bool<class_bool>` **local_coords**

+-----------+----------------------------------+
| *Default* | ``true``                         |
+-----------+----------------------------------+
| *Setter*  | set_use_local_coordinates(value) |
+-----------+----------------------------------+
| *Getter*  | get_use_local_coordinates()      |
+-----------+----------------------------------+

Si ``true``, las partículas usan el espacio de coordenadas del nodo padre. Si ``false``, usan las coordenadas globales.

----

.. _class_CPUParticles2D_property_normalmap:

- :ref:`Texture<class_Texture>` **normalmap**

+----------+----------------------+
| *Setter* | set_normalmap(value) |
+----------+----------------------+
| *Getter* | get_normalmap()      |
+----------+----------------------+

Mapa normal para ser usado por la propiedad :ref:`texture<class_CPUParticles2D_property_texture>`.

\ **Nota:** Godot espera que el mapa normal utilice las coordenadas X+, Y-, y Z+. Ver `esta página <http://wiki.polycount.com/wiki/Normal_Map_Technical_Details#Common_Swizzle_Coordinates>`__ para una comparación de las coordenadas del mapa normal esperadas por los motores más populares.

----

.. _class_CPUParticles2D_property_one_shot:

- :ref:`bool<class_bool>` **one_shot**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_one_shot(value) |
+-----------+---------------------+
| *Getter*  | get_one_shot()      |
+-----------+---------------------+

Si ``true``, sólo se produce un ciclo de emisión. Si se establece ``true`` durante un ciclo, la emisión se detendrá al final del ciclo.

----

.. _class_CPUParticles2D_property_orbit_velocity:

- :ref:`float<class_float>` **orbit_velocity**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Velocidad orbital aplicada a cada partícula. Hace que las partículas giren alrededor de su origen. Especificada en el número de rotaciones completas alrededor del origen por segundo.

----

.. _class_CPUParticles2D_property_orbit_velocity_curve:

- :ref:`Curve<class_Curve>` **orbit_velocity_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

La velocidad orbital de cada partícula variará a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_orbit_velocity_random:

- :ref:`float<class_float>` **orbit_velocity_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Ratio de aleatoriedad de la velocidad orbital.

----

.. _class_CPUParticles2D_property_preprocess:

- :ref:`float<class_float>` **preprocess**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_pre_process_time(value) |
+-----------+-----------------------------+
| *Getter*  | get_pre_process_time()      |
+-----------+-----------------------------+

El sistema de partículas se inicia como si ya hubiera funcionado durante este número de segundos.

----

.. _class_CPUParticles2D_property_radial_accel:

- :ref:`float<class_float>` **radial_accel**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Aceleración radial aplicada a cada partícula. Hace que la partícula se acelere lejos de su origen.

----

.. _class_CPUParticles2D_property_radial_accel_curve:

- :ref:`Curve<class_Curve>` **radial_accel_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

La aceleración radial de cada partícula variará a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_radial_accel_random:

- :ref:`float<class_float>` **radial_accel_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Ratio de aleatoriedad de la aceleración radial.

----

.. _class_CPUParticles2D_property_randomness:

- :ref:`float<class_float>` **randomness**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_randomness_ratio(value) |
+-----------+-----------------------------+
| *Getter*  | get_randomness_ratio()      |
+-----------+-----------------------------+

Proporción de aleatoriedad de la vida útil de las emisiones.

----

.. _class_CPUParticles2D_property_scale_amount:

- :ref:`float<class_float>` **scale_amount**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Escala inicial aplicada a cada partícula.

----

.. _class_CPUParticles2D_property_scale_amount_curve:

- :ref:`Curve<class_Curve>` **scale_amount_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

Escala inicial aplicada a cada partícula.

----

.. _class_CPUParticles2D_property_scale_amount_random:

- :ref:`float<class_float>` **scale_amount_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Ratio de la aleatoriedad de la escala.

----

.. _class_CPUParticles2D_property_speed_scale:

- :ref:`float<class_float>` **speed_scale**

+-----------+------------------------+
| *Default* | ``1.0``                |
+-----------+------------------------+
| *Setter*  | set_speed_scale(value) |
+-----------+------------------------+
| *Getter*  | get_speed_scale()      |
+-----------+------------------------+

El sistema de partículas está funcionando a una velocidad de escalada. Un valor de ``0`` puede ser usado para pausar las partículas.

----

.. _class_CPUParticles2D_property_spread:

- :ref:`float<class_float>` **spread**

+-----------+-------------------+
| *Default* | ``45.0``          |
+-----------+-------------------+
| *Setter*  | set_spread(value) |
+-----------+-------------------+
| *Getter*  | get_spread()      |
+-----------+-------------------+

La dirección inicial de cada partícula va desde ``+spread`` hasta ``-spread`` grados.

----

.. _class_CPUParticles2D_property_tangential_accel:

- :ref:`float<class_float>` **tangential_accel**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_param(value) |
+-----------+------------------+
| *Getter*  | get_param()      |
+-----------+------------------+

Aceleración tangencial aplicada a cada partícula. La aceleración tangencial es perpendicular a la velocidad de la partícula, lo que le da a las partículas un movimiento giratorio.

----

.. _class_CPUParticles2D_property_tangential_accel_curve:

- :ref:`Curve<class_Curve>` **tangential_accel_curve**

+----------+------------------------+
| *Setter* | set_param_curve(value) |
+----------+------------------------+
| *Getter* | get_param_curve()      |
+----------+------------------------+

La aceleración tangencial de cada partícula variará a lo largo de esta :ref:`Curve<class_Curve>`.

----

.. _class_CPUParticles2D_property_tangential_accel_random:

- :ref:`float<class_float>` **tangential_accel_random**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_param_randomness(value) |
+-----------+-----------------------------+
| *Getter*  | get_param_randomness()      |
+-----------+-----------------------------+

Ratio de aleatoriedad de la aceleración tangencial.

----

.. _class_CPUParticles2D_property_texture:

- :ref:`Texture<class_Texture>` **texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

La textura de las partículas. Si ``null``, las partículas serán cuadradas.

Descripciones de Métodos
------------------------------------------------

.. _class_CPUParticles2D_method_convert_from_particles:

- void **convert_from_particles** **(** :ref:`Node<class_Node>` particles **)**

Sets this node's properties to match a given :ref:`Particles2D<class_Particles2D>` node with an assigned :ref:`ParticlesMaterial<class_ParticlesMaterial>`.

----

.. _class_CPUParticles2D_method_get_param:

- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|

Devuelve el valor base del parámetro especificado por :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_get_param_curve:

- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|

Devuelve la :ref:`Curve<class_Curve>` del parámetro especificado por :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_get_param_randomness:

- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param **)** |const|

Devuelve el factor de aleatoriedad del parámetro especificado por :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_get_particle_flag:

- :ref:`bool<class_bool>` **get_particle_flag** **(** :ref:`Flags<enum_CPUParticles2D_Flags>` flag **)** |const|

Devuelve el estado habilitado del flag dado (véase :ref:`Flags<enum_CPUParticles2D_Flags>` para las opciones).

----

.. _class_CPUParticles2D_method_restart:

- void **restart** **(** **)**

Reinicia el emisor de partículas.

----

.. _class_CPUParticles2D_method_set_param:

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`float<class_float>` value **)**

Establece el valor base del parámetro especificado por :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_set_param_curve:

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**

Establece la :ref:`Curve<class_Curve>` del parámetro especificado por :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_set_param_randomness:

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles2D_Parameter>` param, :ref:`float<class_float>` randomness **)**

Establece el factor de aleatoriedad del parámetro especificado por :ref:`Parameter<enum_CPUParticles2D_Parameter>`.

----

.. _class_CPUParticles2D_method_set_particle_flag:

- void **set_particle_flag** **(** :ref:`Flags<enum_CPUParticles2D_Flags>` flag, :ref:`bool<class_bool>` enable **)**

Habilita o deshabilita la flag dada (véase :ref:`Flags<enum_CPUParticles2D_Flags>` para las opciones).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
